/*
 * BankGroupAmendDialog.java
 *
 * Created on October 20, 2001, 2:13 PM
 */

package fina2.bank;

import java.awt.GridBagConstraints;

import javax.naming.InitialContext;
import javax.rmi.PortableRemoteObject;
import javax.transaction.UserTransaction;

import fina2.Main;
import fina2.ui.UIManager;
import fina2.ui.tree.Node;

/**
 * 
 * @author Administrator
 */
public class BankGroupAmendDialog extends javax.swing.JDialog {

	private fina2.ui.UIManager ui = fina2.Main.main.ui;
	private fina2.Main main = fina2.Main.main;

	private Node node;
	private boolean isNew;
	private boolean canAmmend;
	private int result;

	public static final int UNKNOWN = 0;
	public static final int OK = 1;
	public static final int CANCEL = 2;

	public BankGroupAmendDialog(java.awt.Frame parent, boolean modal) {
		super(parent, modal);

		ui.loadIcon("fina2.cancel", "cancel.gif");
		ui.loadIcon("fina2.help", "help.gif");
		ui.loadIcon("fina2.ok", "ok.gif");

		initComponents();

	}

	public Node getNode() {
		return node;
	}

	public int show(Node node, boolean canAmend, boolean create) {
		this.node = node;
		this.isNew = create;
		this.canAmmend = canAmend;
		codeText.setEditable(canAmend);
		descriptionText.setEditable(canAmend);

		int nodeType = ((Integer) node.getType()).intValue();

		if (!create) {
			switch (nodeType) {
			case BanksConstants.NODETYPE_BANK_GROUP_NODE:
			case BanksConstants.NODETYPE_DEF_BANK_GROUP_NODE:
				BankGroup bankGroup = null;
				BankGroupPK bankGroupPK = (BankGroupPK) node.getPrimaryKey();
				try {
					InitialContext jndi = fina2.Main.getJndiContext();

					Object ref = jndi.lookup("fina2/bank/BankGroup");
					BankGroupHome home = (BankGroupHome) PortableRemoteObject.narrow(ref, BankGroupHome.class);

					bankGroup = home.findByPrimaryKey(bankGroupPK);

					String text = bankGroup.getDescription(main.getLanguageHandle());
					descriptionText.setText(text);
					codeText.setText(bankGroup.getCode());

					setTitle(ui.getString("fina2.bank.bankGroup"));
				} catch (Exception e) {
					Main.generalErrorHandler(e);
					return UNKNOWN;
				}
				break;

			case BanksConstants.NODETYPE_BANK_CRITERION_NODE:
			case BanksConstants.NODETYPE_DEF_BANK_CRITERION_NODE:
				BankCriterion bankCriterion = null;
				BankCriterionPK bankCriterionPK = (BankCriterionPK) node.getPrimaryKey();
				try {
					InitialContext jndi = fina2.Main.getJndiContext();

					Object ref = jndi.lookup("fina2/bank/BankCriterion");
					BankCriterionHome home = (BankCriterionHome) PortableRemoteObject.narrow(ref, BankCriterionHome.class);

					bankCriterion = home.findByPrimaryKey(bankCriterionPK);

					String text = bankCriterion.getDescription(main.getLanguageHandle());
					descriptionText.setText(text);
					codeText.setText(bankCriterion.getCode());

					setTitle(ui.getString("fina2.bank.criterion"));
				} catch (Exception e) {
					Main.generalErrorHandler(e);
					return UNKNOWN;
				}
				break;
			}
		} else {
			descriptionText.setText("");
			codeText.setText("");
			if (nodeType == BanksConstants.NODETYPE_ROOT) {
				setTitle(ui.getString("fina2.bank.criterion"));
			} else {
				setTitle(ui.getString("fina2.bank.bankGroup"));
			}
		}
		setLocationRelativeTo(getParent());
		result = CANCEL;
		show();
		return result;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {// GEN-BEGIN:initComponents
		jPanel1 = new javax.swing.JPanel();
		codeLabel = new javax.swing.JLabel();
		codeText = new javax.swing.JTextField();
		descriptionLabel = new javax.swing.JLabel();
		descriptionText = new javax.swing.JTextField();
		jPanel2 = new javax.swing.JPanel();
		jPanel3 = new javax.swing.JPanel();
		helpButton = new javax.swing.JButton();
		jPanel4 = new javax.swing.JPanel();
		okButton = new javax.swing.JButton();
		cancelButton = new javax.swing.JButton();

		addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent evt) {
				closeDialog(evt);
			}
		});

		jPanel1.setLayout(new java.awt.GridBagLayout());

		jPanel1.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(30, 70, 30, 70)));
		codeLabel.setText(UIManager.formatedHtmlString(ui.getString("fina2.code")));
		codeLabel.setFont(ui.getFont());
		jPanel1.add(codeLabel, UIManager.getGridBagConstraints(0, 0, 10, 10, -1, -1, -1, -1, null));

		codeText.setColumns(8);
		codeText.setFont(ui.getFont());
		jPanel1.add(codeText, UIManager.getGridBagConstraints(1, 0, -1, -1, -1, -1, GridBagConstraints.WEST, -1, null));

		descriptionLabel.setText(UIManager.formatedHtmlString(ui.getString("fina2.description")));
		descriptionLabel.setFont(ui.getFont());
		jPanel1.add(descriptionLabel, UIManager.getGridBagConstraints(0, 1, 10, 10, -1, -1, -1, -1, null));

		descriptionText.setColumns(15);
		descriptionText.setFont(ui.getFont());
		jPanel1.add(descriptionText, UIManager.getGridBagConstraints(1, 1, -1, -1, -1, -1, GridBagConstraints.WEST, -1, null));

		getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

		jPanel2.setLayout(new java.awt.BorderLayout());

		helpButton.setIcon(ui.getIcon("fina2.help"));
		helpButton.setFont(ui.getFont());
		helpButton.setText(ui.getString("fina2.help"));
		helpButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				helpButtonActionPerformed(evt);
			}
		});

		jPanel3.add(helpButton);

		jPanel2.add(jPanel3, java.awt.BorderLayout.WEST);

		okButton.setIcon(ui.getIcon("fina2.ok"));
		okButton.setFont(ui.getFont());
		okButton.setText(ui.getString("fina2.ok"));
		okButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				okButtonActionPerformed(evt);
			}
		});

		jPanel4.add(okButton);

		cancelButton.setIcon(ui.getIcon("fina2.cancel"));
		cancelButton.setFont(ui.getFont());
		cancelButton.setText(ui.getString("fina2.cancel"));
		cancelButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cancelButtonActionPerformed(evt);
			}
		});

		jPanel4.add(cancelButton);

		jPanel2.add(jPanel4, java.awt.BorderLayout.EAST);

		getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

		pack();
	}// GEN-END:initComponents

	private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-
		// FIRST
		// :
		// event_okButtonActionPerformed
		result = OK;
		if (canAmmend) {

			if (!fina2.Main.isValidCode(codeText.getText())) {
				ui.showMessageBox(null, ui.getString("fina2.title"), ui.getString("fina2.invalidCode"));
				return;
			}
			if (codeText.getText().trim().equals("")) {
				ui.showMessageBox(null, ui.getString("fina2.title"), ui.getString("fina2.bank.pleaseEnterCode"));
				return;
			}
			if (!ui.isValidLength(codeText.getText(), false)) {
				ui.showMessageBox(null, ui.getString("fina2.title"), ui.getString("fina2.web.banktype.code.length"));
				return;
			}
			if (descriptionText.getText().trim().equals("")) {
				ui.showMessageBox(null, ui.getString("fina2.title"), ui.getString("fina2.bank.pleaseEnterDescription"));
				return;
			}
			if (!ui.isValidLength(descriptionText.getText(), true)) {
				ui.showMessageBox(null, ui.getString("fina2.title"), ui.getString("fina2.web.banktype.description.length255"));
				return;
			}


			switch (((Integer) node.getType()).intValue()) {
			case BanksConstants.NODETYPE_BANK_GROUP_NODE:
				AmendBankGroup(this.node, false);
				break;

			case BanksConstants.NODETYPE_BANK_CRITERION_NODE:
			case BanksConstants.NODETYPE_DEF_BANK_CRITERION_NODE:
				if (this.isNew) {
					AmendBankGroup(this.node, true);
				} else {
					AmendBankCriterion(this.node, false);
				}
				break;

			case BanksConstants.NODETYPE_ROOT:
				AmendBankCriterion(this.node, true);
				break;
			}
		}
		dispose();
	}// GEN-LAST:event_okButtonActionPerformed

	private void AmendBankCriterion(Node node, boolean isNew) {
		try {
			InitialContext jndi = fina2.Main.getJndiContext();
			Object ref = jndi.lookup("fina2/bank/BankCriterion");
			BankCriterionHome home = (BankCriterionHome) PortableRemoteObject.narrow(ref, BankCriterionHome.class);

			BankCriterion bankCriterion;

			UserTransaction trans = main.getUserTransaction(jndi);
			trans.begin();

			if (isNew) {
				bankCriterion = home.create();
			} else {
				BankCriterionPK BankCriterionPK = (BankCriterionPK) node.getPrimaryKey();
				bankCriterion = home.findByPrimaryKey(BankCriterionPK);
			}

			try {
				bankCriterion.setCode(codeText.getText());
				bankCriterion.setDescription(main.getLanguageHandle(), descriptionText.getText());
				trans.commit();
			} catch (Exception e) {
				trans.rollback();
				Main.generalErrorHandler(e);
				if (isNew) {
					bankCriterion.remove();
				}
				return;
			}

			if (isNew) {
				this.node = new Node(bankCriterion.getPrimaryKey(), bankCriterion.getDescription(main.getLanguageHandle()), new Integer(BanksConstants.NODETYPE_BANK_CRITERION_NODE));
			}

			this.node.setLabel(bankCriterion.getCode() + " / " + bankCriterion.getDescription(main.getLanguageHandle()));
		} catch (Exception e) {
			Main.generalErrorHandler(e);
		}
	}

	private void AmendBankGroup(Node node, boolean isNew) {

		try {
			InitialContext jndi = fina2.Main.getJndiContext();
			Object ref = jndi.lookup("fina2/bank/BankGroup");
			BankGroupHome home = (BankGroupHome) PortableRemoteObject.narrow(ref, BankGroupHome.class);

			int criterionId;
			BankGroup bankGroup;

			UserTransaction trans = main.getUserTransaction(jndi);
			trans.begin();

			if (isNew) {
				bankGroup = home.create();
				BankCriterionPK bankCriterionPK = (BankCriterionPK) node.getPrimaryKey();
				criterionId = bankCriterionPK.getId();
			} else {
				BankGroupPK bankGroupPK = (BankGroupPK) node.getPrimaryKey();
				bankGroup = home.findByPrimaryKey(bankGroupPK);
				criterionId = bankGroup.getCriterionId();
			}

			try {
				bankGroup.setCode(codeText.getText());
				bankGroup.setDescription(main.getLanguageHandle(), descriptionText.getText());
				bankGroup.setCriterionId(criterionId);
				trans.commit();
			} catch (Exception e) {
				trans.rollback();
				Main.generalErrorHandler(e);
				if (isNew) {
					bankGroup.remove();
				}
				return;
			}

			if (isNew) {
				this.node = new Node(bankGroup.getPrimaryKey(), bankGroup.getDescription(main.getLanguageHandle()), new Integer(BanksConstants.NODETYPE_BANK_GROUP_NODE));
			}

			this.node.setLabel(bankGroup.getCode() + " / " + bankGroup.getDescription(main.getLanguageHandle()));
		} catch (Exception e) {
			Main.generalErrorHandler(e);
		}
	}

	private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN
		// -
		// FIRST
		// :
		// event_cancelButtonActionPerformed
		setVisible(false);
		dispose();
	}// GEN-LAST:event_cancelButtonActionPerformed

	private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN
		// -
		// FIRST
		// :
		// event_helpButtonActionPerformed
		// Add your handling code here:
	}// GEN-LAST:event_helpButtonActionPerformed

	/** Closes the dialog */
	private void closeDialog(java.awt.event.WindowEvent evt) {// GEN-FIRST:
		// event_closeDialog
		setVisible(false);
		dispose();
	}// GEN-LAST:event_closeDialog

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JPanel jPanel1;
	private javax.swing.JLabel codeLabel;
	private javax.swing.JTextField codeText;
	private javax.swing.JLabel descriptionLabel;
	private javax.swing.JTextField descriptionText;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JButton helpButton;
	private javax.swing.JPanel jPanel4;
	private javax.swing.JButton okButton;
	private javax.swing.JButton cancelButton;
	// End of variables declaration//GEN-END:variables
}
