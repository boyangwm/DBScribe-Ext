
package fina2.upload.converter;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.1 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "ConverterServiceImplService", targetNamespace = "http://converter.upload.fina2/", wsdlLocation = "http://127.0.0.1:8080/TestService/ConverterServiceImpl?wsdl")
public class ConverterServiceImplService
    extends Service
{

    private final static URL CONVERTERSERVICEIMPLSERVICE_WSDL_LOCATION;

    static {
        URL url = null;
        try {
            url = new URL("http://127.0.0.1:8080/TestService/ConverterServiceImpl?wsdl");
        } catch (MalformedURLException e) {
            e.printStackTrace();
        }
        CONVERTERSERVICEIMPLSERVICE_WSDL_LOCATION = url;
    }

    public ConverterServiceImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ConverterServiceImplService() {
        super(CONVERTERSERVICEIMPLSERVICE_WSDL_LOCATION, new QName("http://converter.upload.fina2/", "ConverterServiceImplService"));
    }

    /**
     * 
     * @return
     *     returns ConverterService
     */
    @WebEndpoint(name = "ConverterServiceImplPort")
    public ConverterService getConverterServiceImplPort() {
        return (ConverterService)super.getPort(new QName("http://converter.upload.fina2/", "ConverterServiceImplPort"), ConverterService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ConverterService
     */
    @WebEndpoint(name = "ConverterServiceImplPort")
    public ConverterService getConverterServiceImplPort(WebServiceFeature... features) {
        return (ConverterService)super.getPort(new QName("http://converter.upload.fina2/", "ConverterServiceImplPort"), ConverterService.class, features);
    }

}
