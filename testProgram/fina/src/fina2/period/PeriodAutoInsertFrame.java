/*
 * PeriodAutoInsertDialog.java
 *
 * Created on November 5, 2001, 2:57 AM
 */

package fina2.period;

import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.event.ComponentEvent;
import java.awt.event.ComponentListener;
import java.awt.event.FocusEvent;
import java.util.Collection;
import java.util.Vector;

import javax.naming.InitialContext;
import javax.rmi.PortableRemoteObject;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.SwingConstants;

import fina2.BaseFrame;
import fina2.FinaTypeException;
import fina2.Main;
import fina2.FinaTypeException.Type;
import fina2.calendar.FinaCalendar;
import fina2.i18n.LocaleUtil;
import fina2.ui.UIManager;
import fina2.ui.table.EJBTable;
import fina2.ui.table.TableRow;

/**
 * 
 * @author vasop
 */
public class PeriodAutoInsertFrame extends BaseFrame {

	private fina2.ui.UIManager ui = fina2.Main.main.ui;
	private fina2.Main main = fina2.Main.main;

	private PeriodAutoInsertConfirmDialog confirm;
	private PeriodTypeSelectDialog periodTypeSelectDialog;
	private CanceledPeriodsDialog cp;
	private FinaCalendar fcalendar;

	private boolean canAmend = false;

	private TableRow tableRow;
	private EJBTable table;
	private PeriodTypePK typePK;

	private java.util.Date fromDate;
	private int frequencyType = 0;
	private int startPeriodNumber;
	private int numberOfPeriods;

	private int daysInPeriods;
	private int daysBetweenPeriods;

	/** Creates new form PeriodAutoInsertDialog */
	public PeriodAutoInsertFrame() {
		ui.loadIcon("fina2.cancel", "cancel.gif");
		ui.loadIcon("fina2.ok", "ok.gif");

		ui.loadIcon("fina2.find", "find.gif");

		this.setFont(ui.getFont());

		initComponents();

		BaseFrame.ensureVisible(this);

		this.pack();
		Dimension d = new Dimension(this.getWidth() + 20, this.getHeight());
		this.setMinimumSize(d);
		this.setSize(d);

		Vector v = new Vector();
		v.add(ui.getString("fina2.period.monthly"));
		v.add(ui.getString("fina2.period.quarterly"));
		v.add(ui.getString("fina2.period.halfYearly"));
		v.add(ui.getString("fina2.period.yearly"));
		v.add(ui.getString("fina2.period.numberOfDays"));
		frequencyList.setModel(new DefaultComboBoxModel(v));

		typeList.setModel(new DefaultComboBoxModel(getTypeNames()));
		/*
		 * periodTypeText.setText(""); startPeriodNumberText.setText("");
		 * startDateText.setText(""); numberOfPeriodsText.setText("");
		 * daysInPeriodText.setText(""); daysBetweenPeriodsText.setText("");
		 */
		daysInPeriodText.setEditable(false);
		daysBetweenPeriodsText.setEditable(false);

		confirm = new PeriodAutoInsertConfirmDialog(main.getMainFrame(), true);
		periodTypeSelectDialog = new PeriodTypeSelectDialog(main.getMainFrame(), true);
		cp = new CanceledPeriodsDialog(main.getMainFrame(), true);
	}

	public void show() {
		if (isVisible())
			return;
		startPeriodNumberText.setText("");
		startDateText.setText("");
		numberOfPeriodsText.setText("");
		daysInPeriodText.setText("");
		daysBetweenPeriodsText.setText("");
		initTable();
		this.updateUI();
		super.show();
	}

	private void initTable() {
		try {
			fina2.security.User user = (fina2.security.User) main.getUserHandle().getEJBObject();
			canAmend = user.hasPermission("fina2.periods.amend");
			if (!canAmend) {
				ui.putConfigValue("fina2.period.PeriodAutoInsertFrame.visible", new Boolean(false));
				throw new FinaTypeException(Type.PERMISSIONS_DENIED, new String[] { "fina2.periods.amend" });
			}
		} catch (Exception e) {
			Main.generalErrorHandler(e);
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {// GEN-BEGIN:initComponents
		jPanel1 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		frequencyList = new javax.swing.JComboBox();
		typeList = new javax.swing.JComboBox();
		jLabel3 = new javax.swing.JLabel();
		startPeriodNumberText = new javax.swing.JTextField();
		jLabel4 = new javax.swing.JLabel();
		startDateText = new javax.swing.JTextField();
		jLabel5 = new javax.swing.JLabel();
		numberOfPeriodsText = new javax.swing.JTextField();
		jLabel6 = new javax.swing.JLabel();
		daysInPeriodText = new javax.swing.JTextField();
		jLabel7 = new javax.swing.JLabel();
		daysBetweenPeriodsText = new javax.swing.JTextField();
		jPanel2 = new javax.swing.JPanel();
		jPanel4 = new javax.swing.JPanel();
		jPanel3 = new javax.swing.JPanel();
		jPanel5 = new javax.swing.JPanel();
		previwButton = new javax.swing.JButton();
		separator = new javax.swing.JSeparator();

		setTitle(ui.getString("fina2.period.periodAutoInsert"));
		initBaseComponents();
		java.awt.Container contentPane = jPanel1;
		jPanel1.setLayout(new java.awt.GridBagLayout());

		jPanel1.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

		// ---- label1----
		jLabel2.setText(UIManager.formatedHtmlString(ui.getString("fina2.period.frequency")));
		jLabel2.setFont(ui.getFont());
		jLabel2.setHorizontalAlignment(SwingConstants.RIGHT);
		frequencyList.setFont(ui.getFont());
		frequencyList.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				frequencyListItemStateChanged(evt);
			}
		});
		jPanel1.add(jLabel2, new GridBagConstraints(0, 0, 1, 1, 0.0, 0.0, GridBagConstraints.CENTER, GridBagConstraints.BOTH, new Insets(0, 0, 6, 9), 0, 0));
		jPanel1.add(frequencyList, new GridBagConstraints(2, 0, 2, 1, 0.0, 0.0, GridBagConstraints.CENTER, GridBagConstraints.BOTH, new Insets(0, 0, 6, 9), 0, 0));

		// ---- label2 ----
		jLabel1.setText(UIManager.formatedHtmlString(ui.getString("fina2.period.periodType")));
		jLabel1.setFont(ui.getFont());
		jLabel1.setHorizontalAlignment(SwingConstants.RIGHT);
		typeList.setFont(ui.getFont());
		jPanel1.add(jLabel1, new GridBagConstraints(5, 0, 1, 1, 0.0, 0.0, GridBagConstraints.CENTER, GridBagConstraints.BOTH, new Insets(0, 0, 6, 9), 0, 0));
		jPanel1.add(typeList, new GridBagConstraints(6, 0, 3, 1, 0.0, 0.0, GridBagConstraints.CENTER, GridBagConstraints.BOTH, new Insets(0, 0, 6, 0), 0, 0));

		// ---- label3 ----

		jLabel3.setText(UIManager.formatedHtmlString(ui.getString("fina2.period.startPeriodNumber")));
		jLabel3.setFont(ui.getFont());
		jLabel3.setHorizontalAlignment(SwingConstants.RIGHT);
		startPeriodNumberText.setFont(ui.getFont());
		startPeriodNumberText.setPreferredSize(new java.awt.Dimension(102, 21));
		startPeriodNumberText.setMinimumSize(new java.awt.Dimension(102, 21));
		jPanel1.add(jLabel3, new GridBagConstraints(0, 2, 1, 1, 0.0, 0.0, GridBagConstraints.CENTER, GridBagConstraints.BOTH, new Insets(0, 0, 6, 9), 0, 0));
		jPanel1.add(startPeriodNumberText, new GridBagConstraints(2, 2, 1, 1,

		0.0, 0.0, GridBagConstraints.CENTER, GridBagConstraints.BOTH, new Insets(0, 0, 6, 9), 0, 0));

		// ---- label5 ----
		jLabel4.setText(UIManager.formatedHtmlString(ui.getString("fina2.period.fromDate")));
		jLabel4.setFont(ui.getFont());
		jLabel4.setHorizontalAlignment(SwingConstants.RIGHT);
		startDateText.setFont(ui.getFont());
		startDateText.setPreferredSize(new java.awt.Dimension(102, 21));
		startDateText.setMinimumSize(new java.awt.Dimension(102, 21));
		startDateText.addFocusListener(new java.awt.event.FocusListener() {
			@Override
			public void focusGained(FocusEvent e) {
				if (fcalendar != null && fcalendar.ACTIVE) {
					fcalendar.exit();
					return;
				}
				fcalendar = new FinaCalendar(startDateText);

				// previously selected date
				java.util.Date selectedDate = fcalendar.parseDate(startDateText.getText());
				fcalendar.setSelectedDate(selectedDate);
				if (!fcalendar.ACTIVE) {
					int x = startPeriodNumberText.getX() + startPeriodNumberText.getWidth();
					int y = startPeriodNumberText.getY() + startPeriodNumberText.getHeight();
					java.awt.Component comp = startPeriodNumberText.getParent();
					while (comp != null) {
						x += comp.getX();
						y += comp.getY();
						comp = comp.getParent();
					}
					fcalendar.start(startDateText, x + 8, y + 8);
				}
			}

			@Override
			public void focusLost(FocusEvent e) {
				// ignore
			}

		});
		jPanel1.add(jLabel4, new GridBagConstraints(5, 2, 1, 1, 0.0, 0.0, GridBagConstraints.CENTER, GridBagConstraints.BOTH, new Insets(0, 0, 6, 9), 0, 0));
		jPanel1.add(startDateText, new GridBagConstraints(6, 2, 3, 1, 0.0, 0.0, GridBagConstraints.CENTER, GridBagConstraints.BOTH, new Insets(0, 0, 6, 0), 0, 0));
		startDateText.setText("");

		// ---- label4 ----

		jLabel5.setText(UIManager.formatedHtmlString(ui.getString("fina2.period.numberOfPeriods")));
		jLabel5.setFont(ui.getFont());
		jLabel5.setHorizontalAlignment(SwingConstants.RIGHT);
		numberOfPeriodsText.setFont(ui.getFont());
		numberOfPeriodsText.setPreferredSize(new java.awt.Dimension(70, 21));
		numberOfPeriodsText.setMinimumSize(new java.awt.Dimension(70, 21));
		jPanel1.add(jLabel5, new GridBagConstraints(0, 3, 1, 1, 0.0, 0.0, GridBagConstraints.CENTER, GridBagConstraints.BOTH, new Insets(0, 0, 6, 9), 0, 0));
		jPanel1.add(numberOfPeriodsText, new GridBagConstraints(2, 3, 1, 1,

		0.0, 0.0, GridBagConstraints.CENTER, GridBagConstraints.BOTH, new Insets(0, 0, 6, 9), 0, 0));
		jPanel1.add(separator, new GridBagConstraints(0, 5, 9, 1, 0.0, 0.0, GridBagConstraints.CENTER, GridBagConstraints.BOTH, new Insets(0, 0, 6, 0), 0, 0));

		// ---- label6 ----
		jLabel7.setText(ui.getString("fina2.period.daysBetweenPeriods"));
		jLabel7.setFont(ui.getFont());
		jLabel7.setHorizontalAlignment(SwingConstants.RIGHT);
		daysBetweenPeriodsText.setFont(ui.getFont());
		daysBetweenPeriodsText.setPreferredSize(new java.awt.Dimension(70, 21));
		daysBetweenPeriodsText.setMinimumSize(new java.awt.Dimension(70, 21));
		jPanel1.add(jLabel7, new GridBagConstraints(0, 7, 1, 1, 0.0, 0.0, GridBagConstraints.CENTER, GridBagConstraints.BOTH, new Insets(0, 0, 0, 9), 0, 0));
		jPanel1.add(daysBetweenPeriodsText, new GridBagConstraints(2, 7, 1, 1, 0.0, 0.0, GridBagConstraints.CENTER, GridBagConstraints.BOTH, new Insets(0, 0, 0, 9), 0, 0));
		// ---- label7 ----
		jLabel6.setText(ui.getString("fina2.period.daysInPeriod"));
		jLabel6.setFont(ui.getFont());
		jLabel6.setHorizontalAlignment(SwingConstants.RIGHT);
		daysInPeriodText.setFont(ui.getFont());
		daysInPeriodText.setPreferredSize(new java.awt.Dimension(70, 21));
		daysInPeriodText.setMinimumSize(new java.awt.Dimension(70, 21));
		jPanel1.add(jLabel6, new GridBagConstraints(5, 7, 1, 1, 0.0, 0.0, GridBagConstraints.CENTER, GridBagConstraints.BOTH, new Insets(0, 0, 0, 9), 0, 0));
		jPanel1.add(daysInPeriodText, new GridBagConstraints(7, 7, 2, 1, 0.0, 0.0, GridBagConstraints.CENTER, GridBagConstraints.BOTH, new Insets(0, 0, 0, 9), 0, 0));

		getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

		jPanel2.setLayout(new java.awt.BorderLayout());

		jPanel4.setLayout(new java.awt.BorderLayout());

		if (ui.getHelpManager().IsHelpSystem()) {
			ui.getHelpManager().createDisplayHelpFromFocus(helpButton, "Period_Auto_Insert");
		} else {
			helpButton.setEnabled(false);
		}
		jPanel3.add(helpButton);

		jPanel4.add(jPanel3, java.awt.BorderLayout.WEST);

		previwButton.setIcon(ui.getIcon("fina2.ok"));
		previwButton.setFont(ui.getFont());
		previwButton.setText(ui.getString("fina2.preview"));
		previwButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				previwButtonActionPerformed(evt);
			}
		});

		jPanel5.add(previwButton);

		jPanel5.add(closeButton);

		jPanel4.add(jPanel5, java.awt.BorderLayout.EAST);

		jPanel2.add(jPanel4, java.awt.BorderLayout.SOUTH);

		getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

	}// GEN-END:initComponents

	private void previwButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN
		// -
		// FIRST
		// :
		// event_previwButtonActionPerformed
		typePK = (PeriodTypePK) table.getTableRow(typeList.getSelectedIndex()).getPrimaryKey();
		if (typePK == null || startDateText.getText() == null || startDateText.getText().trim().length() == 0 || startPeriodNumberText.getText() == null
				|| startPeriodNumberText.getText().trim().length() == 0 || numberOfPeriodsText.getText() == null || numberOfPeriodsText.getText().trim().length() == 0) {
			ui.showMessageBox(null, ui.getString("fina2.period.incompletFields"));
			return;
		}

		if (frequencyType == 4
				&& (daysInPeriodText.getText() == null || daysInPeriodText.getText().trim().length() == 0 || daysBetweenPeriodsText.getText() == null || daysBetweenPeriodsText.getText().trim()
						.length() == 0)) {
			ui.showMessageBox(null, ui.getString("fina2.period.incompletFields"));
			return;
		}

		try {
			fromDate = LocaleUtil.string2date(main.getLanguageHandle(), startDateText.getText());
			startPeriodNumber = Integer.parseInt(startPeriodNumberText.getText());
			numberOfPeriods = Integer.parseInt(numberOfPeriodsText.getText());

			if (startPeriodNumber <= 0) {
				ui.showMessageBox(null, ui.getString("fina2.period.incorrectStartPeriod"));
				return;
			}

			if (numberOfPeriods <= 0) {
				ui.showMessageBox(null, ui.getString("fina2.period.incorrectNumberOfPeriod"));
				return;
			}

			Collection canceledRows = null;
			if (frequencyType == 4) {
				daysInPeriods = Integer.parseInt(daysInPeriodText.getText());
				daysBetweenPeriods = Integer.parseInt(daysBetweenPeriodsText.getText());
				if (typePK != null) {
					confirm.show(typePK, typeList.getSelectedItem().toString(), frequencyType, fromDate, startPeriodNumber, numberOfPeriods, daysInPeriods, daysBetweenPeriods);
					canceledRows = confirm.getCanceledRows();
					int outPeriod = numberOfPeriods - confirm.getRowCount();
					if (confirm.isInsert() && (canceledRows != null || outPeriod > 0))
						if (canceledRows == null)
							canceledRows = new Vector();
					cp.show(canceledRows, confirm.getRowCount(), outPeriod);
				}
			} else {
				if (typePK != null) {
					confirm.show(typePK, typeList.getSelectedItem().toString(), frequencyType, fromDate, startPeriodNumber, numberOfPeriods);
					canceledRows = confirm.getCanceledRows();
					int outPeriod = numberOfPeriods - confirm.getRowCount();
					if (confirm.isInsert() && (canceledRows != null || outPeriod > 0))
						cp.show(canceledRows, confirm.getRowCount(), outPeriod);
				}
			}
		} catch (Exception e) {
			Main.generalErrorHandler(e);
		}
	}// GEN-LAST:event_previwButtonActionPerformed

	/**
	 * @author Davit Beradze
	 * @return Vector with Period Session Type names
	 */
	private Vector getTypeNames() {
		Vector typeNames = new Vector();
		try {
			InitialContext jndi = fina2.Main.getJndiContext();
			Object ref = jndi.lookup("fina2/period/PeriodSession");
			PeriodSessionHome home = (PeriodSessionHome) PortableRemoteObject.narrow(ref, PeriodSessionHome.class);

			PeriodSession session = home.create();
			table = new EJBTable();

			table.initTable(typeNames, session.getPeriodTypeRows(main.getUserHandle(), main.getLanguageHandle()));
			if (table.getRowCount() > 1)
				tableRow = table.getTableRow(1);
			else
				tableRow = table.getTableRow(0);
			for (int i = 0; i < table.getRowCount(); i++) {
				TableRow row = table.getTableRow(i);
				typeNames.add(row.getValue(1));
			}

		} catch (Exception e) {
			Main.generalErrorHandler(e);
		}
		return typeNames;
	}

	protected void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {
		formComponentHidden(null);
		if (fcalendar != null)
			fcalendar.exit();
		dispose();
	}

	private void frequencyListItemStateChanged(java.awt.event.ItemEvent evt) {// GEN
		// -
		// FIRST
		// :
		// event_frequencyListItemStateChanged
		frequencyType = frequencyList.getSelectedIndex();
		if (frequencyType == 4) {
			daysInPeriodText.setEditable(true);
			daysBetweenPeriodsText.setEditable(true);
		} else {
			daysInPeriodText.setEditable(false);
			daysBetweenPeriodsText.setEditable(false);
		}
	}// GEN-LAST:event_frequencyListItemStateChanged

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JPanel jPanel1;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JComboBox frequencyList;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JTextField startPeriodNumberText;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JTextField startDateText;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JTextField numberOfPeriodsText;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JTextField daysInPeriodText;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JTextField daysBetweenPeriodsText;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel4;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JPanel jPanel5;
	private javax.swing.JButton previwButton;
	private javax.swing.JComboBox typeList;
	private javax.swing.JSeparator separator;
	// End of variables declaration//GEN-END:variables
}
