<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\UMAS\src\com\umas\code\Email.java" pos:tabs="8"><package pos:line="1" pos:column="1">package <name><name pos:line="1" pos:column="9">com</name><op:operator pos:line="1" pos:column="12">.</op:operator><name pos:line="1" pos:column="13">umas</name><op:operator pos:line="1" pos:column="17">.</op:operator><name pos:line="1" pos:column="18">code</name></name>;</package>


<comment type="block" format="javadoc" pos:line="4" pos:column="1">/****************@author Simant Purohit*********************************/</comment>

<import pos:line="6" pos:column="1">import <name><name pos:line="6" pos:column="8">java</name><op:operator pos:line="6" pos:column="12">.</op:operator><name pos:line="6" pos:column="13">io</name><op:operator pos:line="6" pos:column="15">.</op:operator><name pos:line="6" pos:column="16">UnsupportedEncodingException</name></name>;</import>
<import pos:line="7" pos:column="1">import <name><name pos:line="7" pos:column="8">java</name><op:operator pos:line="7" pos:column="12">.</op:operator><name pos:line="7" pos:column="13">util</name><op:operator pos:line="7" pos:column="17">.</op:operator><name pos:line="7" pos:column="18">Date</name></name>;</import>
<import pos:line="8" pos:column="1">import <name><name pos:line="8" pos:column="8">java</name><op:operator pos:line="8" pos:column="12">.</op:operator><name pos:line="8" pos:column="13">util</name><op:operator pos:line="8" pos:column="17">.</op:operator><name pos:line="8" pos:column="18">Properties</name></name>;</import>

<import pos:line="10" pos:column="1">import <name><name pos:line="10" pos:column="8">javax</name><op:operator pos:line="10" pos:column="13">.</op:operator><name pos:line="10" pos:column="14">activation</name><op:operator pos:line="10" pos:column="24">.</op:operator><name pos:line="10" pos:column="25">DataHandler</name></name>;</import>
<import pos:line="11" pos:column="1">import <name><name pos:line="11" pos:column="8">javax</name><op:operator pos:line="11" pos:column="13">.</op:operator><name pos:line="11" pos:column="14">activation</name><op:operator pos:line="11" pos:column="24">.</op:operator><name pos:line="11" pos:column="25">DataSource</name></name>;</import>
<import pos:line="12" pos:column="1">import <name><name pos:line="12" pos:column="8">javax</name><op:operator pos:line="12" pos:column="13">.</op:operator><name pos:line="12" pos:column="14">activation</name><op:operator pos:line="12" pos:column="24">.</op:operator><name pos:line="12" pos:column="25">FileDataSource</name></name>;</import>
<import pos:line="13" pos:column="1">import <name><name pos:line="13" pos:column="8">javax</name><op:operator pos:line="13" pos:column="13">.</op:operator><name pos:line="13" pos:column="14">mail</name><op:operator pos:line="13" pos:column="18">.</op:operator><name pos:line="13" pos:column="19">Authenticator</name></name>;</import>
<import pos:line="14" pos:column="1">import <name><name pos:line="14" pos:column="8">javax</name><op:operator pos:line="14" pos:column="13">.</op:operator><name pos:line="14" pos:column="14">mail</name><op:operator pos:line="14" pos:column="18">.</op:operator><name pos:line="14" pos:column="19">BodyPart</name></name>;</import>
<import pos:line="15" pos:column="1">import <name><name pos:line="15" pos:column="8">javax</name><op:operator pos:line="15" pos:column="13">.</op:operator><name pos:line="15" pos:column="14">mail</name><op:operator pos:line="15" pos:column="18">.</op:operator><name pos:line="15" pos:column="19">Message</name></name>;</import>
<import pos:line="16" pos:column="1">import <name><name pos:line="16" pos:column="8">javax</name><op:operator pos:line="16" pos:column="13">.</op:operator><name pos:line="16" pos:column="14">mail</name><op:operator pos:line="16" pos:column="18">.</op:operator><name pos:line="16" pos:column="19">MessagingException</name></name>;</import>
<import pos:line="17" pos:column="1">import <name><name pos:line="17" pos:column="8">javax</name><op:operator pos:line="17" pos:column="13">.</op:operator><name pos:line="17" pos:column="14">mail</name><op:operator pos:line="17" pos:column="18">.</op:operator><name pos:line="17" pos:column="19">Multipart</name></name>;</import>
<import pos:line="18" pos:column="1">import <name><name pos:line="18" pos:column="8">javax</name><op:operator pos:line="18" pos:column="13">.</op:operator><name pos:line="18" pos:column="14">mail</name><op:operator pos:line="18" pos:column="18">.</op:operator><name pos:line="18" pos:column="19">PasswordAuthentication</name></name>;</import>
<import pos:line="19" pos:column="1">import <name><name pos:line="19" pos:column="8">javax</name><op:operator pos:line="19" pos:column="13">.</op:operator><name pos:line="19" pos:column="14">mail</name><op:operator pos:line="19" pos:column="18">.</op:operator><name pos:line="19" pos:column="19">Session</name></name>;</import>
<import pos:line="20" pos:column="1">import <name><name pos:line="20" pos:column="8">javax</name><op:operator pos:line="20" pos:column="13">.</op:operator><name pos:line="20" pos:column="14">mail</name><op:operator pos:line="20" pos:column="18">.</op:operator><name pos:line="20" pos:column="19">Transport</name></name>;</import>
<import pos:line="21" pos:column="1">import <name><name pos:line="21" pos:column="8">javax</name><op:operator pos:line="21" pos:column="13">.</op:operator><name pos:line="21" pos:column="14">mail</name><op:operator pos:line="21" pos:column="18">.</op:operator><name pos:line="21" pos:column="19">internet</name><op:operator pos:line="21" pos:column="27">.</op:operator><name pos:line="21" pos:column="28">AddressException</name></name>;</import>
<import pos:line="22" pos:column="1">import <name><name pos:line="22" pos:column="8">javax</name><op:operator pos:line="22" pos:column="13">.</op:operator><name pos:line="22" pos:column="14">mail</name><op:operator pos:line="22" pos:column="18">.</op:operator><name pos:line="22" pos:column="19">internet</name><op:operator pos:line="22" pos:column="27">.</op:operator><name pos:line="22" pos:column="28">InternetAddress</name></name>;</import>
<import pos:line="23" pos:column="1">import <name><name pos:line="23" pos:column="8">javax</name><op:operator pos:line="23" pos:column="13">.</op:operator><name pos:line="23" pos:column="14">mail</name><op:operator pos:line="23" pos:column="18">.</op:operator><name pos:line="23" pos:column="19">internet</name><op:operator pos:line="23" pos:column="27">.</op:operator><name pos:line="23" pos:column="28">MimeBodyPart</name></name>;</import>
<import pos:line="24" pos:column="1">import <name><name pos:line="24" pos:column="8">javax</name><op:operator pos:line="24" pos:column="13">.</op:operator><name pos:line="24" pos:column="14">mail</name><op:operator pos:line="24" pos:column="18">.</op:operator><name pos:line="24" pos:column="19">internet</name><op:operator pos:line="24" pos:column="27">.</op:operator><name pos:line="24" pos:column="28">MimeMessage</name></name>;</import>
<import pos:line="25" pos:column="1">import <name><name pos:line="25" pos:column="8">javax</name><op:operator pos:line="25" pos:column="13">.</op:operator><name pos:line="25" pos:column="14">mail</name><op:operator pos:line="25" pos:column="18">.</op:operator><name pos:line="25" pos:column="19">internet</name><op:operator pos:line="25" pos:column="27">.</op:operator><name pos:line="25" pos:column="28">MimeMultipart</name></name>;</import>


<class><specifier pos:line="28" pos:column="1">public</specifier> class <name pos:line="28" pos:column="14">Email</name> <block pos:line="28" pos:column="20">{

	<comment type="line" pos:line="30" pos:column="9">//send email to single recipient</comment>
	<comment type="line" pos:line="31" pos:column="9">//send email to multiple recipient</comment>
	<comment type="line" pos:line="32" pos:column="9">//handle zero to multiple attachments</comment>
	<decl_stmt><decl><type><specifier pos:line="33" pos:column="9">private</specifier> <name pos:line="33" pos:column="17">Session</name></type> <name pos:line="33" pos:column="25">session</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="34" pos:column="9">private</specifier> <name pos:line="34" pos:column="17">Authenticator</name></type> <name pos:line="34" pos:column="31">authentication</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="35" pos:column="9">private</specifier> <name pos:line="35" pos:column="17">Properties</name></type> <name pos:line="35" pos:column="28">properties</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="36" pos:column="9">public</specifier> <name pos:line="36" pos:column="16">String</name></type> <name pos:line="36" pos:column="23">fromEmail</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="37" pos:column="5">public</specifier> <name pos:line="37" pos:column="12">String</name></type> <name pos:line="37" pos:column="19">password</name></decl>;</decl_stmt>
    
    <constructor><specifier pos:line="39" pos:column="5">private</specifier> <name pos:line="39" pos:column="13">Email</name><parameter_list pos:line="39" pos:column="18">(<param><decl><type><specifier pos:line="39" pos:column="19">final</specifier> <name pos:line="39" pos:column="25">String</name></type> <name pos:line="39" pos:column="32">fromEmail</name></decl></param>, <param><decl><type><specifier pos:line="39" pos:column="43">final</specifier> <name pos:line="39" pos:column="49">String</name></type> <name pos:line="39" pos:column="56">password</name></decl></param>)</parameter_list><block pos:line="39" pos:column="65">{    	
    	<comment type="line" pos:line="40" pos:column="9">//try parsing the from address</comment>
    	<decl_stmt><decl><type><annotation pos:line="41" pos:column="9">@<name pos:line="41" pos:column="10">SuppressWarnings</name><argument_list pos:line="41" pos:column="26">(<argument><expr><lit:literal type="string" pos:line="41" pos:column="27">"unused"</lit:literal></expr></argument>)</argument_list></annotation>
		<name pos:line="42" pos:column="17">InternetAddress</name><index pos:line="42" pos:column="32">[]</index></type> <name pos:line="42" pos:column="35">fromAddress</name> <init pos:line="42" pos:column="47">= <expr><call><name pos:line="42" pos:column="49">parseToEmailAddress</name><argument_list pos:line="42" pos:column="68">(<argument><expr><name pos:line="42" pos:column="69">fromEmail</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    	
    	<expr_stmt><expr><name><name pos:line="44" pos:column="9">this</name><op:operator pos:line="44" pos:column="13">.</op:operator><name pos:line="44" pos:column="14">fromEmail</name></name> <op:operator pos:line="44" pos:column="24">=</op:operator> <name pos:line="44" pos:column="26">fromEmail</name></expr>;</expr_stmt>
    	<expr_stmt><expr><name><name pos:line="45" pos:column="9">this</name><op:operator pos:line="45" pos:column="13">.</op:operator><name pos:line="45" pos:column="14">password</name></name> <op:operator pos:line="45" pos:column="23">=</op:operator> <name pos:line="45" pos:column="25">password</name></expr>;</expr_stmt>
    	
    	<expr_stmt><expr><name><name pos:line="47" pos:column="9">this</name><op:operator pos:line="47" pos:column="13">.</op:operator><name pos:line="47" pos:column="14">properties</name></name> <op:operator pos:line="47" pos:column="25">=</op:operator> <op:operator pos:line="47" pos:column="27">new</op:operator> <call><name pos:line="47" pos:column="31">Properties</name><argument_list pos:line="47" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
    	
    	<comment type="line" pos:line="49" pos:column="9">//SMTP Host</comment>
    	<expr_stmt><expr><call><name><name pos:line="50" pos:column="9">properties</name><op:operator pos:line="50" pos:column="19">.</op:operator><name pos:line="50" pos:column="20">put</name></name><argument_list pos:line="50" pos:column="23">(<argument><expr><lit:literal type="string" pos:line="50" pos:column="24">"mail.smtp.host"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="50" pos:column="42">"smtp.gmail.com"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
    	
    	<comment type="line" pos:line="52" pos:column="9">//SSL Port</comment>
    	<expr_stmt><expr><call><name><name pos:line="53" pos:column="9">properties</name><op:operator pos:line="53" pos:column="19">.</op:operator><name pos:line="53" pos:column="20">put</name></name><argument_list pos:line="53" pos:column="23">(<argument><expr><lit:literal type="string" pos:line="53" pos:column="24">"mail.smtp.socketFactory.port"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="53" pos:column="56">"465"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
    	
    	<comment type="line" pos:line="55" pos:column="9">//SSL Factory Class</comment>
    	<expr_stmt><expr><call><name><name pos:line="56" pos:column="9">properties</name><op:operator pos:line="56" pos:column="19">.</op:operator><name pos:line="56" pos:column="20">put</name></name><argument_list pos:line="56" pos:column="23">(<argument><expr><lit:literal type="string" pos:line="56" pos:column="24">"mail.smtp.socketFactory.class"</lit:literal></expr></argument>,
                <argument><expr><lit:literal type="string" pos:line="57" pos:column="17">"javax.net.ssl.SSLSocketFactory"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
    	
    	<comment type="line" pos:line="59" pos:column="9">//Enabling SMTP Authentication</comment>
    	<expr_stmt><expr><call><name><name pos:line="60" pos:column="9">properties</name><op:operator pos:line="60" pos:column="19">.</op:operator><name pos:line="60" pos:column="20">put</name></name><argument_list pos:line="60" pos:column="23">(<argument><expr><lit:literal type="string" pos:line="60" pos:column="24">"mail.smtp.auth"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="60" pos:column="42">"true"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    	
    	<comment type="line" pos:line="62" pos:column="9">//SMTP Port</comment>
    	<expr_stmt><expr><call><name><name pos:line="63" pos:column="9">properties</name><op:operator pos:line="63" pos:column="19">.</op:operator><name pos:line="63" pos:column="20">put</name></name><argument_list pos:line="63" pos:column="23">(<argument><expr><lit:literal type="string" pos:line="63" pos:column="24">"mail.smtp.port"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="63" pos:column="42">"465"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    	
    	<expr_stmt><expr><name><name pos:line="65" pos:column="9">this</name><op:operator pos:line="65" pos:column="13">.</op:operator><name pos:line="65" pos:column="14">authentication</name></name> <op:operator pos:line="65" pos:column="29">=</op:operator> <op:operator pos:line="65" pos:column="31">new</op:operator> <class><super><name pos:line="65" pos:column="35">Authenticator</name></super><argument_list pos:line="65" pos:column="48">()</argument_list> <block pos:line="65" pos:column="51">{
    		<function><type><annotation pos:line="66" pos:column="17">@<name pos:line="66" pos:column="18">Override</name></annotation>
            <specifier pos:line="67" pos:column="13">protected</specifier> <name pos:line="67" pos:column="23">PasswordAuthentication</name></type> <name pos:line="67" pos:column="46">getPasswordAuthentication</name><parameter_list pos:line="67" pos:column="71">()</parameter_list> <block pos:line="67" pos:column="74">{
                <return pos:line="68" pos:column="17">return <expr><op:operator pos:line="68" pos:column="24">new</op:operator> <call><name pos:line="68" pos:column="28">PasswordAuthentication</name><argument_list pos:line="68" pos:column="50">(<argument><expr><name pos:line="68" pos:column="51">fromEmail</name></expr></argument>, <argument><expr><name pos:line="68" pos:column="62">password</name></expr></argument>)</argument_list></call></expr>;</return>
            }</block></function>
        }</block></class></expr>;</expr_stmt>
         
       <expr_stmt><expr><name><name pos:line="72" pos:column="8">this</name><op:operator pos:line="72" pos:column="12">.</op:operator><name pos:line="72" pos:column="13">session</name></name> <op:operator pos:line="72" pos:column="21">=</op:operator> <call><name><name pos:line="72" pos:column="23">Session</name><op:operator pos:line="72" pos:column="30">.</op:operator><name pos:line="72" pos:column="31">getDefaultInstance</name></name><argument_list pos:line="72" pos:column="49">(<argument><expr><name pos:line="72" pos:column="50">properties</name></expr></argument>, <argument><expr><name pos:line="72" pos:column="62">authentication</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>
    
    <function><type><specifier pos:line="75" pos:column="5">public</specifier> <specifier pos:line="75" pos:column="12">static</specifier> <name pos:line="75" pos:column="19">Email</name></type> <name pos:line="75" pos:column="25">getInstance</name><parameter_list pos:line="75" pos:column="36">(<param><decl><type><name pos:line="75" pos:column="37">String</name></type> <name pos:line="75" pos:column="44">fromEmail</name></decl></param>, <param><decl><type><name pos:line="75" pos:column="55">String</name></type> <name pos:line="75" pos:column="62">password</name></decl></param>)</parameter_list><block pos:line="75" pos:column="71">{
    	<decl_stmt><decl><type><name pos:line="76" pos:column="9">Email</name></type> <name pos:line="76" pos:column="15">email</name> <init pos:line="76" pos:column="21">= <expr><op:operator pos:line="76" pos:column="23">new</op:operator> <call><name pos:line="76" pos:column="27">Email</name><argument_list pos:line="76" pos:column="32">(<argument><expr><name pos:line="76" pos:column="33">fromEmail</name></expr></argument>, <argument><expr><name pos:line="76" pos:column="44">password</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    	<return pos:line="77" pos:column="9">return <expr><name pos:line="77" pos:column="16">email</name></expr>;</return>
    }</block></function>
    
    <comment type="line" pos:line="80" pos:column="5">//Address parser for recipient address</comment>
    <comment type="line" pos:line="81" pos:column="5">//pass comma separated recipient email ids</comment>
    <comment type="line" pos:line="82" pos:column="5">//returns array of addresses</comment>
    <function><type><specifier pos:line="83" pos:column="5">private</specifier> <name pos:line="83" pos:column="13">InternetAddress</name><index pos:line="83" pos:column="28">[]</index></type> <name pos:line="83" pos:column="31">parseToEmailAddress</name><parameter_list pos:line="83" pos:column="50">(<param><decl><type><name pos:line="83" pos:column="51">String</name></type> <name pos:line="83" pos:column="58">toEmail</name></decl></param>)</parameter_list><block pos:line="83" pos:column="66">{
    	<decl_stmt><decl><type><name pos:line="84" pos:column="9">InternetAddress</name><index pos:line="84" pos:column="24">[]</index></type> <name pos:line="84" pos:column="27">email</name> <init pos:line="84" pos:column="33">= <expr><lit:literal type="null" pos:line="84" pos:column="35">null</lit:literal></expr></init></decl>;</decl_stmt>
    	<try pos:line="85" pos:column="9">try <block pos:line="85" pos:column="13">{
			<expr_stmt><expr><name pos:line="86" pos:column="25">email</name> <op:operator pos:line="86" pos:column="31">=</op:operator> <call><name><name pos:line="86" pos:column="33">InternetAddress</name><op:operator pos:line="86" pos:column="48">.</op:operator><name pos:line="86" pos:column="49">parse</name></name><argument_list pos:line="86" pos:column="54">(<argument><expr><name pos:line="86" pos:column="55">toEmail</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="86" pos:column="64">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block> <catch pos:line="87" pos:column="19">catch <parameter_list pos:line="87" pos:column="25">(<param><decl><type><name pos:line="87" pos:column="26">AddressException</name></type> <name pos:line="87" pos:column="43">e</name></decl></param>)</parameter_list> <block pos:line="87" pos:column="46">{
			<comment type="line" pos:line="88" pos:column="25">// TODO Auto-generated catch block</comment>
			<expr_stmt><expr><call><name><name pos:line="89" pos:column="25">e</name><op:operator pos:line="89" pos:column="26">.</op:operator><name pos:line="89" pos:column="27">printStackTrace</name></name><argument_list pos:line="89" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
		}</block></catch></try>
    	
    	<return pos:line="92" pos:column="9">return <expr><name pos:line="92" pos:column="16">email</name></expr>;</return>
    }</block></function>
	
    <function><type><specifier pos:line="95" pos:column="5">public</specifier> <name pos:line="95" pos:column="12">boolean</name></type> <name pos:line="95" pos:column="20">sendEmail</name><parameter_list pos:line="95" pos:column="29">(<param><decl><type><name pos:line="95" pos:column="30">String</name></type> <name pos:line="95" pos:column="37">toEmail</name></decl></param>, <param><decl><type><name pos:line="95" pos:column="46">String</name></type> <name pos:line="95" pos:column="53">subject</name></decl></param>, <param><decl><type><name pos:line="95" pos:column="62">String</name></type> <name pos:line="95" pos:column="69">body</name></decl></param>)</parameter_list><block pos:line="95" pos:column="74">{
        <try pos:line="96" pos:column="9">try
        <block pos:line="97" pos:column="9">{
          <decl_stmt><decl><type><name pos:line="98" pos:column="11">MimeMessage</name></type> <name pos:line="98" pos:column="23">msg</name> <init pos:line="98" pos:column="27">= <expr><op:operator pos:line="98" pos:column="29">new</op:operator> <call><name pos:line="98" pos:column="33">MimeMessage</name><argument_list pos:line="98" pos:column="44">(<argument><expr><name pos:line="98" pos:column="45">session</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
          <comment type="line" pos:line="99" pos:column="11">//set message headers</comment>
          <expr_stmt><expr><call><name><name pos:line="100" pos:column="11">msg</name><op:operator pos:line="100" pos:column="14">.</op:operator><name pos:line="100" pos:column="15">addHeader</name></name><argument_list pos:line="100" pos:column="24">(<argument><expr><lit:literal type="string" pos:line="100" pos:column="25">"Content-type"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="100" pos:column="41">"text/HTML; charset=UTF-8"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name pos:line="101" pos:column="11">msg</name><op:operator pos:line="101" pos:column="14">.</op:operator><name pos:line="101" pos:column="15">addHeader</name></name><argument_list pos:line="101" pos:column="24">(<argument><expr><lit:literal type="string" pos:line="101" pos:column="25">"format"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="101" pos:column="35">"flowed"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name pos:line="102" pos:column="11">msg</name><op:operator pos:line="102" pos:column="14">.</op:operator><name pos:line="102" pos:column="15">addHeader</name></name><argument_list pos:line="102" pos:column="24">(<argument><expr><lit:literal type="string" pos:line="102" pos:column="25">"Content-Transfer-Encoding"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="102" pos:column="54">"8bit"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
          <expr_stmt><expr><call><name><name pos:line="104" pos:column="11">msg</name><op:operator pos:line="104" pos:column="14">.</op:operator><name pos:line="104" pos:column="15">setFrom</name></name><argument_list pos:line="104" pos:column="22">(<argument><expr><op:operator pos:line="104" pos:column="23">new</op:operator> <call><name pos:line="104" pos:column="27">InternetAddress</name><argument_list pos:line="104" pos:column="42">(<argument><expr><name pos:line="104" pos:column="43">fromEmail</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="104" pos:column="54">"UMAS-EMAIL"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
          <expr_stmt><expr><call><name><name pos:line="106" pos:column="11">msg</name><op:operator pos:line="106" pos:column="14">.</op:operator><name pos:line="106" pos:column="15">setReplyTo</name></name><argument_list pos:line="106" pos:column="25">(<argument><expr><call><name><name pos:line="106" pos:column="26">InternetAddress</name><op:operator pos:line="106" pos:column="41">.</op:operator><name pos:line="106" pos:column="42">parse</name></name><argument_list pos:line="106" pos:column="47">(<argument><expr><name pos:line="106" pos:column="48">fromEmail</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="106" pos:column="59">false</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
          <expr_stmt><expr><call><name><name pos:line="108" pos:column="11">msg</name><op:operator pos:line="108" pos:column="14">.</op:operator><name pos:line="108" pos:column="15">setSubject</name></name><argument_list pos:line="108" pos:column="25">(<argument><expr><name pos:line="108" pos:column="26">subject</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="108" pos:column="35">"UTF-8"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
          <expr_stmt><expr><call><name><name pos:line="110" pos:column="11">msg</name><op:operator pos:line="110" pos:column="14">.</op:operator><name pos:line="110" pos:column="15">setText</name></name><argument_list pos:line="110" pos:column="22">(<argument><expr><name pos:line="110" pos:column="23">body</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="110" pos:column="29">"UTF-8"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
          <expr_stmt><expr><call><name><name pos:line="112" pos:column="11">msg</name><op:operator pos:line="112" pos:column="14">.</op:operator><name pos:line="112" pos:column="15">setSentDate</name></name><argument_list pos:line="112" pos:column="26">(<argument><expr><op:operator pos:line="112" pos:column="27">new</op:operator> <call><name pos:line="112" pos:column="31">Date</name><argument_list pos:line="112" pos:column="35">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
          <expr_stmt><expr><call><name><name pos:line="114" pos:column="11">msg</name><op:operator pos:line="114" pos:column="14">.</op:operator><name pos:line="114" pos:column="15">setRecipients</name></name><argument_list pos:line="114" pos:column="28">(<argument><expr><name><name pos:line="114" pos:column="29">Message</name><op:operator pos:line="114" pos:column="36">.</op:operator><name pos:line="114" pos:column="37">RecipientType</name><op:operator pos:line="114" pos:column="50">.</op:operator><name pos:line="114" pos:column="51">TO</name></name></expr></argument>, <argument><expr><call><name pos:line="114" pos:column="55">parseToEmailAddress</name><argument_list pos:line="114" pos:column="74">(<argument><expr><name pos:line="114" pos:column="75">toEmail</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name pos:line="115" pos:column="11">System</name><op:operator pos:line="115" pos:column="17">.</op:operator><name pos:line="115" pos:column="18">out</name><op:operator pos:line="115" pos:column="21">.</op:operator><name pos:line="115" pos:column="22">println</name></name><argument_list pos:line="115" pos:column="29">(<argument><expr><lit:literal type="string" pos:line="115" pos:column="30">"Sending"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><call><name><name pos:line="116" pos:column="11">Transport</name><op:operator pos:line="116" pos:column="20">.</op:operator><name pos:line="116" pos:column="21">send</name></name><argument_list pos:line="116" pos:column="25">(<argument><expr><name pos:line="116" pos:column="26">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
          <expr_stmt><expr><call><name><name pos:line="117" pos:column="11">System</name><op:operator pos:line="117" pos:column="17">.</op:operator><name pos:line="117" pos:column="18">out</name><op:operator pos:line="117" pos:column="21">.</op:operator><name pos:line="117" pos:column="22">println</name></name><argument_list pos:line="117" pos:column="29">(<argument><expr><lit:literal type="string" pos:line="117" pos:column="30">"Email Sent Successfully!!"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <return pos:line="118" pos:column="11">return <expr><lit:literal type="boolean" pos:line="118" pos:column="18">true</lit:literal></expr>;</return>
        }</block>
        <catch pos:line="120" pos:column="9">catch <parameter_list pos:line="120" pos:column="15">(<param><decl><type><name pos:line="120" pos:column="16">Exception</name></type> <name pos:line="120" pos:column="26">e</name></decl></param>)</parameter_list> <block pos:line="120" pos:column="29">{
          <expr_stmt><expr><call><name><name pos:line="121" pos:column="11">e</name><op:operator pos:line="121" pos:column="12">.</op:operator><name pos:line="121" pos:column="13">printStackTrace</name></name><argument_list pos:line="121" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
          <return pos:line="122" pos:column="11">return <expr><lit:literal type="boolean" pos:line="122" pos:column="18">false</lit:literal></expr>;</return>
        }</block></catch></try>
    }</block></function>

    <function><type><specifier pos:line="126" pos:column="5">public</specifier> <name pos:line="126" pos:column="12">boolean</name></type> <name pos:line="126" pos:column="20">sendEmailWithAttachments</name><parameter_list pos:line="126" pos:column="44">(<param><decl><type><name pos:line="126" pos:column="45">String</name></type> <name pos:line="126" pos:column="52">toEmail</name></decl></param>, <param><decl><type><name pos:line="126" pos:column="61">String</name></type> <name pos:line="126" pos:column="68">subject</name></decl></param>, <param><decl><type><name pos:line="126" pos:column="77">String</name></type> <name pos:line="126" pos:column="84">body</name></decl></param>, <param><decl><type><name><name pos:line="126" pos:column="90">String</name><index pos:line="126" pos:column="96">[]</index></name></type> <name pos:line="126" pos:column="99">attachmentLocations</name></decl></param>)</parameter_list><block pos:line="126" pos:column="119">{
    	<try pos:line="127" pos:column="9">try<block pos:line="127" pos:column="12">{
    		 <decl_stmt><decl><type><name pos:line="128" pos:column="18">MimeMessage</name></type> <name pos:line="128" pos:column="30">msg</name> <init pos:line="128" pos:column="34">= <expr><op:operator pos:line="128" pos:column="36">new</op:operator> <call><name pos:line="128" pos:column="40">MimeMessage</name><argument_list pos:line="128" pos:column="51">(<argument><expr><name pos:line="128" pos:column="52">session</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
             <comment type="line" pos:line="129" pos:column="14">//set message headers</comment>
             <expr_stmt><expr><call><name><name pos:line="130" pos:column="14">msg</name><op:operator pos:line="130" pos:column="17">.</op:operator><name pos:line="130" pos:column="18">addHeader</name></name><argument_list pos:line="130" pos:column="27">(<argument><expr><lit:literal type="string" pos:line="130" pos:column="28">"Content-type"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="130" pos:column="44">"text/HTML; charset=UTF-8"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><call><name><name pos:line="131" pos:column="14">msg</name><op:operator pos:line="131" pos:column="17">.</op:operator><name pos:line="131" pos:column="18">addHeader</name></name><argument_list pos:line="131" pos:column="27">(<argument><expr><lit:literal type="string" pos:line="131" pos:column="28">"format"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="131" pos:column="38">"flowed"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             <expr_stmt><expr><call><name><name pos:line="132" pos:column="14">msg</name><op:operator pos:line="132" pos:column="17">.</op:operator><name pos:line="132" pos:column="18">addHeader</name></name><argument_list pos:line="132" pos:column="27">(<argument><expr><lit:literal type="string" pos:line="132" pos:column="28">"Content-Transfer-Encoding"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="132" pos:column="57">"8bit"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
             <expr_stmt><expr><call><name><name pos:line="134" pos:column="14">msg</name><op:operator pos:line="134" pos:column="17">.</op:operator><name pos:line="134" pos:column="18">setFrom</name></name><argument_list pos:line="134" pos:column="25">(<argument><expr><op:operator pos:line="134" pos:column="26">new</op:operator> <call><name pos:line="134" pos:column="30">InternetAddress</name><argument_list pos:line="134" pos:column="45">(<argument><expr><name pos:line="134" pos:column="46">fromEmail</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="134" pos:column="57">"UMAS-EMAIL"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
             <expr_stmt><expr><call><name><name pos:line="136" pos:column="14">msg</name><op:operator pos:line="136" pos:column="17">.</op:operator><name pos:line="136" pos:column="18">setReplyTo</name></name><argument_list pos:line="136" pos:column="28">(<argument><expr><call><name><name pos:line="136" pos:column="29">InternetAddress</name><op:operator pos:line="136" pos:column="44">.</op:operator><name pos:line="136" pos:column="45">parse</name></name><argument_list pos:line="136" pos:column="50">(<argument><expr><name pos:line="136" pos:column="51">fromEmail</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="136" pos:column="62">false</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
             <expr_stmt><expr><call><name><name pos:line="138" pos:column="14">msg</name><op:operator pos:line="138" pos:column="17">.</op:operator><name pos:line="138" pos:column="18">setSubject</name></name><argument_list pos:line="138" pos:column="28">(<argument><expr><name pos:line="138" pos:column="29">subject</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="138" pos:column="38">"UTF-8"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
             <expr_stmt><expr><call><name><name pos:line="140" pos:column="14">msg</name><op:operator pos:line="140" pos:column="17">.</op:operator><name pos:line="140" pos:column="18">setText</name></name><argument_list pos:line="140" pos:column="25">(<argument><expr><name pos:line="140" pos:column="26">body</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="140" pos:column="32">"UTF-8"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
             <expr_stmt><expr><call><name><name pos:line="142" pos:column="14">msg</name><op:operator pos:line="142" pos:column="17">.</op:operator><name pos:line="142" pos:column="18">setSentDate</name></name><argument_list pos:line="142" pos:column="29">(<argument><expr><op:operator pos:line="142" pos:column="30">new</op:operator> <call><name pos:line="142" pos:column="34">Date</name><argument_list pos:line="142" pos:column="38">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
            <expr_stmt><expr><call><name><name pos:line="144" pos:column="13">msg</name><op:operator pos:line="144" pos:column="16">.</op:operator><name pos:line="144" pos:column="17">setRecipients</name></name><argument_list pos:line="144" pos:column="30">(<argument><expr><name><name pos:line="144" pos:column="31">Message</name><op:operator pos:line="144" pos:column="38">.</op:operator><name pos:line="144" pos:column="39">RecipientType</name><op:operator pos:line="144" pos:column="52">.</op:operator><name pos:line="144" pos:column="53">TO</name></name></expr></argument>, <argument><expr><call><name><name pos:line="144" pos:column="57">InternetAddress</name><op:operator pos:line="144" pos:column="72">.</op:operator><name pos:line="144" pos:column="73">parse</name></name><argument_list pos:line="144" pos:column="78">(<argument><expr><name pos:line="144" pos:column="79">toEmail</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="144" pos:column="88">false</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
              
            <comment type="line" pos:line="146" pos:column="13">// Create the message body part</comment>
            <decl_stmt><decl><type><name pos:line="147" pos:column="13">BodyPart</name></type> <name pos:line="147" pos:column="22">messageBodyPart</name> <init pos:line="147" pos:column="38">= <expr><op:operator pos:line="147" pos:column="40">new</op:operator> <call><name pos:line="147" pos:column="44">MimeBodyPart</name><argument_list pos:line="147" pos:column="56">()</argument_list></call></expr></init></decl>;</decl_stmt>
    
            <comment type="line" pos:line="149" pos:column="13">// Fill the message</comment>
            <expr_stmt><expr><call><name><name pos:line="150" pos:column="13">messageBodyPart</name><op:operator pos:line="150" pos:column="28">.</op:operator><name pos:line="150" pos:column="29">setText</name></name><argument_list pos:line="150" pos:column="36">(<argument><expr><name pos:line="150" pos:column="37">body</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
             
            <comment type="line" pos:line="152" pos:column="13">// Create a multipart message for attachment</comment>
            <decl_stmt><decl><type><name pos:line="153" pos:column="13">Multipart</name></type> <name pos:line="153" pos:column="23">multipart</name> <init pos:line="153" pos:column="33">= <expr><op:operator pos:line="153" pos:column="35">new</op:operator> <call><name pos:line="153" pos:column="39">MimeMultipart</name><argument_list pos:line="153" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
    
            <comment type="line" pos:line="155" pos:column="13">// Set text message part</comment>
            <expr_stmt><expr><call><name><name pos:line="156" pos:column="13">multipart</name><op:operator pos:line="156" pos:column="22">.</op:operator><name pos:line="156" pos:column="23">addBodyPart</name></name><argument_list pos:line="156" pos:column="34">(<argument><expr><name pos:line="156" pos:column="35">messageBodyPart</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
            <comment type="line" pos:line="158" pos:column="13">// Second part is attachment</comment>
            <for pos:line="159" pos:column="13">for(<init><decl><type><name pos:line="159" pos:column="17">String</name></type> <name pos:line="159" pos:column="24">fileLocation</name><range pos:line="159" pos:column="36">: <expr><name pos:line="159" pos:column="38">attachmentLocations</name></expr></range></decl></init>)<block pos:line="159" pos:column="58">{
            	<expr_stmt><expr><name pos:line="160" pos:column="17">messageBodyPart</name> <op:operator pos:line="160" pos:column="33">=</op:operator> <op:operator pos:line="160" pos:column="35">new</op:operator> <call><name pos:line="160" pos:column="39">MimeBodyPart</name><argument_list pos:line="160" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name pos:line="161" pos:column="17">DataSource</name></type> <name pos:line="161" pos:column="28">source</name> <init pos:line="161" pos:column="35">= <expr><op:operator pos:line="161" pos:column="37">new</op:operator> <call><name pos:line="161" pos:column="41">FileDataSource</name><argument_list pos:line="161" pos:column="55">(<argument><expr><name pos:line="161" pos:column="56">fileLocation</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="162" pos:column="17">messageBodyPart</name><op:operator pos:line="162" pos:column="32">.</op:operator><name pos:line="162" pos:column="33">setDataHandler</name></name><argument_list pos:line="162" pos:column="47">(<argument><expr><op:operator pos:line="162" pos:column="48">new</op:operator> <call><name pos:line="162" pos:column="52">DataHandler</name><argument_list pos:line="162" pos:column="63">(<argument><expr><name pos:line="162" pos:column="64">source</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="163" pos:column="17">messageBodyPart</name><op:operator pos:line="163" pos:column="32">.</op:operator><name pos:line="163" pos:column="33">setFileName</name></name><argument_list pos:line="163" pos:column="44">(<argument><expr><name pos:line="163" pos:column="45">fileLocation</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="164" pos:column="17">multipart</name><op:operator pos:line="164" pos:column="26">.</op:operator><name pos:line="164" pos:column="27">addBodyPart</name></name><argument_list pos:line="164" pos:column="38">(<argument><expr><name pos:line="164" pos:column="39">messageBodyPart</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></for>
                
            <comment type="line" pos:line="167" pos:column="13">// Send the complete message parts</comment>
            <expr_stmt><expr><call><name><name pos:line="168" pos:column="13">msg</name><op:operator pos:line="168" pos:column="16">.</op:operator><name pos:line="168" pos:column="17">setContent</name></name><argument_list pos:line="168" pos:column="27">(<argument><expr><name pos:line="168" pos:column="28">multipart</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
            <comment type="line" pos:line="170" pos:column="13">// Send message</comment>
            <expr_stmt><expr><call><name><name pos:line="171" pos:column="13">Transport</name><op:operator pos:line="171" pos:column="22">.</op:operator><name pos:line="171" pos:column="23">send</name></name><argument_list pos:line="171" pos:column="27">(<argument><expr><name pos:line="171" pos:column="28">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="172" pos:column="13">System</name><op:operator pos:line="172" pos:column="19">.</op:operator><name pos:line="172" pos:column="20">out</name><op:operator pos:line="172" pos:column="23">.</op:operator><name pos:line="172" pos:column="24">println</name></name><argument_list pos:line="172" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="172" pos:column="32">"Email Sent with all the attachments"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="173" pos:column="13">return <expr><lit:literal type="boolean" pos:line="173" pos:column="20">true</lit:literal></expr>;</return>
         }</block><catch pos:line="174" pos:column="11">catch <parameter_list pos:line="174" pos:column="17">(<param><decl><type><name pos:line="174" pos:column="18">MessagingException</name></type> <name pos:line="174" pos:column="37">e</name></decl></param>)</parameter_list> <block pos:line="174" pos:column="40">{
            <expr_stmt><expr><call><name><name pos:line="175" pos:column="13">e</name><op:operator pos:line="175" pos:column="14">.</op:operator><name pos:line="175" pos:column="15">printStackTrace</name></name><argument_list pos:line="175" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="176" pos:column="13">return <expr><lit:literal type="boolean" pos:line="176" pos:column="20">false</lit:literal></expr>;</return>
         }</block></catch> <catch pos:line="177" pos:column="12">catch <parameter_list pos:line="177" pos:column="18">(<param><decl><type><name pos:line="177" pos:column="19">UnsupportedEncodingException</name></type> <name pos:line="177" pos:column="48">e</name></decl></param>)</parameter_list> <block pos:line="177" pos:column="51">{
            <expr_stmt><expr><call><name><name pos:line="178" pos:column="13">e</name><op:operator pos:line="178" pos:column="14">.</op:operator><name pos:line="178" pos:column="15">printStackTrace</name></name><argument_list pos:line="178" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="179" pos:column="13">return <expr><lit:literal type="boolean" pos:line="179" pos:column="20">false</lit:literal></expr>;</return>
       }</block></catch></try>
   }</block></function>
    
}</block></class>
</unit>
