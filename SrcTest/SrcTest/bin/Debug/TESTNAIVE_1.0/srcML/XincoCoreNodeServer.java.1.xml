<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\xinco\src\com\bluecubs\xinco\core\server\XincoCoreNodeServer.java" pos:tabs="8"><comment type="block" format="javadoc" pos:line="1" pos:column="1">/**
 *Copyright 2009 blueCubs.com
 *
 *Licensed under the Apache License, Version 2.0 (the "License");
 *you may not use this file except in compliance with the License.
 *You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 *Unless required by applicable law or agreed to in writing, software
 *distributed under the License is distributed on an "AS IS" BASIS,
 *WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *See the License for the specific language governing permissions and
 *limitations under the License.
 *
 *************************************************************
 * This project supports the blueCubs vision of giving back
 * to the community in exchange for free software!
 * More information on: http://www.bluecubs.org
 *************************************************************
 *
 * Name:            XincoCoreNodeServer
 *
 * Description:     node object
 *
 * Original Author: Alexander Manes
 * Date:            2004
 *
 * Modifications:
 *
 * Who?             When?             What?
 * -                -                 -
 *
 *************************************************************
 */</comment>

<package pos:line="37" pos:column="1">package <name><name pos:line="37" pos:column="9">com</name><op:operator pos:line="37" pos:column="12">.</op:operator><name pos:line="37" pos:column="13">bluecubs</name><op:operator pos:line="37" pos:column="21">.</op:operator><name pos:line="37" pos:column="22">xinco</name><op:operator pos:line="37" pos:column="27">.</op:operator><name pos:line="37" pos:column="28">core</name><op:operator pos:line="37" pos:column="32">.</op:operator><name pos:line="37" pos:column="33">server</name></name>;</package>

<import pos:line="39" pos:column="1">import <name><name pos:line="39" pos:column="8">java</name><op:operator pos:line="39" pos:column="12">.</op:operator><name pos:line="39" pos:column="13">sql</name></name>.*;</import>
<import pos:line="40" pos:column="1">import <name><name pos:line="40" pos:column="8">java</name><op:operator pos:line="40" pos:column="12">.</op:operator><name pos:line="40" pos:column="13">util</name><op:operator pos:line="40" pos:column="17">.</op:operator><name pos:line="40" pos:column="18">Vector</name></name>;</import>

<import pos:line="42" pos:column="1">import <name><name pos:line="42" pos:column="8">com</name><op:operator pos:line="42" pos:column="11">.</op:operator><name pos:line="42" pos:column="12">bluecubs</name><op:operator pos:line="42" pos:column="20">.</op:operator><name pos:line="42" pos:column="21">xinco</name><op:operator pos:line="42" pos:column="26">.</op:operator><name pos:line="42" pos:column="27">core</name></name>.*;</import>
<import pos:line="43" pos:column="1">import <name><name pos:line="43" pos:column="8">com</name><op:operator pos:line="43" pos:column="11">.</op:operator><name pos:line="43" pos:column="12">bluecubs</name><op:operator pos:line="43" pos:column="20">.</op:operator><name pos:line="43" pos:column="21">xinco</name><op:operator pos:line="43" pos:column="26">.</op:operator><name pos:line="43" pos:column="27">index</name></name>.*;</import>

<class><specifier pos:line="45" pos:column="1">public</specifier> class <name pos:line="45" pos:column="14">XincoCoreNodeServer</name> <super><extends pos:line="45" pos:column="34">extends <name pos:line="45" pos:column="42">XincoCoreNode</name></extends></super> <block pos:line="45" pos:column="56">{
    
    <comment type="line" pos:line="47" pos:column="5">//create node object for data structures</comment>
    <constructor><specifier pos:line="48" pos:column="5">public</specifier> <name pos:line="48" pos:column="12">XincoCoreNodeServer</name><parameter_list pos:line="48" pos:column="31">(<param><decl><type><name pos:line="48" pos:column="32">int</name></type> <name pos:line="48" pos:column="36">attrID</name></decl></param>, <param><decl><type><name pos:line="48" pos:column="44">XincoDBManager</name></type> <name pos:line="48" pos:column="59">DBM</name></decl></param>)</parameter_list> <throws pos:line="48" pos:column="64">throws <argument><expr><name pos:line="48" pos:column="71">XincoException</name></expr></argument></throws> <block pos:line="48" pos:column="86">{
        
        <try pos:line="50" pos:column="9">try <block pos:line="50" pos:column="13">{
            
            <decl_stmt><decl><type><name pos:line="52" pos:column="13">Statement</name></type> <name pos:line="52" pos:column="23">stmt</name> <init pos:line="52" pos:column="28">= <expr><call><name><name pos:line="52" pos:column="30">DBM</name><op:operator pos:line="52" pos:column="33">.</op:operator><name pos:line="52" pos:column="34">con</name><op:operator pos:line="52" pos:column="37">.</op:operator><name pos:line="52" pos:column="38">createStatement</name></name><argument_list pos:line="52" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="53" pos:column="13">ResultSet</name></type> <name pos:line="53" pos:column="23">rs</name> <init pos:line="53" pos:column="26">= <expr><call><name><name pos:line="53" pos:column="28">stmt</name><op:operator pos:line="53" pos:column="32">.</op:operator><name pos:line="53" pos:column="33">executeQuery</name></name><argument_list pos:line="53" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="53" pos:column="46">"SELECT * FROM xinco_core_node WHERE id="</lit:literal> <op:operator pos:line="53" pos:column="88">+</op:operator> <name pos:line="53" pos:column="90">attrID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            
            <comment type="line" pos:line="55" pos:column="13">//throw exception if no result found</comment>
            <decl_stmt><decl><type><name pos:line="56" pos:column="13">int</name></type> <name pos:line="56" pos:column="17">RowCount</name> <init pos:line="56" pos:column="26">= <expr><lit:literal type="number" pos:line="56" pos:column="28">0</lit:literal></expr></init></decl>;</decl_stmt>
            <while pos:line="57" pos:column="13">while <condition pos:line="57" pos:column="19">(<expr><call><name><name pos:line="57" pos:column="20">rs</name><op:operator pos:line="57" pos:column="22">.</op:operator><name pos:line="57" pos:column="23">next</name></name><argument_list pos:line="57" pos:column="27">()</argument_list></call></expr>)</condition> <block pos:line="57" pos:column="31">{
                <expr_stmt><expr><name pos:line="58" pos:column="17">RowCount</name><op:operator pos:line="58" pos:column="25">++</op:operator></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="59" pos:column="17">setId</name><argument_list pos:line="59" pos:column="22">(<argument><expr><call><name><name pos:line="59" pos:column="23">rs</name><op:operator pos:line="59" pos:column="25">.</op:operator><name pos:line="59" pos:column="26">getInt</name></name><argument_list pos:line="59" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="59" pos:column="33">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="60" pos:column="17">setXinco_core_node_id</name><argument_list pos:line="60" pos:column="38">(<argument><expr><call><name><name pos:line="60" pos:column="39">rs</name><op:operator pos:line="60" pos:column="41">.</op:operator><name pos:line="60" pos:column="42">getInt</name></name><argument_list pos:line="60" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="60" pos:column="49">"xinco_core_node_id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="61" pos:column="17">setXinco_core_language</name><argument_list pos:line="61" pos:column="39">(<argument><expr><op:operator pos:line="61" pos:column="40">new</op:operator> <call><name pos:line="61" pos:column="44">XincoCoreLanguageServer</name><argument_list pos:line="61" pos:column="67">(<argument><expr><call><name><name pos:line="61" pos:column="68">rs</name><op:operator pos:line="61" pos:column="70">.</op:operator><name pos:line="61" pos:column="71">getInt</name></name><argument_list pos:line="61" pos:column="77">(<argument><expr><lit:literal type="string" pos:line="61" pos:column="78">"xinco_core_language_id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="61" pos:column="105">DBM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="62" pos:column="17">setDesignation</name><argument_list pos:line="62" pos:column="31">(<argument><expr><call><name><name pos:line="62" pos:column="32">rs</name><op:operator pos:line="62" pos:column="34">.</op:operator><name pos:line="62" pos:column="35">getString</name></name><argument_list pos:line="62" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="62" pos:column="45">"designation"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="63" pos:column="17">setStatus_number</name><argument_list pos:line="63" pos:column="33">(<argument><expr><call><name><name pos:line="63" pos:column="34">rs</name><op:operator pos:line="63" pos:column="36">.</op:operator><name pos:line="63" pos:column="37">getInt</name></name><argument_list pos:line="63" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="63" pos:column="44">"status_number"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="64" pos:column="17">setXinco_core_nodes</name><argument_list pos:line="64" pos:column="36">(<argument><expr><op:operator pos:line="64" pos:column="37">new</op:operator> <call><name pos:line="64" pos:column="41">Vector</name><argument_list pos:line="64" pos:column="47">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="65" pos:column="17">setXinco_core_data</name><argument_list pos:line="65" pos:column="35">(<argument><expr><op:operator pos:line="65" pos:column="36">new</op:operator> <call><name pos:line="65" pos:column="40">Vector</name><argument_list pos:line="65" pos:column="46">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <comment type="line" pos:line="66" pos:column="17">//load acl for this object</comment>
                <expr_stmt><expr><call><name pos:line="67" pos:column="17">setXinco_core_acl</name><argument_list pos:line="67" pos:column="34">(<argument><expr><call><name><name pos:line="67" pos:column="35">XincoCoreACEServer</name><op:operator pos:line="67" pos:column="53">.</op:operator><name pos:line="67" pos:column="54">getXincoCoreACL</name></name><argument_list pos:line="67" pos:column="69">(<argument><expr><call><name><name pos:line="67" pos:column="70">rs</name><op:operator pos:line="67" pos:column="72">.</op:operator><name pos:line="67" pos:column="73">getInt</name></name><argument_list pos:line="67" pos:column="79">(<argument><expr><lit:literal type="string" pos:line="67" pos:column="80">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="67" pos:column="87">"xinco_core_node_id"</lit:literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="109">DBM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></while>
            <if pos:line="69" pos:column="13">if <condition pos:line="69" pos:column="16">(<expr><name pos:line="69" pos:column="17">RowCount</name> <op:operator pos:line="69" pos:column="26">&lt;</op:operator> <lit:literal type="number" pos:line="69" pos:column="28">1</lit:literal></expr>)</condition><then pos:line="69" pos:column="30"> <block pos:line="69" pos:column="31">{
                <throw pos:line="70" pos:column="17">throw <expr><op:operator pos:line="70" pos:column="23">new</op:operator> <call><name pos:line="70" pos:column="27">XincoException</name><argument_list pos:line="70" pos:column="41">()</argument_list></call></expr>;</throw>
            }</block></then></if>
            
            <expr_stmt><expr><call><name><name pos:line="73" pos:column="13">stmt</name><op:operator pos:line="73" pos:column="17">.</op:operator><name pos:line="73" pos:column="18">close</name></name><argument_list pos:line="73" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
            
        }</block> <catch pos:line="75" pos:column="11">catch <parameter_list pos:line="75" pos:column="17">(<param><decl><type><name pos:line="75" pos:column="18">Exception</name></type> <name pos:line="75" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="75" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="76" pos:column="13">setXinco_core_language</name><argument_list pos:line="76" pos:column="35">(<argument><expr><lit:literal type="null" pos:line="76" pos:column="36">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="77" pos:column="13">getXinco_core_acl</name><argument_list pos:line="77" pos:column="30">()</argument_list></call><op:operator pos:line="77" pos:column="32">.</op:operator><call><name pos:line="77" pos:column="33">removeAllElements</name><argument_list pos:line="77" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="78" pos:column="13">getXinco_core_nodes</name><argument_list pos:line="78" pos:column="32">()</argument_list></call><op:operator pos:line="78" pos:column="34">.</op:operator><call><name pos:line="78" pos:column="35">removeAllElements</name><argument_list pos:line="78" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="79" pos:column="13">getXinco_core_data</name><argument_list pos:line="79" pos:column="31">()</argument_list></call><op:operator pos:line="79" pos:column="33">.</op:operator><call><name pos:line="79" pos:column="34">removeAllElements</name><argument_list pos:line="79" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
            <throw pos:line="80" pos:column="13">throw <expr><op:operator pos:line="80" pos:column="19">new</op:operator> <call><name pos:line="80" pos:column="23">XincoException</name><argument_list pos:line="80" pos:column="37">()</argument_list></call></expr>;</throw>
        }</block></catch></try>
        
    }</block></constructor>
    
    <comment type="line" pos:line="85" pos:column="5">//create node object for data structures</comment>
    <constructor><specifier pos:line="86" pos:column="5">public</specifier> <name pos:line="86" pos:column="12">XincoCoreNodeServer</name><parameter_list pos:line="86" pos:column="31">(<param><decl><type><name pos:line="86" pos:column="32">int</name></type> <name pos:line="86" pos:column="36">attrID</name></decl></param>, <param><decl><type><name pos:line="86" pos:column="44">int</name></type> <name pos:line="86" pos:column="48">attrCNID</name></decl></param>, <param><decl><type><name pos:line="86" pos:column="58">int</name></type> <name pos:line="86" pos:column="62">attrLID</name></decl></param>, <param><decl><type><name pos:line="86" pos:column="71">String</name></type> <name pos:line="86" pos:column="78">attrD</name></decl></param>, <param><decl><type><name pos:line="86" pos:column="85">int</name></type> <name pos:line="86" pos:column="89">attrSN</name></decl></param>, <param><decl><type><name pos:line="86" pos:column="97">XincoDBManager</name></type> <name pos:line="86" pos:column="112">DBM</name></decl></param>)</parameter_list> <throws pos:line="86" pos:column="117">throws <argument><expr><name pos:line="86" pos:column="124">XincoException</name></expr></argument></throws> <block pos:line="86" pos:column="139">{
        
        <try pos:line="88" pos:column="9">try <block pos:line="88" pos:column="13">{
            <expr_stmt><expr><call><name pos:line="89" pos:column="13">setId</name><argument_list pos:line="89" pos:column="18">(<argument><expr><name pos:line="89" pos:column="19">attrID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="90" pos:column="13">setXinco_core_node_id</name><argument_list pos:line="90" pos:column="34">(<argument><expr><name pos:line="90" pos:column="35">attrCNID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="91" pos:column="13">setXinco_core_language</name><argument_list pos:line="91" pos:column="35">(<argument><expr><op:operator pos:line="91" pos:column="36">new</op:operator> <call><name pos:line="91" pos:column="40">XincoCoreLanguageServer</name><argument_list pos:line="91" pos:column="63">(<argument><expr><name pos:line="91" pos:column="64">attrLID</name></expr></argument>, <argument><expr><name pos:line="91" pos:column="73">DBM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="92" pos:column="13">setDesignation</name><argument_list pos:line="92" pos:column="27">(<argument><expr><name pos:line="92" pos:column="28">attrD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="93" pos:column="13">setStatus_number</name><argument_list pos:line="93" pos:column="29">(<argument><expr><name pos:line="93" pos:column="30">attrSN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="94" pos:column="13">setXinco_core_nodes</name><argument_list pos:line="94" pos:column="32">(<argument><expr><op:operator pos:line="94" pos:column="33">new</op:operator> <call><name pos:line="94" pos:column="37">Vector</name><argument_list pos:line="94" pos:column="43">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="95" pos:column="13">setXinco_core_data</name><argument_list pos:line="95" pos:column="31">(<argument><expr><op:operator pos:line="95" pos:column="32">new</op:operator> <call><name pos:line="95" pos:column="36">Vector</name><argument_list pos:line="95" pos:column="42">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="line" pos:line="96" pos:column="13">//load acl for this object</comment>
            <expr_stmt><expr><call><name pos:line="97" pos:column="13">setXinco_core_acl</name><argument_list pos:line="97" pos:column="30">(<argument><expr><call><name><name pos:line="97" pos:column="31">XincoCoreACEServer</name><op:operator pos:line="97" pos:column="49">.</op:operator><name pos:line="97" pos:column="50">getXincoCoreACL</name></name><argument_list pos:line="97" pos:column="65">(<argument><expr><call><name pos:line="97" pos:column="66">getId</name><argument_list pos:line="97" pos:column="71">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="97" pos:column="75">"xinco_core_node_id"</lit:literal></expr></argument>, <argument><expr><name pos:line="97" pos:column="97">DBM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block> <catch pos:line="98" pos:column="11">catch <parameter_list pos:line="98" pos:column="17">(<param><decl><type><name pos:line="98" pos:column="18">Exception</name></type> <name pos:line="98" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="98" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="99" pos:column="13">setXinco_core_language</name><argument_list pos:line="99" pos:column="35">(<argument><expr><lit:literal type="null" pos:line="99" pos:column="36">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="100" pos:column="13">getXinco_core_acl</name><argument_list pos:line="100" pos:column="30">()</argument_list></call><op:operator pos:line="100" pos:column="32">.</op:operator><call><name pos:line="100" pos:column="33">removeAllElements</name><argument_list pos:line="100" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="101" pos:column="13">getXinco_core_nodes</name><argument_list pos:line="101" pos:column="32">()</argument_list></call><op:operator pos:line="101" pos:column="34">.</op:operator><call><name pos:line="101" pos:column="35">removeAllElements</name><argument_list pos:line="101" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="102" pos:column="13">getXinco_core_data</name><argument_list pos:line="102" pos:column="31">()</argument_list></call><op:operator pos:line="102" pos:column="33">.</op:operator><call><name pos:line="102" pos:column="34">removeAllElements</name><argument_list pos:line="102" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
            <throw pos:line="103" pos:column="13">throw <expr><op:operator pos:line="103" pos:column="19">new</op:operator> <call><name pos:line="103" pos:column="23">XincoException</name><argument_list pos:line="103" pos:column="37">()</argument_list></call></expr>;</throw>
        }</block></catch></try>
        
    }</block></constructor>
    
    <comment type="line" pos:line="108" pos:column="5">//write to db</comment>
    <function><type><specifier pos:line="109" pos:column="5">public</specifier> <name pos:line="109" pos:column="12">int</name></type> <name pos:line="109" pos:column="16">write2DB</name><parameter_list pos:line="109" pos:column="24">(<param><decl><type><name pos:line="109" pos:column="25">XincoDBManager</name></type> <name pos:line="109" pos:column="40">DBM</name></decl></param>)</parameter_list> <throws pos:line="109" pos:column="45">throws <argument><expr><name pos:line="109" pos:column="52">XincoException</name></expr></argument></throws> <block pos:line="109" pos:column="67">{
        
        <try pos:line="111" pos:column="9">try <block pos:line="111" pos:column="13">{
            
            <decl_stmt><decl><type><name pos:line="113" pos:column="13">Statement</name></type> <name pos:line="113" pos:column="23">stmt</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="114" pos:column="13">String</name></type> <name pos:line="114" pos:column="20">xcnid</name> <init pos:line="114" pos:column="26">= <expr><lit:literal type="string" pos:line="114" pos:column="28">""</lit:literal></expr></init></decl>;</decl_stmt>
            
            <if pos:line="116" pos:column="13">if <condition pos:line="116" pos:column="16">(<expr><call><name pos:line="116" pos:column="17">getId</name><argument_list pos:line="116" pos:column="22">()</argument_list></call> <op:operator pos:line="116" pos:column="25">&gt;</op:operator> <lit:literal type="number" pos:line="116" pos:column="27">0</lit:literal></expr>)</condition><then pos:line="116" pos:column="29"> <block pos:line="116" pos:column="30">{
                <expr_stmt><expr><name pos:line="117" pos:column="17">stmt</name> <op:operator pos:line="117" pos:column="22">=</op:operator> <call><name><name pos:line="117" pos:column="24">DBM</name><op:operator pos:line="117" pos:column="27">.</op:operator><name pos:line="117" pos:column="28">con</name><op:operator pos:line="117" pos:column="31">.</op:operator><name pos:line="117" pos:column="32">createStatement</name></name><argument_list pos:line="117" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
                <comment type="line" pos:line="118" pos:column="17">//set values of nullable attributes</comment>
                <if pos:line="119" pos:column="17">if <condition pos:line="119" pos:column="20">(<expr><call><name pos:line="119" pos:column="21">getXinco_core_node_id</name><argument_list pos:line="119" pos:column="42">()</argument_list></call> <op:operator pos:line="119" pos:column="45">==</op:operator> <lit:literal type="number" pos:line="119" pos:column="48">0</lit:literal></expr>)</condition><then pos:line="119" pos:column="50"> <block pos:line="119" pos:column="51">{
                    <expr_stmt><expr><name pos:line="120" pos:column="21">xcnid</name> <op:operator pos:line="120" pos:column="27">=</op:operator> <lit:literal type="string" pos:line="120" pos:column="29">"NULL"</lit:literal></expr>;</expr_stmt>
                }</block></then> <else pos:line="121" pos:column="19">else <block pos:line="121" pos:column="24">{
                    <expr_stmt><expr><name pos:line="122" pos:column="21">xcnid</name> <op:operator pos:line="122" pos:column="27">=</op:operator> <lit:literal type="string" pos:line="122" pos:column="29">""</lit:literal> <op:operator pos:line="122" pos:column="32">+</op:operator> <call><name pos:line="122" pos:column="34">getXinco_core_node_id</name><argument_list pos:line="122" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
                }</block></else></if>
                <decl_stmt><decl><type><name pos:line="124" pos:column="17">XincoCoreAuditServer</name></type> <name pos:line="124" pos:column="38">audit</name><init pos:line="124" pos:column="43">= <expr><op:operator pos:line="124" pos:column="45">new</op:operator> <call><name pos:line="124" pos:column="49">XincoCoreAuditServer</name><argument_list pos:line="124" pos:column="69">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="125" pos:column="17">audit</name><op:operator pos:line="125" pos:column="22">.</op:operator><name pos:line="125" pos:column="23">updateAuditTrail</name></name><argument_list pos:line="125" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="125" pos:column="40">"xinco_core_node"</lit:literal></expr></argument>,<argument><expr><op:operator pos:line="125" pos:column="58">new</op:operator> <name><name pos:line="125" pos:column="62">String</name> <index pos:line="125" pos:column="69">[]</index></name> <block pos:line="125" pos:column="72">{<expr><lit:literal type="string" pos:line="125" pos:column="73">"id ="</lit:literal><op:operator pos:line="125" pos:column="79">+</op:operator><call><name pos:line="125" pos:column="80">getId</name><argument_list pos:line="125" pos:column="85">()</argument_list></call></expr>}</block></expr></argument>,
                        <argument><expr><name pos:line="126" pos:column="25">DBM</name></expr></argument>,<argument><expr><lit:literal type="string" pos:line="126" pos:column="29">"audit.corenode.change"</lit:literal></expr></argument>,<argument><expr><call><name><name pos:line="126" pos:column="53">this</name><op:operator pos:line="126" pos:column="57">.</op:operator><name pos:line="126" pos:column="58">getChangerID</name></name><argument_list pos:line="126" pos:column="70">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="127" pos:column="17">stmt</name><op:operator pos:line="127" pos:column="21">.</op:operator><name pos:line="127" pos:column="22">executeUpdate</name></name><argument_list pos:line="127" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="127" pos:column="36">"UPDATE xinco_core_node SET xinco_core_node_id="</lit:literal> <op:operator pos:line="127" pos:column="85">+</op:operator> <name pos:line="127" pos:column="87">xcnid</name> <op:operator pos:line="127" pos:column="93">+</op:operator> <lit:literal type="string" pos:line="127" pos:column="95">", xinco_core_language_id="</lit:literal> <op:operator pos:line="127" pos:column="123">+</op:operator> <call><name pos:line="127" pos:column="125">getXinco_core_language</name><argument_list pos:line="127" pos:column="147">()</argument_list></call><op:operator pos:line="127" pos:column="149">.</op:operator><call><name pos:line="127" pos:column="150">getId</name><argument_list pos:line="127" pos:column="155">()</argument_list></call> <op:operator pos:line="127" pos:column="158">+</op:operator> <lit:literal type="string" pos:line="127" pos:column="160">", designation='"</lit:literal> <op:operator pos:line="127" pos:column="178">+</op:operator> <call><name pos:line="127" pos:column="180">getDesignation</name><argument_list pos:line="127" pos:column="194">()</argument_list></call><op:operator pos:line="127" pos:column="196">.</op:operator><call><name pos:line="127" pos:column="197">replaceAll</name><argument_list pos:line="127" pos:column="207">(<argument><expr><lit:literal type="string" pos:line="127" pos:column="208">"'"</lit:literal></expr></argument>,<argument><expr><lit:literal type="string" pos:line="127" pos:column="212">"\\\\'"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="127" pos:column="221">+</op:operator> <lit:literal type="string" pos:line="127" pos:column="223">"', status_number="</lit:literal> <op:operator pos:line="127" pos:column="243">+</op:operator> <call><name pos:line="127" pos:column="245">getStatus_number</name><argument_list pos:line="127" pos:column="261">()</argument_list></call> <op:operator pos:line="127" pos:column="264">+</op:operator> <lit:literal type="string" pos:line="127" pos:column="266">" WHERE id="</lit:literal> <op:operator pos:line="127" pos:column="279">+</op:operator> <call><name pos:line="127" pos:column="281">getId</name><argument_list pos:line="127" pos:column="286">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="128" pos:column="17">stmt</name><op:operator pos:line="128" pos:column="21">.</op:operator><name pos:line="128" pos:column="22">close</name></name><argument_list pos:line="128" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
            }</block></then> <else pos:line="129" pos:column="15">else <block pos:line="129" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="130" pos:column="17">setId</name><argument_list pos:line="130" pos:column="22">(<argument><expr><call><name><name pos:line="130" pos:column="23">DBM</name><op:operator pos:line="130" pos:column="26">.</op:operator><name pos:line="130" pos:column="27">getNewID</name></name><argument_list pos:line="130" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="130" pos:column="36">"xinco_core_node"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                
                <expr_stmt><expr><name pos:line="132" pos:column="17">stmt</name> <op:operator pos:line="132" pos:column="22">=</op:operator> <call><name><name pos:line="132" pos:column="24">DBM</name><op:operator pos:line="132" pos:column="27">.</op:operator><name pos:line="132" pos:column="28">con</name><op:operator pos:line="132" pos:column="31">.</op:operator><name pos:line="132" pos:column="32">createStatement</name></name><argument_list pos:line="132" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
                <comment type="line" pos:line="133" pos:column="17">//set values of nullable attributes</comment>
                <if pos:line="134" pos:column="17">if <condition pos:line="134" pos:column="20">(<expr><call><name pos:line="134" pos:column="21">getXinco_core_node_id</name><argument_list pos:line="134" pos:column="42">()</argument_list></call> <op:operator pos:line="134" pos:column="45">==</op:operator> <lit:literal type="number" pos:line="134" pos:column="48">0</lit:literal></expr>)</condition><then pos:line="134" pos:column="50"> <block pos:line="134" pos:column="51">{
                    <expr_stmt><expr><name pos:line="135" pos:column="21">xcnid</name> <op:operator pos:line="135" pos:column="27">=</op:operator> <lit:literal type="string" pos:line="135" pos:column="29">"NULL"</lit:literal></expr>;</expr_stmt>
                }</block></then> <else pos:line="136" pos:column="19">else <block pos:line="136" pos:column="24">{
                    <expr_stmt><expr><name pos:line="137" pos:column="21">xcnid</name> <op:operator pos:line="137" pos:column="27">=</op:operator> <lit:literal type="string" pos:line="137" pos:column="29">""</lit:literal> <op:operator pos:line="137" pos:column="32">+</op:operator> <call><name pos:line="137" pos:column="34">getXinco_core_node_id</name><argument_list pos:line="137" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
                }</block></else></if>
                <expr_stmt><expr><call><name><name pos:line="139" pos:column="17">stmt</name><op:operator pos:line="139" pos:column="21">.</op:operator><name pos:line="139" pos:column="22">executeUpdate</name></name><argument_list pos:line="139" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="139" pos:column="36">"INSERT INTO xinco_core_node VALUES ("</lit:literal> <op:operator pos:line="139" pos:column="75">+</op:operator> <call><name pos:line="139" pos:column="77">getId</name><argument_list pos:line="139" pos:column="82">()</argument_list></call> <op:operator pos:line="139" pos:column="85">+</op:operator> <lit:literal type="string" pos:line="139" pos:column="87">", "</lit:literal> <op:operator pos:line="139" pos:column="92">+</op:operator> <call><name pos:line="139" pos:column="94">getXinco_core_node_id</name><argument_list pos:line="139" pos:column="115">()</argument_list></call> <op:operator pos:line="139" pos:column="118">+</op:operator> <lit:literal type="string" pos:line="139" pos:column="120">", "</lit:literal> <op:operator pos:line="139" pos:column="125">+</op:operator> <call><name pos:line="139" pos:column="127">getXinco_core_language</name><argument_list pos:line="139" pos:column="149">()</argument_list></call><op:operator pos:line="139" pos:column="151">.</op:operator><call><name pos:line="139" pos:column="152">getId</name><argument_list pos:line="139" pos:column="157">()</argument_list></call> <op:operator pos:line="139" pos:column="160">+</op:operator> <lit:literal type="string" pos:line="139" pos:column="162">", '"</lit:literal> <op:operator pos:line="139" pos:column="168">+</op:operator> <call><name pos:line="139" pos:column="170">getDesignation</name><argument_list pos:line="139" pos:column="184">()</argument_list></call><op:operator pos:line="139" pos:column="186">.</op:operator><call><name pos:line="139" pos:column="187">replaceAll</name><argument_list pos:line="139" pos:column="197">(<argument><expr><lit:literal type="string" pos:line="139" pos:column="198">"'"</lit:literal></expr></argument>,<argument><expr><lit:literal type="string" pos:line="139" pos:column="202">"\\\\'"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="139" pos:column="211">+</op:operator> <lit:literal type="string" pos:line="139" pos:column="213">"', "</lit:literal> <op:operator pos:line="139" pos:column="219">+</op:operator> <call><name pos:line="139" pos:column="221">getStatus_number</name><argument_list pos:line="139" pos:column="237">()</argument_list></call> <op:operator pos:line="139" pos:column="240">+</op:operator> <lit:literal type="string" pos:line="139" pos:column="242">")"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="140" pos:column="17">stmt</name><op:operator pos:line="140" pos:column="21">.</op:operator><name pos:line="140" pos:column="22">close</name></name><argument_list pos:line="140" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
            
            <expr_stmt><expr><call><name><name pos:line="143" pos:column="13">DBM</name><op:operator pos:line="143" pos:column="16">.</op:operator><name pos:line="143" pos:column="17">con</name><op:operator pos:line="143" pos:column="20">.</op:operator><name pos:line="143" pos:column="21">commit</name></name><argument_list pos:line="143" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
        }</block> <catch pos:line="144" pos:column="11">catch <parameter_list pos:line="144" pos:column="17">(<param><decl><type><name pos:line="144" pos:column="18">Exception</name></type> <name pos:line="144" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="144" pos:column="31">{
            <try pos:line="145" pos:column="13">try <block pos:line="145" pos:column="17">{
                <expr_stmt><expr><call><name><name pos:line="146" pos:column="17">DBM</name><op:operator pos:line="146" pos:column="20">.</op:operator><name pos:line="146" pos:column="21">con</name><op:operator pos:line="146" pos:column="24">.</op:operator><name pos:line="146" pos:column="25">rollback</name></name><argument_list pos:line="146" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            }</block> <catch pos:line="147" pos:column="15">catch <parameter_list pos:line="147" pos:column="21">(<param><decl><type><name pos:line="147" pos:column="22">Exception</name></type> <name pos:line="147" pos:column="32">erollback</name></decl></param>)</parameter_list> <block pos:line="147" pos:column="43">{
            }</block></catch></try>
            <throw pos:line="149" pos:column="13">throw <expr><op:operator pos:line="149" pos:column="19">new</op:operator> <call><name pos:line="149" pos:column="23">XincoException</name><argument_list pos:line="149" pos:column="37">()</argument_list></call></expr>;</throw>
        }</block></catch></try>
        
        <return pos:line="152" pos:column="9">return <expr><call><name pos:line="152" pos:column="16">getId</name><argument_list pos:line="152" pos:column="21">()</argument_list></call></expr>;</return>
        
    }</block></function>
    
    <comment type="line" pos:line="156" pos:column="5">//delete from db</comment>
    <function><type><specifier pos:line="157" pos:column="5">public</specifier> <name pos:line="157" pos:column="12">void</name></type> <name pos:line="157" pos:column="17">deleteFromDB</name><parameter_list pos:line="157" pos:column="29">(<param><decl><type><name pos:line="157" pos:column="30">boolean</name></type> <name pos:line="157" pos:column="38">delete_this</name></decl></param>, <param><decl><type><name pos:line="157" pos:column="51">XincoDBManager</name></type> <name pos:line="157" pos:column="66">DBM</name></decl></param>,<param><decl><type><name pos:line="157" pos:column="70">int</name></type> <name pos:line="157" pos:column="74">userID</name></decl></param>)</parameter_list> <throws pos:line="157" pos:column="82">throws <argument><expr><name pos:line="157" pos:column="89">XincoException</name></expr></argument></throws> <block pos:line="157" pos:column="104">{
        
        <decl_stmt><decl><type><name pos:line="159" pos:column="9">int</name></type> <name pos:line="159" pos:column="13">i</name><init pos:line="159" pos:column="14">=<expr><lit:literal type="number" pos:line="159" pos:column="15">0</lit:literal></expr></init></decl>;</decl_stmt>
        
        <try pos:line="161" pos:column="9">try <block pos:line="161" pos:column="13">{
            
            <decl_stmt><decl><type><name pos:line="163" pos:column="13">Statement</name></type> <name pos:line="163" pos:column="23">stmt</name></decl>;</decl_stmt>
            
            <comment type="line" pos:line="165" pos:column="13">//fill nodes and data</comment>
            <expr_stmt><expr><call><name pos:line="166" pos:column="13">fillXincoCoreNodes</name><argument_list pos:line="166" pos:column="31">(<argument><expr><name pos:line="166" pos:column="32">DBM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="167" pos:column="13">fillXincoCoreData</name><argument_list pos:line="167" pos:column="30">(<argument><expr><name pos:line="167" pos:column="31">DBM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="line" pos:line="168" pos:column="13">//start recursive deletion</comment>
            <for pos:line="169" pos:column="13">for (<init><expr><name pos:line="169" pos:column="18">i</name><op:operator pos:line="169" pos:column="19">=</op:operator><lit:literal type="number" pos:line="169" pos:column="20">0</lit:literal></expr>;</init><condition><expr><name pos:line="169" pos:column="22">i</name><op:operator pos:line="169" pos:column="23">&lt;</op:operator><call><name pos:line="169" pos:column="24">getXinco_core_nodes</name><argument_list pos:line="169" pos:column="43">()</argument_list></call><op:operator pos:line="169" pos:column="45">.</op:operator><call><name pos:line="169" pos:column="46">size</name><argument_list pos:line="169" pos:column="50">()</argument_list></call></expr>;</condition><incr><expr><name pos:line="169" pos:column="53">i</name><op:operator pos:line="169" pos:column="54">++</op:operator></expr></incr>) <block pos:line="169" pos:column="58">{
                <expr_stmt><expr><op:operator pos:line="170" pos:column="17">(</op:operator><op:operator pos:line="170" pos:column="18">(</op:operator><name pos:line="170" pos:column="19">XincoCoreNodeServer</name><op:operator pos:line="170" pos:column="38">)</op:operator><call><name pos:line="170" pos:column="39">getXinco_core_nodes</name><argument_list pos:line="170" pos:column="58">()</argument_list></call><op:operator pos:line="170" pos:column="60">.</op:operator><call><name pos:line="170" pos:column="61">elementAt</name><argument_list pos:line="170" pos:column="70">(<argument><expr><name pos:line="170" pos:column="71">i</name></expr></argument>)</argument_list></call><op:operator pos:line="170" pos:column="73">)</op:operator><op:operator pos:line="170" pos:column="74">.</op:operator><call><name pos:line="170" pos:column="75">deleteFromDB</name><argument_list pos:line="170" pos:column="87">(<argument><expr><lit:literal type="boolean" pos:line="170" pos:column="88">true</lit:literal></expr></argument>, <argument><expr><name pos:line="170" pos:column="94">DBM</name></expr></argument>,<argument><expr><name pos:line="170" pos:column="98">userID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></for>
            <for pos:line="172" pos:column="13">for (<init><expr><name pos:line="172" pos:column="18">i</name><op:operator pos:line="172" pos:column="19">=</op:operator><lit:literal type="number" pos:line="172" pos:column="20">0</lit:literal></expr>;</init><condition><expr><name pos:line="172" pos:column="22">i</name><op:operator pos:line="172" pos:column="23">&lt;</op:operator><call><name pos:line="172" pos:column="24">getXinco_core_data</name><argument_list pos:line="172" pos:column="42">()</argument_list></call><op:operator pos:line="172" pos:column="44">.</op:operator><call><name pos:line="172" pos:column="45">size</name><argument_list pos:line="172" pos:column="49">()</argument_list></call></expr>;</condition><incr><expr><name pos:line="172" pos:column="52">i</name><op:operator pos:line="172" pos:column="53">++</op:operator></expr></incr>) <block pos:line="172" pos:column="57">{
                <expr_stmt><expr><call><name><name pos:line="173" pos:column="17">XincoIndexer</name><op:operator pos:line="173" pos:column="29">.</op:operator><name pos:line="173" pos:column="30">removeXincoCoreData</name></name><argument_list pos:line="173" pos:column="49">(<argument><expr><op:operator pos:line="173" pos:column="50">(</op:operator><name pos:line="173" pos:column="51">XincoCoreDataServer</name><op:operator pos:line="173" pos:column="70">)</op:operator><call><name pos:line="173" pos:column="71">getXinco_core_data</name><argument_list pos:line="173" pos:column="89">()</argument_list></call><op:operator pos:line="173" pos:column="91">.</op:operator><call><name pos:line="173" pos:column="92">elementAt</name><argument_list pos:line="173" pos:column="101">(<argument><expr><name pos:line="173" pos:column="102">i</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="173" pos:column="106">DBM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="174" pos:column="17">XincoCoreDataServer</name><op:operator pos:line="174" pos:column="36">.</op:operator><name pos:line="174" pos:column="37">removeFromDB</name></name><argument_list pos:line="174" pos:column="49">(<argument><expr><name pos:line="174" pos:column="50">DBM</name></expr></argument>,<argument><expr><name pos:line="174" pos:column="54">userID</name></expr></argument>,
                        <argument><expr><op:operator pos:line="175" pos:column="25">(</op:operator><op:operator pos:line="175" pos:column="26">(</op:operator><name pos:line="175" pos:column="27">XincoCoreDataServer</name><op:operator pos:line="175" pos:column="46">)</op:operator><call><name pos:line="175" pos:column="47">getXinco_core_data</name><argument_list pos:line="175" pos:column="65">()</argument_list></call><op:operator pos:line="175" pos:column="67">.</op:operator><call><name pos:line="175" pos:column="68">elementAt</name><argument_list pos:line="175" pos:column="77">(<argument><expr><name pos:line="175" pos:column="78">i</name></expr></argument>)</argument_list></call><op:operator pos:line="175" pos:column="80">)</op:operator><op:operator pos:line="175" pos:column="81">.</op:operator><call><name pos:line="175" pos:column="82">getId</name><argument_list pos:line="175" pos:column="87">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><op:operator pos:line="176" pos:column="17">(</op:operator><op:operator pos:line="176" pos:column="18">(</op:operator><name pos:line="176" pos:column="19">XincoCoreDataServer</name><op:operator pos:line="176" pos:column="38">)</op:operator><call><name pos:line="176" pos:column="39">getXinco_core_data</name><argument_list pos:line="176" pos:column="57">()</argument_list></call><op:operator pos:line="176" pos:column="59">.</op:operator><call><name pos:line="176" pos:column="60">elementAt</name><argument_list pos:line="176" pos:column="69">(<argument><expr><name pos:line="176" pos:column="70">i</name></expr></argument>)</argument_list></call><op:operator pos:line="176" pos:column="72">)</op:operator><op:operator pos:line="176" pos:column="73">.</op:operator><call><name pos:line="176" pos:column="74">setChangerID</name><argument_list pos:line="176" pos:column="86">(<argument><expr><name pos:line="176" pos:column="87">userID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><op:operator pos:line="177" pos:column="17">(</op:operator><op:operator pos:line="177" pos:column="18">(</op:operator><name pos:line="177" pos:column="19">XincoCoreDataServer</name><op:operator pos:line="177" pos:column="38">)</op:operator><call><name pos:line="177" pos:column="39">getXinco_core_data</name><argument_list pos:line="177" pos:column="57">()</argument_list></call><op:operator pos:line="177" pos:column="59">.</op:operator><call><name pos:line="177" pos:column="60">elementAt</name><argument_list pos:line="177" pos:column="69">(<argument><expr><name pos:line="177" pos:column="70">i</name></expr></argument>)</argument_list></call><op:operator pos:line="177" pos:column="72">)</op:operator><op:operator pos:line="177" pos:column="73">.</op:operator><call><name pos:line="177" pos:column="74">deleteFromDB</name><argument_list pos:line="177" pos:column="86">(<argument><expr><name pos:line="177" pos:column="87">DBM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></for>
            <if pos:line="179" pos:column="13">if <condition pos:line="179" pos:column="16">(<expr><name pos:line="179" pos:column="17">delete_this</name></expr>)</condition><then pos:line="179" pos:column="29"> <block pos:line="179" pos:column="30">{
                <decl_stmt><decl><type><name pos:line="180" pos:column="17">XincoCoreAuditServer</name></type> <name pos:line="180" pos:column="38">audit</name><init pos:line="180" pos:column="43">= <expr><op:operator pos:line="180" pos:column="45">new</op:operator> <call><name pos:line="180" pos:column="49">XincoCoreAuditServer</name><argument_list pos:line="180" pos:column="69">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <comment type="block" pos:line="181" pos:column="17">/*
                 * Aduit Trail Table (*_t) cannot handle multiple row changes!!!
                audit.updateAuditTrail("xinco_core_ace",new String [] {"id ="+getId()},
                        DBM,"audit.general.delete",userID);
                */</comment>
                <expr_stmt><expr><name pos:line="186" pos:column="17">stmt</name> <op:operator pos:line="186" pos:column="22">=</op:operator> <call><name><name pos:line="186" pos:column="24">DBM</name><op:operator pos:line="186" pos:column="27">.</op:operator><name pos:line="186" pos:column="28">con</name><op:operator pos:line="186" pos:column="31">.</op:operator><name pos:line="186" pos:column="32">createStatement</name></name><argument_list pos:line="186" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="187" pos:column="17">stmt</name><op:operator pos:line="187" pos:column="21">.</op:operator><name pos:line="187" pos:column="22">executeUpdate</name></name><argument_list pos:line="187" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="187" pos:column="36">"DELETE FROM xinco_core_ace WHERE xinco_core_node_id="</lit:literal> <op:operator pos:line="187" pos:column="91">+</op:operator> <call><name pos:line="187" pos:column="93">getId</name><argument_list pos:line="187" pos:column="98">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="188" pos:column="17">stmt</name><op:operator pos:line="188" pos:column="21">.</op:operator><name pos:line="188" pos:column="22">close</name></name><argument_list pos:line="188" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="189" pos:column="17">audit</name><op:operator pos:line="189" pos:column="22">.</op:operator><name pos:line="189" pos:column="23">updateAuditTrail</name></name><argument_list pos:line="189" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="189" pos:column="40">"xinco_core_node"</lit:literal></expr></argument>,<argument><expr><op:operator pos:line="189" pos:column="58">new</op:operator> <name><name pos:line="189" pos:column="62">String</name> <index pos:line="189" pos:column="69">[]</index></name> <block pos:line="189" pos:column="72">{<expr><lit:literal type="string" pos:line="189" pos:column="73">"id ="</lit:literal><op:operator pos:line="189" pos:column="79">+</op:operator><call><name pos:line="189" pos:column="80">getId</name><argument_list pos:line="189" pos:column="85">()</argument_list></call></expr>}</block></expr></argument>,
                        <argument><expr><name pos:line="190" pos:column="25">DBM</name></expr></argument>,<argument><expr><lit:literal type="string" pos:line="190" pos:column="29">"audit.general.delete"</lit:literal></expr></argument>,<argument><expr><name pos:line="190" pos:column="52">userID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="191" pos:column="17">stmt</name> <op:operator pos:line="191" pos:column="22">=</op:operator> <call><name><name pos:line="191" pos:column="24">DBM</name><op:operator pos:line="191" pos:column="27">.</op:operator><name pos:line="191" pos:column="28">con</name><op:operator pos:line="191" pos:column="31">.</op:operator><name pos:line="191" pos:column="32">createStatement</name></name><argument_list pos:line="191" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="192" pos:column="17">stmt</name><op:operator pos:line="192" pos:column="21">.</op:operator><name pos:line="192" pos:column="22">executeUpdate</name></name><argument_list pos:line="192" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="192" pos:column="36">"DELETE FROM xinco_core_node WHERE id="</lit:literal> <op:operator pos:line="192" pos:column="76">+</op:operator> <call><name pos:line="192" pos:column="78">getId</name><argument_list pos:line="192" pos:column="83">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="193" pos:column="17">stmt</name><op:operator pos:line="193" pos:column="21">.</op:operator><name pos:line="193" pos:column="22">close</name></name><argument_list pos:line="193" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <expr_stmt><expr><call><name><name pos:line="195" pos:column="13">DBM</name><op:operator pos:line="195" pos:column="16">.</op:operator><name pos:line="195" pos:column="17">con</name><op:operator pos:line="195" pos:column="20">.</op:operator><name pos:line="195" pos:column="21">commit</name></name><argument_list pos:line="195" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
        }</block> <catch pos:line="196" pos:column="11">catch <parameter_list pos:line="196" pos:column="17">(<param><decl><type><name pos:line="196" pos:column="18">Exception</name></type> <name pos:line="196" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="196" pos:column="31">{
            <try pos:line="197" pos:column="13">try <block pos:line="197" pos:column="17">{
                <expr_stmt><expr><call><name><name pos:line="198" pos:column="17">DBM</name><op:operator pos:line="198" pos:column="20">.</op:operator><name pos:line="198" pos:column="21">con</name><op:operator pos:line="198" pos:column="24">.</op:operator><name pos:line="198" pos:column="25">rollback</name></name><argument_list pos:line="198" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            }</block> <catch pos:line="199" pos:column="15">catch <parameter_list pos:line="199" pos:column="21">(<param><decl><type><name pos:line="199" pos:column="22">Exception</name></type> <name pos:line="199" pos:column="32">erollback</name></decl></param>)</parameter_list> <block pos:line="199" pos:column="43">{
            }</block></catch></try>
            <throw pos:line="201" pos:column="13">throw <expr><op:operator pos:line="201" pos:column="19">new</op:operator> <call><name pos:line="201" pos:column="23">XincoException</name><argument_list pos:line="201" pos:column="37">()</argument_list></call></expr>;</throw>
        }</block></catch></try>
        
    }</block></function>
    
    <function><type><specifier pos:line="206" pos:column="5">public</specifier> <name pos:line="206" pos:column="12">void</name></type> <name pos:line="206" pos:column="17">fillXincoCoreNodes</name><parameter_list pos:line="206" pos:column="35">(<param><decl><type><name pos:line="206" pos:column="36">XincoDBManager</name></type> <name pos:line="206" pos:column="51">DBM</name></decl></param>)</parameter_list> <block pos:line="206" pos:column="56">{
        
        <try pos:line="208" pos:column="9">try <block pos:line="208" pos:column="13">{
            
            <decl_stmt><decl><type><name pos:line="210" pos:column="13">Statement</name></type> <name pos:line="210" pos:column="23">stmt</name> <init pos:line="210" pos:column="28">= <expr><call><name><name pos:line="210" pos:column="30">DBM</name><op:operator pos:line="210" pos:column="33">.</op:operator><name pos:line="210" pos:column="34">con</name><op:operator pos:line="210" pos:column="37">.</op:operator><name pos:line="210" pos:column="38">createStatement</name></name><argument_list pos:line="210" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="211" pos:column="13">ResultSet</name></type> <name pos:line="211" pos:column="23">rs</name> <init pos:line="211" pos:column="26">= <expr><call><name><name pos:line="211" pos:column="28">stmt</name><op:operator pos:line="211" pos:column="32">.</op:operator><name pos:line="211" pos:column="33">executeQuery</name></name><argument_list pos:line="211" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="211" pos:column="46">"SELECT * FROM xinco_core_node WHERE xinco_core_node_id = "</lit:literal> <op:operator pos:line="211" pos:column="106">+</op:operator> <call><name pos:line="211" pos:column="108">getId</name><argument_list pos:line="211" pos:column="113">()</argument_list></call> <op:operator pos:line="211" pos:column="116">+</op:operator> <lit:literal type="string" pos:line="211" pos:column="118">" ORDER BY designation"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            
            <while pos:line="213" pos:column="13">while <condition pos:line="213" pos:column="19">(<expr><call><name><name pos:line="213" pos:column="20">rs</name><op:operator pos:line="213" pos:column="22">.</op:operator><name pos:line="213" pos:column="23">next</name></name><argument_list pos:line="213" pos:column="27">()</argument_list></call></expr>)</condition> <block pos:line="213" pos:column="31">{
                <expr_stmt><expr><call><name pos:line="214" pos:column="17">getXinco_core_nodes</name><argument_list pos:line="214" pos:column="36">()</argument_list></call><op:operator pos:line="214" pos:column="38">.</op:operator><call><name pos:line="214" pos:column="39">addElement</name><argument_list pos:line="214" pos:column="49">(<argument><expr><op:operator pos:line="214" pos:column="50">new</op:operator> <call><name pos:line="214" pos:column="54">XincoCoreNodeServer</name><argument_list pos:line="214" pos:column="73">(<argument><expr><call><name><name pos:line="214" pos:column="74">rs</name><op:operator pos:line="214" pos:column="76">.</op:operator><name pos:line="214" pos:column="77">getInt</name></name><argument_list pos:line="214" pos:column="83">(<argument><expr><lit:literal type="string" pos:line="214" pos:column="84">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="214" pos:column="91">rs</name><op:operator pos:line="214" pos:column="93">.</op:operator><name pos:line="214" pos:column="94">getInt</name></name><argument_list pos:line="214" pos:column="100">(<argument><expr><lit:literal type="string" pos:line="214" pos:column="101">"xinco_core_node_id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="214" pos:column="124">rs</name><op:operator pos:line="214" pos:column="126">.</op:operator><name pos:line="214" pos:column="127">getInt</name></name><argument_list pos:line="214" pos:column="133">(<argument><expr><lit:literal type="string" pos:line="214" pos:column="134">"xinco_core_language_id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="214" pos:column="161">rs</name><op:operator pos:line="214" pos:column="163">.</op:operator><name pos:line="214" pos:column="164">getString</name></name><argument_list pos:line="214" pos:column="173">(<argument><expr><lit:literal type="string" pos:line="214" pos:column="174">"designation"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="214" pos:column="190">rs</name><op:operator pos:line="214" pos:column="192">.</op:operator><name pos:line="214" pos:column="193">getInt</name></name><argument_list pos:line="214" pos:column="199">(<argument><expr><lit:literal type="string" pos:line="214" pos:column="200">"status_number"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="214" pos:column="218">DBM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></while>
            
            <expr_stmt><expr><call><name><name pos:line="217" pos:column="13">stmt</name><op:operator pos:line="217" pos:column="17">.</op:operator><name pos:line="217" pos:column="18">close</name></name><argument_list pos:line="217" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
            
        }</block> <catch pos:line="219" pos:column="11">catch <parameter_list pos:line="219" pos:column="17">(<param><decl><type><name pos:line="219" pos:column="18">Exception</name></type> <name pos:line="219" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="219" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="220" pos:column="13">getXinco_core_nodes</name><argument_list pos:line="220" pos:column="32">()</argument_list></call><op:operator pos:line="220" pos:column="34">.</op:operator><call><name pos:line="220" pos:column="35">removeAllElements</name><argument_list pos:line="220" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
        }</block></catch></try>
        
    }</block></function>
    
    <function><type><specifier pos:line="225" pos:column="5">public</specifier> <name pos:line="225" pos:column="12">void</name></type> <name pos:line="225" pos:column="17">fillXincoCoreData</name><parameter_list pos:line="225" pos:column="34">(<param><decl><type><name pos:line="225" pos:column="35">XincoDBManager</name></type> <name pos:line="225" pos:column="50">DBM</name></decl></param>)</parameter_list> <block pos:line="225" pos:column="55">{
        
        <try pos:line="227" pos:column="9">try <block pos:line="227" pos:column="13">{
            
            <decl_stmt><decl><type><name pos:line="229" pos:column="13">Statement</name></type> <name pos:line="229" pos:column="23">stmt</name> <init pos:line="229" pos:column="28">= <expr><call><name><name pos:line="229" pos:column="30">DBM</name><op:operator pos:line="229" pos:column="33">.</op:operator><name pos:line="229" pos:column="34">con</name><op:operator pos:line="229" pos:column="37">.</op:operator><name pos:line="229" pos:column="38">createStatement</name></name><argument_list pos:line="229" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="230" pos:column="13">ResultSet</name></type> <name pos:line="230" pos:column="23">rs</name> <init pos:line="230" pos:column="26">= <expr><call><name><name pos:line="230" pos:column="28">stmt</name><op:operator pos:line="230" pos:column="32">.</op:operator><name pos:line="230" pos:column="33">executeQuery</name></name><argument_list pos:line="230" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="230" pos:column="46">"SELECT * FROM xinco_core_data WHERE xinco_core_node_id = "</lit:literal> <op:operator pos:line="230" pos:column="106">+</op:operator> <call><name pos:line="230" pos:column="108">getId</name><argument_list pos:line="230" pos:column="113">()</argument_list></call> <op:operator pos:line="230" pos:column="116">+</op:operator> <lit:literal type="string" pos:line="230" pos:column="118">" ORDER BY designation"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            
            <while pos:line="232" pos:column="13">while <condition pos:line="232" pos:column="19">(<expr><call><name><name pos:line="232" pos:column="20">rs</name><op:operator pos:line="232" pos:column="22">.</op:operator><name pos:line="232" pos:column="23">next</name></name><argument_list pos:line="232" pos:column="27">()</argument_list></call></expr>)</condition> <block pos:line="232" pos:column="31">{
                <expr_stmt><expr><call><name pos:line="233" pos:column="17">getXinco_core_data</name><argument_list pos:line="233" pos:column="35">()</argument_list></call><op:operator pos:line="233" pos:column="37">.</op:operator><call><name pos:line="233" pos:column="38">addElement</name><argument_list pos:line="233" pos:column="48">(<argument><expr><op:operator pos:line="233" pos:column="49">new</op:operator> <call><name pos:line="233" pos:column="53">XincoCoreDataServer</name><argument_list pos:line="233" pos:column="72">(<argument><expr><call><name><name pos:line="233" pos:column="73">rs</name><op:operator pos:line="233" pos:column="75">.</op:operator><name pos:line="233" pos:column="76">getInt</name></name><argument_list pos:line="233" pos:column="82">(<argument><expr><lit:literal type="string" pos:line="233" pos:column="83">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="233" pos:column="90">rs</name><op:operator pos:line="233" pos:column="92">.</op:operator><name pos:line="233" pos:column="93">getInt</name></name><argument_list pos:line="233" pos:column="99">(<argument><expr><lit:literal type="string" pos:line="233" pos:column="100">"xinco_core_node_id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="233" pos:column="123">rs</name><op:operator pos:line="233" pos:column="125">.</op:operator><name pos:line="233" pos:column="126">getInt</name></name><argument_list pos:line="233" pos:column="132">(<argument><expr><lit:literal type="string" pos:line="233" pos:column="133">"xinco_core_language_id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="233" pos:column="160">rs</name><op:operator pos:line="233" pos:column="162">.</op:operator><name pos:line="233" pos:column="163">getInt</name></name><argument_list pos:line="233" pos:column="169">(<argument><expr><lit:literal type="string" pos:line="233" pos:column="170">"xinco_core_data_type_id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="233" pos:column="198">rs</name><op:operator pos:line="233" pos:column="200">.</op:operator><name pos:line="233" pos:column="201">getString</name></name><argument_list pos:line="233" pos:column="210">(<argument><expr><lit:literal type="string" pos:line="233" pos:column="211">"designation"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="233" pos:column="227">rs</name><op:operator pos:line="233" pos:column="229">.</op:operator><name pos:line="233" pos:column="230">getInt</name></name><argument_list pos:line="233" pos:column="236">(<argument><expr><lit:literal type="string" pos:line="233" pos:column="237">"status_number"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="233" pos:column="255">DBM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></while>
            
            <expr_stmt><expr><call><name><name pos:line="236" pos:column="13">stmt</name><op:operator pos:line="236" pos:column="17">.</op:operator><name pos:line="236" pos:column="18">close</name></name><argument_list pos:line="236" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
            
        }</block> <catch pos:line="238" pos:column="11">catch <parameter_list pos:line="238" pos:column="17">(<param><decl><type><name pos:line="238" pos:column="18">Exception</name></type> <name pos:line="238" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="238" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="239" pos:column="13">getXinco_core_data</name><argument_list pos:line="239" pos:column="31">()</argument_list></call><op:operator pos:line="239" pos:column="33">.</op:operator><call><name pos:line="239" pos:column="34">removeAllElements</name><argument_list pos:line="239" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
        }</block></catch></try>
        
    }</block></function>
    
    <function><type><specifier pos:line="244" pos:column="5">public</specifier> <specifier pos:line="244" pos:column="12">static</specifier> <name pos:line="244" pos:column="19">Vector</name></type> <name pos:line="244" pos:column="26">findXincoCoreNodes</name><parameter_list pos:line="244" pos:column="44">(<param><decl><type><name pos:line="244" pos:column="45">String</name></type> <name pos:line="244" pos:column="52">attrS</name></decl></param>, <param><decl><type><name pos:line="244" pos:column="59">int</name></type> <name pos:line="244" pos:column="63">attrLID</name></decl></param>, <param><decl><type><name pos:line="244" pos:column="72">XincoDBManager</name></type> <name pos:line="244" pos:column="87">DBM</name></decl></param>)</parameter_list> <block pos:line="244" pos:column="92">{
        
        <decl_stmt><decl><type><name pos:line="246" pos:column="9">Vector</name></type> <name pos:line="246" pos:column="16">nodes</name> <init pos:line="246" pos:column="22">= <expr><lit:literal type="null" pos:line="246" pos:column="24">null</lit:literal></expr></init></decl>;</decl_stmt>
        
        <try pos:line="248" pos:column="9">try <block pos:line="248" pos:column="13">{
            
            <decl_stmt><decl><type><name pos:line="250" pos:column="13">Statement</name></type> <name pos:line="250" pos:column="23">stmt</name> <init pos:line="250" pos:column="28">= <expr><call><name><name pos:line="250" pos:column="30">DBM</name><op:operator pos:line="250" pos:column="33">.</op:operator><name pos:line="250" pos:column="34">con</name><op:operator pos:line="250" pos:column="37">.</op:operator><name pos:line="250" pos:column="38">createStatement</name></name><argument_list pos:line="250" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="251" pos:column="13">ResultSet</name></type> <name pos:line="251" pos:column="23">rs</name> <init pos:line="251" pos:column="26">= <expr><call><name><name pos:line="251" pos:column="28">stmt</name><op:operator pos:line="251" pos:column="32">.</op:operator><name pos:line="251" pos:column="33">executeQuery</name></name><argument_list pos:line="251" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="251" pos:column="46">"SELECT * FROM xinco_core_node WHERE xinco_core_language_id = "</lit:literal> <op:operator pos:line="251" pos:column="110">+</op:operator> <name pos:line="251" pos:column="112">attrLID</name> <op:operator pos:line="251" pos:column="120">+</op:operator> <lit:literal type="string" pos:line="251" pos:column="122">" AND designation LIKE '"</lit:literal> <op:operator pos:line="251" pos:column="148">+</op:operator> <name pos:line="251" pos:column="150">attrS</name> <op:operator pos:line="251" pos:column="156">+</op:operator> <lit:literal type="string" pos:line="251" pos:column="158">"%' ORDER BY designation, xinco_core_language_id"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            
            <decl_stmt><decl><type><name pos:line="253" pos:column="13">int</name></type> <name pos:line="253" pos:column="17">i</name> <init pos:line="253" pos:column="19">= <expr><lit:literal type="number" pos:line="253" pos:column="21">0</lit:literal></expr></init></decl>;</decl_stmt>
            <while pos:line="254" pos:column="13">while <condition pos:line="254" pos:column="19">(<expr><call><name><name pos:line="254" pos:column="20">rs</name><op:operator pos:line="254" pos:column="22">.</op:operator><name pos:line="254" pos:column="23">next</name></name><argument_list pos:line="254" pos:column="27">()</argument_list></call></expr>)</condition> <block pos:line="254" pos:column="31">{
                <expr_stmt><expr><call><name><name pos:line="255" pos:column="17">nodes</name><op:operator pos:line="255" pos:column="22">.</op:operator><name pos:line="255" pos:column="23">addElement</name></name><argument_list pos:line="255" pos:column="33">(<argument><expr><op:operator pos:line="255" pos:column="34">new</op:operator> <call><name pos:line="255" pos:column="38">XincoCoreNodeServer</name><argument_list pos:line="255" pos:column="57">(<argument><expr><call><name><name pos:line="255" pos:column="58">rs</name><op:operator pos:line="255" pos:column="60">.</op:operator><name pos:line="255" pos:column="61">getInt</name></name><argument_list pos:line="255" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="255" pos:column="68">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="255" pos:column="75">rs</name><op:operator pos:line="255" pos:column="77">.</op:operator><name pos:line="255" pos:column="78">getInt</name></name><argument_list pos:line="255" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="255" pos:column="85">"xinco_core_node_id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="255" pos:column="108">rs</name><op:operator pos:line="255" pos:column="110">.</op:operator><name pos:line="255" pos:column="111">getInt</name></name><argument_list pos:line="255" pos:column="117">(<argument><expr><lit:literal type="string" pos:line="255" pos:column="118">"xinco_core_language_id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="255" pos:column="145">rs</name><op:operator pos:line="255" pos:column="147">.</op:operator><name pos:line="255" pos:column="148">getString</name></name><argument_list pos:line="255" pos:column="157">(<argument><expr><lit:literal type="string" pos:line="255" pos:column="158">"designation"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="255" pos:column="174">rs</name><op:operator pos:line="255" pos:column="176">.</op:operator><name pos:line="255" pos:column="177">getInt</name></name><argument_list pos:line="255" pos:column="183">(<argument><expr><lit:literal type="string" pos:line="255" pos:column="184">"status_number"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="255" pos:column="202">DBM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="256" pos:column="17">i</name><op:operator pos:line="256" pos:column="18">++</op:operator></expr>;</expr_stmt>
                <if pos:line="257" pos:column="17">if <condition pos:line="257" pos:column="20">(<expr><name pos:line="257" pos:column="21">i</name> <op:operator pos:line="257" pos:column="23">&gt;=</op:operator> <name><name pos:line="257" pos:column="26">DBM</name><op:operator pos:line="257" pos:column="29">.</op:operator><name pos:line="257" pos:column="30">config</name><op:operator pos:line="257" pos:column="36">.</op:operator><name pos:line="257" pos:column="37">MaxSearchResult</name></name></expr>)</condition><then pos:line="257" pos:column="53"> <block pos:line="257" pos:column="54">{
                    <break pos:line="258" pos:column="21">break;</break>
                }</block></then></if>
            }</block></while>
            
            <expr_stmt><expr><call><name><name pos:line="262" pos:column="13">stmt</name><op:operator pos:line="262" pos:column="17">.</op:operator><name pos:line="262" pos:column="18">close</name></name><argument_list pos:line="262" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
            
        }</block> <catch pos:line="264" pos:column="11">catch <parameter_list pos:line="264" pos:column="17">(<param><decl><type><name pos:line="264" pos:column="18">Exception</name></type> <name pos:line="264" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="264" pos:column="31">{
            <expr_stmt><expr><call><name><name pos:line="265" pos:column="13">nodes</name><op:operator pos:line="265" pos:column="18">.</op:operator><name pos:line="265" pos:column="19">removeAllElements</name></name><argument_list pos:line="265" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
        }</block></catch></try>
        
        <return pos:line="268" pos:column="9">return <expr><name pos:line="268" pos:column="16">nodes</name></expr>;</return>
        
    }</block></function>
    
    <function><type><specifier pos:line="272" pos:column="5">public</specifier> <specifier pos:line="272" pos:column="12">static</specifier> <name pos:line="272" pos:column="19">Vector</name></type> <name pos:line="272" pos:column="26">getXincoCoreNodeParents</name><parameter_list pos:line="272" pos:column="49">(<param><decl><type><name pos:line="272" pos:column="50">int</name></type> <name pos:line="272" pos:column="54">attrID</name></decl></param>, <param><decl><type><name pos:line="272" pos:column="62">XincoDBManager</name></type> <name pos:line="272" pos:column="77">DBM</name></decl></param>)</parameter_list> <block pos:line="272" pos:column="82">{
        
        <decl_stmt><decl><type><name pos:line="274" pos:column="9">Vector</name></type> <name pos:line="274" pos:column="16">nodes</name> <init pos:line="274" pos:column="22">= <expr><op:operator pos:line="274" pos:column="24">new</op:operator> <call><name pos:line="274" pos:column="28">Vector</name><argument_list pos:line="274" pos:column="34">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="275" pos:column="9">int</name></type> <name pos:line="275" pos:column="13">id</name></decl>;</decl_stmt>
        
        <try pos:line="277" pos:column="9">try <block pos:line="277" pos:column="13">{
            
            <expr_stmt><expr><name pos:line="279" pos:column="13">id</name> <op:operator pos:line="279" pos:column="16">=</op:operator> <name pos:line="279" pos:column="18">attrID</name></expr>;</expr_stmt>
            
            <decl_stmt><decl><type><name pos:line="281" pos:column="13">Statement</name></type> <name pos:line="281" pos:column="23">stmt</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="282" pos:column="13">ResultSet</name></type> <name pos:line="282" pos:column="23">rs</name></decl>;</decl_stmt>
            
            <while pos:line="284" pos:column="13">while <condition pos:line="284" pos:column="19">(<expr><name pos:line="284" pos:column="20">id</name> <op:operator pos:line="284" pos:column="23">&gt;</op:operator> <lit:literal type="number" pos:line="284" pos:column="25">0</lit:literal></expr>)</condition> <block pos:line="284" pos:column="28">{
                <expr_stmt><expr><name pos:line="285" pos:column="17">stmt</name> <op:operator pos:line="285" pos:column="22">=</op:operator> <call><name><name pos:line="285" pos:column="24">DBM</name><op:operator pos:line="285" pos:column="27">.</op:operator><name pos:line="285" pos:column="28">con</name><op:operator pos:line="285" pos:column="31">.</op:operator><name pos:line="285" pos:column="32">createStatement</name></name><argument_list pos:line="285" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="286" pos:column="17">rs</name> <op:operator pos:line="286" pos:column="20">=</op:operator> <call><name><name pos:line="286" pos:column="22">stmt</name><op:operator pos:line="286" pos:column="26">.</op:operator><name pos:line="286" pos:column="27">executeQuery</name></name><argument_list pos:line="286" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="286" pos:column="40">"SELECT * FROM xinco_core_node WHERE id = "</lit:literal> <op:operator pos:line="286" pos:column="84">+</op:operator> <name pos:line="286" pos:column="86">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <while pos:line="287" pos:column="17">while <condition pos:line="287" pos:column="23">(<expr><call><name><name pos:line="287" pos:column="24">rs</name><op:operator pos:line="287" pos:column="26">.</op:operator><name pos:line="287" pos:column="27">next</name></name><argument_list pos:line="287" pos:column="31">()</argument_list></call></expr>)</condition> <block pos:line="287" pos:column="35">{
                    <expr_stmt><expr><call><name><name pos:line="288" pos:column="21">nodes</name><op:operator pos:line="288" pos:column="26">.</op:operator><name pos:line="288" pos:column="27">addElement</name></name><argument_list pos:line="288" pos:column="37">(<argument><expr><op:operator pos:line="288" pos:column="38">new</op:operator> <call><name pos:line="288" pos:column="42">XincoCoreNodeServer</name><argument_list pos:line="288" pos:column="61">(<argument><expr><call><name><name pos:line="288" pos:column="62">rs</name><op:operator pos:line="288" pos:column="64">.</op:operator><name pos:line="288" pos:column="65">getInt</name></name><argument_list pos:line="288" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="288" pos:column="72">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="288" pos:column="79">DBM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if pos:line="289" pos:column="21">if <condition pos:line="289" pos:column="24">(<expr><name pos:line="289" pos:column="25">id</name> <op:operator pos:line="289" pos:column="28">&gt;</op:operator> <lit:literal type="number" pos:line="289" pos:column="30">1</lit:literal></expr>)</condition><then pos:line="289" pos:column="32"> <block pos:line="289" pos:column="33">{
                        <expr_stmt><expr><name pos:line="290" pos:column="25">id</name> <op:operator pos:line="290" pos:column="28">=</op:operator> <call><name><name pos:line="290" pos:column="30">rs</name><op:operator pos:line="290" pos:column="32">.</op:operator><name pos:line="290" pos:column="33">getInt</name></name><argument_list pos:line="290" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="290" pos:column="40">"xinco_core_node_id"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then> <else pos:line="291" pos:column="23">else <block pos:line="291" pos:column="28">{
                        <expr_stmt><expr><name pos:line="292" pos:column="25">id</name> <op:operator pos:line="292" pos:column="28">=</op:operator> <lit:literal type="number" pos:line="292" pos:column="30">0</lit:literal></expr>;</expr_stmt>
                    }</block></else></if>
                }</block></while>
                <expr_stmt><expr><call><name><name pos:line="295" pos:column="17">stmt</name><op:operator pos:line="295" pos:column="21">.</op:operator><name pos:line="295" pos:column="22">close</name></name><argument_list pos:line="295" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
            }</block></while>
            
        }</block> <catch pos:line="298" pos:column="11">catch <parameter_list pos:line="298" pos:column="17">(<param><decl><type><name pos:line="298" pos:column="18">Exception</name></type> <name pos:line="298" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="298" pos:column="31">{
            <expr_stmt><expr><call><name><name pos:line="299" pos:column="13">nodes</name><op:operator pos:line="299" pos:column="18">.</op:operator><name pos:line="299" pos:column="19">removeAllElements</name></name><argument_list pos:line="299" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
        }</block></catch></try>
        
        <return pos:line="302" pos:column="9">return <expr><name pos:line="302" pos:column="16">nodes</name></expr>;</return>
        
    }</block></function>
    
}</block></class>
</unit>
