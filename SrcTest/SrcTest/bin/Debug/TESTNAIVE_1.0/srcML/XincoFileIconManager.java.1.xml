<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\xinco\src\com\bluecubs\xinco\tools\XincoFileIconManager.java" pos:tabs="8"><comment type="block" format="javadoc" pos:line="1" pos:column="1">/**
 *Copyright 2007 blueCubs.com
 *
 *Licensed under the Apache License, Version 2.0 (the "License");
 *you may not use this file except in compliance with the License.
 *You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 *Unless required by applicable law or agreed to in writing, software
 *distributed under the License is distributed on an "AS IS" BASIS,
 *WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *See the License for the specific language governing permissions and
 *limitations under the License.
 *
 *************************************************************
 * This project supports the blueCubs vision of giving back
 * to the community in exchange for free software!
 * More information on: http://www.bluecubs.org
 *************************************************************
 *
 * Name:            XincoFileIconManager
 *
 * Description:     XincoFileIconManager
 *
 * Original Author: Javier A. Ortiz
 * Date:            February 16, 2007, 12:48 PM
 *
 * Modifications:
 *
 * Who?             When?             What?
 *
 *
 *************************************************************
 */</comment>

<package pos:line="37" pos:column="1">package <name><name pos:line="37" pos:column="9">com</name><op:operator pos:line="37" pos:column="12">.</op:operator><name pos:line="37" pos:column="13">bluecubs</name><op:operator pos:line="37" pos:column="21">.</op:operator><name pos:line="37" pos:column="22">xinco</name><op:operator pos:line="37" pos:column="27">.</op:operator><name pos:line="37" pos:column="28">tools</name></name>;</package>

<import pos:line="39" pos:column="1">import <name><name pos:line="39" pos:column="8">java</name><op:operator pos:line="39" pos:column="12">.</op:operator><name pos:line="39" pos:column="13">io</name><op:operator pos:line="39" pos:column="15">.</op:operator><name pos:line="39" pos:column="16">File</name></name>;</import>
<import pos:line="40" pos:column="1">import <name><name pos:line="40" pos:column="8">java</name><op:operator pos:line="40" pos:column="12">.</op:operator><name pos:line="40" pos:column="13">io</name><op:operator pos:line="40" pos:column="15">.</op:operator><name pos:line="40" pos:column="16">IOException</name></name>;</import>
<import pos:line="41" pos:column="1">import <name><name pos:line="41" pos:column="8">javax</name><op:operator pos:line="41" pos:column="13">.</op:operator><name pos:line="41" pos:column="14">swing</name><op:operator pos:line="41" pos:column="19">.</op:operator><name pos:line="41" pos:column="20">Icon</name></name>;</import>
<import pos:line="42" pos:column="1">import <name><name pos:line="42" pos:column="8">javax</name><op:operator pos:line="42" pos:column="13">.</op:operator><name pos:line="42" pos:column="14">swing</name><op:operator pos:line="42" pos:column="19">.</op:operator><name pos:line="42" pos:column="20">filechooser</name><op:operator pos:line="42" pos:column="31">.</op:operator><name pos:line="42" pos:column="32">FileSystemView</name></name>;</import>

<comment type="block" format="javadoc" pos:line="44" pos:column="1">/**
 *
 * @author Javier A. Ortiz
 */</comment>
<class><specifier pos:line="48" pos:column="1">public</specifier> class <name pos:line="48" pos:column="14">XincoFileIconManager</name> <block pos:line="48" pos:column="35">{
    <decl_stmt><decl><type><specifier pos:line="49" pos:column="5">private</specifier> <name pos:line="49" pos:column="13">File</name></type> <name pos:line="49" pos:column="18">file</name> <init pos:line="49" pos:column="23">= <expr><lit:literal type="null" pos:line="49" pos:column="25">null</lit:literal></expr></init></decl>;</decl_stmt>
    <comment type="block" format="javadoc" pos:line="50" pos:column="5">/** Creates a new instance of XincoFileIconManager */</comment>
    <constructor><specifier pos:line="51" pos:column="5">public</specifier> <name pos:line="51" pos:column="12">XincoFileIconManager</name><parameter_list pos:line="51" pos:column="32">()</parameter_list> <block pos:line="51" pos:column="35">{
    }</block></constructor>
    
    <function><type><specifier pos:line="54" pos:column="5">public</specifier> <name pos:line="54" pos:column="12">Icon</name></type> <name pos:line="54" pos:column="17">getIcon</name><parameter_list pos:line="54" pos:column="24">(<param><decl><type><name pos:line="54" pos:column="25">String</name></type> <name pos:line="54" pos:column="32">extension</name></decl></param>)</parameter_list><block pos:line="54" pos:column="42">{
        <if pos:line="55" pos:column="9">if<condition pos:line="55" pos:column="11">(<expr><name pos:line="55" pos:column="12">extension</name> <op:operator pos:line="55" pos:column="22">==</op:operator> <lit:literal type="null" pos:line="55" pos:column="25">null</lit:literal></expr>)</condition><then pos:line="55" pos:column="30">
            <return pos:line="56" pos:column="13">return <expr><lit:literal type="null" pos:line="56" pos:column="20">null</lit:literal></expr>;</return></then></if>
        <if pos:line="57" pos:column="9">if<condition pos:line="57" pos:column="11">(<expr><call><name><name pos:line="57" pos:column="12">extension</name><op:operator pos:line="57" pos:column="21">.</op:operator><name pos:line="57" pos:column="22">indexOf</name></name><argument_list pos:line="57" pos:column="29">(<argument><expr><lit:literal type="char" pos:line="57" pos:column="30">'.'</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="57" pos:column="34">&gt;</op:operator><op:operator pos:line="57" pos:column="35">-</op:operator><lit:literal type="number" pos:line="57" pos:column="36">1</lit:literal></expr>)</condition><then pos:line="57" pos:column="38">
            <expr_stmt><expr><name pos:line="58" pos:column="13">extension</name><op:operator pos:line="58" pos:column="22">=</op:operator><call><name><name pos:line="58" pos:column="23">extension</name><op:operator pos:line="58" pos:column="32">.</op:operator><name pos:line="58" pos:column="33">substring</name></name><argument_list pos:line="58" pos:column="42">(<argument><expr><call><name><name pos:line="58" pos:column="43">extension</name><op:operator pos:line="58" pos:column="52">.</op:operator><name pos:line="58" pos:column="53">lastIndexOf</name></name><argument_list pos:line="58" pos:column="64">(<argument><expr><lit:literal type="char" pos:line="58" pos:column="65">'.'</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="58" pos:column="69">+</op:operator><lit:literal type="number" pos:line="58" pos:column="70">1</lit:literal></expr></argument>,<argument><expr><call><name><name pos:line="58" pos:column="72">extension</name><op:operator pos:line="58" pos:column="81">.</op:operator><name pos:line="58" pos:column="82">length</name></name><argument_list pos:line="58" pos:column="88">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
        <if pos:line="59" pos:column="9">if<condition pos:line="59" pos:column="11">(<expr><call><name><name pos:line="59" pos:column="12">extension</name><op:operator pos:line="59" pos:column="21">.</op:operator><name pos:line="59" pos:column="22">length</name></name><argument_list pos:line="59" pos:column="28">()</argument_list></call><op:operator pos:line="59" pos:column="30">&lt;</op:operator><lit:literal type="number" pos:line="59" pos:column="31">3</lit:literal></expr>)</condition><then pos:line="59" pos:column="33">
            <return pos:line="60" pos:column="13">return <expr><lit:literal type="null" pos:line="60" pos:column="20">null</lit:literal></expr>;</return></then></if>
        <decl_stmt><decl><type><name pos:line="61" pos:column="9">Icon</name></type> <name pos:line="61" pos:column="14">icon</name><init pos:line="61" pos:column="18">=<expr><lit:literal type="null" pos:line="61" pos:column="19">null</lit:literal></expr></init></decl>;</decl_stmt>
        <try pos:line="62" pos:column="9">try <block pos:line="62" pos:column="13">{
            <if pos:line="63" pos:column="13">if<condition pos:line="63" pos:column="15">(<expr><call><name><name pos:line="63" pos:column="16">extension</name><op:operator pos:line="63" pos:column="25">.</op:operator><name pos:line="63" pos:column="26">length</name></name><argument_list pos:line="63" pos:column="32">()</argument_list></call><op:operator pos:line="63" pos:column="34">&lt;</op:operator><lit:literal type="number" pos:line="63" pos:column="35">3</lit:literal></expr>)</condition><then pos:line="63" pos:column="37">
                <return pos:line="64" pos:column="17">return <expr><lit:literal type="null" pos:line="64" pos:column="24">null</lit:literal></expr>;</return></then></if>
            <comment type="line" pos:line="65" pos:column="13">//Create a temporary file with the specified extension</comment>
            <expr_stmt><expr><name pos:line="66" pos:column="13">file</name> <op:operator pos:line="66" pos:column="18">=</op:operator> <call><name><name pos:line="66" pos:column="20">File</name><op:operator pos:line="66" pos:column="24">.</op:operator><name pos:line="66" pos:column="25">createTempFile</name></name><argument_list pos:line="66" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="66" pos:column="40">"icon"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="66" pos:column="48">"."</lit:literal> <op:operator pos:line="66" pos:column="52">+</op:operator> <name pos:line="66" pos:column="54">extension</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            
            <decl_stmt><decl><type><name pos:line="68" pos:column="13">FileSystemView</name></type> <name pos:line="68" pos:column="28">view</name> <init pos:line="68" pos:column="33">= <expr><call><name><name pos:line="68" pos:column="35">FileSystemView</name><op:operator pos:line="68" pos:column="49">.</op:operator><name pos:line="68" pos:column="50">getFileSystemView</name></name><argument_list pos:line="68" pos:column="67">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name pos:line="69" pos:column="13">icon</name> <op:operator pos:line="69" pos:column="18">=</op:operator> <call><name><name pos:line="69" pos:column="20">view</name><op:operator pos:line="69" pos:column="24">.</op:operator><name pos:line="69" pos:column="25">getSystemIcon</name></name><argument_list pos:line="69" pos:column="38">(<argument><expr><name pos:line="69" pos:column="39">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            
            <comment type="line" pos:line="71" pos:column="13">//Delete the temporary file</comment>
            <expr_stmt><expr><call><name><name pos:line="72" pos:column="13">file</name><op:operator pos:line="72" pos:column="17">.</op:operator><name pos:line="72" pos:column="18">delete</name></name><argument_list pos:line="72" pos:column="24">()</argument_list></call></expr>;</expr_stmt>
        }</block> <catch pos:line="73" pos:column="11">catch <parameter_list pos:line="73" pos:column="17">(<param><decl><type><name pos:line="73" pos:column="18">IOException</name></type> <name pos:line="73" pos:column="30">ioe</name></decl></param>)</parameter_list> <block pos:line="73" pos:column="35">{
            <return pos:line="74" pos:column="13">return <expr><lit:literal type="null" pos:line="74" pos:column="20">null</lit:literal></expr>;</return>
        }</block></catch></try>
        <return pos:line="76" pos:column="9">return <expr><name pos:line="76" pos:column="16">icon</name></expr>;</return>
    }</block></function>
}</block></class>
</unit>
