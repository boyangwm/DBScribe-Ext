<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\UMAS\src\com\umas\frontend\CourseExamsUI.java" pos:tabs="8"><package pos:line="1" pos:column="1">package <name><name pos:line="1" pos:column="9">com</name><op:operator pos:line="1" pos:column="12">.</op:operator><name pos:line="1" pos:column="13">umas</name><op:operator pos:line="1" pos:column="17">.</op:operator><name pos:line="1" pos:column="18">frontend</name></name>;</package>


<import pos:line="4" pos:column="1">import <name><name pos:line="4" pos:column="8">java</name><op:operator pos:line="4" pos:column="12">.</op:operator><name pos:line="4" pos:column="13">awt</name><op:operator pos:line="4" pos:column="16">.</op:operator><name pos:line="4" pos:column="17">BorderLayout</name></name>;</import>
<import pos:line="5" pos:column="1">import <name><name pos:line="5" pos:column="8">java</name><op:operator pos:line="5" pos:column="12">.</op:operator><name pos:line="5" pos:column="13">awt</name><op:operator pos:line="5" pos:column="16">.</op:operator><name pos:line="5" pos:column="17">EventQueue</name></name>;</import>
<import pos:line="6" pos:column="1">import <name><name pos:line="6" pos:column="8">java</name><op:operator pos:line="6" pos:column="12">.</op:operator><name pos:line="6" pos:column="13">awt</name><op:operator pos:line="6" pos:column="16">.</op:operator><name pos:line="6" pos:column="17">FlowLayout</name></name>;</import>
<import pos:line="7" pos:column="1">import <name><name pos:line="7" pos:column="8">java</name><op:operator pos:line="7" pos:column="12">.</op:operator><name pos:line="7" pos:column="13">awt</name><op:operator pos:line="7" pos:column="16">.</op:operator><name pos:line="7" pos:column="17">GridLayout</name></name>;</import>
<import pos:line="8" pos:column="1">import <name><name pos:line="8" pos:column="8">java</name><op:operator pos:line="8" pos:column="12">.</op:operator><name pos:line="8" pos:column="13">lang</name><op:operator pos:line="8" pos:column="17">.</op:operator><name pos:line="8" pos:column="18">reflect</name><op:operator pos:line="8" pos:column="25">.</op:operator><name pos:line="8" pos:column="26">Array</name></name>;</import>
<import pos:line="9" pos:column="1">import <name><name pos:line="9" pos:column="8">java</name><op:operator pos:line="9" pos:column="12">.</op:operator><name pos:line="9" pos:column="13">util</name><op:operator pos:line="9" pos:column="17">.</op:operator><name pos:line="9" pos:column="18">ArrayList</name></name>;</import>
<import pos:line="10" pos:column="1">import <name><name pos:line="10" pos:column="8">java</name><op:operator pos:line="10" pos:column="12">.</op:operator><name pos:line="10" pos:column="13">util</name><op:operator pos:line="10" pos:column="17">.</op:operator><name pos:line="10" pos:column="18">Collections</name></name>;</import>
<import pos:line="11" pos:column="1">import <name><name pos:line="11" pos:column="8">java</name><op:operator pos:line="11" pos:column="12">.</op:operator><name pos:line="11" pos:column="13">util</name><op:operator pos:line="11" pos:column="17">.</op:operator><name pos:line="11" pos:column="18">HashMap</name></name>;</import>
<import pos:line="12" pos:column="1">import <name><name pos:line="12" pos:column="8">java</name><op:operator pos:line="12" pos:column="12">.</op:operator><name pos:line="12" pos:column="13">util</name><op:operator pos:line="12" pos:column="17">.</op:operator><name pos:line="12" pos:column="18">Iterator</name></name>;</import>
<import pos:line="13" pos:column="1">import <name><name pos:line="13" pos:column="8">java</name><op:operator pos:line="13" pos:column="12">.</op:operator><name pos:line="13" pos:column="13">util</name><op:operator pos:line="13" pos:column="17">.</op:operator><name pos:line="13" pos:column="18">LinkedHashSet</name></name>;</import>
<import pos:line="14" pos:column="1">import <name><name pos:line="14" pos:column="8">java</name><op:operator pos:line="14" pos:column="12">.</op:operator><name pos:line="14" pos:column="13">util</name><op:operator pos:line="14" pos:column="17">.</op:operator><name pos:line="14" pos:column="18">List</name></name>;</import>
<import pos:line="15" pos:column="1">import <name><name pos:line="15" pos:column="8">java</name><op:operator pos:line="15" pos:column="12">.</op:operator><name pos:line="15" pos:column="13">util</name><op:operator pos:line="15" pos:column="17">.</op:operator><name pos:line="15" pos:column="18">Set</name></name>;</import>
<import pos:line="16" pos:column="1">import <name><name pos:line="16" pos:column="8">java</name><op:operator pos:line="16" pos:column="12">.</op:operator><name pos:line="16" pos:column="13">util</name><op:operator pos:line="16" pos:column="17">.</op:operator><name pos:line="16" pos:column="18">Timer</name></name>;</import>
<import pos:line="17" pos:column="1">import <name><name pos:line="17" pos:column="8">java</name><op:operator pos:line="17" pos:column="12">.</op:operator><name pos:line="17" pos:column="13">util</name><op:operator pos:line="17" pos:column="17">.</op:operator><name pos:line="17" pos:column="18">TimerTask</name></name>;</import>

<import pos:line="19" pos:column="1">import <name><name pos:line="19" pos:column="8">javax</name><op:operator pos:line="19" pos:column="13">.</op:operator><name pos:line="19" pos:column="14">swing</name><op:operator pos:line="19" pos:column="19">.</op:operator><name pos:line="19" pos:column="20">JButton</name></name>;</import>
<import pos:line="20" pos:column="1">import <name><name pos:line="20" pos:column="8">javax</name><op:operator pos:line="20" pos:column="13">.</op:operator><name pos:line="20" pos:column="14">swing</name><op:operator pos:line="20" pos:column="19">.</op:operator><name pos:line="20" pos:column="20">JFrame</name></name>;</import>
<import pos:line="21" pos:column="1">import <name><name pos:line="21" pos:column="8">javax</name><op:operator pos:line="21" pos:column="13">.</op:operator><name pos:line="21" pos:column="14">swing</name><op:operator pos:line="21" pos:column="19">.</op:operator><name pos:line="21" pos:column="20">JPanel</name></name>;</import>
<import pos:line="22" pos:column="1">import <name><name pos:line="22" pos:column="8">javax</name><op:operator pos:line="22" pos:column="13">.</op:operator><name pos:line="22" pos:column="14">swing</name><op:operator pos:line="22" pos:column="19">.</op:operator><name pos:line="22" pos:column="20">border</name><op:operator pos:line="22" pos:column="26">.</op:operator><name pos:line="22" pos:column="27">EmptyBorder</name></name>;</import>
<import pos:line="23" pos:column="1">import <name><name pos:line="23" pos:column="8">javax</name><op:operator pos:line="23" pos:column="13">.</op:operator><name pos:line="23" pos:column="14">swing</name><op:operator pos:line="23" pos:column="19">.</op:operator><name pos:line="23" pos:column="20">JOptionPane</name></name>;</import>
<import pos:line="24" pos:column="1">import <name><name pos:line="24" pos:column="8">javax</name><op:operator pos:line="24" pos:column="13">.</op:operator><name pos:line="24" pos:column="14">swing</name><op:operator pos:line="24" pos:column="19">.</op:operator><name pos:line="24" pos:column="20">JTabbedPane</name></name>;</import>
<import pos:line="25" pos:column="1">import <name><name pos:line="25" pos:column="8">javax</name><op:operator pos:line="25" pos:column="13">.</op:operator><name pos:line="25" pos:column="14">swing</name><op:operator pos:line="25" pos:column="19">.</op:operator><name pos:line="25" pos:column="20">JLabel</name></name>;</import>
<import pos:line="26" pos:column="1">import <name><name pos:line="26" pos:column="8">javax</name><op:operator pos:line="26" pos:column="13">.</op:operator><name pos:line="26" pos:column="14">swing</name><op:operator pos:line="26" pos:column="19">.</op:operator><name pos:line="26" pos:column="20">JTextField</name></name>;</import>
<import pos:line="27" pos:column="1">import <name><name pos:line="27" pos:column="8">javax</name><op:operator pos:line="27" pos:column="13">.</op:operator><name pos:line="27" pos:column="14">swing</name><op:operator pos:line="27" pos:column="19">.</op:operator><name pos:line="27" pos:column="20">JRadioButton</name></name>;</import>
<import pos:line="28" pos:column="1">import <name><name pos:line="28" pos:column="8">javax</name><op:operator pos:line="28" pos:column="13">.</op:operator><name pos:line="28" pos:column="14">swing</name><op:operator pos:line="28" pos:column="19">.</op:operator><name pos:line="28" pos:column="20">JTable</name></name>;</import>
<import pos:line="29" pos:column="1">import <name><name pos:line="29" pos:column="8">javax</name><op:operator pos:line="29" pos:column="13">.</op:operator><name pos:line="29" pos:column="14">swing</name><op:operator pos:line="29" pos:column="19">.</op:operator><name pos:line="29" pos:column="20">JProgressBar</name></name>;</import>
<import pos:line="30" pos:column="1">import <name><name pos:line="30" pos:column="8">javax</name><op:operator pos:line="30" pos:column="13">.</op:operator><name pos:line="30" pos:column="14">swing</name><op:operator pos:line="30" pos:column="19">.</op:operator><name pos:line="30" pos:column="20">JScrollBar</name></name>;</import>
<import pos:line="31" pos:column="1">import <name><name pos:line="31" pos:column="8">javax</name><op:operator pos:line="31" pos:column="13">.</op:operator><name pos:line="31" pos:column="14">swing</name><op:operator pos:line="31" pos:column="19">.</op:operator><name pos:line="31" pos:column="20">BoxLayout</name></name>;</import>

<import pos:line="33" pos:column="1">import <name><name pos:line="33" pos:column="8">java</name><op:operator pos:line="33" pos:column="12">.</op:operator><name pos:line="33" pos:column="13">awt</name><op:operator pos:line="33" pos:column="16">.</op:operator><name pos:line="33" pos:column="17">event</name><op:operator pos:line="33" pos:column="22">.</op:operator><name pos:line="33" pos:column="23">ActionListener</name></name>;</import>
<import pos:line="34" pos:column="1">import <name><name pos:line="34" pos:column="8">java</name><op:operator pos:line="34" pos:column="12">.</op:operator><name pos:line="34" pos:column="13">awt</name><op:operator pos:line="34" pos:column="16">.</op:operator><name pos:line="34" pos:column="17">event</name><op:operator pos:line="34" pos:column="22">.</op:operator><name pos:line="34" pos:column="23">ActionEvent</name></name>;</import>
<import pos:line="35" pos:column="1">import <name><name pos:line="35" pos:column="8">java</name><op:operator pos:line="35" pos:column="12">.</op:operator><name pos:line="35" pos:column="13">awt</name><op:operator pos:line="35" pos:column="16">.</op:operator><name pos:line="35" pos:column="17">Color</name></name>;</import>

<import pos:line="37" pos:column="1">import <name><name pos:line="37" pos:column="8">javax</name><op:operator pos:line="37" pos:column="13">.</op:operator><name pos:line="37" pos:column="14">swing</name><op:operator pos:line="37" pos:column="19">.</op:operator><name pos:line="37" pos:column="20">border</name><op:operator pos:line="37" pos:column="26">.</op:operator><name pos:line="37" pos:column="27">BevelBorder</name></name>;</import>
<import pos:line="38" pos:column="1">import <name><name pos:line="38" pos:column="8">javax</name><op:operator pos:line="38" pos:column="13">.</op:operator><name pos:line="38" pos:column="14">swing</name><op:operator pos:line="38" pos:column="19">.</op:operator><name pos:line="38" pos:column="20">border</name><op:operator pos:line="38" pos:column="26">.</op:operator><name pos:line="38" pos:column="27">EtchedBorder</name></name>;</import>

<import pos:line="40" pos:column="1">import <name><name pos:line="40" pos:column="8">com</name><op:operator pos:line="40" pos:column="11">.</op:operator><name pos:line="40" pos:column="12">umas</name><op:operator pos:line="40" pos:column="16">.</op:operator><name pos:line="40" pos:column="17">code</name><op:operator pos:line="40" pos:column="21">.</op:operator><name pos:line="40" pos:column="22">CourseCurve</name></name>;</import>
<import pos:line="41" pos:column="1">import <name><name pos:line="41" pos:column="8">com</name><op:operator pos:line="41" pos:column="11">.</op:operator><name pos:line="41" pos:column="12">umas</name><op:operator pos:line="41" pos:column="16">.</op:operator><name pos:line="41" pos:column="17">code</name><op:operator pos:line="41" pos:column="21">.</op:operator><name pos:line="41" pos:column="22">CourseExamStructure</name></name>;</import>
<import pos:line="42" pos:column="1">import <name><name pos:line="42" pos:column="8">com</name><op:operator pos:line="42" pos:column="11">.</op:operator><name pos:line="42" pos:column="12">umas</name><op:operator pos:line="42" pos:column="16">.</op:operator><name pos:line="42" pos:column="17">code</name><op:operator pos:line="42" pos:column="21">.</op:operator><name pos:line="42" pos:column="22">CourseExams</name></name>;</import>
<import pos:line="43" pos:column="1">import <name><name pos:line="43" pos:column="8">com</name><op:operator pos:line="43" pos:column="11">.</op:operator><name pos:line="43" pos:column="12">umas</name><op:operator pos:line="43" pos:column="16">.</op:operator><name pos:line="43" pos:column="17">code</name><op:operator pos:line="43" pos:column="21">.</op:operator><name pos:line="43" pos:column="22">CourseOffered</name></name>;</import>
<import pos:line="44" pos:column="1">import <name><name pos:line="44" pos:column="8">com</name><op:operator pos:line="44" pos:column="11">.</op:operator><name pos:line="44" pos:column="12">umas</name><op:operator pos:line="44" pos:column="16">.</op:operator><name pos:line="44" pos:column="17">code</name><op:operator pos:line="44" pos:column="21">.</op:operator><name pos:line="44" pos:column="22">Student</name></name>;</import>
<import pos:line="45" pos:column="1">import <name><name pos:line="45" pos:column="8">com</name><op:operator pos:line="45" pos:column="11">.</op:operator><name pos:line="45" pos:column="12">umas</name><op:operator pos:line="45" pos:column="16">.</op:operator><name pos:line="45" pos:column="17">code</name><op:operator pos:line="45" pos:column="21">.</op:operator><name pos:line="45" pos:column="22">StudentEnrollment</name></name>;</import>


<class><specifier pos:line="48" pos:column="1">public</specifier> class <name pos:line="48" pos:column="14">CourseExamsUI</name> <super><extends pos:line="48" pos:column="28">extends <name pos:line="48" pos:column="36">JPanel</name></extends></super> <block pos:line="48" pos:column="43">{

	<comment type="block" format="javadoc" pos:line="50" pos:column="9">/**
	 * 
	 */</comment>
	<decl_stmt><decl><type><specifier pos:line="53" pos:column="9">private</specifier> <specifier pos:line="53" pos:column="17">static</specifier> <specifier pos:line="53" pos:column="24">final</specifier> <name pos:line="53" pos:column="30">long</name></type> <name pos:line="53" pos:column="35">serialVersionUID</name> <init pos:line="53" pos:column="52">= <expr><lit:literal type="number" pos:line="53" pos:column="54">1L</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="54" pos:column="9">private</specifier> <name pos:line="54" pos:column="17">JPanel</name></type> <name pos:line="54" pos:column="24">contentPane</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="55" pos:column="9">private</specifier> <name pos:line="55" pos:column="17">JTextField</name></type> <name pos:line="55" pos:column="28">newExamNameText</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="56" pos:column="9">private</specifier> <name pos:line="56" pos:column="17">JTextField</name></type> <name pos:line="56" pos:column="28">newExamTotalMarksText</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="57" pos:column="9">private</specifier> <name pos:line="57" pos:column="17">JTable</name></type> <name pos:line="57" pos:column="24">table</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="58" pos:column="9">private</specifier> <name pos:line="58" pos:column="17">JTable</name></type> <name pos:line="58" pos:column="24">table_1</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="59" pos:column="9">private</specifier> <name pos:line="59" pos:column="17">JTable</name></type> <name pos:line="59" pos:column="24">table_2</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="60" pos:column="9">private</specifier> <name pos:line="60" pos:column="17">JButton</name></type> <name pos:line="60" pos:column="25">btnAddExam</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="61" pos:column="9">private</specifier> <specifier pos:line="61" pos:column="17">final</specifier> <name pos:line="61" pos:column="23">JPanel</name></type> <name pos:line="61" pos:column="30">gradeDisplayPanel</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="62" pos:column="9">private</specifier> <specifier pos:line="62" pos:column="17">final</specifier> <name pos:line="62" pos:column="23">JPanel</name></type> <name pos:line="62" pos:column="30">panel</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="63" pos:column="9">private</specifier> <name pos:line="63" pos:column="17">JPanel</name></type> <name pos:line="63" pos:column="24">panel_2</name></decl>;</decl_stmt>
<comment type="line" pos:line="64" pos:column="1">//	static private JButton btnCancel;</comment>
<comment type="line" pos:line="65" pos:column="1">//	static private JPanel allExamsPanel;</comment>
	<decl_stmt><decl><type><specifier pos:line="66" pos:column="9">private</specifier> <name pos:line="66" pos:column="17">JButton</name></type> <name pos:line="66" pos:column="25">btnCancel</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="67" pos:column="9">private</specifier> <name pos:line="67" pos:column="17">JPanel</name></type> <name pos:line="67" pos:column="24">allExamsPanel</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="68" pos:column="9">private</specifier> <name pos:line="68" pos:column="17">CourseOffered</name></type> <name pos:line="68" pos:column="31">courseOffered</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="69" pos:column="9">private</specifier> <specifier pos:line="69" pos:column="17">static</specifier> <name><name pos:line="69" pos:column="24">HashMap</name><argument_list pos:line="69" pos:column="31">&lt;<argument><name pos:line="69" pos:column="32">JLabel</name></argument>,<argument><name pos:line="69" pos:column="39">JTextField</name></argument>&gt;</argument_list></name></type> <name pos:line="69" pos:column="51">studentExamMarksHashMap</name> <init pos:line="69" pos:column="75">= <expr><op:operator pos:line="69" pos:column="77">new</op:operator> <call><name><name pos:line="69" pos:column="81">HashMap</name><argument_list pos:line="69" pos:column="88">&lt;<argument><name pos:line="69" pos:column="89">JLabel</name></argument>, <argument><name pos:line="69" pos:column="97">JTextField</name></argument>&gt;</argument_list></name><argument_list pos:line="69" pos:column="108">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="70" pos:column="9">private</specifier> <specifier pos:line="70" pos:column="17">static</specifier> <name pos:line="70" pos:column="24">boolean</name></type> <name pos:line="70" pos:column="32">isTA</name> <init pos:line="70" pos:column="37">= <expr><lit:literal type="boolean" pos:line="70" pos:column="39">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="71" pos:column="9">public</specifier> <specifier pos:line="71" pos:column="16">static</specifier> <name pos:line="71" pos:column="23">boolean</name></type> <name pos:line="71" pos:column="31">deleteFlag</name> <init pos:line="71" pos:column="42">= <expr><lit:literal type="boolean" pos:line="71" pos:column="44">false</lit:literal></expr></init></decl>;</decl_stmt>
	
	<comment type="block" format="javadoc" pos:line="73" pos:column="9">/**
	 * Launch the application.
	 */</comment>
	<function><type><specifier pos:line="76" pos:column="9">public</specifier> <specifier pos:line="76" pos:column="16">static</specifier> <name pos:line="76" pos:column="23">void</name></type> <name pos:line="76" pos:column="28">main</name><parameter_list pos:line="76" pos:column="32">(<param><decl><type><name><name pos:line="76" pos:column="33">String</name><index pos:line="76" pos:column="39">[]</index></name></type> <name pos:line="76" pos:column="42">args</name></decl></param>)</parameter_list> <block pos:line="76" pos:column="48">{
		<expr_stmt><expr><call><name><name pos:line="77" pos:column="17">EventQueue</name><op:operator pos:line="77" pos:column="27">.</op:operator><name pos:line="77" pos:column="28">invokeLater</name></name><argument_list pos:line="77" pos:column="39">(<argument><expr><op:operator pos:line="77" pos:column="40">new</op:operator> <class><super><name pos:line="77" pos:column="44">Runnable</name></super><argument_list pos:line="77" pos:column="52">()</argument_list> <block pos:line="77" pos:column="55">{
			<function><type><specifier pos:line="78" pos:column="25">public</specifier> <name pos:line="78" pos:column="32">void</name></type> <name pos:line="78" pos:column="37">run</name><parameter_list pos:line="78" pos:column="40">()</parameter_list> <block pos:line="78" pos:column="43">{
				<try pos:line="79" pos:column="33">try <block pos:line="79" pos:column="37">{
					<decl_stmt><decl><type><name pos:line="80" pos:column="41">CourseExamsUI</name></type> <name pos:line="80" pos:column="55">frame</name> <init pos:line="80" pos:column="61">= <expr><op:operator pos:line="80" pos:column="63">new</op:operator> <call><name pos:line="80" pos:column="67">CourseExamsUI</name><argument_list pos:line="80" pos:column="80">(<argument><expr><op:operator pos:line="80" pos:column="81">new</op:operator> <call><name pos:line="80" pos:column="85">CourseOffered</name><argument_list pos:line="80" pos:column="98">(<argument><expr><lit:literal type="number" pos:line="80" pos:column="99">423</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="80" pos:column="105">false</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="81" pos:column="41">frame</name><op:operator pos:line="81" pos:column="46">.</op:operator><name pos:line="81" pos:column="47">setVisible</name></name><argument_list pos:line="81" pos:column="57">(<argument><expr><lit:literal type="boolean" pos:line="81" pos:column="58">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block> <catch pos:line="82" pos:column="35">catch <parameter_list pos:line="82" pos:column="41">(<param><decl><type><name pos:line="82" pos:column="42">Exception</name></type> <name pos:line="82" pos:column="52">e</name></decl></param>)</parameter_list> <block pos:line="82" pos:column="55">{
					<expr_stmt><expr><call><name><name pos:line="83" pos:column="41">e</name><op:operator pos:line="83" pos:column="42">.</op:operator><name pos:line="83" pos:column="43">printStackTrace</name></name><argument_list pos:line="83" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	
	<comment type="line" pos:line="90" pos:column="9">// Paints the UI for the CourseExams</comment>
	<constructor><specifier pos:line="91" pos:column="9">public</specifier> <name pos:line="91" pos:column="16">CourseExamsUI</name><parameter_list pos:line="91" pos:column="29">(<param><decl><type><name pos:line="91" pos:column="30">CourseOffered</name></type> <name pos:line="91" pos:column="44">courseOffer</name></decl></param>, <param><decl><type><name pos:line="91" pos:column="57">boolean</name></type> <name pos:line="91" pos:column="65">taFlag</name></decl></param>)</parameter_list> <block pos:line="91" pos:column="73">{
		<expr_stmt><expr><name pos:line="92" pos:column="17">courseOffered</name> <op:operator pos:line="92" pos:column="31">=</op:operator> <name pos:line="92" pos:column="33">courseOffer</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="93" pos:column="17">isTA</name> <op:operator pos:line="93" pos:column="22">=</op:operator> <name pos:line="93" pos:column="24">taFlag</name></expr>;</expr_stmt>
		<comment type="line" pos:line="94" pos:column="17">//setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</comment>
		<expr_stmt><expr><call><name pos:line="95" pos:column="17">setBounds</name><argument_list pos:line="95" pos:column="26">(<argument><expr><lit:literal type="number" pos:line="95" pos:column="27">100</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="95" pos:column="32">100</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="95" pos:column="37">900</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="95" pos:column="42">600</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="96" pos:column="17">//contentPane = new JPanel();</comment>
		<expr_stmt><expr><call><name pos:line="97" pos:column="17">setBorder</name><argument_list pos:line="97" pos:column="26">(<argument><expr><op:operator pos:line="97" pos:column="27">new</op:operator> <call><name pos:line="97" pos:column="31">EmptyBorder</name><argument_list pos:line="97" pos:column="42">(<argument><expr><lit:literal type="number" pos:line="97" pos:column="43">5</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="97" pos:column="46">5</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="97" pos:column="49">5</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="97" pos:column="52">5</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="98" pos:column="17">setLayout</name><argument_list pos:line="98" pos:column="26">(<argument><expr><op:operator pos:line="98" pos:column="27">new</op:operator> <call><name pos:line="98" pos:column="31">BorderLayout</name><argument_list pos:line="98" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="98" pos:column="44">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="98" pos:column="47">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="99" pos:column="17">//setContentPane(contentPane);</comment>
		
		<decl_stmt><decl><type><name pos:line="101" pos:column="17">JTabbedPane</name></type> <name pos:line="101" pos:column="29">tabbedPane</name> <init pos:line="101" pos:column="40">= <expr><op:operator pos:line="101" pos:column="42">new</op:operator> <call><name pos:line="101" pos:column="46">JTabbedPane</name><argument_list pos:line="101" pos:column="57">(<argument><expr><name><name pos:line="101" pos:column="58">JTabbedPane</name><op:operator pos:line="101" pos:column="69">.</op:operator><name pos:line="101" pos:column="70">TOP</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="102" pos:column="17">add</name><argument_list pos:line="102" pos:column="20">(<argument><expr><name pos:line="102" pos:column="21">tabbedPane</name></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="33">BorderLayout</name><op:operator pos:line="102" pos:column="45">.</op:operator><name pos:line="102" pos:column="46">CENTER</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="104" pos:column="17">panel</name> <op:operator pos:line="104" pos:column="23">=</op:operator> <op:operator pos:line="104" pos:column="25">new</op:operator> <call><name pos:line="104" pos:column="29">JPanel</name><argument_list pos:line="104" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="105" pos:column="17">tabbedPane</name><op:operator pos:line="105" pos:column="27">.</op:operator><name pos:line="105" pos:column="28">addTab</name></name><argument_list pos:line="105" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="105" pos:column="35">"View Course"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="105" pos:column="50">null</lit:literal></expr></argument>, <argument><expr><name pos:line="105" pos:column="56">panel</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="105" pos:column="63">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="106" pos:column="17">panel</name><op:operator pos:line="106" pos:column="22">.</op:operator><name pos:line="106" pos:column="23">setLayout</name></name><argument_list pos:line="106" pos:column="32">(<argument><expr><lit:literal type="null" pos:line="106" pos:column="33">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="108" pos:column="17">JLabel</name></type> <name pos:line="108" pos:column="24">lblCourseDetails</name> <init pos:line="108" pos:column="41">= <expr><op:operator pos:line="108" pos:column="43">new</op:operator> <call><name pos:line="108" pos:column="47">JLabel</name><argument_list pos:line="108" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="108" pos:column="54">"Course Details"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="109" pos:column="17">lblCourseDetails</name><op:operator pos:line="109" pos:column="33">.</op:operator><name pos:line="109" pos:column="34">setBounds</name></name><argument_list pos:line="109" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="109" pos:column="44">184</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="109" pos:column="49">11</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="109" pos:column="53">92</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="109" pos:column="57">14</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="110" pos:column="17">panel</name><op:operator pos:line="110" pos:column="22">.</op:operator><name pos:line="110" pos:column="23">add</name></name><argument_list pos:line="110" pos:column="26">(<argument><expr><name pos:line="110" pos:column="27">lblCourseDetails</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="112" pos:column="17">JLabel</name></type> <name pos:line="112" pos:column="24">lblExamName</name> <init pos:line="112" pos:column="36">= <expr><op:operator pos:line="112" pos:column="38">new</op:operator> <call><name pos:line="112" pos:column="42">JLabel</name><argument_list pos:line="112" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="112" pos:column="49">"Exam Name "</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="113" pos:column="17">lblExamName</name><op:operator pos:line="113" pos:column="28">.</op:operator><name pos:line="113" pos:column="29">setBounds</name></name><argument_list pos:line="113" pos:column="38">(<argument><expr><lit:literal type="number" pos:line="113" pos:column="39">42</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="113" pos:column="43">40</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="113" pos:column="47">86</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="113" pos:column="51">14</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="114" pos:column="17">panel</name><op:operator pos:line="114" pos:column="22">.</op:operator><name pos:line="114" pos:column="23">add</name></name><argument_list pos:line="114" pos:column="26">(<argument><expr><name pos:line="114" pos:column="27">lblExamName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="116" pos:column="17">JLabel</name></type> <name pos:line="116" pos:column="24">lblTotalMarks</name> <init pos:line="116" pos:column="38">= <expr><op:operator pos:line="116" pos:column="40">new</op:operator> <call><name pos:line="116" pos:column="44">JLabel</name><argument_list pos:line="116" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="116" pos:column="51">"Total Marks"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="117" pos:column="17">lblTotalMarks</name><op:operator pos:line="117" pos:column="30">.</op:operator><name pos:line="117" pos:column="31">setBounds</name></name><argument_list pos:line="117" pos:column="40">(<argument><expr><lit:literal type="number" pos:line="117" pos:column="41">194</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="117" pos:column="46">40</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="117" pos:column="50">76</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="117" pos:column="54">14</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="118" pos:column="17">panel</name><op:operator pos:line="118" pos:column="22">.</op:operator><name pos:line="118" pos:column="23">add</name></name><argument_list pos:line="118" pos:column="26">(<argument><expr><name pos:line="118" pos:column="27">lblTotalMarks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="120" pos:column="17">JLabel</name></type> <name pos:line="120" pos:column="24">lblAddmodifyMarks</name> <init pos:line="120" pos:column="42">= <expr><op:operator pos:line="120" pos:column="44">new</op:operator> <call><name pos:line="120" pos:column="48">JLabel</name><argument_list pos:line="120" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="120" pos:column="55">"Add/Modify Marks"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="121" pos:column="17">lblAddmodifyMarks</name><op:operator pos:line="121" pos:column="34">.</op:operator><name pos:line="121" pos:column="35">setBounds</name></name><argument_list pos:line="121" pos:column="44">(<argument><expr><lit:literal type="number" pos:line="121" pos:column="45">376</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="121" pos:column="50">40</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="121" pos:column="54">112</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="121" pos:column="59">14</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="122" pos:column="17">panel</name><op:operator pos:line="122" pos:column="22">.</op:operator><name pos:line="122" pos:column="23">add</name></name><argument_list pos:line="122" pos:column="26">(<argument><expr><name pos:line="122" pos:column="27">lblAddmodifyMarks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="124" pos:column="17">JLabel</name></type> <name pos:line="124" pos:column="24">lblDelete</name> <init pos:line="124" pos:column="34">= <expr><op:operator pos:line="124" pos:column="36">new</op:operator> <call><name pos:line="124" pos:column="40">JLabel</name><argument_list pos:line="124" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="124" pos:column="47">"Delete"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="125" pos:column="17">lblDelete</name><op:operator pos:line="125" pos:column="26">.</op:operator><name pos:line="125" pos:column="27">setBounds</name></name><argument_list pos:line="125" pos:column="36">(<argument><expr><lit:literal type="number" pos:line="125" pos:column="37">562</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="125" pos:column="42">40</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="125" pos:column="46">46</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="125" pos:column="50">14</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="126" pos:column="17">panel</name><op:operator pos:line="126" pos:column="22">.</op:operator><name pos:line="126" pos:column="23">add</name></name><argument_list pos:line="126" pos:column="26">(<argument><expr><name pos:line="126" pos:column="27">lblDelete</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="128" pos:column="17">btnAddExam</name> <op:operator pos:line="128" pos:column="28">=</op:operator> <op:operator pos:line="128" pos:column="30">new</op:operator> <call><name pos:line="128" pos:column="34">JButton</name><argument_list pos:line="128" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="128" pos:column="42">"Add Exam"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="129" pos:column="17">btnAddExam</name><op:operator pos:line="129" pos:column="27">.</op:operator><name pos:line="129" pos:column="28">addActionListener</name></name><argument_list pos:line="129" pos:column="45">(<argument><expr><op:operator pos:line="129" pos:column="46">new</op:operator> <class><super><name pos:line="129" pos:column="50">ActionListener</name></super><argument_list pos:line="129" pos:column="64">()</argument_list> <block pos:line="129" pos:column="67">{
			<function><type><specifier pos:line="130" pos:column="25">public</specifier> <name pos:line="130" pos:column="32">void</name></type> <name pos:line="130" pos:column="37">actionPerformed</name><parameter_list pos:line="130" pos:column="52">(<param><decl><type><name pos:line="130" pos:column="53">ActionEvent</name></type> <name pos:line="130" pos:column="65">e</name></decl></param>)</parameter_list> <block pos:line="130" pos:column="68">{
				<decl_stmt><decl><type><name pos:line="131" pos:column="33">String</name></type> <name pos:line="131" pos:column="40">buttonText</name> <init pos:line="131" pos:column="51">= <expr><call><name><name pos:line="131" pos:column="53">btnAddExam</name><op:operator pos:line="131" pos:column="63">.</op:operator><name pos:line="131" pos:column="64">getText</name></name><argument_list pos:line="131" pos:column="71">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="132" pos:column="33">if<condition pos:line="132" pos:column="35">(<expr><call><name><name pos:line="132" pos:column="36">buttonText</name><op:operator pos:line="132" pos:column="46">.</op:operator><name pos:line="132" pos:column="47">equals</name></name><argument_list pos:line="132" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="132" pos:column="54">"Add Exam"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then><block pos:line="132" pos:column="66">{
					<expr_stmt><expr><call><name><name pos:line="133" pos:column="41">newExamNameText</name><op:operator pos:line="133" pos:column="56">.</op:operator><name pos:line="133" pos:column="57">setEditable</name></name><argument_list pos:line="133" pos:column="68">(<argument><expr><lit:literal type="boolean" pos:line="133" pos:column="69">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="134" pos:column="41">newExamNameText</name><op:operator pos:line="134" pos:column="56">.</op:operator><name pos:line="134" pos:column="57">setEnabled</name></name><argument_list pos:line="134" pos:column="67">(<argument><expr><lit:literal type="boolean" pos:line="134" pos:column="68">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="135" pos:column="41">newExamTotalMarksText</name><op:operator pos:line="135" pos:column="62">.</op:operator><name pos:line="135" pos:column="63">setEditable</name></name><argument_list pos:line="135" pos:column="74">(<argument><expr><lit:literal type="boolean" pos:line="135" pos:column="75">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="136" pos:column="41">newExamTotalMarksText</name><op:operator pos:line="136" pos:column="62">.</op:operator><name pos:line="136" pos:column="63">setEnabled</name></name><argument_list pos:line="136" pos:column="73">(<argument><expr><lit:literal type="boolean" pos:line="136" pos:column="74">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="137" pos:column="41">btnAddExam</name><op:operator pos:line="137" pos:column="51">.</op:operator><name pos:line="137" pos:column="52">setText</name></name><argument_list pos:line="137" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="137" pos:column="60">"Done"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="138" pos:column="41">btnCancel</name><op:operator pos:line="138" pos:column="50">.</op:operator><name pos:line="138" pos:column="51">setVisible</name></name><argument_list pos:line="138" pos:column="61">(<argument><expr><lit:literal type="boolean" pos:line="138" pos:column="62">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then> <else pos:line="139" pos:column="35">else <block pos:line="139" pos:column="40">{
					
					<decl_stmt><decl><type><name pos:line="141" pos:column="41">String</name></type> <name pos:line="141" pos:column="48">mks</name> <init pos:line="141" pos:column="52">= <expr><call><name><name pos:line="141" pos:column="54">newExamTotalMarksText</name><op:operator pos:line="141" pos:column="75">.</op:operator><name pos:line="141" pos:column="76">getText</name></name><argument_list pos:line="141" pos:column="83">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="142" pos:column="41">String</name></type> <name pos:line="142" pos:column="48">newExamName</name> <init pos:line="142" pos:column="60">= <expr><call><name><name pos:line="142" pos:column="62">newExamNameText</name><op:operator pos:line="142" pos:column="77">.</op:operator><name pos:line="142" pos:column="78">getText</name></name><argument_list pos:line="142" pos:column="85">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<if pos:line="143" pos:column="41">if<condition pos:line="143" pos:column="43">(<expr><op:operator pos:line="143" pos:column="44">(</op:operator><call><name><name pos:line="143" pos:column="45">mks</name><op:operator pos:line="143" pos:column="48">.</op:operator><name pos:line="143" pos:column="49">matches</name></name><argument_list pos:line="143" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="143" pos:column="57">"[0-9]{1,3}"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="143" pos:column="70">)</op:operator> <op:operator pos:line="143" pos:column="72">&amp;&amp;</op:operator> <op:operator pos:line="143" pos:column="75">!</op:operator><op:operator pos:line="143" pos:column="76">(</op:operator><call><name><name pos:line="143" pos:column="77">newExamName</name><op:operator pos:line="143" pos:column="88">.</op:operator><name pos:line="143" pos:column="89">isEmpty</name></name><argument_list pos:line="143" pos:column="96">()</argument_list></call><op:operator pos:line="143" pos:column="98">)</op:operator></expr>)</condition><then><block pos:line="143" pos:column="100">{
						<decl_stmt><decl><type><name pos:line="144" pos:column="49">int</name></type> <name pos:line="144" pos:column="53">marks</name> <init pos:line="144" pos:column="59">=  <expr><call><name><name pos:line="144" pos:column="62">Integer</name><op:operator pos:line="144" pos:column="69">.</op:operator><name pos:line="144" pos:column="70">parseInt</name></name><argument_list pos:line="144" pos:column="78">(<argument><expr><call><name><name pos:line="144" pos:column="79">newExamTotalMarksText</name><op:operator pos:line="144" pos:column="100">.</op:operator><name pos:line="144" pos:column="101">getText</name></name><argument_list pos:line="144" pos:column="108">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<decl_stmt><decl><type><name pos:line="145" pos:column="49">CourseExamStructure</name></type> <name pos:line="145" pos:column="69">newExamStruct</name> <init pos:line="145" pos:column="83">= <expr><op:operator pos:line="145" pos:column="85">new</op:operator> <call><name pos:line="145" pos:column="89">CourseExamStructure</name><argument_list pos:line="145" pos:column="108">(<argument><expr><name pos:line="145" pos:column="109">courseOffered</name></expr></argument>,<argument><expr><name pos:line="145" pos:column="123">newExamName</name></expr></argument>,<argument><expr><name pos:line="145" pos:column="135">marks</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						
						<expr_stmt><expr><call><name><name pos:line="147" pos:column="49">newExamStruct</name><op:operator pos:line="147" pos:column="62">.</op:operator><name pos:line="147" pos:column="63">addNewExam</name></name><argument_list pos:line="147" pos:column="73">()</argument_list></call></expr>;</expr_stmt>
						
						<expr_stmt><expr><call><name><name pos:line="149" pos:column="49">newExamNameText</name><op:operator pos:line="149" pos:column="64">.</op:operator><name pos:line="149" pos:column="65">setText</name></name><argument_list pos:line="149" pos:column="72">(<argument><expr><lit:literal type="string" pos:line="149" pos:column="73">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="150" pos:column="49">newExamTotalMarksText</name><op:operator pos:line="150" pos:column="70">.</op:operator><name pos:line="150" pos:column="71">setText</name></name><argument_list pos:line="150" pos:column="78">(<argument><expr><lit:literal type="string" pos:line="150" pos:column="79">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="151" pos:column="49">newExamNameText</name><op:operator pos:line="151" pos:column="64">.</op:operator><name pos:line="151" pos:column="65">setEditable</name></name><argument_list pos:line="151" pos:column="76">(<argument><expr><lit:literal type="boolean" pos:line="151" pos:column="77">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="152" pos:column="49">newExamNameText</name><op:operator pos:line="152" pos:column="64">.</op:operator><name pos:line="152" pos:column="65">setEnabled</name></name><argument_list pos:line="152" pos:column="75">(<argument><expr><lit:literal type="boolean" pos:line="152" pos:column="76">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="153" pos:column="49">newExamTotalMarksText</name><op:operator pos:line="153" pos:column="70">.</op:operator><name pos:line="153" pos:column="71">setEditable</name></name><argument_list pos:line="153" pos:column="82">(<argument><expr><lit:literal type="boolean" pos:line="153" pos:column="83">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="154" pos:column="49">newExamTotalMarksText</name><op:operator pos:line="154" pos:column="70">.</op:operator><name pos:line="154" pos:column="71">setEnabled</name></name><argument_list pos:line="154" pos:column="81">(<argument><expr><lit:literal type="boolean" pos:line="154" pos:column="82">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="155" pos:column="49">btnAddExam</name><op:operator pos:line="155" pos:column="59">.</op:operator><name pos:line="155" pos:column="60">setText</name></name><argument_list pos:line="155" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="155" pos:column="68">"Add Exam"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="156" pos:column="49">panel</name><op:operator pos:line="156" pos:column="54">.</op:operator><name pos:line="156" pos:column="55">revalidate</name></name><argument_list pos:line="156" pos:column="65">()</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="157" pos:column="49">panel</name><op:operator pos:line="157" pos:column="54">.</op:operator><name pos:line="157" pos:column="55">repaint</name></name><argument_list pos:line="157" pos:column="62">()</argument_list></call></expr>;</expr_stmt>
					}</block></then> <else pos:line="158" pos:column="43">else <block pos:line="158" pos:column="48">{
						<expr_stmt><expr><call><name><name pos:line="159" pos:column="49">JOptionPane</name><op:operator pos:line="159" pos:column="60">.</op:operator><name pos:line="159" pos:column="61">showMessageDialog</name></name><argument_list pos:line="159" pos:column="78">(<argument><expr><lit:literal type="null" pos:line="159" pos:column="79">null</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="159" pos:column="85">"Incorrect Data Entered"</lit:literal></expr></argument>,<argument><expr><lit:literal type="string" pos:line="159" pos:column="110">"Error"</lit:literal></expr></argument>,<argument><expr><name><name pos:line="159" pos:column="118">JOptionPane</name><op:operator pos:line="159" pos:column="129">.</op:operator><name pos:line="159" pos:column="130">ERROR_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></else></if>
				
				<expr_stmt><expr><call><name pos:line="162" pos:column="33">initialize</name><argument_list pos:line="162" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>
		}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="166" pos:column="17">btnAddExam</name><op:operator pos:line="166" pos:column="27">.</op:operator><name pos:line="166" pos:column="28">setBounds</name></name><argument_list pos:line="166" pos:column="37">(<argument><expr><lit:literal type="number" pos:line="166" pos:column="38">26</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="166" pos:column="42">422</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="166" pos:column="47">102</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="166" pos:column="52">23</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="167" pos:column="17">if<condition pos:line="167" pos:column="19">(<expr><name pos:line="167" pos:column="20">isTA</name></expr>)</condition><then pos:line="167" pos:column="25">
			<expr_stmt><expr><call><name><name pos:line="168" pos:column="25">btnAddExam</name><op:operator pos:line="168" pos:column="35">.</op:operator><name pos:line="168" pos:column="36">setEnabled</name></name><argument_list pos:line="168" pos:column="46">(<argument><expr><lit:literal type="boolean" pos:line="168" pos:column="47">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><call><name><name pos:line="169" pos:column="17">panel</name><op:operator pos:line="169" pos:column="22">.</op:operator><name pos:line="169" pos:column="23">add</name></name><argument_list pos:line="169" pos:column="26">(<argument><expr><name pos:line="169" pos:column="27">btnAddExam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="171" pos:column="17">JLabel</name></type> <name pos:line="171" pos:column="24">lblExamName_1</name> <init pos:line="171" pos:column="38">= <expr><op:operator pos:line="171" pos:column="40">new</op:operator> <call><name pos:line="171" pos:column="44">JLabel</name><argument_list pos:line="171" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="171" pos:column="51">"Exam Name:"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="172" pos:column="17">lblExamName_1</name><op:operator pos:line="172" pos:column="30">.</op:operator><name pos:line="172" pos:column="31">setBounds</name></name><argument_list pos:line="172" pos:column="40">(<argument><expr><lit:literal type="number" pos:line="172" pos:column="41">156</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="172" pos:column="46">403</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="172" pos:column="51">73</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="172" pos:column="55">14</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="173" pos:column="17">panel</name><op:operator pos:line="173" pos:column="22">.</op:operator><name pos:line="173" pos:column="23">add</name></name><argument_list pos:line="173" pos:column="26">(<argument><expr><name pos:line="173" pos:column="27">lblExamName_1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="175" pos:column="17">newExamNameText</name> <op:operator pos:line="175" pos:column="33">=</op:operator> <op:operator pos:line="175" pos:column="35">new</op:operator> <call><name pos:line="175" pos:column="39">JTextField</name><argument_list pos:line="175" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="176" pos:column="17">newExamNameText</name><op:operator pos:line="176" pos:column="32">.</op:operator><name pos:line="176" pos:column="33">setEnabled</name></name><argument_list pos:line="176" pos:column="43">(<argument><expr><lit:literal type="boolean" pos:line="176" pos:column="44">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="177" pos:column="17">newExamNameText</name><op:operator pos:line="177" pos:column="32">.</op:operator><name pos:line="177" pos:column="33">setEditable</name></name><argument_list pos:line="177" pos:column="44">(<argument><expr><lit:literal type="boolean" pos:line="177" pos:column="45">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="178" pos:column="17">newExamNameText</name><op:operator pos:line="178" pos:column="32">.</op:operator><name pos:line="178" pos:column="33">setBounds</name></name><argument_list pos:line="178" pos:column="42">(<argument><expr><lit:literal type="number" pos:line="178" pos:column="43">239</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="178" pos:column="48">400</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="178" pos:column="53">92</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="178" pos:column="57">20</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="179" pos:column="17">panel</name><op:operator pos:line="179" pos:column="22">.</op:operator><name pos:line="179" pos:column="23">add</name></name><argument_list pos:line="179" pos:column="26">(<argument><expr><name pos:line="179" pos:column="27">newExamNameText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="180" pos:column="17">newExamNameText</name><op:operator pos:line="180" pos:column="32">.</op:operator><name pos:line="180" pos:column="33">setColumns</name></name><argument_list pos:line="180" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="180" pos:column="44">10</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="182" pos:column="17">JLabel</name></type> <name pos:line="182" pos:column="24">lblExamTotalMarks</name> <init pos:line="182" pos:column="42">= <expr><op:operator pos:line="182" pos:column="44">new</op:operator> <call><name pos:line="182" pos:column="48">JLabel</name><argument_list pos:line="182" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="182" pos:column="55">"Exam Total Marks"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="183" pos:column="17">lblExamTotalMarks</name><op:operator pos:line="183" pos:column="34">.</op:operator><name pos:line="183" pos:column="35">setBounds</name></name><argument_list pos:line="183" pos:column="44">(<argument><expr><lit:literal type="number" pos:line="183" pos:column="45">137</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="183" pos:column="50">445</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="183" pos:column="55">92</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="183" pos:column="59">14</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="184" pos:column="17">panel</name><op:operator pos:line="184" pos:column="22">.</op:operator><name pos:line="184" pos:column="23">add</name></name><argument_list pos:line="184" pos:column="26">(<argument><expr><name pos:line="184" pos:column="27">lblExamTotalMarks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="186" pos:column="17">newExamTotalMarksText</name> <op:operator pos:line="186" pos:column="39">=</op:operator> <op:operator pos:line="186" pos:column="41">new</op:operator> <call><name pos:line="186" pos:column="45">JTextField</name><argument_list pos:line="186" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="187" pos:column="17">newExamTotalMarksText</name><op:operator pos:line="187" pos:column="38">.</op:operator><name pos:line="187" pos:column="39">setEnabled</name></name><argument_list pos:line="187" pos:column="49">(<argument><expr><lit:literal type="boolean" pos:line="187" pos:column="50">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="188" pos:column="17">newExamTotalMarksText</name><op:operator pos:line="188" pos:column="38">.</op:operator><name pos:line="188" pos:column="39">setEditable</name></name><argument_list pos:line="188" pos:column="50">(<argument><expr><lit:literal type="boolean" pos:line="188" pos:column="51">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="189" pos:column="17">newExamTotalMarksText</name><op:operator pos:line="189" pos:column="38">.</op:operator><name pos:line="189" pos:column="39">setBounds</name></name><argument_list pos:line="189" pos:column="48">(<argument><expr><lit:literal type="number" pos:line="189" pos:column="49">245</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="189" pos:column="54">442</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="189" pos:column="59">86</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="189" pos:column="63">20</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="190" pos:column="17">panel</name><op:operator pos:line="190" pos:column="22">.</op:operator><name pos:line="190" pos:column="23">add</name></name><argument_list pos:line="190" pos:column="26">(<argument><expr><name pos:line="190" pos:column="27">newExamTotalMarksText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="191" pos:column="17">newExamTotalMarksText</name><op:operator pos:line="191" pos:column="38">.</op:operator><name pos:line="191" pos:column="39">setColumns</name></name><argument_list pos:line="191" pos:column="49">(<argument><expr><lit:literal type="number" pos:line="191" pos:column="50">10</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="193" pos:column="17">allExamsPanel</name> <op:operator pos:line="193" pos:column="31">=</op:operator> <op:operator pos:line="193" pos:column="33">new</op:operator> <call><name pos:line="193" pos:column="37">JPanel</name><argument_list pos:line="193" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="194" pos:column="17">allExamsPanel</name><op:operator pos:line="194" pos:column="30">.</op:operator><name pos:line="194" pos:column="31">setBounds</name></name><argument_list pos:line="194" pos:column="40">(<argument><expr><lit:literal type="number" pos:line="194" pos:column="41">26</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="194" pos:column="45">65</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="194" pos:column="49">800</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="194" pos:column="54">327</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="195" pos:column="17">panel</name><op:operator pos:line="195" pos:column="22">.</op:operator><name pos:line="195" pos:column="23">add</name></name><argument_list pos:line="195" pos:column="26">(<argument><expr><name pos:line="195" pos:column="27">allExamsPanel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="196" pos:column="17">allExamsPanel</name><op:operator pos:line="196" pos:column="30">.</op:operator><name pos:line="196" pos:column="31">setLayout</name></name><argument_list pos:line="196" pos:column="40">(<argument><expr><op:operator pos:line="196" pos:column="41">new</op:operator> <call><name pos:line="196" pos:column="45">BoxLayout</name><argument_list pos:line="196" pos:column="54">(<argument><expr><name pos:line="196" pos:column="55">allExamsPanel</name></expr></argument>, <argument><expr><name><name pos:line="196" pos:column="70">BoxLayout</name><op:operator pos:line="196" pos:column="79">.</op:operator><name pos:line="196" pos:column="80">Y_AXIS</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="198" pos:column="17">btnCancel</name> <op:operator pos:line="198" pos:column="27">=</op:operator> <op:operator pos:line="198" pos:column="29">new</op:operator> <call><name pos:line="198" pos:column="33">JButton</name><argument_list pos:line="198" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="198" pos:column="41">"Cancel"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="199" pos:column="17">btnCancel</name><op:operator pos:line="199" pos:column="26">.</op:operator><name pos:line="199" pos:column="27">addActionListener</name></name><argument_list pos:line="199" pos:column="44">(<argument><expr><op:operator pos:line="199" pos:column="45">new</op:operator> <class><super><name pos:line="199" pos:column="49">ActionListener</name></super><argument_list pos:line="199" pos:column="63">()</argument_list> <block pos:line="199" pos:column="66">{
			<function><type><specifier pos:line="200" pos:column="25">public</specifier> <name pos:line="200" pos:column="32">void</name></type> <name pos:line="200" pos:column="37">actionPerformed</name><parameter_list pos:line="200" pos:column="52">(<param><decl><type><name pos:line="200" pos:column="53">ActionEvent</name></type> <name pos:line="200" pos:column="65">e</name></decl></param>)</parameter_list> <block pos:line="200" pos:column="68">{
				<expr_stmt><expr><call><name><name pos:line="201" pos:column="33">newExamNameText</name><op:operator pos:line="201" pos:column="48">.</op:operator><name pos:line="201" pos:column="49">setText</name></name><argument_list pos:line="201" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="201" pos:column="57">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="202" pos:column="33">newExamTotalMarksText</name><op:operator pos:line="202" pos:column="54">.</op:operator><name pos:line="202" pos:column="55">setText</name></name><argument_list pos:line="202" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="202" pos:column="63">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="203" pos:column="33">newExamNameText</name><op:operator pos:line="203" pos:column="48">.</op:operator><name pos:line="203" pos:column="49">setEditable</name></name><argument_list pos:line="203" pos:column="60">(<argument><expr><lit:literal type="boolean" pos:line="203" pos:column="61">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="204" pos:column="33">newExamNameText</name><op:operator pos:line="204" pos:column="48">.</op:operator><name pos:line="204" pos:column="49">setEnabled</name></name><argument_list pos:line="204" pos:column="59">(<argument><expr><lit:literal type="boolean" pos:line="204" pos:column="60">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="205" pos:column="33">newExamTotalMarksText</name><op:operator pos:line="205" pos:column="54">.</op:operator><name pos:line="205" pos:column="55">setEditable</name></name><argument_list pos:line="205" pos:column="66">(<argument><expr><lit:literal type="boolean" pos:line="205" pos:column="67">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="206" pos:column="33">newExamTotalMarksText</name><op:operator pos:line="206" pos:column="54">.</op:operator><name pos:line="206" pos:column="55">setEnabled</name></name><argument_list pos:line="206" pos:column="65">(<argument><expr><lit:literal type="boolean" pos:line="206" pos:column="66">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="207" pos:column="33">btnAddExam</name><op:operator pos:line="207" pos:column="43">.</op:operator><name pos:line="207" pos:column="44">setText</name></name><argument_list pos:line="207" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="207" pos:column="52">"Add Exam"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="208" pos:column="33">initialize</name><argument_list pos:line="208" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="209" pos:column="33">panel</name><op:operator pos:line="209" pos:column="38">.</op:operator><name pos:line="209" pos:column="39">revalidate</name></name><argument_list pos:line="209" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="210" pos:column="33">panel</name><op:operator pos:line="210" pos:column="38">.</op:operator><name pos:line="210" pos:column="39">repaint</name></name><argument_list pos:line="210" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
				
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="214" pos:column="17">btnCancel</name><op:operator pos:line="214" pos:column="26">.</op:operator><name pos:line="214" pos:column="27">setBounds</name></name><argument_list pos:line="214" pos:column="36">(<argument><expr><lit:literal type="number" pos:line="214" pos:column="37">347</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="214" pos:column="42">422</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="214" pos:column="47">89</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="214" pos:column="51">23</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="215" pos:column="17">panel</name><op:operator pos:line="215" pos:column="22">.</op:operator><name pos:line="215" pos:column="23">add</name></name><argument_list pos:line="215" pos:column="26">(<argument><expr><name pos:line="215" pos:column="27">btnCancel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="217" pos:column="17">JLabel</name></type> <name pos:line="217" pos:column="24">lblAddeditStudentMarks</name> <init pos:line="217" pos:column="47">= <expr><op:operator pos:line="217" pos:column="49">new</op:operator> <call><name pos:line="217" pos:column="53">JLabel</name><argument_list pos:line="217" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="217" pos:column="60">"Add/Edit student marks"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="218" pos:column="17">lblAddeditStudentMarks</name><op:operator pos:line="218" pos:column="39">.</op:operator><name pos:line="218" pos:column="40">setBounds</name></name><argument_list pos:line="218" pos:column="49">(<argument><expr><lit:literal type="number" pos:line="218" pos:column="50">689</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="218" pos:column="55">40</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="218" pos:column="59">126</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="218" pos:column="64">14</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="219" pos:column="17">panel</name><op:operator pos:line="219" pos:column="22">.</op:operator><name pos:line="219" pos:column="23">add</name></name><argument_list pos:line="219" pos:column="26">(<argument><expr><name pos:line="219" pos:column="27">lblAddeditStudentMarks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name><name pos:line="221" pos:column="17">HashMap</name><argument_list pos:line="221" pos:column="24">&lt;<argument><name pos:line="221" pos:column="25">String</name></argument>,<argument><name pos:line="221" pos:column="32">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="221" pos:column="41">examDetails</name> <init pos:line="221" pos:column="53">= <expr><call><name><name pos:line="221" pos:column="55">CourseExamStructure</name><op:operator pos:line="221" pos:column="74">.</op:operator><name pos:line="221" pos:column="75">viewExams</name></name><argument_list pos:line="221" pos:column="84">(<argument><expr><name pos:line="221" pos:column="85">courseOffered</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="222" pos:column="17">Set</name><argument_list pos:line="222" pos:column="20">&lt;<argument><name pos:line="222" pos:column="21">String</name></argument>&gt;</argument_list></name></type> <name pos:line="222" pos:column="29">keys</name> <init pos:line="222" pos:column="34">= <expr><call><name><name pos:line="222" pos:column="36">examDetails</name><op:operator pos:line="222" pos:column="47">.</op:operator><name pos:line="222" pos:column="48">keySet</name></name><argument_list pos:line="222" pos:column="54">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="223" pos:column="17">Iterator</name><argument_list pos:line="223" pos:column="25">&lt;<argument><name pos:line="223" pos:column="26">String</name></argument>&gt;</argument_list></name></type> <name pos:line="223" pos:column="34">keyIterator</name> <init pos:line="223" pos:column="46">= <expr><call><name><name pos:line="223" pos:column="48">keys</name><op:operator pos:line="223" pos:column="52">.</op:operator><name pos:line="223" pos:column="53">iterator</name></name><argument_list pos:line="223" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<for pos:line="225" pos:column="17">for(<init><decl><type><name pos:line="225" pos:column="21">String</name></type> <name pos:line="225" pos:column="28">exam</name><range pos:line="225" pos:column="32">: <expr><call><name><name pos:line="225" pos:column="34">examDetails</name><op:operator pos:line="225" pos:column="45">.</op:operator><name pos:line="225" pos:column="46">keySet</name></name><argument_list pos:line="225" pos:column="52">()</argument_list></call></expr></range></decl></init>) <block pos:line="225" pos:column="56">{
			<decl_stmt><decl><type><name pos:line="226" pos:column="25">int</name></type> <name pos:line="226" pos:column="29">examMarks</name> <init pos:line="226" pos:column="39">= <expr><op:operator pos:line="226" pos:column="41">(</op:operator><name pos:line="226" pos:column="42">int</name><op:operator pos:line="226" pos:column="45">)</op:operator> <call><name><name pos:line="226" pos:column="47">examDetails</name><op:operator pos:line="226" pos:column="58">.</op:operator><name pos:line="226" pos:column="59">get</name></name><argument_list pos:line="226" pos:column="62">(<argument><expr><name pos:line="226" pos:column="63">exam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="227" pos:column="25">CourseExamStructure</name></type> <name pos:line="227" pos:column="45">examStruct</name> <init pos:line="227" pos:column="56">= <expr><op:operator pos:line="227" pos:column="58">new</op:operator> <call><name pos:line="227" pos:column="62">CourseExamStructure</name><argument_list pos:line="227" pos:column="81">(<argument><expr><name pos:line="227" pos:column="82">courseOffered</name></expr></argument>, <argument><expr><name pos:line="227" pos:column="97">exam</name></expr></argument>,<argument><expr><name pos:line="227" pos:column="102">examMarks</name></expr></argument>)</argument_list></call></expr></init></decl> ;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="228" pos:column="25">panel</name><op:operator pos:line="228" pos:column="30">.</op:operator><name pos:line="228" pos:column="31">add</name></name><argument_list pos:line="228" pos:column="34">(<argument><expr><call><name pos:line="228" pos:column="35">makePanel</name><argument_list pos:line="228" pos:column="44">(<argument><expr><name pos:line="228" pos:column="45">examStruct</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		
		<decl_stmt><decl><type><name pos:line="231" pos:column="17">JPanel</name></type> <name pos:line="231" pos:column="24">panel_3</name> <init pos:line="231" pos:column="32">= <expr><op:operator pos:line="231" pos:column="34">new</op:operator> <call><name pos:line="231" pos:column="38">JPanel</name><argument_list pos:line="231" pos:column="44">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="232" pos:column="17">if<condition pos:line="232" pos:column="19">(<expr><op:operator pos:line="232" pos:column="20">!</op:operator><name pos:line="232" pos:column="21">isTA</name></expr>)</condition><then><block pos:line="232" pos:column="26">{
			<expr_stmt><expr><call><name><name pos:line="233" pos:column="25">tabbedPane</name><op:operator pos:line="233" pos:column="35">.</op:operator><name pos:line="233" pos:column="36">addTab</name></name><argument_list pos:line="233" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="233" pos:column="43">"Calculate Curve"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="233" pos:column="62">null</lit:literal></expr></argument>, <argument><expr><name pos:line="233" pos:column="68">panel_3</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="233" pos:column="77">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="234" pos:column="25">panel_3</name><op:operator pos:line="234" pos:column="32">.</op:operator><name pos:line="234" pos:column="33">setLayout</name></name><argument_list pos:line="234" pos:column="42">(<argument><expr><lit:literal type="null" pos:line="234" pos:column="43">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		
		<else pos:line="237" pos:column="17">else<block pos:line="237" pos:column="21">{
			<expr_stmt><expr><call><name><name pos:line="238" pos:column="25">panel_3</name><op:operator pos:line="238" pos:column="32">.</op:operator><name pos:line="238" pos:column="33">setVisible</name></name><argument_list pos:line="238" pos:column="43">(<argument><expr><lit:literal type="boolean" pos:line="238" pos:column="44">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="239" pos:column="25">panel_3</name><op:operator pos:line="239" pos:column="32">.</op:operator><name pos:line="239" pos:column="33">setEnabled</name></name><argument_list pos:line="239" pos:column="43">(<argument><expr><lit:literal type="boolean" pos:line="239" pos:column="44">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
		
		<decl_stmt><decl><type><name pos:line="242" pos:column="17">JPanel</name></type> <name pos:line="242" pos:column="24">panel_4</name> <init pos:line="242" pos:column="32">= <expr><op:operator pos:line="242" pos:column="34">new</op:operator> <call><name pos:line="242" pos:column="38">JPanel</name><argument_list pos:line="242" pos:column="44">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="243" pos:column="17">panel_4</name><op:operator pos:line="243" pos:column="24">.</op:operator><name pos:line="243" pos:column="25">setBounds</name></name><argument_list pos:line="243" pos:column="34">(<argument><expr><lit:literal type="number" pos:line="243" pos:column="35">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="243" pos:column="38">11</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="243" pos:column="42">329</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="243" pos:column="47">112</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="244" pos:column="17">panel_3</name><op:operator pos:line="244" pos:column="24">.</op:operator><name pos:line="244" pos:column="25">add</name></name><argument_list pos:line="244" pos:column="28">(<argument><expr><name pos:line="244" pos:column="29">panel_4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="245" pos:column="17">panel_4</name><op:operator pos:line="245" pos:column="24">.</op:operator><name pos:line="245" pos:column="25">setLayout</name></name><argument_list pos:line="245" pos:column="34">(<argument><expr><op:operator pos:line="245" pos:column="35">new</op:operator> <call><name pos:line="245" pos:column="39">BoxLayout</name><argument_list pos:line="245" pos:column="48">(<argument><expr><name pos:line="245" pos:column="49">panel_4</name></expr></argument>, <argument><expr><name><name pos:line="245" pos:column="58">BoxLayout</name><op:operator pos:line="245" pos:column="67">.</op:operator><name pos:line="245" pos:column="68">Y_AXIS</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="247" pos:column="17">JButton</name></type> <name pos:line="247" pos:column="25">btnCalculateByPercentage</name> <init pos:line="247" pos:column="50">= <expr><op:operator pos:line="247" pos:column="52">new</op:operator> <call><name pos:line="247" pos:column="56">JButton</name><argument_list pos:line="247" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="247" pos:column="64">"Calculate By Percentage of Students in Each Grade"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="248" pos:column="17">btnCalculateByPercentage</name><op:operator pos:line="248" pos:column="41">.</op:operator><name pos:line="248" pos:column="42">addActionListener</name></name><argument_list pos:line="248" pos:column="59">(<argument><expr><op:operator pos:line="248" pos:column="60">new</op:operator> <class><super><name pos:line="248" pos:column="64">ActionListener</name></super><argument_list pos:line="248" pos:column="78">()</argument_list> <block pos:line="248" pos:column="81">{
			<function><type><specifier pos:line="249" pos:column="25">public</specifier> <name pos:line="249" pos:column="32">void</name></type> <name pos:line="249" pos:column="37">actionPerformed</name><parameter_list pos:line="249" pos:column="52">(<param><decl><type><name pos:line="249" pos:column="53">ActionEvent</name></type> <name pos:line="249" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="249" pos:column="71">{
				<decl_stmt><decl><type><name pos:line="250" pos:column="33">String</name></type> <name pos:line="250" pos:column="40">input</name> <init pos:line="250" pos:column="46">= <expr><call><name><name pos:line="250" pos:column="48">JOptionPane</name><op:operator pos:line="250" pos:column="59">.</op:operator><name pos:line="250" pos:column="60">showInputDialog</name></name><argument_list pos:line="250" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="250" pos:column="76">"Input comma seperated grading criteria\n example: 30,40,30 (total 100%)"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="251" pos:column="33">String</name><index pos:line="251" pos:column="39">[]</index></type> <name pos:line="251" pos:column="42">percentages</name> <init pos:line="251" pos:column="54">= <expr><call><name pos:line="251" pos:column="56">parseGradeCriteriaString</name><argument_list pos:line="251" pos:column="80">(<argument><expr><name pos:line="251" pos:column="81">input</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="252" pos:column="33">if<condition pos:line="252" pos:column="35">(<expr><name pos:line="252" pos:column="36">percentages</name><op:operator pos:line="252" pos:column="47">!=</op:operator><lit:literal type="null" pos:line="252" pos:column="49">null</lit:literal></expr>)</condition><then><block pos:line="252" pos:column="54">{
					<decl_stmt><decl><type><name><name pos:line="253" pos:column="41">List</name><argument_list pos:line="253" pos:column="45">&lt;<argument><name pos:line="253" pos:column="46">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="253" pos:column="55">percentArray</name> <init pos:line="253" pos:column="68">= <expr><op:operator pos:line="253" pos:column="70">new</op:operator> <call><name><name pos:line="253" pos:column="74">ArrayList</name><argument_list pos:line="253" pos:column="83">&lt;<argument><name pos:line="253" pos:column="84">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="253" pos:column="92">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="254" pos:column="41">int</name></type> <name pos:line="254" pos:column="45">total</name> <init pos:line="254" pos:column="51">= <expr><lit:literal type="number" pos:line="254" pos:column="53">0</lit:literal></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="255" pos:column="41">int</name></type> <name pos:line="255" pos:column="45">count</name><init pos:line="255" pos:column="50">=<expr><lit:literal type="number" pos:line="255" pos:column="51">0</lit:literal></expr></init></decl>;</decl_stmt>
					<comment type="line" pos:line="256" pos:column="41">//-------------processing string begins-----------//</comment>
					<for pos:line="257" pos:column="41">for(<init><decl><type><name pos:line="257" pos:column="45">int</name></type> <name pos:line="257" pos:column="49">i</name><init pos:line="257" pos:column="50">=<expr><lit:literal type="number" pos:line="257" pos:column="51">0</lit:literal></expr></init></decl>;</init><condition><expr><name pos:line="257" pos:column="53">i</name><op:operator pos:line="257" pos:column="54">&lt;</op:operator><name><name pos:line="257" pos:column="55">percentages</name><op:operator pos:line="257" pos:column="66">.</op:operator><name pos:line="257" pos:column="67">length</name></name></expr>;</condition><incr><expr><name pos:line="257" pos:column="74">i</name><op:operator pos:line="257" pos:column="75">++</op:operator></expr></incr>)<block pos:line="257" pos:column="78">{
						<expr_stmt><expr><name pos:line="258" pos:column="49">total</name><op:operator pos:line="258" pos:column="54">+=</op:operator><call><name><name pos:line="258" pos:column="56">Integer</name><op:operator pos:line="258" pos:column="63">.</op:operator><name pos:line="258" pos:column="64">parseInt</name></name><argument_list pos:line="258" pos:column="72">(<argument><expr><name><name pos:line="258" pos:column="73">percentages</name><index pos:line="258" pos:column="84">[<expr><name pos:line="258" pos:column="85">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<if pos:line="259" pos:column="49">if<condition pos:line="259" pos:column="51">(<expr><name pos:line="259" pos:column="52">total</name><op:operator pos:line="259" pos:column="57">&lt;=</op:operator><lit:literal type="number" pos:line="259" pos:column="59">100</lit:literal></expr>)</condition><then><block pos:line="259" pos:column="63">{
							<expr_stmt><expr><call><name><name pos:line="260" pos:column="57">percentArray</name><op:operator pos:line="260" pos:column="69">.</op:operator><name pos:line="260" pos:column="70">add</name></name><argument_list pos:line="260" pos:column="73">(<argument><expr><call><name><name pos:line="260" pos:column="74">Integer</name><op:operator pos:line="260" pos:column="81">.</op:operator><name pos:line="260" pos:column="82">parseInt</name></name><argument_list pos:line="260" pos:column="90">(<argument><expr><name><name pos:line="260" pos:column="91">percentages</name><index pos:line="260" pos:column="102">[<expr><name pos:line="260" pos:column="103">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt><expr><name pos:line="261" pos:column="57">count</name><op:operator pos:line="261" pos:column="62">++</op:operator></expr>;</expr_stmt>
						}</block></then>
						
						<else pos:line="264" pos:column="49">else<block pos:line="264" pos:column="53">{
							<expr_stmt><expr><name pos:line="265" pos:column="57">total</name><op:operator pos:line="265" pos:column="62">-=</op:operator><call><name><name pos:line="265" pos:column="64">Integer</name><op:operator pos:line="265" pos:column="71">.</op:operator><name pos:line="265" pos:column="72">parseInt</name></name><argument_list pos:line="265" pos:column="80">(<argument><expr><name><name pos:line="265" pos:column="81">percentages</name><index pos:line="265" pos:column="92">[<expr><name pos:line="265" pos:column="93">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt><expr><name pos:line="266" pos:column="57">count</name><op:operator pos:line="266" pos:column="62">--</op:operator></expr>;</expr_stmt>
							<break pos:line="267" pos:column="57">break;</break>
						}</block></else></if>
					}</block></for>
					
					<if pos:line="271" pos:column="41">if<condition pos:line="271" pos:column="43">(<expr><name pos:line="271" pos:column="44">count</name><op:operator pos:line="271" pos:column="49">==</op:operator><name><name pos:line="271" pos:column="51">percentages</name><op:operator pos:line="271" pos:column="62">.</op:operator><name pos:line="271" pos:column="63">length</name></name><op:operator pos:line="271" pos:column="69">-</op:operator><lit:literal type="number" pos:line="271" pos:column="70">1</lit:literal></expr>)</condition><then><block pos:line="271" pos:column="72">{
						<if pos:line="272" pos:column="49">if<condition pos:line="272" pos:column="51">(<expr><name pos:line="272" pos:column="52">total</name><op:operator pos:line="272" pos:column="57">&lt;</op:operator><lit:literal type="number" pos:line="272" pos:column="58">100</lit:literal></expr>)</condition><then><block pos:line="272" pos:column="62">{
							<expr_stmt><expr><call><name><name pos:line="273" pos:column="57">percentArray</name><op:operator pos:line="273" pos:column="69">.</op:operator><name pos:line="273" pos:column="70">remove</name></name><argument_list pos:line="273" pos:column="76">(<argument><expr><name pos:line="273" pos:column="77">count</name><op:operator pos:line="273" pos:column="82">-</op:operator><lit:literal type="number" pos:line="273" pos:column="83">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt><expr><call><name><name pos:line="274" pos:column="57">percentArray</name><op:operator pos:line="274" pos:column="69">.</op:operator><name pos:line="274" pos:column="70">add</name></name><argument_list pos:line="274" pos:column="73">(<argument><expr><lit:literal type="number" pos:line="274" pos:column="74">100</lit:literal><op:operator pos:line="274" pos:column="77">-</op:operator><name pos:line="274" pos:column="78">total</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt><expr><name pos:line="275" pos:column="57">total</name> <op:operator pos:line="275" pos:column="63">=</op:operator> <lit:literal type="number" pos:line="275" pos:column="65">100</lit:literal></expr>;</expr_stmt>
						}</block></then></if>
					}</block></then></if>
					
					<if pos:line="279" pos:column="41">if<condition pos:line="279" pos:column="43">(<expr><name pos:line="279" pos:column="44">total</name><op:operator pos:line="279" pos:column="49">&lt;</op:operator><lit:literal type="number" pos:line="279" pos:column="50">100</lit:literal></expr>)</condition><then><block pos:line="279" pos:column="54">{
						<expr_stmt><expr><call><name><name pos:line="280" pos:column="49">percentArray</name><op:operator pos:line="280" pos:column="61">.</op:operator><name pos:line="280" pos:column="62">add</name></name><argument_list pos:line="280" pos:column="65">(<argument><expr><lit:literal type="number" pos:line="280" pos:column="66">100</lit:literal><op:operator pos:line="280" pos:column="69">-</op:operator><name pos:line="280" pos:column="70">total</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
					
					<comment type="line" pos:line="283" pos:column="41">//-----------------processing string ends------//</comment>
					
					<decl_stmt><decl><type><name pos:line="285" pos:column="41">CourseCurve</name></type> <name pos:line="285" pos:column="53">curve</name> <init pos:line="285" pos:column="59">= <expr><call><name><name pos:line="285" pos:column="61">CourseCurve</name><op:operator pos:line="285" pos:column="72">.</op:operator><name pos:line="285" pos:column="73">calculatePercentageCurve</name></name><argument_list pos:line="285" pos:column="97">(<argument><expr><call><name><name pos:line="285" pos:column="98">courseOffered</name><op:operator pos:line="285" pos:column="111">.</op:operator><name pos:line="285" pos:column="112">getOfferID</name></name><argument_list pos:line="285" pos:column="122">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="285" pos:column="126">percentArray</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><specifier pos:line="286" pos:column="41">final</specifier> <name><name pos:line="286" pos:column="47">HashMap</name><argument_list pos:line="286" pos:column="54">&lt;<argument><name pos:line="286" pos:column="55">Student</name></argument>, <argument><name pos:line="286" pos:column="64">String</name></argument>&gt;</argument_list></name></type> <name pos:line="286" pos:column="72">curvedMarks</name> <init pos:line="286" pos:column="84">= <expr><call><name><name pos:line="286" pos:column="86">curve</name><op:operator pos:line="286" pos:column="91">.</op:operator><name pos:line="286" pos:column="92">getCourseCurve</name></name><argument_list pos:line="286" pos:column="106">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="287" pos:column="41">gradeDisplayPanel</name><op:operator pos:line="287" pos:column="58">.</op:operator><name pos:line="287" pos:column="59">removeAll</name></name><argument_list pos:line="287" pos:column="68">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="288" pos:column="41">gradeDisplayPanel</name><op:operator pos:line="288" pos:column="58">.</op:operator><name pos:line="288" pos:column="59">revalidate</name></name><argument_list pos:line="288" pos:column="69">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="289" pos:column="41">gradeDisplayPanel</name><op:operator pos:line="289" pos:column="58">.</op:operator><name pos:line="289" pos:column="59">repaint</name></name><argument_list pos:line="289" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
					<for pos:line="290" pos:column="41">for(<init><decl><type><name pos:line="290" pos:column="45">Student</name></type> <name pos:line="290" pos:column="53">s</name><range pos:line="290" pos:column="54">:<expr><call><name><name pos:line="290" pos:column="55">curvedMarks</name><op:operator pos:line="290" pos:column="66">.</op:operator><name pos:line="290" pos:column="67">keySet</name></name><argument_list pos:line="290" pos:column="73">()</argument_list></call></expr></range></decl></init>)<block pos:line="290" pos:column="76">{
						<decl_stmt><decl><type><name pos:line="291" pos:column="49">String</name></type> <name pos:line="291" pos:column="56">name</name> <init pos:line="291" pos:column="61">= <expr><call><name><name pos:line="291" pos:column="63">s</name><op:operator pos:line="291" pos:column="64">.</op:operator><name pos:line="291" pos:column="65">getName</name></name><argument_list pos:line="291" pos:column="72">()</argument_list></call></expr></init></decl>;</decl_stmt>
						<decl_stmt><decl><type><name pos:line="292" pos:column="49">String</name></type> <name pos:line="292" pos:column="56">grade</name> <init pos:line="292" pos:column="62">= <expr><call><name><name pos:line="292" pos:column="64">curvedMarks</name><op:operator pos:line="292" pos:column="75">.</op:operator><name pos:line="292" pos:column="76">get</name></name><argument_list pos:line="292" pos:column="79">(<argument><expr><name pos:line="292" pos:column="80">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<decl_stmt><decl><type><name pos:line="293" pos:column="49">JPanel</name></type> <name pos:line="293" pos:column="56">newPanel</name> <init pos:line="293" pos:column="65">= <expr><call><name pos:line="293" pos:column="67">makeGradePanel</name><argument_list pos:line="293" pos:column="81">(<argument><expr><call><name><name pos:line="293" pos:column="82">s</name><op:operator pos:line="293" pos:column="83">.</op:operator><name pos:line="293" pos:column="84">getUIN</name></name><argument_list pos:line="293" pos:column="90">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="293" pos:column="94">grade</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><call><name><name pos:line="294" pos:column="49">gradeDisplayPanel</name><op:operator pos:line="294" pos:column="66">.</op:operator><name pos:line="294" pos:column="67">add</name></name><argument_list pos:line="294" pos:column="70">(<argument><expr><name pos:line="294" pos:column="71">newPanel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></for>
					
					<decl_stmt><decl><type><name pos:line="297" pos:column="41">JButton</name></type> <name pos:line="297" pos:column="49">postbutton</name> <init pos:line="297" pos:column="60">= <expr><op:operator pos:line="297" pos:column="62">new</op:operator> <call><name pos:line="297" pos:column="66">JButton</name><argument_list pos:line="297" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="297" pos:column="74">"Post grades"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="298" pos:column="41">postbutton</name><op:operator pos:line="298" pos:column="51">.</op:operator><name pos:line="298" pos:column="52">addActionListener</name></name><argument_list pos:line="298" pos:column="69">(<argument><expr><op:operator pos:line="298" pos:column="70">new</op:operator> <class><super><name pos:line="298" pos:column="74">ActionListener</name></super><argument_list pos:line="298" pos:column="88">()</argument_list> <block pos:line="298" pos:column="91">{
						
						<function><type><annotation pos:line="300" pos:column="49">@<name pos:line="300" pos:column="50">Override</name></annotation>
						<specifier pos:line="301" pos:column="49">public</specifier> <name pos:line="301" pos:column="56">void</name></type> <name pos:line="301" pos:column="61">actionPerformed</name><parameter_list pos:line="301" pos:column="76">(<param><decl><type><name pos:line="301" pos:column="77">ActionEvent</name></type> <name pos:line="301" pos:column="89">e</name></decl></param>)</parameter_list> <block pos:line="301" pos:column="92">{
							<expr_stmt><expr><call><name><name pos:line="302" pos:column="57">StudentEnrollment</name><op:operator pos:line="302" pos:column="74">.</op:operator><name pos:line="302" pos:column="75">updateAllStudentGrade</name></name><argument_list pos:line="302" pos:column="96">(<argument><expr><name pos:line="302" pos:column="97">curvedMarks</name></expr></argument>, <argument><expr><name pos:line="302" pos:column="110">courseOffered</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>						
						}</block></function>
					}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
					<expr_stmt><expr><call><name><name pos:line="306" pos:column="41">gradeDisplayPanel</name><op:operator pos:line="306" pos:column="58">.</op:operator><name pos:line="306" pos:column="59">add</name></name><argument_list pos:line="306" pos:column="62">(<argument><expr><name pos:line="306" pos:column="63">postbutton</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="307" pos:column="41">gradeDisplayPanel</name><op:operator pos:line="307" pos:column="58">.</op:operator><name pos:line="307" pos:column="59">revalidate</name></name><argument_list pos:line="307" pos:column="69">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="308" pos:column="41">gradeDisplayPanel</name><op:operator pos:line="308" pos:column="58">.</op:operator><name pos:line="308" pos:column="59">repaint</name></name><argument_list pos:line="308" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="313" pos:column="17">panel_4</name><op:operator pos:line="313" pos:column="24">.</op:operator><name pos:line="313" pos:column="25">add</name></name><argument_list pos:line="313" pos:column="28">(<argument><expr><name pos:line="313" pos:column="29">btnCalculateByPercentage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="315" pos:column="17">JButton</name></type> <name pos:line="315" pos:column="25">btnCalculateByAbsolute</name> <init pos:line="315" pos:column="48">= <expr><op:operator pos:line="315" pos:column="50">new</op:operator> <call><name pos:line="315" pos:column="54">JButton</name><argument_list pos:line="315" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="315" pos:column="62">"Calculate By Absolute Marks"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="316" pos:column="17">btnCalculateByAbsolute</name><op:operator pos:line="316" pos:column="39">.</op:operator><name pos:line="316" pos:column="40">addActionListener</name></name><argument_list pos:line="316" pos:column="57">(<argument><expr><op:operator pos:line="316" pos:column="58">new</op:operator> <class><super><name pos:line="316" pos:column="62">ActionListener</name></super><argument_list pos:line="316" pos:column="76">()</argument_list> <block pos:line="316" pos:column="79">{
			<function><type><specifier pos:line="317" pos:column="25">public</specifier> <name pos:line="317" pos:column="32">void</name></type> <name pos:line="317" pos:column="37">actionPerformed</name><parameter_list pos:line="317" pos:column="52">(<param><decl><type><name pos:line="317" pos:column="53">ActionEvent</name></type> <name pos:line="317" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="317" pos:column="71">{
				<decl_stmt><decl><type><name pos:line="318" pos:column="33">String</name></type> <name pos:line="318" pos:column="40">input</name> <init pos:line="318" pos:column="46">= <expr><call><name><name pos:line="318" pos:column="48">JOptionPane</name><op:operator pos:line="318" pos:column="59">.</op:operator><name pos:line="318" pos:column="60">showInputDialog</name></name><argument_list pos:line="318" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="318" pos:column="76">"Input comma seperated numbers in decreasing order"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="319" pos:column="33">String</name><index pos:line="319" pos:column="39">[]</index></type> <name pos:line="319" pos:column="42">percentages</name> <init pos:line="319" pos:column="54">= <expr><call><name pos:line="319" pos:column="56">parseGradeCriteriaStringAbsolute</name><argument_list pos:line="319" pos:column="88">(<argument><expr><name pos:line="319" pos:column="89">input</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="320" pos:column="33">if<condition pos:line="320" pos:column="35">(<expr><name pos:line="320" pos:column="36">percentages</name><op:operator pos:line="320" pos:column="47">==</op:operator> <lit:literal type="null" pos:line="320" pos:column="50">null</lit:literal></expr>)</condition><then pos:line="320" pos:column="55">
					<return pos:line="321" pos:column="41">return;</return></then></if>
				
				<decl_stmt><decl><type><name><name pos:line="323" pos:column="33">Set</name><argument_list pos:line="323" pos:column="36">&lt;<argument><name pos:line="323" pos:column="37">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="323" pos:column="46">tempSet</name> <init pos:line="323" pos:column="54">= <expr><op:operator pos:line="323" pos:column="56">new</op:operator> <call><name><name pos:line="323" pos:column="60">LinkedHashSet</name><argument_list pos:line="323" pos:column="73">&lt;<argument><name pos:line="323" pos:column="74">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="323" pos:column="82">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<for pos:line="324" pos:column="33">for(<init><decl><type><name pos:line="324" pos:column="37">String</name></type> <name pos:line="324" pos:column="44">s</name><range pos:line="324" pos:column="45">:<expr><name pos:line="324" pos:column="46">percentages</name></expr></range></decl></init>)<block pos:line="324" pos:column="58">{
					<expr_stmt><expr><call><name><name pos:line="325" pos:column="41">tempSet</name><op:operator pos:line="325" pos:column="48">.</op:operator><name pos:line="325" pos:column="49">add</name></name><argument_list pos:line="325" pos:column="52">(<argument><expr><call><name><name pos:line="325" pos:column="53">Integer</name><op:operator pos:line="325" pos:column="60">.</op:operator><name pos:line="325" pos:column="61">parseInt</name></name><argument_list pos:line="325" pos:column="69">(<argument><expr><name pos:line="325" pos:column="70">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></for>
				
				<decl_stmt><decl><type><name><name pos:line="328" pos:column="33">List</name><argument_list pos:line="328" pos:column="37">&lt;<argument><name pos:line="328" pos:column="38">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="328" pos:column="47">percentArray</name> <init pos:line="328" pos:column="60">= <expr><op:operator pos:line="328" pos:column="62">new</op:operator> <call><name><name pos:line="328" pos:column="66">ArrayList</name><argument_list pos:line="328" pos:column="75">&lt;<argument><name pos:line="328" pos:column="76">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="328" pos:column="84">()</argument_list></call></expr></init></decl>;</decl_stmt>
				
				<for pos:line="330" pos:column="33">for(<init><decl><type><name pos:line="330" pos:column="37">Integer</name></type> <name pos:line="330" pos:column="45">i</name><range pos:line="330" pos:column="46">:<expr><name pos:line="330" pos:column="47">tempSet</name></expr></range></decl></init>)<block pos:line="330" pos:column="55">{
					<expr_stmt><expr><call><name><name pos:line="331" pos:column="41">percentArray</name><op:operator pos:line="331" pos:column="53">.</op:operator><name pos:line="331" pos:column="54">add</name></name><argument_list pos:line="331" pos:column="57">(<argument><expr><name pos:line="331" pos:column="58">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></for>
				
				<expr_stmt><expr><call><name><name pos:line="334" pos:column="33">Collections</name><op:operator pos:line="334" pos:column="44">.</op:operator><name pos:line="334" pos:column="45">sort</name></name><argument_list pos:line="334" pos:column="49">(<argument><expr><name pos:line="334" pos:column="50">percentArray</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="335" pos:column="33">Collections</name><op:operator pos:line="335" pos:column="44">.</op:operator><name pos:line="335" pos:column="45">reverse</name></name><argument_list pos:line="335" pos:column="52">(<argument><expr><name pos:line="335" pos:column="53">percentArray</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
				
				<if pos:line="338" pos:column="33">if<condition pos:line="338" pos:column="35">(<expr><name pos:line="338" pos:column="36">percentages</name><op:operator pos:line="338" pos:column="47">!=</op:operator><lit:literal type="null" pos:line="338" pos:column="49">null</lit:literal></expr>)</condition><then><block pos:line="338" pos:column="54">{					
					<decl_stmt><decl><type><name pos:line="339" pos:column="41">CourseCurve</name></type> <name pos:line="339" pos:column="53">curve</name> <init pos:line="339" pos:column="59">= <expr><call><name><name pos:line="339" pos:column="61">CourseCurve</name><op:operator pos:line="339" pos:column="72">.</op:operator><name pos:line="339" pos:column="73">calculateAbsoluteCurve</name></name><argument_list pos:line="339" pos:column="95">(<argument><expr><call><name><name pos:line="339" pos:column="96">courseOffered</name><op:operator pos:line="339" pos:column="109">.</op:operator><name pos:line="339" pos:column="110">getOfferID</name></name><argument_list pos:line="339" pos:column="120">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="339" pos:column="124">percentArray</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><specifier pos:line="340" pos:column="41">final</specifier> <name><name pos:line="340" pos:column="47">HashMap</name><argument_list pos:line="340" pos:column="54">&lt;<argument><name pos:line="340" pos:column="55">Student</name></argument>, <argument><name pos:line="340" pos:column="64">String</name></argument>&gt;</argument_list></name></type> <name pos:line="340" pos:column="72">curvedMarks</name> <init pos:line="340" pos:column="84">= <expr><call><name><name pos:line="340" pos:column="86">curve</name><op:operator pos:line="340" pos:column="91">.</op:operator><name pos:line="340" pos:column="92">getCourseCurve</name></name><argument_list pos:line="340" pos:column="106">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="341" pos:column="41">gradeDisplayPanel</name><op:operator pos:line="341" pos:column="58">.</op:operator><name pos:line="341" pos:column="59">removeAll</name></name><argument_list pos:line="341" pos:column="68">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="342" pos:column="41">gradeDisplayPanel</name><op:operator pos:line="342" pos:column="58">.</op:operator><name pos:line="342" pos:column="59">revalidate</name></name><argument_list pos:line="342" pos:column="69">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="343" pos:column="41">gradeDisplayPanel</name><op:operator pos:line="343" pos:column="58">.</op:operator><name pos:line="343" pos:column="59">repaint</name></name><argument_list pos:line="343" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
					<for pos:line="344" pos:column="41">for(<init><decl><type><name pos:line="344" pos:column="45">Student</name></type> <name pos:line="344" pos:column="53">s</name><range pos:line="344" pos:column="54">:<expr><call><name><name pos:line="344" pos:column="55">curvedMarks</name><op:operator pos:line="344" pos:column="66">.</op:operator><name pos:line="344" pos:column="67">keySet</name></name><argument_list pos:line="344" pos:column="73">()</argument_list></call></expr></range></decl></init>)<block pos:line="344" pos:column="76">{
						<decl_stmt><decl><type><name pos:line="345" pos:column="49">String</name></type> <name pos:line="345" pos:column="56">name</name> <init pos:line="345" pos:column="61">= <expr><call><name><name pos:line="345" pos:column="63">s</name><op:operator pos:line="345" pos:column="64">.</op:operator><name pos:line="345" pos:column="65">getName</name></name><argument_list pos:line="345" pos:column="72">()</argument_list></call></expr></init></decl>;</decl_stmt>
						<decl_stmt><decl><type><name pos:line="346" pos:column="49">String</name></type> <name pos:line="346" pos:column="56">grade</name> <init pos:line="346" pos:column="62">= <expr><call><name><name pos:line="346" pos:column="64">curvedMarks</name><op:operator pos:line="346" pos:column="75">.</op:operator><name pos:line="346" pos:column="76">get</name></name><argument_list pos:line="346" pos:column="79">(<argument><expr><name pos:line="346" pos:column="80">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<decl_stmt><decl><type><name pos:line="347" pos:column="49">JPanel</name></type> <name pos:line="347" pos:column="56">newPanel</name> <init pos:line="347" pos:column="65">= <expr><call><name pos:line="347" pos:column="67">makeGradePanel</name><argument_list pos:line="347" pos:column="81">(<argument><expr><call><name><name pos:line="347" pos:column="82">s</name><op:operator pos:line="347" pos:column="83">.</op:operator><name pos:line="347" pos:column="84">getUIN</name></name><argument_list pos:line="347" pos:column="90">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="347" pos:column="94">grade</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><call><name><name pos:line="348" pos:column="49">gradeDisplayPanel</name><op:operator pos:line="348" pos:column="66">.</op:operator><name pos:line="348" pos:column="67">add</name></name><argument_list pos:line="348" pos:column="70">(<argument><expr><name pos:line="348" pos:column="71">newPanel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></for>
					
					<decl_stmt><decl><type><name pos:line="351" pos:column="41">JButton</name></type> <name pos:line="351" pos:column="49">postbutton</name> <init pos:line="351" pos:column="60">= <expr><op:operator pos:line="351" pos:column="62">new</op:operator> <call><name pos:line="351" pos:column="66">JButton</name><argument_list pos:line="351" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="351" pos:column="74">"Post grades"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="352" pos:column="41">postbutton</name><op:operator pos:line="352" pos:column="51">.</op:operator><name pos:line="352" pos:column="52">addActionListener</name></name><argument_list pos:line="352" pos:column="69">(<argument><expr><op:operator pos:line="352" pos:column="70">new</op:operator> <class><super><name pos:line="352" pos:column="74">ActionListener</name></super><argument_list pos:line="352" pos:column="88">()</argument_list> <block pos:line="352" pos:column="91">{
						
						<function><type><annotation pos:line="354" pos:column="49">@<name pos:line="354" pos:column="50">Override</name></annotation>
						<specifier pos:line="355" pos:column="49">public</specifier> <name pos:line="355" pos:column="56">void</name></type> <name pos:line="355" pos:column="61">actionPerformed</name><parameter_list pos:line="355" pos:column="76">(<param><decl><type><name pos:line="355" pos:column="77">ActionEvent</name></type> <name pos:line="355" pos:column="89">e</name></decl></param>)</parameter_list> <block pos:line="355" pos:column="92">{
							<expr_stmt><expr><call><name><name pos:line="356" pos:column="57">StudentEnrollment</name><op:operator pos:line="356" pos:column="74">.</op:operator><name pos:line="356" pos:column="75">updateAllStudentGrade</name></name><argument_list pos:line="356" pos:column="96">(<argument><expr><name pos:line="356" pos:column="97">curvedMarks</name></expr></argument>, <argument><expr><name pos:line="356" pos:column="110">courseOffered</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>						
						}</block></function>
					}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
					<expr_stmt><expr><call><name><name pos:line="360" pos:column="41">gradeDisplayPanel</name><op:operator pos:line="360" pos:column="58">.</op:operator><name pos:line="360" pos:column="59">add</name></name><argument_list pos:line="360" pos:column="62">(<argument><expr><name pos:line="360" pos:column="63">postbutton</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="361" pos:column="41">gradeDisplayPanel</name><op:operator pos:line="361" pos:column="58">.</op:operator><name pos:line="361" pos:column="59">revalidate</name></name><argument_list pos:line="361" pos:column="69">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="362" pos:column="41">gradeDisplayPanel</name><op:operator pos:line="362" pos:column="58">.</op:operator><name pos:line="362" pos:column="59">repaint</name></name><argument_list pos:line="362" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="366" pos:column="17">panel_4</name><op:operator pos:line="366" pos:column="24">.</op:operator><name pos:line="366" pos:column="25">add</name></name><argument_list pos:line="366" pos:column="28">(<argument><expr><name pos:line="366" pos:column="29">btnCalculateByAbsolute</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="368" pos:column="17">JButton</name></type> <name pos:line="368" pos:column="25">btnCurveByMax</name> <init pos:line="368" pos:column="39">= <expr><op:operator pos:line="368" pos:column="41">new</op:operator> <call><name pos:line="368" pos:column="45">JButton</name><argument_list pos:line="368" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="368" pos:column="53">"Curve By Max Difference Between Marks"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="369" pos:column="17">btnCurveByMax</name><op:operator pos:line="369" pos:column="30">.</op:operator><name pos:line="369" pos:column="31">addActionListener</name></name><argument_list pos:line="369" pos:column="48">(<argument><expr><op:operator pos:line="369" pos:column="49">new</op:operator> <class><super><name pos:line="369" pos:column="53">ActionListener</name></super><argument_list pos:line="369" pos:column="67">()</argument_list> <block pos:line="369" pos:column="70">{
			<function><type><specifier pos:line="370" pos:column="25">public</specifier> <name pos:line="370" pos:column="32">void</name></type> <name pos:line="370" pos:column="37">actionPerformed</name><parameter_list pos:line="370" pos:column="52">(<param><decl><type><name pos:line="370" pos:column="53">ActionEvent</name></type> <name pos:line="370" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="370" pos:column="71">{
				<decl_stmt><decl><type><name pos:line="371" pos:column="33">String</name></type> <name pos:line="371" pos:column="40">input</name> <init pos:line="371" pos:column="46">= <expr><call><name><name pos:line="371" pos:column="48">JOptionPane</name><op:operator pos:line="371" pos:column="59">.</op:operator><name pos:line="371" pos:column="60">showInputDialog</name></name><argument_list pos:line="371" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="371" pos:column="76">"Input comma seperated numbers in decreasing order"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="372" pos:column="33">String</name><index pos:line="372" pos:column="39">[]</index></type> <name pos:line="372" pos:column="42">percentages</name> <init pos:line="372" pos:column="54">= <expr><call><name pos:line="372" pos:column="56">parseGradeCriteriaStringAbsolute</name><argument_list pos:line="372" pos:column="88">(<argument><expr><name pos:line="372" pos:column="89">input</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="373" pos:column="33">if<condition pos:line="373" pos:column="35">(<expr><name pos:line="373" pos:column="36">percentages</name><op:operator pos:line="373" pos:column="47">==</op:operator> <lit:literal type="null" pos:line="373" pos:column="50">null</lit:literal></expr>)</condition><then pos:line="373" pos:column="55">
					<return pos:line="374" pos:column="41">return;</return></then></if>
				

				<decl_stmt><decl><type><name><name pos:line="377" pos:column="33">List</name><argument_list pos:line="377" pos:column="37">&lt;<argument><name pos:line="377" pos:column="38">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="377" pos:column="47">percentArray</name> <init pos:line="377" pos:column="60">= <expr><op:operator pos:line="377" pos:column="62">new</op:operator> <call><name><name pos:line="377" pos:column="66">ArrayList</name><argument_list pos:line="377" pos:column="75">&lt;<argument><name pos:line="377" pos:column="76">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="377" pos:column="84">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<for pos:line="378" pos:column="33">for(<init><decl><type><name pos:line="378" pos:column="37">String</name></type> <name pos:line="378" pos:column="44">s</name><range pos:line="378" pos:column="45">:<expr><name pos:line="378" pos:column="46">percentages</name></expr></range></decl></init>)<block pos:line="378" pos:column="58">{
					<expr_stmt><expr><call><name><name pos:line="379" pos:column="41">percentArray</name><op:operator pos:line="379" pos:column="53">.</op:operator><name pos:line="379" pos:column="54">add</name></name><argument_list pos:line="379" pos:column="57">(<argument><expr><call><name><name pos:line="379" pos:column="58">Integer</name><op:operator pos:line="379" pos:column="65">.</op:operator><name pos:line="379" pos:column="66">parseInt</name></name><argument_list pos:line="379" pos:column="74">(<argument><expr><name pos:line="379" pos:column="75">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></for>
				
				
				<if pos:line="383" pos:column="33">if<condition pos:line="383" pos:column="35">(<expr><name pos:line="383" pos:column="36">percentages</name><op:operator pos:line="383" pos:column="47">!=</op:operator><lit:literal type="null" pos:line="383" pos:column="49">null</lit:literal></expr>)</condition><then><block pos:line="383" pos:column="54">{					
					<decl_stmt><decl><type><name pos:line="384" pos:column="41">CourseCurve</name></type> <name pos:line="384" pos:column="53">curve</name> <init pos:line="384" pos:column="59">= <expr><call><name><name pos:line="384" pos:column="61">CourseCurve</name><op:operator pos:line="384" pos:column="72">.</op:operator><name pos:line="384" pos:column="73">calculateMaxGapCurve</name></name><argument_list pos:line="384" pos:column="93">(<argument><expr><call><name><name pos:line="384" pos:column="94">courseOffered</name><op:operator pos:line="384" pos:column="107">.</op:operator><name pos:line="384" pos:column="108">getOfferID</name></name><argument_list pos:line="384" pos:column="118">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="384" pos:column="122">percentArray</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><specifier pos:line="385" pos:column="41">final</specifier> <name><name pos:line="385" pos:column="47">HashMap</name><argument_list pos:line="385" pos:column="54">&lt;<argument><name pos:line="385" pos:column="55">Student</name></argument>, <argument><name pos:line="385" pos:column="64">String</name></argument>&gt;</argument_list></name></type> <name pos:line="385" pos:column="72">curvedMarks</name> <init pos:line="385" pos:column="84">= <expr><call><name><name pos:line="385" pos:column="86">curve</name><op:operator pos:line="385" pos:column="91">.</op:operator><name pos:line="385" pos:column="92">getCourseCurve</name></name><argument_list pos:line="385" pos:column="106">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="386" pos:column="41">gradeDisplayPanel</name><op:operator pos:line="386" pos:column="58">.</op:operator><name pos:line="386" pos:column="59">removeAll</name></name><argument_list pos:line="386" pos:column="68">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="387" pos:column="41">gradeDisplayPanel</name><op:operator pos:line="387" pos:column="58">.</op:operator><name pos:line="387" pos:column="59">revalidate</name></name><argument_list pos:line="387" pos:column="69">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="388" pos:column="41">gradeDisplayPanel</name><op:operator pos:line="388" pos:column="58">.</op:operator><name pos:line="388" pos:column="59">repaint</name></name><argument_list pos:line="388" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
					<for pos:line="389" pos:column="41">for(<init><decl><type><name pos:line="389" pos:column="45">Student</name></type> <name pos:line="389" pos:column="53">s</name><range pos:line="389" pos:column="54">:<expr><call><name><name pos:line="389" pos:column="55">curvedMarks</name><op:operator pos:line="389" pos:column="66">.</op:operator><name pos:line="389" pos:column="67">keySet</name></name><argument_list pos:line="389" pos:column="73">()</argument_list></call></expr></range></decl></init>)<block pos:line="389" pos:column="76">{
						<decl_stmt><decl><type><name pos:line="390" pos:column="49">String</name></type> <name pos:line="390" pos:column="56">name</name> <init pos:line="390" pos:column="61">= <expr><call><name><name pos:line="390" pos:column="63">s</name><op:operator pos:line="390" pos:column="64">.</op:operator><name pos:line="390" pos:column="65">getName</name></name><argument_list pos:line="390" pos:column="72">()</argument_list></call></expr></init></decl>;</decl_stmt>
						<decl_stmt><decl><type><name pos:line="391" pos:column="49">String</name></type> <name pos:line="391" pos:column="56">grade</name> <init pos:line="391" pos:column="62">= <expr><call><name><name pos:line="391" pos:column="64">curvedMarks</name><op:operator pos:line="391" pos:column="75">.</op:operator><name pos:line="391" pos:column="76">get</name></name><argument_list pos:line="391" pos:column="79">(<argument><expr><name pos:line="391" pos:column="80">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<decl_stmt><decl><type><name pos:line="392" pos:column="49">JPanel</name></type> <name pos:line="392" pos:column="56">newPanel</name> <init pos:line="392" pos:column="65">= <expr><call><name pos:line="392" pos:column="67">makeGradePanel</name><argument_list pos:line="392" pos:column="81">(<argument><expr><call><name><name pos:line="392" pos:column="82">s</name><op:operator pos:line="392" pos:column="83">.</op:operator><name pos:line="392" pos:column="84">getUIN</name></name><argument_list pos:line="392" pos:column="90">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="392" pos:column="94">grade</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><call><name><name pos:line="393" pos:column="49">gradeDisplayPanel</name><op:operator pos:line="393" pos:column="66">.</op:operator><name pos:line="393" pos:column="67">add</name></name><argument_list pos:line="393" pos:column="70">(<argument><expr><name pos:line="393" pos:column="71">newPanel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></for>
					
					<decl_stmt><decl><type><name pos:line="396" pos:column="41">JButton</name></type> <name pos:line="396" pos:column="49">postbutton</name> <init pos:line="396" pos:column="60">= <expr><op:operator pos:line="396" pos:column="62">new</op:operator> <call><name pos:line="396" pos:column="66">JButton</name><argument_list pos:line="396" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="396" pos:column="74">"Post grades"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="397" pos:column="41">postbutton</name><op:operator pos:line="397" pos:column="51">.</op:operator><name pos:line="397" pos:column="52">addActionListener</name></name><argument_list pos:line="397" pos:column="69">(<argument><expr><op:operator pos:line="397" pos:column="70">new</op:operator> <class><super><name pos:line="397" pos:column="74">ActionListener</name></super><argument_list pos:line="397" pos:column="88">()</argument_list> <block pos:line="397" pos:column="91">{
						
						<function><type><annotation pos:line="399" pos:column="49">@<name pos:line="399" pos:column="50">Override</name></annotation>
						<specifier pos:line="400" pos:column="49">public</specifier> <name pos:line="400" pos:column="56">void</name></type> <name pos:line="400" pos:column="61">actionPerformed</name><parameter_list pos:line="400" pos:column="76">(<param><decl><type><name pos:line="400" pos:column="77">ActionEvent</name></type> <name pos:line="400" pos:column="89">e</name></decl></param>)</parameter_list> <block pos:line="400" pos:column="92">{
							<expr_stmt><expr><call><name><name pos:line="401" pos:column="57">StudentEnrollment</name><op:operator pos:line="401" pos:column="74">.</op:operator><name pos:line="401" pos:column="75">updateAllStudentGrade</name></name><argument_list pos:line="401" pos:column="96">(<argument><expr><name pos:line="401" pos:column="97">curvedMarks</name></expr></argument>, <argument><expr><name pos:line="401" pos:column="110">courseOffered</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>						
						}</block></function>
					}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
					<expr_stmt><expr><call><name><name pos:line="405" pos:column="41">gradeDisplayPanel</name><op:operator pos:line="405" pos:column="58">.</op:operator><name pos:line="405" pos:column="59">add</name></name><argument_list pos:line="405" pos:column="62">(<argument><expr><name pos:line="405" pos:column="63">postbutton</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
					<expr_stmt><expr><call><name><name pos:line="407" pos:column="41">gradeDisplayPanel</name><op:operator pos:line="407" pos:column="58">.</op:operator><name pos:line="407" pos:column="59">revalidate</name></name><argument_list pos:line="407" pos:column="69">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="408" pos:column="41">gradeDisplayPanel</name><op:operator pos:line="408" pos:column="58">.</op:operator><name pos:line="408" pos:column="59">repaint</name></name><argument_list pos:line="408" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="412" pos:column="17">panel_4</name><op:operator pos:line="412" pos:column="24">.</op:operator><name pos:line="412" pos:column="25">add</name></name><argument_list pos:line="412" pos:column="28">(<argument><expr><name pos:line="412" pos:column="29">btnCurveByMax</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="414" pos:column="17">gradeDisplayPanel</name> <op:operator pos:line="414" pos:column="35">=</op:operator> <op:operator pos:line="414" pos:column="37">new</op:operator> <call><name pos:line="414" pos:column="41">JPanel</name><argument_list pos:line="414" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="415" pos:column="17">gradeDisplayPanel</name><op:operator pos:line="415" pos:column="34">.</op:operator><name pos:line="415" pos:column="35">setBorder</name></name><argument_list pos:line="415" pos:column="44">(<argument><expr><op:operator pos:line="415" pos:column="45">new</op:operator> <call><name pos:line="415" pos:column="49">EtchedBorder</name><argument_list pos:line="415" pos:column="61">(<argument><expr><name><name pos:line="415" pos:column="62">EtchedBorder</name><op:operator pos:line="415" pos:column="74">.</op:operator><name pos:line="415" pos:column="75">RAISED</name></name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="415" pos:column="83">null</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="415" pos:column="89">null</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="416" pos:column="17">gradeDisplayPanel</name><op:operator pos:line="416" pos:column="34">.</op:operator><name pos:line="416" pos:column="35">setBounds</name></name><argument_list pos:line="416" pos:column="44">(<argument><expr><lit:literal type="number" pos:line="416" pos:column="45">349</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="416" pos:column="50">11</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="416" pos:column="54">480</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="416" pos:column="59">625</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="417" pos:column="17">gradeDisplayPanel</name><op:operator pos:line="417" pos:column="34">.</op:operator><name pos:line="417" pos:column="35">setLayout</name></name><argument_list pos:line="417" pos:column="44">(<argument><expr><op:operator pos:line="417" pos:column="45">new</op:operator> <call><name pos:line="417" pos:column="49">GridLayout</name><argument_list pos:line="417" pos:column="59">(<argument><expr><lit:literal type="number" pos:line="417" pos:column="60">20</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="417" pos:column="63">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="418" pos:column="17">panel_3</name><op:operator pos:line="418" pos:column="24">.</op:operator><name pos:line="418" pos:column="25">add</name></name><argument_list pos:line="418" pos:column="28">(<argument><expr><name pos:line="418" pos:column="29">gradeDisplayPanel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="419" pos:column="17">initialize</name><argument_list pos:line="419" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
				
		<decl_stmt><decl><type><name pos:line="421" pos:column="17">Timer</name></type> <name pos:line="421" pos:column="23">timer</name> <init pos:line="421" pos:column="29">= <expr><op:operator pos:line="421" pos:column="31">new</op:operator> <call><name pos:line="421" pos:column="35">Timer</name><argument_list pos:line="421" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="422" pos:column="17">timer</name><op:operator pos:line="422" pos:column="22">.</op:operator><name pos:line="422" pos:column="23">scheduleAtFixedRate</name></name><argument_list pos:line="422" pos:column="42">(<argument><expr><op:operator pos:line="422" pos:column="43">new</op:operator> <class><super><name pos:line="422" pos:column="47">TimerTask</name></super><argument_list pos:line="422" pos:column="56">()</argument_list> <block pos:line="422" pos:column="59">{
			
			<function><type><annotation pos:line="424" pos:column="25">@<name pos:line="424" pos:column="26">Override</name></annotation>
			<specifier pos:line="425" pos:column="25">public</specifier> <name pos:line="425" pos:column="32">void</name></type> <name pos:line="425" pos:column="37">run</name><parameter_list pos:line="425" pos:column="40">()</parameter_list> <block pos:line="425" pos:column="43">{
				<if pos:line="426" pos:column="33">if<condition pos:line="426" pos:column="35">(<expr><name pos:line="426" pos:column="36">deleteFlag</name></expr>)</condition><then><block pos:line="426" pos:column="47">{
					<expr_stmt><expr><call><name pos:line="427" pos:column="41">initialize</name><argument_list pos:line="427" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="428" pos:column="41">System</name><op:operator pos:line="428" pos:column="47">.</op:operator><name pos:line="428" pos:column="48">out</name><op:operator pos:line="428" pos:column="51">.</op:operator><name pos:line="428" pos:column="52">println</name></name><argument_list pos:line="428" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="428" pos:column="60">"Reinitializing"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="429" pos:column="41">deleteFlag</name><op:operator pos:line="429" pos:column="51">=</op:operator><lit:literal type="boolean" pos:line="429" pos:column="52">false</lit:literal></expr>;</expr_stmt>
				}</block></then></if>
				
			}</block></function>
		}</block></class></expr></argument>, <argument><expr><lit:literal type="number" pos:line="433" pos:column="20">100</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="433" pos:column="25">1000</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></constructor>
	
	<comment type="line" pos:line="436" pos:column="9">// To parse and evalute the grading criteria input entered by the user</comment>
	<function><type><specifier pos:line="437" pos:column="9">public</specifier> <name pos:line="437" pos:column="16">String</name><index pos:line="437" pos:column="22">[]</index></type> <name pos:line="437" pos:column="25">parseGradeCriteriaString</name><parameter_list pos:line="437" pos:column="49">(<param><decl><type><name pos:line="437" pos:column="50">String</name></type> <name pos:line="437" pos:column="57">input</name></decl></param>)</parameter_list><block pos:line="437" pos:column="63">{
		<decl_stmt><decl><type><name pos:line="438" pos:column="17">String</name><index pos:line="438" pos:column="23">[]</index></type> <name pos:line="438" pos:column="26">percentages</name> <init pos:line="438" pos:column="38">= <expr><lit:literal type="null" pos:line="438" pos:column="40">null</lit:literal></expr></init></decl>;</decl_stmt>
		<if pos:line="439" pos:column="17">if<condition pos:line="439" pos:column="19">(<expr><call><name><name pos:line="439" pos:column="20">input</name><op:operator pos:line="439" pos:column="25">.</op:operator><name pos:line="439" pos:column="26">matches</name></name><argument_list pos:line="439" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="439" pos:column="34">"^[0-9]{1,3}(,[0-9]{1,3})*"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then><block pos:line="439" pos:column="63">{
			<expr_stmt><expr><name pos:line="440" pos:column="25">percentages</name> <op:operator pos:line="440" pos:column="37">=</op:operator> <call><name><name pos:line="440" pos:column="39">input</name><op:operator pos:line="440" pos:column="44">.</op:operator><name pos:line="440" pos:column="45">split</name></name><argument_list pos:line="440" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="440" pos:column="51">","</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		
		<return pos:line="443" pos:column="17">return <expr><name pos:line="443" pos:column="24">percentages</name></expr>;</return>
	}</block></function>
	
	<comment type="line" pos:line="446" pos:column="9">// To parse and evalute a different type of grading criteria input entered by the user</comment>
	<function><type><specifier pos:line="447" pos:column="9">public</specifier> <name pos:line="447" pos:column="16">String</name><index pos:line="447" pos:column="22">[]</index></type> <name pos:line="447" pos:column="25">parseGradeCriteriaStringAbsolute</name><parameter_list pos:line="447" pos:column="57">(<param><decl><type><name pos:line="447" pos:column="58">String</name></type> <name pos:line="447" pos:column="65">input</name></decl></param>)</parameter_list><block pos:line="447" pos:column="71">{
		<decl_stmt><decl><type><name pos:line="448" pos:column="17">String</name><index pos:line="448" pos:column="23">[]</index></type> <name pos:line="448" pos:column="26">percentages</name> <init pos:line="448" pos:column="38">= <expr><lit:literal type="null" pos:line="448" pos:column="40">null</lit:literal></expr></init></decl>;</decl_stmt>
		<if pos:line="449" pos:column="17">if<condition pos:line="449" pos:column="19">(<expr><call><name><name pos:line="449" pos:column="20">input</name><op:operator pos:line="449" pos:column="25">.</op:operator><name pos:line="449" pos:column="26">matches</name></name><argument_list pos:line="449" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="449" pos:column="34">"^[0-9]{1,2}(,[0-9]{1,2})*"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then><block pos:line="449" pos:column="63">{
			<expr_stmt><expr><name pos:line="450" pos:column="25">percentages</name> <op:operator pos:line="450" pos:column="37">=</op:operator> <call><name><name pos:line="450" pos:column="39">input</name><op:operator pos:line="450" pos:column="44">.</op:operator><name pos:line="450" pos:column="45">split</name></name><argument_list pos:line="450" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="450" pos:column="51">","</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		
		<return pos:line="453" pos:column="17">return <expr><name pos:line="453" pos:column="24">percentages</name></expr>;</return>
	}</block></function>
	
	<comment type="line" pos:line="456" pos:column="9">// Creates a panel for each exam</comment>
	<function><type><specifier pos:line="457" pos:column="9">public</specifier> <name pos:line="457" pos:column="16">JPanel</name></type> <name pos:line="457" pos:column="23">makePanel</name><parameter_list pos:line="457" pos:column="32">(<param><decl><type><specifier pos:line="457" pos:column="33">final</specifier> <name pos:line="457" pos:column="39">CourseExamStructure</name></type> <name pos:line="457" pos:column="59">examStruc</name></decl></param>)</parameter_list><block pos:line="457" pos:column="69">{
		<decl_stmt><decl><type><name pos:line="458" pos:column="17">String</name></type> <name pos:line="458" pos:column="24">exam</name> <init pos:line="458" pos:column="29">= <expr><call><name><name pos:line="458" pos:column="31">examStruc</name><op:operator pos:line="458" pos:column="40">.</op:operator><name pos:line="458" pos:column="41">getExamName</name></name><argument_list pos:line="458" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="459" pos:column="17">int</name></type> <name pos:line="459" pos:column="21">examMarks</name> <init pos:line="459" pos:column="31">= <expr><call><name><name pos:line="459" pos:column="33">examStruc</name><op:operator pos:line="459" pos:column="42">.</op:operator><name pos:line="459" pos:column="43">getExamTotal</name></name><argument_list pos:line="459" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="460" pos:column="17">System</name><op:operator pos:line="460" pos:column="23">.</op:operator><name pos:line="460" pos:column="24">out</name><op:operator pos:line="460" pos:column="27">.</op:operator><name pos:line="460" pos:column="28">println</name></name><argument_list pos:line="460" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="460" pos:column="36">"Exam: "</lit:literal> <op:operator pos:line="460" pos:column="45">+</op:operator> <name pos:line="460" pos:column="47">exam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="461" pos:column="17">System</name><op:operator pos:line="461" pos:column="23">.</op:operator><name pos:line="461" pos:column="24">out</name><op:operator pos:line="461" pos:column="27">.</op:operator><name pos:line="461" pos:column="28">println</name></name><argument_list pos:line="461" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="461" pos:column="36">"Exam Marks: "</lit:literal> <op:operator pos:line="461" pos:column="51">+</op:operator> <name pos:line="461" pos:column="53">examMarks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="463" pos:column="17">JPanel</name></type> <name pos:line="463" pos:column="24">p</name> <init pos:line="463" pos:column="26">= <expr><op:operator pos:line="463" pos:column="28">new</op:operator> <call><name pos:line="463" pos:column="32">JPanel</name><argument_list pos:line="463" pos:column="38">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="464" pos:column="17">p</name><op:operator pos:line="464" pos:column="18">.</op:operator><name pos:line="464" pos:column="19">setLayout</name></name><argument_list pos:line="464" pos:column="28">(<argument><expr><op:operator pos:line="464" pos:column="29">new</op:operator> <call><name pos:line="464" pos:column="33">GridLayout</name><argument_list pos:line="464" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="464" pos:column="44">4</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="464" pos:column="47">2</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="465" pos:column="17">JLabel</name></type> <name pos:line="465" pos:column="24">ExamName</name> <init pos:line="465" pos:column="33">= <expr><op:operator pos:line="465" pos:column="35">new</op:operator> <call><name pos:line="465" pos:column="39">JLabel</name><argument_list pos:line="465" pos:column="45">()</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<expr_stmt><expr><call><name><name pos:line="467" pos:column="17">ExamName</name><op:operator pos:line="467" pos:column="25">.</op:operator><name pos:line="467" pos:column="26">setText</name></name><argument_list pos:line="467" pos:column="33">(<argument><expr><name pos:line="467" pos:column="34">exam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="468" pos:column="17">p</name><op:operator pos:line="468" pos:column="18">.</op:operator><name pos:line="468" pos:column="19">add</name></name><argument_list pos:line="468" pos:column="22">(<argument><expr><name pos:line="468" pos:column="23">ExamName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<comment type="line" pos:line="470" pos:column="17">//p.setLayout(new FlowLayout(4, 3, 4));</comment>
		<decl_stmt><decl><type><name pos:line="471" pos:column="17">JLabel</name></type> <name pos:line="471" pos:column="24">Marks</name> <init pos:line="471" pos:column="30">= <expr><op:operator pos:line="471" pos:column="32">new</op:operator> <call><name pos:line="471" pos:column="36">JLabel</name><argument_list pos:line="471" pos:column="42">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="472" pos:column="17">Marks</name><op:operator pos:line="472" pos:column="22">.</op:operator><name pos:line="472" pos:column="23">setText</name></name><argument_list pos:line="472" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="472" pos:column="31">""</lit:literal><op:operator pos:line="472" pos:column="33">+</op:operator><name pos:line="472" pos:column="34">examMarks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="473" pos:column="17">p</name><op:operator pos:line="473" pos:column="18">.</op:operator><name pos:line="473" pos:column="19">add</name></name><argument_list pos:line="473" pos:column="22">(<argument><expr><name pos:line="473" pos:column="23">Marks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><specifier pos:line="475" pos:column="17">final</specifier> <name pos:line="475" pos:column="23">JButton</name></type> <name pos:line="475" pos:column="31">addMarks</name> <init pos:line="475" pos:column="40">= <expr><op:operator pos:line="475" pos:column="42">new</op:operator> <call><name pos:line="475" pos:column="46">JButton</name><argument_list pos:line="475" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="475" pos:column="54">"Add Marks"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="476" pos:column="17">p</name><op:operator pos:line="476" pos:column="18">.</op:operator><name pos:line="476" pos:column="19">add</name></name><argument_list pos:line="476" pos:column="22">(<argument><expr><name pos:line="476" pos:column="23">addMarks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<return pos:line="478" pos:column="17">return <expr><name pos:line="478" pos:column="24">p</name></expr>;</return>
	}</block></function>

	<comment type="line" pos:line="481" pos:column="9">// To initialize the page and paint it with the current values</comment>
	<function><type><specifier pos:line="482" pos:column="9">public</specifier> <name pos:line="482" pos:column="16">void</name></type> <name pos:line="482" pos:column="21">initialize</name><parameter_list pos:line="482" pos:column="31">()</parameter_list><block pos:line="482" pos:column="33">{
		<decl_stmt><decl><type><name pos:line="483" pos:column="17">int</name></type> <name pos:line="483" pos:column="21">offerID</name> <init pos:line="483" pos:column="29">= <expr><call><name><name pos:line="483" pos:column="31">courseOffered</name><op:operator pos:line="483" pos:column="44">.</op:operator><name pos:line="483" pos:column="45">getOfferID</name></name><argument_list pos:line="483" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="484" pos:column="17">CourseExams</name></type> <name pos:line="484" pos:column="29">exam</name> <init pos:line="484" pos:column="34">= <expr><op:operator pos:line="484" pos:column="36">new</op:operator> <call><name pos:line="484" pos:column="40">CourseExams</name><argument_list pos:line="484" pos:column="51">(<argument><expr><name pos:line="484" pos:column="52">offerID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="485" pos:column="17">ArrayList</name><argument_list pos:line="485" pos:column="26">&lt;<argument><name pos:line="485" pos:column="27">String</name></argument>&gt;</argument_list></name></type> <name pos:line="485" pos:column="35">allExams</name> <init pos:line="485" pos:column="44">= <expr><call><name><name pos:line="485" pos:column="46">exam</name><op:operator pos:line="485" pos:column="50">.</op:operator><name pos:line="485" pos:column="51">viewAllExams</name></name><argument_list pos:line="485" pos:column="63">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="486" pos:column="17">allExamsPanel</name><op:operator pos:line="486" pos:column="30">.</op:operator><name pos:line="486" pos:column="31">removeAll</name></name><argument_list pos:line="486" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="487" pos:column="17">allExamsPanel</name><op:operator pos:line="487" pos:column="30">.</op:operator><name pos:line="487" pos:column="31">revalidate</name></name><argument_list pos:line="487" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="488" pos:column="17">allExamsPanel</name><op:operator pos:line="488" pos:column="30">.</op:operator><name pos:line="488" pos:column="31">repaint</name></name><argument_list pos:line="488" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		
		<for pos:line="490" pos:column="17">for(<init><decl><type><name pos:line="490" pos:column="21">String</name></type> <name pos:line="490" pos:column="28">oneExamName</name><range pos:line="490" pos:column="39">: <expr><name pos:line="490" pos:column="41">allExams</name></expr></range></decl></init>)<block pos:line="490" pos:column="50">{
			<decl_stmt><decl><type><name pos:line="491" pos:column="25">CourseExamStructure</name></type> <name pos:line="491" pos:column="45">oneExam</name> <init pos:line="491" pos:column="53">= <expr><op:operator pos:line="491" pos:column="55">new</op:operator> <call><name pos:line="491" pos:column="59">CourseExamStructure</name><argument_list pos:line="491" pos:column="78">(<argument><expr><name pos:line="491" pos:column="79">courseOffered</name></expr></argument>,<argument><expr><name pos:line="491" pos:column="93">oneExamName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="492" pos:column="25">allExamsPanel</name><op:operator pos:line="492" pos:column="38">.</op:operator><name pos:line="492" pos:column="39">add</name></name><argument_list pos:line="492" pos:column="42">(<argument><expr><op:operator pos:line="492" pos:column="43">new</op:operator> <call><name pos:line="492" pos:column="47">SingleExamPanel</name><argument_list pos:line="492" pos:column="62">(<argument><expr><name pos:line="492" pos:column="63">oneExam</name></expr></argument>,<argument><expr><name pos:line="492" pos:column="71">isTA</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		
		<expr_stmt><expr><call><name><name pos:line="495" pos:column="17">allExamsPanel</name><op:operator pos:line="495" pos:column="30">.</op:operator><name pos:line="495" pos:column="31">revalidate</name></name><argument_list pos:line="495" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="496" pos:column="17">allExamsPanel</name><op:operator pos:line="496" pos:column="30">.</op:operator><name pos:line="496" pos:column="31">repaint</name></name><argument_list pos:line="496" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		
		
		<decl_stmt><decl><type><name><name pos:line="499" pos:column="17">ArrayList</name><argument_list pos:line="499" pos:column="26">&lt;<argument><name pos:line="499" pos:column="27">Student</name></argument>&gt;</argument_list></name></type> <name pos:line="499" pos:column="36">allStudents</name> <init pos:line="499" pos:column="48">= <expr><call><name><name pos:line="499" pos:column="50">StudentEnrollment</name><op:operator pos:line="499" pos:column="67">.</op:operator><name pos:line="499" pos:column="68">getStudentsInCourse</name></name><argument_list pos:line="499" pos:column="87">(<argument><expr><name pos:line="499" pos:column="88">courseOffered</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		
		
		<comment type="line" pos:line="502" pos:column="17">// Add Exam Names as Titles for the columns</comment>
		<decl_stmt><decl><type><name pos:line="503" pos:column="17">int</name></type> <name pos:line="503" pos:column="21">offerID2</name> <init pos:line="503" pos:column="30">= <expr><call><name><name pos:line="503" pos:column="32">courseOffered</name><op:operator pos:line="503" pos:column="45">.</op:operator><name pos:line="503" pos:column="46">getOfferID</name></name><argument_list pos:line="503" pos:column="56">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="504" pos:column="17">CourseExams</name></type> <name pos:line="504" pos:column="29">courseExam</name> <init pos:line="504" pos:column="40">=  <expr><op:operator pos:line="504" pos:column="43">new</op:operator> <call><name pos:line="504" pos:column="47">CourseExams</name><argument_list pos:line="504" pos:column="58">(<argument><expr><name pos:line="504" pos:column="59">offerID2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="505" pos:column="17">ArrayList</name><argument_list pos:line="505" pos:column="26">&lt;<argument><name pos:line="505" pos:column="27">String</name></argument>&gt;</argument_list></name></type> <name pos:line="505" pos:column="35">exams</name> <init pos:line="505" pos:column="41">= <expr><call><name><name pos:line="505" pos:column="43">courseExam</name><op:operator pos:line="505" pos:column="53">.</op:operator><name pos:line="505" pos:column="54">viewAllExams</name></name><argument_list pos:line="505" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<expr_stmt><expr><call><name><name pos:line="507" pos:column="17">btnCancel</name><op:operator pos:line="507" pos:column="26">.</op:operator><name pos:line="507" pos:column="27">setVisible</name></name><argument_list pos:line="507" pos:column="37">(<argument><expr><lit:literal type="boolean" pos:line="507" pos:column="38">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>
	
	<comment type="line" pos:line="510" pos:column="9">// Creates a panel to display grades of each student.</comment>
	<function><type><specifier pos:line="511" pos:column="9">public</specifier> <name pos:line="511" pos:column="16">JPanel</name></type> <name pos:line="511" pos:column="23">makeGradePanel</name><parameter_list pos:line="511" pos:column="37">(<param><decl><type><name pos:line="511" pos:column="38">int</name></type> <name pos:line="511" pos:column="42">UIN</name></decl></param>, <param><decl><type><name pos:line="511" pos:column="47">String</name></type> <name pos:line="511" pos:column="54">grade</name></decl></param>)</parameter_list><block pos:line="511" pos:column="60">{
		
		<decl_stmt><decl><type><name pos:line="513" pos:column="17">JPanel</name></type> <name pos:line="513" pos:column="24">singleGradePanel</name> <init pos:line="513" pos:column="41">= <expr><op:operator pos:line="513" pos:column="43">new</op:operator> <call><name pos:line="513" pos:column="47">JPanel</name><argument_list pos:line="513" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="514" pos:column="17">singleGradePanel</name><op:operator pos:line="514" pos:column="33">.</op:operator><name pos:line="514" pos:column="34">setBounds</name></name><argument_list pos:line="514" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="514" pos:column="44">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="514" pos:column="47">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="514" pos:column="50">200</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="514" pos:column="55">50</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="516" pos:column="17">JLabel</name></type> <name pos:line="516" pos:column="24">uinLabel</name> <init pos:line="516" pos:column="33">= <expr><op:operator pos:line="516" pos:column="35">new</op:operator> <call><name pos:line="516" pos:column="39">JLabel</name><argument_list pos:line="516" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="516" pos:column="46">""</lit:literal><op:operator pos:line="516" pos:column="48">+</op:operator><name pos:line="516" pos:column="49">UIN</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="517" pos:column="17">singleGradePanel</name><op:operator pos:line="517" pos:column="33">.</op:operator><name pos:line="517" pos:column="34">add</name></name><argument_list pos:line="517" pos:column="37">(<argument><expr><name pos:line="517" pos:column="38">uinLabel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="519" pos:column="17">JLabel</name></type> <name pos:line="519" pos:column="24">gradeLabel</name> <init pos:line="519" pos:column="35">= <expr><op:operator pos:line="519" pos:column="37">new</op:operator> <call><name pos:line="519" pos:column="41">JLabel</name><argument_list pos:line="519" pos:column="47">(<argument><expr><name pos:line="519" pos:column="48">grade</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="520" pos:column="17">singleGradePanel</name><op:operator pos:line="520" pos:column="33">.</op:operator><name pos:line="520" pos:column="34">add</name></name><argument_list pos:line="520" pos:column="37">(<argument><expr><name pos:line="520" pos:column="38">gradeLabel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<return pos:line="522" pos:column="17">return <expr><name pos:line="522" pos:column="24">singleGradePanel</name></expr>;</return>		
	}</block></function>
		
}</block></class>

</unit>
