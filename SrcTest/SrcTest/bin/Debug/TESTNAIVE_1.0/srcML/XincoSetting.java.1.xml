<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\xinco\src\com\bluecubs\xinco\core\XincoSetting.java" pos:tabs="8"><comment type="block" format="javadoc" pos:line="1" pos:column="1">/**
 * XincoSetting.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.
 */</comment>

<package pos:line="8" pos:column="1">package <name><name pos:line="8" pos:column="9">com</name><op:operator pos:line="8" pos:column="12">.</op:operator><name pos:line="8" pos:column="13">bluecubs</name><op:operator pos:line="8" pos:column="21">.</op:operator><name pos:line="8" pos:column="22">xinco</name><op:operator pos:line="8" pos:column="27">.</op:operator><name pos:line="8" pos:column="28">core</name></name>;</package>

<class><specifier pos:line="10" pos:column="1">public</specifier> class <name pos:line="10" pos:column="14">XincoSetting</name>  <super><implements pos:line="10" pos:column="28">implements <name><name pos:line="10" pos:column="39">java</name><op:operator pos:line="10" pos:column="43">.</op:operator><name pos:line="10" pos:column="44">io</name><op:operator pos:line="10" pos:column="46">.</op:operator><name pos:line="10" pos:column="47">Serializable</name></name></implements></super> <block pos:line="10" pos:column="60">{
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">private</specifier> <name pos:line="11" pos:column="13">int</name></type> <name pos:line="11" pos:column="17">id</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="13" pos:column="5">private</specifier> <name><name pos:line="13" pos:column="13">java</name><op:operator pos:line="13" pos:column="17">.</op:operator><name pos:line="13" pos:column="18">lang</name><op:operator pos:line="13" pos:column="22">.</op:operator><name pos:line="13" pos:column="23">String</name></name></type> <name pos:line="13" pos:column="30">description</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="15" pos:column="5">private</specifier> <name pos:line="15" pos:column="13">int</name></type> <name pos:line="15" pos:column="17">int_value</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="17" pos:column="5">private</specifier> <name><name pos:line="17" pos:column="13">java</name><op:operator pos:line="17" pos:column="17">.</op:operator><name pos:line="17" pos:column="18">lang</name><op:operator pos:line="17" pos:column="22">.</op:operator><name pos:line="17" pos:column="23">String</name></name></type> <name pos:line="17" pos:column="30">string_value</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="19" pos:column="5">private</specifier> <name pos:line="19" pos:column="13">boolean</name></type> <name pos:line="19" pos:column="21">bool_value</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="21" pos:column="5">private</specifier> <name pos:line="21" pos:column="13">int</name></type> <name pos:line="21" pos:column="17">changerID</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="23" pos:column="5">private</specifier> <name pos:line="23" pos:column="13">long</name></type> <name pos:line="23" pos:column="18">long_value</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="25" pos:column="5">private</specifier> <name><name pos:line="25" pos:column="13">java</name><op:operator pos:line="25" pos:column="17">.</op:operator><name pos:line="25" pos:column="18">util</name><op:operator pos:line="25" pos:column="22">.</op:operator><name pos:line="25" pos:column="23">Vector</name></name></type> <name pos:line="25" pos:column="30">xinco_settings</name></decl>;</decl_stmt>

    <constructor><specifier pos:line="27" pos:column="5">public</specifier> <name pos:line="27" pos:column="12">XincoSetting</name><parameter_list pos:line="27" pos:column="24">()</parameter_list> <block pos:line="27" pos:column="27">{
    }</block></constructor>

    <constructor><specifier pos:line="30" pos:column="5">public</specifier> <name pos:line="30" pos:column="12">XincoSetting</name><parameter_list pos:line="30" pos:column="24">(
           <param><decl><type><name pos:line="31" pos:column="12">int</name></type> <name pos:line="31" pos:column="16">id</name></decl></param>,
           <param><decl><type><name><name pos:line="32" pos:column="12">java</name><op:operator pos:line="32" pos:column="16">.</op:operator><name pos:line="32" pos:column="17">lang</name><op:operator pos:line="32" pos:column="21">.</op:operator><name pos:line="32" pos:column="22">String</name></name></type> <name pos:line="32" pos:column="29">description</name></decl></param>,
           <param><decl><type><name pos:line="33" pos:column="12">int</name></type> <name pos:line="33" pos:column="16">int_value</name></decl></param>,
           <param><decl><type><name><name pos:line="34" pos:column="12">java</name><op:operator pos:line="34" pos:column="16">.</op:operator><name pos:line="34" pos:column="17">lang</name><op:operator pos:line="34" pos:column="21">.</op:operator><name pos:line="34" pos:column="22">String</name></name></type> <name pos:line="34" pos:column="29">string_value</name></decl></param>,
           <param><decl><type><name pos:line="35" pos:column="12">boolean</name></type> <name pos:line="35" pos:column="20">bool_value</name></decl></param>,
           <param><decl><type><name pos:line="36" pos:column="12">int</name></type> <name pos:line="36" pos:column="16">changerID</name></decl></param>,
           <param><decl><type><name pos:line="37" pos:column="12">long</name></type> <name pos:line="37" pos:column="17">long_value</name></decl></param>,
           <param><decl><type><name><name pos:line="38" pos:column="12">java</name><op:operator pos:line="38" pos:column="16">.</op:operator><name pos:line="38" pos:column="17">util</name><op:operator pos:line="38" pos:column="21">.</op:operator><name pos:line="38" pos:column="22">Vector</name></name></type> <name pos:line="38" pos:column="29">xinco_settings</name></decl></param>)</parameter_list> <block pos:line="38" pos:column="45">{
           <expr_stmt><expr><name><name pos:line="39" pos:column="12">this</name><op:operator pos:line="39" pos:column="16">.</op:operator><name pos:line="39" pos:column="17">id</name></name> <op:operator pos:line="39" pos:column="20">=</op:operator> <name pos:line="39" pos:column="22">id</name></expr>;</expr_stmt>
           <expr_stmt><expr><name><name pos:line="40" pos:column="12">this</name><op:operator pos:line="40" pos:column="16">.</op:operator><name pos:line="40" pos:column="17">description</name></name> <op:operator pos:line="40" pos:column="29">=</op:operator> <name pos:line="40" pos:column="31">description</name></expr>;</expr_stmt>
           <expr_stmt><expr><name><name pos:line="41" pos:column="12">this</name><op:operator pos:line="41" pos:column="16">.</op:operator><name pos:line="41" pos:column="17">int_value</name></name> <op:operator pos:line="41" pos:column="27">=</op:operator> <name pos:line="41" pos:column="29">int_value</name></expr>;</expr_stmt>
           <expr_stmt><expr><name><name pos:line="42" pos:column="12">this</name><op:operator pos:line="42" pos:column="16">.</op:operator><name pos:line="42" pos:column="17">string_value</name></name> <op:operator pos:line="42" pos:column="30">=</op:operator> <name pos:line="42" pos:column="32">string_value</name></expr>;</expr_stmt>
           <expr_stmt><expr><name><name pos:line="43" pos:column="12">this</name><op:operator pos:line="43" pos:column="16">.</op:operator><name pos:line="43" pos:column="17">bool_value</name></name> <op:operator pos:line="43" pos:column="28">=</op:operator> <name pos:line="43" pos:column="30">bool_value</name></expr>;</expr_stmt>
           <expr_stmt><expr><name><name pos:line="44" pos:column="12">this</name><op:operator pos:line="44" pos:column="16">.</op:operator><name pos:line="44" pos:column="17">changerID</name></name> <op:operator pos:line="44" pos:column="27">=</op:operator> <name pos:line="44" pos:column="29">changerID</name></expr>;</expr_stmt>
           <expr_stmt><expr><name><name pos:line="45" pos:column="12">this</name><op:operator pos:line="45" pos:column="16">.</op:operator><name pos:line="45" pos:column="17">long_value</name></name> <op:operator pos:line="45" pos:column="28">=</op:operator> <name pos:line="45" pos:column="30">long_value</name></expr>;</expr_stmt>
           <expr_stmt><expr><name><name pos:line="46" pos:column="12">this</name><op:operator pos:line="46" pos:column="16">.</op:operator><name pos:line="46" pos:column="17">xinco_settings</name></name> <op:operator pos:line="46" pos:column="32">=</op:operator> <name pos:line="46" pos:column="34">xinco_settings</name></expr>;</expr_stmt>
    }</block></constructor>


    <comment type="block" format="javadoc" pos:line="50" pos:column="5">/**
     * Gets the id value for this XincoSetting.
     * 
     * @return id
     */</comment>
    <function><type><specifier pos:line="55" pos:column="5">public</specifier> <name pos:line="55" pos:column="12">int</name></type> <name pos:line="55" pos:column="16">getId</name><parameter_list pos:line="55" pos:column="21">()</parameter_list> <block pos:line="55" pos:column="24">{
        <return pos:line="56" pos:column="9">return <expr><name pos:line="56" pos:column="16">id</name></expr>;</return>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="60" pos:column="5">/**
     * Sets the id value for this XincoSetting.
     * 
     * @param id
     */</comment>
    <function><type><specifier pos:line="65" pos:column="5">public</specifier> <name pos:line="65" pos:column="12">void</name></type> <name pos:line="65" pos:column="17">setId</name><parameter_list pos:line="65" pos:column="22">(<param><decl><type><name pos:line="65" pos:column="23">int</name></type> <name pos:line="65" pos:column="27">id</name></decl></param>)</parameter_list> <block pos:line="65" pos:column="31">{
        <expr_stmt><expr><name><name pos:line="66" pos:column="9">this</name><op:operator pos:line="66" pos:column="13">.</op:operator><name pos:line="66" pos:column="14">id</name></name> <op:operator pos:line="66" pos:column="17">=</op:operator> <name pos:line="66" pos:column="19">id</name></expr>;</expr_stmt>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="70" pos:column="5">/**
     * Gets the description value for this XincoSetting.
     * 
     * @return description
     */</comment>
    <function><type><specifier pos:line="75" pos:column="5">public</specifier> <name><name pos:line="75" pos:column="12">java</name><op:operator pos:line="75" pos:column="16">.</op:operator><name pos:line="75" pos:column="17">lang</name><op:operator pos:line="75" pos:column="21">.</op:operator><name pos:line="75" pos:column="22">String</name></name></type> <name pos:line="75" pos:column="29">getDescription</name><parameter_list pos:line="75" pos:column="43">()</parameter_list> <block pos:line="75" pos:column="46">{
        <return pos:line="76" pos:column="9">return <expr><name pos:line="76" pos:column="16">description</name></expr>;</return>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="80" pos:column="5">/**
     * Sets the description value for this XincoSetting.
     * 
     * @param description
     */</comment>
    <function><type><specifier pos:line="85" pos:column="5">public</specifier> <name pos:line="85" pos:column="12">void</name></type> <name pos:line="85" pos:column="17">setDescription</name><parameter_list pos:line="85" pos:column="31">(<param><decl><type><name><name pos:line="85" pos:column="32">java</name><op:operator pos:line="85" pos:column="36">.</op:operator><name pos:line="85" pos:column="37">lang</name><op:operator pos:line="85" pos:column="41">.</op:operator><name pos:line="85" pos:column="42">String</name></name></type> <name pos:line="85" pos:column="49">description</name></decl></param>)</parameter_list> <block pos:line="85" pos:column="62">{
        <expr_stmt><expr><name><name pos:line="86" pos:column="9">this</name><op:operator pos:line="86" pos:column="13">.</op:operator><name pos:line="86" pos:column="14">description</name></name> <op:operator pos:line="86" pos:column="26">=</op:operator> <name pos:line="86" pos:column="28">description</name></expr>;</expr_stmt>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="90" pos:column="5">/**
     * Gets the int_value value for this XincoSetting.
     * 
     * @return int_value
     */</comment>
    <function><type><specifier pos:line="95" pos:column="5">public</specifier> <name pos:line="95" pos:column="12">int</name></type> <name pos:line="95" pos:column="16">getInt_value</name><parameter_list pos:line="95" pos:column="28">()</parameter_list> <block pos:line="95" pos:column="31">{
        <return pos:line="96" pos:column="9">return <expr><name pos:line="96" pos:column="16">int_value</name></expr>;</return>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="100" pos:column="5">/**
     * Sets the int_value value for this XincoSetting.
     * 
     * @param int_value
     */</comment>
    <function><type><specifier pos:line="105" pos:column="5">public</specifier> <name pos:line="105" pos:column="12">void</name></type> <name pos:line="105" pos:column="17">setInt_value</name><parameter_list pos:line="105" pos:column="29">(<param><decl><type><name pos:line="105" pos:column="30">int</name></type> <name pos:line="105" pos:column="34">int_value</name></decl></param>)</parameter_list> <block pos:line="105" pos:column="45">{
        <expr_stmt><expr><name><name pos:line="106" pos:column="9">this</name><op:operator pos:line="106" pos:column="13">.</op:operator><name pos:line="106" pos:column="14">int_value</name></name> <op:operator pos:line="106" pos:column="24">=</op:operator> <name pos:line="106" pos:column="26">int_value</name></expr>;</expr_stmt>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="110" pos:column="5">/**
     * Gets the string_value value for this XincoSetting.
     * 
     * @return string_value
     */</comment>
    <function><type><specifier pos:line="115" pos:column="5">public</specifier> <name><name pos:line="115" pos:column="12">java</name><op:operator pos:line="115" pos:column="16">.</op:operator><name pos:line="115" pos:column="17">lang</name><op:operator pos:line="115" pos:column="21">.</op:operator><name pos:line="115" pos:column="22">String</name></name></type> <name pos:line="115" pos:column="29">getString_value</name><parameter_list pos:line="115" pos:column="44">()</parameter_list> <block pos:line="115" pos:column="47">{
        <return pos:line="116" pos:column="9">return <expr><name pos:line="116" pos:column="16">string_value</name></expr>;</return>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="120" pos:column="5">/**
     * Sets the string_value value for this XincoSetting.
     * 
     * @param string_value
     */</comment>
    <function><type><specifier pos:line="125" pos:column="5">public</specifier> <name pos:line="125" pos:column="12">void</name></type> <name pos:line="125" pos:column="17">setString_value</name><parameter_list pos:line="125" pos:column="32">(<param><decl><type><name><name pos:line="125" pos:column="33">java</name><op:operator pos:line="125" pos:column="37">.</op:operator><name pos:line="125" pos:column="38">lang</name><op:operator pos:line="125" pos:column="42">.</op:operator><name pos:line="125" pos:column="43">String</name></name></type> <name pos:line="125" pos:column="50">string_value</name></decl></param>)</parameter_list> <block pos:line="125" pos:column="64">{
        <expr_stmt><expr><name><name pos:line="126" pos:column="9">this</name><op:operator pos:line="126" pos:column="13">.</op:operator><name pos:line="126" pos:column="14">string_value</name></name> <op:operator pos:line="126" pos:column="27">=</op:operator> <name pos:line="126" pos:column="29">string_value</name></expr>;</expr_stmt>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="130" pos:column="5">/**
     * Gets the bool_value value for this XincoSetting.
     * 
     * @return bool_value
     */</comment>
    <function><type><specifier pos:line="135" pos:column="5">public</specifier> <name pos:line="135" pos:column="12">boolean</name></type> <name pos:line="135" pos:column="20">isBool_value</name><parameter_list pos:line="135" pos:column="32">()</parameter_list> <block pos:line="135" pos:column="35">{
        <return pos:line="136" pos:column="9">return <expr><name pos:line="136" pos:column="16">bool_value</name></expr>;</return>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="140" pos:column="5">/**
     * Sets the bool_value value for this XincoSetting.
     * 
     * @param bool_value
     */</comment>
    <function><type><specifier pos:line="145" pos:column="5">public</specifier> <name pos:line="145" pos:column="12">void</name></type> <name pos:line="145" pos:column="17">setBool_value</name><parameter_list pos:line="145" pos:column="30">(<param><decl><type><name pos:line="145" pos:column="31">boolean</name></type> <name pos:line="145" pos:column="39">bool_value</name></decl></param>)</parameter_list> <block pos:line="145" pos:column="51">{
        <expr_stmt><expr><name><name pos:line="146" pos:column="9">this</name><op:operator pos:line="146" pos:column="13">.</op:operator><name pos:line="146" pos:column="14">bool_value</name></name> <op:operator pos:line="146" pos:column="25">=</op:operator> <name pos:line="146" pos:column="27">bool_value</name></expr>;</expr_stmt>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="150" pos:column="5">/**
     * Gets the changerID value for this XincoSetting.
     * 
     * @return changerID
     */</comment>
    <function><type><specifier pos:line="155" pos:column="5">public</specifier> <name pos:line="155" pos:column="12">int</name></type> <name pos:line="155" pos:column="16">getChangerID</name><parameter_list pos:line="155" pos:column="28">()</parameter_list> <block pos:line="155" pos:column="31">{
        <return pos:line="156" pos:column="9">return <expr><name pos:line="156" pos:column="16">changerID</name></expr>;</return>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="160" pos:column="5">/**
     * Sets the changerID value for this XincoSetting.
     * 
     * @param changerID
     */</comment>
    <function><type><specifier pos:line="165" pos:column="5">public</specifier> <name pos:line="165" pos:column="12">void</name></type> <name pos:line="165" pos:column="17">setChangerID</name><parameter_list pos:line="165" pos:column="29">(<param><decl><type><name pos:line="165" pos:column="30">int</name></type> <name pos:line="165" pos:column="34">changerID</name></decl></param>)</parameter_list> <block pos:line="165" pos:column="45">{
        <expr_stmt><expr><name><name pos:line="166" pos:column="9">this</name><op:operator pos:line="166" pos:column="13">.</op:operator><name pos:line="166" pos:column="14">changerID</name></name> <op:operator pos:line="166" pos:column="24">=</op:operator> <name pos:line="166" pos:column="26">changerID</name></expr>;</expr_stmt>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="170" pos:column="5">/**
     * Gets the long_value value for this XincoSetting.
     * 
     * @return long_value
     */</comment>
    <function><type><specifier pos:line="175" pos:column="5">public</specifier> <name pos:line="175" pos:column="12">long</name></type> <name pos:line="175" pos:column="17">getLong_value</name><parameter_list pos:line="175" pos:column="30">()</parameter_list> <block pos:line="175" pos:column="33">{
        <return pos:line="176" pos:column="9">return <expr><name pos:line="176" pos:column="16">long_value</name></expr>;</return>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="180" pos:column="5">/**
     * Sets the long_value value for this XincoSetting.
     * 
     * @param long_value
     */</comment>
    <function><type><specifier pos:line="185" pos:column="5">public</specifier> <name pos:line="185" pos:column="12">void</name></type> <name pos:line="185" pos:column="17">setLong_value</name><parameter_list pos:line="185" pos:column="30">(<param><decl><type><name pos:line="185" pos:column="31">long</name></type> <name pos:line="185" pos:column="36">long_value</name></decl></param>)</parameter_list> <block pos:line="185" pos:column="48">{
        <expr_stmt><expr><name><name pos:line="186" pos:column="9">this</name><op:operator pos:line="186" pos:column="13">.</op:operator><name pos:line="186" pos:column="14">long_value</name></name> <op:operator pos:line="186" pos:column="25">=</op:operator> <name pos:line="186" pos:column="27">long_value</name></expr>;</expr_stmt>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="190" pos:column="5">/**
     * Gets the xinco_settings value for this XincoSetting.
     * 
     * @return xinco_settings
     */</comment>
    <function><type><specifier pos:line="195" pos:column="5">public</specifier> <name><name pos:line="195" pos:column="12">java</name><op:operator pos:line="195" pos:column="16">.</op:operator><name pos:line="195" pos:column="17">util</name><op:operator pos:line="195" pos:column="21">.</op:operator><name pos:line="195" pos:column="22">Vector</name></name></type> <name pos:line="195" pos:column="29">getXinco_settings</name><parameter_list pos:line="195" pos:column="46">()</parameter_list> <block pos:line="195" pos:column="49">{
        <return pos:line="196" pos:column="9">return <expr><name pos:line="196" pos:column="16">xinco_settings</name></expr>;</return>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="200" pos:column="5">/**
     * Sets the xinco_settings value for this XincoSetting.
     * 
     * @param xinco_settings
     */</comment>
    <function><type><specifier pos:line="205" pos:column="5">public</specifier> <name pos:line="205" pos:column="12">void</name></type> <name pos:line="205" pos:column="17">setXinco_settings</name><parameter_list pos:line="205" pos:column="34">(<param><decl><type><name><name pos:line="205" pos:column="35">java</name><op:operator pos:line="205" pos:column="39">.</op:operator><name pos:line="205" pos:column="40">util</name><op:operator pos:line="205" pos:column="44">.</op:operator><name pos:line="205" pos:column="45">Vector</name></name></type> <name pos:line="205" pos:column="52">xinco_settings</name></decl></param>)</parameter_list> <block pos:line="205" pos:column="68">{
        <expr_stmt><expr><name><name pos:line="206" pos:column="9">this</name><op:operator pos:line="206" pos:column="13">.</op:operator><name pos:line="206" pos:column="14">xinco_settings</name></name> <op:operator pos:line="206" pos:column="29">=</op:operator> <name pos:line="206" pos:column="31">xinco_settings</name></expr>;</expr_stmt>
    }</block></function>

    <decl_stmt><decl><type><specifier pos:line="209" pos:column="5">private</specifier> <name><name pos:line="209" pos:column="13">java</name><op:operator pos:line="209" pos:column="17">.</op:operator><name pos:line="209" pos:column="18">lang</name><op:operator pos:line="209" pos:column="22">.</op:operator><name pos:line="209" pos:column="23">Object</name></name></type> <name pos:line="209" pos:column="30">__equalsCalc</name> <init pos:line="209" pos:column="43">= <expr><lit:literal type="null" pos:line="209" pos:column="45">null</lit:literal></expr></init></decl>;</decl_stmt>
    <function><type><specifier pos:line="210" pos:column="5">public</specifier> <specifier pos:line="210" pos:column="12">synchronized</specifier> <name pos:line="210" pos:column="25">boolean</name></type> <name pos:line="210" pos:column="33">equals</name><parameter_list pos:line="210" pos:column="39">(<param><decl><type><name><name pos:line="210" pos:column="40">java</name><op:operator pos:line="210" pos:column="44">.</op:operator><name pos:line="210" pos:column="45">lang</name><op:operator pos:line="210" pos:column="49">.</op:operator><name pos:line="210" pos:column="50">Object</name></name></type> <name pos:line="210" pos:column="57">obj</name></decl></param>)</parameter_list> <block pos:line="210" pos:column="62">{
        <if pos:line="211" pos:column="9">if <condition pos:line="211" pos:column="12">(<expr><op:operator pos:line="211" pos:column="13">!</op:operator><op:operator pos:line="211" pos:column="14">(</op:operator><name pos:line="211" pos:column="15">obj</name> <op:operator pos:line="211" pos:column="19">instanceof</op:operator> <name pos:line="211" pos:column="30">XincoSetting</name><op:operator pos:line="211" pos:column="42">)</op:operator></expr>)</condition><then pos:line="211" pos:column="44"> <return pos:line="211" pos:column="45">return <expr><lit:literal type="boolean" pos:line="211" pos:column="52">false</lit:literal></expr>;</return></then></if>
        <decl_stmt><decl><type><name pos:line="212" pos:column="9">XincoSetting</name></type> <name pos:line="212" pos:column="22">other</name> <init pos:line="212" pos:column="28">= <expr><op:operator pos:line="212" pos:column="30">(</op:operator><name pos:line="212" pos:column="31">XincoSetting</name><op:operator pos:line="212" pos:column="43">)</op:operator> <name pos:line="212" pos:column="45">obj</name></expr></init></decl>;</decl_stmt>
        <if pos:line="213" pos:column="9">if <condition pos:line="213" pos:column="12">(<expr><name pos:line="213" pos:column="13">obj</name> <op:operator pos:line="213" pos:column="17">==</op:operator> <lit:literal type="null" pos:line="213" pos:column="20">null</lit:literal></expr>)</condition><then pos:line="213" pos:column="25"> <return pos:line="213" pos:column="26">return <expr><lit:literal type="boolean" pos:line="213" pos:column="33">false</lit:literal></expr>;</return></then></if>
        <if pos:line="214" pos:column="9">if <condition pos:line="214" pos:column="12">(<expr><name pos:line="214" pos:column="13">this</name> <op:operator pos:line="214" pos:column="18">==</op:operator> <name pos:line="214" pos:column="21">obj</name></expr>)</condition><then pos:line="214" pos:column="25"> <return pos:line="214" pos:column="26">return <expr><lit:literal type="boolean" pos:line="214" pos:column="33">true</lit:literal></expr>;</return></then></if>
        <if pos:line="215" pos:column="9">if <condition pos:line="215" pos:column="12">(<expr><name pos:line="215" pos:column="13">__equalsCalc</name> <op:operator pos:line="215" pos:column="26">!=</op:operator> <lit:literal type="null" pos:line="215" pos:column="29">null</lit:literal></expr>)</condition><then pos:line="215" pos:column="34"> <block pos:line="215" pos:column="35">{
            <return pos:line="216" pos:column="13">return <expr><op:operator pos:line="216" pos:column="20">(</op:operator><name pos:line="216" pos:column="21">__equalsCalc</name> <op:operator pos:line="216" pos:column="34">==</op:operator> <name pos:line="216" pos:column="37">obj</name><op:operator pos:line="216" pos:column="40">)</op:operator></expr>;</return>
        }</block></then></if>
        <expr_stmt><expr><name pos:line="218" pos:column="9">__equalsCalc</name> <op:operator pos:line="218" pos:column="22">=</op:operator> <name pos:line="218" pos:column="24">obj</name></expr>;</expr_stmt>
        <decl_stmt><decl><type><name pos:line="219" pos:column="9">boolean</name></type> <name pos:line="219" pos:column="17">_equals</name></decl>;</decl_stmt>
        <expr_stmt><expr><name pos:line="220" pos:column="9">_equals</name> <op:operator pos:line="220" pos:column="17">=</op:operator> <lit:literal type="boolean" pos:line="220" pos:column="19">true</lit:literal> <op:operator pos:line="220" pos:column="24">&amp;&amp;</op:operator> 
            <name><name pos:line="221" pos:column="13">this</name><op:operator pos:line="221" pos:column="17">.</op:operator><name pos:line="221" pos:column="18">id</name></name> <op:operator pos:line="221" pos:column="21">==</op:operator> <call><name><name pos:line="221" pos:column="24">other</name><op:operator pos:line="221" pos:column="29">.</op:operator><name pos:line="221" pos:column="30">getId</name></name><argument_list pos:line="221" pos:column="35">()</argument_list></call> <op:operator pos:line="221" pos:column="38">&amp;&amp;</op:operator>
            <op:operator pos:line="222" pos:column="13">(</op:operator><op:operator pos:line="222" pos:column="14">(</op:operator><name><name pos:line="222" pos:column="15">this</name><op:operator pos:line="222" pos:column="19">.</op:operator><name pos:line="222" pos:column="20">description</name></name><op:operator pos:line="222" pos:column="31">==</op:operator><lit:literal type="null" pos:line="222" pos:column="33">null</lit:literal> <op:operator pos:line="222" pos:column="38">&amp;&amp;</op:operator> <call><name><name pos:line="222" pos:column="41">other</name><op:operator pos:line="222" pos:column="46">.</op:operator><name pos:line="222" pos:column="47">getDescription</name></name><argument_list pos:line="222" pos:column="61">()</argument_list></call><op:operator pos:line="222" pos:column="63">==</op:operator><lit:literal type="null" pos:line="222" pos:column="65">null</lit:literal><op:operator pos:line="222" pos:column="69">)</op:operator> <op:operator pos:line="222" pos:column="71">||</op:operator> 
             <op:operator pos:line="223" pos:column="14">(</op:operator><name><name pos:line="223" pos:column="15">this</name><op:operator pos:line="223" pos:column="19">.</op:operator><name pos:line="223" pos:column="20">description</name></name><op:operator pos:line="223" pos:column="31">!=</op:operator><lit:literal type="null" pos:line="223" pos:column="33">null</lit:literal> <op:operator pos:line="223" pos:column="38">&amp;&amp;</op:operator>
              <call><name><name pos:line="224" pos:column="15">this</name><op:operator pos:line="224" pos:column="19">.</op:operator><name pos:line="224" pos:column="20">description</name><op:operator pos:line="224" pos:column="31">.</op:operator><name pos:line="224" pos:column="32">equals</name></name><argument_list pos:line="224" pos:column="38">(<argument><expr><call><name><name pos:line="224" pos:column="39">other</name><op:operator pos:line="224" pos:column="44">.</op:operator><name pos:line="224" pos:column="45">getDescription</name></name><argument_list pos:line="224" pos:column="59">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="224" pos:column="62">)</op:operator><op:operator pos:line="224" pos:column="63">)</op:operator> <op:operator pos:line="224" pos:column="65">&amp;&amp;</op:operator>
            <name><name pos:line="225" pos:column="13">this</name><op:operator pos:line="225" pos:column="17">.</op:operator><name pos:line="225" pos:column="18">int_value</name></name> <op:operator pos:line="225" pos:column="28">==</op:operator> <call><name><name pos:line="225" pos:column="31">other</name><op:operator pos:line="225" pos:column="36">.</op:operator><name pos:line="225" pos:column="37">getInt_value</name></name><argument_list pos:line="225" pos:column="49">()</argument_list></call> <op:operator pos:line="225" pos:column="52">&amp;&amp;</op:operator>
            <op:operator pos:line="226" pos:column="13">(</op:operator><op:operator pos:line="226" pos:column="14">(</op:operator><name><name pos:line="226" pos:column="15">this</name><op:operator pos:line="226" pos:column="19">.</op:operator><name pos:line="226" pos:column="20">string_value</name></name><op:operator pos:line="226" pos:column="32">==</op:operator><lit:literal type="null" pos:line="226" pos:column="34">null</lit:literal> <op:operator pos:line="226" pos:column="39">&amp;&amp;</op:operator> <call><name><name pos:line="226" pos:column="42">other</name><op:operator pos:line="226" pos:column="47">.</op:operator><name pos:line="226" pos:column="48">getString_value</name></name><argument_list pos:line="226" pos:column="63">()</argument_list></call><op:operator pos:line="226" pos:column="65">==</op:operator><lit:literal type="null" pos:line="226" pos:column="67">null</lit:literal><op:operator pos:line="226" pos:column="71">)</op:operator> <op:operator pos:line="226" pos:column="73">||</op:operator> 
             <op:operator pos:line="227" pos:column="14">(</op:operator><name><name pos:line="227" pos:column="15">this</name><op:operator pos:line="227" pos:column="19">.</op:operator><name pos:line="227" pos:column="20">string_value</name></name><op:operator pos:line="227" pos:column="32">!=</op:operator><lit:literal type="null" pos:line="227" pos:column="34">null</lit:literal> <op:operator pos:line="227" pos:column="39">&amp;&amp;</op:operator>
              <call><name><name pos:line="228" pos:column="15">this</name><op:operator pos:line="228" pos:column="19">.</op:operator><name pos:line="228" pos:column="20">string_value</name><op:operator pos:line="228" pos:column="32">.</op:operator><name pos:line="228" pos:column="33">equals</name></name><argument_list pos:line="228" pos:column="39">(<argument><expr><call><name><name pos:line="228" pos:column="40">other</name><op:operator pos:line="228" pos:column="45">.</op:operator><name pos:line="228" pos:column="46">getString_value</name></name><argument_list pos:line="228" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="228" pos:column="64">)</op:operator><op:operator pos:line="228" pos:column="65">)</op:operator> <op:operator pos:line="228" pos:column="67">&amp;&amp;</op:operator>
            <name><name pos:line="229" pos:column="13">this</name><op:operator pos:line="229" pos:column="17">.</op:operator><name pos:line="229" pos:column="18">bool_value</name></name> <op:operator pos:line="229" pos:column="29">==</op:operator> <call><name><name pos:line="229" pos:column="32">other</name><op:operator pos:line="229" pos:column="37">.</op:operator><name pos:line="229" pos:column="38">isBool_value</name></name><argument_list pos:line="229" pos:column="50">()</argument_list></call> <op:operator pos:line="229" pos:column="53">&amp;&amp;</op:operator>
            <name><name pos:line="230" pos:column="13">this</name><op:operator pos:line="230" pos:column="17">.</op:operator><name pos:line="230" pos:column="18">changerID</name></name> <op:operator pos:line="230" pos:column="28">==</op:operator> <call><name><name pos:line="230" pos:column="31">other</name><op:operator pos:line="230" pos:column="36">.</op:operator><name pos:line="230" pos:column="37">getChangerID</name></name><argument_list pos:line="230" pos:column="49">()</argument_list></call> <op:operator pos:line="230" pos:column="52">&amp;&amp;</op:operator>
            <name><name pos:line="231" pos:column="13">this</name><op:operator pos:line="231" pos:column="17">.</op:operator><name pos:line="231" pos:column="18">long_value</name></name> <op:operator pos:line="231" pos:column="29">==</op:operator> <call><name><name pos:line="231" pos:column="32">other</name><op:operator pos:line="231" pos:column="37">.</op:operator><name pos:line="231" pos:column="38">getLong_value</name></name><argument_list pos:line="231" pos:column="51">()</argument_list></call> <op:operator pos:line="231" pos:column="54">&amp;&amp;</op:operator>
            <op:operator pos:line="232" pos:column="13">(</op:operator><op:operator pos:line="232" pos:column="14">(</op:operator><name><name pos:line="232" pos:column="15">this</name><op:operator pos:line="232" pos:column="19">.</op:operator><name pos:line="232" pos:column="20">xinco_settings</name></name><op:operator pos:line="232" pos:column="34">==</op:operator><lit:literal type="null" pos:line="232" pos:column="36">null</lit:literal> <op:operator pos:line="232" pos:column="41">&amp;&amp;</op:operator> <call><name><name pos:line="232" pos:column="44">other</name><op:operator pos:line="232" pos:column="49">.</op:operator><name pos:line="232" pos:column="50">getXinco_settings</name></name><argument_list pos:line="232" pos:column="67">()</argument_list></call><op:operator pos:line="232" pos:column="69">==</op:operator><lit:literal type="null" pos:line="232" pos:column="71">null</lit:literal><op:operator pos:line="232" pos:column="75">)</op:operator> <op:operator pos:line="232" pos:column="77">||</op:operator> 
             <op:operator pos:line="233" pos:column="14">(</op:operator><name><name pos:line="233" pos:column="15">this</name><op:operator pos:line="233" pos:column="19">.</op:operator><name pos:line="233" pos:column="20">xinco_settings</name></name><op:operator pos:line="233" pos:column="34">!=</op:operator><lit:literal type="null" pos:line="233" pos:column="36">null</lit:literal> <op:operator pos:line="233" pos:column="41">&amp;&amp;</op:operator>
              <call><name><name pos:line="234" pos:column="15">this</name><op:operator pos:line="234" pos:column="19">.</op:operator><name pos:line="234" pos:column="20">xinco_settings</name><op:operator pos:line="234" pos:column="34">.</op:operator><name pos:line="234" pos:column="35">equals</name></name><argument_list pos:line="234" pos:column="41">(<argument><expr><call><name><name pos:line="234" pos:column="42">other</name><op:operator pos:line="234" pos:column="47">.</op:operator><name pos:line="234" pos:column="48">getXinco_settings</name></name><argument_list pos:line="234" pos:column="65">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="234" pos:column="68">)</op:operator><op:operator pos:line="234" pos:column="69">)</op:operator></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="235" pos:column="9">__equalsCalc</name> <op:operator pos:line="235" pos:column="22">=</op:operator> <lit:literal type="null" pos:line="235" pos:column="24">null</lit:literal></expr>;</expr_stmt>
        <return pos:line="236" pos:column="9">return <expr><name pos:line="236" pos:column="16">_equals</name></expr>;</return>
    }</block></function>

    <decl_stmt><decl><type><specifier pos:line="239" pos:column="5">private</specifier> <name pos:line="239" pos:column="13">boolean</name></type> <name pos:line="239" pos:column="21">__hashCodeCalc</name> <init pos:line="239" pos:column="36">= <expr><lit:literal type="boolean" pos:line="239" pos:column="38">false</lit:literal></expr></init></decl>;</decl_stmt>
    <function><type><specifier pos:line="240" pos:column="5">public</specifier> <specifier pos:line="240" pos:column="12">synchronized</specifier> <name pos:line="240" pos:column="25">int</name></type> <name pos:line="240" pos:column="29">hashCode</name><parameter_list pos:line="240" pos:column="37">()</parameter_list> <block pos:line="240" pos:column="40">{
        <if pos:line="241" pos:column="9">if <condition pos:line="241" pos:column="12">(<expr><name pos:line="241" pos:column="13">__hashCodeCalc</name></expr>)</condition><then pos:line="241" pos:column="28"> <block pos:line="241" pos:column="29">{
            <return pos:line="242" pos:column="13">return <expr><lit:literal type="number" pos:line="242" pos:column="20">0</lit:literal></expr>;</return>
        }</block></then></if>
        <expr_stmt><expr><name pos:line="244" pos:column="9">__hashCodeCalc</name> <op:operator pos:line="244" pos:column="24">=</op:operator> <lit:literal type="boolean" pos:line="244" pos:column="26">true</lit:literal></expr>;</expr_stmt>
        <decl_stmt><decl><type><name pos:line="245" pos:column="9">int</name></type> <name pos:line="245" pos:column="13">_hashCode</name> <init pos:line="245" pos:column="23">= <expr><lit:literal type="number" pos:line="245" pos:column="25">1</lit:literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name pos:line="246" pos:column="9">_hashCode</name> <op:operator pos:line="246" pos:column="19">+=</op:operator> <call><name pos:line="246" pos:column="22">getId</name><argument_list pos:line="246" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
        <if pos:line="247" pos:column="9">if <condition pos:line="247" pos:column="12">(<expr><call><name pos:line="247" pos:column="13">getDescription</name><argument_list pos:line="247" pos:column="27">()</argument_list></call> <op:operator pos:line="247" pos:column="30">!=</op:operator> <lit:literal type="null" pos:line="247" pos:column="33">null</lit:literal></expr>)</condition><then pos:line="247" pos:column="38"> <block pos:line="247" pos:column="39">{
            <expr_stmt><expr><name pos:line="248" pos:column="13">_hashCode</name> <op:operator pos:line="248" pos:column="23">+=</op:operator> <call><name pos:line="248" pos:column="26">getDescription</name><argument_list pos:line="248" pos:column="40">()</argument_list></call><op:operator pos:line="248" pos:column="42">.</op:operator><call><name pos:line="248" pos:column="43">hashCode</name><argument_list pos:line="248" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        <expr_stmt><expr><name pos:line="250" pos:column="9">_hashCode</name> <op:operator pos:line="250" pos:column="19">+=</op:operator> <call><name pos:line="250" pos:column="22">getInt_value</name><argument_list pos:line="250" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
        <if pos:line="251" pos:column="9">if <condition pos:line="251" pos:column="12">(<expr><call><name pos:line="251" pos:column="13">getString_value</name><argument_list pos:line="251" pos:column="28">()</argument_list></call> <op:operator pos:line="251" pos:column="31">!=</op:operator> <lit:literal type="null" pos:line="251" pos:column="34">null</lit:literal></expr>)</condition><then pos:line="251" pos:column="39"> <block pos:line="251" pos:column="40">{
            <expr_stmt><expr><name pos:line="252" pos:column="13">_hashCode</name> <op:operator pos:line="252" pos:column="23">+=</op:operator> <call><name pos:line="252" pos:column="26">getString_value</name><argument_list pos:line="252" pos:column="41">()</argument_list></call><op:operator pos:line="252" pos:column="43">.</op:operator><call><name pos:line="252" pos:column="44">hashCode</name><argument_list pos:line="252" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        <expr_stmt><expr><name pos:line="254" pos:column="9">_hashCode</name> <op:operator pos:line="254" pos:column="19">+=</op:operator> <op:operator pos:line="254" pos:column="22">(</op:operator><call><name pos:line="254" pos:column="23">isBool_value</name><argument_list pos:line="254" pos:column="35">()</argument_list></call> <op:operator pos:line="254" pos:column="38">?</op:operator> <name><name pos:line="254" pos:column="40">Boolean</name><op:operator pos:line="254" pos:column="47">.</op:operator><name pos:line="254" pos:column="48">TRUE</name></name> <op:operator pos:line="254" pos:column="53">:</op:operator> <name><name pos:line="254" pos:column="55">Boolean</name><op:operator pos:line="254" pos:column="62">.</op:operator><name pos:line="254" pos:column="63">FALSE</name></name><op:operator pos:line="254" pos:column="68">)</op:operator><op:operator pos:line="254" pos:column="69">.</op:operator><call><name pos:line="254" pos:column="70">hashCode</name><argument_list pos:line="254" pos:column="78">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="255" pos:column="9">_hashCode</name> <op:operator pos:line="255" pos:column="19">+=</op:operator> <call><name pos:line="255" pos:column="22">getChangerID</name><argument_list pos:line="255" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="256" pos:column="9">_hashCode</name> <op:operator pos:line="256" pos:column="19">+=</op:operator> <op:operator pos:line="256" pos:column="22">new</op:operator> <call><name pos:line="256" pos:column="26">Long</name><argument_list pos:line="256" pos:column="30">(<argument><expr><call><name pos:line="256" pos:column="31">getLong_value</name><argument_list pos:line="256" pos:column="44">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="256" pos:column="47">.</op:operator><call><name pos:line="256" pos:column="48">hashCode</name><argument_list pos:line="256" pos:column="56">()</argument_list></call></expr>;</expr_stmt>
        <if pos:line="257" pos:column="9">if <condition pos:line="257" pos:column="12">(<expr><call><name pos:line="257" pos:column="13">getXinco_settings</name><argument_list pos:line="257" pos:column="30">()</argument_list></call> <op:operator pos:line="257" pos:column="33">!=</op:operator> <lit:literal type="null" pos:line="257" pos:column="36">null</lit:literal></expr>)</condition><then pos:line="257" pos:column="41"> <block pos:line="257" pos:column="42">{
            <expr_stmt><expr><name pos:line="258" pos:column="13">_hashCode</name> <op:operator pos:line="258" pos:column="23">+=</op:operator> <call><name pos:line="258" pos:column="26">getXinco_settings</name><argument_list pos:line="258" pos:column="43">()</argument_list></call><op:operator pos:line="258" pos:column="45">.</op:operator><call><name pos:line="258" pos:column="46">hashCode</name><argument_list pos:line="258" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        <expr_stmt><expr><name pos:line="260" pos:column="9">__hashCodeCalc</name> <op:operator pos:line="260" pos:column="24">=</op:operator> <lit:literal type="boolean" pos:line="260" pos:column="26">false</lit:literal></expr>;</expr_stmt>
        <return pos:line="261" pos:column="9">return <expr><name pos:line="261" pos:column="16">_hashCode</name></expr>;</return>
    }</block></function>

    <comment type="line" pos:line="264" pos:column="5">// Type metadata</comment>
    <decl_stmt><decl><type><specifier pos:line="265" pos:column="5">private</specifier> <specifier pos:line="265" pos:column="13">static</specifier> <name><name pos:line="265" pos:column="20">org</name><op:operator pos:line="265" pos:column="23">.</op:operator><name pos:line="265" pos:column="24">apache</name><op:operator pos:line="265" pos:column="30">.</op:operator><name pos:line="265" pos:column="31">axis</name><op:operator pos:line="265" pos:column="35">.</op:operator><name pos:line="265" pos:column="36">description</name><op:operator pos:line="265" pos:column="47">.</op:operator><name pos:line="265" pos:column="48">TypeDesc</name></name></type> <name pos:line="265" pos:column="57">typeDesc</name> <init pos:line="265" pos:column="66">=
        <expr><op:operator pos:line="266" pos:column="9">new</op:operator> <call><name><name pos:line="266" pos:column="13">org</name><op:operator pos:line="266" pos:column="16">.</op:operator><name pos:line="266" pos:column="17">apache</name><op:operator pos:line="266" pos:column="23">.</op:operator><name pos:line="266" pos:column="24">axis</name><op:operator pos:line="266" pos:column="28">.</op:operator><name pos:line="266" pos:column="29">description</name><op:operator pos:line="266" pos:column="40">.</op:operator><name pos:line="266" pos:column="41">TypeDesc</name></name><argument_list pos:line="266" pos:column="49">(<argument><expr><name><name pos:line="266" pos:column="50">XincoSetting</name><op:operator pos:line="266" pos:column="62">.</op:operator><name pos:line="266" pos:column="63">class</name></name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="266" pos:column="70">true</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr pos:line="268" pos:column="5">static <block pos:line="268" pos:column="12">{
        <expr><call><name><name pos:line="269" pos:column="9">typeDesc</name><op:operator pos:line="269" pos:column="17">.</op:operator><name pos:line="269" pos:column="18">setXmlType</name></name><argument_list pos:line="269" pos:column="28">(<argument><expr><op:operator pos:line="269" pos:column="29">new</op:operator> <call><name><name pos:line="269" pos:column="33">javax</name><op:operator pos:line="269" pos:column="38">.</op:operator><name pos:line="269" pos:column="39">xml</name><op:operator pos:line="269" pos:column="42">.</op:operator><name pos:line="269" pos:column="43">namespace</name><op:operator pos:line="269" pos:column="52">.</op:operator><name pos:line="269" pos:column="53">QName</name></name><argument_list pos:line="269" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="269" pos:column="59">"http://core.xinco.bluecubs.com"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="269" pos:column="93">"XincoSetting"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><name><name pos:line="270" pos:column="9">org</name><op:operator pos:line="270" pos:column="12">.</op:operator><name pos:line="270" pos:column="13">apache</name><op:operator pos:line="270" pos:column="19">.</op:operator><name pos:line="270" pos:column="20">axis</name><op:operator pos:line="270" pos:column="24">.</op:operator><name pos:line="270" pos:column="25">description</name><op:operator pos:line="270" pos:column="36">.</op:operator><name pos:line="270" pos:column="37">ElementDesc</name></name> <name pos:line="270" pos:column="49">elemField</name> <op:operator pos:line="270" pos:column="59">=</op:operator> <op:operator pos:line="270" pos:column="61">new</op:operator> <call><name><name pos:line="270" pos:column="65">org</name><op:operator pos:line="270" pos:column="68">.</op:operator><name pos:line="270" pos:column="69">apache</name><op:operator pos:line="270" pos:column="75">.</op:operator><name pos:line="270" pos:column="76">axis</name><op:operator pos:line="270" pos:column="80">.</op:operator><name pos:line="270" pos:column="81">description</name><op:operator pos:line="270" pos:column="92">.</op:operator><name pos:line="270" pos:column="93">ElementDesc</name></name><argument_list pos:line="270" pos:column="104">()</argument_list></call></expr>;
        <expr><call><name><name pos:line="271" pos:column="9">elemField</name><op:operator pos:line="271" pos:column="18">.</op:operator><name pos:line="271" pos:column="19">setFieldName</name></name><argument_list pos:line="271" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="271" pos:column="32">"id"</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="272" pos:column="9">elemField</name><op:operator pos:line="272" pos:column="18">.</op:operator><name pos:line="272" pos:column="19">setXmlName</name></name><argument_list pos:line="272" pos:column="29">(<argument><expr><op:operator pos:line="272" pos:column="30">new</op:operator> <call><name><name pos:line="272" pos:column="34">javax</name><op:operator pos:line="272" pos:column="39">.</op:operator><name pos:line="272" pos:column="40">xml</name><op:operator pos:line="272" pos:column="43">.</op:operator><name pos:line="272" pos:column="44">namespace</name><op:operator pos:line="272" pos:column="53">.</op:operator><name pos:line="272" pos:column="54">QName</name></name><argument_list pos:line="272" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="272" pos:column="60">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="272" pos:column="64">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="273" pos:column="9">elemField</name><op:operator pos:line="273" pos:column="18">.</op:operator><name pos:line="273" pos:column="19">setXmlType</name></name><argument_list pos:line="273" pos:column="29">(<argument><expr><op:operator pos:line="273" pos:column="30">new</op:operator> <call><name><name pos:line="273" pos:column="34">javax</name><op:operator pos:line="273" pos:column="39">.</op:operator><name pos:line="273" pos:column="40">xml</name><op:operator pos:line="273" pos:column="43">.</op:operator><name pos:line="273" pos:column="44">namespace</name><op:operator pos:line="273" pos:column="53">.</op:operator><name pos:line="273" pos:column="54">QName</name></name><argument_list pos:line="273" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="273" pos:column="60">"http://www.w3.org/2001/XMLSchema"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="273" pos:column="96">"int"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="274" pos:column="9">elemField</name><op:operator pos:line="274" pos:column="18">.</op:operator><name pos:line="274" pos:column="19">setNillable</name></name><argument_list pos:line="274" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="274" pos:column="31">false</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="275" pos:column="9">typeDesc</name><op:operator pos:line="275" pos:column="17">.</op:operator><name pos:line="275" pos:column="18">addFieldDesc</name></name><argument_list pos:line="275" pos:column="30">(<argument><expr><name pos:line="275" pos:column="31">elemField</name></expr></argument>)</argument_list></call></expr>;
        <expr><name pos:line="276" pos:column="9">elemField</name> <op:operator pos:line="276" pos:column="19">=</op:operator> <op:operator pos:line="276" pos:column="21">new</op:operator> <call><name><name pos:line="276" pos:column="25">org</name><op:operator pos:line="276" pos:column="28">.</op:operator><name pos:line="276" pos:column="29">apache</name><op:operator pos:line="276" pos:column="35">.</op:operator><name pos:line="276" pos:column="36">axis</name><op:operator pos:line="276" pos:column="40">.</op:operator><name pos:line="276" pos:column="41">description</name><op:operator pos:line="276" pos:column="52">.</op:operator><name pos:line="276" pos:column="53">ElementDesc</name></name><argument_list pos:line="276" pos:column="64">()</argument_list></call></expr>;
        <expr><call><name><name pos:line="277" pos:column="9">elemField</name><op:operator pos:line="277" pos:column="18">.</op:operator><name pos:line="277" pos:column="19">setFieldName</name></name><argument_list pos:line="277" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="277" pos:column="32">"description"</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="278" pos:column="9">elemField</name><op:operator pos:line="278" pos:column="18">.</op:operator><name pos:line="278" pos:column="19">setXmlName</name></name><argument_list pos:line="278" pos:column="29">(<argument><expr><op:operator pos:line="278" pos:column="30">new</op:operator> <call><name><name pos:line="278" pos:column="34">javax</name><op:operator pos:line="278" pos:column="39">.</op:operator><name pos:line="278" pos:column="40">xml</name><op:operator pos:line="278" pos:column="43">.</op:operator><name pos:line="278" pos:column="44">namespace</name><op:operator pos:line="278" pos:column="53">.</op:operator><name pos:line="278" pos:column="54">QName</name></name><argument_list pos:line="278" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="278" pos:column="60">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="278" pos:column="64">"description"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="279" pos:column="9">elemField</name><op:operator pos:line="279" pos:column="18">.</op:operator><name pos:line="279" pos:column="19">setXmlType</name></name><argument_list pos:line="279" pos:column="29">(<argument><expr><op:operator pos:line="279" pos:column="30">new</op:operator> <call><name><name pos:line="279" pos:column="34">javax</name><op:operator pos:line="279" pos:column="39">.</op:operator><name pos:line="279" pos:column="40">xml</name><op:operator pos:line="279" pos:column="43">.</op:operator><name pos:line="279" pos:column="44">namespace</name><op:operator pos:line="279" pos:column="53">.</op:operator><name pos:line="279" pos:column="54">QName</name></name><argument_list pos:line="279" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="279" pos:column="60">"http://www.w3.org/2001/XMLSchema"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="279" pos:column="96">"string"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="280" pos:column="9">elemField</name><op:operator pos:line="280" pos:column="18">.</op:operator><name pos:line="280" pos:column="19">setNillable</name></name><argument_list pos:line="280" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="280" pos:column="31">false</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="281" pos:column="9">typeDesc</name><op:operator pos:line="281" pos:column="17">.</op:operator><name pos:line="281" pos:column="18">addFieldDesc</name></name><argument_list pos:line="281" pos:column="30">(<argument><expr><name pos:line="281" pos:column="31">elemField</name></expr></argument>)</argument_list></call></expr>;
        <expr><name pos:line="282" pos:column="9">elemField</name> <op:operator pos:line="282" pos:column="19">=</op:operator> <op:operator pos:line="282" pos:column="21">new</op:operator> <call><name><name pos:line="282" pos:column="25">org</name><op:operator pos:line="282" pos:column="28">.</op:operator><name pos:line="282" pos:column="29">apache</name><op:operator pos:line="282" pos:column="35">.</op:operator><name pos:line="282" pos:column="36">axis</name><op:operator pos:line="282" pos:column="40">.</op:operator><name pos:line="282" pos:column="41">description</name><op:operator pos:line="282" pos:column="52">.</op:operator><name pos:line="282" pos:column="53">ElementDesc</name></name><argument_list pos:line="282" pos:column="64">()</argument_list></call></expr>;
        <expr><call><name><name pos:line="283" pos:column="9">elemField</name><op:operator pos:line="283" pos:column="18">.</op:operator><name pos:line="283" pos:column="19">setFieldName</name></name><argument_list pos:line="283" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="283" pos:column="32">"int_value"</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="284" pos:column="9">elemField</name><op:operator pos:line="284" pos:column="18">.</op:operator><name pos:line="284" pos:column="19">setXmlName</name></name><argument_list pos:line="284" pos:column="29">(<argument><expr><op:operator pos:line="284" pos:column="30">new</op:operator> <call><name><name pos:line="284" pos:column="34">javax</name><op:operator pos:line="284" pos:column="39">.</op:operator><name pos:line="284" pos:column="40">xml</name><op:operator pos:line="284" pos:column="43">.</op:operator><name pos:line="284" pos:column="44">namespace</name><op:operator pos:line="284" pos:column="53">.</op:operator><name pos:line="284" pos:column="54">QName</name></name><argument_list pos:line="284" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="284" pos:column="60">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="284" pos:column="64">"int_value"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="285" pos:column="9">elemField</name><op:operator pos:line="285" pos:column="18">.</op:operator><name pos:line="285" pos:column="19">setXmlType</name></name><argument_list pos:line="285" pos:column="29">(<argument><expr><op:operator pos:line="285" pos:column="30">new</op:operator> <call><name><name pos:line="285" pos:column="34">javax</name><op:operator pos:line="285" pos:column="39">.</op:operator><name pos:line="285" pos:column="40">xml</name><op:operator pos:line="285" pos:column="43">.</op:operator><name pos:line="285" pos:column="44">namespace</name><op:operator pos:line="285" pos:column="53">.</op:operator><name pos:line="285" pos:column="54">QName</name></name><argument_list pos:line="285" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="285" pos:column="60">"http://www.w3.org/2001/XMLSchema"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="285" pos:column="96">"int"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="286" pos:column="9">elemField</name><op:operator pos:line="286" pos:column="18">.</op:operator><name pos:line="286" pos:column="19">setNillable</name></name><argument_list pos:line="286" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="286" pos:column="31">false</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="287" pos:column="9">typeDesc</name><op:operator pos:line="287" pos:column="17">.</op:operator><name pos:line="287" pos:column="18">addFieldDesc</name></name><argument_list pos:line="287" pos:column="30">(<argument><expr><name pos:line="287" pos:column="31">elemField</name></expr></argument>)</argument_list></call></expr>;
        <expr><name pos:line="288" pos:column="9">elemField</name> <op:operator pos:line="288" pos:column="19">=</op:operator> <op:operator pos:line="288" pos:column="21">new</op:operator> <call><name><name pos:line="288" pos:column="25">org</name><op:operator pos:line="288" pos:column="28">.</op:operator><name pos:line="288" pos:column="29">apache</name><op:operator pos:line="288" pos:column="35">.</op:operator><name pos:line="288" pos:column="36">axis</name><op:operator pos:line="288" pos:column="40">.</op:operator><name pos:line="288" pos:column="41">description</name><op:operator pos:line="288" pos:column="52">.</op:operator><name pos:line="288" pos:column="53">ElementDesc</name></name><argument_list pos:line="288" pos:column="64">()</argument_list></call></expr>;
        <expr><call><name><name pos:line="289" pos:column="9">elemField</name><op:operator pos:line="289" pos:column="18">.</op:operator><name pos:line="289" pos:column="19">setFieldName</name></name><argument_list pos:line="289" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="289" pos:column="32">"string_value"</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="290" pos:column="9">elemField</name><op:operator pos:line="290" pos:column="18">.</op:operator><name pos:line="290" pos:column="19">setXmlName</name></name><argument_list pos:line="290" pos:column="29">(<argument><expr><op:operator pos:line="290" pos:column="30">new</op:operator> <call><name><name pos:line="290" pos:column="34">javax</name><op:operator pos:line="290" pos:column="39">.</op:operator><name pos:line="290" pos:column="40">xml</name><op:operator pos:line="290" pos:column="43">.</op:operator><name pos:line="290" pos:column="44">namespace</name><op:operator pos:line="290" pos:column="53">.</op:operator><name pos:line="290" pos:column="54">QName</name></name><argument_list pos:line="290" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="290" pos:column="60">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="290" pos:column="64">"string_value"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="291" pos:column="9">elemField</name><op:operator pos:line="291" pos:column="18">.</op:operator><name pos:line="291" pos:column="19">setXmlType</name></name><argument_list pos:line="291" pos:column="29">(<argument><expr><op:operator pos:line="291" pos:column="30">new</op:operator> <call><name><name pos:line="291" pos:column="34">javax</name><op:operator pos:line="291" pos:column="39">.</op:operator><name pos:line="291" pos:column="40">xml</name><op:operator pos:line="291" pos:column="43">.</op:operator><name pos:line="291" pos:column="44">namespace</name><op:operator pos:line="291" pos:column="53">.</op:operator><name pos:line="291" pos:column="54">QName</name></name><argument_list pos:line="291" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="291" pos:column="60">"http://www.w3.org/2001/XMLSchema"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="291" pos:column="96">"string"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="292" pos:column="9">elemField</name><op:operator pos:line="292" pos:column="18">.</op:operator><name pos:line="292" pos:column="19">setNillable</name></name><argument_list pos:line="292" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="292" pos:column="31">false</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="293" pos:column="9">typeDesc</name><op:operator pos:line="293" pos:column="17">.</op:operator><name pos:line="293" pos:column="18">addFieldDesc</name></name><argument_list pos:line="293" pos:column="30">(<argument><expr><name pos:line="293" pos:column="31">elemField</name></expr></argument>)</argument_list></call></expr>;
        <expr><name pos:line="294" pos:column="9">elemField</name> <op:operator pos:line="294" pos:column="19">=</op:operator> <op:operator pos:line="294" pos:column="21">new</op:operator> <call><name><name pos:line="294" pos:column="25">org</name><op:operator pos:line="294" pos:column="28">.</op:operator><name pos:line="294" pos:column="29">apache</name><op:operator pos:line="294" pos:column="35">.</op:operator><name pos:line="294" pos:column="36">axis</name><op:operator pos:line="294" pos:column="40">.</op:operator><name pos:line="294" pos:column="41">description</name><op:operator pos:line="294" pos:column="52">.</op:operator><name pos:line="294" pos:column="53">ElementDesc</name></name><argument_list pos:line="294" pos:column="64">()</argument_list></call></expr>;
        <expr><call><name><name pos:line="295" pos:column="9">elemField</name><op:operator pos:line="295" pos:column="18">.</op:operator><name pos:line="295" pos:column="19">setFieldName</name></name><argument_list pos:line="295" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="295" pos:column="32">"bool_value"</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="296" pos:column="9">elemField</name><op:operator pos:line="296" pos:column="18">.</op:operator><name pos:line="296" pos:column="19">setXmlName</name></name><argument_list pos:line="296" pos:column="29">(<argument><expr><op:operator pos:line="296" pos:column="30">new</op:operator> <call><name><name pos:line="296" pos:column="34">javax</name><op:operator pos:line="296" pos:column="39">.</op:operator><name pos:line="296" pos:column="40">xml</name><op:operator pos:line="296" pos:column="43">.</op:operator><name pos:line="296" pos:column="44">namespace</name><op:operator pos:line="296" pos:column="53">.</op:operator><name pos:line="296" pos:column="54">QName</name></name><argument_list pos:line="296" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="296" pos:column="60">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="296" pos:column="64">"bool_value"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="297" pos:column="9">elemField</name><op:operator pos:line="297" pos:column="18">.</op:operator><name pos:line="297" pos:column="19">setXmlType</name></name><argument_list pos:line="297" pos:column="29">(<argument><expr><op:operator pos:line="297" pos:column="30">new</op:operator> <call><name><name pos:line="297" pos:column="34">javax</name><op:operator pos:line="297" pos:column="39">.</op:operator><name pos:line="297" pos:column="40">xml</name><op:operator pos:line="297" pos:column="43">.</op:operator><name pos:line="297" pos:column="44">namespace</name><op:operator pos:line="297" pos:column="53">.</op:operator><name pos:line="297" pos:column="54">QName</name></name><argument_list pos:line="297" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="297" pos:column="60">"http://www.w3.org/2001/XMLSchema"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="297" pos:column="96">"boolean"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="298" pos:column="9">elemField</name><op:operator pos:line="298" pos:column="18">.</op:operator><name pos:line="298" pos:column="19">setNillable</name></name><argument_list pos:line="298" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="298" pos:column="31">false</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="299" pos:column="9">typeDesc</name><op:operator pos:line="299" pos:column="17">.</op:operator><name pos:line="299" pos:column="18">addFieldDesc</name></name><argument_list pos:line="299" pos:column="30">(<argument><expr><name pos:line="299" pos:column="31">elemField</name></expr></argument>)</argument_list></call></expr>;
        <expr><name pos:line="300" pos:column="9">elemField</name> <op:operator pos:line="300" pos:column="19">=</op:operator> <op:operator pos:line="300" pos:column="21">new</op:operator> <call><name><name pos:line="300" pos:column="25">org</name><op:operator pos:line="300" pos:column="28">.</op:operator><name pos:line="300" pos:column="29">apache</name><op:operator pos:line="300" pos:column="35">.</op:operator><name pos:line="300" pos:column="36">axis</name><op:operator pos:line="300" pos:column="40">.</op:operator><name pos:line="300" pos:column="41">description</name><op:operator pos:line="300" pos:column="52">.</op:operator><name pos:line="300" pos:column="53">ElementDesc</name></name><argument_list pos:line="300" pos:column="64">()</argument_list></call></expr>;
        <expr><call><name><name pos:line="301" pos:column="9">elemField</name><op:operator pos:line="301" pos:column="18">.</op:operator><name pos:line="301" pos:column="19">setFieldName</name></name><argument_list pos:line="301" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="301" pos:column="32">"changerID"</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="302" pos:column="9">elemField</name><op:operator pos:line="302" pos:column="18">.</op:operator><name pos:line="302" pos:column="19">setXmlName</name></name><argument_list pos:line="302" pos:column="29">(<argument><expr><op:operator pos:line="302" pos:column="30">new</op:operator> <call><name><name pos:line="302" pos:column="34">javax</name><op:operator pos:line="302" pos:column="39">.</op:operator><name pos:line="302" pos:column="40">xml</name><op:operator pos:line="302" pos:column="43">.</op:operator><name pos:line="302" pos:column="44">namespace</name><op:operator pos:line="302" pos:column="53">.</op:operator><name pos:line="302" pos:column="54">QName</name></name><argument_list pos:line="302" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="302" pos:column="60">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="302" pos:column="64">"changerID"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="303" pos:column="9">elemField</name><op:operator pos:line="303" pos:column="18">.</op:operator><name pos:line="303" pos:column="19">setXmlType</name></name><argument_list pos:line="303" pos:column="29">(<argument><expr><op:operator pos:line="303" pos:column="30">new</op:operator> <call><name><name pos:line="303" pos:column="34">javax</name><op:operator pos:line="303" pos:column="39">.</op:operator><name pos:line="303" pos:column="40">xml</name><op:operator pos:line="303" pos:column="43">.</op:operator><name pos:line="303" pos:column="44">namespace</name><op:operator pos:line="303" pos:column="53">.</op:operator><name pos:line="303" pos:column="54">QName</name></name><argument_list pos:line="303" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="303" pos:column="60">"http://www.w3.org/2001/XMLSchema"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="303" pos:column="96">"int"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="304" pos:column="9">elemField</name><op:operator pos:line="304" pos:column="18">.</op:operator><name pos:line="304" pos:column="19">setNillable</name></name><argument_list pos:line="304" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="304" pos:column="31">false</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="305" pos:column="9">typeDesc</name><op:operator pos:line="305" pos:column="17">.</op:operator><name pos:line="305" pos:column="18">addFieldDesc</name></name><argument_list pos:line="305" pos:column="30">(<argument><expr><name pos:line="305" pos:column="31">elemField</name></expr></argument>)</argument_list></call></expr>;
        <expr><name pos:line="306" pos:column="9">elemField</name> <op:operator pos:line="306" pos:column="19">=</op:operator> <op:operator pos:line="306" pos:column="21">new</op:operator> <call><name><name pos:line="306" pos:column="25">org</name><op:operator pos:line="306" pos:column="28">.</op:operator><name pos:line="306" pos:column="29">apache</name><op:operator pos:line="306" pos:column="35">.</op:operator><name pos:line="306" pos:column="36">axis</name><op:operator pos:line="306" pos:column="40">.</op:operator><name pos:line="306" pos:column="41">description</name><op:operator pos:line="306" pos:column="52">.</op:operator><name pos:line="306" pos:column="53">ElementDesc</name></name><argument_list pos:line="306" pos:column="64">()</argument_list></call></expr>;
        <expr><call><name><name pos:line="307" pos:column="9">elemField</name><op:operator pos:line="307" pos:column="18">.</op:operator><name pos:line="307" pos:column="19">setFieldName</name></name><argument_list pos:line="307" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="307" pos:column="32">"long_value"</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="308" pos:column="9">elemField</name><op:operator pos:line="308" pos:column="18">.</op:operator><name pos:line="308" pos:column="19">setXmlName</name></name><argument_list pos:line="308" pos:column="29">(<argument><expr><op:operator pos:line="308" pos:column="30">new</op:operator> <call><name><name pos:line="308" pos:column="34">javax</name><op:operator pos:line="308" pos:column="39">.</op:operator><name pos:line="308" pos:column="40">xml</name><op:operator pos:line="308" pos:column="43">.</op:operator><name pos:line="308" pos:column="44">namespace</name><op:operator pos:line="308" pos:column="53">.</op:operator><name pos:line="308" pos:column="54">QName</name></name><argument_list pos:line="308" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="308" pos:column="60">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="308" pos:column="64">"long_value"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="309" pos:column="9">elemField</name><op:operator pos:line="309" pos:column="18">.</op:operator><name pos:line="309" pos:column="19">setXmlType</name></name><argument_list pos:line="309" pos:column="29">(<argument><expr><op:operator pos:line="309" pos:column="30">new</op:operator> <call><name><name pos:line="309" pos:column="34">javax</name><op:operator pos:line="309" pos:column="39">.</op:operator><name pos:line="309" pos:column="40">xml</name><op:operator pos:line="309" pos:column="43">.</op:operator><name pos:line="309" pos:column="44">namespace</name><op:operator pos:line="309" pos:column="53">.</op:operator><name pos:line="309" pos:column="54">QName</name></name><argument_list pos:line="309" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="309" pos:column="60">"http://www.w3.org/2001/XMLSchema"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="309" pos:column="96">"long"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="310" pos:column="9">elemField</name><op:operator pos:line="310" pos:column="18">.</op:operator><name pos:line="310" pos:column="19">setNillable</name></name><argument_list pos:line="310" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="310" pos:column="31">false</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="311" pos:column="9">typeDesc</name><op:operator pos:line="311" pos:column="17">.</op:operator><name pos:line="311" pos:column="18">addFieldDesc</name></name><argument_list pos:line="311" pos:column="30">(<argument><expr><name pos:line="311" pos:column="31">elemField</name></expr></argument>)</argument_list></call></expr>;
        <expr><name pos:line="312" pos:column="9">elemField</name> <op:operator pos:line="312" pos:column="19">=</op:operator> <op:operator pos:line="312" pos:column="21">new</op:operator> <call><name><name pos:line="312" pos:column="25">org</name><op:operator pos:line="312" pos:column="28">.</op:operator><name pos:line="312" pos:column="29">apache</name><op:operator pos:line="312" pos:column="35">.</op:operator><name pos:line="312" pos:column="36">axis</name><op:operator pos:line="312" pos:column="40">.</op:operator><name pos:line="312" pos:column="41">description</name><op:operator pos:line="312" pos:column="52">.</op:operator><name pos:line="312" pos:column="53">ElementDesc</name></name><argument_list pos:line="312" pos:column="64">()</argument_list></call></expr>;
        <expr><call><name><name pos:line="313" pos:column="9">elemField</name><op:operator pos:line="313" pos:column="18">.</op:operator><name pos:line="313" pos:column="19">setFieldName</name></name><argument_list pos:line="313" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="313" pos:column="32">"xinco_settings"</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="314" pos:column="9">elemField</name><op:operator pos:line="314" pos:column="18">.</op:operator><name pos:line="314" pos:column="19">setXmlName</name></name><argument_list pos:line="314" pos:column="29">(<argument><expr><op:operator pos:line="314" pos:column="30">new</op:operator> <call><name><name pos:line="314" pos:column="34">javax</name><op:operator pos:line="314" pos:column="39">.</op:operator><name pos:line="314" pos:column="40">xml</name><op:operator pos:line="314" pos:column="43">.</op:operator><name pos:line="314" pos:column="44">namespace</name><op:operator pos:line="314" pos:column="53">.</op:operator><name pos:line="314" pos:column="54">QName</name></name><argument_list pos:line="314" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="314" pos:column="60">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="314" pos:column="64">"xinco_settings"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="315" pos:column="9">elemField</name><op:operator pos:line="315" pos:column="18">.</op:operator><name pos:line="315" pos:column="19">setXmlType</name></name><argument_list pos:line="315" pos:column="29">(<argument><expr><op:operator pos:line="315" pos:column="30">new</op:operator> <call><name><name pos:line="315" pos:column="34">javax</name><op:operator pos:line="315" pos:column="39">.</op:operator><name pos:line="315" pos:column="40">xml</name><op:operator pos:line="315" pos:column="43">.</op:operator><name pos:line="315" pos:column="44">namespace</name><op:operator pos:line="315" pos:column="53">.</op:operator><name pos:line="315" pos:column="54">QName</name></name><argument_list pos:line="315" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="315" pos:column="60">"http://xml.apache.org/xml-soap"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="315" pos:column="94">"Vector"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="316" pos:column="9">elemField</name><op:operator pos:line="316" pos:column="18">.</op:operator><name pos:line="316" pos:column="19">setNillable</name></name><argument_list pos:line="316" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="316" pos:column="31">true</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="317" pos:column="9">typeDesc</name><op:operator pos:line="317" pos:column="17">.</op:operator><name pos:line="317" pos:column="18">addFieldDesc</name></name><argument_list pos:line="317" pos:column="30">(<argument><expr><name pos:line="317" pos:column="31">elemField</name></expr></argument>)</argument_list></call></expr>;
    }</block>

    <comment type="block" format="javadoc" pos:line="320" pos:column="5">/**
     * Return type metadata object
     */</comment>
    public static <name><name pos:line="323" pos:column="19">org</name><op:operator pos:line="323" pos:column="22">.</op:operator><name pos:line="323" pos:column="23">apache</name><op:operator pos:line="323" pos:column="29">.</op:operator><name pos:line="323" pos:column="30">axis</name><op:operator pos:line="323" pos:column="34">.</op:operator><name pos:line="323" pos:column="35">description</name><op:operator pos:line="323" pos:column="46">.</op:operator><name pos:line="323" pos:column="47">TypeDesc</name></name> <call><name pos:line="323" pos:column="56">getTypeDesc</name><argument_list pos:line="323" pos:column="67">()</argument_list></call> <block pos:line="323" pos:column="70">{
        <return pos:line="324" pos:column="9">return <expr><name pos:line="324" pos:column="16">typeDesc</name></expr>;</return>
    }</block></expr></expr_stmt>

    <comment type="block" format="javadoc" pos:line="327" pos:column="5">/**
     * Get Custom Serializer
     */</comment>
    <function><type><specifier pos:line="330" pos:column="5">public</specifier> <specifier pos:line="330" pos:column="12">static</specifier> <name><name pos:line="330" pos:column="19">org</name><op:operator pos:line="330" pos:column="22">.</op:operator><name pos:line="330" pos:column="23">apache</name><op:operator pos:line="330" pos:column="29">.</op:operator><name pos:line="330" pos:column="30">axis</name><op:operator pos:line="330" pos:column="34">.</op:operator><name pos:line="330" pos:column="35">encoding</name><op:operator pos:line="330" pos:column="43">.</op:operator><name pos:line="330" pos:column="44">Serializer</name></name></type> <name pos:line="330" pos:column="55">getSerializer</name><parameter_list pos:line="330" pos:column="68">(
           <param><decl><type><name><name pos:line="331" pos:column="12">java</name><op:operator pos:line="331" pos:column="16">.</op:operator><name pos:line="331" pos:column="17">lang</name><op:operator pos:line="331" pos:column="21">.</op:operator><name pos:line="331" pos:column="22">String</name></name></type> <name pos:line="331" pos:column="29">mechType</name></decl></param>, 
           <param><decl><type><name><name pos:line="332" pos:column="12">java</name><op:operator pos:line="332" pos:column="16">.</op:operator><name pos:line="332" pos:column="17">lang</name><op:operator pos:line="332" pos:column="21">.</op:operator><name pos:line="332" pos:column="22">Class</name></name></type> <name pos:line="332" pos:column="28">_javaType</name></decl></param>,  
           <param><decl><type><name><name pos:line="333" pos:column="12">javax</name><op:operator pos:line="333" pos:column="17">.</op:operator><name pos:line="333" pos:column="18">xml</name><op:operator pos:line="333" pos:column="21">.</op:operator><name pos:line="333" pos:column="22">namespace</name><op:operator pos:line="333" pos:column="31">.</op:operator><name pos:line="333" pos:column="32">QName</name></name></type> <name pos:line="333" pos:column="38">_xmlType</name></decl></param>)</parameter_list> <block pos:line="333" pos:column="48">{
        <return pos:line="334" pos:column="9">return 
          <expr><op:operator pos:line="335" pos:column="11">new</op:operator>  <call><name><name pos:line="335" pos:column="16">org</name><op:operator pos:line="335" pos:column="19">.</op:operator><name pos:line="335" pos:column="20">apache</name><op:operator pos:line="335" pos:column="26">.</op:operator><name pos:line="335" pos:column="27">axis</name><op:operator pos:line="335" pos:column="31">.</op:operator><name pos:line="335" pos:column="32">encoding</name><op:operator pos:line="335" pos:column="40">.</op:operator><name pos:line="335" pos:column="41">ser</name><op:operator pos:line="335" pos:column="44">.</op:operator><name pos:line="335" pos:column="45">BeanSerializer</name></name><argument_list pos:line="335" pos:column="59">(
            <argument><expr><name pos:line="336" pos:column="13">_javaType</name></expr></argument>, <argument><expr><name pos:line="336" pos:column="24">_xmlType</name></expr></argument>, <argument><expr><name pos:line="336" pos:column="34">typeDesc</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <comment type="block" format="javadoc" pos:line="339" pos:column="5">/**
     * Get Custom Deserializer
     */</comment>
    <function><type><specifier pos:line="342" pos:column="5">public</specifier> <specifier pos:line="342" pos:column="12">static</specifier> <name><name pos:line="342" pos:column="19">org</name><op:operator pos:line="342" pos:column="22">.</op:operator><name pos:line="342" pos:column="23">apache</name><op:operator pos:line="342" pos:column="29">.</op:operator><name pos:line="342" pos:column="30">axis</name><op:operator pos:line="342" pos:column="34">.</op:operator><name pos:line="342" pos:column="35">encoding</name><op:operator pos:line="342" pos:column="43">.</op:operator><name pos:line="342" pos:column="44">Deserializer</name></name></type> <name pos:line="342" pos:column="57">getDeserializer</name><parameter_list pos:line="342" pos:column="72">(
           <param><decl><type><name><name pos:line="343" pos:column="12">java</name><op:operator pos:line="343" pos:column="16">.</op:operator><name pos:line="343" pos:column="17">lang</name><op:operator pos:line="343" pos:column="21">.</op:operator><name pos:line="343" pos:column="22">String</name></name></type> <name pos:line="343" pos:column="29">mechType</name></decl></param>, 
           <param><decl><type><name><name pos:line="344" pos:column="12">java</name><op:operator pos:line="344" pos:column="16">.</op:operator><name pos:line="344" pos:column="17">lang</name><op:operator pos:line="344" pos:column="21">.</op:operator><name pos:line="344" pos:column="22">Class</name></name></type> <name pos:line="344" pos:column="28">_javaType</name></decl></param>,  
           <param><decl><type><name><name pos:line="345" pos:column="12">javax</name><op:operator pos:line="345" pos:column="17">.</op:operator><name pos:line="345" pos:column="18">xml</name><op:operator pos:line="345" pos:column="21">.</op:operator><name pos:line="345" pos:column="22">namespace</name><op:operator pos:line="345" pos:column="31">.</op:operator><name pos:line="345" pos:column="32">QName</name></name></type> <name pos:line="345" pos:column="38">_xmlType</name></decl></param>)</parameter_list> <block pos:line="345" pos:column="48">{
        <return pos:line="346" pos:column="9">return 
          <expr><op:operator pos:line="347" pos:column="11">new</op:operator>  <call><name><name pos:line="347" pos:column="16">org</name><op:operator pos:line="347" pos:column="19">.</op:operator><name pos:line="347" pos:column="20">apache</name><op:operator pos:line="347" pos:column="26">.</op:operator><name pos:line="347" pos:column="27">axis</name><op:operator pos:line="347" pos:column="31">.</op:operator><name pos:line="347" pos:column="32">encoding</name><op:operator pos:line="347" pos:column="40">.</op:operator><name pos:line="347" pos:column="41">ser</name><op:operator pos:line="347" pos:column="44">.</op:operator><name pos:line="347" pos:column="45">BeanDeserializer</name></name><argument_list pos:line="347" pos:column="61">(
            <argument><expr><name pos:line="348" pos:column="13">_javaType</name></expr></argument>, <argument><expr><name pos:line="348" pos:column="24">_xmlType</name></expr></argument>, <argument><expr><name pos:line="348" pos:column="34">typeDesc</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

}</block></class>
</unit>
