<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\UMAS\src\com\umas\frontend\StudentUI.java" pos:tabs="8"><package pos:line="1" pos:column="1">package <name><name pos:line="1" pos:column="9">com</name><op:operator pos:line="1" pos:column="12">.</op:operator><name pos:line="1" pos:column="13">umas</name><op:operator pos:line="1" pos:column="17">.</op:operator><name pos:line="1" pos:column="18">frontend</name></name>;</package>


<comment type="block" format="javadoc" pos:line="4" pos:column="1">/****************@author Simant Purohit*********************************/</comment>

<import pos:line="6" pos:column="1">import <name><name pos:line="6" pos:column="8">java</name><op:operator pos:line="6" pos:column="12">.</op:operator><name pos:line="6" pos:column="13">awt</name><op:operator pos:line="6" pos:column="16">.</op:operator><name pos:line="6" pos:column="17">BorderLayout</name></name>;</import>
<import pos:line="7" pos:column="1">import <name><name pos:line="7" pos:column="8">java</name><op:operator pos:line="7" pos:column="12">.</op:operator><name pos:line="7" pos:column="13">awt</name><op:operator pos:line="7" pos:column="16">.</op:operator><name pos:line="7" pos:column="17">EventQueue</name></name>;</import>
<import pos:line="8" pos:column="1">import <name><name pos:line="8" pos:column="8">java</name><op:operator pos:line="8" pos:column="12">.</op:operator><name pos:line="8" pos:column="13">util</name><op:operator pos:line="8" pos:column="17">.</op:operator><name pos:line="8" pos:column="18">ArrayList</name></name>;</import>
<import pos:line="9" pos:column="1">import <name><name pos:line="9" pos:column="8">java</name><op:operator pos:line="9" pos:column="12">.</op:operator><name pos:line="9" pos:column="13">util</name><op:operator pos:line="9" pos:column="17">.</op:operator><name pos:line="9" pos:column="18">LinkedHashMap</name></name>;</import>

<import pos:line="11" pos:column="1">import <name><name pos:line="11" pos:column="8">javax</name><op:operator pos:line="11" pos:column="13">.</op:operator><name pos:line="11" pos:column="14">swing</name><op:operator pos:line="11" pos:column="19">.</op:operator><name pos:line="11" pos:column="20">JFrame</name></name>;</import>
<import pos:line="12" pos:column="1">import <name><name pos:line="12" pos:column="8">javax</name><op:operator pos:line="12" pos:column="13">.</op:operator><name pos:line="12" pos:column="14">swing</name><op:operator pos:line="12" pos:column="19">.</op:operator><name pos:line="12" pos:column="20">JPanel</name></name>;</import>
<import pos:line="13" pos:column="1">import <name><name pos:line="13" pos:column="8">javax</name><op:operator pos:line="13" pos:column="13">.</op:operator><name pos:line="13" pos:column="14">swing</name><op:operator pos:line="13" pos:column="19">.</op:operator><name pos:line="13" pos:column="20">border</name><op:operator pos:line="13" pos:column="26">.</op:operator><name pos:line="13" pos:column="27">EmptyBorder</name></name>;</import>
<import pos:line="14" pos:column="1">import <name><name pos:line="14" pos:column="8">javax</name><op:operator pos:line="14" pos:column="13">.</op:operator><name pos:line="14" pos:column="14">swing</name><op:operator pos:line="14" pos:column="19">.</op:operator><name pos:line="14" pos:column="20">DefaultComboBoxModel</name></name>;</import>
<import pos:line="15" pos:column="1">import <name><name pos:line="15" pos:column="8">javax</name><op:operator pos:line="15" pos:column="13">.</op:operator><name pos:line="15" pos:column="14">swing</name><op:operator pos:line="15" pos:column="19">.</op:operator><name pos:line="15" pos:column="20">JOptionPane</name></name>;</import>
<import pos:line="16" pos:column="1">import <name><name pos:line="16" pos:column="8">javax</name><op:operator pos:line="16" pos:column="13">.</op:operator><name pos:line="16" pos:column="14">swing</name><op:operator pos:line="16" pos:column="19">.</op:operator><name pos:line="16" pos:column="20">JTabbedPane</name></name>;</import>
<import pos:line="17" pos:column="1">import <name><name pos:line="17" pos:column="8">javax</name><op:operator pos:line="17" pos:column="13">.</op:operator><name pos:line="17" pos:column="14">swing</name><op:operator pos:line="17" pos:column="19">.</op:operator><name pos:line="17" pos:column="20">JComboBox</name></name>;</import>
<import pos:line="18" pos:column="1">import <name><name pos:line="18" pos:column="8">javax</name><op:operator pos:line="18" pos:column="13">.</op:operator><name pos:line="18" pos:column="14">swing</name><op:operator pos:line="18" pos:column="19">.</op:operator><name pos:line="18" pos:column="20">JButton</name></name>;</import>
<import pos:line="19" pos:column="1">import <name><name pos:line="19" pos:column="8">javax</name><op:operator pos:line="19" pos:column="13">.</op:operator><name pos:line="19" pos:column="14">swing</name><op:operator pos:line="19" pos:column="19">.</op:operator><name pos:line="19" pos:column="20">JLabel</name></name>;</import>
<import pos:line="20" pos:column="1">import <name><name pos:line="20" pos:column="8">javax</name><op:operator pos:line="20" pos:column="13">.</op:operator><name pos:line="20" pos:column="14">swing</name><op:operator pos:line="20" pos:column="19">.</op:operator><name pos:line="20" pos:column="20">JTextArea</name></name>;</import>



<import pos:line="24" pos:column="1">import <name><name pos:line="24" pos:column="8">com</name><op:operator pos:line="24" pos:column="11">.</op:operator><name pos:line="24" pos:column="12">umas</name><op:operator pos:line="24" pos:column="16">.</op:operator><name pos:line="24" pos:column="17">code</name><op:operator pos:line="24" pos:column="21">.</op:operator><name pos:line="24" pos:column="22">Course</name></name>;</import>
<import pos:line="25" pos:column="1">import <name><name pos:line="25" pos:column="8">com</name><op:operator pos:line="25" pos:column="11">.</op:operator><name pos:line="25" pos:column="12">umas</name><op:operator pos:line="25" pos:column="16">.</op:operator><name pos:line="25" pos:column="17">code</name><op:operator pos:line="25" pos:column="21">.</op:operator><name pos:line="25" pos:column="22">CourseOffered</name></name>;</import>
<import pos:line="26" pos:column="1">import <name><name pos:line="26" pos:column="8">com</name><op:operator pos:line="26" pos:column="11">.</op:operator><name pos:line="26" pos:column="12">umas</name><op:operator pos:line="26" pos:column="16">.</op:operator><name pos:line="26" pos:column="17">code</name><op:operator pos:line="26" pos:column="21">.</op:operator><name pos:line="26" pos:column="22">DBAnnotation</name></name>;</import>
<import pos:line="27" pos:column="1">import <name><name pos:line="27" pos:column="8">com</name><op:operator pos:line="27" pos:column="11">.</op:operator><name pos:line="27" pos:column="12">umas</name><op:operator pos:line="27" pos:column="16">.</op:operator><name pos:line="27" pos:column="17">code</name><op:operator pos:line="27" pos:column="21">.</op:operator><name pos:line="27" pos:column="22">Department</name></name>;</import>
<import pos:line="28" pos:column="1">import <name><name pos:line="28" pos:column="8">com</name><op:operator pos:line="28" pos:column="11">.</op:operator><name pos:line="28" pos:column="12">umas</name><op:operator pos:line="28" pos:column="16">.</op:operator><name pos:line="28" pos:column="17">code</name><op:operator pos:line="28" pos:column="21">.</op:operator><name pos:line="28" pos:column="22">People</name></name>;</import>
<import pos:line="29" pos:column="1">import <name><name pos:line="29" pos:column="8">com</name><op:operator pos:line="29" pos:column="11">.</op:operator><name pos:line="29" pos:column="12">umas</name><op:operator pos:line="29" pos:column="16">.</op:operator><name pos:line="29" pos:column="17">code</name><op:operator pos:line="29" pos:column="21">.</op:operator><name pos:line="29" pos:column="22">Student</name></name>;</import>
<import pos:line="30" pos:column="1">import <name><name pos:line="30" pos:column="8">com</name><op:operator pos:line="30" pos:column="11">.</op:operator><name pos:line="30" pos:column="12">umas</name><op:operator pos:line="30" pos:column="16">.</op:operator><name pos:line="30" pos:column="17">code</name><op:operator pos:line="30" pos:column="21">.</op:operator><name pos:line="30" pos:column="22">StudentEnrollment</name></name>;</import>
<import pos:line="31" pos:column="1">import <name><name pos:line="31" pos:column="8">com</name><op:operator pos:line="31" pos:column="11">.</op:operator><name pos:line="31" pos:column="12">umas</name><op:operator pos:line="31" pos:column="16">.</op:operator><name pos:line="31" pos:column="17">code</name><op:operator pos:line="31" pos:column="21">.</op:operator><name pos:line="31" pos:column="22">WaitList</name></name>;</import>
<import pos:line="32" pos:column="1">import <name><name pos:line="32" pos:column="8">com</name><op:operator pos:line="32" pos:column="11">.</op:operator><name pos:line="32" pos:column="12">umas</name><op:operator pos:line="32" pos:column="16">.</op:operator><name pos:line="32" pos:column="17">code</name><op:operator pos:line="32" pos:column="21">.</op:operator><name pos:line="32" pos:column="22">Course</name><op:operator pos:line="32" pos:column="28">.</op:operator><name pos:line="32" pos:column="29">CourseDoesNotExistException</name></name>;</import>
<import pos:line="33" pos:column="1">import <name><name pos:line="33" pos:column="8">com</name><op:operator pos:line="33" pos:column="11">.</op:operator><name pos:line="33" pos:column="12">umas</name><op:operator pos:line="33" pos:column="16">.</op:operator><name pos:line="33" pos:column="17">code</name><op:operator pos:line="33" pos:column="21">.</op:operator><name pos:line="33" pos:column="22">CourseOffered</name><op:operator pos:line="33" pos:column="35">.</op:operator><name pos:line="33" pos:column="36">CourseOfferingDoesNotExistException</name></name>;</import>
<import pos:line="34" pos:column="1">import <name><name pos:line="34" pos:column="8">com</name><op:operator pos:line="34" pos:column="11">.</op:operator><name pos:line="34" pos:column="12">umas</name><op:operator pos:line="34" pos:column="16">.</op:operator><name pos:line="34" pos:column="17">code</name><op:operator pos:line="34" pos:column="21">.</op:operator><name pos:line="34" pos:column="22">Department</name><op:operator pos:line="34" pos:column="32">.</op:operator><name pos:line="34" pos:column="33">DepartmentDoesNotExistException</name></name>;</import>
<import pos:line="35" pos:column="1">import <name><name pos:line="35" pos:column="8">com</name><op:operator pos:line="35" pos:column="11">.</op:operator><name pos:line="35" pos:column="12">umas</name><op:operator pos:line="35" pos:column="16">.</op:operator><name pos:line="35" pos:column="17">code</name><op:operator pos:line="35" pos:column="21">.</op:operator><name pos:line="35" pos:column="22">People</name><op:operator pos:line="35" pos:column="28">.</op:operator><name pos:line="35" pos:column="29">PersonDoesNotExistException</name></name>;</import>

<import pos:line="37" pos:column="1">import <name><name pos:line="37" pos:column="8">java</name><op:operator pos:line="37" pos:column="12">.</op:operator><name pos:line="37" pos:column="13">awt</name><op:operator pos:line="37" pos:column="16">.</op:operator><name pos:line="37" pos:column="17">event</name><op:operator pos:line="37" pos:column="22">.</op:operator><name pos:line="37" pos:column="23">ActionListener</name></name>;</import>
<import pos:line="38" pos:column="1">import <name><name pos:line="38" pos:column="8">java</name><op:operator pos:line="38" pos:column="12">.</op:operator><name pos:line="38" pos:column="13">awt</name><op:operator pos:line="38" pos:column="16">.</op:operator><name pos:line="38" pos:column="17">event</name><op:operator pos:line="38" pos:column="22">.</op:operator><name pos:line="38" pos:column="23">ActionEvent</name></name>;</import>
<import pos:line="39" pos:column="1">import <name><name pos:line="39" pos:column="8">java</name><op:operator pos:line="39" pos:column="12">.</op:operator><name pos:line="39" pos:column="13">awt</name><op:operator pos:line="39" pos:column="16">.</op:operator><name pos:line="39" pos:column="17">Color</name></name>;</import>
<import pos:line="40" pos:column="1">import <name><name pos:line="40" pos:column="8">java</name><op:operator pos:line="40" pos:column="12">.</op:operator><name pos:line="40" pos:column="13">awt</name><op:operator pos:line="40" pos:column="16">.</op:operator><name pos:line="40" pos:column="17">Font</name></name>;</import>


<class><specifier pos:line="43" pos:column="1">public</specifier> class <name pos:line="43" pos:column="14">StudentUI</name> <super><extends pos:line="43" pos:column="24">extends <name pos:line="43" pos:column="32">JPanel</name></extends></super> <block pos:line="43" pos:column="39">{

	<comment type="block" format="javadoc" pos:line="45" pos:column="9">/**
	 * 
	 */</comment>
	<decl_stmt><decl><type><specifier pos:line="48" pos:column="9">private</specifier> <specifier pos:line="48" pos:column="17">static</specifier> <name pos:line="48" pos:column="24">Student</name></type> <name pos:line="48" pos:column="32">student</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="49" pos:column="9">private</specifier> <specifier pos:line="49" pos:column="17">static</specifier> <name pos:line="49" pos:column="24">StudentUI</name></type> <name pos:line="49" pos:column="34">studentCourseUI</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="50" pos:column="9">private</specifier> <specifier pos:line="50" pos:column="17">static</specifier> <specifier pos:line="50" pos:column="24">final</specifier> <name pos:line="50" pos:column="30">long</name></type> <name pos:line="50" pos:column="35">serialVersionUID</name> <init pos:line="50" pos:column="52">= <expr><lit:literal type="number" pos:line="50" pos:column="54">1L</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="51" pos:column="9">private</specifier> <name pos:line="51" pos:column="17">JPanel</name></type> <name pos:line="51" pos:column="24">contentPane</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="52" pos:column="9">private</specifier> <name><name pos:line="52" pos:column="17">JComboBox</name><argument_list pos:line="52" pos:column="26">&lt;<argument><name pos:line="52" pos:column="27">String</name></argument>&gt;</argument_list></name></type> <name pos:line="52" pos:column="35">selectDepartmentCombo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="53" pos:column="9">private</specifier> <name><name pos:line="53" pos:column="17">JComboBox</name><argument_list pos:line="53" pos:column="26">&lt;<argument><name pos:line="53" pos:column="27">String</name></argument>&gt;</argument_list></name></type> <name pos:line="53" pos:column="35">selectCourseCombo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="54" pos:column="9">private</specifier> <name><name pos:line="54" pos:column="17">JComboBox</name><argument_list pos:line="54" pos:column="26">&lt;<argument><name pos:line="54" pos:column="27">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="54" pos:column="36">selectOfferingCombo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="55" pos:column="9">private</specifier> <name pos:line="55" pos:column="17">JTextArea</name></type> <name pos:line="55" pos:column="27">txtrCourseDetails</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="56" pos:column="9">private</specifier> <name pos:line="56" pos:column="17">JButton</name></type> <name pos:line="56" pos:column="25">btnRegister</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="57" pos:column="9">private</specifier> <name pos:line="57" pos:column="17">JButton</name></type> <name pos:line="57" pos:column="25">btnAddToWait</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="58" pos:column="9">private</specifier> <specifier pos:line="58" pos:column="17">static</specifier> <name pos:line="58" pos:column="24">JTabbedPane</name></type> <name pos:line="58" pos:column="36">currentCoursesTab</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="59" pos:column="9">private</specifier> <specifier pos:line="59" pos:column="17">static</specifier> <name pos:line="59" pos:column="24">JTabbedPane</name></type> <name pos:line="59" pos:column="36">previousCourses</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="60" pos:column="9">private</specifier> <specifier pos:line="60" pos:column="17">static</specifier> <name pos:line="60" pos:column="24">JTabbedPane</name></type> <name pos:line="60" pos:column="36">waitListTab</name></decl>;</decl_stmt>

	<comment type="block" format="javadoc" pos:line="62" pos:column="9">/**
	 * Launch the application.
	 */</comment>
	<function><type><specifier pos:line="65" pos:column="9">public</specifier> <specifier pos:line="65" pos:column="16">static</specifier> <name pos:line="65" pos:column="23">void</name></type> <name pos:line="65" pos:column="28">main</name><parameter_list pos:line="65" pos:column="32">(<param><decl><type><name><name pos:line="65" pos:column="33">String</name><index pos:line="65" pos:column="39">[]</index></name></type> <name pos:line="65" pos:column="42">args</name></decl></param>)</parameter_list> <block pos:line="65" pos:column="48">{
		<expr_stmt><expr><call><name><name pos:line="66" pos:column="17">EventQueue</name><op:operator pos:line="66" pos:column="27">.</op:operator><name pos:line="66" pos:column="28">invokeLater</name></name><argument_list pos:line="66" pos:column="39">(<argument><expr><op:operator pos:line="66" pos:column="40">new</op:operator> <class><super><name pos:line="66" pos:column="44">Runnable</name></super><argument_list pos:line="66" pos:column="52">()</argument_list> <block pos:line="66" pos:column="55">{
			<function><type><specifier pos:line="67" pos:column="25">public</specifier> <name pos:line="67" pos:column="32">void</name></type> <name pos:line="67" pos:column="37">run</name><parameter_list pos:line="67" pos:column="40">()</parameter_list> <block pos:line="67" pos:column="43">{
				<try pos:line="68" pos:column="33">try <block pos:line="68" pos:column="37">{
					<decl_stmt><decl><type><name pos:line="69" pos:column="41">StudentUI</name></type> <name pos:line="69" pos:column="51">frame</name> <init pos:line="69" pos:column="57">= <expr><op:operator pos:line="69" pos:column="59">new</op:operator> <call><name pos:line="69" pos:column="63">StudentUI</name><argument_list pos:line="69" pos:column="72">(<argument><expr><op:operator pos:line="69" pos:column="73">new</op:operator> <call><name pos:line="69" pos:column="77">Student</name><argument_list pos:line="69" pos:column="84">(<argument><expr><lit:literal type="number" pos:line="69" pos:column="85">451</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="70" pos:column="41">frame</name><op:operator pos:line="70" pos:column="46">.</op:operator><name pos:line="70" pos:column="47">setVisible</name></name><argument_list pos:line="70" pos:column="57">(<argument><expr><lit:literal type="boolean" pos:line="70" pos:column="58">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block> <catch pos:line="71" pos:column="35">catch <parameter_list pos:line="71" pos:column="41">(<param><decl><type><name pos:line="71" pos:column="42">Exception</name></type> <name pos:line="71" pos:column="52">e</name></decl></param>)</parameter_list> <block pos:line="71" pos:column="55">{
					<expr_stmt><expr><call><name><name pos:line="72" pos:column="41">e</name><op:operator pos:line="72" pos:column="42">.</op:operator><name pos:line="72" pos:column="43">printStackTrace</name></name><argument_list pos:line="72" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>
	
	
	<function><type><specifier pos:line="79" pos:column="9">public</specifier> <specifier pos:line="79" pos:column="16">static</specifier> <name pos:line="79" pos:column="23">StudentUI</name></type> <name pos:line="79" pos:column="33">getInstance</name><parameter_list pos:line="79" pos:column="44">(<param><decl><type><name pos:line="79" pos:column="45">Student</name></type> <name pos:line="79" pos:column="53">s</name></decl></param>)</parameter_list><block pos:line="79" pos:column="55">{
		<expr_stmt><expr><name pos:line="80" pos:column="17">studentCourseUI</name> <op:operator pos:line="80" pos:column="33">=</op:operator> <op:operator pos:line="80" pos:column="35">new</op:operator> <call><name pos:line="80" pos:column="39">StudentUI</name><argument_list pos:line="80" pos:column="48">(<argument><expr><name pos:line="80" pos:column="49">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>		
		<return pos:line="81" pos:column="17">return <expr><name pos:line="81" pos:column="24">studentCourseUI</name></expr>;</return>
	}</block></function>
	
	<constructor><specifier pos:line="84" pos:column="9">private</specifier> <name pos:line="84" pos:column="17">StudentUI</name><parameter_list pos:line="84" pos:column="26">(<param><decl><type><specifier pos:line="84" pos:column="27">final</specifier> <name pos:line="84" pos:column="33">Student</name></type> <name pos:line="84" pos:column="41">s</name></decl></param>)</parameter_list> <block pos:line="84" pos:column="44">{
		<expr_stmt><expr><name pos:line="85" pos:column="17">student</name> <op:operator pos:line="85" pos:column="25">=</op:operator> <name pos:line="85" pos:column="27">s</name></expr>;</expr_stmt>
		<comment type="line" pos:line="86" pos:column="17">//setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</comment>
		<expr_stmt><expr><call><name pos:line="87" pos:column="17">setBounds</name><argument_list pos:line="87" pos:column="26">(<argument><expr><lit:literal type="number" pos:line="87" pos:column="27">100</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="87" pos:column="32">100</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="87" pos:column="37">800</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="87" pos:column="42">600</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="88" pos:column="17">//contentPane = new JPanel();</comment>
		<expr_stmt><expr><call><name pos:line="89" pos:column="17">setBorder</name><argument_list pos:line="89" pos:column="26">(<argument><expr><op:operator pos:line="89" pos:column="27">new</op:operator> <call><name pos:line="89" pos:column="31">EmptyBorder</name><argument_list pos:line="89" pos:column="42">(<argument><expr><lit:literal type="number" pos:line="89" pos:column="43">5</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="89" pos:column="46">5</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="89" pos:column="49">5</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="89" pos:column="52">5</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="90" pos:column="17">//setContentPane(contentPane);</comment>
		<expr_stmt><expr><call><name pos:line="91" pos:column="17">setLayout</name><argument_list pos:line="91" pos:column="26">(<argument><expr><op:operator pos:line="91" pos:column="27">new</op:operator> <call><name pos:line="91" pos:column="31">BorderLayout</name><argument_list pos:line="91" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="91" pos:column="44">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="91" pos:column="47">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<comment type="line" pos:line="93" pos:column="17">//------------------Course------------------//</comment>
		<decl_stmt><decl><type><name pos:line="94" pos:column="17">JTabbedPane</name></type> <name pos:line="94" pos:column="29">tabbedPane</name> <init pos:line="94" pos:column="40">= <expr><op:operator pos:line="94" pos:column="42">new</op:operator> <call><name pos:line="94" pos:column="46">JTabbedPane</name><argument_list pos:line="94" pos:column="57">(<argument><expr><name><name pos:line="94" pos:column="58">JTabbedPane</name><op:operator pos:line="94" pos:column="69">.</op:operator><name pos:line="94" pos:column="70">TOP</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="95" pos:column="17">add</name><argument_list pos:line="95" pos:column="20">(<argument><expr><name pos:line="95" pos:column="21">tabbedPane</name></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="33">BorderLayout</name><op:operator pos:line="95" pos:column="45">.</op:operator><name pos:line="95" pos:column="46">CENTER</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="97" pos:column="17">JPanel</name></type> <name pos:line="97" pos:column="24">courseRegistration</name> <init pos:line="97" pos:column="43">= <expr><op:operator pos:line="97" pos:column="45">new</op:operator> <call><name pos:line="97" pos:column="49">JPanel</name><argument_list pos:line="97" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="98" pos:column="17">tabbedPane</name><op:operator pos:line="98" pos:column="27">.</op:operator><name pos:line="98" pos:column="28">addTab</name></name><argument_list pos:line="98" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="98" pos:column="35">"Course Registration"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="98" pos:column="58">null</lit:literal></expr></argument>, <argument><expr><name pos:line="98" pos:column="64">courseRegistration</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="98" pos:column="84">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="99" pos:column="17">courseRegistration</name><op:operator pos:line="99" pos:column="35">.</op:operator><name pos:line="99" pos:column="36">setLayout</name></name><argument_list pos:line="99" pos:column="45">(<argument><expr><lit:literal type="null" pos:line="99" pos:column="46">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="101" pos:column="17">selectDepartmentCombo</name> <op:operator pos:line="101" pos:column="39">=</op:operator> <op:operator pos:line="101" pos:column="41">new</op:operator> <call><name><name pos:line="101" pos:column="45">JComboBox</name><argument_list pos:line="101" pos:column="54">&lt;<argument><name pos:line="101" pos:column="55">String</name></argument>&gt;</argument_list></name><argument_list pos:line="101" pos:column="62">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="102" pos:column="17">selectDepartmentCombo</name><op:operator pos:line="102" pos:column="38">.</op:operator><name pos:line="102" pos:column="39">addActionListener</name></name><argument_list pos:line="102" pos:column="56">(<argument><expr><op:operator pos:line="102" pos:column="57">new</op:operator> <class><super><name pos:line="102" pos:column="61">ActionListener</name></super><argument_list pos:line="102" pos:column="75">()</argument_list> <block pos:line="102" pos:column="78">{
			<function><type><specifier pos:line="103" pos:column="25">public</specifier> <name pos:line="103" pos:column="32">void</name></type> <name pos:line="103" pos:column="37">actionPerformed</name><parameter_list pos:line="103" pos:column="52">(<param><decl><type><name pos:line="103" pos:column="53">ActionEvent</name></type> <name pos:line="103" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="103" pos:column="71">{
				<decl_stmt><decl><type><name><name pos:line="104" pos:column="33">ArrayList</name><argument_list pos:line="104" pos:column="42">&lt;<argument><name pos:line="104" pos:column="43">Course</name></argument>&gt;</argument_list></name></type> <name pos:line="104" pos:column="51">departmentCourses</name> <init pos:line="104" pos:column="69">= <expr><op:operator pos:line="104" pos:column="71">new</op:operator> <call><name><name pos:line="104" pos:column="75">ArrayList</name><argument_list pos:line="104" pos:column="84">&lt;<argument><name pos:line="104" pos:column="85">Course</name></argument>&gt;</argument_list></name><argument_list pos:line="104" pos:column="92">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name><name pos:line="105" pos:column="33">LinkedHashMap</name><argument_list pos:line="105" pos:column="46">&lt;<argument><name pos:line="105" pos:column="47">Integer</name></argument>, <argument><name pos:line="105" pos:column="56">CourseOffered</name></argument>&gt;</argument_list></name></type> <name pos:line="105" pos:column="71">courseOfferings</name> <init pos:line="105" pos:column="87">= <expr><op:operator pos:line="105" pos:column="89">new</op:operator> <call><name><name pos:line="105" pos:column="93">LinkedHashMap</name><argument_list pos:line="105" pos:column="106">&lt;<argument><name pos:line="105" pos:column="107">Integer</name></argument>, <argument><name pos:line="105" pos:column="116">CourseOffered</name></argument>&gt;</argument_list></name><argument_list pos:line="105" pos:column="130">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="106" pos:column="33">String</name></type> <name pos:line="106" pos:column="40">departmentName</name> <init pos:line="106" pos:column="55">= <expr><op:operator pos:line="106" pos:column="57">(</op:operator><name pos:line="106" pos:column="58">String</name><op:operator pos:line="106" pos:column="64">)</op:operator><call><name><name pos:line="106" pos:column="65">selectDepartmentCombo</name><op:operator pos:line="106" pos:column="86">.</op:operator><name pos:line="106" pos:column="87">getSelectedItem</name></name><argument_list pos:line="106" pos:column="102">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="107" pos:column="33">Department</name></type> <name pos:line="107" pos:column="44">dept</name></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="108" pos:column="33">btnRegister</name><op:operator pos:line="108" pos:column="44">.</op:operator><name pos:line="108" pos:column="45">setEnabled</name></name><argument_list pos:line="108" pos:column="55">(<argument><expr><lit:literal type="boolean" pos:line="108" pos:column="56">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="109" pos:column="33">btnAddToWait</name><op:operator pos:line="109" pos:column="45">.</op:operator><name pos:line="109" pos:column="46">setEnabled</name></name><argument_list pos:line="109" pos:column="56">(<argument><expr><lit:literal type="boolean" pos:line="109" pos:column="57">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<try pos:line="110" pos:column="33">try <block pos:line="110" pos:column="37">{
					<expr_stmt><expr><name pos:line="111" pos:column="41">dept</name> <op:operator pos:line="111" pos:column="46">=</op:operator> <op:operator pos:line="111" pos:column="48">new</op:operator> <call><name pos:line="111" pos:column="52">Department</name><argument_list pos:line="111" pos:column="62">(<argument><expr><name pos:line="111" pos:column="63">departmentName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="112" pos:column="41">departmentCourses</name> <op:operator pos:line="112" pos:column="59">=</op:operator> <call><name><name pos:line="112" pos:column="61">dept</name><op:operator pos:line="112" pos:column="65">.</op:operator><name pos:line="112" pos:column="66">getDepartmentCourses</name></name><argument_list pos:line="112" pos:column="86">()</argument_list></call></expr>;</expr_stmt>
					
					<if pos:line="114" pos:column="41">if<condition pos:line="114" pos:column="43">(<expr><call><name><name pos:line="114" pos:column="44">departmentCourses</name><op:operator pos:line="114" pos:column="61">.</op:operator><name pos:line="114" pos:column="62">size</name></name><argument_list pos:line="114" pos:column="66">()</argument_list></call><op:operator pos:line="114" pos:column="68">&gt;</op:operator><lit:literal type="number" pos:line="114" pos:column="69">0</lit:literal></expr>)</condition><then><block pos:line="114" pos:column="71">{
						<expr_stmt><expr><name pos:line="115" pos:column="49">courseOfferings</name> <op:operator pos:line="115" pos:column="65">=</op:operator> <call><name><name pos:line="115" pos:column="67">departmentCourses</name><op:operator pos:line="115" pos:column="84">.</op:operator><name pos:line="115" pos:column="85">get</name></name><argument_list pos:line="115" pos:column="88">(<argument><expr><lit:literal type="number" pos:line="115" pos:column="89">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="115" pos:column="91">.</op:operator><call><name pos:line="115" pos:column="92">getCurrentOfferings</name><argument_list pos:line="115" pos:column="111">()</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
					
					<decl_stmt><decl><type><name><name pos:line="118" pos:column="41">DefaultComboBoxModel</name><argument_list pos:line="118" pos:column="61">&lt;<argument><name pos:line="118" pos:column="62">String</name></argument>&gt;</argument_list></name></type> <name pos:line="118" pos:column="70">coursesModel</name> <init pos:line="118" pos:column="83">= <expr><op:operator pos:line="118" pos:column="85">new</op:operator> <call><name><name pos:line="118" pos:column="89">DefaultComboBoxModel</name><argument_list pos:line="118" pos:column="109">&lt;<argument><name pos:line="118" pos:column="110">String</name></argument>&gt;</argument_list></name><argument_list pos:line="118" pos:column="117">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name><name pos:line="119" pos:column="41">DefaultComboBoxModel</name><argument_list pos:line="119" pos:column="61">&lt;<argument><name pos:line="119" pos:column="62">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="119" pos:column="71">offerModel</name> <init pos:line="119" pos:column="82">= <expr><op:operator pos:line="119" pos:column="84">new</op:operator> <call><name><name pos:line="119" pos:column="88">DefaultComboBoxModel</name><argument_list pos:line="119" pos:column="108">&lt;<argument><name pos:line="119" pos:column="109">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="119" pos:column="117">()</argument_list></call></expr></init></decl>;</decl_stmt>
					
					
					<for pos:line="122" pos:column="41">for(<init><decl><type><name pos:line="122" pos:column="45">Course</name></type> <name pos:line="122" pos:column="52">c</name><range pos:line="122" pos:column="53">:<expr><name pos:line="122" pos:column="54">departmentCourses</name></expr></range></decl></init>)<block pos:line="122" pos:column="72">{
						<expr_stmt><expr><call><name><name pos:line="123" pos:column="49">coursesModel</name><op:operator pos:line="123" pos:column="61">.</op:operator><name pos:line="123" pos:column="62">addElement</name></name><argument_list pos:line="123" pos:column="72">(<argument><expr><call><name><name pos:line="123" pos:column="73">c</name><op:operator pos:line="123" pos:column="74">.</op:operator><name pos:line="123" pos:column="75">getCourseName</name></name><argument_list pos:line="123" pos:column="88">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></for>
					
					<for pos:line="126" pos:column="41">for(<init><decl><type><name pos:line="126" pos:column="45">Integer</name></type> <name pos:line="126" pos:column="53">i</name><range pos:line="126" pos:column="54">:<expr><call><name><name pos:line="126" pos:column="55">courseOfferings</name><op:operator pos:line="126" pos:column="70">.</op:operator><name pos:line="126" pos:column="71">keySet</name></name><argument_list pos:line="126" pos:column="77">()</argument_list></call></expr></range></decl></init>)<block pos:line="126" pos:column="80">{
						<expr_stmt><expr><call><name><name pos:line="127" pos:column="49">offerModel</name><op:operator pos:line="127" pos:column="59">.</op:operator><name pos:line="127" pos:column="60">addElement</name></name><argument_list pos:line="127" pos:column="70">(<argument><expr><name pos:line="127" pos:column="71">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></for>
					
					<expr_stmt><expr><call><name><name pos:line="130" pos:column="41">selectCourseCombo</name><op:operator pos:line="130" pos:column="58">.</op:operator><name pos:line="130" pos:column="59">setModel</name></name><argument_list pos:line="130" pos:column="67">(<argument><expr><name pos:line="130" pos:column="68">coursesModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="131" pos:column="41">selectOfferingCombo</name><op:operator pos:line="131" pos:column="60">.</op:operator><name pos:line="131" pos:column="61">setModel</name></name><argument_list pos:line="131" pos:column="69">(<argument><expr><name pos:line="131" pos:column="70">offerModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
					<if pos:line="133" pos:column="41">if<condition pos:line="133" pos:column="43">(<expr><call><name><name pos:line="133" pos:column="44">offerModel</name><op:operator pos:line="133" pos:column="54">.</op:operator><name pos:line="133" pos:column="55">getSize</name></name><argument_list pos:line="133" pos:column="62">()</argument_list></call><op:operator pos:line="133" pos:column="64">&gt;</op:operator><lit:literal type="number" pos:line="133" pos:column="65">0</lit:literal></expr>)</condition><then><block pos:line="133" pos:column="67">{
						<expr_stmt><expr><call><name><name pos:line="134" pos:column="49">selectOfferingCombo</name><op:operator pos:line="134" pos:column="68">.</op:operator><name pos:line="134" pos:column="69">setSelectedIndex</name></name><argument_list pos:line="134" pos:column="85">(<argument><expr><lit:literal type="number" pos:line="134" pos:column="86">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name pos:line="135" pos:column="49">setCourseDetailsTextBoxInRegistrationsTab</name><argument_list pos:line="135" pos:column="90">(<argument><expr><op:operator pos:line="135" pos:column="91">(</op:operator><name pos:line="135" pos:column="92">Integer</name><op:operator pos:line="135" pos:column="99">)</op:operator><call><name><name pos:line="135" pos:column="100">selectOfferingCombo</name><op:operator pos:line="135" pos:column="119">.</op:operator><name pos:line="135" pos:column="120">getSelectedItem</name></name><argument_list pos:line="135" pos:column="135">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<try pos:line="136" pos:column="49">try <block pos:line="136" pos:column="53">{
							<decl_stmt><decl><type><name pos:line="137" pos:column="57">CourseOffered</name></type> <name pos:line="137" pos:column="71">courseOffered</name> <init pos:line="137" pos:column="85">= <expr><call><name><name pos:line="137" pos:column="87">courseOfferings</name><op:operator pos:line="137" pos:column="102">.</op:operator><name pos:line="137" pos:column="103">get</name></name><argument_list pos:line="137" pos:column="106">(<argument><expr><op:operator pos:line="137" pos:column="107">(</op:operator><name pos:line="137" pos:column="108">Integer</name><op:operator pos:line="137" pos:column="115">)</op:operator><call><name><name pos:line="137" pos:column="116">selectOfferingCombo</name><op:operator pos:line="137" pos:column="135">.</op:operator><name pos:line="137" pos:column="136">getSelectedItem</name></name><argument_list pos:line="137" pos:column="151">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="138" pos:column="57">boolean</name></type> <name pos:line="138" pos:column="65">isRegisterable</name> <init pos:line="138" pos:column="80">= <expr><call><name><name pos:line="138" pos:column="82">courseOffered</name><op:operator pos:line="138" pos:column="95">.</op:operator><name pos:line="138" pos:column="96">isCourseRegistrableBy</name></name><argument_list pos:line="138" pos:column="117">(<argument><expr><name pos:line="138" pos:column="118">student</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="139" pos:column="57">boolean</name></type> <name pos:line="139" pos:column="65">isWaitListEligible</name> <init pos:line="139" pos:column="84">= <expr><call><name><name pos:line="139" pos:column="86">WaitList</name><op:operator pos:line="139" pos:column="94">.</op:operator><name pos:line="139" pos:column="95">canBeAddedToWaitList</name></name><argument_list pos:line="139" pos:column="115">(<argument><expr><name pos:line="139" pos:column="116">student</name></expr></argument>, <argument><expr><call><name><name pos:line="139" pos:column="125">courseOffered</name><op:operator pos:line="139" pos:column="138">.</op:operator><name pos:line="139" pos:column="139">getOfferID</name></name><argument_list pos:line="139" pos:column="149">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<if pos:line="140" pos:column="57">if<condition pos:line="140" pos:column="59">(<expr><name pos:line="140" pos:column="60">isRegisterable</name></expr>)</condition><then><block pos:line="140" pos:column="75">{
								<expr_stmt><expr><call><name><name pos:line="141" pos:column="65">btnRegister</name><op:operator pos:line="141" pos:column="76">.</op:operator><name pos:line="141" pos:column="77">setEnabled</name></name><argument_list pos:line="141" pos:column="87">(<argument><expr><lit:literal type="boolean" pos:line="141" pos:column="88">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							}</block></then></if>
							<if pos:line="143" pos:column="57">if<condition pos:line="143" pos:column="59">(<expr><name pos:line="143" pos:column="60">isWaitListEligible</name></expr>)</condition><then><block pos:line="143" pos:column="79">{
								<expr_stmt><expr><call><name><name pos:line="144" pos:column="65">btnAddToWait</name><op:operator pos:line="144" pos:column="77">.</op:operator><name pos:line="144" pos:column="78">setEnabled</name></name><argument_list pos:line="144" pos:column="88">(<argument><expr><lit:literal type="boolean" pos:line="144" pos:column="89">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							}</block></then></if>
							
						}</block> <catch pos:line="147" pos:column="51">catch <parameter_list pos:line="147" pos:column="57">(<param><decl><type><name><name pos:line="147" pos:column="58">Course</name><op:operator pos:line="147" pos:column="64">.</op:operator><name pos:line="147" pos:column="65">CourseDoesNotExistException</name></name></type> <name pos:line="147" pos:column="93">e</name></decl></param>)</parameter_list> <block pos:line="147" pos:column="96">{
							<comment type="line" pos:line="148" pos:column="57">// TODO Auto-generated catch block</comment>
							<expr_stmt><expr><call><name><name pos:line="149" pos:column="57">e</name><op:operator pos:line="149" pos:column="58">.</op:operator><name pos:line="149" pos:column="59">printStackTrace</name></name><argument_list pos:line="149" pos:column="74">()</argument_list></call></expr>;</expr_stmt>
						}</block></catch> <catch pos:line="150" pos:column="51">catch <parameter_list pos:line="150" pos:column="57">(<param><decl><type><name><name pos:line="150" pos:column="58">CourseOffered</name><op:operator pos:line="150" pos:column="71">.</op:operator><name pos:line="150" pos:column="72">CourseOfferingDoesNotExistException</name></name></type> <name pos:line="150" pos:column="108">e</name></decl></param>)</parameter_list> <block pos:line="150" pos:column="111">{
							<comment type="line" pos:line="151" pos:column="57">// TODO Auto-generated catch block</comment>
							<expr_stmt><expr><call><name><name pos:line="152" pos:column="57">e</name><op:operator pos:line="152" pos:column="58">.</op:operator><name pos:line="152" pos:column="59">printStackTrace</name></name><argument_list pos:line="152" pos:column="74">()</argument_list></call></expr>;</expr_stmt>
						}</block></catch></try>
					}</block></then>
					<else pos:line="155" pos:column="41">else<block pos:line="155" pos:column="45">{
						<expr_stmt><expr><call><name><name pos:line="156" pos:column="49">txtrCourseDetails</name><op:operator pos:line="156" pos:column="66">.</op:operator><name pos:line="156" pos:column="67">setText</name></name><argument_list pos:line="156" pos:column="74">(<argument><expr><lit:literal type="string" pos:line="156" pos:column="75">"Course details not available"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="157" pos:column="49">btnRegister</name><op:operator pos:line="157" pos:column="60">.</op:operator><name pos:line="157" pos:column="61">setEnabled</name></name><argument_list pos:line="157" pos:column="71">(<argument><expr><lit:literal type="boolean" pos:line="157" pos:column="72">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="158" pos:column="49">btnAddToWait</name><op:operator pos:line="158" pos:column="61">.</op:operator><name pos:line="158" pos:column="62">setEnabled</name></name><argument_list pos:line="158" pos:column="72">(<argument><expr><lit:literal type="boolean" pos:line="158" pos:column="73">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></else></if>

				}</block> <catch pos:line="161" pos:column="35">catch <parameter_list pos:line="161" pos:column="41">(<param><decl><type><name><name pos:line="161" pos:column="42">Department</name><op:operator pos:line="161" pos:column="52">.</op:operator><name pos:line="161" pos:column="53">DepartmentDoesNotExistException</name></name></type> <name pos:line="161" pos:column="85">e</name></decl></param>)</parameter_list> <block pos:line="161" pos:column="88">{
					<comment type="line" pos:line="162" pos:column="41">// TODO Auto-generated catch block</comment>
					<expr_stmt><expr><call><name><name pos:line="163" pos:column="41">e</name><op:operator pos:line="163" pos:column="42">.</op:operator><name pos:line="163" pos:column="43">printStackTrace</name></name><argument_list pos:line="163" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>			
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="167" pos:column="17">selectDepartmentCombo</name><op:operator pos:line="167" pos:column="38">.</op:operator><name pos:line="167" pos:column="39">setBounds</name></name><argument_list pos:line="167" pos:column="48">(<argument><expr><lit:literal type="number" pos:line="167" pos:column="49">10</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="167" pos:column="53">69</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="167" pos:column="57">115</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="167" pos:column="62">20</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="168" pos:column="17">courseRegistration</name><op:operator pos:line="168" pos:column="35">.</op:operator><name pos:line="168" pos:column="36">add</name></name><argument_list pos:line="168" pos:column="39">(<argument><expr><name pos:line="168" pos:column="40">selectDepartmentCombo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="170" pos:column="17">selectCourseCombo</name> <op:operator pos:line="170" pos:column="35">=</op:operator> <op:operator pos:line="170" pos:column="37">new</op:operator> <call><name><name pos:line="170" pos:column="41">JComboBox</name><argument_list pos:line="170" pos:column="50">&lt;<argument><name pos:line="170" pos:column="51">String</name></argument>&gt;</argument_list></name><argument_list pos:line="170" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="171" pos:column="17">selectCourseCombo</name><op:operator pos:line="171" pos:column="34">.</op:operator><name pos:line="171" pos:column="35">addActionListener</name></name><argument_list pos:line="171" pos:column="52">(<argument><expr><op:operator pos:line="171" pos:column="53">new</op:operator> <class><super><name pos:line="171" pos:column="57">ActionListener</name></super><argument_list pos:line="171" pos:column="71">()</argument_list> <block pos:line="171" pos:column="74">{
			<function><type><specifier pos:line="172" pos:column="25">public</specifier> <name pos:line="172" pos:column="32">void</name></type> <name pos:line="172" pos:column="37">actionPerformed</name><parameter_list pos:line="172" pos:column="52">(<param><decl><type><name pos:line="172" pos:column="53">ActionEvent</name></type> <name pos:line="172" pos:column="65">e</name></decl></param>)</parameter_list> <block pos:line="172" pos:column="68">{
				<decl_stmt><decl><type><name><name pos:line="173" pos:column="33">LinkedHashMap</name><argument_list pos:line="173" pos:column="46">&lt;<argument><name pos:line="173" pos:column="47">Integer</name></argument>, <argument><name pos:line="173" pos:column="56">CourseOffered</name></argument>&gt;</argument_list></name></type> <name pos:line="173" pos:column="71">courseOfferings</name> <init pos:line="173" pos:column="87">= <expr><op:operator pos:line="173" pos:column="89">new</op:operator> <call><name><name pos:line="173" pos:column="93">LinkedHashMap</name><argument_list pos:line="173" pos:column="106">&lt;<argument><name pos:line="173" pos:column="107">Integer</name></argument>, <argument><name pos:line="173" pos:column="116">CourseOffered</name></argument>&gt;</argument_list></name><argument_list pos:line="173" pos:column="130">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="174" pos:column="33">String</name></type> <name pos:line="174" pos:column="40">courseName</name> <init pos:line="174" pos:column="51">= <expr><op:operator pos:line="174" pos:column="53">(</op:operator><name pos:line="174" pos:column="54">String</name><op:operator pos:line="174" pos:column="60">)</op:operator><call><name><name pos:line="174" pos:column="61">selectCourseCombo</name><op:operator pos:line="174" pos:column="78">.</op:operator><name pos:line="174" pos:column="79">getSelectedItem</name></name><argument_list pos:line="174" pos:column="94">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="175" pos:column="33">Course</name></type> <name pos:line="175" pos:column="40">course</name></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="176" pos:column="33">btnRegister</name><op:operator pos:line="176" pos:column="44">.</op:operator><name pos:line="176" pos:column="45">setEnabled</name></name><argument_list pos:line="176" pos:column="55">(<argument><expr><lit:literal type="boolean" pos:line="176" pos:column="56">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="177" pos:column="33">btnAddToWait</name><op:operator pos:line="177" pos:column="45">.</op:operator><name pos:line="177" pos:column="46">setEnabled</name></name><argument_list pos:line="177" pos:column="56">(<argument><expr><lit:literal type="boolean" pos:line="177" pos:column="57">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<try pos:line="178" pos:column="33">try <block pos:line="178" pos:column="37">{
					<expr_stmt><expr><name pos:line="179" pos:column="41">course</name> <op:operator pos:line="179" pos:column="48">=</op:operator> <op:operator pos:line="179" pos:column="50">new</op:operator> <call><name pos:line="179" pos:column="54">Course</name><argument_list pos:line="179" pos:column="60">(<argument><expr><name pos:line="179" pos:column="61">courseName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="180" pos:column="41">courseOfferings</name> <op:operator pos:line="180" pos:column="57">=</op:operator> <call><name><name pos:line="180" pos:column="59">course</name><op:operator pos:line="180" pos:column="65">.</op:operator><name pos:line="180" pos:column="66">getCurrentOfferings</name></name><argument_list pos:line="180" pos:column="85">()</argument_list></call></expr>;</expr_stmt>
					
					<decl_stmt><decl><type><name><name pos:line="182" pos:column="41">DefaultComboBoxModel</name><argument_list pos:line="182" pos:column="61">&lt;<argument><name pos:line="182" pos:column="62">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="182" pos:column="71">offerModel</name> <init pos:line="182" pos:column="82">= <expr><op:operator pos:line="182" pos:column="84">new</op:operator> <call><name><name pos:line="182" pos:column="88">DefaultComboBoxModel</name><argument_list pos:line="182" pos:column="108">&lt;<argument><name pos:line="182" pos:column="109">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="182" pos:column="117">()</argument_list></call></expr></init></decl>;</decl_stmt>
					
					<for pos:line="184" pos:column="41">for(<init><decl><type><name pos:line="184" pos:column="45">Integer</name></type> <name pos:line="184" pos:column="53">i</name><range pos:line="184" pos:column="54">:<expr><call><name><name pos:line="184" pos:column="55">courseOfferings</name><op:operator pos:line="184" pos:column="70">.</op:operator><name pos:line="184" pos:column="71">keySet</name></name><argument_list pos:line="184" pos:column="77">()</argument_list></call></expr></range></decl></init>)<block pos:line="184" pos:column="80">{
						<expr_stmt><expr><call><name><name pos:line="185" pos:column="49">offerModel</name><op:operator pos:line="185" pos:column="59">.</op:operator><name pos:line="185" pos:column="60">addElement</name></name><argument_list pos:line="185" pos:column="70">(<argument><expr><name pos:line="185" pos:column="71">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></for>
					
					<expr_stmt><expr><call><name><name pos:line="188" pos:column="41">selectOfferingCombo</name><op:operator pos:line="188" pos:column="60">.</op:operator><name pos:line="188" pos:column="61">setModel</name></name><argument_list pos:line="188" pos:column="69">(<argument><expr><name pos:line="188" pos:column="70">offerModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
					<if pos:line="190" pos:column="41">if<condition pos:line="190" pos:column="43">(<expr><call><name><name pos:line="190" pos:column="44">offerModel</name><op:operator pos:line="190" pos:column="54">.</op:operator><name pos:line="190" pos:column="55">getSize</name></name><argument_list pos:line="190" pos:column="62">()</argument_list></call><op:operator pos:line="190" pos:column="64">&gt;</op:operator><lit:literal type="number" pos:line="190" pos:column="65">0</lit:literal></expr>)</condition><then><block pos:line="190" pos:column="67">{
						<expr_stmt><expr><call><name><name pos:line="191" pos:column="49">selectOfferingCombo</name><op:operator pos:line="191" pos:column="68">.</op:operator><name pos:line="191" pos:column="69">setSelectedIndex</name></name><argument_list pos:line="191" pos:column="85">(<argument><expr><lit:literal type="number" pos:line="191" pos:column="86">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name pos:line="192" pos:column="49">setCourseDetailsTextBoxInRegistrationsTab</name><argument_list pos:line="192" pos:column="90">(<argument><expr><op:operator pos:line="192" pos:column="91">(</op:operator><name pos:line="192" pos:column="92">Integer</name><op:operator pos:line="192" pos:column="99">)</op:operator><call><name><name pos:line="192" pos:column="100">selectOfferingCombo</name><op:operator pos:line="192" pos:column="119">.</op:operator><name pos:line="192" pos:column="120">getSelectedItem</name></name><argument_list pos:line="192" pos:column="135">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<try pos:line="193" pos:column="49">try <block pos:line="193" pos:column="53">{
							<decl_stmt><decl><type><name pos:line="194" pos:column="57">CourseOffered</name></type> <name pos:line="194" pos:column="71">courseOffered</name> <init pos:line="194" pos:column="85">= <expr><call><name><name pos:line="194" pos:column="87">courseOfferings</name><op:operator pos:line="194" pos:column="102">.</op:operator><name pos:line="194" pos:column="103">get</name></name><argument_list pos:line="194" pos:column="106">(<argument><expr><op:operator pos:line="194" pos:column="107">(</op:operator><name pos:line="194" pos:column="108">Integer</name><op:operator pos:line="194" pos:column="115">)</op:operator><call><name><name pos:line="194" pos:column="116">selectOfferingCombo</name><op:operator pos:line="194" pos:column="135">.</op:operator><name pos:line="194" pos:column="136">getSelectedItem</name></name><argument_list pos:line="194" pos:column="151">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="195" pos:column="57">boolean</name></type> <name pos:line="195" pos:column="65">isRegisterable</name> <init pos:line="195" pos:column="80">= <expr><call><name><name pos:line="195" pos:column="82">courseOffered</name><op:operator pos:line="195" pos:column="95">.</op:operator><name pos:line="195" pos:column="96">isCourseRegistrableBy</name></name><argument_list pos:line="195" pos:column="117">(<argument><expr><name pos:line="195" pos:column="118">student</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="196" pos:column="57">boolean</name></type> <name pos:line="196" pos:column="65">isWaitListEligible</name> <init pos:line="196" pos:column="84">= <expr><call><name><name pos:line="196" pos:column="86">WaitList</name><op:operator pos:line="196" pos:column="94">.</op:operator><name pos:line="196" pos:column="95">canBeAddedToWaitList</name></name><argument_list pos:line="196" pos:column="115">(<argument><expr><name pos:line="196" pos:column="116">student</name></expr></argument>, <argument><expr><call><name><name pos:line="196" pos:column="125">courseOffered</name><op:operator pos:line="196" pos:column="138">.</op:operator><name pos:line="196" pos:column="139">getOfferID</name></name><argument_list pos:line="196" pos:column="149">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<if pos:line="197" pos:column="57">if<condition pos:line="197" pos:column="59">(<expr><name pos:line="197" pos:column="60">isRegisterable</name></expr>)</condition><then><block pos:line="197" pos:column="75">{
								<expr_stmt><expr><call><name><name pos:line="198" pos:column="65">btnRegister</name><op:operator pos:line="198" pos:column="76">.</op:operator><name pos:line="198" pos:column="77">setEnabled</name></name><argument_list pos:line="198" pos:column="87">(<argument><expr><lit:literal type="boolean" pos:line="198" pos:column="88">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							}</block></then></if>
							<if pos:line="200" pos:column="57">if<condition pos:line="200" pos:column="59">(<expr><name pos:line="200" pos:column="60">isWaitListEligible</name></expr>)</condition><then><block pos:line="200" pos:column="79">{
								<expr_stmt><expr><call><name><name pos:line="201" pos:column="65">btnAddToWait</name><op:operator pos:line="201" pos:column="77">.</op:operator><name pos:line="201" pos:column="78">setEnabled</name></name><argument_list pos:line="201" pos:column="88">(<argument><expr><lit:literal type="boolean" pos:line="201" pos:column="89">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							}</block></then></if>
							
						}</block> <catch pos:line="204" pos:column="51">catch <parameter_list pos:line="204" pos:column="57">(<param><decl><type><name><name pos:line="204" pos:column="58">Course</name><op:operator pos:line="204" pos:column="64">.</op:operator><name pos:line="204" pos:column="65">CourseDoesNotExistException</name></name></type> <name pos:line="204" pos:column="93">ex</name></decl></param>)</parameter_list> <block pos:line="204" pos:column="97">{
							<comment type="line" pos:line="205" pos:column="57">// TODO Auto-generated catch block</comment>
							<expr_stmt><expr><call><name><name pos:line="206" pos:column="57">ex</name><op:operator pos:line="206" pos:column="59">.</op:operator><name pos:line="206" pos:column="60">printStackTrace</name></name><argument_list pos:line="206" pos:column="75">()</argument_list></call></expr>;</expr_stmt>
						}</block></catch> <catch pos:line="207" pos:column="51">catch <parameter_list pos:line="207" pos:column="57">(<param><decl><type><name><name pos:line="207" pos:column="58">CourseOffered</name><op:operator pos:line="207" pos:column="71">.</op:operator><name pos:line="207" pos:column="72">CourseOfferingDoesNotExistException</name></name></type> <name pos:line="207" pos:column="108">ex</name></decl></param>)</parameter_list> <block pos:line="207" pos:column="112">{
							<comment type="line" pos:line="208" pos:column="57">// TODO Auto-generated catch block</comment>
							<expr_stmt><expr><call><name><name pos:line="209" pos:column="57">ex</name><op:operator pos:line="209" pos:column="59">.</op:operator><name pos:line="209" pos:column="60">printStackTrace</name></name><argument_list pos:line="209" pos:column="75">()</argument_list></call></expr>;</expr_stmt>
						}</block></catch></try>
					}</block></then>
					<else pos:line="212" pos:column="41">else<block pos:line="212" pos:column="45">{
						<expr_stmt><expr><call><name><name pos:line="213" pos:column="49">txtrCourseDetails</name><op:operator pos:line="213" pos:column="66">.</op:operator><name pos:line="213" pos:column="67">setText</name></name><argument_list pos:line="213" pos:column="74">(<argument><expr><lit:literal type="string" pos:line="213" pos:column="75">"Course details not available"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="214" pos:column="49">btnRegister</name><op:operator pos:line="214" pos:column="60">.</op:operator><name pos:line="214" pos:column="61">setEnabled</name></name><argument_list pos:line="214" pos:column="71">(<argument><expr><lit:literal type="boolean" pos:line="214" pos:column="72">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="215" pos:column="49">btnAddToWait</name><op:operator pos:line="215" pos:column="61">.</op:operator><name pos:line="215" pos:column="62">setEnabled</name></name><argument_list pos:line="215" pos:column="72">(<argument><expr><lit:literal type="boolean" pos:line="215" pos:column="73">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></else></if>

					
					
				}</block>
				
				<catch pos:line="222" pos:column="33">catch<parameter_list pos:line="222" pos:column="38">(<param><decl><type><name pos:line="222" pos:column="39">Exception</name></type> <name pos:line="222" pos:column="49">ex</name></decl></param>)</parameter_list><block pos:line="222" pos:column="52">{
					<expr_stmt><expr><call><name><name pos:line="223" pos:column="41">ex</name><op:operator pos:line="223" pos:column="43">.</op:operator><name pos:line="223" pos:column="44">printStackTrace</name></name><argument_list pos:line="223" pos:column="59">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="227" pos:column="17">selectCourseCombo</name><op:operator pos:line="227" pos:column="34">.</op:operator><name pos:line="227" pos:column="35">setBounds</name></name><argument_list pos:line="227" pos:column="44">(<argument><expr><lit:literal type="number" pos:line="227" pos:column="45">190</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="227" pos:column="50">69</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="227" pos:column="54">115</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="227" pos:column="59">20</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="228" pos:column="17">courseRegistration</name><op:operator pos:line="228" pos:column="35">.</op:operator><name pos:line="228" pos:column="36">add</name></name><argument_list pos:line="228" pos:column="39">(<argument><expr><name pos:line="228" pos:column="40">selectCourseCombo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="230" pos:column="17">selectOfferingCombo</name> <op:operator pos:line="230" pos:column="37">=</op:operator> <op:operator pos:line="230" pos:column="39">new</op:operator> <call><name><name pos:line="230" pos:column="43">JComboBox</name><argument_list pos:line="230" pos:column="52">&lt;<argument><name pos:line="230" pos:column="53">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="230" pos:column="61">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="231" pos:column="17">selectOfferingCombo</name><op:operator pos:line="231" pos:column="36">.</op:operator><name pos:line="231" pos:column="37">addActionListener</name></name><argument_list pos:line="231" pos:column="54">(<argument><expr><op:operator pos:line="231" pos:column="55">new</op:operator> <class><super><name pos:line="231" pos:column="59">ActionListener</name></super><argument_list pos:line="231" pos:column="73">()</argument_list> <block pos:line="231" pos:column="76">{
			<function><type><specifier pos:line="232" pos:column="25">public</specifier> <name pos:line="232" pos:column="32">void</name></type> <name pos:line="232" pos:column="37">actionPerformed</name><parameter_list pos:line="232" pos:column="52">(<param><decl><type><name pos:line="232" pos:column="53">ActionEvent</name></type> <name pos:line="232" pos:column="65">e</name></decl></param>)</parameter_list> <block pos:line="232" pos:column="68">{
				<expr_stmt><expr><call><name><name pos:line="233" pos:column="33">btnRegister</name><op:operator pos:line="233" pos:column="44">.</op:operator><name pos:line="233" pos:column="45">setEnabled</name></name><argument_list pos:line="233" pos:column="55">(<argument><expr><lit:literal type="boolean" pos:line="233" pos:column="56">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="234" pos:column="33">btnAddToWait</name><op:operator pos:line="234" pos:column="45">.</op:operator><name pos:line="234" pos:column="46">setEnabled</name></name><argument_list pos:line="234" pos:column="56">(<argument><expr><lit:literal type="boolean" pos:line="234" pos:column="57">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<if pos:line="235" pos:column="33">if<condition pos:line="235" pos:column="35">(<expr><call><name><name pos:line="235" pos:column="36">selectOfferingCombo</name><op:operator pos:line="235" pos:column="55">.</op:operator><name pos:line="235" pos:column="56">getModel</name></name><argument_list pos:line="235" pos:column="64">()</argument_list></call><op:operator pos:line="235" pos:column="66">.</op:operator><call><name pos:line="235" pos:column="67">getSize</name><argument_list pos:line="235" pos:column="74">()</argument_list></call><op:operator pos:line="235" pos:column="76">&gt;</op:operator><lit:literal type="number" pos:line="235" pos:column="77">0</lit:literal></expr>)</condition><then><block pos:line="235" pos:column="79">{
					<expr_stmt><expr><call><name pos:line="236" pos:column="41">setCourseDetailsTextBoxInRegistrationsTab</name><argument_list pos:line="236" pos:column="82">(<argument><expr><op:operator pos:line="236" pos:column="83">(</op:operator><name pos:line="236" pos:column="84">Integer</name><op:operator pos:line="236" pos:column="91">)</op:operator><call><name><name pos:line="236" pos:column="92">selectOfferingCombo</name><op:operator pos:line="236" pos:column="111">.</op:operator><name pos:line="236" pos:column="112">getSelectedItem</name></name><argument_list pos:line="236" pos:column="127">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<try pos:line="237" pos:column="41">try <block pos:line="237" pos:column="45">{
						<decl_stmt><decl><type><name pos:line="238" pos:column="49">CourseOffered</name></type> <name pos:line="238" pos:column="63">courseOffered</name> <init pos:line="238" pos:column="77">= <expr><op:operator pos:line="238" pos:column="79">new</op:operator> <call><name pos:line="238" pos:column="83">CourseOffered</name><argument_list pos:line="238" pos:column="96">(<argument><expr><op:operator pos:line="238" pos:column="97">(</op:operator><name pos:line="238" pos:column="98">Integer</name><op:operator pos:line="238" pos:column="105">)</op:operator><call><name><name pos:line="238" pos:column="106">selectOfferingCombo</name><op:operator pos:line="238" pos:column="125">.</op:operator><name pos:line="238" pos:column="126">getSelectedItem</name></name><argument_list pos:line="238" pos:column="141">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<decl_stmt><decl><type><name pos:line="239" pos:column="49">boolean</name></type> <name pos:line="239" pos:column="57">isRegisterable</name> <init pos:line="239" pos:column="72">= <expr><call><name><name pos:line="239" pos:column="74">courseOffered</name><op:operator pos:line="239" pos:column="87">.</op:operator><name pos:line="239" pos:column="88">isCourseRegistrableBy</name></name><argument_list pos:line="239" pos:column="109">(<argument><expr><name pos:line="239" pos:column="110">student</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<decl_stmt><decl><type><name pos:line="240" pos:column="49">boolean</name></type> <name pos:line="240" pos:column="57">isWaitListEligible</name> <init pos:line="240" pos:column="76">= <expr><call><name><name pos:line="240" pos:column="78">WaitList</name><op:operator pos:line="240" pos:column="86">.</op:operator><name pos:line="240" pos:column="87">canBeAddedToWaitList</name></name><argument_list pos:line="240" pos:column="107">(<argument><expr><name pos:line="240" pos:column="108">student</name></expr></argument>, <argument><expr><call><name><name pos:line="240" pos:column="117">courseOffered</name><op:operator pos:line="240" pos:column="130">.</op:operator><name pos:line="240" pos:column="131">getOfferID</name></name><argument_list pos:line="240" pos:column="141">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<if pos:line="241" pos:column="49">if<condition pos:line="241" pos:column="51">(<expr><name pos:line="241" pos:column="52">isRegisterable</name></expr>)</condition><then><block pos:line="241" pos:column="67">{
							<expr_stmt><expr><call><name><name pos:line="242" pos:column="57">btnRegister</name><op:operator pos:line="242" pos:column="68">.</op:operator><name pos:line="242" pos:column="69">setEnabled</name></name><argument_list pos:line="242" pos:column="79">(<argument><expr><lit:literal type="boolean" pos:line="242" pos:column="80">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></then></if>
						<if pos:line="244" pos:column="49">if<condition pos:line="244" pos:column="51">(<expr><name pos:line="244" pos:column="52">isWaitListEligible</name></expr>)</condition><then><block pos:line="244" pos:column="71">{
							<expr_stmt><expr><call><name><name pos:line="245" pos:column="57">btnAddToWait</name><op:operator pos:line="245" pos:column="69">.</op:operator><name pos:line="245" pos:column="70">setEnabled</name></name><argument_list pos:line="245" pos:column="80">(<argument><expr><lit:literal type="boolean" pos:line="245" pos:column="81">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></then></if>
						
					}</block> <catch pos:line="248" pos:column="43">catch <parameter_list pos:line="248" pos:column="49">(<param><decl><type><name><name pos:line="248" pos:column="50">Course</name><op:operator pos:line="248" pos:column="56">.</op:operator><name pos:line="248" pos:column="57">CourseDoesNotExistException</name></name></type> <name pos:line="248" pos:column="85">ex</name></decl></param>)</parameter_list> <block pos:line="248" pos:column="89">{
						<comment type="line" pos:line="249" pos:column="49">// TODO Auto-generated catch block</comment>
						<expr_stmt><expr><call><name><name pos:line="250" pos:column="49">ex</name><op:operator pos:line="250" pos:column="51">.</op:operator><name pos:line="250" pos:column="52">printStackTrace</name></name><argument_list pos:line="250" pos:column="67">()</argument_list></call></expr>;</expr_stmt>
					}</block></catch> <catch pos:line="251" pos:column="43">catch <parameter_list pos:line="251" pos:column="49">(<param><decl><type><name><name pos:line="251" pos:column="50">CourseOffered</name><op:operator pos:line="251" pos:column="63">.</op:operator><name pos:line="251" pos:column="64">CourseOfferingDoesNotExistException</name></name></type> <name pos:line="251" pos:column="100">ex</name></decl></param>)</parameter_list> <block pos:line="251" pos:column="104">{
						<comment type="line" pos:line="252" pos:column="49">// TODO Auto-generated catch block</comment>
						<expr_stmt><expr><call><name><name pos:line="253" pos:column="49">ex</name><op:operator pos:line="253" pos:column="51">.</op:operator><name pos:line="253" pos:column="52">printStackTrace</name></name><argument_list pos:line="253" pos:column="67">()</argument_list></call></expr>;</expr_stmt>
					}</block></catch></try>
				}</block></then>
				<else pos:line="256" pos:column="33">else<block pos:line="256" pos:column="37">{
					<expr_stmt><expr><call><name><name pos:line="257" pos:column="41">txtrCourseDetails</name><op:operator pos:line="257" pos:column="58">.</op:operator><name pos:line="257" pos:column="59">setText</name></name><argument_list pos:line="257" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="257" pos:column="67">"Course details not available"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="258" pos:column="41">btnRegister</name><op:operator pos:line="258" pos:column="52">.</op:operator><name pos:line="258" pos:column="53">setEnabled</name></name><argument_list pos:line="258" pos:column="63">(<argument><expr><lit:literal type="boolean" pos:line="258" pos:column="64">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="259" pos:column="41">btnAddToWait</name><op:operator pos:line="259" pos:column="53">.</op:operator><name pos:line="259" pos:column="54">setEnabled</name></name><argument_list pos:line="259" pos:column="64">(<argument><expr><lit:literal type="boolean" pos:line="259" pos:column="65">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></else></if>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="263" pos:column="17">selectOfferingCombo</name><op:operator pos:line="263" pos:column="36">.</op:operator><name pos:line="263" pos:column="37">setBounds</name></name><argument_list pos:line="263" pos:column="46">(<argument><expr><lit:literal type="number" pos:line="263" pos:column="47">362</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="263" pos:column="52">69</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="263" pos:column="56">115</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="263" pos:column="61">20</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="264" pos:column="17">courseRegistration</name><op:operator pos:line="264" pos:column="35">.</op:operator><name pos:line="264" pos:column="36">add</name></name><argument_list pos:line="264" pos:column="39">(<argument><expr><name pos:line="264" pos:column="40">selectOfferingCombo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="266" pos:column="17">btnRegister</name> <op:operator pos:line="266" pos:column="29">=</op:operator> <op:operator pos:line="266" pos:column="31">new</op:operator> <call><name pos:line="266" pos:column="35">JButton</name><argument_list pos:line="266" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="266" pos:column="43">"Register"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="267" pos:column="17">btnRegister</name><op:operator pos:line="267" pos:column="28">.</op:operator><name pos:line="267" pos:column="29">addActionListener</name></name><argument_list pos:line="267" pos:column="46">(<argument><expr><op:operator pos:line="267" pos:column="47">new</op:operator> <class><super><name pos:line="267" pos:column="51">ActionListener</name></super><argument_list pos:line="267" pos:column="65">()</argument_list> <block pos:line="267" pos:column="68">{
			<function><type><specifier pos:line="268" pos:column="25">public</specifier> <name pos:line="268" pos:column="32">void</name></type> <name pos:line="268" pos:column="37">actionPerformed</name><parameter_list pos:line="268" pos:column="52">(<param><decl><type><name pos:line="268" pos:column="53">ActionEvent</name></type> <name pos:line="268" pos:column="65">e</name></decl></param>)</parameter_list> <block pos:line="268" pos:column="68">{
				<decl_stmt><decl><type><name pos:line="269" pos:column="33">int</name></type> <name pos:line="269" pos:column="37">offerID</name> <init pos:line="269" pos:column="45">= <expr><op:operator pos:line="269" pos:column="47">(</op:operator><name pos:line="269" pos:column="48">Integer</name><op:operator pos:line="269" pos:column="55">)</op:operator><call><name><name pos:line="269" pos:column="56">selectOfferingCombo</name><op:operator pos:line="269" pos:column="75">.</op:operator><name pos:line="269" pos:column="76">getSelectedItem</name></name><argument_list pos:line="269" pos:column="91">()</argument_list></call></expr></init></decl>;</decl_stmt>
				
				<expr_stmt><expr><call><name><name pos:line="271" pos:column="33">DBAnnotation</name><op:operator pos:line="271" pos:column="45">.</op:operator><name pos:line="271" pos:column="46">annoate</name></name><argument_list pos:line="271" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="271" pos:column="54">"uin"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="271" pos:column="61">"student"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="271" pos:column="72">"UIN"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="271" pos:column="79">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="272" pos:column="33">int</name></type> <name pos:line="272" pos:column="37">uin</name> <init pos:line="272" pos:column="41">= <expr><call><name><name pos:line="272" pos:column="43">student</name><op:operator pos:line="272" pos:column="50">.</op:operator><name pos:line="272" pos:column="51">getUIN</name></name><argument_list pos:line="272" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="273" pos:column="33">StudentEnrollment</name></type> <name pos:line="273" pos:column="51">se</name> <init pos:line="273" pos:column="54">= <expr><op:operator pos:line="273" pos:column="56">new</op:operator> <call><name pos:line="273" pos:column="60">StudentEnrollment</name><argument_list pos:line="273" pos:column="77">(<argument><expr><name pos:line="273" pos:column="78">offerID</name></expr></argument>, <argument><expr><name pos:line="273" pos:column="87">uin</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="274" pos:column="33">boolean</name></type> <name pos:line="274" pos:column="41">flag</name> <init pos:line="274" pos:column="46">= <expr><call><name><name pos:line="274" pos:column="48">se</name><op:operator pos:line="274" pos:column="50">.</op:operator><name pos:line="274" pos:column="51">enrollStudents</name></name><argument_list pos:line="274" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="275" pos:column="33">if<condition pos:line="275" pos:column="35">(<expr><name pos:line="275" pos:column="36">flag</name></expr>)</condition><then><block pos:line="275" pos:column="41">{
					<expr_stmt><expr><call><name pos:line="276" pos:column="41">showMessage</name><argument_list pos:line="276" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="276" pos:column="53">"Successfully registered"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="276" pos:column="80">"Success"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<try pos:line="277" pos:column="41">try <block pos:line="277" pos:column="45">{
						<expr_stmt><expr><call><name><name pos:line="278" pos:column="49">DBAnnotation</name><op:operator pos:line="278" pos:column="61">.</op:operator><name pos:line="278" pos:column="62">annoate</name></name><argument_list pos:line="278" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="278" pos:column="70">"uin2"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="278" pos:column="78">"student"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="278" pos:column="89">"UIN"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="278" pos:column="96">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<decl_stmt><decl><type><name pos:line="279" pos:column="49">int</name></type> <name pos:line="279" pos:column="53">uin2</name> <init pos:line="279" pos:column="58">= <expr><call><name><name pos:line="279" pos:column="60">student</name><op:operator pos:line="279" pos:column="67">.</op:operator><name pos:line="279" pos:column="68">getUIN</name></name><argument_list pos:line="279" pos:column="74">()</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><name><name pos:line="280" pos:column="49">StudentUI</name><op:operator pos:line="280" pos:column="58">.</op:operator><name pos:line="280" pos:column="59">student</name></name> <op:operator pos:line="280" pos:column="67">=</op:operator> <op:operator pos:line="280" pos:column="69">new</op:operator> <call><name pos:line="280" pos:column="73">Student</name><argument_list pos:line="280" pos:column="80">(<argument><expr><name pos:line="280" pos:column="81">uin2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name pos:line="281" pos:column="49">emptyTabs</name><argument_list pos:line="281" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
					}</block> <catch pos:line="282" pos:column="43">catch <parameter_list pos:line="282" pos:column="49">(<param><decl><type><name><name pos:line="282" pos:column="50">People</name><op:operator pos:line="282" pos:column="56">.</op:operator><name pos:line="282" pos:column="57">PersonDoesNotExistException</name></name></type> <name pos:line="282" pos:column="85">e1</name></decl></param>)</parameter_list> <block pos:line="282" pos:column="89">{
						<comment type="line" pos:line="283" pos:column="49">// TODO Auto-generated catch block</comment>
						<expr_stmt><expr><call><name><name pos:line="284" pos:column="49">e1</name><op:operator pos:line="284" pos:column="51">.</op:operator><name pos:line="284" pos:column="52">printStackTrace</name></name><argument_list pos:line="284" pos:column="67">()</argument_list></call></expr>;</expr_stmt>
					}</block></catch></try>
				}</block></then>
				<else pos:line="287" pos:column="33">else
					<expr_stmt><expr><call><name pos:line="288" pos:column="41">showMessage</name><argument_list pos:line="288" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="288" pos:column="53">"Unable to register"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="288" pos:column="75">"Failure"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
				
				<expr_stmt><expr><call><name pos:line="290" pos:column="33">initializeAllComboBoxesInRegistrationTab</name><argument_list pos:line="290" pos:column="73">()</argument_list></call></expr>;</expr_stmt>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="293" pos:column="17">btnRegister</name><op:operator pos:line="293" pos:column="28">.</op:operator><name pos:line="293" pos:column="29">setEnabled</name></name><argument_list pos:line="293" pos:column="39">(<argument><expr><lit:literal type="boolean" pos:line="293" pos:column="40">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="294" pos:column="17">btnRegister</name><op:operator pos:line="294" pos:column="28">.</op:operator><name pos:line="294" pos:column="29">setBounds</name></name><argument_list pos:line="294" pos:column="38">(<argument><expr><lit:literal type="number" pos:line="294" pos:column="39">10</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="294" pos:column="43">363</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="294" pos:column="48">115</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="294" pos:column="53">23</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="295" pos:column="17">courseRegistration</name><op:operator pos:line="295" pos:column="35">.</op:operator><name pos:line="295" pos:column="36">add</name></name><argument_list pos:line="295" pos:column="39">(<argument><expr><name pos:line="295" pos:column="40">btnRegister</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="297" pos:column="17">btnAddToWait</name> <op:operator pos:line="297" pos:column="30">=</op:operator> <op:operator pos:line="297" pos:column="32">new</op:operator> <call><name pos:line="297" pos:column="36">JButton</name><argument_list pos:line="297" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="297" pos:column="44">"Add to wait list"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="298" pos:column="17">btnAddToWait</name><op:operator pos:line="298" pos:column="29">.</op:operator><name pos:line="298" pos:column="30">addActionListener</name></name><argument_list pos:line="298" pos:column="47">(<argument><expr><op:operator pos:line="298" pos:column="48">new</op:operator> <class><super><name pos:line="298" pos:column="52">ActionListener</name></super><argument_list pos:line="298" pos:column="66">()</argument_list> <block pos:line="298" pos:column="69">{
			<function><type><specifier pos:line="299" pos:column="25">public</specifier> <name pos:line="299" pos:column="32">void</name></type> <name pos:line="299" pos:column="37">actionPerformed</name><parameter_list pos:line="299" pos:column="52">(<param><decl><type><name pos:line="299" pos:column="53">ActionEvent</name></type> <name pos:line="299" pos:column="65">e</name></decl></param>)</parameter_list> <block pos:line="299" pos:column="68">{
				<decl_stmt><decl><type><name pos:line="300" pos:column="33">int</name></type> <name pos:line="300" pos:column="37">offerID</name> <init pos:line="300" pos:column="45">= <expr><op:operator pos:line="300" pos:column="47">(</op:operator><name pos:line="300" pos:column="48">Integer</name><op:operator pos:line="300" pos:column="55">)</op:operator><call><name><name pos:line="300" pos:column="56">selectOfferingCombo</name><op:operator pos:line="300" pos:column="75">.</op:operator><name pos:line="300" pos:column="76">getSelectedItem</name></name><argument_list pos:line="300" pos:column="91">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<try pos:line="301" pos:column="33">try <block pos:line="301" pos:column="37">{
					<expr_stmt><expr><call><name><name pos:line="302" pos:column="41">WaitList</name><op:operator pos:line="302" pos:column="49">.</op:operator><name pos:line="302" pos:column="50">addStudentToWaitList</name></name><argument_list pos:line="302" pos:column="70">(<argument><expr><name pos:line="302" pos:column="71">student</name></expr></argument>, <argument><expr><name pos:line="302" pos:column="80">offerID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="303" pos:column="41">showMessage</name><argument_list pos:line="303" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="303" pos:column="53">"Added successfully to wait list"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="303" pos:column="88">"Success"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="304" pos:column="41">DBAnnotation</name><op:operator pos:line="304" pos:column="53">.</op:operator><name pos:line="304" pos:column="54">annoate</name></name><argument_list pos:line="304" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="304" pos:column="62">"uin"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="304" pos:column="69">"student"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="304" pos:column="80">"UIN"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="304" pos:column="87">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="305" pos:column="41">int</name></type> <name pos:line="305" pos:column="45">uin</name> <init pos:line="305" pos:column="49">= <expr><call><name><name pos:line="305" pos:column="51">student</name><op:operator pos:line="305" pos:column="58">.</op:operator><name pos:line="305" pos:column="59">getUIN</name></name><argument_list pos:line="305" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><name><name pos:line="306" pos:column="41">StudentUI</name><op:operator pos:line="306" pos:column="50">.</op:operator><name pos:line="306" pos:column="51">student</name></name> <op:operator pos:line="306" pos:column="59">=</op:operator> <op:operator pos:line="306" pos:column="61">new</op:operator> <call><name pos:line="306" pos:column="65">Student</name><argument_list pos:line="306" pos:column="72">(<argument><expr><name pos:line="306" pos:column="73">uin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="307" pos:column="41">initializeAllComboBoxesInRegistrationTab</name><argument_list pos:line="307" pos:column="81">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="308" pos:column="41">emptyTabs</name><argument_list pos:line="308" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
				}</block> <catch pos:line="309" pos:column="35">catch <parameter_list pos:line="309" pos:column="41">(<param><decl><type><name><name pos:line="309" pos:column="42">Course</name><op:operator pos:line="309" pos:column="48">.</op:operator><name pos:line="309" pos:column="49">CourseDoesNotExistException</name></name></type> <name pos:line="309" pos:column="77">e1</name></decl></param>)</parameter_list> <block pos:line="309" pos:column="81">{
					<expr_stmt><expr><call><name pos:line="310" pos:column="41">showMessage</name><argument_list pos:line="310" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="310" pos:column="53">"Failed to add to wait list"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="310" pos:column="83">"Failure"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="311" pos:column="41">e1</name><op:operator pos:line="311" pos:column="43">.</op:operator><name pos:line="311" pos:column="44">printStackTrace</name></name><argument_list pos:line="311" pos:column="59">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch> <catch pos:line="312" pos:column="35">catch <parameter_list pos:line="312" pos:column="41">(<param><decl><type><name><name pos:line="312" pos:column="42">CourseOffered</name><op:operator pos:line="312" pos:column="55">.</op:operator><name pos:line="312" pos:column="56">CourseOfferingDoesNotExistException</name></name></type> <name pos:line="312" pos:column="92">e1</name></decl></param>)</parameter_list> <block pos:line="312" pos:column="96">{
					<expr_stmt><expr><call><name pos:line="313" pos:column="41">showMessage</name><argument_list pos:line="313" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="313" pos:column="53">"Failed to add to wait list"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="313" pos:column="83">"Failure"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="314" pos:column="41">e1</name><op:operator pos:line="314" pos:column="43">.</op:operator><name pos:line="314" pos:column="44">printStackTrace</name></name><argument_list pos:line="314" pos:column="59">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch> <catch pos:line="315" pos:column="35">catch <parameter_list pos:line="315" pos:column="41">(<param><decl><type><name><name pos:line="315" pos:column="42">People</name><op:operator pos:line="315" pos:column="48">.</op:operator><name pos:line="315" pos:column="49">PersonDoesNotExistException</name></name></type> <name pos:line="315" pos:column="77">e1</name></decl></param>)</parameter_list> <block pos:line="315" pos:column="81">{
					<comment type="line" pos:line="316" pos:column="41">// TODO Auto-generated catch block</comment>
					<expr_stmt><expr><call><name><name pos:line="317" pos:column="41">e1</name><op:operator pos:line="317" pos:column="43">.</op:operator><name pos:line="317" pos:column="44">printStackTrace</name></name><argument_list pos:line="317" pos:column="59">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="321" pos:column="17">btnAddToWait</name><op:operator pos:line="321" pos:column="29">.</op:operator><name pos:line="321" pos:column="30">setEnabled</name></name><argument_list pos:line="321" pos:column="40">(<argument><expr><lit:literal type="boolean" pos:line="321" pos:column="41">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="322" pos:column="17">btnAddToWait</name><op:operator pos:line="322" pos:column="29">.</op:operator><name pos:line="322" pos:column="30">setBounds</name></name><argument_list pos:line="322" pos:column="39">(<argument><expr><lit:literal type="number" pos:line="322" pos:column="40">190</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="322" pos:column="45">363</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="322" pos:column="50">115</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="322" pos:column="55">23</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="323" pos:column="17">courseRegistration</name><op:operator pos:line="323" pos:column="35">.</op:operator><name pos:line="323" pos:column="36">add</name></name><argument_list pos:line="323" pos:column="39">(<argument><expr><name pos:line="323" pos:column="40">btnAddToWait</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="325" pos:column="17">JLabel</name></type> <name pos:line="325" pos:column="24">lblSelectDepartment</name> <init pos:line="325" pos:column="44">= <expr><op:operator pos:line="325" pos:column="46">new</op:operator> <call><name pos:line="325" pos:column="50">JLabel</name><argument_list pos:line="325" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="325" pos:column="57">"Select Department"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="326" pos:column="17">lblSelectDepartment</name><op:operator pos:line="326" pos:column="36">.</op:operator><name pos:line="326" pos:column="37">setBounds</name></name><argument_list pos:line="326" pos:column="46">(<argument><expr><lit:literal type="number" pos:line="326" pos:column="47">10</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="326" pos:column="51">44</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="326" pos:column="55">115</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="326" pos:column="60">14</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="327" pos:column="17">courseRegistration</name><op:operator pos:line="327" pos:column="35">.</op:operator><name pos:line="327" pos:column="36">add</name></name><argument_list pos:line="327" pos:column="39">(<argument><expr><name pos:line="327" pos:column="40">lblSelectDepartment</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="329" pos:column="17">JLabel</name></type> <name pos:line="329" pos:column="24">lblSelectCourse</name> <init pos:line="329" pos:column="40">= <expr><op:operator pos:line="329" pos:column="42">new</op:operator> <call><name pos:line="329" pos:column="46">JLabel</name><argument_list pos:line="329" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="329" pos:column="53">"Select Course"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="330" pos:column="17">lblSelectCourse</name><op:operator pos:line="330" pos:column="32">.</op:operator><name pos:line="330" pos:column="33">setBounds</name></name><argument_list pos:line="330" pos:column="42">(<argument><expr><lit:literal type="number" pos:line="330" pos:column="43">190</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="330" pos:column="48">44</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="330" pos:column="52">115</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="330" pos:column="57">14</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="331" pos:column="17">courseRegistration</name><op:operator pos:line="331" pos:column="35">.</op:operator><name pos:line="331" pos:column="36">add</name></name><argument_list pos:line="331" pos:column="39">(<argument><expr><name pos:line="331" pos:column="40">lblSelectCourse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="333" pos:column="17">txtrCourseDetails</name> <op:operator pos:line="333" pos:column="35">=</op:operator> <op:operator pos:line="333" pos:column="37">new</op:operator> <call><name pos:line="333" pos:column="41">JTextArea</name><argument_list pos:line="333" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="334" pos:column="17">txtrCourseDetails</name><op:operator pos:line="334" pos:column="34">.</op:operator><name pos:line="334" pos:column="35">setFont</name></name><argument_list pos:line="334" pos:column="42">(<argument><expr><op:operator pos:line="334" pos:column="43">new</op:operator> <call><name pos:line="334" pos:column="47">Font</name><argument_list pos:line="334" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="334" pos:column="52">"Times New Roman"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="334" pos:column="71">Font</name><op:operator pos:line="334" pos:column="75">.</op:operator><name pos:line="334" pos:column="76">BOLD</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="334" pos:column="82">14</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="335" pos:column="17">txtrCourseDetails</name><op:operator pos:line="335" pos:column="34">.</op:operator><name pos:line="335" pos:column="35">setLineWrap</name></name><argument_list pos:line="335" pos:column="46">(<argument><expr><lit:literal type="boolean" pos:line="335" pos:column="47">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="336" pos:column="17">txtrCourseDetails</name><op:operator pos:line="336" pos:column="34">.</op:operator><name pos:line="336" pos:column="35">setForeground</name></name><argument_list pos:line="336" pos:column="48">(<argument><expr><name><name pos:line="336" pos:column="49">Color</name><op:operator pos:line="336" pos:column="54">.</op:operator><name pos:line="336" pos:column="55">WHITE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="337" pos:column="17">txtrCourseDetails</name><op:operator pos:line="337" pos:column="34">.</op:operator><name pos:line="337" pos:column="35">setBackground</name></name><argument_list pos:line="337" pos:column="48">(<argument><expr><name><name pos:line="337" pos:column="49">Color</name><op:operator pos:line="337" pos:column="54">.</op:operator><name pos:line="337" pos:column="55">BLACK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="338" pos:column="17">txtrCourseDetails</name><op:operator pos:line="338" pos:column="34">.</op:operator><name pos:line="338" pos:column="35">setEditable</name></name><argument_list pos:line="338" pos:column="46">(<argument><expr><lit:literal type="boolean" pos:line="338" pos:column="47">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="339" pos:column="17">txtrCourseDetails</name><op:operator pos:line="339" pos:column="34">.</op:operator><name pos:line="339" pos:column="35">setText</name></name><argument_list pos:line="339" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="339" pos:column="43">"Course Offering Details"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="340" pos:column="17">txtrCourseDetails</name><op:operator pos:line="340" pos:column="34">.</op:operator><name pos:line="340" pos:column="35">setBounds</name></name><argument_list pos:line="340" pos:column="44">(<argument><expr><lit:literal type="number" pos:line="340" pos:column="45">10</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="340" pos:column="49">119</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="340" pos:column="54">467</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="340" pos:column="59">189</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="341" pos:column="17">courseRegistration</name><op:operator pos:line="341" pos:column="35">.</op:operator><name pos:line="341" pos:column="36">add</name></name><argument_list pos:line="341" pos:column="39">(<argument><expr><name pos:line="341" pos:column="40">txtrCourseDetails</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="343" pos:column="17">JLabel</name></type> <name pos:line="343" pos:column="24">lblSelectOffering</name> <init pos:line="343" pos:column="42">= <expr><op:operator pos:line="343" pos:column="44">new</op:operator> <call><name pos:line="343" pos:column="48">JLabel</name><argument_list pos:line="343" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="343" pos:column="55">"Select Offering"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="344" pos:column="17">lblSelectOffering</name><op:operator pos:line="344" pos:column="34">.</op:operator><name pos:line="344" pos:column="35">setBounds</name></name><argument_list pos:line="344" pos:column="44">(<argument><expr><lit:literal type="number" pos:line="344" pos:column="45">362</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="344" pos:column="50">44</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="344" pos:column="54">115</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="344" pos:column="59">14</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="345" pos:column="17">courseRegistration</name><op:operator pos:line="345" pos:column="35">.</op:operator><name pos:line="345" pos:column="36">add</name></name><argument_list pos:line="345" pos:column="39">(<argument><expr><name pos:line="345" pos:column="40">lblSelectOffering</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="347" pos:column="17">currentCoursesTab</name> <op:operator pos:line="347" pos:column="35">=</op:operator> <op:operator pos:line="347" pos:column="37">new</op:operator> <call><name pos:line="347" pos:column="41">JTabbedPane</name><argument_list pos:line="347" pos:column="52">(<argument><expr><name><name pos:line="347" pos:column="53">JTabbedPane</name><op:operator pos:line="347" pos:column="64">.</op:operator><name pos:line="347" pos:column="65">TOP</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="348" pos:column="17">tabbedPane</name><op:operator pos:line="348" pos:column="27">.</op:operator><name pos:line="348" pos:column="28">addTab</name></name><argument_list pos:line="348" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="348" pos:column="35">"My Current Courses"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="348" pos:column="57">null</lit:literal></expr></argument>, <argument><expr><name pos:line="348" pos:column="63">currentCoursesTab</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="348" pos:column="82">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="350" pos:column="17">previousCourses</name> <op:operator pos:line="350" pos:column="33">=</op:operator> <op:operator pos:line="350" pos:column="35">new</op:operator> <call><name pos:line="350" pos:column="39">JTabbedPane</name><argument_list pos:line="350" pos:column="50">(<argument><expr><name><name pos:line="350" pos:column="51">JTabbedPane</name><op:operator pos:line="350" pos:column="62">.</op:operator><name pos:line="350" pos:column="63">TOP</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="351" pos:column="17">tabbedPane</name><op:operator pos:line="351" pos:column="27">.</op:operator><name pos:line="351" pos:column="28">addTab</name></name><argument_list pos:line="351" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="351" pos:column="35">"Previous courses"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="351" pos:column="55">null</lit:literal></expr></argument>, <argument><expr><name pos:line="351" pos:column="61">previousCourses</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="351" pos:column="78">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="353" pos:column="17">waitListTab</name> <op:operator pos:line="353" pos:column="29">=</op:operator> <op:operator pos:line="353" pos:column="31">new</op:operator> <call><name pos:line="353" pos:column="35">JTabbedPane</name><argument_list pos:line="353" pos:column="46">(<argument><expr><name><name pos:line="353" pos:column="47">JTabbedPane</name><op:operator pos:line="353" pos:column="58">.</op:operator><name pos:line="353" pos:column="59">TOP</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="354" pos:column="17">tabbedPane</name><op:operator pos:line="354" pos:column="27">.</op:operator><name pos:line="354" pos:column="28">addTab</name></name><argument_list pos:line="354" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="354" pos:column="35">"Wait List Courses"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="354" pos:column="56">null</lit:literal></expr></argument>, <argument><expr><name pos:line="354" pos:column="62">waitListTab</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="354" pos:column="75">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		
		<comment type="line" pos:line="357" pos:column="17">//initialization calls</comment>
		<expr_stmt><expr><call><name pos:line="358" pos:column="17">initializeAllComboBoxesInRegistrationTab</name><argument_list pos:line="358" pos:column="57">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="359" pos:column="17">initializeCurrentCourses</name><argument_list pos:line="359" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="361" pos:column="17">Thread</name></type> <name pos:line="361" pos:column="24">waitListMonitor</name> <init pos:line="361" pos:column="40">= <expr><op:operator pos:line="361" pos:column="42">new</op:operator> <call><name pos:line="361" pos:column="46">Thread</name><argument_list pos:line="361" pos:column="52">(<argument><expr><op:operator pos:line="361" pos:column="53">new</op:operator> <class><super><name pos:line="361" pos:column="57">Runnable</name></super><argument_list pos:line="361" pos:column="65">()</argument_list> <block pos:line="361" pos:column="68">{
			
			<function><type><annotation pos:line="363" pos:column="25">@<name pos:line="363" pos:column="26">Override</name></annotation>
			<specifier pos:line="364" pos:column="25">public</specifier> <name pos:line="364" pos:column="32">void</name></type> <name pos:line="364" pos:column="37">run</name><parameter_list pos:line="364" pos:column="40">()</parameter_list> <block pos:line="364" pos:column="43">{
				<while pos:line="365" pos:column="33">while<condition pos:line="365" pos:column="38">(<expr><lit:literal type="boolean" pos:line="365" pos:column="39">true</lit:literal></expr>)</condition><block pos:line="365" pos:column="44">{
					<decl_stmt><decl><type><name pos:line="366" pos:column="41">int</name></type> <name pos:line="366" pos:column="45">size</name> <init pos:line="366" pos:column="50">= <expr><call><name><name pos:line="366" pos:column="52">waitListTab</name><op:operator pos:line="366" pos:column="63">.</op:operator><name pos:line="366" pos:column="64">getTabCount</name></name><argument_list pos:line="366" pos:column="75">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name><name pos:line="367" pos:column="41">ArrayList</name><argument_list pos:line="367" pos:column="50">&lt;<argument><name pos:line="367" pos:column="51">CourseOffered</name></argument>&gt;</argument_list></name></type> <name pos:line="367" pos:column="66">studentCourses</name><init pos:line="367" pos:column="80">= <expr><call><name><name pos:line="367" pos:column="82">WaitList</name><op:operator pos:line="367" pos:column="90">.</op:operator><name pos:line="367" pos:column="91">getWaitListCoursesOfStudent</name></name><argument_list pos:line="367" pos:column="118">(<argument><expr><name pos:line="367" pos:column="119">student</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if pos:line="368" pos:column="41">if<condition pos:line="368" pos:column="43">(<expr><name pos:line="368" pos:column="44">size</name><op:operator pos:line="368" pos:column="48">!=</op:operator><call><name><name pos:line="368" pos:column="50">studentCourses</name><op:operator pos:line="368" pos:column="64">.</op:operator><name pos:line="368" pos:column="65">size</name></name><argument_list pos:line="368" pos:column="69">()</argument_list></call></expr>)</condition><then><block pos:line="368" pos:column="72">{
						<expr_stmt><expr><call><name pos:line="369" pos:column="49">emptyTabs</name><argument_list pos:line="369" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
					<try pos:line="371" pos:column="41">try <block pos:line="371" pos:column="45">{
						<expr_stmt><expr><call><name><name pos:line="372" pos:column="49">Thread</name><op:operator pos:line="372" pos:column="55">.</op:operator><name pos:line="372" pos:column="56">sleep</name></name><argument_list pos:line="372" pos:column="61">(<argument><expr><lit:literal type="number" pos:line="372" pos:column="62">10000</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block> <catch pos:line="373" pos:column="43">catch <parameter_list pos:line="373" pos:column="49">(<param><decl><type><name pos:line="373" pos:column="50">InterruptedException</name></type> <name pos:line="373" pos:column="71">e</name></decl></param>)</parameter_list> <block pos:line="373" pos:column="74">{
						<comment type="line" pos:line="374" pos:column="49">// TODO Auto-generated catch block</comment>
						<expr_stmt><expr><call><name><name pos:line="375" pos:column="49">e</name><op:operator pos:line="375" pos:column="50">.</op:operator><name pos:line="375" pos:column="51">printStackTrace</name></name><argument_list pos:line="375" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
					}</block></catch></try>
				}</block></while>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<expr_stmt><expr><call><name><name pos:line="381" pos:column="17">waitListMonitor</name><op:operator pos:line="381" pos:column="32">.</op:operator><name pos:line="381" pos:column="33">start</name></name><argument_list pos:line="381" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
	}</block></constructor>
	
	<function><type><specifier pos:line="384" pos:column="9">private</specifier> <name pos:line="384" pos:column="17">void</name></type> <name pos:line="384" pos:column="22">initializeAllComboBoxesInRegistrationTab</name><parameter_list pos:line="384" pos:column="62">()</parameter_list><block pos:line="384" pos:column="64">{
		<decl_stmt><decl><type><name><name pos:line="385" pos:column="17">ArrayList</name><argument_list pos:line="385" pos:column="26">&lt;<argument><name pos:line="385" pos:column="27">Department</name></argument>&gt;</argument_list></name></type> <name pos:line="385" pos:column="39">departments</name> <init pos:line="385" pos:column="51">= <expr><call><name><name pos:line="385" pos:column="53">Department</name><op:operator pos:line="385" pos:column="63">.</op:operator><name pos:line="385" pos:column="64">getAllDepartments</name></name><argument_list pos:line="385" pos:column="81">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="386" pos:column="17">ArrayList</name><argument_list pos:line="386" pos:column="26">&lt;<argument><name pos:line="386" pos:column="27">Course</name></argument>&gt;</argument_list></name></type> <name pos:line="386" pos:column="35">departmentCourses</name> <init pos:line="386" pos:column="53">= <expr><op:operator pos:line="386" pos:column="55">new</op:operator> <call><name><name pos:line="386" pos:column="59">ArrayList</name><argument_list pos:line="386" pos:column="68">&lt;<argument><name pos:line="386" pos:column="69">Course</name></argument>&gt;</argument_list></name><argument_list pos:line="386" pos:column="76">()</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<decl_stmt><decl><type><name><name pos:line="388" pos:column="17">LinkedHashMap</name><argument_list pos:line="388" pos:column="30">&lt;<argument><name pos:line="388" pos:column="31">Integer</name></argument>, <argument><name pos:line="388" pos:column="40">CourseOffered</name></argument>&gt;</argument_list></name></type> <name pos:line="388" pos:column="55">courseOfferings</name> <init pos:line="388" pos:column="71">= <expr><op:operator pos:line="388" pos:column="73">new</op:operator> <call><name><name pos:line="388" pos:column="77">LinkedHashMap</name><argument_list pos:line="388" pos:column="90">&lt;<argument><name pos:line="388" pos:column="91">Integer</name></argument>, <argument><name pos:line="388" pos:column="100">CourseOffered</name></argument>&gt;</argument_list></name><argument_list pos:line="388" pos:column="114">()</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<if pos:line="390" pos:column="17">if<condition pos:line="390" pos:column="19">(<expr><call><name><name pos:line="390" pos:column="20">departments</name><op:operator pos:line="390" pos:column="31">.</op:operator><name pos:line="390" pos:column="32">size</name></name><argument_list pos:line="390" pos:column="36">()</argument_list></call><op:operator pos:line="390" pos:column="38">&gt;</op:operator><lit:literal type="number" pos:line="390" pos:column="39">0</lit:literal></expr>)</condition><then><block pos:line="390" pos:column="41">{
			<expr_stmt><expr><name pos:line="391" pos:column="25">departmentCourses</name> <op:operator pos:line="391" pos:column="43">=</op:operator> <call><name><name pos:line="391" pos:column="45">departments</name><op:operator pos:line="391" pos:column="56">.</op:operator><name pos:line="391" pos:column="57">get</name></name><argument_list pos:line="391" pos:column="60">(<argument><expr><lit:literal type="number" pos:line="391" pos:column="61">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="391" pos:column="63">.</op:operator><call><name pos:line="391" pos:column="64">getDepartmentCourses</name><argument_list pos:line="391" pos:column="84">()</argument_list></call></expr>;</expr_stmt>
			
			<if pos:line="393" pos:column="25">if<condition pos:line="393" pos:column="27">(<expr><call><name><name pos:line="393" pos:column="28">departmentCourses</name><op:operator pos:line="393" pos:column="45">.</op:operator><name pos:line="393" pos:column="46">size</name></name><argument_list pos:line="393" pos:column="50">()</argument_list></call><op:operator pos:line="393" pos:column="52">&gt;</op:operator><lit:literal type="number" pos:line="393" pos:column="53">0</lit:literal></expr>)</condition><then><block pos:line="393" pos:column="55">{
				<expr_stmt><expr><name pos:line="394" pos:column="33">courseOfferings</name> <op:operator pos:line="394" pos:column="49">=</op:operator> <call><name><name pos:line="394" pos:column="51">departmentCourses</name><op:operator pos:line="394" pos:column="68">.</op:operator><name pos:line="394" pos:column="69">get</name></name><argument_list pos:line="394" pos:column="72">(<argument><expr><lit:literal type="number" pos:line="394" pos:column="73">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="394" pos:column="75">.</op:operator><call><name pos:line="394" pos:column="76">getCurrentOfferings</name><argument_list pos:line="394" pos:column="95">()</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then></if>
		
		<decl_stmt><decl><type><name><name pos:line="398" pos:column="17">DefaultComboBoxModel</name><argument_list pos:line="398" pos:column="37">&lt;<argument><name pos:line="398" pos:column="38">String</name></argument>&gt;</argument_list></name></type> <name pos:line="398" pos:column="46">deptModel</name> <init pos:line="398" pos:column="56">= <expr><op:operator pos:line="398" pos:column="58">new</op:operator> <call><name><name pos:line="398" pos:column="62">DefaultComboBoxModel</name><argument_list pos:line="398" pos:column="82">&lt;<argument><name pos:line="398" pos:column="83">String</name></argument>&gt;</argument_list></name><argument_list pos:line="398" pos:column="90">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="399" pos:column="17">DefaultComboBoxModel</name><argument_list pos:line="399" pos:column="37">&lt;<argument><name pos:line="399" pos:column="38">String</name></argument>&gt;</argument_list></name></type> <name pos:line="399" pos:column="46">coursesModel</name> <init pos:line="399" pos:column="59">= <expr><op:operator pos:line="399" pos:column="61">new</op:operator> <call><name><name pos:line="399" pos:column="65">DefaultComboBoxModel</name><argument_list pos:line="399" pos:column="85">&lt;<argument><name pos:line="399" pos:column="86">String</name></argument>&gt;</argument_list></name><argument_list pos:line="399" pos:column="93">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="400" pos:column="17">DefaultComboBoxModel</name><argument_list pos:line="400" pos:column="37">&lt;<argument><name pos:line="400" pos:column="38">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="400" pos:column="47">offerModel</name> <init pos:line="400" pos:column="58">= <expr><op:operator pos:line="400" pos:column="60">new</op:operator> <call><name><name pos:line="400" pos:column="64">DefaultComboBoxModel</name><argument_list pos:line="400" pos:column="84">&lt;<argument><name pos:line="400" pos:column="85">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="400" pos:column="93">()</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<for pos:line="402" pos:column="17">for(<init><decl><type><name pos:line="402" pos:column="21">Department</name></type> <name pos:line="402" pos:column="32">d</name><range pos:line="402" pos:column="33">:<expr><name pos:line="402" pos:column="34">departments</name></expr></range></decl></init>)<block pos:line="402" pos:column="46">{
			<expr_stmt><expr><call><name><name pos:line="403" pos:column="25">deptModel</name><op:operator pos:line="403" pos:column="34">.</op:operator><name pos:line="403" pos:column="35">addElement</name></name><argument_list pos:line="403" pos:column="45">(<argument><expr><call><name><name pos:line="403" pos:column="46">d</name><op:operator pos:line="403" pos:column="47">.</op:operator><name pos:line="403" pos:column="48">getDepartmentName</name></name><argument_list pos:line="403" pos:column="65">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		
		<for pos:line="406" pos:column="17">for(<init><decl><type><name pos:line="406" pos:column="21">Course</name></type> <name pos:line="406" pos:column="28">c</name><range pos:line="406" pos:column="29">:<expr><name pos:line="406" pos:column="30">departmentCourses</name></expr></range></decl></init>)<block pos:line="406" pos:column="48">{
			<expr_stmt><expr><call><name><name pos:line="407" pos:column="25">coursesModel</name><op:operator pos:line="407" pos:column="37">.</op:operator><name pos:line="407" pos:column="38">addElement</name></name><argument_list pos:line="407" pos:column="48">(<argument><expr><call><name><name pos:line="407" pos:column="49">c</name><op:operator pos:line="407" pos:column="50">.</op:operator><name pos:line="407" pos:column="51">getCourseName</name></name><argument_list pos:line="407" pos:column="64">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		
		<for pos:line="410" pos:column="17">for(<init><decl><type><name pos:line="410" pos:column="21">Integer</name></type> <name pos:line="410" pos:column="29">i</name><range pos:line="410" pos:column="30">:<expr><call><name><name pos:line="410" pos:column="31">courseOfferings</name><op:operator pos:line="410" pos:column="46">.</op:operator><name pos:line="410" pos:column="47">keySet</name></name><argument_list pos:line="410" pos:column="53">()</argument_list></call></expr></range></decl></init>)<block pos:line="410" pos:column="56">{
			<expr_stmt><expr><call><name><name pos:line="411" pos:column="25">offerModel</name><op:operator pos:line="411" pos:column="35">.</op:operator><name pos:line="411" pos:column="36">addElement</name></name><argument_list pos:line="411" pos:column="46">(<argument><expr><name pos:line="411" pos:column="47">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		
		<expr_stmt><expr><call><name><name pos:line="414" pos:column="17">selectDepartmentCombo</name><op:operator pos:line="414" pos:column="38">.</op:operator><name pos:line="414" pos:column="39">setModel</name></name><argument_list pos:line="414" pos:column="47">(<argument><expr><name pos:line="414" pos:column="48">deptModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="415" pos:column="17">selectCourseCombo</name><op:operator pos:line="415" pos:column="34">.</op:operator><name pos:line="415" pos:column="35">setModel</name></name><argument_list pos:line="415" pos:column="43">(<argument><expr><name pos:line="415" pos:column="44">coursesModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="416" pos:column="17">selectOfferingCombo</name><op:operator pos:line="416" pos:column="36">.</op:operator><name pos:line="416" pos:column="37">setModel</name></name><argument_list pos:line="416" pos:column="45">(<argument><expr><name pos:line="416" pos:column="46">offerModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="417" pos:column="17">btnRegister</name><op:operator pos:line="417" pos:column="28">.</op:operator><name pos:line="417" pos:column="29">setEnabled</name></name><argument_list pos:line="417" pos:column="39">(<argument><expr><lit:literal type="boolean" pos:line="417" pos:column="40">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="418" pos:column="17">btnAddToWait</name><op:operator pos:line="418" pos:column="29">.</op:operator><name pos:line="418" pos:column="30">setEnabled</name></name><argument_list pos:line="418" pos:column="40">(<argument><expr><lit:literal type="boolean" pos:line="418" pos:column="41">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="419" pos:column="17">if<condition pos:line="419" pos:column="19">(<expr><call><name><name pos:line="419" pos:column="20">offerModel</name><op:operator pos:line="419" pos:column="30">.</op:operator><name pos:line="419" pos:column="31">getSize</name></name><argument_list pos:line="419" pos:column="38">()</argument_list></call><op:operator pos:line="419" pos:column="40">&gt;</op:operator><lit:literal type="number" pos:line="419" pos:column="41">0</lit:literal></expr>)</condition><then><block pos:line="419" pos:column="43">{
			<expr_stmt><expr><call><name><name pos:line="420" pos:column="25">selectOfferingCombo</name><op:operator pos:line="420" pos:column="44">.</op:operator><name pos:line="420" pos:column="45">setSelectedIndex</name></name><argument_list pos:line="420" pos:column="61">(<argument><expr><lit:literal type="number" pos:line="420" pos:column="62">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="421" pos:column="25">setCourseDetailsTextBoxInRegistrationsTab</name><argument_list pos:line="421" pos:column="66">(<argument><expr><op:operator pos:line="421" pos:column="67">(</op:operator><name pos:line="421" pos:column="68">Integer</name><op:operator pos:line="421" pos:column="75">)</op:operator><call><name><name pos:line="421" pos:column="76">selectOfferingCombo</name><op:operator pos:line="421" pos:column="95">.</op:operator><name pos:line="421" pos:column="96">getSelectedItem</name></name><argument_list pos:line="421" pos:column="111">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<try pos:line="422" pos:column="25">try <block pos:line="422" pos:column="29">{
				<decl_stmt><decl><type><name pos:line="423" pos:column="33">CourseOffered</name></type> <name pos:line="423" pos:column="47">courseOffered</name> <init pos:line="423" pos:column="61">= <expr><call><name><name pos:line="423" pos:column="63">courseOfferings</name><op:operator pos:line="423" pos:column="78">.</op:operator><name pos:line="423" pos:column="79">get</name></name><argument_list pos:line="423" pos:column="82">(<argument><expr><op:operator pos:line="423" pos:column="83">(</op:operator><name pos:line="423" pos:column="84">Integer</name><op:operator pos:line="423" pos:column="91">)</op:operator><call><name><name pos:line="423" pos:column="92">selectOfferingCombo</name><op:operator pos:line="423" pos:column="111">.</op:operator><name pos:line="423" pos:column="112">getSelectedItem</name></name><argument_list pos:line="423" pos:column="127">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="424" pos:column="33">boolean</name></type> <name pos:line="424" pos:column="41">isRegisterable</name> <init pos:line="424" pos:column="56">= <expr><call><name><name pos:line="424" pos:column="58">courseOffered</name><op:operator pos:line="424" pos:column="71">.</op:operator><name pos:line="424" pos:column="72">isCourseRegistrableBy</name></name><argument_list pos:line="424" pos:column="93">(<argument><expr><name pos:line="424" pos:column="94">student</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="425" pos:column="33">boolean</name></type> <name pos:line="425" pos:column="41">isWaitListEligible</name> <init pos:line="425" pos:column="60">= <expr><call><name><name pos:line="425" pos:column="62">WaitList</name><op:operator pos:line="425" pos:column="70">.</op:operator><name pos:line="425" pos:column="71">canBeAddedToWaitList</name></name><argument_list pos:line="425" pos:column="91">(<argument><expr><name pos:line="425" pos:column="92">student</name></expr></argument>, <argument><expr><call><name><name pos:line="425" pos:column="101">courseOffered</name><op:operator pos:line="425" pos:column="114">.</op:operator><name pos:line="425" pos:column="115">getOfferID</name></name><argument_list pos:line="425" pos:column="125">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="426" pos:column="33">if<condition pos:line="426" pos:column="35">(<expr><name pos:line="426" pos:column="36">isRegisterable</name></expr>)</condition><then><block pos:line="426" pos:column="51">{
					<expr_stmt><expr><call><name><name pos:line="427" pos:column="41">btnRegister</name><op:operator pos:line="427" pos:column="52">.</op:operator><name pos:line="427" pos:column="53">setEnabled</name></name><argument_list pos:line="427" pos:column="63">(<argument><expr><lit:literal type="boolean" pos:line="427" pos:column="64">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				<if pos:line="429" pos:column="33">if<condition pos:line="429" pos:column="35">(<expr><name pos:line="429" pos:column="36">isWaitListEligible</name></expr>)</condition><then><block pos:line="429" pos:column="55">{
					<expr_stmt><expr><call><name><name pos:line="430" pos:column="41">btnAddToWait</name><op:operator pos:line="430" pos:column="53">.</op:operator><name pos:line="430" pos:column="54">setEnabled</name></name><argument_list pos:line="430" pos:column="64">(<argument><expr><lit:literal type="boolean" pos:line="430" pos:column="65">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				
			}</block> <catch pos:line="433" pos:column="27">catch <parameter_list pos:line="433" pos:column="33">(<param><decl><type><name><name pos:line="433" pos:column="34">Course</name><op:operator pos:line="433" pos:column="40">.</op:operator><name pos:line="433" pos:column="41">CourseDoesNotExistException</name></name></type> <name pos:line="433" pos:column="69">e</name></decl></param>)</parameter_list> <block pos:line="433" pos:column="72">{
				<comment type="line" pos:line="434" pos:column="33">// TODO Auto-generated catch block</comment>
				<expr_stmt><expr><call><name><name pos:line="435" pos:column="33">e</name><op:operator pos:line="435" pos:column="34">.</op:operator><name pos:line="435" pos:column="35">printStackTrace</name></name><argument_list pos:line="435" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			}</block></catch> <catch pos:line="436" pos:column="27">catch <parameter_list pos:line="436" pos:column="33">(<param><decl><type><name><name pos:line="436" pos:column="34">CourseOffered</name><op:operator pos:line="436" pos:column="47">.</op:operator><name pos:line="436" pos:column="48">CourseOfferingDoesNotExistException</name></name></type> <name pos:line="436" pos:column="84">e</name></decl></param>)</parameter_list> <block pos:line="436" pos:column="87">{
				<comment type="line" pos:line="437" pos:column="33">// TODO Auto-generated catch block</comment>
				<expr_stmt><expr><call><name><name pos:line="438" pos:column="33">e</name><op:operator pos:line="438" pos:column="34">.</op:operator><name pos:line="438" pos:column="35">printStackTrace</name></name><argument_list pos:line="438" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			}</block></catch></try>
		}</block></then>
		<else pos:line="441" pos:column="17">else<block pos:line="441" pos:column="21">{
			<expr_stmt><expr><call><name><name pos:line="442" pos:column="25">txtrCourseDetails</name><op:operator pos:line="442" pos:column="42">.</op:operator><name pos:line="442" pos:column="43">setText</name></name><argument_list pos:line="442" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="442" pos:column="51">"Course details not available"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="443" pos:column="25">btnRegister</name><op:operator pos:line="443" pos:column="36">.</op:operator><name pos:line="443" pos:column="37">setEnabled</name></name><argument_list pos:line="443" pos:column="47">(<argument><expr><lit:literal type="boolean" pos:line="443" pos:column="48">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="444" pos:column="25">btnAddToWait</name><op:operator pos:line="444" pos:column="37">.</op:operator><name pos:line="444" pos:column="38">setEnabled</name></name><argument_list pos:line="444" pos:column="48">(<argument><expr><lit:literal type="boolean" pos:line="444" pos:column="49">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
		
		
	}</block></function>
	
	<function><type><specifier pos:line="450" pos:column="9">private</specifier> <name pos:line="450" pos:column="17">void</name></type> <name pos:line="450" pos:column="22">setCourseDetailsTextBoxInRegistrationsTab</name><parameter_list pos:line="450" pos:column="63">(<param><decl><type><name pos:line="450" pos:column="64">int</name></type> <name pos:line="450" pos:column="68">offerID</name></decl></param>)</parameter_list><block pos:line="450" pos:column="76">{
		<decl_stmt><decl><type><name pos:line="451" pos:column="17">CourseOffered</name></type> <name pos:line="451" pos:column="31">courseOffered</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="452" pos:column="17">String</name></type> <name pos:line="452" pos:column="24">details</name> <init pos:line="452" pos:column="32">= <expr><lit:literal type="string" pos:line="452" pos:column="34">""</lit:literal></expr></init></decl>;</decl_stmt>
		<try pos:line="453" pos:column="17">try <block pos:line="453" pos:column="21">{
			<expr_stmt><expr><name pos:line="454" pos:column="25">courseOffered</name> <op:operator pos:line="454" pos:column="39">=</op:operator> <op:operator pos:line="454" pos:column="41">new</op:operator> <call><name pos:line="454" pos:column="45">CourseOffered</name><argument_list pos:line="454" pos:column="58">(<argument><expr><name pos:line="454" pos:column="59">offerID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="455" pos:column="25">details</name> <op:operator pos:line="455" pos:column="33">+=</op:operator> <lit:literal type="string" pos:line="455" pos:column="36">"Course Name: "</lit:literal><op:operator pos:line="455" pos:column="51">+</op:operator><call><name><name pos:line="455" pos:column="52">courseOffered</name><op:operator pos:line="455" pos:column="65">.</op:operator><name pos:line="455" pos:column="66">getCourseName</name></name><argument_list pos:line="455" pos:column="79">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="456" pos:column="25">details</name> <op:operator pos:line="456" pos:column="33">+=</op:operator> <lit:literal type="string" pos:line="456" pos:column="36">"\nTaught by Professor: "</lit:literal><op:operator pos:line="456" pos:column="61">+</op:operator><call><name><name pos:line="456" pos:column="62">courseOffered</name><op:operator pos:line="456" pos:column="75">.</op:operator><name pos:line="456" pos:column="76">getProfessorName</name></name><argument_list pos:line="456" pos:column="92">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="457" pos:column="25">details</name> <op:operator pos:line="457" pos:column="33">+=</op:operator> <lit:literal type="string" pos:line="457" pos:column="36">"\nClassroom Location: "</lit:literal><op:operator pos:line="457" pos:column="60">+</op:operator><call><name><name pos:line="457" pos:column="61">courseOffered</name><op:operator pos:line="457" pos:column="74">.</op:operator><name pos:line="457" pos:column="75">getClassRoomLocation</name></name><argument_list pos:line="457" pos:column="95">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="458" pos:column="25">details</name> <op:operator pos:line="458" pos:column="33">+=</op:operator> <lit:literal type="string" pos:line="458" pos:column="36">"\nClassroom Name: "</lit:literal><op:operator pos:line="458" pos:column="56">+</op:operator><call><name><name pos:line="458" pos:column="57">courseOffered</name><op:operator pos:line="458" pos:column="70">.</op:operator><name pos:line="458" pos:column="71">getClassRoomName</name></name><argument_list pos:line="458" pos:column="87">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="459" pos:column="25">details</name> <op:operator pos:line="459" pos:column="33">+=</op:operator> <lit:literal type="string" pos:line="459" pos:column="36">"\nTimings: "</lit:literal><op:operator pos:line="459" pos:column="49">+</op:operator><call><name><name pos:line="459" pos:column="50">courseOffered</name><op:operator pos:line="459" pos:column="63">.</op:operator><name pos:line="459" pos:column="64">getTiming</name></name><argument_list pos:line="459" pos:column="73">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="460" pos:column="25">details</name> <op:operator pos:line="460" pos:column="33">+=</op:operator> <lit:literal type="string" pos:line="460" pos:column="36">"\nTotal Capacity: "</lit:literal><op:operator pos:line="460" pos:column="56">+</op:operator><call><name><name pos:line="460" pos:column="57">courseOffered</name><op:operator pos:line="460" pos:column="70">.</op:operator><name pos:line="460" pos:column="71">getTotalCapacity</name></name><argument_list pos:line="460" pos:column="87">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="461" pos:column="25">details</name> <op:operator pos:line="461" pos:column="33">+=</op:operator> <lit:literal type="string" pos:line="461" pos:column="36">"\nAvailable Seats: "</lit:literal><op:operator pos:line="461" pos:column="57">+</op:operator><op:operator pos:line="461" pos:column="58">(</op:operator><call><name><name pos:line="461" pos:column="59">courseOffered</name><op:operator pos:line="461" pos:column="72">.</op:operator><name pos:line="461" pos:column="73">getTotalCapacity</name></name><argument_list pos:line="461" pos:column="89">()</argument_list></call> <op:operator pos:line="461" pos:column="92">-</op:operator> <call><name><name pos:line="461" pos:column="94">courseOffered</name><op:operator pos:line="461" pos:column="107">.</op:operator><name pos:line="461" pos:column="108">getCurrentlyFilled</name></name><argument_list pos:line="461" pos:column="126">()</argument_list></call><op:operator pos:line="461" pos:column="128">)</op:operator></expr>;</expr_stmt>
			<if pos:line="462" pos:column="25">if<condition pos:line="462" pos:column="27">(<expr><call><name><name pos:line="462" pos:column="28">WaitList</name><op:operator pos:line="462" pos:column="36">.</op:operator><name pos:line="462" pos:column="37">isStudentRegistered</name></name><argument_list pos:line="462" pos:column="56">(<argument><expr><name pos:line="462" pos:column="57">student</name></expr></argument>, <argument><expr><name pos:line="462" pos:column="66">offerID</name></expr></argument>)</argument_list></call></expr>)</condition><then><block pos:line="462" pos:column="75">{
				<expr_stmt><expr><name pos:line="463" pos:column="33">details</name><op:operator pos:line="463" pos:column="40">+=</op:operator> <lit:literal type="string" pos:line="463" pos:column="43">"\n\n YOU ARE ALREADY REGISTERED FOR THIS COURSE"</lit:literal></expr>;</expr_stmt>
			}</block></then></if>
			
			<if pos:line="466" pos:column="25">if<condition pos:line="466" pos:column="27">(<expr><call><name><name pos:line="466" pos:column="28">WaitList</name><op:operator pos:line="466" pos:column="36">.</op:operator><name pos:line="466" pos:column="37">isStudentOnWaitList</name></name><argument_list pos:line="466" pos:column="56">(<argument><expr><name pos:line="466" pos:column="57">student</name></expr></argument>, <argument><expr><name pos:line="466" pos:column="66">offerID</name></expr></argument>)</argument_list></call></expr>)</condition><then><block pos:line="466" pos:column="75">{
				<expr_stmt><expr><name pos:line="467" pos:column="33">details</name><op:operator pos:line="467" pos:column="40">+=</op:operator> <lit:literal type="string" pos:line="467" pos:column="43">"\n\n YOU ARE ALREADY ON WAIT LIST FOR THIS COURSE"</lit:literal></expr>;</expr_stmt>
			}</block></then></if>
			
			<expr_stmt><expr><call><name><name pos:line="470" pos:column="25">txtrCourseDetails</name><op:operator pos:line="470" pos:column="42">.</op:operator><name pos:line="470" pos:column="43">setText</name></name><argument_list pos:line="470" pos:column="50">(<argument><expr><name pos:line="470" pos:column="51">details</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block> <catch pos:line="471" pos:column="19">catch <parameter_list pos:line="471" pos:column="25">(<param><decl><type><name><name pos:line="471" pos:column="26">Course</name><op:operator pos:line="471" pos:column="32">.</op:operator><name pos:line="471" pos:column="33">CourseDoesNotExistException</name></name></type> <name pos:line="471" pos:column="61">e</name></decl></param>)</parameter_list> <block pos:line="471" pos:column="64">{
			<comment type="line" pos:line="472" pos:column="25">// TODO Auto-generated catch block</comment>
			<expr_stmt><expr><call><name><name pos:line="473" pos:column="25">e</name><op:operator pos:line="473" pos:column="26">.</op:operator><name pos:line="473" pos:column="27">printStackTrace</name></name><argument_list pos:line="473" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="474" pos:column="25">txtrCourseDetails</name><op:operator pos:line="474" pos:column="42">.</op:operator><name pos:line="474" pos:column="43">setText</name></name><argument_list pos:line="474" pos:column="50">(<argument><expr><name pos:line="474" pos:column="51">details</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></catch><catch pos:line="475" pos:column="18">catch <parameter_list pos:line="475" pos:column="24">(<param><decl><type><name><name pos:line="475" pos:column="25">CourseOffered</name><op:operator pos:line="475" pos:column="38">.</op:operator><name pos:line="475" pos:column="39">CourseOfferingDoesNotExistException</name></name></type> <name pos:line="475" pos:column="75">e</name></decl></param>)</parameter_list> <block pos:line="475" pos:column="78">{
			<comment type="line" pos:line="476" pos:column="25">// TODO Auto-generated catch block</comment>
			<expr_stmt><expr><call><name><name pos:line="477" pos:column="25">e</name><op:operator pos:line="477" pos:column="26">.</op:operator><name pos:line="477" pos:column="27">printStackTrace</name></name><argument_list pos:line="477" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="478" pos:column="25">txtrCourseDetails</name><op:operator pos:line="478" pos:column="42">.</op:operator><name pos:line="478" pos:column="43">setText</name></name><argument_list pos:line="478" pos:column="50">(<argument><expr><name pos:line="478" pos:column="51">details</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></catch></try>
	}</block></function>

	<function><type><specifier pos:line="482" pos:column="9">private</specifier> <specifier pos:line="482" pos:column="17">static</specifier> <name pos:line="482" pos:column="24">void</name></type> <name pos:line="482" pos:column="29">initializeCurrentCourses</name><parameter_list pos:line="482" pos:column="53">()</parameter_list><block pos:line="482" pos:column="55">{
		<try pos:line="483" pos:column="17">try <block pos:line="483" pos:column="21">{			
			<decl_stmt><decl><type><name><name pos:line="484" pos:column="25">ArrayList</name><argument_list pos:line="484" pos:column="34">&lt;<argument><name pos:line="484" pos:column="35">CourseOffered</name></argument>&gt;</argument_list></name></type> <name pos:line="484" pos:column="50">studentCourses</name> <init pos:line="484" pos:column="65">= <expr><call><name><name pos:line="484" pos:column="67">CourseOffered</name><op:operator pos:line="484" pos:column="80">.</op:operator><name pos:line="484" pos:column="81">getStudentCourses</name></name><argument_list pos:line="484" pos:column="98">(<argument><expr><name pos:line="484" pos:column="99">student</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<for pos:line="485" pos:column="25">for(<init><decl><type><name pos:line="485" pos:column="29">CourseOffered</name></type> <name pos:line="485" pos:column="43">c</name><range pos:line="485" pos:column="44">:<expr><name pos:line="485" pos:column="45">studentCourses</name></expr></range></decl></init>)<block pos:line="485" pos:column="60">{
				<if pos:line="486" pos:column="33">if<condition pos:line="486" pos:column="35">(<expr><call><name><name pos:line="486" pos:column="36">c</name><op:operator pos:line="486" pos:column="37">.</op:operator><name pos:line="486" pos:column="38">checkIfCurrent</name></name><argument_list pos:line="486" pos:column="52">()</argument_list></call></expr>)</condition><then><block pos:line="486" pos:column="55">{
					<expr_stmt><expr><call><name><name pos:line="487" pos:column="41">currentCoursesTab</name><op:operator pos:line="487" pos:column="58">.</op:operator><name pos:line="487" pos:column="59">add</name></name><argument_list pos:line="487" pos:column="62">(<argument><expr><call><name><name pos:line="487" pos:column="63">c</name><op:operator pos:line="487" pos:column="64">.</op:operator><name pos:line="487" pos:column="65">getCourseName</name></name><argument_list pos:line="487" pos:column="78">()</argument_list></call></expr></argument>,<argument><expr><op:operator pos:line="487" pos:column="81">new</op:operator> <call><name pos:line="487" pos:column="85">singleCoursePanel</name><argument_list pos:line="487" pos:column="102">(<argument><expr><name pos:line="487" pos:column="103">student</name></expr></argument>, <argument><expr><name pos:line="487" pos:column="112">c</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then>
				
				<else pos:line="490" pos:column="33">else<block pos:line="490" pos:column="37">{
					<expr_stmt><expr><call><name><name pos:line="491" pos:column="41">previousCourses</name><op:operator pos:line="491" pos:column="56">.</op:operator><name pos:line="491" pos:column="57">add</name></name><argument_list pos:line="491" pos:column="60">(<argument><expr><call><name><name pos:line="491" pos:column="61">c</name><op:operator pos:line="491" pos:column="62">.</op:operator><name pos:line="491" pos:column="63">getCourseName</name></name><argument_list pos:line="491" pos:column="76">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="491" pos:column="80">new</op:operator> <call><name pos:line="491" pos:column="84">singleCoursePanel</name><argument_list pos:line="491" pos:column="101">(<argument><expr><name pos:line="491" pos:column="102">student</name></expr></argument>, <argument><expr><name pos:line="491" pos:column="111">c</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></else></if>
			}</block></for>
			
			<expr_stmt><expr><name pos:line="495" pos:column="25">studentCourses</name> <op:operator pos:line="495" pos:column="40">=</op:operator> <call><name><name pos:line="495" pos:column="42">WaitList</name><op:operator pos:line="495" pos:column="50">.</op:operator><name pos:line="495" pos:column="51">getWaitListCoursesOfStudent</name></name><argument_list pos:line="495" pos:column="78">(<argument><expr><name pos:line="495" pos:column="79">student</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<for pos:line="496" pos:column="25">for(<init><decl><type><name pos:line="496" pos:column="29">CourseOffered</name></type> <name pos:line="496" pos:column="43">c</name><range pos:line="496" pos:column="44">:<expr><name pos:line="496" pos:column="45">studentCourses</name></expr></range></decl></init>)<block pos:line="496" pos:column="60">{
				<if pos:line="497" pos:column="33">if<condition pos:line="497" pos:column="35">(<expr><call><name><name pos:line="497" pos:column="36">c</name><op:operator pos:line="497" pos:column="37">.</op:operator><name pos:line="497" pos:column="38">checkIfCurrent</name></name><argument_list pos:line="497" pos:column="52">()</argument_list></call></expr>)</condition><then><block pos:line="497" pos:column="55">{
					<expr_stmt><expr><call><name><name pos:line="498" pos:column="41">waitListTab</name><op:operator pos:line="498" pos:column="52">.</op:operator><name pos:line="498" pos:column="53">add</name></name><argument_list pos:line="498" pos:column="56">(<argument><expr><call><name><name pos:line="498" pos:column="57">c</name><op:operator pos:line="498" pos:column="58">.</op:operator><name pos:line="498" pos:column="59">getCourseName</name></name><argument_list pos:line="498" pos:column="72">()</argument_list></call></expr></argument>,<argument><expr><op:operator pos:line="498" pos:column="75">new</op:operator> <call><name pos:line="498" pos:column="79">singleCoursePanel</name><argument_list pos:line="498" pos:column="96">(<argument><expr><name pos:line="498" pos:column="97">student</name></expr></argument>, <argument><expr><name pos:line="498" pos:column="106">c</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				
			}</block></for>
			
		}</block> <catch pos:line="503" pos:column="19">catch <parameter_list pos:line="503" pos:column="25">(<param><decl><type><name><name pos:line="503" pos:column="26">Course</name><op:operator pos:line="503" pos:column="32">.</op:operator><name pos:line="503" pos:column="33">CourseDoesNotExistException</name></name></type> <name pos:line="503" pos:column="61">e</name></decl></param>)</parameter_list> <block pos:line="503" pos:column="64">{
			<comment type="line" pos:line="504" pos:column="25">// TODO Auto-generated catch block</comment>
			<expr_stmt><expr><call><name><name pos:line="505" pos:column="25">e</name><op:operator pos:line="505" pos:column="26">.</op:operator><name pos:line="505" pos:column="27">printStackTrace</name></name><argument_list pos:line="505" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
		}</block></catch> <catch pos:line="506" pos:column="19">catch <parameter_list pos:line="506" pos:column="25">(<param><decl><type><name><name pos:line="506" pos:column="26">CourseOffered</name><op:operator pos:line="506" pos:column="39">.</op:operator><name pos:line="506" pos:column="40">CourseOfferingDoesNotExistException</name></name></type> <name pos:line="506" pos:column="76">e</name></decl></param>)</parameter_list> <block pos:line="506" pos:column="79">{
			<comment type="line" pos:line="507" pos:column="25">// TODO Auto-generated catch block</comment>
			<expr_stmt><expr><call><name><name pos:line="508" pos:column="25">e</name><op:operator pos:line="508" pos:column="26">.</op:operator><name pos:line="508" pos:column="27">printStackTrace</name></name><argument_list pos:line="508" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
		}</block></catch></try>
	}</block></function>

	<function><type><specifier pos:line="512" pos:column="9">public</specifier> <specifier pos:line="512" pos:column="16">static</specifier> <name pos:line="512" pos:column="23">void</name></type> <name pos:line="512" pos:column="28">emptyTabs</name><parameter_list pos:line="512" pos:column="37">()</parameter_list><block pos:line="512" pos:column="39">{
		<expr_stmt><expr><call><name><name pos:line="513" pos:column="17">currentCoursesTab</name><op:operator pos:line="513" pos:column="34">.</op:operator><name pos:line="513" pos:column="35">removeAll</name></name><argument_list pos:line="513" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="514" pos:column="17">previousCourses</name><op:operator pos:line="514" pos:column="32">.</op:operator><name pos:line="514" pos:column="33">removeAll</name></name><argument_list pos:line="514" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="515" pos:column="17">waitListTab</name><op:operator pos:line="515" pos:column="28">.</op:operator><name pos:line="515" pos:column="29">removeAll</name></name><argument_list pos:line="515" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="516" pos:column="17">initializeCurrentCourses</name><argument_list pos:line="516" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
	}</block></function>
	
	<function><type><specifier pos:line="519" pos:column="9">public</specifier> <name pos:line="519" pos:column="16">void</name></type> <name pos:line="519" pos:column="21">showMessage</name><parameter_list pos:line="519" pos:column="32">(<param><decl><type><name pos:line="519" pos:column="33">String</name></type> <name pos:line="519" pos:column="40">message</name></decl></param>, <param><decl><type><name pos:line="519" pos:column="49">String</name></type> <name pos:line="519" pos:column="56">title</name></decl></param>)</parameter_list>
    <block pos:line="520" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="521" pos:column="9">JOptionPane</name><op:operator pos:line="521" pos:column="20">.</op:operator><name pos:line="521" pos:column="21">showMessageDialog</name></name><argument_list pos:line="521" pos:column="38">(<argument><expr><lit:literal type="null" pos:line="521" pos:column="39">null</lit:literal></expr></argument>, <argument><expr><name pos:line="521" pos:column="45">message</name></expr></argument>, <argument><expr><name pos:line="521" pos:column="54">title</name></expr></argument>, <argument><expr><name><name pos:line="521" pos:column="61">JOptionPane</name><op:operator pos:line="521" pos:column="72">.</op:operator><name pos:line="521" pos:column="73">INFORMATION_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
}</block></class>
</unit>
