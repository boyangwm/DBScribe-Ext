<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\xinco\src\com\bluecubs\xinco\client\object\dragNdrop\XincoAbstractTreeTransferHandler.java" pos:tabs="8"><comment type="block" format="javadoc" pos:line="1" pos:column="1">/**
 *Copyright 2007 blueCubs.com
 *
 *Licensed under the Apache License, Version 2.0 (the "License");
 *you may not use this file except in compliance with the License.
 *You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 *Unless required by applicable law or agreed to in writing, software
 *distributed under the License is distributed on an "AS IS" BASIS,
 *WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *See the License for the specific language governing permissions and
 *limitations under the License.
 *
 *************************************************************
 * This project supports the blueCubs vision of giving back
 * to the community in exchange for free software!
 * More information on: http://www.bluecubs.org
 *************************************************************
 *
 * Name:            XincoAbstractTreeTransferHandler
 *
 * Description:     XincoAbstractTreeTransferHandler
 *
 * Original Author: Javier A. Ortiz
 * Date:            May 18, 2007, 2:21 PM
 *
 * Modifications:
 *
 * Who?             When?             What?
 *
 *************************************************************
 */</comment>
<package pos:line="35" pos:column="1">package <name><name pos:line="35" pos:column="9">com</name><op:operator pos:line="35" pos:column="12">.</op:operator><name pos:line="35" pos:column="13">bluecubs</name><op:operator pos:line="35" pos:column="21">.</op:operator><name pos:line="35" pos:column="22">xinco</name><op:operator pos:line="35" pos:column="27">.</op:operator><name pos:line="35" pos:column="28">client</name><op:operator pos:line="35" pos:column="34">.</op:operator><name pos:line="35" pos:column="35">object</name><op:operator pos:line="35" pos:column="41">.</op:operator><name pos:line="35" pos:column="42">dragNdrop</name></name>;</package>

<import pos:line="37" pos:column="1">import <name><name pos:line="37" pos:column="8">com</name><op:operator pos:line="37" pos:column="11">.</op:operator><name pos:line="37" pos:column="12">bluecubs</name><op:operator pos:line="37" pos:column="20">.</op:operator><name pos:line="37" pos:column="21">xinco</name><op:operator pos:line="37" pos:column="26">.</op:operator><name pos:line="37" pos:column="27">client</name><op:operator pos:line="37" pos:column="33">.</op:operator><name pos:line="37" pos:column="34">object</name><op:operator pos:line="37" pos:column="40">.</op:operator><name pos:line="37" pos:column="41">XincoMutableTreeNode</name></name>;</import>
<import pos:line="38" pos:column="1">import <name><name pos:line="38" pos:column="8">com</name><op:operator pos:line="38" pos:column="11">.</op:operator><name pos:line="38" pos:column="12">bluecubs</name><op:operator pos:line="38" pos:column="20">.</op:operator><name pos:line="38" pos:column="21">xinco</name><op:operator pos:line="38" pos:column="26">.</op:operator><name pos:line="38" pos:column="27">client</name><op:operator pos:line="38" pos:column="33">.</op:operator><name pos:line="38" pos:column="34">object</name><op:operator pos:line="38" pos:column="40">.</op:operator><name pos:line="38" pos:column="41">XincoJTree</name></name>;</import>
<import pos:line="39" pos:column="1">import <name><name pos:line="39" pos:column="8">com</name><op:operator pos:line="39" pos:column="11">.</op:operator><name pos:line="39" pos:column="12">bluecubs</name><op:operator pos:line="39" pos:column="20">.</op:operator><name pos:line="39" pos:column="21">xinco</name><op:operator pos:line="39" pos:column="26">.</op:operator><name pos:line="39" pos:column="27">core</name><op:operator pos:line="39" pos:column="31">.</op:operator><name pos:line="39" pos:column="32">XincoCoreACE</name></name>;</import>
<import pos:line="40" pos:column="1">import <name><name pos:line="40" pos:column="8">com</name><op:operator pos:line="40" pos:column="11">.</op:operator><name pos:line="40" pos:column="12">bluecubs</name><op:operator pos:line="40" pos:column="20">.</op:operator><name pos:line="40" pos:column="21">xinco</name><op:operator pos:line="40" pos:column="26">.</op:operator><name pos:line="40" pos:column="27">core</name><op:operator pos:line="40" pos:column="31">.</op:operator><name pos:line="40" pos:column="32">XincoCoreData</name></name>;</import>
<import pos:line="41" pos:column="1">import <name><name pos:line="41" pos:column="8">com</name><op:operator pos:line="41" pos:column="11">.</op:operator><name pos:line="41" pos:column="12">bluecubs</name><op:operator pos:line="41" pos:column="20">.</op:operator><name pos:line="41" pos:column="21">xinco</name><op:operator pos:line="41" pos:column="26">.</op:operator><name pos:line="41" pos:column="27">core</name><op:operator pos:line="41" pos:column="31">.</op:operator><name pos:line="41" pos:column="32">XincoCoreNode</name></name>;</import>
<import pos:line="42" pos:column="1">import <name><name pos:line="42" pos:column="8">com</name><op:operator pos:line="42" pos:column="11">.</op:operator><name pos:line="42" pos:column="12">bluecubs</name><op:operator pos:line="42" pos:column="20">.</op:operator><name pos:line="42" pos:column="21">xinco</name><op:operator pos:line="42" pos:column="26">.</op:operator><name pos:line="42" pos:column="27">core</name><op:operator pos:line="42" pos:column="31">.</op:operator><name pos:line="42" pos:column="32">client</name><op:operator pos:line="42" pos:column="38">.</op:operator><name pos:line="42" pos:column="39">XincoCoreACEClient</name></name>;</import>
<import pos:line="43" pos:column="1">import <name><name pos:line="43" pos:column="8">java</name><op:operator pos:line="43" pos:column="12">.</op:operator><name pos:line="43" pos:column="13">awt</name><op:operator pos:line="43" pos:column="16">.</op:operator><name pos:line="43" pos:column="17">AlphaComposite</name></name>;</import>
<import pos:line="44" pos:column="1">import <name><name pos:line="44" pos:column="8">java</name><op:operator pos:line="44" pos:column="12">.</op:operator><name pos:line="44" pos:column="13">awt</name><op:operator pos:line="44" pos:column="16">.</op:operator><name pos:line="44" pos:column="17">Graphics2D</name></name>;</import>
<import pos:line="45" pos:column="1">import <name><name pos:line="45" pos:column="8">java</name><op:operator pos:line="45" pos:column="12">.</op:operator><name pos:line="45" pos:column="13">awt</name><op:operator pos:line="45" pos:column="16">.</op:operator><name pos:line="45" pos:column="17">Point</name></name>;</import>
<import pos:line="46" pos:column="1">import <name><name pos:line="46" pos:column="8">java</name><op:operator pos:line="46" pos:column="12">.</op:operator><name pos:line="46" pos:column="13">awt</name><op:operator pos:line="46" pos:column="16">.</op:operator><name pos:line="46" pos:column="17">Rectangle</name></name>;</import>
<import pos:line="47" pos:column="1">import <name><name pos:line="47" pos:column="8">java</name><op:operator pos:line="47" pos:column="12">.</op:operator><name pos:line="47" pos:column="13">awt</name><op:operator pos:line="47" pos:column="16">.</op:operator><name pos:line="47" pos:column="17">datatransfer</name><op:operator pos:line="47" pos:column="29">.</op:operator><name pos:line="47" pos:column="30">Transferable</name></name>;</import>
<import pos:line="48" pos:column="1">import <name><name pos:line="48" pos:column="8">java</name><op:operator pos:line="48" pos:column="12">.</op:operator><name pos:line="48" pos:column="13">awt</name><op:operator pos:line="48" pos:column="16">.</op:operator><name pos:line="48" pos:column="17">dnd</name><op:operator pos:line="48" pos:column="20">.</op:operator><name pos:line="48" pos:column="21">DnDConstants</name></name>;</import>
<import pos:line="49" pos:column="1">import <name><name pos:line="49" pos:column="8">java</name><op:operator pos:line="49" pos:column="12">.</op:operator><name pos:line="49" pos:column="13">awt</name><op:operator pos:line="49" pos:column="16">.</op:operator><name pos:line="49" pos:column="17">dnd</name><op:operator pos:line="49" pos:column="20">.</op:operator><name pos:line="49" pos:column="21">DragGestureEvent</name></name>;</import>
<import pos:line="50" pos:column="1">import <name><name pos:line="50" pos:column="8">java</name><op:operator pos:line="50" pos:column="12">.</op:operator><name pos:line="50" pos:column="13">awt</name><op:operator pos:line="50" pos:column="16">.</op:operator><name pos:line="50" pos:column="17">dnd</name><op:operator pos:line="50" pos:column="20">.</op:operator><name pos:line="50" pos:column="21">DragGestureListener</name></name>;</import>
<import pos:line="51" pos:column="1">import <name><name pos:line="51" pos:column="8">java</name><op:operator pos:line="51" pos:column="12">.</op:operator><name pos:line="51" pos:column="13">awt</name><op:operator pos:line="51" pos:column="16">.</op:operator><name pos:line="51" pos:column="17">dnd</name><op:operator pos:line="51" pos:column="20">.</op:operator><name pos:line="51" pos:column="21">DragSource</name></name>;</import>
<import pos:line="52" pos:column="1">import <name><name pos:line="52" pos:column="8">java</name><op:operator pos:line="52" pos:column="12">.</op:operator><name pos:line="52" pos:column="13">awt</name><op:operator pos:line="52" pos:column="16">.</op:operator><name pos:line="52" pos:column="17">dnd</name><op:operator pos:line="52" pos:column="20">.</op:operator><name pos:line="52" pos:column="21">DragSourceDragEvent</name></name>;</import>
<import pos:line="53" pos:column="1">import <name><name pos:line="53" pos:column="8">java</name><op:operator pos:line="53" pos:column="12">.</op:operator><name pos:line="53" pos:column="13">awt</name><op:operator pos:line="53" pos:column="16">.</op:operator><name pos:line="53" pos:column="17">dnd</name><op:operator pos:line="53" pos:column="20">.</op:operator><name pos:line="53" pos:column="21">DragSourceDropEvent</name></name>;</import>
<import pos:line="54" pos:column="1">import <name><name pos:line="54" pos:column="8">java</name><op:operator pos:line="54" pos:column="12">.</op:operator><name pos:line="54" pos:column="13">awt</name><op:operator pos:line="54" pos:column="16">.</op:operator><name pos:line="54" pos:column="17">dnd</name><op:operator pos:line="54" pos:column="20">.</op:operator><name pos:line="54" pos:column="21">DragSourceEvent</name></name>;</import>
<import pos:line="55" pos:column="1">import <name><name pos:line="55" pos:column="8">java</name><op:operator pos:line="55" pos:column="12">.</op:operator><name pos:line="55" pos:column="13">awt</name><op:operator pos:line="55" pos:column="16">.</op:operator><name pos:line="55" pos:column="17">dnd</name><op:operator pos:line="55" pos:column="20">.</op:operator><name pos:line="55" pos:column="21">DragSourceListener</name></name>;</import>
<import pos:line="56" pos:column="1">import <name><name pos:line="56" pos:column="8">java</name><op:operator pos:line="56" pos:column="12">.</op:operator><name pos:line="56" pos:column="13">awt</name><op:operator pos:line="56" pos:column="16">.</op:operator><name pos:line="56" pos:column="17">dnd</name><op:operator pos:line="56" pos:column="20">.</op:operator><name pos:line="56" pos:column="21">DropTarget</name></name>;</import>
<import pos:line="57" pos:column="1">import <name><name pos:line="57" pos:column="8">java</name><op:operator pos:line="57" pos:column="12">.</op:operator><name pos:line="57" pos:column="13">awt</name><op:operator pos:line="57" pos:column="16">.</op:operator><name pos:line="57" pos:column="17">dnd</name><op:operator pos:line="57" pos:column="20">.</op:operator><name pos:line="57" pos:column="21">DropTargetDragEvent</name></name>;</import>
<import pos:line="58" pos:column="1">import <name><name pos:line="58" pos:column="8">java</name><op:operator pos:line="58" pos:column="12">.</op:operator><name pos:line="58" pos:column="13">awt</name><op:operator pos:line="58" pos:column="16">.</op:operator><name pos:line="58" pos:column="17">dnd</name><op:operator pos:line="58" pos:column="20">.</op:operator><name pos:line="58" pos:column="21">DropTargetDropEvent</name></name>;</import>
<import pos:line="59" pos:column="1">import <name><name pos:line="59" pos:column="8">java</name><op:operator pos:line="59" pos:column="12">.</op:operator><name pos:line="59" pos:column="13">awt</name><op:operator pos:line="59" pos:column="16">.</op:operator><name pos:line="59" pos:column="17">dnd</name><op:operator pos:line="59" pos:column="20">.</op:operator><name pos:line="59" pos:column="21">DropTargetEvent</name></name>;</import>
<import pos:line="60" pos:column="1">import <name><name pos:line="60" pos:column="8">java</name><op:operator pos:line="60" pos:column="12">.</op:operator><name pos:line="60" pos:column="13">awt</name><op:operator pos:line="60" pos:column="16">.</op:operator><name pos:line="60" pos:column="17">dnd</name><op:operator pos:line="60" pos:column="20">.</op:operator><name pos:line="60" pos:column="21">DropTargetListener</name></name>;</import>
<import pos:line="61" pos:column="1">import <name><name pos:line="61" pos:column="8">java</name><op:operator pos:line="61" pos:column="12">.</op:operator><name pos:line="61" pos:column="13">awt</name><op:operator pos:line="61" pos:column="16">.</op:operator><name pos:line="61" pos:column="17">image</name><op:operator pos:line="61" pos:column="22">.</op:operator><name pos:line="61" pos:column="23">BufferedImage</name></name>;</import>
<import pos:line="62" pos:column="1">import <name><name pos:line="62" pos:column="8">javax</name><op:operator pos:line="62" pos:column="13">.</op:operator><name pos:line="62" pos:column="14">swing</name><op:operator pos:line="62" pos:column="19">.</op:operator><name pos:line="62" pos:column="20">JComponent</name></name>;</import>
<import pos:line="63" pos:column="1">import <name><name pos:line="63" pos:column="8">javax</name><op:operator pos:line="63" pos:column="13">.</op:operator><name pos:line="63" pos:column="14">swing</name><op:operator pos:line="63" pos:column="19">.</op:operator><name pos:line="63" pos:column="20">tree</name><op:operator pos:line="63" pos:column="24">.</op:operator><name pos:line="63" pos:column="25">DefaultMutableTreeNode</name></name>;</import>
<import pos:line="64" pos:column="1">import <name><name pos:line="64" pos:column="8">javax</name><op:operator pos:line="64" pos:column="13">.</op:operator><name pos:line="64" pos:column="14">swing</name><op:operator pos:line="64" pos:column="19">.</op:operator><name pos:line="64" pos:column="20">tree</name><op:operator pos:line="64" pos:column="24">.</op:operator><name pos:line="64" pos:column="25">DefaultTreeModel</name></name>;</import>
<import pos:line="65" pos:column="1">import <name><name pos:line="65" pos:column="8">javax</name><op:operator pos:line="65" pos:column="13">.</op:operator><name pos:line="65" pos:column="14">swing</name><op:operator pos:line="65" pos:column="19">.</op:operator><name pos:line="65" pos:column="20">tree</name><op:operator pos:line="65" pos:column="24">.</op:operator><name pos:line="65" pos:column="25">TreePath</name></name>;</import>

<comment type="block" format="javadoc" pos:line="67" pos:column="1">/**
 *
 * @author Javier A. Ortiz
 */</comment>
<class><specifier pos:line="71" pos:column="1">public</specifier> <specifier pos:line="71" pos:column="8">abstract</specifier> class <name pos:line="71" pos:column="23">XincoAbstractTreeTransferHandler</name> <super><implements pos:line="71" pos:column="56">implements <name pos:line="71" pos:column="67">DragGestureListener</name>, <name pos:line="71" pos:column="88">DragSourceListener</name>, <name pos:line="71" pos:column="108">DropTargetListener</name></implements></super> <block pos:line="71" pos:column="127">{

    <decl_stmt><decl><type><specifier pos:line="73" pos:column="5">private</specifier> <name pos:line="73" pos:column="13">XincoJTree</name></type> <name pos:line="73" pos:column="24">tree</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="74" pos:column="5">private</specifier> <name pos:line="74" pos:column="13">DragSource</name></type> <name pos:line="74" pos:column="24">dragSource</name></decl>;</decl_stmt> <comment type="line" pos:line="74" pos:column="36">// dragsource</comment>
    <decl_stmt><decl><type><specifier pos:line="75" pos:column="5">private</specifier> <name pos:line="75" pos:column="13">DropTarget</name></type> <name pos:line="75" pos:column="24">dropTarget</name></decl>;</decl_stmt> <comment type="line" pos:line="75" pos:column="36">//droptarget</comment>
    <decl_stmt><decl><type><specifier pos:line="76" pos:column="5">private</specifier> <specifier pos:line="76" pos:column="13">static</specifier> <name pos:line="76" pos:column="20">DefaultMutableTreeNode</name></type> <name pos:line="76" pos:column="43">draggedNode</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="77" pos:column="5">private</specifier> <name pos:line="77" pos:column="13">DefaultMutableTreeNode</name></type> <name pos:line="77" pos:column="36">draggedNodeParent</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="78" pos:column="5">private</specifier> <specifier pos:line="78" pos:column="13">static</specifier> <name pos:line="78" pos:column="20">BufferedImage</name></type> <name pos:line="78" pos:column="34">image</name> <init pos:line="78" pos:column="40">= <expr><lit:literal type="null" pos:line="78" pos:column="42">null</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="78" pos:column="48">//buff image</comment>
    <decl_stmt><decl><type><specifier pos:line="79" pos:column="5">private</specifier> <name pos:line="79" pos:column="13">Rectangle</name></type> <name pos:line="79" pos:column="23">rect2D</name> <init pos:line="79" pos:column="30">= <expr><op:operator pos:line="79" pos:column="32">new</op:operator> <call><name pos:line="79" pos:column="36">Rectangle</name><argument_list pos:line="79" pos:column="45">()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="80" pos:column="5">private</specifier> <name pos:line="80" pos:column="13">boolean</name></type> <name pos:line="80" pos:column="21">drawImage</name></decl>;</decl_stmt>

    <constructor><specifier pos:line="82" pos:column="5">protected</specifier> <name pos:line="82" pos:column="15">XincoAbstractTreeTransferHandler</name><parameter_list pos:line="82" pos:column="47">(<param><decl><type><name pos:line="82" pos:column="48">XincoJTree</name></type> <name pos:line="82" pos:column="59">tree</name></decl></param>, <param><decl><type><name pos:line="82" pos:column="65">int</name></type> <name pos:line="82" pos:column="69">action</name></decl></param>, <param><decl><type><name pos:line="82" pos:column="77">boolean</name></type> <name pos:line="82" pos:column="85">drawIcon</name></decl></param>)</parameter_list> <block pos:line="82" pos:column="95">{
        <expr_stmt><expr><name><name pos:line="83" pos:column="9">this</name><op:operator pos:line="83" pos:column="13">.</op:operator><name pos:line="83" pos:column="14">tree</name></name> <op:operator pos:line="83" pos:column="19">=</op:operator> <name pos:line="83" pos:column="21">tree</name></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="84" pos:column="9">drawImage</name> <op:operator pos:line="84" pos:column="19">=</op:operator> <name pos:line="84" pos:column="21">drawIcon</name></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="85" pos:column="9">dragSource</name> <op:operator pos:line="85" pos:column="20">=</op:operator> <op:operator pos:line="85" pos:column="22">new</op:operator> <call><name pos:line="85" pos:column="26">DragSource</name><argument_list pos:line="85" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="86" pos:column="9">dragSource</name><op:operator pos:line="86" pos:column="19">.</op:operator><name pos:line="86" pos:column="20">createDefaultDragGestureRecognizer</name></name><argument_list pos:line="86" pos:column="54">(<argument><expr><name pos:line="86" pos:column="55">tree</name></expr></argument>, <argument><expr><name pos:line="86" pos:column="61">action</name></expr></argument>, <argument><expr><name pos:line="86" pos:column="69">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="87" pos:column="9">dropTarget</name> <op:operator pos:line="87" pos:column="20">=</op:operator> <op:operator pos:line="87" pos:column="22">new</op:operator> <call><name pos:line="87" pos:column="26">DropTarget</name><argument_list pos:line="87" pos:column="36">(<argument><expr><name pos:line="87" pos:column="37">tree</name></expr></argument>, <argument><expr><name pos:line="87" pos:column="43">action</name></expr></argument>, <argument><expr><name pos:line="87" pos:column="51">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <comment type="block" pos:line="90" pos:column="5">/* Methods for DragSourceListener */</comment>
    <function><type><specifier pos:line="91" pos:column="5">public</specifier> <name pos:line="91" pos:column="12">void</name></type> <name pos:line="91" pos:column="17">dragDropEnd</name><parameter_list pos:line="91" pos:column="28">(<param><decl><type><name pos:line="91" pos:column="29">DragSourceDropEvent</name></type> <name pos:line="91" pos:column="49">dsde</name></decl></param>)</parameter_list> <block pos:line="91" pos:column="55">{
        <if pos:line="92" pos:column="9">if <condition pos:line="92" pos:column="12">(<expr><call><name><name pos:line="92" pos:column="13">dsde</name><op:operator pos:line="92" pos:column="17">.</op:operator><name pos:line="92" pos:column="18">getDropSuccess</name></name><argument_list pos:line="92" pos:column="32">()</argument_list></call> <op:operator pos:line="92" pos:column="35">&amp;&amp;</op:operator> <call><name><name pos:line="92" pos:column="38">dsde</name><op:operator pos:line="92" pos:column="42">.</op:operator><name pos:line="92" pos:column="43">getDropAction</name></name><argument_list pos:line="92" pos:column="56">()</argument_list></call> <op:operator pos:line="92" pos:column="59">==</op:operator> <name><name pos:line="92" pos:column="62">DnDConstants</name><op:operator pos:line="92" pos:column="74">.</op:operator><name pos:line="92" pos:column="75">ACTION_MOVE</name></name> <op:operator pos:line="92" pos:column="87">&amp;&amp;</op:operator> <name pos:line="92" pos:column="90">draggedNodeParent</name> <op:operator pos:line="92" pos:column="108">!=</op:operator> <lit:literal type="null" pos:line="92" pos:column="111">null</lit:literal></expr>)</condition><then pos:line="92" pos:column="116"> <block pos:line="92" pos:column="117">{
            <decl_stmt><decl><type><name pos:line="93" pos:column="13">XincoCoreACE</name></type> <name pos:line="93" pos:column="26">temp_ace</name> <init pos:line="93" pos:column="35">= <expr><op:operator pos:line="93" pos:column="37">new</op:operator> <call><name pos:line="93" pos:column="41">XincoCoreACE</name><argument_list pos:line="93" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <comment type="line" pos:line="94" pos:column="13">// get ace</comment>
            <if pos:line="95" pos:column="13">if <condition pos:line="95" pos:column="16">(<expr><call><name><name pos:line="95" pos:column="17">draggedNode</name><op:operator pos:line="95" pos:column="28">.</op:operator><name pos:line="95" pos:column="29">getUserObject</name></name><argument_list pos:line="95" pos:column="42">()</argument_list></call><op:operator pos:line="95" pos:column="44">.</op:operator><call><name pos:line="95" pos:column="45">getClass</name><argument_list pos:line="95" pos:column="53">()</argument_list></call> <op:operator pos:line="95" pos:column="56">==</op:operator> <name><name pos:line="95" pos:column="59">XincoCoreNode</name><op:operator pos:line="95" pos:column="72">.</op:operator><name pos:line="95" pos:column="73">class</name></name></expr>)</condition><then pos:line="95" pos:column="79"> <block pos:line="95" pos:column="80">{
                <expr_stmt><expr><name pos:line="96" pos:column="17">temp_ace</name> <op:operator pos:line="96" pos:column="26">=</op:operator> <call><name><name pos:line="96" pos:column="28">XincoCoreACEClient</name><op:operator pos:line="96" pos:column="46">.</op:operator><name pos:line="96" pos:column="47">checkAccess</name></name><argument_list pos:line="96" pos:column="58">(<argument><expr><call><name pos:line="96" pos:column="59">getTree</name><argument_list pos:line="96" pos:column="66">()</argument_list></call><op:operator pos:line="96" pos:column="68">.</op:operator><call><name pos:line="96" pos:column="69">getExplorer</name><argument_list pos:line="96" pos:column="80">()</argument_list></call><op:operator pos:line="96" pos:column="82">.</op:operator><call><name pos:line="96" pos:column="83">getSession</name><argument_list pos:line="96" pos:column="93">()</argument_list></call><op:operator pos:line="96" pos:column="95">.</op:operator><call><name pos:line="96" pos:column="96">getUser</name><argument_list pos:line="96" pos:column="103">()</argument_list></call></expr></argument>,
                        <argument><expr><op:operator pos:line="97" pos:column="25">(</op:operator><op:operator pos:line="97" pos:column="26">(</op:operator><name pos:line="97" pos:column="27">XincoCoreNode</name><op:operator pos:line="97" pos:column="40">)</op:operator> <call><name><name pos:line="97" pos:column="42">draggedNode</name><op:operator pos:line="97" pos:column="53">.</op:operator><name pos:line="97" pos:column="54">getUserObject</name></name><argument_list pos:line="97" pos:column="67">()</argument_list></call><op:operator pos:line="97" pos:column="69">)</op:operator><op:operator pos:line="97" pos:column="70">.</op:operator><call><name pos:line="97" pos:column="71">getXinco_core_acl</name><argument_list pos:line="97" pos:column="88">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <if pos:line="99" pos:column="13">if <condition pos:line="99" pos:column="16">(<expr><call><name><name pos:line="99" pos:column="17">draggedNode</name><op:operator pos:line="99" pos:column="28">.</op:operator><name pos:line="99" pos:column="29">getUserObject</name></name><argument_list pos:line="99" pos:column="42">()</argument_list></call><op:operator pos:line="99" pos:column="44">.</op:operator><call><name pos:line="99" pos:column="45">getClass</name><argument_list pos:line="99" pos:column="53">()</argument_list></call> <op:operator pos:line="99" pos:column="56">==</op:operator> <name><name pos:line="99" pos:column="59">XincoCoreData</name><op:operator pos:line="99" pos:column="72">.</op:operator><name pos:line="99" pos:column="73">class</name></name></expr>)</condition><then pos:line="99" pos:column="79"> <block pos:line="99" pos:column="80">{
                <expr_stmt><expr><name pos:line="100" pos:column="17">temp_ace</name> <op:operator pos:line="100" pos:column="26">=</op:operator> <call><name><name pos:line="100" pos:column="28">XincoCoreACEClient</name><op:operator pos:line="100" pos:column="46">.</op:operator><name pos:line="100" pos:column="47">checkAccess</name></name><argument_list pos:line="100" pos:column="58">(<argument><expr><call><name pos:line="100" pos:column="59">getTree</name><argument_list pos:line="100" pos:column="66">()</argument_list></call><op:operator pos:line="100" pos:column="68">.</op:operator><call><name pos:line="100" pos:column="69">getExplorer</name><argument_list pos:line="100" pos:column="80">()</argument_list></call><op:operator pos:line="100" pos:column="82">.</op:operator><call><name pos:line="100" pos:column="83">getSession</name><argument_list pos:line="100" pos:column="93">()</argument_list></call><op:operator pos:line="100" pos:column="95">.</op:operator><call><name pos:line="100" pos:column="96">getUser</name><argument_list pos:line="100" pos:column="103">()</argument_list></call></expr></argument>,
                        <argument><expr><op:operator pos:line="101" pos:column="25">(</op:operator><op:operator pos:line="101" pos:column="26">(</op:operator><name pos:line="101" pos:column="27">XincoCoreData</name><op:operator pos:line="101" pos:column="40">)</op:operator> <call><name><name pos:line="101" pos:column="42">draggedNode</name><op:operator pos:line="101" pos:column="53">.</op:operator><name pos:line="101" pos:column="54">getUserObject</name></name><argument_list pos:line="101" pos:column="67">()</argument_list></call><op:operator pos:line="101" pos:column="69">)</op:operator><op:operator pos:line="101" pos:column="70">.</op:operator><call><name pos:line="101" pos:column="71">getXinco_core_acl</name><argument_list pos:line="101" pos:column="88">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <comment type="line" pos:line="103" pos:column="13">//Drop only if you have write permissions</comment>
            <if pos:line="104" pos:column="13">if <condition pos:line="104" pos:column="16">(<expr><call><name><name pos:line="104" pos:column="17">temp_ace</name><op:operator pos:line="104" pos:column="25">.</op:operator><name pos:line="104" pos:column="26">isWrite_permission</name></name><argument_list pos:line="104" pos:column="44">()</argument_list></call></expr>)</condition><then pos:line="104" pos:column="47"> <block pos:line="104" pos:column="48">{
                <expr_stmt><expr><call><name pos:line="105" pos:column="17">getTree</name><argument_list pos:line="105" pos:column="24">()</argument_list></call><op:operator pos:line="105" pos:column="26">.</op:operator><call><name pos:line="105" pos:column="27">getExplorer</name><argument_list pos:line="105" pos:column="38">()</argument_list></call><op:operator pos:line="105" pos:column="40">.</op:operator><call><name pos:line="105" pos:column="41">getSession</name><argument_list pos:line="105" pos:column="51">()</argument_list></call><op:operator pos:line="105" pos:column="53">.</op:operator><call><name pos:line="105" pos:column="54">setCurrentTreeNodeSelection</name><argument_list pos:line="105" pos:column="81">(<argument><expr><op:operator pos:line="105" pos:column="82">(</op:operator><name pos:line="105" pos:column="83">XincoMutableTreeNode</name><op:operator pos:line="105" pos:column="103">)</op:operator> <name pos:line="105" pos:column="105">draggedNodeParent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><op:operator pos:line="106" pos:column="17">(</op:operator><op:operator pos:line="106" pos:column="18">(</op:operator><name pos:line="106" pos:column="19">DefaultTreeModel</name><op:operator pos:line="106" pos:column="35">)</op:operator> <call><name pos:line="106" pos:column="37">getTree</name><argument_list pos:line="106" pos:column="44">()</argument_list></call><op:operator pos:line="106" pos:column="46">.</op:operator><call><name pos:line="106" pos:column="47">getModel</name><argument_list pos:line="106" pos:column="55">()</argument_list></call><op:operator pos:line="106" pos:column="57">)</op:operator><op:operator pos:line="106" pos:column="58">.</op:operator><call><name pos:line="106" pos:column="59">nodeStructureChanged</name><argument_list pos:line="106" pos:column="79">(<argument><expr><name pos:line="106" pos:column="80">draggedNodeParent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="107" pos:column="17">getTree</name><argument_list pos:line="107" pos:column="24">()</argument_list></call><op:operator pos:line="107" pos:column="26">.</op:operator><call><name pos:line="107" pos:column="27">expandPath</name><argument_list pos:line="107" pos:column="37">(<argument><expr><op:operator pos:line="107" pos:column="38">new</op:operator> <call><name pos:line="107" pos:column="42">TreePath</name><argument_list pos:line="107" pos:column="50">(<argument><expr><call><name><name pos:line="107" pos:column="51">draggedNodeParent</name><op:operator pos:line="107" pos:column="68">.</op:operator><name pos:line="107" pos:column="69">getPath</name></name><argument_list pos:line="107" pos:column="76">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="108" pos:column="17">getTree</name><argument_list pos:line="108" pos:column="24">()</argument_list></call><op:operator pos:line="108" pos:column="26">.</op:operator><call><name pos:line="108" pos:column="27">expandPath</name><argument_list pos:line="108" pos:column="37">(<argument><expr><op:operator pos:line="108" pos:column="38">new</op:operator> <call><name pos:line="108" pos:column="42">TreePath</name><argument_list pos:line="108" pos:column="50">(<argument><expr><call><name><name pos:line="108" pos:column="51">draggedNode</name><op:operator pos:line="108" pos:column="62">.</op:operator><name pos:line="108" pos:column="63">getPath</name></name><argument_list pos:line="108" pos:column="70">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="109" pos:column="17">getTree</name><argument_list pos:line="109" pos:column="24">()</argument_list></call><op:operator pos:line="109" pos:column="26">.</op:operator><call><name pos:line="109" pos:column="27">getExplorer</name><argument_list pos:line="109" pos:column="38">()</argument_list></call><op:operator pos:line="109" pos:column="40">.</op:operator><call><name pos:line="109" pos:column="41">getActionHandler</name><argument_list pos:line="109" pos:column="57">()</argument_list></call><op:operator pos:line="109" pos:column="59">.</op:operator><call><name pos:line="109" pos:column="60">insertNode</name><argument_list pos:line="109" pos:column="70">(<argument><expr><lit:literal type="boolean" pos:line="109" pos:column="71">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="110" pos:column="17">getTree</name><argument_list pos:line="110" pos:column="24">()</argument_list></call><op:operator pos:line="110" pos:column="26">.</op:operator><call><name pos:line="110" pos:column="27">getExplorer</name><argument_list pos:line="110" pos:column="38">()</argument_list></call><op:operator pos:line="110" pos:column="40">.</op:operator><call><name><name pos:line="110" pos:column="41">jLabelInternalFrameInformationText</name><op:operator pos:line="110" pos:column="75">.</op:operator><name pos:line="110" pos:column="76">setText</name></name><argument_list pos:line="110" pos:column="83">(<argument><expr><call><name pos:line="110" pos:column="84">getTree</name><argument_list pos:line="110" pos:column="91">()</argument_list></call><op:operator pos:line="110" pos:column="93">.</op:operator><call><name pos:line="110" pos:column="94">getExplorer</name><argument_list pos:line="110" pos:column="105">()</argument_list></call><op:operator pos:line="110" pos:column="107">.</op:operator><call><name pos:line="110" pos:column="108">getResourceBundle</name><argument_list pos:line="110" pos:column="125">()</argument_list></call><op:operator pos:line="110" pos:column="127">.</op:operator><call><name pos:line="110" pos:column="128">getString</name><argument_list pos:line="110" pos:column="137">(<argument><expr><lit:literal type="string" pos:line="110" pos:column="138">"menu.edit.movefoldersuccess"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></then></if>
    }</block></function>

    <function><type><specifier pos:line="115" pos:column="5">public</specifier> <specifier pos:line="115" pos:column="12">final</specifier> <name pos:line="115" pos:column="18">void</name></type> <name pos:line="115" pos:column="23">dragEnter</name><parameter_list pos:line="115" pos:column="32">(<param><decl><type><name pos:line="115" pos:column="33">DragSourceDragEvent</name></type> <name pos:line="115" pos:column="53">dsde</name></decl></param>)</parameter_list> <block pos:line="115" pos:column="59">{
        <decl_stmt><decl><type><name pos:line="116" pos:column="9">int</name></type> <name pos:line="116" pos:column="13">action</name> <init pos:line="116" pos:column="20">= <expr><call><name><name pos:line="116" pos:column="22">dsde</name><op:operator pos:line="116" pos:column="26">.</op:operator><name pos:line="116" pos:column="27">getDropAction</name></name><argument_list pos:line="116" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if pos:line="117" pos:column="9">if <condition pos:line="117" pos:column="12">(<expr><name pos:line="117" pos:column="13">action</name> <op:operator pos:line="117" pos:column="20">==</op:operator> <name><name pos:line="117" pos:column="23">DnDConstants</name><op:operator pos:line="117" pos:column="35">.</op:operator><name pos:line="117" pos:column="36">ACTION_COPY</name></name></expr>)</condition><then pos:line="117" pos:column="48"> <block pos:line="117" pos:column="49">{
            <expr_stmt><expr><call><name><name pos:line="118" pos:column="13">dsde</name><op:operator pos:line="118" pos:column="17">.</op:operator><name pos:line="118" pos:column="18">getDragSourceContext</name></name><argument_list pos:line="118" pos:column="38">()</argument_list></call><op:operator pos:line="118" pos:column="40">.</op:operator><call><name pos:line="118" pos:column="41">setCursor</name><argument_list pos:line="118" pos:column="50">(<argument><expr><name><name pos:line="118" pos:column="51">DragSource</name><op:operator pos:line="118" pos:column="61">.</op:operator><name pos:line="118" pos:column="62">DefaultCopyDrop</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then> <else pos:line="119" pos:column="11">else <block pos:line="119" pos:column="16">{
            <if pos:line="120" pos:column="13">if <condition pos:line="120" pos:column="16">(<expr><name pos:line="120" pos:column="17">action</name> <op:operator pos:line="120" pos:column="24">==</op:operator> <name><name pos:line="120" pos:column="27">DnDConstants</name><op:operator pos:line="120" pos:column="39">.</op:operator><name pos:line="120" pos:column="40">ACTION_MOVE</name></name></expr>)</condition><then pos:line="120" pos:column="52"> <block pos:line="120" pos:column="53">{
                <expr_stmt><expr><call><name><name pos:line="121" pos:column="17">dsde</name><op:operator pos:line="121" pos:column="21">.</op:operator><name pos:line="121" pos:column="22">getDragSourceContext</name></name><argument_list pos:line="121" pos:column="42">()</argument_list></call><op:operator pos:line="121" pos:column="44">.</op:operator><call><name pos:line="121" pos:column="45">setCursor</name><argument_list pos:line="121" pos:column="54">(<argument><expr><name><name pos:line="121" pos:column="55">DragSource</name><op:operator pos:line="121" pos:column="65">.</op:operator><name pos:line="121" pos:column="66">DefaultMoveDrop</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then> <else pos:line="122" pos:column="15">else <block pos:line="122" pos:column="20">{
                <expr_stmt><expr><call><name><name pos:line="123" pos:column="17">dsde</name><op:operator pos:line="123" pos:column="21">.</op:operator><name pos:line="123" pos:column="22">getDragSourceContext</name></name><argument_list pos:line="123" pos:column="42">()</argument_list></call><op:operator pos:line="123" pos:column="44">.</op:operator><call><name pos:line="123" pos:column="45">setCursor</name><argument_list pos:line="123" pos:column="54">(<argument><expr><name><name pos:line="123" pos:column="55">DragSource</name><op:operator pos:line="123" pos:column="65">.</op:operator><name pos:line="123" pos:column="66">DefaultMoveNoDrop</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
        }</block></else></if>
    }</block></function>

    <function><type><specifier pos:line="128" pos:column="5">public</specifier> <specifier pos:line="128" pos:column="12">final</specifier> <name pos:line="128" pos:column="18">void</name></type> <name pos:line="128" pos:column="23">dragOver</name><parameter_list pos:line="128" pos:column="31">(<param><decl><type><name pos:line="128" pos:column="32">DragSourceDragEvent</name></type> <name pos:line="128" pos:column="52">dsde</name></decl></param>)</parameter_list> <block pos:line="128" pos:column="58">{
        <decl_stmt><decl><type><name pos:line="129" pos:column="9">int</name></type> <name pos:line="129" pos:column="13">action</name> <init pos:line="129" pos:column="20">= <expr><call><name><name pos:line="129" pos:column="22">dsde</name><op:operator pos:line="129" pos:column="26">.</op:operator><name pos:line="129" pos:column="27">getDropAction</name></name><argument_list pos:line="129" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if pos:line="130" pos:column="9">if <condition pos:line="130" pos:column="12">(<expr><name pos:line="130" pos:column="13">action</name> <op:operator pos:line="130" pos:column="20">==</op:operator> <name><name pos:line="130" pos:column="23">DnDConstants</name><op:operator pos:line="130" pos:column="35">.</op:operator><name pos:line="130" pos:column="36">ACTION_COPY</name></name></expr>)</condition><then pos:line="130" pos:column="48"> <block pos:line="130" pos:column="49">{
            <expr_stmt><expr><call><name><name pos:line="131" pos:column="13">dsde</name><op:operator pos:line="131" pos:column="17">.</op:operator><name pos:line="131" pos:column="18">getDragSourceContext</name></name><argument_list pos:line="131" pos:column="38">()</argument_list></call><op:operator pos:line="131" pos:column="40">.</op:operator><call><name pos:line="131" pos:column="41">setCursor</name><argument_list pos:line="131" pos:column="50">(<argument><expr><name><name pos:line="131" pos:column="51">DragSource</name><op:operator pos:line="131" pos:column="61">.</op:operator><name pos:line="131" pos:column="62">DefaultCopyDrop</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then> <else pos:line="132" pos:column="11">else <block pos:line="132" pos:column="16">{
            <if pos:line="133" pos:column="13">if <condition pos:line="133" pos:column="16">(<expr><name pos:line="133" pos:column="17">action</name> <op:operator pos:line="133" pos:column="24">==</op:operator> <name><name pos:line="133" pos:column="27">DnDConstants</name><op:operator pos:line="133" pos:column="39">.</op:operator><name pos:line="133" pos:column="40">ACTION_MOVE</name></name></expr>)</condition><then pos:line="133" pos:column="52"> <block pos:line="133" pos:column="53">{
                <expr_stmt><expr><call><name><name pos:line="134" pos:column="17">dsde</name><op:operator pos:line="134" pos:column="21">.</op:operator><name pos:line="134" pos:column="22">getDragSourceContext</name></name><argument_list pos:line="134" pos:column="42">()</argument_list></call><op:operator pos:line="134" pos:column="44">.</op:operator><call><name pos:line="134" pos:column="45">setCursor</name><argument_list pos:line="134" pos:column="54">(<argument><expr><name><name pos:line="134" pos:column="55">DragSource</name><op:operator pos:line="134" pos:column="65">.</op:operator><name pos:line="134" pos:column="66">DefaultMoveDrop</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then> <else pos:line="135" pos:column="15">else <block pos:line="135" pos:column="20">{
                <expr_stmt><expr><call><name><name pos:line="136" pos:column="17">dsde</name><op:operator pos:line="136" pos:column="21">.</op:operator><name pos:line="136" pos:column="22">getDragSourceContext</name></name><argument_list pos:line="136" pos:column="42">()</argument_list></call><op:operator pos:line="136" pos:column="44">.</op:operator><call><name pos:line="136" pos:column="45">setCursor</name><argument_list pos:line="136" pos:column="54">(<argument><expr><name><name pos:line="136" pos:column="55">DragSource</name><op:operator pos:line="136" pos:column="65">.</op:operator><name pos:line="136" pos:column="66">DefaultMoveNoDrop</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
        }</block></else></if>
    }</block></function>

    <function><type><specifier pos:line="141" pos:column="5">public</specifier> <specifier pos:line="141" pos:column="12">final</specifier> <name pos:line="141" pos:column="18">void</name></type> <name pos:line="141" pos:column="23">dropActionChanged</name><parameter_list pos:line="141" pos:column="40">(<param><decl><type><name pos:line="141" pos:column="41">DragSourceDragEvent</name></type> <name pos:line="141" pos:column="61">dsde</name></decl></param>)</parameter_list> <block pos:line="141" pos:column="67">{
        <decl_stmt><decl><type><name pos:line="142" pos:column="9">int</name></type> <name pos:line="142" pos:column="13">action</name> <init pos:line="142" pos:column="20">= <expr><call><name><name pos:line="142" pos:column="22">dsde</name><op:operator pos:line="142" pos:column="26">.</op:operator><name pos:line="142" pos:column="27">getDropAction</name></name><argument_list pos:line="142" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if pos:line="143" pos:column="9">if <condition pos:line="143" pos:column="12">(<expr><name pos:line="143" pos:column="13">action</name> <op:operator pos:line="143" pos:column="20">==</op:operator> <name><name pos:line="143" pos:column="23">DnDConstants</name><op:operator pos:line="143" pos:column="35">.</op:operator><name pos:line="143" pos:column="36">ACTION_COPY</name></name></expr>)</condition><then pos:line="143" pos:column="48"> <block pos:line="143" pos:column="49">{
            <expr_stmt><expr><call><name><name pos:line="144" pos:column="13">dsde</name><op:operator pos:line="144" pos:column="17">.</op:operator><name pos:line="144" pos:column="18">getDragSourceContext</name></name><argument_list pos:line="144" pos:column="38">()</argument_list></call><op:operator pos:line="144" pos:column="40">.</op:operator><call><name pos:line="144" pos:column="41">setCursor</name><argument_list pos:line="144" pos:column="50">(<argument><expr><name><name pos:line="144" pos:column="51">DragSource</name><op:operator pos:line="144" pos:column="61">.</op:operator><name pos:line="144" pos:column="62">DefaultCopyDrop</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then> <else pos:line="145" pos:column="11">else <block pos:line="145" pos:column="16">{
            <if pos:line="146" pos:column="13">if <condition pos:line="146" pos:column="16">(<expr><name pos:line="146" pos:column="17">action</name> <op:operator pos:line="146" pos:column="24">==</op:operator> <name><name pos:line="146" pos:column="27">DnDConstants</name><op:operator pos:line="146" pos:column="39">.</op:operator><name pos:line="146" pos:column="40">ACTION_MOVE</name></name></expr>)</condition><then pos:line="146" pos:column="52"> <block pos:line="146" pos:column="53">{
                <expr_stmt><expr><call><name><name pos:line="147" pos:column="17">dsde</name><op:operator pos:line="147" pos:column="21">.</op:operator><name pos:line="147" pos:column="22">getDragSourceContext</name></name><argument_list pos:line="147" pos:column="42">()</argument_list></call><op:operator pos:line="147" pos:column="44">.</op:operator><call><name pos:line="147" pos:column="45">setCursor</name><argument_list pos:line="147" pos:column="54">(<argument><expr><name><name pos:line="147" pos:column="55">DragSource</name><op:operator pos:line="147" pos:column="65">.</op:operator><name pos:line="147" pos:column="66">DefaultMoveDrop</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then> <else pos:line="148" pos:column="15">else <block pos:line="148" pos:column="20">{
                <expr_stmt><expr><call><name><name pos:line="149" pos:column="17">dsde</name><op:operator pos:line="149" pos:column="21">.</op:operator><name pos:line="149" pos:column="22">getDragSourceContext</name></name><argument_list pos:line="149" pos:column="42">()</argument_list></call><op:operator pos:line="149" pos:column="44">.</op:operator><call><name pos:line="149" pos:column="45">setCursor</name><argument_list pos:line="149" pos:column="54">(<argument><expr><name><name pos:line="149" pos:column="55">DragSource</name><op:operator pos:line="149" pos:column="65">.</op:operator><name pos:line="149" pos:column="66">DefaultMoveNoDrop</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
        }</block></else></if>
    }</block></function>

    <function><type><specifier pos:line="154" pos:column="5">public</specifier> <specifier pos:line="154" pos:column="12">final</specifier> <name pos:line="154" pos:column="18">void</name></type> <name pos:line="154" pos:column="23">dragExit</name><parameter_list pos:line="154" pos:column="31">(<param><decl><type><name pos:line="154" pos:column="32">DragSourceEvent</name></type> <name pos:line="154" pos:column="48">dse</name></decl></param>)</parameter_list> <block pos:line="154" pos:column="53">{
        <expr_stmt><expr><call><name><name pos:line="155" pos:column="9">dse</name><op:operator pos:line="155" pos:column="12">.</op:operator><name pos:line="155" pos:column="13">getDragSourceContext</name></name><argument_list pos:line="155" pos:column="33">()</argument_list></call><op:operator pos:line="155" pos:column="35">.</op:operator><call><name pos:line="155" pos:column="36">setCursor</name><argument_list pos:line="155" pos:column="45">(<argument><expr><name><name pos:line="155" pos:column="46">DragSource</name><op:operator pos:line="155" pos:column="56">.</op:operator><name pos:line="155" pos:column="57">DefaultMoveNoDrop</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="block" pos:line="158" pos:column="5">/* Methods for DragGestureListener */</comment>
    <function><type><specifier pos:line="159" pos:column="5">public</specifier> <specifier pos:line="159" pos:column="12">final</specifier> <name pos:line="159" pos:column="18">void</name></type> <name pos:line="159" pos:column="23">dragGestureRecognized</name><parameter_list pos:line="159" pos:column="44">(<param><decl><type><name pos:line="159" pos:column="45">DragGestureEvent</name></type> <name pos:line="159" pos:column="62">dge</name></decl></param>)</parameter_list> <block pos:line="159" pos:column="67">{
        <decl_stmt><decl><type><name pos:line="160" pos:column="9">TreePath</name></type> <name pos:line="160" pos:column="18">path</name> <init pos:line="160" pos:column="23">= <expr><call><name pos:line="160" pos:column="25">getTree</name><argument_list pos:line="160" pos:column="32">()</argument_list></call><op:operator pos:line="160" pos:column="34">.</op:operator><call><name pos:line="160" pos:column="35">getSelectionPath</name><argument_list pos:line="160" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if pos:line="161" pos:column="9">if <condition pos:line="161" pos:column="12">(<expr><name pos:line="161" pos:column="13">path</name> <op:operator pos:line="161" pos:column="18">!=</op:operator> <lit:literal type="null" pos:line="161" pos:column="21">null</lit:literal></expr>)</condition><then pos:line="161" pos:column="26"> <block pos:line="161" pos:column="27">{
            <expr_stmt><expr><name pos:line="162" pos:column="13">draggedNode</name> <op:operator pos:line="162" pos:column="25">=</op:operator> <op:operator pos:line="162" pos:column="27">(</op:operator><name pos:line="162" pos:column="28">DefaultMutableTreeNode</name><op:operator pos:line="162" pos:column="50">)</op:operator> <call><name><name pos:line="162" pos:column="52">path</name><op:operator pos:line="162" pos:column="56">.</op:operator><name pos:line="162" pos:column="57">getLastPathComponent</name></name><argument_list pos:line="162" pos:column="77">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="163" pos:column="13">draggedNodeParent</name> <op:operator pos:line="163" pos:column="31">=</op:operator> <op:operator pos:line="163" pos:column="33">(</op:operator><name pos:line="163" pos:column="34">DefaultMutableTreeNode</name><op:operator pos:line="163" pos:column="56">)</op:operator> <call><name><name pos:line="163" pos:column="58">draggedNode</name><op:operator pos:line="163" pos:column="69">.</op:operator><name pos:line="163" pos:column="70">getParent</name></name><argument_list pos:line="163" pos:column="79">()</argument_list></call></expr>;</expr_stmt>
            <if pos:line="164" pos:column="13">if <condition pos:line="164" pos:column="16">(<expr><name pos:line="164" pos:column="17">drawImage</name></expr>)</condition><then pos:line="164" pos:column="27"> <block pos:line="164" pos:column="28">{
                <decl_stmt><decl><type><name pos:line="165" pos:column="17">Rectangle</name></type> <name pos:line="165" pos:column="27">pathBounds</name> <init pos:line="165" pos:column="38">= <expr><call><name pos:line="165" pos:column="40">getTree</name><argument_list pos:line="165" pos:column="47">()</argument_list></call><op:operator pos:line="165" pos:column="49">.</op:operator><call><name pos:line="165" pos:column="50">getPathBounds</name><argument_list pos:line="165" pos:column="63">(<argument><expr><name pos:line="165" pos:column="64">path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="165" pos:column="71">//getpathbounds of selectionpath</comment>
                <decl_stmt><decl><type><name pos:line="166" pos:column="17">JComponent</name></type> <name pos:line="166" pos:column="28">lbl</name> <init pos:line="166" pos:column="32">= <expr><op:operator pos:line="166" pos:column="34">(</op:operator><name pos:line="166" pos:column="35">JComponent</name><op:operator pos:line="166" pos:column="45">)</op:operator> <call><name pos:line="166" pos:column="47">getTree</name><argument_list pos:line="166" pos:column="54">()</argument_list></call><op:operator pos:line="166" pos:column="56">.</op:operator><call><name pos:line="166" pos:column="57">getCellRenderer</name><argument_list pos:line="166" pos:column="72">()</argument_list></call><op:operator pos:line="166" pos:column="74">.</op:operator><call><name pos:line="166" pos:column="75">getTreeCellRendererComponent</name><argument_list pos:line="166" pos:column="103">(<argument><expr><call><name pos:line="166" pos:column="104">getTree</name><argument_list pos:line="166" pos:column="111">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="166" pos:column="115">draggedNode</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="166" pos:column="128">false</lit:literal></expr></argument>, <argument><expr><call><name pos:line="166" pos:column="135">getTree</name><argument_list pos:line="166" pos:column="142">()</argument_list></call><op:operator pos:line="166" pos:column="144">.</op:operator><call><name pos:line="166" pos:column="145">isExpanded</name><argument_list pos:line="166" pos:column="155">(<argument><expr><name pos:line="166" pos:column="156">path</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="166" pos:column="163">(</op:operator><op:operator pos:line="166" pos:column="164">(</op:operator><name pos:line="166" pos:column="165">DefaultTreeModel</name><op:operator pos:line="166" pos:column="181">)</op:operator> <call><name pos:line="166" pos:column="183">getTree</name><argument_list pos:line="166" pos:column="190">()</argument_list></call><op:operator pos:line="166" pos:column="192">.</op:operator><call><name pos:line="166" pos:column="193">getModel</name><argument_list pos:line="166" pos:column="201">()</argument_list></call><op:operator pos:line="166" pos:column="203">)</op:operator><op:operator pos:line="166" pos:column="204">.</op:operator><call><name pos:line="166" pos:column="205">isLeaf</name><argument_list pos:line="166" pos:column="211">(<argument><expr><call><name><name pos:line="166" pos:column="212">path</name><op:operator pos:line="166" pos:column="216">.</op:operator><name pos:line="166" pos:column="217">getLastPathComponent</name></name><argument_list pos:line="166" pos:column="237">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="166" pos:column="242">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="166" pos:column="245">false</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt><comment type="line" pos:line="166" pos:column="252">//returning the label</comment>
                <expr_stmt><expr><call><name><name pos:line="167" pos:column="17">lbl</name><op:operator pos:line="167" pos:column="20">.</op:operator><name pos:line="167" pos:column="21">setBounds</name></name><argument_list pos:line="167" pos:column="30">(<argument><expr><name pos:line="167" pos:column="31">pathBounds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><comment type="line" pos:line="167" pos:column="43">//setting bounds to lbl</comment>
                <expr_stmt><expr><name pos:line="168" pos:column="17">image</name> <op:operator pos:line="168" pos:column="23">=</op:operator> <op:operator pos:line="168" pos:column="25">new</op:operator> <call><name pos:line="168" pos:column="29">BufferedImage</name><argument_list pos:line="168" pos:column="42">(<argument><expr><call><name><name pos:line="168" pos:column="43">lbl</name><op:operator pos:line="168" pos:column="46">.</op:operator><name pos:line="168" pos:column="47">getWidth</name></name><argument_list pos:line="168" pos:column="55">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="168" pos:column="59">lbl</name><op:operator pos:line="168" pos:column="62">.</op:operator><name pos:line="168" pos:column="63">getHeight</name></name><argument_list pos:line="168" pos:column="72">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="168" pos:column="76">java</name><op:operator pos:line="168" pos:column="80">.</op:operator><name pos:line="168" pos:column="81">awt</name><op:operator pos:line="168" pos:column="84">.</op:operator><name pos:line="168" pos:column="85">image</name><op:operator pos:line="168" pos:column="90">.</op:operator><name pos:line="168" pos:column="91">BufferedImage</name><op:operator pos:line="168" pos:column="104">.</op:operator><name pos:line="168" pos:column="105">TYPE_INT_ARGB_PRE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt><comment type="line" pos:line="168" pos:column="124">//buffered image reference passing the label's ht and width</comment>
                <decl_stmt><decl><type><name pos:line="169" pos:column="17">Graphics2D</name></type> <name pos:line="169" pos:column="28">graphics</name> <init pos:line="169" pos:column="37">= <expr><call><name><name pos:line="169" pos:column="39">image</name><op:operator pos:line="169" pos:column="44">.</op:operator><name pos:line="169" pos:column="45">createGraphics</name></name><argument_list pos:line="169" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt><comment type="line" pos:line="169" pos:column="62">//creating the graphics for buffered image</comment>
                <expr_stmt><expr><call><name><name pos:line="170" pos:column="17">graphics</name><op:operator pos:line="170" pos:column="25">.</op:operator><name pos:line="170" pos:column="26">setComposite</name></name><argument_list pos:line="170" pos:column="38">(<argument><expr><call><name><name pos:line="170" pos:column="39">AlphaComposite</name><op:operator pos:line="170" pos:column="53">.</op:operator><name pos:line="170" pos:column="54">getInstance</name></name><argument_list pos:line="170" pos:column="65">(<argument><expr><name><name pos:line="170" pos:column="66">AlphaComposite</name><op:operator pos:line="170" pos:column="80">.</op:operator><name pos:line="170" pos:column="81">SRC_OVER</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="170" pos:column="91">0.5f</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="170" pos:column="105">//Sets the Composite for the Graphics2D context</comment>
                <expr_stmt><expr><call><name><name pos:line="171" pos:column="17">lbl</name><op:operator pos:line="171" pos:column="20">.</op:operator><name pos:line="171" pos:column="21">setOpaque</name></name><argument_list pos:line="171" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="171" pos:column="31">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="172" pos:column="17">lbl</name><op:operator pos:line="172" pos:column="20">.</op:operator><name pos:line="172" pos:column="21">paint</name></name><argument_list pos:line="172" pos:column="26">(<argument><expr><name pos:line="172" pos:column="27">graphics</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:line="172" pos:column="38">//painting the graphics to label</comment>
                <expr_stmt><expr><call><name><name pos:line="173" pos:column="17">graphics</name><op:operator pos:line="173" pos:column="25">.</op:operator><name pos:line="173" pos:column="26">dispose</name></name><argument_list pos:line="173" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="174" pos:column="17">getTree</name><argument_list pos:line="174" pos:column="24">()</argument_list></call><op:operator pos:line="174" pos:column="26">.</op:operator><call><name pos:line="174" pos:column="27">getExplorer</name><argument_list pos:line="174" pos:column="38">()</argument_list></call><op:operator pos:line="174" pos:column="40">.</op:operator><call><name><name pos:line="174" pos:column="41">jLabelInternalFrameInformationText</name><op:operator pos:line="174" pos:column="75">.</op:operator><name pos:line="174" pos:column="76">setText</name></name><argument_list pos:line="174" pos:column="83">(<argument><expr><call><name pos:line="174" pos:column="84">getTree</name><argument_list pos:line="174" pos:column="91">()</argument_list></call><op:operator pos:line="174" pos:column="93">.</op:operator><call><name pos:line="174" pos:column="94">getExplorer</name><argument_list pos:line="174" pos:column="105">()</argument_list></call><op:operator pos:line="174" pos:column="107">.</op:operator><call><name pos:line="174" pos:column="108">getResourceBundle</name><argument_list pos:line="174" pos:column="125">()</argument_list></call><op:operator pos:line="174" pos:column="127">.</op:operator><call><name pos:line="174" pos:column="128">getString</name><argument_list pos:line="174" pos:column="137">(<argument><expr><lit:literal type="string" pos:line="174" pos:column="138">"menu.edit.movemessage"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="175" pos:column="17">getTree</name><argument_list pos:line="175" pos:column="24">()</argument_list></call><op:operator pos:line="175" pos:column="26">.</op:operator><call><name pos:line="175" pos:column="27">getExplorer</name><argument_list pos:line="175" pos:column="38">()</argument_list></call><op:operator pos:line="175" pos:column="40">.</op:operator><call><name pos:line="175" pos:column="41">getActionHandler</name><argument_list pos:line="175" pos:column="57">()</argument_list></call><op:operator pos:line="175" pos:column="59">.</op:operator><call><name pos:line="175" pos:column="60">moveToClipboard</name><argument_list pos:line="175" pos:column="75">()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <expr_stmt><expr><call><name><name pos:line="177" pos:column="13">dragSource</name><op:operator pos:line="177" pos:column="23">.</op:operator><name pos:line="177" pos:column="24">startDrag</name></name><argument_list pos:line="177" pos:column="33">(<argument><expr><name pos:line="177" pos:column="34">dge</name></expr></argument>, <argument><expr><name><name pos:line="177" pos:column="39">DragSource</name><op:operator pos:line="177" pos:column="49">.</op:operator><name pos:line="177" pos:column="50">DefaultMoveNoDrop</name></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="69">image</name></expr></argument>, <argument><expr><op:operator pos:line="177" pos:column="76">new</op:operator> <call><name pos:line="177" pos:column="80">Point</name><argument_list pos:line="177" pos:column="85">(<argument><expr><lit:literal type="number" pos:line="177" pos:column="86">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="177" pos:column="89">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="177" pos:column="93">new</op:operator> <call><name pos:line="177" pos:column="97">XincoTransferableNode</name><argument_list pos:line="177" pos:column="118">(<argument><expr><name pos:line="177" pos:column="119">draggedNode</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="177" pos:column="133">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
    }</block></function>

    <comment type="block" pos:line="181" pos:column="5">/* Methods for DropTargetListener */</comment>
    <function><type><specifier pos:line="182" pos:column="5">public</specifier> <specifier pos:line="182" pos:column="12">final</specifier> <name pos:line="182" pos:column="18">void</name></type> <name pos:line="182" pos:column="23">dragEnter</name><parameter_list pos:line="182" pos:column="32">(<param><decl><type><name pos:line="182" pos:column="33">DropTargetDragEvent</name></type> <name pos:line="182" pos:column="53">dtde</name></decl></param>)</parameter_list> <block pos:line="182" pos:column="59">{
        <decl_stmt><decl><type><name pos:line="183" pos:column="9">Point</name></type> <name pos:line="183" pos:column="15">pt</name> <init pos:line="183" pos:column="18">= <expr><call><name><name pos:line="183" pos:column="20">dtde</name><op:operator pos:line="183" pos:column="24">.</op:operator><name pos:line="183" pos:column="25">getLocation</name></name><argument_list pos:line="183" pos:column="36">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="184" pos:column="9">int</name></type> <name pos:line="184" pos:column="13">action</name> <init pos:line="184" pos:column="20">= <expr><call><name><name pos:line="184" pos:column="22">dtde</name><op:operator pos:line="184" pos:column="26">.</op:operator><name pos:line="184" pos:column="27">getDropAction</name></name><argument_list pos:line="184" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if pos:line="185" pos:column="9">if <condition pos:line="185" pos:column="12">(<expr><name pos:line="185" pos:column="13">drawImage</name></expr>)</condition><then pos:line="185" pos:column="23"> <block pos:line="185" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="186" pos:column="13">paintImage</name><argument_list pos:line="186" pos:column="23">(<argument><expr><name pos:line="186" pos:column="24">pt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        <if pos:line="188" pos:column="9">if <condition pos:line="188" pos:column="12">(<expr><call><name pos:line="188" pos:column="13">canPerformAction</name><argument_list pos:line="188" pos:column="29">(<argument><expr><call><name pos:line="188" pos:column="30">getTree</name><argument_list pos:line="188" pos:column="37">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="188" pos:column="41">draggedNode</name></expr></argument>, <argument><expr><name pos:line="188" pos:column="54">action</name></expr></argument>, <argument><expr><name pos:line="188" pos:column="62">pt</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="188" pos:column="66"> <block pos:line="188" pos:column="67">{
            <expr_stmt><expr><call><name><name pos:line="189" pos:column="13">dtde</name><op:operator pos:line="189" pos:column="17">.</op:operator><name pos:line="189" pos:column="18">acceptDrag</name></name><argument_list pos:line="189" pos:column="28">(<argument><expr><name pos:line="189" pos:column="29">action</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then> <else pos:line="190" pos:column="11">else <block pos:line="190" pos:column="16">{
            <expr_stmt><expr><call><name><name pos:line="191" pos:column="13">dtde</name><op:operator pos:line="191" pos:column="17">.</op:operator><name pos:line="191" pos:column="18">rejectDrag</name></name><argument_list pos:line="191" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
        }</block></else></if>
    }</block></function>

    <function><type><specifier pos:line="195" pos:column="5">public</specifier> <specifier pos:line="195" pos:column="12">final</specifier> <name pos:line="195" pos:column="18">void</name></type> <name pos:line="195" pos:column="23">dragExit</name><parameter_list pos:line="195" pos:column="31">(<param><decl><type><name pos:line="195" pos:column="32">DropTargetEvent</name></type> <name pos:line="195" pos:column="48">dte</name></decl></param>)</parameter_list> <block pos:line="195" pos:column="53">{
        <if pos:line="196" pos:column="9">if <condition pos:line="196" pos:column="12">(<expr><name pos:line="196" pos:column="13">drawImage</name></expr>)</condition><then pos:line="196" pos:column="23"> <block pos:line="196" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="197" pos:column="13">clearImage</name><argument_list pos:line="197" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
    }</block></function>

    <function><type><specifier pos:line="201" pos:column="5">public</specifier> <specifier pos:line="201" pos:column="12">final</specifier> <name pos:line="201" pos:column="18">void</name></type> <name pos:line="201" pos:column="23">dragOver</name><parameter_list pos:line="201" pos:column="31">(<param><decl><type><name pos:line="201" pos:column="32">DropTargetDragEvent</name></type> <name pos:line="201" pos:column="52">dtde</name></decl></param>)</parameter_list> <block pos:line="201" pos:column="58">{
        <decl_stmt><decl><type><name pos:line="202" pos:column="9">Point</name></type> <name pos:line="202" pos:column="15">pt</name> <init pos:line="202" pos:column="18">= <expr><call><name><name pos:line="202" pos:column="20">dtde</name><op:operator pos:line="202" pos:column="24">.</op:operator><name pos:line="202" pos:column="25">getLocation</name></name><argument_list pos:line="202" pos:column="36">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="203" pos:column="9">int</name></type> <name pos:line="203" pos:column="13">action</name> <init pos:line="203" pos:column="20">= <expr><call><name><name pos:line="203" pos:column="22">dtde</name><op:operator pos:line="203" pos:column="26">.</op:operator><name pos:line="203" pos:column="27">getDropAction</name></name><argument_list pos:line="203" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name pos:line="204" pos:column="9">getTree</name><argument_list pos:line="204" pos:column="16">()</argument_list></call><op:operator pos:line="204" pos:column="18">.</op:operator><call><name pos:line="204" pos:column="19">autoscroll</name><argument_list pos:line="204" pos:column="29">(<argument><expr><name pos:line="204" pos:column="30">pt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if pos:line="205" pos:column="9">if <condition pos:line="205" pos:column="12">(<expr><name pos:line="205" pos:column="13">drawImage</name></expr>)</condition><then pos:line="205" pos:column="23"> <block pos:line="205" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="206" pos:column="13">paintImage</name><argument_list pos:line="206" pos:column="23">(<argument><expr><name pos:line="206" pos:column="24">pt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        <if pos:line="208" pos:column="9">if <condition pos:line="208" pos:column="12">(<expr><call><name pos:line="208" pos:column="13">canPerformAction</name><argument_list pos:line="208" pos:column="29">(<argument><expr><call><name pos:line="208" pos:column="30">getTree</name><argument_list pos:line="208" pos:column="37">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="208" pos:column="41">draggedNode</name></expr></argument>, <argument><expr><name pos:line="208" pos:column="54">action</name></expr></argument>, <argument><expr><name pos:line="208" pos:column="62">pt</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="208" pos:column="66"> <block pos:line="208" pos:column="67">{
            <expr_stmt><expr><call><name><name pos:line="209" pos:column="13">dtde</name><op:operator pos:line="209" pos:column="17">.</op:operator><name pos:line="209" pos:column="18">acceptDrag</name></name><argument_list pos:line="209" pos:column="28">(<argument><expr><name pos:line="209" pos:column="29">action</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then> <else pos:line="210" pos:column="11">else <block pos:line="210" pos:column="16">{
            <expr_stmt><expr><call><name><name pos:line="211" pos:column="13">dtde</name><op:operator pos:line="211" pos:column="17">.</op:operator><name pos:line="211" pos:column="18">rejectDrag</name></name><argument_list pos:line="211" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
        }</block></else></if>
    }</block></function>

    <function><type><specifier pos:line="215" pos:column="5">public</specifier> <specifier pos:line="215" pos:column="12">final</specifier> <name pos:line="215" pos:column="18">void</name></type> <name pos:line="215" pos:column="23">dropActionChanged</name><parameter_list pos:line="215" pos:column="40">(<param><decl><type><name pos:line="215" pos:column="41">DropTargetDragEvent</name></type> <name pos:line="215" pos:column="61">dtde</name></decl></param>)</parameter_list> <block pos:line="215" pos:column="67">{
        <decl_stmt><decl><type><name pos:line="216" pos:column="9">Point</name></type> <name pos:line="216" pos:column="15">pt</name> <init pos:line="216" pos:column="18">= <expr><call><name><name pos:line="216" pos:column="20">dtde</name><op:operator pos:line="216" pos:column="24">.</op:operator><name pos:line="216" pos:column="25">getLocation</name></name><argument_list pos:line="216" pos:column="36">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="217" pos:column="9">int</name></type> <name pos:line="217" pos:column="13">action</name> <init pos:line="217" pos:column="20">= <expr><call><name><name pos:line="217" pos:column="22">dtde</name><op:operator pos:line="217" pos:column="26">.</op:operator><name pos:line="217" pos:column="27">getDropAction</name></name><argument_list pos:line="217" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if pos:line="218" pos:column="9">if <condition pos:line="218" pos:column="12">(<expr><name pos:line="218" pos:column="13">drawImage</name></expr>)</condition><then pos:line="218" pos:column="23"> <block pos:line="218" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="219" pos:column="13">paintImage</name><argument_list pos:line="219" pos:column="23">(<argument><expr><name pos:line="219" pos:column="24">pt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        <if pos:line="221" pos:column="9">if <condition pos:line="221" pos:column="12">(<expr><call><name pos:line="221" pos:column="13">canPerformAction</name><argument_list pos:line="221" pos:column="29">(<argument><expr><call><name pos:line="221" pos:column="30">getTree</name><argument_list pos:line="221" pos:column="37">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="221" pos:column="41">draggedNode</name></expr></argument>, <argument><expr><name pos:line="221" pos:column="54">action</name></expr></argument>, <argument><expr><name pos:line="221" pos:column="62">pt</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="221" pos:column="66"> <block pos:line="221" pos:column="67">{
            <expr_stmt><expr><call><name><name pos:line="222" pos:column="13">dtde</name><op:operator pos:line="222" pos:column="17">.</op:operator><name pos:line="222" pos:column="18">acceptDrag</name></name><argument_list pos:line="222" pos:column="28">(<argument><expr><name pos:line="222" pos:column="29">action</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then> <else pos:line="223" pos:column="11">else <block pos:line="223" pos:column="16">{
            <expr_stmt><expr><call><name><name pos:line="224" pos:column="13">dtde</name><op:operator pos:line="224" pos:column="17">.</op:operator><name pos:line="224" pos:column="18">rejectDrag</name></name><argument_list pos:line="224" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
        }</block></else></if>
    }</block></function>

    <function><type><specifier pos:line="228" pos:column="5">public</specifier> <specifier pos:line="228" pos:column="12">final</specifier> <name pos:line="228" pos:column="18">void</name></type> <name pos:line="228" pos:column="23">drop</name><parameter_list pos:line="228" pos:column="27">(<param><decl><type><name pos:line="228" pos:column="28">DropTargetDropEvent</name></type> <name pos:line="228" pos:column="48">dtde</name></decl></param>)</parameter_list> <block pos:line="228" pos:column="54">{
        <try pos:line="229" pos:column="9">try <block pos:line="229" pos:column="13">{
            <if pos:line="230" pos:column="13">if <condition pos:line="230" pos:column="16">(<expr><name pos:line="230" pos:column="17">drawImage</name></expr>)</condition><then pos:line="230" pos:column="27"> <block pos:line="230" pos:column="28">{
                <expr_stmt><expr><call><name pos:line="231" pos:column="17">clearImage</name><argument_list pos:line="231" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <decl_stmt><decl><type><name pos:line="233" pos:column="13">int</name></type> <name pos:line="233" pos:column="17">action</name> <init pos:line="233" pos:column="24">= <expr><call><name><name pos:line="233" pos:column="26">dtde</name><op:operator pos:line="233" pos:column="30">.</op:operator><name pos:line="233" pos:column="31">getDropAction</name></name><argument_list pos:line="233" pos:column="44">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="234" pos:column="13">Transferable</name></type> <name pos:line="234" pos:column="26">transferable</name> <init pos:line="234" pos:column="39">= <expr><call><name><name pos:line="234" pos:column="41">dtde</name><op:operator pos:line="234" pos:column="45">.</op:operator><name pos:line="234" pos:column="46">getTransferable</name></name><argument_list pos:line="234" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="235" pos:column="13">Point</name></type> <name pos:line="235" pos:column="19">pt</name> <init pos:line="235" pos:column="22">= <expr><call><name><name pos:line="235" pos:column="24">dtde</name><op:operator pos:line="235" pos:column="28">.</op:operator><name pos:line="235" pos:column="29">getLocation</name></name><argument_list pos:line="235" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="236" pos:column="13">if <condition pos:line="236" pos:column="16">(<expr><call><name><name pos:line="236" pos:column="17">transferable</name><op:operator pos:line="236" pos:column="29">.</op:operator><name pos:line="236" pos:column="30">isDataFlavorSupported</name></name><argument_list pos:line="236" pos:column="51">(<argument><expr><name><name pos:line="236" pos:column="52">XincoTransferableNode</name><op:operator pos:line="236" pos:column="73">.</op:operator><name pos:line="236" pos:column="74">NODE_FLAVOR</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="236" pos:column="87">&amp;&amp;</op:operator> <call><name pos:line="236" pos:column="90">canPerformAction</name><argument_list pos:line="236" pos:column="106">(<argument><expr><call><name pos:line="236" pos:column="107">getTree</name><argument_list pos:line="236" pos:column="114">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="236" pos:column="118">draggedNode</name></expr></argument>, <argument><expr><name pos:line="236" pos:column="131">action</name></expr></argument>, <argument><expr><name pos:line="236" pos:column="139">pt</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="236" pos:column="143"> <block pos:line="236" pos:column="144">{
                <decl_stmt><decl><type><name pos:line="237" pos:column="17">TreePath</name></type> <name pos:line="237" pos:column="26">pathTarget</name> <init pos:line="237" pos:column="37">= <expr><call><name pos:line="237" pos:column="39">getTree</name><argument_list pos:line="237" pos:column="46">()</argument_list></call><op:operator pos:line="237" pos:column="48">.</op:operator><call><name pos:line="237" pos:column="49">getPathForLocation</name><argument_list pos:line="237" pos:column="67">(<argument><expr><name><name pos:line="237" pos:column="68">pt</name><op:operator pos:line="237" pos:column="70">.</op:operator><name pos:line="237" pos:column="71">x</name></name></expr></argument>, <argument><expr><name><name pos:line="237" pos:column="74">pt</name><op:operator pos:line="237" pos:column="76">.</op:operator><name pos:line="237" pos:column="77">y</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="238" pos:column="17">DefaultMutableTreeNode</name></type> <name pos:line="238" pos:column="40">node</name> <init pos:line="238" pos:column="45">= <expr><op:operator pos:line="238" pos:column="47">(</op:operator><name pos:line="238" pos:column="48">DefaultMutableTreeNode</name><op:operator pos:line="238" pos:column="70">)</op:operator> <call><name><name pos:line="238" pos:column="72">transferable</name><op:operator pos:line="238" pos:column="84">.</op:operator><name pos:line="238" pos:column="85">getTransferData</name></name><argument_list pos:line="238" pos:column="100">(<argument><expr><name><name pos:line="238" pos:column="101">XincoTransferableNode</name><op:operator pos:line="238" pos:column="122">.</op:operator><name pos:line="238" pos:column="123">NODE_FLAVOR</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="239" pos:column="17">DefaultMutableTreeNode</name></type> <name pos:line="239" pos:column="40">newParentNode</name> <init pos:line="239" pos:column="54">= <expr><op:operator pos:line="239" pos:column="56">(</op:operator><name pos:line="239" pos:column="57">DefaultMutableTreeNode</name><op:operator pos:line="239" pos:column="79">)</op:operator> <call><name><name pos:line="239" pos:column="81">pathTarget</name><op:operator pos:line="239" pos:column="91">.</op:operator><name pos:line="239" pos:column="92">getLastPathComponent</name></name><argument_list pos:line="239" pos:column="112">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name pos:line="240" pos:column="17">getTree</name><argument_list pos:line="240" pos:column="24">()</argument_list></call><op:operator pos:line="240" pos:column="26">.</op:operator><call><name pos:line="240" pos:column="27">setTargetTreeNode</name><argument_list pos:line="240" pos:column="44">(<argument><expr><op:operator pos:line="240" pos:column="45">(</op:operator><name pos:line="240" pos:column="46">XincoMutableTreeNode</name><op:operator pos:line="240" pos:column="66">)</op:operator> <name pos:line="240" pos:column="68">newParentNode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if pos:line="241" pos:column="17">if <condition pos:line="241" pos:column="20">(<expr><call><name pos:line="241" pos:column="21">executeDrop</name><argument_list pos:line="241" pos:column="32">(<argument><expr><call><name pos:line="241" pos:column="33">getTree</name><argument_list pos:line="241" pos:column="40">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="241" pos:column="44">node</name></expr></argument>, <argument><expr><name pos:line="241" pos:column="50">newParentNode</name></expr></argument>, <argument><expr><name pos:line="241" pos:column="65">action</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="241" pos:column="73"> <block pos:line="241" pos:column="74">{
                    <expr_stmt><expr><call><name><name pos:line="242" pos:column="21">dtde</name><op:operator pos:line="242" pos:column="25">.</op:operator><name pos:line="242" pos:column="26">acceptDrop</name></name><argument_list pos:line="242" pos:column="36">(<argument><expr><name pos:line="242" pos:column="37">action</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="243" pos:column="21">dtde</name><op:operator pos:line="243" pos:column="25">.</op:operator><name pos:line="243" pos:column="26">dropComplete</name></name><argument_list pos:line="243" pos:column="38">(<argument><expr><lit:literal type="boolean" pos:line="243" pos:column="39">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <return pos:line="244" pos:column="21">return;</return>
                }</block></then></if>
            }</block></then></if>
            <expr_stmt><expr><call><name><name pos:line="247" pos:column="13">dtde</name><op:operator pos:line="247" pos:column="17">.</op:operator><name pos:line="247" pos:column="18">rejectDrop</name></name><argument_list pos:line="247" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="248" pos:column="13">dtde</name><op:operator pos:line="248" pos:column="17">.</op:operator><name pos:line="248" pos:column="18">dropComplete</name></name><argument_list pos:line="248" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="248" pos:column="31">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block> <catch pos:line="249" pos:column="11">catch <parameter_list pos:line="249" pos:column="17">(<param><decl><type><name pos:line="249" pos:column="18">Exception</name></type> <name pos:line="249" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="249" pos:column="31">{
            <expr_stmt><expr><call><name><name pos:line="250" pos:column="13">System</name><op:operator pos:line="250" pos:column="19">.</op:operator><name pos:line="250" pos:column="20">out</name><op:operator pos:line="250" pos:column="23">.</op:operator><name pos:line="250" pos:column="24">println</name></name><argument_list pos:line="250" pos:column="31">(<argument><expr><name pos:line="250" pos:column="32">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="251" pos:column="13">dtde</name><op:operator pos:line="251" pos:column="17">.</op:operator><name pos:line="251" pos:column="18">rejectDrop</name></name><argument_list pos:line="251" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="252" pos:column="13">dtde</name><op:operator pos:line="252" pos:column="17">.</op:operator><name pos:line="252" pos:column="18">dropComplete</name></name><argument_list pos:line="252" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="252" pos:column="31">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></catch></try>
    }</block></function>

    <function><type><specifier pos:line="256" pos:column="5">private</specifier> <specifier pos:line="256" pos:column="13">final</specifier> <name pos:line="256" pos:column="19">void</name></type> <name pos:line="256" pos:column="24">paintImage</name><parameter_list pos:line="256" pos:column="34">(<param><decl><type><name pos:line="256" pos:column="35">Point</name></type> <name pos:line="256" pos:column="41">pt</name></decl></param>)</parameter_list> <block pos:line="256" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="257" pos:column="9">getTree</name><argument_list pos:line="257" pos:column="16">()</argument_list></call><op:operator pos:line="257" pos:column="18">.</op:operator><call><name pos:line="257" pos:column="19">paintImmediately</name><argument_list pos:line="257" pos:column="35">(<argument><expr><call><name><name pos:line="257" pos:column="36">rect2D</name><op:operator pos:line="257" pos:column="42">.</op:operator><name pos:line="257" pos:column="43">getBounds</name></name><argument_list pos:line="257" pos:column="52">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="258" pos:column="9">rect2D</name><op:operator pos:line="258" pos:column="15">.</op:operator><name pos:line="258" pos:column="16">setRect</name></name><argument_list pos:line="258" pos:column="23">(<argument><expr><op:operator pos:line="258" pos:column="24">(</op:operator><name pos:line="258" pos:column="25">int</name><op:operator pos:line="258" pos:column="28">)</op:operator> <call><name><name pos:line="258" pos:column="30">pt</name><op:operator pos:line="258" pos:column="32">.</op:operator><name pos:line="258" pos:column="33">getX</name></name><argument_list pos:line="258" pos:column="37">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="258" pos:column="41">(</op:operator><name pos:line="258" pos:column="42">int</name><op:operator pos:line="258" pos:column="45">)</op:operator> <call><name><name pos:line="258" pos:column="47">pt</name><op:operator pos:line="258" pos:column="49">.</op:operator><name pos:line="258" pos:column="50">getY</name></name><argument_list pos:line="258" pos:column="54">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="258" pos:column="58">image</name><op:operator pos:line="258" pos:column="63">.</op:operator><name pos:line="258" pos:column="64">getWidth</name></name><argument_list pos:line="258" pos:column="72">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="258" pos:column="76">image</name><op:operator pos:line="258" pos:column="81">.</op:operator><name pos:line="258" pos:column="82">getHeight</name></name><argument_list pos:line="258" pos:column="91">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="259" pos:column="9">getTree</name><argument_list pos:line="259" pos:column="16">()</argument_list></call><op:operator pos:line="259" pos:column="18">.</op:operator><call><name pos:line="259" pos:column="19">getGraphics</name><argument_list pos:line="259" pos:column="30">()</argument_list></call><op:operator pos:line="259" pos:column="32">.</op:operator><call><name pos:line="259" pos:column="33">drawImage</name><argument_list pos:line="259" pos:column="42">(<argument><expr><name pos:line="259" pos:column="43">image</name></expr></argument>, <argument><expr><op:operator pos:line="259" pos:column="50">(</op:operator><name pos:line="259" pos:column="51">int</name><op:operator pos:line="259" pos:column="54">)</op:operator> <call><name><name pos:line="259" pos:column="56">pt</name><op:operator pos:line="259" pos:column="58">.</op:operator><name pos:line="259" pos:column="59">getX</name></name><argument_list pos:line="259" pos:column="63">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="259" pos:column="67">(</op:operator><name pos:line="259" pos:column="68">int</name><op:operator pos:line="259" pos:column="71">)</op:operator> <call><name><name pos:line="259" pos:column="73">pt</name><op:operator pos:line="259" pos:column="75">.</op:operator><name pos:line="259" pos:column="76">getY</name></name><argument_list pos:line="259" pos:column="80">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="259" pos:column="84">getTree</name><argument_list pos:line="259" pos:column="91">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier pos:line="262" pos:column="5">private</specifier> <specifier pos:line="262" pos:column="13">final</specifier> <name pos:line="262" pos:column="19">void</name></type> <name pos:line="262" pos:column="24">clearImage</name><parameter_list pos:line="262" pos:column="34">()</parameter_list> <block pos:line="262" pos:column="37">{
        <expr_stmt><expr><call><name pos:line="263" pos:column="9">getTree</name><argument_list pos:line="263" pos:column="16">()</argument_list></call><op:operator pos:line="263" pos:column="18">.</op:operator><call><name pos:line="263" pos:column="19">paintImmediately</name><argument_list pos:line="263" pos:column="35">(<argument><expr><call><name><name pos:line="263" pos:column="36">rect2D</name><op:operator pos:line="263" pos:column="42">.</op:operator><name pos:line="263" pos:column="43">getBounds</name></name><argument_list pos:line="263" pos:column="52">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function_decl><type><specifier pos:line="266" pos:column="5">protected</specifier> <specifier pos:line="266" pos:column="15">abstract</specifier> <name pos:line="266" pos:column="24">boolean</name></type> <name pos:line="266" pos:column="32">canPerformAction</name><parameter_list pos:line="266" pos:column="48">(<param><decl><type><name pos:line="266" pos:column="49">XincoJTree</name></type> <name pos:line="266" pos:column="60">target</name></decl></param>, <param><decl><type><name pos:line="266" pos:column="68">DefaultMutableTreeNode</name></type> <name pos:line="266" pos:column="91">draggedNode</name></decl></param>, <param><decl><type><name pos:line="266" pos:column="104">int</name></type> <name pos:line="266" pos:column="108">action</name></decl></param>, <param><decl><type><name pos:line="266" pos:column="116">Point</name></type> <name pos:line="266" pos:column="122">location</name></decl></param>)</parameter_list>;</function_decl>

    <function_decl><type><specifier pos:line="268" pos:column="5">protected</specifier> <specifier pos:line="268" pos:column="15">abstract</specifier> <name pos:line="268" pos:column="24">boolean</name></type> <name pos:line="268" pos:column="32">executeDrop</name><parameter_list pos:line="268" pos:column="43">(<param><decl><type><name pos:line="268" pos:column="44">XincoJTree</name></type> <name pos:line="268" pos:column="55">tree</name></decl></param>, <param><decl><type><name pos:line="268" pos:column="61">DefaultMutableTreeNode</name></type> <name pos:line="268" pos:column="84">draggedNode</name></decl></param>, <param><decl><type><name pos:line="268" pos:column="97">DefaultMutableTreeNode</name></type> <name pos:line="268" pos:column="120">newParentNode</name></decl></param>, <param><decl><type><name pos:line="268" pos:column="135">int</name></type> <name pos:line="268" pos:column="139">action</name></decl></param>)</parameter_list>;</function_decl>

    <function><type><specifier pos:line="270" pos:column="5">protected</specifier> <name pos:line="270" pos:column="15">XincoJTree</name></type> <name pos:line="270" pos:column="26">getTree</name><parameter_list pos:line="270" pos:column="33">()</parameter_list> <block pos:line="270" pos:column="36">{
        <return pos:line="271" pos:column="9">return <expr><name pos:line="271" pos:column="16">tree</name></expr>;</return>
    }</block></function>
}</block></class>

</unit>
