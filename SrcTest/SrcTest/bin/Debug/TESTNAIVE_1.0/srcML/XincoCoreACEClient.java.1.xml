<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\xinco\src\com\bluecubs\xinco\core\client\XincoCoreACEClient.java" pos:tabs="8"><comment type="block" format="javadoc" pos:line="1" pos:column="1">/**
 *Copyright 2009 blueCubs.com
 *
 *Licensed under the Apache License, Version 2.0 (the "License");
 *you may not use this file except in compliance with the License.
 *You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 *Unless required by applicable law or agreed to in writing, software
 *distributed under the License is distributed on an "AS IS" BASIS,
 *WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *See the License for the specific language governing permissions and
 *limitations under the License.
 *
 *************************************************************
 * This project supports the blueCubs vision of giving back
 * to the community in exchange for free software!
 * More information on: http://www.bluecubs.org
 *************************************************************
 *
 * Name:            XincoCoreACEClient
 *
 * Description:     access control entry 
 *
 * Original Author: Alexander Manes
 * Date:            2004
 *
 * Modifications:
 * 
 * Who?             When?             What?
 * -                -                 -
 *
 *************************************************************
 */</comment>

<package pos:line="37" pos:column="1">package <name><name pos:line="37" pos:column="9">com</name><op:operator pos:line="37" pos:column="12">.</op:operator><name pos:line="37" pos:column="13">bluecubs</name><op:operator pos:line="37" pos:column="21">.</op:operator><name pos:line="37" pos:column="22">xinco</name><op:operator pos:line="37" pos:column="27">.</op:operator><name pos:line="37" pos:column="28">core</name><op:operator pos:line="37" pos:column="32">.</op:operator><name pos:line="37" pos:column="33">client</name></name>;</package>

<import pos:line="39" pos:column="1">import <name><name pos:line="39" pos:column="8">java</name><op:operator pos:line="39" pos:column="12">.</op:operator><name pos:line="39" pos:column="13">util</name><op:operator pos:line="39" pos:column="17">.</op:operator><name pos:line="39" pos:column="18">Vector</name></name>;</import>

<import pos:line="41" pos:column="1">import <name><name pos:line="41" pos:column="8">com</name><op:operator pos:line="41" pos:column="11">.</op:operator><name pos:line="41" pos:column="12">bluecubs</name><op:operator pos:line="41" pos:column="20">.</op:operator><name pos:line="41" pos:column="21">xinco</name><op:operator pos:line="41" pos:column="26">.</op:operator><name pos:line="41" pos:column="27">core</name></name>.*;</import>

<class><specifier pos:line="43" pos:column="1">public</specifier> class <name pos:line="43" pos:column="14">XincoCoreACEClient</name> <super><extends pos:line="43" pos:column="33">extends <name pos:line="43" pos:column="41">XincoCoreACE</name></extends></super> <block pos:line="43" pos:column="54">{

	<constructor><specifier pos:line="45" pos:column="9">public</specifier> <name pos:line="45" pos:column="16">XincoCoreACEClient</name><parameter_list pos:line="45" pos:column="34">()</parameter_list> <throws pos:line="45" pos:column="37">throws <argument><expr><name pos:line="45" pos:column="44">XincoException</name></expr></argument></throws> <block pos:line="45" pos:column="59">{
	}</block></constructor>
    
	<comment type="line" pos:line="48" pos:column="9">//check access by comparing user / user groups to ACL and return permissions</comment>
	<function><type><specifier pos:line="49" pos:column="9">public</specifier> <specifier pos:line="49" pos:column="16">static</specifier> <name pos:line="49" pos:column="23">XincoCoreACE</name></type> <name pos:line="49" pos:column="36">checkAccess</name><parameter_list pos:line="49" pos:column="47">(<param><decl><type><name pos:line="49" pos:column="48">XincoCoreUser</name></type> <name pos:line="49" pos:column="62">attrU</name></decl></param>, <param><decl><type><name pos:line="49" pos:column="69">Vector</name></type> <name pos:line="49" pos:column="76">attrACL</name></decl></param>)</parameter_list> <block pos:line="49" pos:column="85">{
        
		<decl_stmt><decl><type><name pos:line="51" pos:column="17">int</name></type> <name pos:line="51" pos:column="21">i</name> <init pos:line="51" pos:column="23">= <expr><lit:literal type="number" pos:line="51" pos:column="25">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="52" pos:column="17">int</name></type> <name pos:line="52" pos:column="21">j</name> <init pos:line="52" pos:column="23">= <expr><lit:literal type="number" pos:line="52" pos:column="25">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="53" pos:column="17">boolean</name></type> <name pos:line="53" pos:column="25">match_ace</name> <init pos:line="53" pos:column="35">= <expr><lit:literal type="boolean" pos:line="53" pos:column="37">false</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="54" pos:column="17">XincoCoreACE</name></type> <name pos:line="54" pos:column="30">core_ace</name> <init pos:line="54" pos:column="39">= <expr><op:operator pos:line="54" pos:column="41">new</op:operator> <call><name pos:line="54" pos:column="45">XincoCoreACE</name><argument_list pos:line="54" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<try pos:line="56" pos:column="17">try <block pos:line="56" pos:column="21">{
                    <for pos:line="57" pos:column="21">for (<init><expr><name pos:line="57" pos:column="26">i</name><op:operator pos:line="57" pos:column="27">=</op:operator><lit:literal type="number" pos:line="57" pos:column="28">0</lit:literal></expr>;</init><condition><expr><name pos:line="57" pos:column="30">i</name><op:operator pos:line="57" pos:column="31">&lt;</op:operator><call><name><name pos:line="57" pos:column="32">attrACL</name><op:operator pos:line="57" pos:column="39">.</op:operator><name pos:line="57" pos:column="40">size</name></name><argument_list pos:line="57" pos:column="44">()</argument_list></call></expr>;</condition><incr><expr><name pos:line="57" pos:column="47">i</name><op:operator pos:line="57" pos:column="48">++</op:operator></expr></incr>) <block pos:line="57" pos:column="52">{
                            <comment type="line" pos:line="58" pos:column="29">//reset match_ace</comment>
                            <expr_stmt><expr><name pos:line="59" pos:column="29">match_ace</name> <op:operator pos:line="59" pos:column="39">=</op:operator> <lit:literal type="boolean" pos:line="59" pos:column="41">false</lit:literal></expr>;</expr_stmt>
                            <comment type="line" pos:line="60" pos:column="29">//check if user is mentioned in ACE</comment>
                            <if pos:line="61" pos:column="29">if <condition pos:line="61" pos:column="32">(<expr><op:operator pos:line="61" pos:column="33">(</op:operator><op:operator pos:line="61" pos:column="34">(</op:operator><name pos:line="61" pos:column="35">XincoCoreACE</name><op:operator pos:line="61" pos:column="47">)</op:operator><call><name><name pos:line="61" pos:column="48">attrACL</name><op:operator pos:line="61" pos:column="55">.</op:operator><name pos:line="61" pos:column="56">elementAt</name></name><argument_list pos:line="61" pos:column="65">(<argument><expr><name pos:line="61" pos:column="66">i</name></expr></argument>)</argument_list></call><op:operator pos:line="61" pos:column="68">)</op:operator><op:operator pos:line="61" pos:column="69">.</op:operator><call><name pos:line="61" pos:column="70">getXinco_core_user_id</name><argument_list pos:line="61" pos:column="91">()</argument_list></call> <op:operator pos:line="61" pos:column="94">==</op:operator> <call><name><name pos:line="61" pos:column="97">attrU</name><op:operator pos:line="61" pos:column="102">.</op:operator><name pos:line="61" pos:column="103">getId</name></name><argument_list pos:line="61" pos:column="108">()</argument_list></call></expr>)</condition><then pos:line="61" pos:column="111"> <block pos:line="61" pos:column="112">{ <expr_stmt><expr><name pos:line="61" pos:column="114">match_ace</name> <op:operator pos:line="61" pos:column="124">=</op:operator> <lit:literal type="boolean" pos:line="61" pos:column="126">true</lit:literal></expr>;</expr_stmt> }</block></then></if> 
                            <comment type="line" pos:line="62" pos:column="29">//check if group of user is mentioned in ACE</comment>
                            <if pos:line="63" pos:column="29">if <condition pos:line="63" pos:column="32">(<expr><op:operator pos:line="63" pos:column="33">!</op:operator><name pos:line="63" pos:column="34">match_ace</name></expr>)</condition><then pos:line="63" pos:column="44"> <block pos:line="63" pos:column="45">{
                                    <for pos:line="64" pos:column="37">for (<init><expr><name pos:line="64" pos:column="42">j</name><op:operator pos:line="64" pos:column="43">=</op:operator><lit:literal type="number" pos:line="64" pos:column="44">0</lit:literal></expr>;</init><condition><expr><name pos:line="64" pos:column="46">j</name><op:operator pos:line="64" pos:column="47">&lt;</op:operator><call><name><name pos:line="64" pos:column="48">attrU</name><op:operator pos:line="64" pos:column="53">.</op:operator><name pos:line="64" pos:column="54">getXinco_core_groups</name></name><argument_list pos:line="64" pos:column="74">()</argument_list></call><op:operator pos:line="64" pos:column="76">.</op:operator><call><name pos:line="64" pos:column="77">size</name><argument_list pos:line="64" pos:column="81">()</argument_list></call></expr>;</condition><incr><expr><name pos:line="64" pos:column="84">j</name><op:operator pos:line="64" pos:column="85">++</op:operator></expr></incr>) <block pos:line="64" pos:column="89">{
                                            <if pos:line="65" pos:column="45">if <condition pos:line="65" pos:column="48">(<expr><op:operator pos:line="65" pos:column="49">(</op:operator><op:operator pos:line="65" pos:column="50">(</op:operator><name pos:line="65" pos:column="51">XincoCoreACE</name><op:operator pos:line="65" pos:column="63">)</op:operator><call><name><name pos:line="65" pos:column="64">attrACL</name><op:operator pos:line="65" pos:column="71">.</op:operator><name pos:line="65" pos:column="72">elementAt</name></name><argument_list pos:line="65" pos:column="81">(<argument><expr><name pos:line="65" pos:column="82">i</name></expr></argument>)</argument_list></call><op:operator pos:line="65" pos:column="84">)</op:operator><op:operator pos:line="65" pos:column="85">.</op:operator><call><name pos:line="65" pos:column="86">getXinco_core_group_id</name><argument_list pos:line="65" pos:column="108">()</argument_list></call> <op:operator pos:line="65" pos:column="111">==</op:operator> <op:operator pos:line="65" pos:column="114">(</op:operator><op:operator pos:line="65" pos:column="115">(</op:operator><name pos:line="65" pos:column="116">XincoCoreGroup</name><op:operator pos:line="65" pos:column="130">)</op:operator><call><name><name pos:line="65" pos:column="131">attrU</name><op:operator pos:line="65" pos:column="136">.</op:operator><name pos:line="65" pos:column="137">getXinco_core_groups</name></name><argument_list pos:line="65" pos:column="157">()</argument_list></call><op:operator pos:line="65" pos:column="159">.</op:operator><call><name pos:line="65" pos:column="160">elementAt</name><argument_list pos:line="65" pos:column="169">(<argument><expr><name pos:line="65" pos:column="170">j</name></expr></argument>)</argument_list></call><op:operator pos:line="65" pos:column="172">)</op:operator><op:operator pos:line="65" pos:column="173">.</op:operator><call><name pos:line="65" pos:column="174">getId</name><argument_list pos:line="65" pos:column="179">()</argument_list></call></expr>)</condition><then pos:line="65" pos:column="182"> <block pos:line="65" pos:column="183">{
                                                    <expr_stmt><expr><name pos:line="66" pos:column="53">match_ace</name> <op:operator pos:line="66" pos:column="63">=</op:operator> <lit:literal type="boolean" pos:line="66" pos:column="65">true</lit:literal></expr>;</expr_stmt>
                                                    <break pos:line="67" pos:column="53">break;</break>
                                            }</block></then></if> 
                                    }</block></for>
                            }</block></then></if>
                            <comment type="line" pos:line="71" pos:column="29">//add to rights</comment>
                            <if pos:line="72" pos:column="29">if <condition pos:line="72" pos:column="32">(<expr><name pos:line="72" pos:column="33">match_ace</name></expr>)</condition><then pos:line="72" pos:column="43"> <block pos:line="72" pos:column="44">{
                                    <comment type="line" pos:line="73" pos:column="37">//modify read permission</comment>
                                    <if pos:line="74" pos:column="37">if <condition pos:line="74" pos:column="40">(<expr><op:operator pos:line="74" pos:column="41">!</op:operator><call><name><name pos:line="74" pos:column="42">core_ace</name><op:operator pos:line="74" pos:column="50">.</op:operator><name pos:line="74" pos:column="51">isRead_permission</name></name><argument_list pos:line="74" pos:column="68">()</argument_list></call></expr>)</condition><then pos:line="74" pos:column="71"> <block pos:line="74" pos:column="72">{
                                            <expr_stmt><expr><call><name><name pos:line="75" pos:column="45">core_ace</name><op:operator pos:line="75" pos:column="53">.</op:operator><name pos:line="75" pos:column="54">setRead_permission</name></name><argument_list pos:line="75" pos:column="72">(<argument><expr><op:operator pos:line="75" pos:column="73">(</op:operator><op:operator pos:line="75" pos:column="74">(</op:operator><name pos:line="75" pos:column="75">XincoCoreACE</name><op:operator pos:line="75" pos:column="87">)</op:operator><call><name><name pos:line="75" pos:column="88">attrACL</name><op:operator pos:line="75" pos:column="95">.</op:operator><name pos:line="75" pos:column="96">elementAt</name></name><argument_list pos:line="75" pos:column="105">(<argument><expr><name pos:line="75" pos:column="106">i</name></expr></argument>)</argument_list></call><op:operator pos:line="75" pos:column="108">)</op:operator><op:operator pos:line="75" pos:column="109">.</op:operator><call><name pos:line="75" pos:column="110">isRead_permission</name><argument_list pos:line="75" pos:column="127">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>				
                                    }</block></then></if>
                                    <comment type="line" pos:line="77" pos:column="37">//modify write permission</comment>
                                    <if pos:line="78" pos:column="37">if <condition pos:line="78" pos:column="40">(<expr><op:operator pos:line="78" pos:column="41">!</op:operator><call><name><name pos:line="78" pos:column="42">core_ace</name><op:operator pos:line="78" pos:column="50">.</op:operator><name pos:line="78" pos:column="51">isWrite_permission</name></name><argument_list pos:line="78" pos:column="69">()</argument_list></call></expr>)</condition><then pos:line="78" pos:column="72"> <block pos:line="78" pos:column="73">{
                                            <expr_stmt><expr><call><name><name pos:line="79" pos:column="45">core_ace</name><op:operator pos:line="79" pos:column="53">.</op:operator><name pos:line="79" pos:column="54">setWrite_permission</name></name><argument_list pos:line="79" pos:column="73">(<argument><expr><op:operator pos:line="79" pos:column="74">(</op:operator><op:operator pos:line="79" pos:column="75">(</op:operator><name pos:line="79" pos:column="76">XincoCoreACE</name><op:operator pos:line="79" pos:column="88">)</op:operator><call><name><name pos:line="79" pos:column="89">attrACL</name><op:operator pos:line="79" pos:column="96">.</op:operator><name pos:line="79" pos:column="97">elementAt</name></name><argument_list pos:line="79" pos:column="106">(<argument><expr><name pos:line="79" pos:column="107">i</name></expr></argument>)</argument_list></call><op:operator pos:line="79" pos:column="109">)</op:operator><op:operator pos:line="79" pos:column="110">.</op:operator><call><name pos:line="79" pos:column="111">isWrite_permission</name><argument_list pos:line="79" pos:column="129">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>				
                                    }</block></then></if>
                                    <comment type="line" pos:line="81" pos:column="37">//modify execute permission</comment>
                                    <if pos:line="82" pos:column="37">if <condition pos:line="82" pos:column="40">(<expr><op:operator pos:line="82" pos:column="41">!</op:operator><call><name><name pos:line="82" pos:column="42">core_ace</name><op:operator pos:line="82" pos:column="50">.</op:operator><name pos:line="82" pos:column="51">isExecute_permission</name></name><argument_list pos:line="82" pos:column="71">()</argument_list></call></expr>)</condition><then pos:line="82" pos:column="74"> <block pos:line="82" pos:column="75">{
                                            <expr_stmt><expr><call><name><name pos:line="83" pos:column="45">core_ace</name><op:operator pos:line="83" pos:column="53">.</op:operator><name pos:line="83" pos:column="54">setExecute_permission</name></name><argument_list pos:line="83" pos:column="75">(<argument><expr><op:operator pos:line="83" pos:column="76">(</op:operator><op:operator pos:line="83" pos:column="77">(</op:operator><name pos:line="83" pos:column="78">XincoCoreACE</name><op:operator pos:line="83" pos:column="90">)</op:operator><call><name><name pos:line="83" pos:column="91">attrACL</name><op:operator pos:line="83" pos:column="98">.</op:operator><name pos:line="83" pos:column="99">elementAt</name></name><argument_list pos:line="83" pos:column="108">(<argument><expr><name pos:line="83" pos:column="109">i</name></expr></argument>)</argument_list></call><op:operator pos:line="83" pos:column="111">)</op:operator><op:operator pos:line="83" pos:column="112">.</op:operator><call><name pos:line="83" pos:column="113">isExecute_permission</name><argument_list pos:line="83" pos:column="133">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>				
                                    }</block></then></if>
                                    <comment type="line" pos:line="85" pos:column="37">//modify admin permission</comment>
                                    <if pos:line="86" pos:column="37">if <condition pos:line="86" pos:column="40">(<expr><op:operator pos:line="86" pos:column="41">!</op:operator><call><name><name pos:line="86" pos:column="42">core_ace</name><op:operator pos:line="86" pos:column="50">.</op:operator><name pos:line="86" pos:column="51">isAdmin_permission</name></name><argument_list pos:line="86" pos:column="69">()</argument_list></call></expr>)</condition><then pos:line="86" pos:column="72"> <block pos:line="86" pos:column="73">{
                                            <expr_stmt><expr><call><name><name pos:line="87" pos:column="45">core_ace</name><op:operator pos:line="87" pos:column="53">.</op:operator><name pos:line="87" pos:column="54">setAdmin_permission</name></name><argument_list pos:line="87" pos:column="73">(<argument><expr><op:operator pos:line="87" pos:column="74">(</op:operator><op:operator pos:line="87" pos:column="75">(</op:operator><name pos:line="87" pos:column="76">XincoCoreACE</name><op:operator pos:line="87" pos:column="88">)</op:operator><call><name><name pos:line="87" pos:column="89">attrACL</name><op:operator pos:line="87" pos:column="96">.</op:operator><name pos:line="87" pos:column="97">elementAt</name></name><argument_list pos:line="87" pos:column="106">(<argument><expr><name pos:line="87" pos:column="107">i</name></expr></argument>)</argument_list></call><op:operator pos:line="87" pos:column="109">)</op:operator><op:operator pos:line="87" pos:column="110">.</op:operator><call><name pos:line="87" pos:column="111">isAdmin_permission</name><argument_list pos:line="87" pos:column="129">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>				
                                    }</block></then></if>
                            }</block></then></if>
                    }</block></for>
                }</block> <catch pos:line="91" pos:column="19">catch <parameter_list pos:line="91" pos:column="25">(<param><decl><type><name pos:line="91" pos:column="26">Exception</name></type> <name pos:line="91" pos:column="36">e</name></decl></param>)</parameter_list> <block pos:line="91" pos:column="39">{
                }</block></catch></try>
        
		<return pos:line="94" pos:column="17">return <expr><name pos:line="94" pos:column="24">core_ace</name></expr>;</return>
	}</block></function>

}</block></class>
</unit>
