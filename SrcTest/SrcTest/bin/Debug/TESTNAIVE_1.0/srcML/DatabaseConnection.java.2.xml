<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\RiskIt\src\com\riskIt\db\DatabaseConnection.java" pos:tabs="8"><package pos:line="1" pos:column="1">package <name><name pos:line="1" pos:column="9">com</name><op:operator pos:line="1" pos:column="12">.</op:operator><name pos:line="1" pos:column="13">riskIt</name><op:operator pos:line="1" pos:column="19">.</op:operator><name pos:line="1" pos:column="20">db</name></name>;</package>

<import pos:line="3" pos:column="1">import <name><name pos:line="3" pos:column="8">java</name><op:operator pos:line="3" pos:column="12">.</op:operator><name pos:line="3" pos:column="13">sql</name><op:operator pos:line="3" pos:column="16">.</op:operator><name pos:line="3" pos:column="17">Connection</name></name>;</import>
<import pos:line="4" pos:column="1">import <name><name pos:line="4" pos:column="8">java</name><op:operator pos:line="4" pos:column="12">.</op:operator><name pos:line="4" pos:column="13">sql</name><op:operator pos:line="4" pos:column="16">.</op:operator><name pos:line="4" pos:column="17">DriverManager</name></name>;</import>
<import pos:line="5" pos:column="1">import <name><name pos:line="5" pos:column="8">java</name><op:operator pos:line="5" pos:column="12">.</op:operator><name pos:line="5" pos:column="13">sql</name><op:operator pos:line="5" pos:column="16">.</op:operator><name pos:line="5" pos:column="17">SQLException</name></name>;</import>


<comment type="block" format="javadoc" pos:line="8" pos:column="1">/**
 * This class is used to establish a database connection as well as 
 * close the connection
 * @author Poornima Tantry
 *
 */</comment>
<class><specifier pos:line="14" pos:column="1">public</specifier> class <name pos:line="14" pos:column="14">DatabaseConnection</name> 
<block pos:line="15" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="16" pos:column="9">private</specifier> <specifier pos:line="16" pos:column="17">static</specifier> <specifier pos:line="16" pos:column="24">final</specifier> <name pos:line="16" pos:column="30">String</name></type> <name pos:line="16" pos:column="37">driver</name> <init pos:line="16" pos:column="44">= <expr><lit:literal type="string" pos:line="16" pos:column="46">"org.apache.derby.jdbc.ClientDriver"</lit:literal></expr></init></decl>;</decl_stmt>
	 
	<decl_stmt><decl><type><specifier pos:line="18" pos:column="9">private</specifier> <specifier pos:line="18" pos:column="17">static</specifier> <specifier pos:line="18" pos:column="24">final</specifier> <name pos:line="18" pos:column="30">String</name></type> <name pos:line="18" pos:column="37">URL</name> <init pos:line="18" pos:column="41">= <expr><lit:literal type="string" pos:line="18" pos:column="43">"jdbc:mysql://honeypot:33061/preist_riskinsurance"</lit:literal></expr></init></decl>;</decl_stmt>	
	<decl_stmt><decl><type><specifier pos:line="19" pos:column="9">private</specifier> <specifier pos:line="19" pos:column="17">static</specifier> <name pos:line="19" pos:column="24">Connection</name></type> <name pos:line="19" pos:column="35">conn</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="20" pos:column="9">private</specifier> <specifier pos:line="20" pos:column="17">static</specifier> <name pos:line="20" pos:column="24">boolean</name></type> <name pos:line="20" pos:column="32">created</name> <init pos:line="20" pos:column="40">= <expr><lit:literal type="boolean" pos:line="20" pos:column="42">false</lit:literal></expr></init></decl>;</decl_stmt>
	
	<constructor><specifier pos:line="22" pos:column="9">private</specifier> <name pos:line="22" pos:column="17">DatabaseConnection</name><parameter_list pos:line="22" pos:column="35">()</parameter_list>
	<block pos:line="23" pos:column="9">{	
		
	}</block></constructor>
	
	<function><type><specifier pos:line="27" pos:column="9">public</specifier> <specifier pos:line="27" pos:column="16">static</specifier> <name pos:line="27" pos:column="23">Connection</name></type>  <name pos:line="27" pos:column="35">getConnection</name><parameter_list pos:line="27" pos:column="48">()</parameter_list> <throws pos:line="27" pos:column="51">throws <argument><expr><name pos:line="27" pos:column="58">SQLException</name></expr></argument></throws>
	 <block pos:line="28" pos:column="10">{	    
		<if pos:line="29" pos:column="17">if<condition pos:line="29" pos:column="19">(<expr><name pos:line="29" pos:column="20">created</name></expr>)</condition><then pos:line="29" pos:column="28">
		<block pos:line="30" pos:column="17">{
			<return pos:line="31" pos:column="25">return <expr><name pos:line="31" pos:column="32">conn</name></expr>;</return>
		}</block></then>
		<else pos:line="33" pos:column="17">else
		<block pos:line="34" pos:column="17">{
			<try pos:line="35" pos:column="25">try 
				<block pos:line="36" pos:column="33">{
				    <expr_stmt><expr><call><name><name pos:line="37" pos:column="37">Class</name><op:operator pos:line="37" pos:column="42">.</op:operator><name pos:line="37" pos:column="43">forName</name></name><argument_list pos:line="37" pos:column="50">(<argument><expr><name pos:line="37" pos:column="51">driver</name></expr></argument>)</argument_list></call><op:operator pos:line="37" pos:column="58">.</op:operator><call><name pos:line="37" pos:column="59">newInstance</name><argument_list pos:line="37" pos:column="70">()</argument_list></call></expr>;</expr_stmt>
				    <expr_stmt><expr><name pos:line="38" pos:column="37">conn</name> <op:operator pos:line="38" pos:column="42">=</op:operator> <call><name><name pos:line="38" pos:column="44">DriverManager</name><op:operator pos:line="38" pos:column="57">.</op:operator><name pos:line="38" pos:column="58">getConnection</name></name><argument_list pos:line="38" pos:column="71">(<argument><expr><name pos:line="38" pos:column="72">URL</name></expr></argument>,<argument><expr><lit:literal type="string" pos:line="38" pos:column="76">"root"</lit:literal></expr></argument>,<argument><expr><lit:literal type="string" pos:line="38" pos:column="83">"--password--"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				    <expr_stmt><expr><name pos:line="39" pos:column="37">created</name> <op:operator pos:line="39" pos:column="45">=</op:operator> <lit:literal type="boolean" pos:line="39" pos:column="47">true</lit:literal></expr>;</expr_stmt>
				    <expr_stmt><expr><call><name><name pos:line="40" pos:column="37">System</name><op:operator pos:line="40" pos:column="43">.</op:operator><name pos:line="40" pos:column="44">out</name><op:operator pos:line="40" pos:column="47">.</op:operator><name pos:line="40" pos:column="48">println</name></name><argument_list pos:line="40" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="40" pos:column="56">"connected using "</lit:literal> <op:operator pos:line="40" pos:column="75">+</op:operator> <name pos:line="40" pos:column="77">URL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block>
				<catch pos:line="42" pos:column="33">catch<parameter_list pos:line="42" pos:column="38">(<param><decl><type><name pos:line="42" pos:column="39">Exception</name></type> <name pos:line="42" pos:column="49">e</name></decl></param>)</parameter_list>
				<block pos:line="43" pos:column="33">{
					<expr_stmt><expr><call><name><name pos:line="44" pos:column="41">System</name><op:operator pos:line="44" pos:column="47">.</op:operator><name pos:line="44" pos:column="48">out</name><op:operator pos:line="44" pos:column="51">.</op:operator><name pos:line="44" pos:column="52">println</name></name><argument_list pos:line="44" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="44" pos:column="60">"Exception in CreateConnection"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="45" pos:column="41">e</name><op:operator pos:line="45" pos:column="42">.</op:operator><name pos:line="45" pos:column="43">printStackTrace</name></name><argument_list pos:line="45" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>			
		        <return pos:line="47" pos:column="25">return <expr><name pos:line="47" pos:column="32">conn</name></expr>;</return>
		}</block></else></if>
	 }</block></function>	
	
	<function><type><specifier pos:line="51" pos:column="9">public</specifier> <specifier pos:line="51" pos:column="16">static</specifier> <name pos:line="51" pos:column="23">void</name></type> <name pos:line="51" pos:column="28">closeConnection</name><parameter_list pos:line="51" pos:column="43">()</parameter_list>
	<block pos:line="52" pos:column="9">{
		<try pos:line="53" pos:column="17">try
		<block pos:line="54" pos:column="17">{
			<if pos:line="55" pos:column="25">if<condition pos:line="55" pos:column="27">(<expr><name pos:line="55" pos:column="28">created</name></expr>)</condition><then pos:line="55" pos:column="36">
			<block pos:line="56" pos:column="25">{
				<expr_stmt><expr><name pos:line="57" pos:column="33">created</name> <op:operator pos:line="57" pos:column="41">=</op:operator> <lit:literal type="boolean" pos:line="57" pos:column="43">false</lit:literal></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="58" pos:column="33">conn</name><op:operator pos:line="58" pos:column="37">.</op:operator><name pos:line="58" pos:column="38">close</name></name><argument_list pos:line="58" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block>
		<catch pos:line="61" pos:column="17">catch<parameter_list pos:line="61" pos:column="22">(<param><decl><type><name pos:line="61" pos:column="23">Exception</name></type> <name pos:line="61" pos:column="33">e</name></decl></param>)</parameter_list>
		<block pos:line="62" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="63" pos:column="25">System</name><op:operator pos:line="63" pos:column="31">.</op:operator><name pos:line="63" pos:column="32">out</name><op:operator pos:line="63" pos:column="35">.</op:operator><name pos:line="63" pos:column="36">println</name></name><argument_list pos:line="63" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="63" pos:column="44">"Exception in closeCOnnection"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="64" pos:column="25">e</name><op:operator pos:line="64" pos:column="26">.</op:operator><name pos:line="64" pos:column="27">printStackTrace</name></name><argument_list pos:line="64" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
		}</block></catch></try>
		
	}</block></function>
	

}</block></class>
</unit>
