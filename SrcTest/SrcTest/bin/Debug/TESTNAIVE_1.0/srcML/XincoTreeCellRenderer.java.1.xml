<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\xinco\src\com\bluecubs\xinco\client\object\XincoTreeCellRenderer.java" pos:tabs="8"><comment type="block" format="javadoc" pos:line="1" pos:column="1">/**
 *Copyright 2007 blueCubs.com
 *
 *Licensed under the Apache License, Version 2.0 (the "License");
 *you may not use this file except in compliance with the License.
 *You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 *Unless required by applicable law or agreed to in writing, software
 *distributed under the License is distributed on an "AS IS" BASIS,
 *WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *See the License for the specific language governing permissions and
 *limitations under the License.
 *
 *************************************************************
 * This project supports the blueCubs vision of giving back
 * to the community in exchange for free software!
 * More information on: http://www.bluecubs.org
 *************************************************************
 *
 * Name:            XincoTreeCellRenderer
 *
 * Description:     XincoTreeCellRenderer
 *
 * Original Author: Javier A. Ortiz
 * Date:            May 25, 2007, 10:01 AM
 *
 * Modifications:
 *
 * Who?             When?             What?
 *
 *************************************************************
 */</comment>
<package pos:line="35" pos:column="1">package <name><name pos:line="35" pos:column="9">com</name><op:operator pos:line="35" pos:column="12">.</op:operator><name pos:line="35" pos:column="13">bluecubs</name><op:operator pos:line="35" pos:column="21">.</op:operator><name pos:line="35" pos:column="22">xinco</name><op:operator pos:line="35" pos:column="27">.</op:operator><name pos:line="35" pos:column="28">client</name><op:operator pos:line="35" pos:column="34">.</op:operator><name pos:line="35" pos:column="35">object</name></name>;</package>

<import pos:line="37" pos:column="1">import <name><name pos:line="37" pos:column="8">com</name><op:operator pos:line="37" pos:column="11">.</op:operator><name pos:line="37" pos:column="12">bluecubs</name><op:operator pos:line="37" pos:column="20">.</op:operator><name pos:line="37" pos:column="21">xinco</name><op:operator pos:line="37" pos:column="26">.</op:operator><name pos:line="37" pos:column="27">client</name><op:operator pos:line="37" pos:column="33">.</op:operator><name pos:line="37" pos:column="34">XincoExplorer</name></name>;</import>
<import pos:line="38" pos:column="1">import <name><name pos:line="38" pos:column="8">com</name><op:operator pos:line="38" pos:column="11">.</op:operator><name pos:line="38" pos:column="12">bluecubs</name><op:operator pos:line="38" pos:column="20">.</op:operator><name pos:line="38" pos:column="21">xinco</name><op:operator pos:line="38" pos:column="26">.</op:operator><name pos:line="38" pos:column="27">core</name><op:operator pos:line="38" pos:column="31">.</op:operator><name pos:line="38" pos:column="32">XincoCoreData</name></name>;</import>
<import pos:line="39" pos:column="1">import <name><name pos:line="39" pos:column="8">com</name><op:operator pos:line="39" pos:column="11">.</op:operator><name pos:line="39" pos:column="12">bluecubs</name><op:operator pos:line="39" pos:column="20">.</op:operator><name pos:line="39" pos:column="21">xinco</name><op:operator pos:line="39" pos:column="26">.</op:operator><name pos:line="39" pos:column="27">core</name><op:operator pos:line="39" pos:column="31">.</op:operator><name pos:line="39" pos:column="32">XincoCoreNode</name></name>;</import>
<import pos:line="40" pos:column="1">import <name><name pos:line="40" pos:column="8">com</name><op:operator pos:line="40" pos:column="11">.</op:operator><name pos:line="40" pos:column="12">bluecubs</name><op:operator pos:line="40" pos:column="20">.</op:operator><name pos:line="40" pos:column="21">xinco</name><op:operator pos:line="40" pos:column="26">.</op:operator><name pos:line="40" pos:column="27">tools</name><op:operator pos:line="40" pos:column="32">.</op:operator><name pos:line="40" pos:column="33">XincoFileIconManager</name></name>;</import>
<import pos:line="41" pos:column="1">import <name><name pos:line="41" pos:column="8">java</name><op:operator pos:line="41" pos:column="12">.</op:operator><name pos:line="41" pos:column="13">awt</name><op:operator pos:line="41" pos:column="16">.</op:operator><name pos:line="41" pos:column="17">Component</name></name>;</import>
<import pos:line="42" pos:column="1">import <name><name pos:line="42" pos:column="8">javax</name><op:operator pos:line="42" pos:column="13">.</op:operator><name pos:line="42" pos:column="14">swing</name><op:operator pos:line="42" pos:column="19">.</op:operator><name pos:line="42" pos:column="20">ImageIcon</name></name>;</import>
<import pos:line="43" pos:column="1">import <name><name pos:line="43" pos:column="8">javax</name><op:operator pos:line="43" pos:column="13">.</op:operator><name pos:line="43" pos:column="14">swing</name><op:operator pos:line="43" pos:column="19">.</op:operator><name pos:line="43" pos:column="20">JTree</name></name>;</import>
<import pos:line="44" pos:column="1">import <name><name pos:line="44" pos:column="8">javax</name><op:operator pos:line="44" pos:column="13">.</op:operator><name pos:line="44" pos:column="14">swing</name><op:operator pos:line="44" pos:column="19">.</op:operator><name pos:line="44" pos:column="20">tree</name><op:operator pos:line="44" pos:column="24">.</op:operator><name pos:line="44" pos:column="25">DefaultMutableTreeNode</name></name>;</import>
<import pos:line="45" pos:column="1">import <name><name pos:line="45" pos:column="8">javax</name><op:operator pos:line="45" pos:column="13">.</op:operator><name pos:line="45" pos:column="14">swing</name><op:operator pos:line="45" pos:column="19">.</op:operator><name pos:line="45" pos:column="20">tree</name><op:operator pos:line="45" pos:column="24">.</op:operator><name pos:line="45" pos:column="25">DefaultTreeCellRenderer</name></name>;</import>

<comment type="block" format="javadoc" pos:line="47" pos:column="1">/**
 *
 * @author Javier A. Ortiz
 */</comment>
<class><specifier pos:line="51" pos:column="1">public</specifier> class <name pos:line="51" pos:column="14">XincoTreeCellRenderer</name> <super><extends pos:line="51" pos:column="36">extends <name pos:line="51" pos:column="44">DefaultTreeCellRenderer</name></extends></super> <block pos:line="51" pos:column="68">{

    <decl_stmt><decl><type><specifier pos:line="53" pos:column="5">private</specifier> <name pos:line="53" pos:column="13">XincoFileIconManager</name></type> <name pos:line="53" pos:column="34">xfm</name> <init pos:line="53" pos:column="38">= <expr><lit:literal type="null" pos:line="53" pos:column="40">null</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="54" pos:column="5">private</specifier> <name pos:line="54" pos:column="13">XincoExplorer</name></type> <name pos:line="54" pos:column="27">explorer</name></decl>;</decl_stmt>

    <comment type="block" format="javadoc" pos:line="56" pos:column="5">/** Creates a new instance of XincoTreeCellRenderer
     * @param explorer XincoExplorer
     */</comment>
    <constructor><specifier pos:line="59" pos:column="5">public</specifier> <name pos:line="59" pos:column="12">XincoTreeCellRenderer</name><parameter_list pos:line="59" pos:column="33">(<param><decl><type><name pos:line="59" pos:column="34">XincoExplorer</name></type> <name pos:line="59" pos:column="48">explorer</name></decl></param>)</parameter_list> <block pos:line="59" pos:column="58">{
        <expr_stmt><expr><name><name pos:line="60" pos:column="9">this</name><op:operator pos:line="60" pos:column="13">.</op:operator><name pos:line="60" pos:column="14">explorer</name></name> <op:operator pos:line="60" pos:column="23">=</op:operator> <name pos:line="60" pos:column="25">explorer</name></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="61" pos:column="9">xfm</name> <op:operator pos:line="61" pos:column="13">=</op:operator> <op:operator pos:line="61" pos:column="15">new</op:operator> <call><name pos:line="61" pos:column="19">XincoFileIconManager</name><argument_list pos:line="61" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <function><type><annotation pos:line="64" pos:column="5">@<name pos:line="64" pos:column="6">Override</name></annotation>
    <specifier pos:line="65" pos:column="5">public</specifier> <name pos:line="65" pos:column="12">Component</name></type> <name pos:line="65" pos:column="22">getTreeCellRendererComponent</name><parameter_list pos:line="65" pos:column="50">(<param><decl><type><name pos:line="65" pos:column="51">JTree</name></type> <name pos:line="65" pos:column="57">tree</name></decl></param>,
            <param><decl><type><name pos:line="66" pos:column="13">Object</name></type> <name pos:line="66" pos:column="20">value</name></decl></param>, <param><decl><type><name pos:line="66" pos:column="27">boolean</name></type> <name pos:line="66" pos:column="35">sel</name></decl></param>, <param><decl><type><name pos:line="66" pos:column="40">boolean</name></type> <name pos:line="66" pos:column="48">expanded</name></decl></param>, <param><decl><type><name pos:line="66" pos:column="58">boolean</name></type> <name pos:line="66" pos:column="66">leaf</name></decl></param>,
            <param><decl><type><name pos:line="67" pos:column="13">int</name></type> <name pos:line="67" pos:column="17">row</name></decl></param>, <param><decl><type><name pos:line="67" pos:column="22">boolean</name></type> <name pos:line="67" pos:column="30">hasFocus</name></decl></param>)</parameter_list> <block pos:line="67" pos:column="40">{
        <expr_stmt><expr><call><name><name pos:line="68" pos:column="9">super</name><op:operator pos:line="68" pos:column="14">.</op:operator><name pos:line="68" pos:column="15">getTreeCellRendererComponent</name></name><argument_list pos:line="68" pos:column="43">(
                <argument><expr><name pos:line="69" pos:column="17">tree</name></expr></argument>, <argument><expr><name pos:line="69" pos:column="23">value</name></expr></argument>, <argument><expr><name pos:line="69" pos:column="30">sel</name></expr></argument>,
                <argument><expr><name pos:line="70" pos:column="17">expanded</name></expr></argument>, <argument><expr><name pos:line="70" pos:column="27">leaf</name></expr></argument>, <argument><expr><name pos:line="70" pos:column="33">row</name></expr></argument>,
                <argument><expr><name pos:line="71" pos:column="17">hasFocus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><name pos:line="72" pos:column="13">leaf</name></expr>)</condition><then pos:line="72" pos:column="18"> <block pos:line="72" pos:column="19">{
            <comment type="line" pos:line="73" pos:column="13">//Only attempt if connected!</comment>
            <if pos:line="74" pos:column="13">if <condition pos:line="74" pos:column="16">(<expr><call><name><name pos:line="74" pos:column="17">explorer</name><op:operator pos:line="74" pos:column="25">.</op:operator><name pos:line="74" pos:column="26">getSession</name></name><argument_list pos:line="74" pos:column="36">()</argument_list></call><op:operator pos:line="74" pos:column="38">.</op:operator><call><name pos:line="74" pos:column="39">getXinco</name><argument_list pos:line="74" pos:column="47">()</argument_list></call> <op:operator pos:line="74" pos:column="50">!=</op:operator> <lit:literal type="null" pos:line="74" pos:column="53">null</lit:literal></expr>)</condition><then pos:line="74" pos:column="58"> <block pos:line="74" pos:column="59">{
                <if pos:line="75" pos:column="17">if <condition pos:line="75" pos:column="20">(<expr><op:operator pos:line="75" pos:column="21">!</op:operator><call><name pos:line="75" pos:column="22">isFolder</name><argument_list pos:line="75" pos:column="30">(<argument><expr><name pos:line="75" pos:column="31">value</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="75" pos:column="38"> <block pos:line="75" pos:column="39">{
                    <decl_stmt><decl><type><name pos:line="76" pos:column="21">DefaultMutableTreeNode</name></type> <name pos:line="76" pos:column="44">node</name> <init pos:line="76" pos:column="49">= <expr><op:operator pos:line="76" pos:column="51">(</op:operator><name pos:line="76" pos:column="52">DefaultMutableTreeNode</name><op:operator pos:line="76" pos:column="74">)</op:operator> <name pos:line="76" pos:column="76">value</name></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="77" pos:column="21">String</name></type> <name pos:line="77" pos:column="28">ext</name> <init pos:line="77" pos:column="32">= <expr><call><name><name pos:line="77" pos:column="34">value</name><op:operator pos:line="77" pos:column="39">.</op:operator><name pos:line="77" pos:column="40">toString</name></name><argument_list pos:line="77" pos:column="48">()</argument_list></call><op:operator pos:line="77" pos:column="50">.</op:operator><call><name pos:line="77" pos:column="51">substring</name><argument_list pos:line="77" pos:column="60">(<argument><expr><lit:literal type="number" pos:line="77" pos:column="61">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="77" pos:column="64">value</name><op:operator pos:line="77" pos:column="69">.</op:operator><name pos:line="77" pos:column="70">toString</name></name><argument_list pos:line="77" pos:column="78">()</argument_list></call><op:operator pos:line="77" pos:column="80">.</op:operator><call><name pos:line="77" pos:column="81">indexOf</name><argument_list pos:line="77" pos:column="88">(<argument><expr><lit:literal type="string" pos:line="77" pos:column="89">"("</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="77" pos:column="94">-</op:operator> <lit:literal type="number" pos:line="77" pos:column="96">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <switch pos:line="78" pos:column="21">switch <condition pos:line="78" pos:column="28">(<expr><op:operator pos:line="78" pos:column="29">(</op:operator><call pos:line="78" pos:column="30">(<name pos:line="78" pos:column="31">XincoCoreData</name>) <argument_list pos:line="78" pos:column="46">(<argument><expr><call><name><name pos:line="78" pos:column="47">node</name><op:operator pos:line="78" pos:column="51">.</op:operator><name pos:line="78" pos:column="52">getUserObject</name></name><argument_list pos:line="78" pos:column="65">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="78" pos:column="68">)</op:operator><op:operator pos:line="78" pos:column="69">.</op:operator><call><name pos:line="78" pos:column="70">getXinco_core_data_type</name><argument_list pos:line="78" pos:column="93">()</argument_list></call><op:operator pos:line="78" pos:column="95">.</op:operator><call><name pos:line="78" pos:column="96">getId</name><argument_list pos:line="78" pos:column="101">()</argument_list></call></expr>)</condition> <block pos:line="78" pos:column="105">{
                        <case pos:line="79" pos:column="25">case <expr><lit:literal type="number" pos:line="79" pos:column="30">1</lit:literal></expr>:
                            <try pos:line="80" pos:column="29">try <block pos:line="80" pos:column="33">{
                                <expr_stmt><expr><call><name pos:line="81" pos:column="33">setIcon</name><argument_list pos:line="81" pos:column="40">(<argument><expr><call><name><name pos:line="81" pos:column="41">xfm</name><op:operator pos:line="81" pos:column="44">.</op:operator><name pos:line="81" pos:column="45">getIcon16</name></name><argument_list pos:line="81" pos:column="54">(<argument><expr><name pos:line="81" pos:column="55">ext</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block> <catch pos:line="82" pos:column="31">catch <parameter_list pos:line="82" pos:column="37">(<param><decl><type><name pos:line="82" pos:column="38">NullPointerException</name></type> <name pos:line="82" pos:column="59">e</name></decl></param>)</parameter_list> <block pos:line="82" pos:column="62">{
                                <expr_stmt><expr><call><name pos:line="83" pos:column="33">setIcon</name><argument_list pos:line="83" pos:column="40">(<argument><expr><call><name pos:line="83" pos:column="41">getLeafIcon</name><argument_list pos:line="83" pos:column="52">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block></catch></try>
                            <break pos:line="85" pos:column="29">break;</break>
                        </case><case pos:line="86" pos:column="25">case <expr><lit:literal type="number" pos:line="86" pos:column="30">2</lit:literal></expr>:
                            <try pos:line="87" pos:column="29">try <block pos:line="87" pos:column="33">{
                                <expr_stmt><expr><call><name pos:line="88" pos:column="33">setIcon</name><argument_list pos:line="88" pos:column="40">(<argument><expr><call><name><name pos:line="88" pos:column="41">xfm</name><op:operator pos:line="88" pos:column="44">.</op:operator><name pos:line="88" pos:column="45">getIcon16</name></name><argument_list pos:line="88" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="88" pos:column="55">".txt"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block> <catch pos:line="89" pos:column="31">catch <parameter_list pos:line="89" pos:column="37">(<param><decl><type><name pos:line="89" pos:column="38">NullPointerException</name></type> <name pos:line="89" pos:column="59">e</name></decl></param>)</parameter_list> <block pos:line="89" pos:column="62">{
                                <expr_stmt><expr><call><name pos:line="90" pos:column="33">setIcon</name><argument_list pos:line="90" pos:column="40">(<argument><expr><call><name pos:line="90" pos:column="41">getLeafIcon</name><argument_list pos:line="90" pos:column="52">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block></catch></try>
                            <break pos:line="92" pos:column="29">break;</break>
                        </case><case pos:line="93" pos:column="25">case <expr><lit:literal type="number" pos:line="93" pos:column="30">3</lit:literal></expr>:
                            <try pos:line="94" pos:column="29">try <block pos:line="94" pos:column="33">{
                                <expr_stmt><expr><call><name pos:line="95" pos:column="33">setIcon</name><argument_list pos:line="95" pos:column="40">(<argument><expr><call><name><name pos:line="95" pos:column="41">xfm</name><op:operator pos:line="95" pos:column="44">.</op:operator><name pos:line="95" pos:column="45">getIcon16</name></name><argument_list pos:line="95" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="95" pos:column="55">".html"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block> <catch pos:line="96" pos:column="31">catch <parameter_list pos:line="96" pos:column="37">(<param><decl><type><name pos:line="96" pos:column="38">NullPointerException</name></type> <name pos:line="96" pos:column="59">e</name></decl></param>)</parameter_list> <block pos:line="96" pos:column="62">{
                                <expr_stmt><expr><call><name pos:line="97" pos:column="33">setIcon</name><argument_list pos:line="97" pos:column="40">(<argument><expr><call><name pos:line="97" pos:column="41">getLeafIcon</name><argument_list pos:line="97" pos:column="52">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block></catch></try>
                            <break pos:line="99" pos:column="29">break;</break>
                        </case><case pos:line="100" pos:column="25">case <expr><lit:literal type="number" pos:line="100" pos:column="30">4</lit:literal></expr>:
                            <try pos:line="101" pos:column="29">try <block pos:line="101" pos:column="33">{
                                <expr_stmt><expr><call><name pos:line="102" pos:column="33">setIcon</name><argument_list pos:line="102" pos:column="40">(<argument><expr><op:operator pos:line="102" pos:column="41">new</op:operator> <call><name pos:line="102" pos:column="45">ImageIcon</name><argument_list pos:line="102" pos:column="54">(<argument><expr><call><name><name pos:line="102" pos:column="55">XincoFileIconManager</name><op:operator pos:line="102" pos:column="75">.</op:operator><name><name pos:line="102" pos:column="76">class</name><op:operator pos:line="102" pos:column="81">.</op:operator><name pos:line="102" pos:column="82">getResource</name></name></name><argument_list pos:line="102" pos:column="93">(<argument><expr><lit:literal type="string" pos:line="102" pos:column="94">"contact.gif"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block> <catch pos:line="103" pos:column="31">catch <parameter_list pos:line="103" pos:column="37">(<param><decl><type><name pos:line="103" pos:column="38">NullPointerException</name></type> <name pos:line="103" pos:column="59">e</name></decl></param>)</parameter_list> <block pos:line="103" pos:column="62">{
                                <expr_stmt><expr><call><name pos:line="104" pos:column="33">setIcon</name><argument_list pos:line="104" pos:column="40">(<argument><expr><call><name pos:line="104" pos:column="41">getLeafIcon</name><argument_list pos:line="104" pos:column="52">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block></catch></try>
                            <break pos:line="106" pos:column="29">break;</break>
                        </case><default pos:line="107" pos:column="25">default:
                            <expr_stmt><expr><call><name pos:line="108" pos:column="29">setIcon</name><argument_list pos:line="108" pos:column="36">(<argument><expr><call><name pos:line="108" pos:column="37">getLeafIcon</name><argument_list pos:line="108" pos:column="48">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    </default>}</block></switch>
                    <if pos:line="110" pos:column="21">if <condition pos:line="110" pos:column="24">(<expr><call><name pos:line="110" pos:column="25">getIcon</name><argument_list pos:line="110" pos:column="32">()</argument_list></call> <op:operator pos:line="110" pos:column="35">==</op:operator> <lit:literal type="null" pos:line="110" pos:column="38">null</lit:literal></expr>)</condition><then pos:line="110" pos:column="43"> <block pos:line="110" pos:column="44">{
                        <expr_stmt><expr><call><name pos:line="111" pos:column="25">setIcon</name><argument_list pos:line="111" pos:column="32">(<argument><expr><call><name pos:line="111" pos:column="33">getLeafIcon</name><argument_list pos:line="111" pos:column="44">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if>
                }</block></then><else pos:line="113" pos:column="18">else<block pos:line="113" pos:column="22">{
                    <expr_stmt><expr><call><name pos:line="114" pos:column="21">setIcon</name><argument_list pos:line="114" pos:column="28">(<argument><expr><call><name pos:line="114" pos:column="29">getDefaultClosedIcon</name><argument_list pos:line="114" pos:column="49">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></else></if>
            }</block></then></if>
        }</block></then> <else pos:line="117" pos:column="11">else <block pos:line="117" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="118" pos:column="13">setToolTipText</name><argument_list pos:line="118" pos:column="27">(<argument><expr><lit:literal type="null" pos:line="118" pos:column="28">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:line="118" pos:column="35">//no tool tip</comment>
            <expr_stmt><expr><call><name pos:line="119" pos:column="13">setIcon</name><argument_list pos:line="119" pos:column="20">(<argument><expr><call><name pos:line="119" pos:column="21">getDefaultClosedIcon</name><argument_list pos:line="119" pos:column="41">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></else></if>
        <return pos:line="121" pos:column="9">return <expr><name pos:line="121" pos:column="16">this</name></expr>;</return>
    }</block></function>

    <function><type><specifier pos:line="124" pos:column="5">protected</specifier> <name pos:line="124" pos:column="15">boolean</name></type> <name pos:line="124" pos:column="23">isFolder</name><parameter_list pos:line="124" pos:column="31">(<param><decl><type><name pos:line="124" pos:column="32">Object</name></type> <name pos:line="124" pos:column="39">value</name></decl></param>)</parameter_list> <block pos:line="124" pos:column="46">{
        <decl_stmt><decl><type><name pos:line="125" pos:column="9">DefaultMutableTreeNode</name></type> <name pos:line="125" pos:column="32">node</name> <init pos:line="125" pos:column="37">= <expr><op:operator pos:line="125" pos:column="39">(</op:operator><name pos:line="125" pos:column="40">DefaultMutableTreeNode</name><op:operator pos:line="125" pos:column="62">)</op:operator> <name pos:line="125" pos:column="64">value</name></expr></init></decl>;</decl_stmt>
        <if pos:line="126" pos:column="9">if <condition pos:line="126" pos:column="12">(<expr><name pos:line="126" pos:column="13">node</name> <op:operator pos:line="126" pos:column="18">!=</op:operator> <lit:literal type="null" pos:line="126" pos:column="21">null</lit:literal></expr>)</condition><then pos:line="126" pos:column="26"> <block pos:line="126" pos:column="27">{
            <if pos:line="127" pos:column="13">if <condition pos:line="127" pos:column="16">(<expr><call><name><name pos:line="127" pos:column="17">node</name><op:operator pos:line="127" pos:column="21">.</op:operator><name pos:line="127" pos:column="22">getUserObject</name></name><argument_list pos:line="127" pos:column="35">()</argument_list></call><op:operator pos:line="127" pos:column="37">.</op:operator><call><name pos:line="127" pos:column="38">getClass</name><argument_list pos:line="127" pos:column="46">()</argument_list></call> <op:operator pos:line="127" pos:column="49">==</op:operator> <name><name pos:line="127" pos:column="52">XincoCoreNode</name><op:operator pos:line="127" pos:column="65">.</op:operator><name pos:line="127" pos:column="66">class</name></name></expr>)</condition><then pos:line="127" pos:column="72"> <block pos:line="127" pos:column="73">{
                <return pos:line="128" pos:column="17">return <expr><lit:literal type="boolean" pos:line="128" pos:column="24">true</lit:literal></expr>;</return>
            }</block></then></if>
        }</block></then></if>
        <return pos:line="131" pos:column="9">return <expr><lit:literal type="boolean" pos:line="131" pos:column="16">false</lit:literal></expr>;</return>
    }</block></function>
}</block></class>
</unit>
