<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\xinco\src\com\bluecubs\xinco\core\server\XincoCoreACEServer.java" pos:tabs="8"><comment type="block" format="javadoc" pos:line="1" pos:column="1">/**
 *Copyright 2009 blueCubs.com
 *
 *Licensed under the Apache License, Version 2.0 (the "License");
 *you may not use this file except in compliance with the License.
 *You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 *Unless required by applicable law or agreed to in writing, software
 *distributed under the License is distributed on an "AS IS" BASIS,
 *WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *See the License for the specific language governing permissions and
 *limitations under the License.
 *
 *************************************************************
 * This project supports the blueCubs vision of giving back
 * to the community in exchange for free software!
 * More information on: http://www.bluecubs.org
 *************************************************************
 *
 * Name:            XincoCoreACEServer
 *
 * Description:     access control entry
 *
 * Original Author: Alexander Manes
 * Date:            2004
 *
 * Modifications:
 *
 * Who?             When?             What?
 * -                -                 -
 *
 *************************************************************
 */</comment>

<package pos:line="37" pos:column="1">package <name><name pos:line="37" pos:column="9">com</name><op:operator pos:line="37" pos:column="12">.</op:operator><name pos:line="37" pos:column="13">bluecubs</name><op:operator pos:line="37" pos:column="21">.</op:operator><name pos:line="37" pos:column="22">xinco</name><op:operator pos:line="37" pos:column="27">.</op:operator><name pos:line="37" pos:column="28">core</name><op:operator pos:line="37" pos:column="32">.</op:operator><name pos:line="37" pos:column="33">server</name></name>;</package>

<import pos:line="39" pos:column="1">import <name><name pos:line="39" pos:column="8">java</name><op:operator pos:line="39" pos:column="12">.</op:operator><name pos:line="39" pos:column="13">util</name><op:operator pos:line="39" pos:column="17">.</op:operator><name pos:line="39" pos:column="18">Vector</name></name>;</import>
<import pos:line="40" pos:column="1">import <name><name pos:line="40" pos:column="8">java</name><op:operator pos:line="40" pos:column="12">.</op:operator><name pos:line="40" pos:column="13">sql</name></name>.*;</import>

<import pos:line="42" pos:column="1">import <name><name pos:line="42" pos:column="8">com</name><op:operator pos:line="42" pos:column="11">.</op:operator><name pos:line="42" pos:column="12">bluecubs</name><op:operator pos:line="42" pos:column="20">.</op:operator><name pos:line="42" pos:column="21">xinco</name><op:operator pos:line="42" pos:column="26">.</op:operator><name pos:line="42" pos:column="27">core</name></name>.*;</import>

<class><specifier pos:line="44" pos:column="1">public</specifier> class <name pos:line="44" pos:column="14">XincoCoreACEServer</name> <super><extends pos:line="44" pos:column="33">extends <name pos:line="44" pos:column="41">XincoCoreACE</name></extends></super> <block pos:line="44" pos:column="54">{
    <decl_stmt><decl><type><specifier pos:line="45" pos:column="5">private</specifier> <name pos:line="45" pos:column="13">int</name></type> <name pos:line="45" pos:column="17">userID</name><init pos:line="45" pos:column="23">=<expr><lit:literal type="number" pos:line="45" pos:column="24">1</lit:literal></expr></init></decl>;</decl_stmt>
    <comment type="line" pos:line="46" pos:column="5">//create single ace object for data structures</comment>
    <constructor><specifier pos:line="47" pos:column="5">public</specifier> <name pos:line="47" pos:column="12">XincoCoreACEServer</name><parameter_list pos:line="47" pos:column="30">(<param><decl><type><name pos:line="47" pos:column="31">int</name></type> <name pos:line="47" pos:column="35">attrID</name></decl></param>, <param><decl><type><name pos:line="47" pos:column="43">XincoDBManager</name></type> <name pos:line="47" pos:column="58">DBM</name></decl></param>)</parameter_list> <throws pos:line="47" pos:column="63">throws <argument><expr><name pos:line="47" pos:column="70">XincoException</name></expr></argument></throws> <block pos:line="47" pos:column="85">{
        
        <try pos:line="49" pos:column="9">try <block pos:line="49" pos:column="13">{
            
            <decl_stmt><decl><type><name pos:line="51" pos:column="13">Statement</name></type> <name pos:line="51" pos:column="23">stmt</name> <init pos:line="51" pos:column="28">= <expr><call><name><name pos:line="51" pos:column="30">DBM</name><op:operator pos:line="51" pos:column="33">.</op:operator><name pos:line="51" pos:column="34">con</name><op:operator pos:line="51" pos:column="37">.</op:operator><name pos:line="51" pos:column="38">createStatement</name></name><argument_list pos:line="51" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="52" pos:column="13">ResultSet</name></type> <name pos:line="52" pos:column="23">rs</name> <init pos:line="52" pos:column="26">= <expr><call><name><name pos:line="52" pos:column="28">stmt</name><op:operator pos:line="52" pos:column="32">.</op:operator><name pos:line="52" pos:column="33">executeQuery</name></name><argument_list pos:line="52" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="52" pos:column="46">"SELECT * FROM xinco_core_ace WHERE id="</lit:literal> <op:operator pos:line="52" pos:column="87">+</op:operator> <name pos:line="52" pos:column="89">attrID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            
            <comment type="line" pos:line="54" pos:column="13">//throw exception if no result found</comment>
            <decl_stmt><decl><type><name pos:line="55" pos:column="13">int</name></type> <name pos:line="55" pos:column="17">RowCount</name> <init pos:line="55" pos:column="26">= <expr><lit:literal type="number" pos:line="55" pos:column="28">0</lit:literal></expr></init></decl>;</decl_stmt>
            <while pos:line="56" pos:column="13">while <condition pos:line="56" pos:column="19">(<expr><call><name><name pos:line="56" pos:column="20">rs</name><op:operator pos:line="56" pos:column="22">.</op:operator><name pos:line="56" pos:column="23">next</name></name><argument_list pos:line="56" pos:column="27">()</argument_list></call></expr>)</condition> <block pos:line="56" pos:column="31">{
                <expr_stmt><expr><name pos:line="57" pos:column="17">RowCount</name><op:operator pos:line="57" pos:column="25">++</op:operator></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="58" pos:column="17">setId</name><argument_list pos:line="58" pos:column="22">(<argument><expr><call><name><name pos:line="58" pos:column="23">rs</name><op:operator pos:line="58" pos:column="25">.</op:operator><name pos:line="58" pos:column="26">getInt</name></name><argument_list pos:line="58" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="58" pos:column="33">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="59" pos:column="17">setXinco_core_user_id</name><argument_list pos:line="59" pos:column="38">(<argument><expr><call><name><name pos:line="59" pos:column="39">rs</name><op:operator pos:line="59" pos:column="41">.</op:operator><name pos:line="59" pos:column="42">getInt</name></name><argument_list pos:line="59" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="59" pos:column="49">"xinco_core_user_id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="60" pos:column="17">setXinco_core_group_id</name><argument_list pos:line="60" pos:column="39">(<argument><expr><call><name><name pos:line="60" pos:column="40">rs</name><op:operator pos:line="60" pos:column="42">.</op:operator><name pos:line="60" pos:column="43">getInt</name></name><argument_list pos:line="60" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="60" pos:column="50">"xinco_core_group_id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="61" pos:column="17">setXinco_core_node_id</name><argument_list pos:line="61" pos:column="38">(<argument><expr><call><name><name pos:line="61" pos:column="39">rs</name><op:operator pos:line="61" pos:column="41">.</op:operator><name pos:line="61" pos:column="42">getInt</name></name><argument_list pos:line="61" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="61" pos:column="49">"xinco_core_node_id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="62" pos:column="17">setXinco_core_data_id</name><argument_list pos:line="62" pos:column="38">(<argument><expr><call><name><name pos:line="62" pos:column="39">rs</name><op:operator pos:line="62" pos:column="41">.</op:operator><name pos:line="62" pos:column="42">getInt</name></name><argument_list pos:line="62" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="62" pos:column="49">"xinco_core_data_id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="63" pos:column="17">setRead_permission</name><argument_list pos:line="63" pos:column="35">(<argument><expr><call><name><name pos:line="63" pos:column="36">rs</name><op:operator pos:line="63" pos:column="38">.</op:operator><name pos:line="63" pos:column="39">getBoolean</name></name><argument_list pos:line="63" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="63" pos:column="50">"read_permission"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="64" pos:column="17">setWrite_permission</name><argument_list pos:line="64" pos:column="36">(<argument><expr><call><name><name pos:line="64" pos:column="37">rs</name><op:operator pos:line="64" pos:column="39">.</op:operator><name pos:line="64" pos:column="40">getBoolean</name></name><argument_list pos:line="64" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="64" pos:column="51">"write_permission"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="65" pos:column="17">setExecute_permission</name><argument_list pos:line="65" pos:column="38">(<argument><expr><call><name><name pos:line="65" pos:column="39">rs</name><op:operator pos:line="65" pos:column="41">.</op:operator><name pos:line="65" pos:column="42">getBoolean</name></name><argument_list pos:line="65" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="65" pos:column="53">"execute_permission"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="66" pos:column="17">setAdmin_permission</name><argument_list pos:line="66" pos:column="36">(<argument><expr><call><name><name pos:line="66" pos:column="37">rs</name><op:operator pos:line="66" pos:column="39">.</op:operator><name pos:line="66" pos:column="40">getBoolean</name></name><argument_list pos:line="66" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="66" pos:column="51">"admin_permission"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></while>
            <if pos:line="68" pos:column="13">if <condition pos:line="68" pos:column="16">(<expr><name pos:line="68" pos:column="17">RowCount</name> <op:operator pos:line="68" pos:column="26">&lt;</op:operator> <lit:literal type="number" pos:line="68" pos:column="28">1</lit:literal></expr>)</condition><then pos:line="68" pos:column="30"> <block pos:line="68" pos:column="31">{
                <throw pos:line="69" pos:column="17">throw <expr><op:operator pos:line="69" pos:column="23">new</op:operator> <call><name pos:line="69" pos:column="27">XincoException</name><argument_list pos:line="69" pos:column="41">()</argument_list></call></expr>;</throw>
            }</block></then></if>
            
            <expr_stmt><expr><call><name><name pos:line="72" pos:column="13">stmt</name><op:operator pos:line="72" pos:column="17">.</op:operator><name pos:line="72" pos:column="18">close</name></name><argument_list pos:line="72" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
            
        }</block> <catch pos:line="74" pos:column="11">catch <parameter_list pos:line="74" pos:column="17">(<param><decl><type><name pos:line="74" pos:column="18">Exception</name></type> <name pos:line="74" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="74" pos:column="31">{
            <throw pos:line="75" pos:column="13">throw <expr><op:operator pos:line="75" pos:column="19">new</op:operator> <call><name pos:line="75" pos:column="23">XincoException</name><argument_list pos:line="75" pos:column="37">()</argument_list></call></expr>;</throw>
        }</block></catch></try>
        
    }</block></constructor>
    
    <comment type="line" pos:line="80" pos:column="5">//create single ace object for data structures</comment>
    <constructor><specifier pos:line="81" pos:column="5">public</specifier> <name pos:line="81" pos:column="12">XincoCoreACEServer</name><parameter_list pos:line="81" pos:column="30">(<param><decl><type><name pos:line="81" pos:column="31">int</name></type> <name pos:line="81" pos:column="35">attrID</name></decl></param>, <param><decl><type><name pos:line="81" pos:column="43">int</name></type> <name pos:line="81" pos:column="47">attrUID</name></decl></param>, <param><decl><type><name pos:line="81" pos:column="56">int</name></type> <name pos:line="81" pos:column="60">attrGID</name></decl></param>, <param><decl><type><name pos:line="81" pos:column="69">int</name></type> <name pos:line="81" pos:column="73">attrNID</name></decl></param>, <param><decl><type><name pos:line="81" pos:column="82">int</name></type> <name pos:line="81" pos:column="86">attrDID</name></decl></param>, <param><decl><type><name pos:line="81" pos:column="95">boolean</name></type> <name pos:line="81" pos:column="103">attrRP</name></decl></param>, <param><decl><type><name pos:line="81" pos:column="111">boolean</name></type> <name pos:line="81" pos:column="119">attrWP</name></decl></param>, <param><decl><type><name pos:line="81" pos:column="127">boolean</name></type> <name pos:line="81" pos:column="135">attrEP</name></decl></param>, <param><decl><type><name pos:line="81" pos:column="143">boolean</name></type> <name pos:line="81" pos:column="151">attrAP</name></decl></param>)</parameter_list> <throws pos:line="81" pos:column="159">throws <argument><expr><name pos:line="81" pos:column="166">XincoException</name></expr></argument></throws> <block pos:line="81" pos:column="181">{
        
        <expr_stmt><expr><call><name pos:line="83" pos:column="9">setId</name><argument_list pos:line="83" pos:column="14">(<argument><expr><name pos:line="83" pos:column="15">attrID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="84" pos:column="9">setXinco_core_user_id</name><argument_list pos:line="84" pos:column="30">(<argument><expr><name pos:line="84" pos:column="31">attrUID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="85" pos:column="9">setXinco_core_group_id</name><argument_list pos:line="85" pos:column="31">(<argument><expr><name pos:line="85" pos:column="32">attrGID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="86" pos:column="9">setXinco_core_node_id</name><argument_list pos:line="86" pos:column="30">(<argument><expr><name pos:line="86" pos:column="31">attrNID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="87" pos:column="9">setXinco_core_data_id</name><argument_list pos:line="87" pos:column="30">(<argument><expr><name pos:line="87" pos:column="31">attrDID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="88" pos:column="9">setRead_permission</name><argument_list pos:line="88" pos:column="27">(<argument><expr><name pos:line="88" pos:column="28">attrRP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="89" pos:column="9">setWrite_permission</name><argument_list pos:line="89" pos:column="28">(<argument><expr><name pos:line="89" pos:column="29">attrWP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="90" pos:column="9">setExecute_permission</name><argument_list pos:line="90" pos:column="30">(<argument><expr><name pos:line="90" pos:column="31">attrEP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="91" pos:column="9">setAdmin_permission</name><argument_list pos:line="91" pos:column="28">(<argument><expr><name pos:line="91" pos:column="29">attrAP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        
    }</block></constructor>
    
    <comment type="line" pos:line="95" pos:column="5">//write to db</comment>
    <function><type><specifier pos:line="96" pos:column="5">public</specifier> <name pos:line="96" pos:column="12">int</name></type> <name pos:line="96" pos:column="16">write2DB</name><parameter_list pos:line="96" pos:column="24">(<param><decl><type><name pos:line="96" pos:column="25">XincoDBManager</name></type> <name pos:line="96" pos:column="40">DBM</name></decl></param>)</parameter_list> <throws pos:line="96" pos:column="45">throws <argument><expr><name pos:line="96" pos:column="52">XincoException</name></expr></argument></throws> <block pos:line="96" pos:column="67">{
        
        <try pos:line="98" pos:column="9">try <block pos:line="98" pos:column="13">{
            
            <decl_stmt><decl><type><name pos:line="100" pos:column="13">String</name></type> <name pos:line="100" pos:column="20">xcuid</name> <init pos:line="100" pos:column="26">= <expr><lit:literal type="string" pos:line="100" pos:column="28">""</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="101" pos:column="13">String</name></type> <name pos:line="101" pos:column="20">xcgid</name> <init pos:line="101" pos:column="26">= <expr><lit:literal type="string" pos:line="101" pos:column="28">""</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="102" pos:column="13">String</name></type> <name pos:line="102" pos:column="20">xcnid</name> <init pos:line="102" pos:column="26">= <expr><lit:literal type="string" pos:line="102" pos:column="28">""</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="103" pos:column="13">String</name></type> <name pos:line="103" pos:column="20">xcdid</name> <init pos:line="103" pos:column="26">= <expr><lit:literal type="string" pos:line="103" pos:column="28">""</lit:literal></expr></init></decl>;</decl_stmt>
            
            <decl_stmt><decl><type><name pos:line="105" pos:column="13">int</name></type> <name pos:line="105" pos:column="17">rp</name> <init pos:line="105" pos:column="20">= <expr><lit:literal type="number" pos:line="105" pos:column="22">0</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="106" pos:column="13">int</name></type> <name pos:line="106" pos:column="17">wp</name> <init pos:line="106" pos:column="20">= <expr><lit:literal type="number" pos:line="106" pos:column="22">0</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="107" pos:column="13">int</name></type> <name pos:line="107" pos:column="17">xp</name> <init pos:line="107" pos:column="20">= <expr><lit:literal type="number" pos:line="107" pos:column="22">0</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="108" pos:column="13">int</name></type> <name pos:line="108" pos:column="17">ap</name> <init pos:line="108" pos:column="20">= <expr><lit:literal type="number" pos:line="108" pos:column="22">0</lit:literal></expr></init></decl>;</decl_stmt>
            
            <comment type="line" pos:line="110" pos:column="13">//set values of nullable attributes</comment>
            <if pos:line="111" pos:column="13">if <condition pos:line="111" pos:column="16">(<expr><call><name pos:line="111" pos:column="17">getXinco_core_user_id</name><argument_list pos:line="111" pos:column="38">()</argument_list></call> <op:operator pos:line="111" pos:column="41">==</op:operator> <lit:literal type="number" pos:line="111" pos:column="44">0</lit:literal></expr>)</condition><then pos:line="111" pos:column="46"> <block pos:line="111" pos:column="47">{
                <expr_stmt><expr><name pos:line="112" pos:column="17">xcuid</name> <op:operator pos:line="112" pos:column="23">=</op:operator> <lit:literal type="string" pos:line="112" pos:column="25">"NULL"</lit:literal></expr>;</expr_stmt>
            }</block></then> <else pos:line="113" pos:column="15">else <block pos:line="113" pos:column="20">{
                <expr_stmt><expr><name pos:line="114" pos:column="17">xcuid</name> <op:operator pos:line="114" pos:column="23">=</op:operator> <lit:literal type="string" pos:line="114" pos:column="25">""</lit:literal> <op:operator pos:line="114" pos:column="28">+</op:operator> <call><name pos:line="114" pos:column="30">getXinco_core_user_id</name><argument_list pos:line="114" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
            <if pos:line="116" pos:column="13">if <condition pos:line="116" pos:column="16">(<expr><call><name pos:line="116" pos:column="17">getXinco_core_group_id</name><argument_list pos:line="116" pos:column="39">()</argument_list></call> <op:operator pos:line="116" pos:column="42">==</op:operator> <lit:literal type="number" pos:line="116" pos:column="45">0</lit:literal></expr>)</condition><then pos:line="116" pos:column="47"> <block pos:line="116" pos:column="48">{
                <expr_stmt><expr><name pos:line="117" pos:column="17">xcgid</name> <op:operator pos:line="117" pos:column="23">=</op:operator> <lit:literal type="string" pos:line="117" pos:column="25">"NULL"</lit:literal></expr>;</expr_stmt>
            }</block></then> <else pos:line="118" pos:column="15">else <block pos:line="118" pos:column="20">{
                <expr_stmt><expr><name pos:line="119" pos:column="17">xcgid</name> <op:operator pos:line="119" pos:column="23">=</op:operator> <lit:literal type="string" pos:line="119" pos:column="25">""</lit:literal> <op:operator pos:line="119" pos:column="28">+</op:operator> <call><name pos:line="119" pos:column="30">getXinco_core_group_id</name><argument_list pos:line="119" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
            <if pos:line="121" pos:column="13">if <condition pos:line="121" pos:column="16">(<expr><call><name pos:line="121" pos:column="17">getXinco_core_node_id</name><argument_list pos:line="121" pos:column="38">()</argument_list></call> <op:operator pos:line="121" pos:column="41">==</op:operator> <lit:literal type="number" pos:line="121" pos:column="44">0</lit:literal></expr>)</condition><then pos:line="121" pos:column="46"> <block pos:line="121" pos:column="47">{
                <expr_stmt><expr><name pos:line="122" pos:column="17">xcnid</name> <op:operator pos:line="122" pos:column="23">=</op:operator> <lit:literal type="string" pos:line="122" pos:column="25">"NULL"</lit:literal></expr>;</expr_stmt>
            }</block></then> <else pos:line="123" pos:column="15">else <block pos:line="123" pos:column="20">{
                <expr_stmt><expr><name pos:line="124" pos:column="17">xcnid</name> <op:operator pos:line="124" pos:column="23">=</op:operator> <lit:literal type="string" pos:line="124" pos:column="25">""</lit:literal> <op:operator pos:line="124" pos:column="28">+</op:operator> <call><name pos:line="124" pos:column="30">getXinco_core_node_id</name><argument_list pos:line="124" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
            <if pos:line="126" pos:column="13">if <condition pos:line="126" pos:column="16">(<expr><call><name pos:line="126" pos:column="17">getXinco_core_data_id</name><argument_list pos:line="126" pos:column="38">()</argument_list></call> <op:operator pos:line="126" pos:column="41">==</op:operator> <lit:literal type="number" pos:line="126" pos:column="44">0</lit:literal></expr>)</condition><then pos:line="126" pos:column="46"> <block pos:line="126" pos:column="47">{
                <expr_stmt><expr><name pos:line="127" pos:column="17">xcdid</name> <op:operator pos:line="127" pos:column="23">=</op:operator> <lit:literal type="string" pos:line="127" pos:column="25">"NULL"</lit:literal></expr>;</expr_stmt>
            }</block></then> <else pos:line="128" pos:column="15">else <block pos:line="128" pos:column="20">{
                <expr_stmt><expr><name pos:line="129" pos:column="17">xcdid</name> <op:operator pos:line="129" pos:column="23">=</op:operator> <lit:literal type="string" pos:line="129" pos:column="25">""</lit:literal> <op:operator pos:line="129" pos:column="28">+</op:operator> <call><name pos:line="129" pos:column="30">getXinco_core_data_id</name><argument_list pos:line="129" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
            
            <comment type="line" pos:line="132" pos:column="13">//convert boolean to 0/1</comment>
            <if pos:line="133" pos:column="13">if <condition pos:line="133" pos:column="16">(<expr><call><name pos:line="133" pos:column="17">isRead_permission</name><argument_list pos:line="133" pos:column="34">()</argument_list></call></expr>)</condition><then pos:line="133" pos:column="37"> <block pos:line="133" pos:column="38">{
                <expr_stmt><expr><name pos:line="134" pos:column="17">rp</name> <op:operator pos:line="134" pos:column="20">=</op:operator> <lit:literal type="number" pos:line="134" pos:column="22">1</lit:literal></expr>;</expr_stmt>
            }</block></then></if>
            <if pos:line="136" pos:column="13">if <condition pos:line="136" pos:column="16">(<expr><call><name pos:line="136" pos:column="17">isWrite_permission</name><argument_list pos:line="136" pos:column="35">()</argument_list></call></expr>)</condition><then pos:line="136" pos:column="38"> <block pos:line="136" pos:column="39">{
                <expr_stmt><expr><name pos:line="137" pos:column="17">wp</name> <op:operator pos:line="137" pos:column="20">=</op:operator> <lit:literal type="number" pos:line="137" pos:column="22">1</lit:literal></expr>;</expr_stmt>
            }</block></then></if>
            <if pos:line="139" pos:column="13">if <condition pos:line="139" pos:column="16">(<expr><call><name pos:line="139" pos:column="17">isExecute_permission</name><argument_list pos:line="139" pos:column="37">()</argument_list></call></expr>)</condition><then pos:line="139" pos:column="40"> <block pos:line="139" pos:column="41">{
                <expr_stmt><expr><name pos:line="140" pos:column="17">xp</name> <op:operator pos:line="140" pos:column="20">=</op:operator> <lit:literal type="number" pos:line="140" pos:column="22">1</lit:literal></expr>;</expr_stmt>
            }</block></then></if>
            <if pos:line="142" pos:column="13">if <condition pos:line="142" pos:column="16">(<expr><call><name pos:line="142" pos:column="17">isAdmin_permission</name><argument_list pos:line="142" pos:column="35">()</argument_list></call></expr>)</condition><then pos:line="142" pos:column="38"> <block pos:line="142" pos:column="39">{
                <expr_stmt><expr><name pos:line="143" pos:column="17">ap</name> <op:operator pos:line="143" pos:column="20">=</op:operator> <lit:literal type="number" pos:line="143" pos:column="22">1</lit:literal></expr>;</expr_stmt>
            }</block></then></if>
            
            <decl_stmt><decl><type><name pos:line="146" pos:column="13">XincoCoreAuditServer</name></type> <name pos:line="146" pos:column="34">audit</name><init pos:line="146" pos:column="39">= <expr><op:operator pos:line="146" pos:column="41">new</op:operator> <call><name pos:line="146" pos:column="45">XincoCoreAuditServer</name><argument_list pos:line="146" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>
            
            <if pos:line="148" pos:column="13">if <condition pos:line="148" pos:column="16">(<expr><call><name pos:line="148" pos:column="17">getId</name><argument_list pos:line="148" pos:column="22">()</argument_list></call> <op:operator pos:line="148" pos:column="25">&gt;</op:operator> <lit:literal type="number" pos:line="148" pos:column="27">0</lit:literal></expr>)</condition><then pos:line="148" pos:column="29"> <block pos:line="148" pos:column="30">{
                <decl_stmt><decl><type><name pos:line="149" pos:column="17">Statement</name></type> <name pos:line="149" pos:column="27">stmt</name> <init pos:line="149" pos:column="32">= <expr><call><name><name pos:line="149" pos:column="34">DBM</name><op:operator pos:line="149" pos:column="37">.</op:operator><name pos:line="149" pos:column="38">con</name><op:operator pos:line="149" pos:column="41">.</op:operator><name pos:line="149" pos:column="42">createStatement</name></name><argument_list pos:line="149" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="150" pos:column="17">audit</name><op:operator pos:line="150" pos:column="22">.</op:operator><name pos:line="150" pos:column="23">updateAuditTrail</name></name><argument_list pos:line="150" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="150" pos:column="40">"xinco_core_ace"</lit:literal></expr></argument>,<argument><expr><op:operator pos:line="150" pos:column="57">new</op:operator> <name><name pos:line="150" pos:column="61">String</name> <index pos:line="150" pos:column="68">[]</index></name> <block pos:line="150" pos:column="71">{<expr><lit:literal type="string" pos:line="150" pos:column="72">"id ="</lit:literal><op:operator pos:line="150" pos:column="78">+</op:operator><call><name pos:line="150" pos:column="79">getId</name><argument_list pos:line="150" pos:column="84">()</argument_list></call></expr>}</block></expr></argument>,
                        <argument><expr><name pos:line="151" pos:column="25">DBM</name></expr></argument>,<argument><expr><lit:literal type="string" pos:line="151" pos:column="29">"window.acl"</lit:literal></expr></argument>,<argument><expr><call><name><name pos:line="151" pos:column="42">this</name><op:operator pos:line="151" pos:column="46">.</op:operator><name pos:line="151" pos:column="47">getChangerID</name></name><argument_list pos:line="151" pos:column="59">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="152" pos:column="17">stmt</name><op:operator pos:line="152" pos:column="21">.</op:operator><name pos:line="152" pos:column="22">executeUpdate</name></name><argument_list pos:line="152" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="152" pos:column="36">"UPDATE xinco_core_ace SET xinco_core_user_id="</lit:literal> <op:operator pos:line="152" pos:column="84">+</op:operator> <name pos:line="152" pos:column="86">xcuid</name> <op:operator pos:line="152" pos:column="92">+</op:operator>
                        <lit:literal type="string" pos:line="153" pos:column="25">", xinco_core_group_id="</lit:literal> <op:operator pos:line="153" pos:column="50">+</op:operator> <name pos:line="153" pos:column="52">xcgid</name> <op:operator pos:line="153" pos:column="58">+</op:operator> <lit:literal type="string" pos:line="153" pos:column="60">", xinco_core_node_id="</lit:literal> <op:operator pos:line="153" pos:column="84">+</op:operator> <name pos:line="153" pos:column="86">xcnid</name> <op:operator pos:line="153" pos:column="92">+</op:operator>
                        <lit:literal type="string" pos:line="154" pos:column="25">", xinco_core_data_id="</lit:literal> <op:operator pos:line="154" pos:column="49">+</op:operator> <name pos:line="154" pos:column="51">xcdid</name> <op:operator pos:line="154" pos:column="57">+</op:operator> <lit:literal type="string" pos:line="154" pos:column="59">", read_permission="</lit:literal> <op:operator pos:line="154" pos:column="80">+</op:operator> <name pos:line="154" pos:column="82">rp</name> <op:operator pos:line="154" pos:column="85">+</op:operator>
                        <lit:literal type="string" pos:line="155" pos:column="25">", write_permission="</lit:literal> <op:operator pos:line="155" pos:column="47">+</op:operator> <name pos:line="155" pos:column="49">wp</name> <op:operator pos:line="155" pos:column="52">+</op:operator> <lit:literal type="string" pos:line="155" pos:column="54">", execute_permission="</lit:literal> <op:operator pos:line="155" pos:column="78">+</op:operator> <name pos:line="155" pos:column="80">xp</name> <op:operator pos:line="155" pos:column="83">+</op:operator>
                        <lit:literal type="string" pos:line="156" pos:column="25">", admin_permission="</lit:literal> <op:operator pos:line="156" pos:column="47">+</op:operator> <name pos:line="156" pos:column="49">ap</name> <op:operator pos:line="156" pos:column="52">+</op:operator> <lit:literal type="string" pos:line="156" pos:column="54">" WHERE id="</lit:literal> <op:operator pos:line="156" pos:column="67">+</op:operator> <call><name pos:line="156" pos:column="69">getId</name><argument_list pos:line="156" pos:column="74">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="157" pos:column="17">stmt</name><op:operator pos:line="157" pos:column="21">.</op:operator><name pos:line="157" pos:column="22">close</name></name><argument_list pos:line="157" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
            }</block></then> <else pos:line="158" pos:column="15">else <block pos:line="158" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="159" pos:column="17">setId</name><argument_list pos:line="159" pos:column="22">(<argument><expr><call><name><name pos:line="159" pos:column="23">DBM</name><op:operator pos:line="159" pos:column="26">.</op:operator><name pos:line="159" pos:column="27">getNewID</name></name><argument_list pos:line="159" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="159" pos:column="36">"xinco_core_ace"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                
                <comment type="line" pos:line="161" pos:column="17">//System.out.println("New ACE");</comment>
                <decl_stmt><decl><type><name pos:line="162" pos:column="17">Statement</name></type> <name pos:line="162" pos:column="27">stmt</name> <init pos:line="162" pos:column="32">= <expr><call><name><name pos:line="162" pos:column="34">DBM</name><op:operator pos:line="162" pos:column="37">.</op:operator><name pos:line="162" pos:column="38">con</name><op:operator pos:line="162" pos:column="41">.</op:operator><name pos:line="162" pos:column="42">createStatement</name></name><argument_list pos:line="162" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="163" pos:column="17">stmt</name><op:operator pos:line="163" pos:column="21">.</op:operator><name pos:line="163" pos:column="22">executeUpdate</name></name><argument_list pos:line="163" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="163" pos:column="36">"INSERT INTO xinco_core_ace VALUES ("</lit:literal> <op:operator pos:line="163" pos:column="74">+</op:operator> <call><name pos:line="163" pos:column="76">getId</name><argument_list pos:line="163" pos:column="81">()</argument_list></call> <op:operator pos:line="163" pos:column="84">+</op:operator> <lit:literal type="string" pos:line="163" pos:column="86">", "</lit:literal> <op:operator pos:line="163" pos:column="91">+</op:operator> <name pos:line="163" pos:column="93">xcuid</name> <op:operator pos:line="163" pos:column="99">+</op:operator> <lit:literal type="string" pos:line="163" pos:column="101">", "</lit:literal> <op:operator pos:line="163" pos:column="106">+</op:operator> <name pos:line="163" pos:column="108">xcgid</name> <op:operator pos:line="163" pos:column="114">+</op:operator> <lit:literal type="string" pos:line="163" pos:column="116">", "</lit:literal> <op:operator pos:line="163" pos:column="121">+</op:operator> <name pos:line="163" pos:column="123">xcnid</name> <op:operator pos:line="163" pos:column="129">+</op:operator> <lit:literal type="string" pos:line="163" pos:column="131">", "</lit:literal> <op:operator pos:line="163" pos:column="136">+</op:operator> <name pos:line="163" pos:column="138">xcdid</name> <op:operator pos:line="163" pos:column="144">+</op:operator> <lit:literal type="string" pos:line="163" pos:column="146">", "</lit:literal> <op:operator pos:line="163" pos:column="151">+</op:operator> <name pos:line="163" pos:column="153">rp</name> <op:operator pos:line="163" pos:column="156">+</op:operator> <lit:literal type="string" pos:line="163" pos:column="158">", "</lit:literal> <op:operator pos:line="163" pos:column="163">+</op:operator> <name pos:line="163" pos:column="165">wp</name> <op:operator pos:line="163" pos:column="168">+</op:operator> <lit:literal type="string" pos:line="163" pos:column="170">", "</lit:literal> <op:operator pos:line="163" pos:column="175">+</op:operator> <name pos:line="163" pos:column="177">xp</name> <op:operator pos:line="163" pos:column="180">+</op:operator> <lit:literal type="string" pos:line="163" pos:column="182">", "</lit:literal> <op:operator pos:line="163" pos:column="187">+</op:operator> <name pos:line="163" pos:column="189">ap</name> <op:operator pos:line="163" pos:column="192">+</op:operator> <lit:literal type="string" pos:line="163" pos:column="194">")"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="164" pos:column="17">stmt</name><op:operator pos:line="164" pos:column="21">.</op:operator><name pos:line="164" pos:column="22">close</name></name><argument_list pos:line="164" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
            
            <expr_stmt><expr><call><name><name pos:line="167" pos:column="13">DBM</name><op:operator pos:line="167" pos:column="16">.</op:operator><name pos:line="167" pos:column="17">con</name><op:operator pos:line="167" pos:column="20">.</op:operator><name pos:line="167" pos:column="21">commit</name></name><argument_list pos:line="167" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
            
        }</block> <catch pos:line="169" pos:column="11">catch <parameter_list pos:line="169" pos:column="17">(<param><decl><type><name pos:line="169" pos:column="18">Exception</name></type> <name pos:line="169" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="169" pos:column="31">{
            <try pos:line="170" pos:column="13">try <block pos:line="170" pos:column="17">{
                <expr_stmt><expr><call><name><name pos:line="171" pos:column="17">DBM</name><op:operator pos:line="171" pos:column="20">.</op:operator><name pos:line="171" pos:column="21">con</name><op:operator pos:line="171" pos:column="24">.</op:operator><name pos:line="171" pos:column="25">rollback</name></name><argument_list pos:line="171" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            }</block> <catch pos:line="172" pos:column="15">catch <parameter_list pos:line="172" pos:column="21">(<param><decl><type><name pos:line="172" pos:column="22">Exception</name></type> <name pos:line="172" pos:column="32">erollback</name></decl></param>)</parameter_list> <block pos:line="172" pos:column="43">{
            }</block></catch></try>
            <throw pos:line="174" pos:column="13">throw <expr><op:operator pos:line="174" pos:column="19">new</op:operator> <call><name pos:line="174" pos:column="23">XincoException</name><argument_list pos:line="174" pos:column="37">()</argument_list></call></expr>;</throw>
        }</block></catch></try>
        
        <return pos:line="177" pos:column="9">return <expr><call><name pos:line="177" pos:column="16">getId</name><argument_list pos:line="177" pos:column="21">()</argument_list></call></expr>;</return>
        
    }</block></function>
    
    <comment type="line" pos:line="181" pos:column="5">//remove from db</comment>
    <function><type><specifier pos:line="182" pos:column="5">public</specifier> <specifier pos:line="182" pos:column="12">static</specifier> <name pos:line="182" pos:column="19">int</name></type> <name pos:line="182" pos:column="23">removeFromDB</name><parameter_list pos:line="182" pos:column="35">(<param><decl><type><name pos:line="182" pos:column="36">XincoCoreACE</name></type> <name pos:line="182" pos:column="49">attrCACE</name></decl></param>, <param><decl><type><name pos:line="182" pos:column="59">XincoDBManager</name></type> <name pos:line="182" pos:column="74">DBM</name></decl></param>, <param><decl><type><name pos:line="182" pos:column="79">int</name></type> <name pos:line="182" pos:column="83">userID</name></decl></param>)</parameter_list> <throws pos:line="182" pos:column="91">throws <argument><expr><name pos:line="182" pos:column="98">XincoException</name></expr></argument></throws> <block pos:line="182" pos:column="113">{
        
        <try pos:line="184" pos:column="9">try <block pos:line="184" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="185" pos:column="13">Statement</name></type> <name pos:line="185" pos:column="23">stmt</name> <init pos:line="185" pos:column="28">= <expr><call><name><name pos:line="185" pos:column="30">DBM</name><op:operator pos:line="185" pos:column="33">.</op:operator><name pos:line="185" pos:column="34">con</name><op:operator pos:line="185" pos:column="37">.</op:operator><name pos:line="185" pos:column="38">createStatement</name></name><argument_list pos:line="185" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="186" pos:column="13">XincoCoreAuditServer</name></type> <name pos:line="186" pos:column="34">audit</name><init pos:line="186" pos:column="39">= <expr><op:operator pos:line="186" pos:column="41">new</op:operator> <call><name pos:line="186" pos:column="45">XincoCoreAuditServer</name><argument_list pos:line="186" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="187" pos:column="13">audit</name><op:operator pos:line="187" pos:column="18">.</op:operator><name pos:line="187" pos:column="19">updateAuditTrail</name></name><argument_list pos:line="187" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="187" pos:column="36">"xinco_core_ace"</lit:literal></expr></argument>,<argument><expr><op:operator pos:line="187" pos:column="53">new</op:operator> <name><name pos:line="187" pos:column="57">String</name> <index pos:line="187" pos:column="64">[]</index></name> <block pos:line="187" pos:column="67">{<expr><lit:literal type="string" pos:line="187" pos:column="68">"id ="</lit:literal><op:operator pos:line="187" pos:column="74">+</op:operator><call><name><name pos:line="187" pos:column="75">attrCACE</name><op:operator pos:line="187" pos:column="83">.</op:operator><name pos:line="187" pos:column="84">getId</name></name><argument_list pos:line="187" pos:column="89">()</argument_list></call></expr>}</block></expr></argument>,
                    <argument><expr><name pos:line="188" pos:column="21">DBM</name></expr></argument>,<argument><expr><lit:literal type="string" pos:line="188" pos:column="25">"audit.general.delete"</lit:literal></expr></argument>,<argument><expr><name pos:line="188" pos:column="48">userID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="189" pos:column="13">stmt</name><op:operator pos:line="189" pos:column="17">.</op:operator><name pos:line="189" pos:column="18">executeUpdate</name></name><argument_list pos:line="189" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="189" pos:column="32">"DELETE FROM xinco_core_ace WHERE id="</lit:literal> <op:operator pos:line="189" pos:column="71">+</op:operator> <call><name><name pos:line="189" pos:column="73">attrCACE</name><op:operator pos:line="189" pos:column="81">.</op:operator><name pos:line="189" pos:column="82">getId</name></name><argument_list pos:line="189" pos:column="87">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="190" pos:column="13">stmt</name><op:operator pos:line="190" pos:column="17">.</op:operator><name pos:line="190" pos:column="18">close</name></name><argument_list pos:line="190" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
            
            <expr_stmt><expr><call><name><name pos:line="192" pos:column="13">DBM</name><op:operator pos:line="192" pos:column="16">.</op:operator><name pos:line="192" pos:column="17">con</name><op:operator pos:line="192" pos:column="20">.</op:operator><name pos:line="192" pos:column="21">commit</name></name><argument_list pos:line="192" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
            
        }</block> <catch pos:line="194" pos:column="11">catch <parameter_list pos:line="194" pos:column="17">(<param><decl><type><name pos:line="194" pos:column="18">Exception</name></type> <name pos:line="194" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="194" pos:column="31">{
            <try pos:line="195" pos:column="13">try <block pos:line="195" pos:column="17">{
                <expr_stmt><expr><call><name><name pos:line="196" pos:column="17">DBM</name><op:operator pos:line="196" pos:column="20">.</op:operator><name pos:line="196" pos:column="21">con</name><op:operator pos:line="196" pos:column="24">.</op:operator><name pos:line="196" pos:column="25">rollback</name></name><argument_list pos:line="196" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            }</block> <catch pos:line="197" pos:column="15">catch <parameter_list pos:line="197" pos:column="21">(<param><decl><type><name pos:line="197" pos:column="22">Exception</name></type> <name pos:line="197" pos:column="32">erollback</name></decl></param>)</parameter_list> <block pos:line="197" pos:column="43">{
            }</block></catch></try>
            <expr_stmt><expr><call><name><name pos:line="199" pos:column="13">e</name><op:operator pos:line="199" pos:column="14">.</op:operator><name pos:line="199" pos:column="15">printStackTrace</name></name><argument_list pos:line="199" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
            <throw pos:line="200" pos:column="13">throw <expr><op:operator pos:line="200" pos:column="19">new</op:operator> <call><name pos:line="200" pos:column="23">XincoException</name><argument_list pos:line="200" pos:column="37">()</argument_list></call></expr>;</throw>
        }</block></catch></try>
        
        <return pos:line="203" pos:column="9">return <expr><lit:literal type="number" pos:line="203" pos:column="16">0</lit:literal></expr>;</return>
        
    }</block></function>
    
    <comment type="line" pos:line="207" pos:column="5">//create complete ACL for node or data</comment>
    <function><type><specifier pos:line="208" pos:column="5">public</specifier> <specifier pos:line="208" pos:column="12">static</specifier> <name pos:line="208" pos:column="19">Vector</name></type> <name pos:line="208" pos:column="26">getXincoCoreACL</name><parameter_list pos:line="208" pos:column="41">(<param><decl><type><name pos:line="208" pos:column="42">int</name></type> <name pos:line="208" pos:column="46">attrID</name></decl></param>, <param><decl><type><name pos:line="208" pos:column="54">String</name></type> <name pos:line="208" pos:column="61">attrT</name></decl></param>, <param><decl><type><name pos:line="208" pos:column="68">XincoDBManager</name></type> <name pos:line="208" pos:column="83">DBM</name></decl></param>)</parameter_list> <block pos:line="208" pos:column="88">{
        
        <decl_stmt><decl><type><name pos:line="210" pos:column="9">Vector</name></type> <name pos:line="210" pos:column="16">core_acl</name> <init pos:line="210" pos:column="25">= <expr><op:operator pos:line="210" pos:column="27">new</op:operator> <call><name pos:line="210" pos:column="31">Vector</name><argument_list pos:line="210" pos:column="37">()</argument_list></call></expr></init></decl>;</decl_stmt>
        
        <try pos:line="212" pos:column="9">try <block pos:line="212" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="213" pos:column="13">Statement</name></type> <name pos:line="213" pos:column="23">stmt</name> <init pos:line="213" pos:column="28">= <expr><call><name><name pos:line="213" pos:column="30">DBM</name><op:operator pos:line="213" pos:column="33">.</op:operator><name pos:line="213" pos:column="34">con</name><op:operator pos:line="213" pos:column="37">.</op:operator><name pos:line="213" pos:column="38">createStatement</name></name><argument_list pos:line="213" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="214" pos:column="13">ResultSet</name></type> <name pos:line="214" pos:column="23">rs</name> <init pos:line="214" pos:column="26">= <expr><call><name><name pos:line="214" pos:column="28">stmt</name><op:operator pos:line="214" pos:column="32">.</op:operator><name pos:line="214" pos:column="33">executeQuery</name></name><argument_list pos:line="214" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="214" pos:column="46">"SELECT * FROM xinco_core_ace WHERE "</lit:literal> <op:operator pos:line="214" pos:column="84">+</op:operator> <name pos:line="214" pos:column="86">attrT</name> <op:operator pos:line="214" pos:column="92">+</op:operator> <lit:literal type="string" pos:line="214" pos:column="94">"="</lit:literal> <op:operator pos:line="214" pos:column="98">+</op:operator> <name pos:line="214" pos:column="100">attrID</name> <op:operator pos:line="214" pos:column="107">+</op:operator> <lit:literal type="string" pos:line="214" pos:column="109">" ORDER BY xinco_core_user_id, xinco_core_group_id, xinco_core_node_id, xinco_core_data_id"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            
            <while pos:line="216" pos:column="13">while <condition pos:line="216" pos:column="19">(<expr><call><name><name pos:line="216" pos:column="20">rs</name><op:operator pos:line="216" pos:column="22">.</op:operator><name pos:line="216" pos:column="23">next</name></name><argument_list pos:line="216" pos:column="27">()</argument_list></call></expr>)</condition> <block pos:line="216" pos:column="31">{
                <expr_stmt><expr><call><name><name pos:line="217" pos:column="17">core_acl</name><op:operator pos:line="217" pos:column="25">.</op:operator><name pos:line="217" pos:column="26">addElement</name></name><argument_list pos:line="217" pos:column="36">(<argument><expr><op:operator pos:line="217" pos:column="37">new</op:operator> <call><name pos:line="217" pos:column="41">XincoCoreACEServer</name><argument_list pos:line="217" pos:column="59">(<argument><expr><call><name><name pos:line="217" pos:column="60">rs</name><op:operator pos:line="217" pos:column="62">.</op:operator><name pos:line="217" pos:column="63">getInt</name></name><argument_list pos:line="217" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="217" pos:column="70">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="217" pos:column="77">rs</name><op:operator pos:line="217" pos:column="79">.</op:operator><name pos:line="217" pos:column="80">getInt</name></name><argument_list pos:line="217" pos:column="86">(<argument><expr><lit:literal type="string" pos:line="217" pos:column="87">"xinco_core_user_id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="217" pos:column="110">rs</name><op:operator pos:line="217" pos:column="112">.</op:operator><name pos:line="217" pos:column="113">getInt</name></name><argument_list pos:line="217" pos:column="119">(<argument><expr><lit:literal type="string" pos:line="217" pos:column="120">"xinco_core_group_id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="217" pos:column="144">rs</name><op:operator pos:line="217" pos:column="146">.</op:operator><name pos:line="217" pos:column="147">getInt</name></name><argument_list pos:line="217" pos:column="153">(<argument><expr><lit:literal type="string" pos:line="217" pos:column="154">"xinco_core_node_id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="217" pos:column="177">rs</name><op:operator pos:line="217" pos:column="179">.</op:operator><name pos:line="217" pos:column="180">getInt</name></name><argument_list pos:line="217" pos:column="186">(<argument><expr><lit:literal type="string" pos:line="217" pos:column="187">"xinco_core_data_id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="217" pos:column="210">rs</name><op:operator pos:line="217" pos:column="212">.</op:operator><name pos:line="217" pos:column="213">getBoolean</name></name><argument_list pos:line="217" pos:column="223">(<argument><expr><lit:literal type="string" pos:line="217" pos:column="224">"read_permission"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="217" pos:column="244">rs</name><op:operator pos:line="217" pos:column="246">.</op:operator><name pos:line="217" pos:column="247">getBoolean</name></name><argument_list pos:line="217" pos:column="257">(<argument><expr><lit:literal type="string" pos:line="217" pos:column="258">"write_permission"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="217" pos:column="279">rs</name><op:operator pos:line="217" pos:column="281">.</op:operator><name pos:line="217" pos:column="282">getBoolean</name></name><argument_list pos:line="217" pos:column="292">(<argument><expr><lit:literal type="string" pos:line="217" pos:column="293">"execute_permission"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="217" pos:column="316">rs</name><op:operator pos:line="217" pos:column="318">.</op:operator><name pos:line="217" pos:column="319">getBoolean</name></name><argument_list pos:line="217" pos:column="329">(<argument><expr><lit:literal type="string" pos:line="217" pos:column="330">"admin_permission"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></while>
            
            <expr_stmt><expr><call><name><name pos:line="220" pos:column="13">stmt</name><op:operator pos:line="220" pos:column="17">.</op:operator><name pos:line="220" pos:column="18">close</name></name><argument_list pos:line="220" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
        }</block> <catch pos:line="221" pos:column="11">catch <parameter_list pos:line="221" pos:column="17">(<param><decl><type><name pos:line="221" pos:column="18">Exception</name></type> <name pos:line="221" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="221" pos:column="31">{
            <expr_stmt><expr><call><name><name pos:line="222" pos:column="13">core_acl</name><op:operator pos:line="222" pos:column="21">.</op:operator><name pos:line="222" pos:column="22">removeAllElements</name></name><argument_list pos:line="222" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
        }</block></catch></try>
        
        <return pos:line="225" pos:column="9">return <expr><name pos:line="225" pos:column="16">core_acl</name></expr>;</return>
    }</block></function>
    
    <comment type="line" pos:line="228" pos:column="5">//check access by comparing user / user groups to ACL and return permissions</comment>
    <function><type><specifier pos:line="229" pos:column="5">public</specifier> <specifier pos:line="229" pos:column="12">static</specifier> <name pos:line="229" pos:column="19">XincoCoreACE</name></type> <name pos:line="229" pos:column="32">checkAccess</name><parameter_list pos:line="229" pos:column="43">(<param><decl><type><name pos:line="229" pos:column="44">XincoCoreUser</name></type> <name pos:line="229" pos:column="58">attrU</name></decl></param>, <param><decl><type><name pos:line="229" pos:column="65">Vector</name></type> <name pos:line="229" pos:column="72">attrACL</name></decl></param>)</parameter_list> <block pos:line="229" pos:column="81">{
        
        <decl_stmt><decl><type><name pos:line="231" pos:column="9">int</name></type> <name pos:line="231" pos:column="13">i</name> <init pos:line="231" pos:column="15">= <expr><lit:literal type="number" pos:line="231" pos:column="17">0</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="232" pos:column="9">int</name></type> <name pos:line="232" pos:column="13">j</name> <init pos:line="232" pos:column="15">= <expr><lit:literal type="number" pos:line="232" pos:column="17">0</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="233" pos:column="9">boolean</name></type> <name pos:line="233" pos:column="17">match_ace</name> <init pos:line="233" pos:column="27">= <expr><lit:literal type="boolean" pos:line="233" pos:column="29">false</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="234" pos:column="9">XincoCoreACE</name></type> <name pos:line="234" pos:column="22">core_ace</name> <init pos:line="234" pos:column="31">= <expr><op:operator pos:line="234" pos:column="33">new</op:operator> <call><name pos:line="234" pos:column="37">XincoCoreACE</name><argument_list pos:line="234" pos:column="49">()</argument_list></call></expr></init></decl>;</decl_stmt>
        
        <for pos:line="236" pos:column="9">for (<init><expr><name pos:line="236" pos:column="14">i</name><op:operator pos:line="236" pos:column="15">=</op:operator><lit:literal type="number" pos:line="236" pos:column="16">0</lit:literal></expr>;</init><condition><expr><name pos:line="236" pos:column="18">i</name><op:operator pos:line="236" pos:column="19">&lt;</op:operator><call><name><name pos:line="236" pos:column="20">attrACL</name><op:operator pos:line="236" pos:column="27">.</op:operator><name pos:line="236" pos:column="28">size</name></name><argument_list pos:line="236" pos:column="32">()</argument_list></call></expr>;</condition><incr><expr><name pos:line="236" pos:column="35">i</name><op:operator pos:line="236" pos:column="36">++</op:operator></expr></incr>) <block pos:line="236" pos:column="40">{
            <comment type="line" pos:line="237" pos:column="13">//reset match_ace</comment>
            <expr_stmt><expr><name pos:line="238" pos:column="13">match_ace</name> <op:operator pos:line="238" pos:column="23">=</op:operator> <lit:literal type="boolean" pos:line="238" pos:column="25">false</lit:literal></expr>;</expr_stmt>
            <comment type="line" pos:line="239" pos:column="13">//check if user is mentioned in ACE</comment>
            <if pos:line="240" pos:column="13">if <condition pos:line="240" pos:column="16">(<expr><op:operator pos:line="240" pos:column="17">(</op:operator><op:operator pos:line="240" pos:column="18">(</op:operator><name pos:line="240" pos:column="19">XincoCoreACE</name><op:operator pos:line="240" pos:column="31">)</op:operator><call><name><name pos:line="240" pos:column="32">attrACL</name><op:operator pos:line="240" pos:column="39">.</op:operator><name pos:line="240" pos:column="40">elementAt</name></name><argument_list pos:line="240" pos:column="49">(<argument><expr><name pos:line="240" pos:column="50">i</name></expr></argument>)</argument_list></call><op:operator pos:line="240" pos:column="52">)</op:operator><op:operator pos:line="240" pos:column="53">.</op:operator><call><name pos:line="240" pos:column="54">getXinco_core_user_id</name><argument_list pos:line="240" pos:column="75">()</argument_list></call> <op:operator pos:line="240" pos:column="78">==</op:operator> <call><name><name pos:line="240" pos:column="81">attrU</name><op:operator pos:line="240" pos:column="86">.</op:operator><name pos:line="240" pos:column="87">getId</name></name><argument_list pos:line="240" pos:column="92">()</argument_list></call></expr>)</condition><then pos:line="240" pos:column="95"> <block pos:line="240" pos:column="96">{ <expr_stmt><expr><name pos:line="240" pos:column="98">match_ace</name> <op:operator pos:line="240" pos:column="108">=</op:operator> <lit:literal type="boolean" pos:line="240" pos:column="110">true</lit:literal></expr>;</expr_stmt> }</block></then></if>
            <comment type="line" pos:line="241" pos:column="13">//check if group of user is mentioned in ACE</comment>
            <if pos:line="242" pos:column="13">if <condition pos:line="242" pos:column="16">(<expr><op:operator pos:line="242" pos:column="17">!</op:operator><name pos:line="242" pos:column="18">match_ace</name></expr>)</condition><then pos:line="242" pos:column="28"> <block pos:line="242" pos:column="29">{
                <for pos:line="243" pos:column="17">for (<init><expr><name pos:line="243" pos:column="22">j</name><op:operator pos:line="243" pos:column="23">=</op:operator><lit:literal type="number" pos:line="243" pos:column="24">0</lit:literal></expr>;</init><condition><expr><name pos:line="243" pos:column="26">j</name><op:operator pos:line="243" pos:column="27">&lt;</op:operator><call><name><name pos:line="243" pos:column="28">attrU</name><op:operator pos:line="243" pos:column="33">.</op:operator><name pos:line="243" pos:column="34">getXinco_core_groups</name></name><argument_list pos:line="243" pos:column="54">()</argument_list></call><op:operator pos:line="243" pos:column="56">.</op:operator><call><name pos:line="243" pos:column="57">size</name><argument_list pos:line="243" pos:column="61">()</argument_list></call></expr>;</condition><incr><expr><name pos:line="243" pos:column="64">j</name><op:operator pos:line="243" pos:column="65">++</op:operator></expr></incr>) <block pos:line="243" pos:column="69">{
                    <if pos:line="244" pos:column="21">if <condition pos:line="244" pos:column="24">(<expr><op:operator pos:line="244" pos:column="25">(</op:operator><op:operator pos:line="244" pos:column="26">(</op:operator><name pos:line="244" pos:column="27">XincoCoreACE</name><op:operator pos:line="244" pos:column="39">)</op:operator><call><name><name pos:line="244" pos:column="40">attrACL</name><op:operator pos:line="244" pos:column="47">.</op:operator><name pos:line="244" pos:column="48">elementAt</name></name><argument_list pos:line="244" pos:column="57">(<argument><expr><name pos:line="244" pos:column="58">i</name></expr></argument>)</argument_list></call><op:operator pos:line="244" pos:column="60">)</op:operator><op:operator pos:line="244" pos:column="61">.</op:operator><call><name pos:line="244" pos:column="62">getXinco_core_group_id</name><argument_list pos:line="244" pos:column="84">()</argument_list></call> <op:operator pos:line="244" pos:column="87">==</op:operator> <op:operator pos:line="244" pos:column="90">(</op:operator><op:operator pos:line="244" pos:column="91">(</op:operator><name pos:line="244" pos:column="92">XincoCoreGroup</name><op:operator pos:line="244" pos:column="106">)</op:operator><call><name><name pos:line="244" pos:column="107">attrU</name><op:operator pos:line="244" pos:column="112">.</op:operator><name pos:line="244" pos:column="113">getXinco_core_groups</name></name><argument_list pos:line="244" pos:column="133">()</argument_list></call><op:operator pos:line="244" pos:column="135">.</op:operator><call><name pos:line="244" pos:column="136">elementAt</name><argument_list pos:line="244" pos:column="145">(<argument><expr><name pos:line="244" pos:column="146">j</name></expr></argument>)</argument_list></call><op:operator pos:line="244" pos:column="148">)</op:operator><op:operator pos:line="244" pos:column="149">.</op:operator><call><name pos:line="244" pos:column="150">getId</name><argument_list pos:line="244" pos:column="155">()</argument_list></call></expr>)</condition><then pos:line="244" pos:column="158"> <block pos:line="244" pos:column="159">{
                        <expr_stmt><expr><name pos:line="245" pos:column="25">match_ace</name> <op:operator pos:line="245" pos:column="35">=</op:operator> <lit:literal type="boolean" pos:line="245" pos:column="37">true</lit:literal></expr>;</expr_stmt>
                        <break pos:line="246" pos:column="25">break;</break>
                    }</block></then></if>
                }</block></for>
            }</block></then></if>
            <comment type="line" pos:line="250" pos:column="13">//add to rights</comment>
            <if pos:line="251" pos:column="13">if <condition pos:line="251" pos:column="16">(<expr><name pos:line="251" pos:column="17">match_ace</name></expr>)</condition><then pos:line="251" pos:column="27"> <block pos:line="251" pos:column="28">{
                <comment type="line" pos:line="252" pos:column="17">//modify read permission</comment>
                <if pos:line="253" pos:column="17">if <condition pos:line="253" pos:column="20">(<expr><op:operator pos:line="253" pos:column="21">!</op:operator><call><name><name pos:line="253" pos:column="22">core_ace</name><op:operator pos:line="253" pos:column="30">.</op:operator><name pos:line="253" pos:column="31">isRead_permission</name></name><argument_list pos:line="253" pos:column="48">()</argument_list></call></expr>)</condition><then pos:line="253" pos:column="51"> <block pos:line="253" pos:column="52">{
                    <expr_stmt><expr><call><name><name pos:line="254" pos:column="21">core_ace</name><op:operator pos:line="254" pos:column="29">.</op:operator><name pos:line="254" pos:column="30">setRead_permission</name></name><argument_list pos:line="254" pos:column="48">(<argument><expr><op:operator pos:line="254" pos:column="49">(</op:operator><op:operator pos:line="254" pos:column="50">(</op:operator><name pos:line="254" pos:column="51">XincoCoreACE</name><op:operator pos:line="254" pos:column="63">)</op:operator><call><name><name pos:line="254" pos:column="64">attrACL</name><op:operator pos:line="254" pos:column="71">.</op:operator><name pos:line="254" pos:column="72">elementAt</name></name><argument_list pos:line="254" pos:column="81">(<argument><expr><name pos:line="254" pos:column="82">i</name></expr></argument>)</argument_list></call><op:operator pos:line="254" pos:column="84">)</op:operator><op:operator pos:line="254" pos:column="85">.</op:operator><call><name pos:line="254" pos:column="86">isRead_permission</name><argument_list pos:line="254" pos:column="103">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <comment type="line" pos:line="256" pos:column="17">//modify write permission</comment>
                <if pos:line="257" pos:column="17">if <condition pos:line="257" pos:column="20">(<expr><op:operator pos:line="257" pos:column="21">!</op:operator><call><name><name pos:line="257" pos:column="22">core_ace</name><op:operator pos:line="257" pos:column="30">.</op:operator><name pos:line="257" pos:column="31">isWrite_permission</name></name><argument_list pos:line="257" pos:column="49">()</argument_list></call></expr>)</condition><then pos:line="257" pos:column="52"> <block pos:line="257" pos:column="53">{
                    <expr_stmt><expr><call><name><name pos:line="258" pos:column="21">core_ace</name><op:operator pos:line="258" pos:column="29">.</op:operator><name pos:line="258" pos:column="30">setWrite_permission</name></name><argument_list pos:line="258" pos:column="49">(<argument><expr><op:operator pos:line="258" pos:column="50">(</op:operator><op:operator pos:line="258" pos:column="51">(</op:operator><name pos:line="258" pos:column="52">XincoCoreACE</name><op:operator pos:line="258" pos:column="64">)</op:operator><call><name><name pos:line="258" pos:column="65">attrACL</name><op:operator pos:line="258" pos:column="72">.</op:operator><name pos:line="258" pos:column="73">elementAt</name></name><argument_list pos:line="258" pos:column="82">(<argument><expr><name pos:line="258" pos:column="83">i</name></expr></argument>)</argument_list></call><op:operator pos:line="258" pos:column="85">)</op:operator><op:operator pos:line="258" pos:column="86">.</op:operator><call><name pos:line="258" pos:column="87">isWrite_permission</name><argument_list pos:line="258" pos:column="105">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <comment type="line" pos:line="260" pos:column="17">//modify execute permission</comment>
                <if pos:line="261" pos:column="17">if <condition pos:line="261" pos:column="20">(<expr><op:operator pos:line="261" pos:column="21">!</op:operator><call><name><name pos:line="261" pos:column="22">core_ace</name><op:operator pos:line="261" pos:column="30">.</op:operator><name pos:line="261" pos:column="31">isExecute_permission</name></name><argument_list pos:line="261" pos:column="51">()</argument_list></call></expr>)</condition><then pos:line="261" pos:column="54"> <block pos:line="261" pos:column="55">{
                    <expr_stmt><expr><call><name><name pos:line="262" pos:column="21">core_ace</name><op:operator pos:line="262" pos:column="29">.</op:operator><name pos:line="262" pos:column="30">setExecute_permission</name></name><argument_list pos:line="262" pos:column="51">(<argument><expr><op:operator pos:line="262" pos:column="52">(</op:operator><op:operator pos:line="262" pos:column="53">(</op:operator><name pos:line="262" pos:column="54">XincoCoreACE</name><op:operator pos:line="262" pos:column="66">)</op:operator><call><name><name pos:line="262" pos:column="67">attrACL</name><op:operator pos:line="262" pos:column="74">.</op:operator><name pos:line="262" pos:column="75">elementAt</name></name><argument_list pos:line="262" pos:column="84">(<argument><expr><name pos:line="262" pos:column="85">i</name></expr></argument>)</argument_list></call><op:operator pos:line="262" pos:column="87">)</op:operator><op:operator pos:line="262" pos:column="88">.</op:operator><call><name pos:line="262" pos:column="89">isExecute_permission</name><argument_list pos:line="262" pos:column="109">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <comment type="line" pos:line="264" pos:column="17">//modify admin permission</comment>
                <if pos:line="265" pos:column="17">if <condition pos:line="265" pos:column="20">(<expr><op:operator pos:line="265" pos:column="21">!</op:operator><call><name><name pos:line="265" pos:column="22">core_ace</name><op:operator pos:line="265" pos:column="30">.</op:operator><name pos:line="265" pos:column="31">isAdmin_permission</name></name><argument_list pos:line="265" pos:column="49">()</argument_list></call></expr>)</condition><then pos:line="265" pos:column="52"> <block pos:line="265" pos:column="53">{
                    <expr_stmt><expr><call><name><name pos:line="266" pos:column="21">core_ace</name><op:operator pos:line="266" pos:column="29">.</op:operator><name pos:line="266" pos:column="30">setAdmin_permission</name></name><argument_list pos:line="266" pos:column="49">(<argument><expr><op:operator pos:line="266" pos:column="50">(</op:operator><op:operator pos:line="266" pos:column="51">(</op:operator><name pos:line="266" pos:column="52">XincoCoreACE</name><op:operator pos:line="266" pos:column="64">)</op:operator><call><name><name pos:line="266" pos:column="65">attrACL</name><op:operator pos:line="266" pos:column="72">.</op:operator><name pos:line="266" pos:column="73">elementAt</name></name><argument_list pos:line="266" pos:column="82">(<argument><expr><name pos:line="266" pos:column="83">i</name></expr></argument>)</argument_list></call><op:operator pos:line="266" pos:column="85">)</op:operator><op:operator pos:line="266" pos:column="86">.</op:operator><call><name pos:line="266" pos:column="87">isAdmin_permission</name><argument_list pos:line="266" pos:column="105">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then></if>
        }</block></for>
        <return pos:line="270" pos:column="9">return <expr><name pos:line="270" pos:column="16">core_ace</name></expr>;</return>
    }</block></function>

    <function><type><specifier pos:line="273" pos:column="5">public</specifier> <name pos:line="273" pos:column="12">void</name></type> <name pos:line="273" pos:column="17">setUserId</name><parameter_list pos:line="273" pos:column="26">(<param><decl><type><name pos:line="273" pos:column="27">int</name></type> <name pos:line="273" pos:column="31">i</name></decl></param>)</parameter_list> <block pos:line="273" pos:column="34">{
        <expr_stmt><expr><name><name pos:line="274" pos:column="9">this</name><op:operator pos:line="274" pos:column="13">.</op:operator><name pos:line="274" pos:column="14">userID</name></name><op:operator pos:line="274" pos:column="20">=</op:operator><name pos:line="274" pos:column="21">i</name></expr>;</expr_stmt>
    }</block></function>
    
}</block></class>
</unit>
