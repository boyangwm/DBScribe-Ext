<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\UMAS\src\com\umas\frontend\manageDeptCourses.java" pos:tabs="8"><package pos:line="1" pos:column="1">package <name><name pos:line="1" pos:column="9">com</name><op:operator pos:line="1" pos:column="12">.</op:operator><name pos:line="1" pos:column="13">umas</name><op:operator pos:line="1" pos:column="17">.</op:operator><name pos:line="1" pos:column="18">frontend</name></name>;</package>


<comment type="block" format="javadoc" pos:line="4" pos:column="1">/****************@author Simant Purohit*********************************/</comment>

<import pos:line="6" pos:column="1">import <name><name pos:line="6" pos:column="8">javax</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">swing</name><op:operator pos:line="6" pos:column="19">.</op:operator><name pos:line="6" pos:column="20">DefaultComboBoxModel</name></name>;</import>
<import pos:line="7" pos:column="1">import <name><name pos:line="7" pos:column="8">javax</name><op:operator pos:line="7" pos:column="13">.</op:operator><name pos:line="7" pos:column="14">swing</name><op:operator pos:line="7" pos:column="19">.</op:operator><name pos:line="7" pos:column="20">JOptionPane</name></name>;</import>
<import pos:line="8" pos:column="1">import <name><name pos:line="8" pos:column="8">javax</name><op:operator pos:line="8" pos:column="13">.</op:operator><name pos:line="8" pos:column="14">swing</name><op:operator pos:line="8" pos:column="19">.</op:operator><name pos:line="8" pos:column="20">JTabbedPane</name></name>;</import>
<import pos:line="9" pos:column="1">import <name><name pos:line="9" pos:column="8">javax</name><op:operator pos:line="9" pos:column="13">.</op:operator><name pos:line="9" pos:column="14">swing</name><op:operator pos:line="9" pos:column="19">.</op:operator><name pos:line="9" pos:column="20">JPanel</name></name>;</import>
<import pos:line="10" pos:column="1">import <name><name pos:line="10" pos:column="8">javax</name><op:operator pos:line="10" pos:column="13">.</op:operator><name pos:line="10" pos:column="14">swing</name><op:operator pos:line="10" pos:column="19">.</op:operator><name pos:line="10" pos:column="20">JLabel</name></name>;</import>

<import pos:line="12" pos:column="1">import <name><name pos:line="12" pos:column="8">java</name><op:operator pos:line="12" pos:column="12">.</op:operator><name pos:line="12" pos:column="13">awt</name><op:operator pos:line="12" pos:column="16">.</op:operator><name pos:line="12" pos:column="17">GridLayout</name></name>;</import>
<import pos:line="13" pos:column="1">import <name><name pos:line="13" pos:column="8">java</name><op:operator pos:line="13" pos:column="12">.</op:operator><name pos:line="13" pos:column="13">util</name><op:operator pos:line="13" pos:column="17">.</op:operator><name pos:line="13" pos:column="18">ArrayList</name></name>;</import>

<import pos:line="15" pos:column="1">import <name><name pos:line="15" pos:column="8">javax</name><op:operator pos:line="15" pos:column="13">.</op:operator><name pos:line="15" pos:column="14">swing</name><op:operator pos:line="15" pos:column="19">.</op:operator><name pos:line="15" pos:column="20">JTextField</name></name>;</import>
<import pos:line="16" pos:column="1">import <name><name pos:line="16" pos:column="8">javax</name><op:operator pos:line="16" pos:column="13">.</op:operator><name pos:line="16" pos:column="14">swing</name><op:operator pos:line="16" pos:column="19">.</op:operator><name pos:line="16" pos:column="20">JComboBox</name></name>;</import>
<import pos:line="17" pos:column="1">import <name><name pos:line="17" pos:column="8">javax</name><op:operator pos:line="17" pos:column="13">.</op:operator><name pos:line="17" pos:column="14">swing</name><op:operator pos:line="17" pos:column="19">.</op:operator><name pos:line="17" pos:column="20">JButton</name></name>;</import>

<import pos:line="19" pos:column="1">import <name><name pos:line="19" pos:column="8">com</name><op:operator pos:line="19" pos:column="11">.</op:operator><name pos:line="19" pos:column="12">umas</name><op:operator pos:line="19" pos:column="16">.</op:operator><name pos:line="19" pos:column="17">code</name><op:operator pos:line="19" pos:column="21">.</op:operator><name pos:line="19" pos:column="22">Admin</name></name>;</import>
<import pos:line="20" pos:column="1">import <name><name pos:line="20" pos:column="8">com</name><op:operator pos:line="20" pos:column="11">.</op:operator><name pos:line="20" pos:column="12">umas</name><op:operator pos:line="20" pos:column="16">.</op:operator><name pos:line="20" pos:column="17">code</name><op:operator pos:line="20" pos:column="21">.</op:operator><name pos:line="20" pos:column="22">Course</name></name>;</import>
<import pos:line="21" pos:column="1">import <name><name pos:line="21" pos:column="8">com</name><op:operator pos:line="21" pos:column="11">.</op:operator><name pos:line="21" pos:column="12">umas</name><op:operator pos:line="21" pos:column="16">.</op:operator><name pos:line="21" pos:column="17">code</name><op:operator pos:line="21" pos:column="21">.</op:operator><name pos:line="21" pos:column="22">CourseOffered</name></name>;</import>
<import pos:line="22" pos:column="1">import <name><name pos:line="22" pos:column="8">com</name><op:operator pos:line="22" pos:column="11">.</op:operator><name pos:line="22" pos:column="12">umas</name><op:operator pos:line="22" pos:column="16">.</op:operator><name pos:line="22" pos:column="17">code</name><op:operator pos:line="22" pos:column="21">.</op:operator><name pos:line="22" pos:column="22">CourseSchedule</name></name>;</import>
<import pos:line="23" pos:column="1">import <name><name pos:line="23" pos:column="8">com</name><op:operator pos:line="23" pos:column="11">.</op:operator><name pos:line="23" pos:column="12">umas</name><op:operator pos:line="23" pos:column="16">.</op:operator><name pos:line="23" pos:column="17">code</name><op:operator pos:line="23" pos:column="21">.</op:operator><name pos:line="23" pos:column="22">DBAnnotation</name></name>;</import>
<import pos:line="24" pos:column="1">import <name><name pos:line="24" pos:column="8">com</name><op:operator pos:line="24" pos:column="11">.</op:operator><name pos:line="24" pos:column="12">umas</name><op:operator pos:line="24" pos:column="16">.</op:operator><name pos:line="24" pos:column="17">code</name><op:operator pos:line="24" pos:column="21">.</op:operator><name pos:line="24" pos:column="22">Department</name></name>;</import>
<import pos:line="25" pos:column="1">import <name><name pos:line="25" pos:column="8">com</name><op:operator pos:line="25" pos:column="11">.</op:operator><name pos:line="25" pos:column="12">umas</name><op:operator pos:line="25" pos:column="16">.</op:operator><name pos:line="25" pos:column="17">code</name><op:operator pos:line="25" pos:column="21">.</op:operator><name pos:line="25" pos:column="22">Professor</name></name>;</import>
<import pos:line="26" pos:column="1">import <name><name pos:line="26" pos:column="8">com</name><op:operator pos:line="26" pos:column="11">.</op:operator><name pos:line="26" pos:column="12">umas</name><op:operator pos:line="26" pos:column="16">.</op:operator><name pos:line="26" pos:column="17">code</name><op:operator pos:line="26" pos:column="21">.</op:operator><name pos:line="26" pos:column="22">Course</name><op:operator pos:line="26" pos:column="28">.</op:operator><name pos:line="26" pos:column="29">CourseAlreadyExistsException</name></name>;</import>
<import pos:line="27" pos:column="1">import <name><name pos:line="27" pos:column="8">com</name><op:operator pos:line="27" pos:column="11">.</op:operator><name pos:line="27" pos:column="12">umas</name><op:operator pos:line="27" pos:column="16">.</op:operator><name pos:line="27" pos:column="17">code</name><op:operator pos:line="27" pos:column="21">.</op:operator><name pos:line="27" pos:column="22">Course</name><op:operator pos:line="27" pos:column="28">.</op:operator><name pos:line="27" pos:column="29">CourseDoesNotExistException</name></name>;</import>
<import pos:line="28" pos:column="1">import <name><name pos:line="28" pos:column="8">com</name><op:operator pos:line="28" pos:column="11">.</op:operator><name pos:line="28" pos:column="12">umas</name><op:operator pos:line="28" pos:column="16">.</op:operator><name pos:line="28" pos:column="17">code</name><op:operator pos:line="28" pos:column="21">.</op:operator><name pos:line="28" pos:column="22">CourseOffered</name><op:operator pos:line="28" pos:column="35">.</op:operator><name pos:line="28" pos:column="36">CourseOfferingDoesNotExistException</name></name>;</import>
<import pos:line="29" pos:column="1">import <name><name pos:line="29" pos:column="8">com</name><op:operator pos:line="29" pos:column="11">.</op:operator><name pos:line="29" pos:column="12">umas</name><op:operator pos:line="29" pos:column="16">.</op:operator><name pos:line="29" pos:column="17">code</name><op:operator pos:line="29" pos:column="21">.</op:operator><name pos:line="29" pos:column="22">Department</name><op:operator pos:line="29" pos:column="32">.</op:operator><name pos:line="29" pos:column="33">DepartmentDoesNotExistException</name></name>;</import>
<import pos:line="30" pos:column="1">import <name><name pos:line="30" pos:column="8">com</name><op:operator pos:line="30" pos:column="11">.</op:operator><name pos:line="30" pos:column="12">umas</name><op:operator pos:line="30" pos:column="16">.</op:operator><name pos:line="30" pos:column="17">code</name><op:operator pos:line="30" pos:column="21">.</op:operator><name pos:line="30" pos:column="22">Professor</name><op:operator pos:line="30" pos:column="31">.</op:operator><name pos:line="30" pos:column="32">ProfessorDoesNotExistException</name></name>;</import>

<import pos:line="32" pos:column="1">import <name><name pos:line="32" pos:column="8">java</name><op:operator pos:line="32" pos:column="12">.</op:operator><name pos:line="32" pos:column="13">awt</name><op:operator pos:line="32" pos:column="16">.</op:operator><name pos:line="32" pos:column="17">event</name><op:operator pos:line="32" pos:column="22">.</op:operator><name pos:line="32" pos:column="23">ActionListener</name></name>;</import>
<import pos:line="33" pos:column="1">import <name><name pos:line="33" pos:column="8">java</name><op:operator pos:line="33" pos:column="12">.</op:operator><name pos:line="33" pos:column="13">awt</name><op:operator pos:line="33" pos:column="16">.</op:operator><name pos:line="33" pos:column="17">event</name><op:operator pos:line="33" pos:column="22">.</op:operator><name pos:line="33" pos:column="23">ActionEvent</name></name>;</import>




<class><specifier pos:line="38" pos:column="1">public</specifier> class <name pos:line="38" pos:column="14">manageDeptCourses</name> <super><extends pos:line="38" pos:column="32">extends <name pos:line="38" pos:column="40">JTabbedPane</name></extends></super> <block pos:line="38" pos:column="52">{
	<decl_stmt><decl><type><specifier pos:line="39" pos:column="9">private</specifier> <specifier pos:line="39" pos:column="17">static</specifier> <name pos:line="39" pos:column="24">Admin</name></type> <name pos:line="39" pos:column="30">admin</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="40" pos:column="9">private</specifier> <specifier pos:line="40" pos:column="17">static</specifier> <name pos:line="40" pos:column="24">Department</name></type> <name pos:line="40" pos:column="35">adminDepartment</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="41" pos:column="9">private</specifier> <specifier pos:line="41" pos:column="17">static</specifier> <name pos:line="41" pos:column="24">manageDeptCourses</name></type> <name pos:line="41" pos:column="42">deptCoursesTab</name></decl>;</decl_stmt>
	
	
	<decl_stmt><decl><type><specifier pos:line="44" pos:column="9">private</specifier> <specifier pos:line="44" pos:column="17">static</specifier> <specifier pos:line="44" pos:column="24">final</specifier> <name pos:line="44" pos:column="30">long</name></type> <name pos:line="44" pos:column="35">serialVersionUID</name> <init pos:line="44" pos:column="52">= <expr><lit:literal type="number" pos:line="44" pos:column="54">1L</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="45" pos:column="9">private</specifier> <name pos:line="45" pos:column="17">JTextField</name></type> <name pos:line="45" pos:column="28">textField</name></decl>;</decl_stmt>
	
	<comment type="line" pos:line="47" pos:column="9">//-----update COURSE variables-------------//</comment>
	<decl_stmt><decl><type><specifier pos:line="48" pos:column="9">private</specifier> <name pos:line="48" pos:column="17">JTextField</name></type> <name pos:line="48" pos:column="28">textField_1</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="49" pos:column="9">private</specifier> <name><name pos:line="49" pos:column="17">JComboBox</name><argument_list pos:line="49" pos:column="26">&lt;<argument><name pos:line="49" pos:column="27">String</name></argument>&gt;</argument_list></name></type> <name pos:line="49" pos:column="35">allCoursesCombo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="50" pos:column="9">private</specifier> <name pos:line="50" pos:column="17">JButton</name></type> <name pos:line="50" pos:column="25">btnConfirmUpdate</name></decl>;</decl_stmt>
	
	<comment type="line" pos:line="52" pos:column="9">//-------------UPDATE COURSE OFFERING VARIABLES------------------//</comment>
	<decl_stmt><decl><type><specifier pos:line="53" pos:column="9">private</specifier> <name><name pos:line="53" pos:column="17">JComboBox</name><argument_list pos:line="53" pos:column="26">&lt;<argument><name pos:line="53" pos:column="27">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="53" pos:column="36">updateOfferIDCombo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="54" pos:column="9">private</specifier> <name><name pos:line="54" pos:column="17">JComboBox</name><argument_list pos:line="54" pos:column="26">&lt;<argument><name pos:line="54" pos:column="27">String</name></argument>&gt;</argument_list></name></type> <name pos:line="54" pos:column="35">updateOfferProfessorCombo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="55" pos:column="9">private</specifier> <name pos:line="55" pos:column="17">JButton</name></type> <name pos:line="55" pos:column="25">btnUpdateOffer</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="56" pos:column="9">private</specifier> <name><name pos:line="56" pos:column="17">ArrayList</name><argument_list pos:line="56" pos:column="26">&lt;<argument><name pos:line="56" pos:column="27">CourseSchedule</name></argument>&gt;</argument_list></name></type> <name pos:line="56" pos:column="43">allDeptCoursesOffered</name></decl>;</decl_stmt>
	

	<function><type><specifier pos:line="59" pos:column="9">public</specifier> <specifier pos:line="59" pos:column="16">static</specifier> <name pos:line="59" pos:column="23">manageDeptCourses</name></type> <name pos:line="59" pos:column="41">getInstance</name><parameter_list pos:line="59" pos:column="52">(<param><decl><type><name pos:line="59" pos:column="53">Admin</name></type> <name pos:line="59" pos:column="59">a</name></decl></param>)</parameter_list><block pos:line="59" pos:column="61">{
		<try pos:line="60" pos:column="17">try <block pos:line="60" pos:column="21">{
			<expr_stmt><expr><name pos:line="61" pos:column="25">deptCoursesTab</name> <op:operator pos:line="61" pos:column="40">=</op:operator> <op:operator pos:line="61" pos:column="42">new</op:operator> <call><name pos:line="61" pos:column="46">manageDeptCourses</name><argument_list pos:line="61" pos:column="63">(<argument><expr><name pos:line="61" pos:column="64">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="62" pos:column="25">return <expr><name pos:line="62" pos:column="32">deptCoursesTab</name></expr>;</return>
		}</block> <catch pos:line="63" pos:column="19">catch <parameter_list pos:line="63" pos:column="25">(<param><decl><type><name><name pos:line="63" pos:column="26">Department</name><op:operator pos:line="63" pos:column="36">.</op:operator><name pos:line="63" pos:column="37">DepartmentDoesNotExistException</name></name></type> <name pos:line="63" pos:column="69">e</name></decl></param>)</parameter_list> <block pos:line="63" pos:column="72">{
			<expr_stmt><expr><call><name><name pos:line="64" pos:column="25">e</name><op:operator pos:line="64" pos:column="26">.</op:operator><name pos:line="64" pos:column="27">printStackTrace</name></name><argument_list pos:line="64" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
			<return pos:line="65" pos:column="25">return <expr><lit:literal type="null" pos:line="65" pos:column="32">null</lit:literal></expr>;</return>
		}</block></catch></try>
	}</block></function>
	
	<constructor><specifier pos:line="69" pos:column="9">private</specifier> <name pos:line="69" pos:column="17">manageDeptCourses</name><parameter_list pos:line="69" pos:column="34">(<param><decl><type><name pos:line="69" pos:column="35">Admin</name></type> <name pos:line="69" pos:column="41">a</name></decl></param>)</parameter_list> <throws pos:line="69" pos:column="44">throws <argument><expr><name><name pos:line="69" pos:column="51">Department</name><op:operator pos:line="69" pos:column="61">.</op:operator><name pos:line="69" pos:column="62">DepartmentDoesNotExistException</name></name></expr></argument></throws> <block pos:line="69" pos:column="94">{
		
		<comment type="line" pos:line="71" pos:column="17">//-------------ADD A COURSE CODE----------//</comment>
		<expr_stmt><expr><name><name pos:line="72" pos:column="17">manageDeptCourses</name><op:operator pos:line="72" pos:column="34">.</op:operator><name pos:line="72" pos:column="35">admin</name></name> <op:operator pos:line="72" pos:column="41">=</op:operator> <name pos:line="72" pos:column="43">a</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="73" pos:column="17">manageDeptCourses</name><op:operator pos:line="73" pos:column="34">.</op:operator><name pos:line="73" pos:column="35">adminDepartment</name></name> <op:operator pos:line="73" pos:column="51">=</op:operator> <op:operator pos:line="73" pos:column="53">new</op:operator> <call><name pos:line="73" pos:column="57">Department</name><argument_list pos:line="73" pos:column="67">(<argument><expr><call><name><name pos:line="73" pos:column="68">admin</name><op:operator pos:line="73" pos:column="73">.</op:operator><name pos:line="73" pos:column="74">getDeptID</name></name><argument_list pos:line="73" pos:column="83">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="74" pos:column="17">JPanel</name></type> <name pos:line="74" pos:column="24">addACourse</name> <init pos:line="74" pos:column="35">= <expr><op:operator pos:line="74" pos:column="37">new</op:operator> <call><name pos:line="74" pos:column="41">JPanel</name><argument_list pos:line="74" pos:column="47">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="75" pos:column="17">addTab</name><argument_list pos:line="75" pos:column="23">(<argument><expr><lit:literal type="string" pos:line="75" pos:column="24">"Add a Course"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="75" pos:column="40">null</lit:literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="46">addACourse</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="75" pos:column="58">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="76" pos:column="17">addACourse</name><op:operator pos:line="76" pos:column="27">.</op:operator><name pos:line="76" pos:column="28">setLayout</name></name><argument_list pos:line="76" pos:column="37">(<argument><expr><op:operator pos:line="76" pos:column="38">new</op:operator> <call><name pos:line="76" pos:column="42">GridLayout</name><argument_list pos:line="76" pos:column="52">(<argument><expr><lit:literal type="number" pos:line="76" pos:column="53">3</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="76" pos:column="56">2</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="76" pos:column="59">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="76" pos:column="62">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="78" pos:column="17">JLabel</name></type> <name pos:line="78" pos:column="24">lblCourseName</name> <init pos:line="78" pos:column="38">= <expr><op:operator pos:line="78" pos:column="40">new</op:operator> <call><name pos:line="78" pos:column="44">JLabel</name><argument_list pos:line="78" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="78" pos:column="51">"Course Name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="79" pos:column="17">addACourse</name><op:operator pos:line="79" pos:column="27">.</op:operator><name pos:line="79" pos:column="28">add</name></name><argument_list pos:line="79" pos:column="31">(<argument><expr><name pos:line="79" pos:column="32">lblCourseName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="81" pos:column="17">textField</name> <op:operator pos:line="81" pos:column="27">=</op:operator> <op:operator pos:line="81" pos:column="29">new</op:operator> <call><name pos:line="81" pos:column="33">JTextField</name><argument_list pos:line="81" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="82" pos:column="17">addACourse</name><op:operator pos:line="82" pos:column="27">.</op:operator><name pos:line="82" pos:column="28">add</name></name><argument_list pos:line="82" pos:column="31">(<argument><expr><name pos:line="82" pos:column="32">textField</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="83" pos:column="17">textField</name><op:operator pos:line="83" pos:column="26">.</op:operator><name pos:line="83" pos:column="27">setColumns</name></name><argument_list pos:line="83" pos:column="37">(<argument><expr><lit:literal type="number" pos:line="83" pos:column="38">10</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="85" pos:column="17">JLabel</name></type> <name pos:line="85" pos:column="24">lblNewLabel</name> <init pos:line="85" pos:column="36">= <expr><op:operator pos:line="85" pos:column="38">new</op:operator> <call><name pos:line="85" pos:column="42">JLabel</name><argument_list pos:line="85" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="85" pos:column="49">"Course Department"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="86" pos:column="17">addACourse</name><op:operator pos:line="86" pos:column="27">.</op:operator><name pos:line="86" pos:column="28">add</name></name><argument_list pos:line="86" pos:column="31">(<argument><expr><name pos:line="86" pos:column="32">lblNewLabel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="88" pos:column="17">JLabel</name></type> <name pos:line="88" pos:column="24">lblDepartment</name> <init pos:line="88" pos:column="38">= <expr><op:operator pos:line="88" pos:column="40">new</op:operator> <call><name pos:line="88" pos:column="44">JLabel</name><argument_list pos:line="88" pos:column="50">(<argument><expr><call><name><name pos:line="88" pos:column="51">adminDepartment</name><op:operator pos:line="88" pos:column="66">.</op:operator><name pos:line="88" pos:column="67">getDepartmentName</name></name><argument_list pos:line="88" pos:column="84">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="89" pos:column="17">addACourse</name><op:operator pos:line="89" pos:column="27">.</op:operator><name pos:line="89" pos:column="28">add</name></name><argument_list pos:line="89" pos:column="31">(<argument><expr><name pos:line="89" pos:column="32">lblDepartment</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="91" pos:column="17">JLabel</name></type> <name pos:line="91" pos:column="24">lblNewLabel_1</name> <init pos:line="91" pos:column="38">= <expr><op:operator pos:line="91" pos:column="40">new</op:operator> <call><name pos:line="91" pos:column="44">JLabel</name><argument_list pos:line="91" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="91" pos:column="51">"Confirm Changes"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="92" pos:column="17">addACourse</name><op:operator pos:line="92" pos:column="27">.</op:operator><name pos:line="92" pos:column="28">add</name></name><argument_list pos:line="92" pos:column="31">(<argument><expr><name pos:line="92" pos:column="32">lblNewLabel_1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="94" pos:column="17">JButton</name></type> <name pos:line="94" pos:column="25">btnNewButton</name> <init pos:line="94" pos:column="38">= <expr><op:operator pos:line="94" pos:column="40">new</op:operator> <call><name pos:line="94" pos:column="44">JButton</name><argument_list pos:line="94" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="94" pos:column="52">"Add course"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="95" pos:column="17">btnNewButton</name><op:operator pos:line="95" pos:column="29">.</op:operator><name pos:line="95" pos:column="30">addActionListener</name></name><argument_list pos:line="95" pos:column="47">(<argument><expr><op:operator pos:line="95" pos:column="48">new</op:operator> <class><super><name pos:line="95" pos:column="52">ActionListener</name></super><argument_list pos:line="95" pos:column="66">()</argument_list> <block pos:line="95" pos:column="69">{
			<function><type><specifier pos:line="96" pos:column="25">public</specifier> <name pos:line="96" pos:column="32">void</name></type> <name pos:line="96" pos:column="37">actionPerformed</name><parameter_list pos:line="96" pos:column="52">(<param><decl><type><name pos:line="96" pos:column="53">ActionEvent</name></type> <name pos:line="96" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="96" pos:column="71">{
				<expr_stmt><expr><call><name pos:line="97" pos:column="33">addCourse</name><argument_list pos:line="97" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="98" pos:column="33">textField</name><op:operator pos:line="98" pos:column="42">.</op:operator><name pos:line="98" pos:column="43">setText</name></name><argument_list pos:line="98" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="98" pos:column="51">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="101" pos:column="17">addACourse</name><op:operator pos:line="101" pos:column="27">.</op:operator><name pos:line="101" pos:column="28">add</name></name><argument_list pos:line="101" pos:column="31">(<argument><expr><name pos:line="101" pos:column="32">btnNewButton</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="102" pos:column="17">//-------------END ADD COURSE-------------//</comment>
		
		
		<comment type="line" pos:line="105" pos:column="17">//------------UPDATE COURSE CODE---------//</comment>
		<decl_stmt><decl><type><name pos:line="106" pos:column="17">JPanel</name></type> <name pos:line="106" pos:column="24">updateCourse</name> <init pos:line="106" pos:column="37">= <expr><op:operator pos:line="106" pos:column="39">new</op:operator> <call><name pos:line="106" pos:column="43">JPanel</name><argument_list pos:line="106" pos:column="49">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="107" pos:column="17">addTab</name><argument_list pos:line="107" pos:column="23">(<argument><expr><lit:literal type="string" pos:line="107" pos:column="24">"Update a course"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="107" pos:column="43">null</lit:literal></expr></argument>, <argument><expr><name pos:line="107" pos:column="49">updateCourse</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="107" pos:column="63">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="108" pos:column="17">updateCourse</name><op:operator pos:line="108" pos:column="29">.</op:operator><name pos:line="108" pos:column="30">setLayout</name></name><argument_list pos:line="108" pos:column="39">(<argument><expr><op:operator pos:line="108" pos:column="40">new</op:operator> <call><name pos:line="108" pos:column="44">GridLayout</name><argument_list pos:line="108" pos:column="54">(<argument><expr><lit:literal type="number" pos:line="108" pos:column="55">4</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="108" pos:column="58">2</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="108" pos:column="61">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="108" pos:column="64">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="110" pos:column="17">JLabel</name></type> <name pos:line="110" pos:column="24">lblSelectCourse</name> <init pos:line="110" pos:column="40">= <expr><op:operator pos:line="110" pos:column="42">new</op:operator> <call><name pos:line="110" pos:column="46">JLabel</name><argument_list pos:line="110" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="110" pos:column="53">"Select Course"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="111" pos:column="17">updateCourse</name><op:operator pos:line="111" pos:column="29">.</op:operator><name pos:line="111" pos:column="30">add</name></name><argument_list pos:line="111" pos:column="33">(<argument><expr><name pos:line="111" pos:column="34">lblSelectCourse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="113" pos:column="17">allCoursesCombo</name> <op:operator pos:line="113" pos:column="33">=</op:operator> <op:operator pos:line="113" pos:column="35">new</op:operator> <call><name><name pos:line="113" pos:column="39">JComboBox</name><argument_list pos:line="113" pos:column="48">&lt;<argument><name pos:line="113" pos:column="49">String</name></argument>&gt;</argument_list></name><argument_list pos:line="113" pos:column="56">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="114" pos:column="17">allCoursesCombo</name><op:operator pos:line="114" pos:column="32">.</op:operator><name pos:line="114" pos:column="33">addActionListener</name></name><argument_list pos:line="114" pos:column="50">(<argument><expr><op:operator pos:line="114" pos:column="51">new</op:operator> <class><super><name pos:line="114" pos:column="55">ActionListener</name></super><argument_list pos:line="114" pos:column="69">()</argument_list> <block pos:line="114" pos:column="72">{
			<function><type><specifier pos:line="115" pos:column="25">public</specifier> <name pos:line="115" pos:column="32">void</name></type> <name pos:line="115" pos:column="37">actionPerformed</name><parameter_list pos:line="115" pos:column="52">(<param><decl><type><name pos:line="115" pos:column="53">ActionEvent</name></type> <name pos:line="115" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="115" pos:column="71">{
				<expr_stmt><expr><call><name><name pos:line="116" pos:column="33">textField_1</name><op:operator pos:line="116" pos:column="44">.</op:operator><name pos:line="116" pos:column="45">setEnabled</name></name><argument_list pos:line="116" pos:column="55">(<argument><expr><lit:literal type="boolean" pos:line="116" pos:column="56">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="117" pos:column="33">btnConfirmUpdate</name><op:operator pos:line="117" pos:column="49">.</op:operator><name pos:line="117" pos:column="50">setEnabled</name></name><argument_list pos:line="117" pos:column="60">(<argument><expr><lit:literal type="boolean" pos:line="117" pos:column="61">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
				<try pos:line="119" pos:column="33">try <block pos:line="119" pos:column="37">{
					<decl_stmt><decl><type><name pos:line="120" pos:column="41">Course</name></type> <name pos:line="120" pos:column="48">courseSelected</name> <init pos:line="120" pos:column="63">= <expr><op:operator pos:line="120" pos:column="65">new</op:operator> <call><name pos:line="120" pos:column="69">Course</name><argument_list pos:line="120" pos:column="75">(<argument><expr><op:operator pos:line="120" pos:column="76">(</op:operator><name pos:line="120" pos:column="77">String</name><op:operator pos:line="120" pos:column="83">)</op:operator><call><name><name pos:line="120" pos:column="84">allCoursesCombo</name><op:operator pos:line="120" pos:column="99">.</op:operator><name pos:line="120" pos:column="100">getSelectedItem</name></name><argument_list pos:line="120" pos:column="115">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					
					<expr_stmt><expr><call><name><name pos:line="122" pos:column="41">DBAnnotation</name><op:operator pos:line="122" pos:column="53">.</op:operator><name pos:line="122" pos:column="54">annoate</name></name><argument_list pos:line="122" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="122" pos:column="62">"cName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="122" pos:column="71">"courses"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="122" pos:column="82">"CourseName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="122" pos:column="96">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="123" pos:column="41">String</name></type> <name pos:line="123" pos:column="48">cName</name> <init pos:line="123" pos:column="54">= <expr><call><name><name pos:line="123" pos:column="56">courseSelected</name><op:operator pos:line="123" pos:column="70">.</op:operator><name pos:line="123" pos:column="71">getCourseName</name></name><argument_list pos:line="123" pos:column="84">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="124" pos:column="41">textField_1</name><op:operator pos:line="124" pos:column="52">.</op:operator><name pos:line="124" pos:column="53">setText</name></name><argument_list pos:line="124" pos:column="60">(<argument><expr><name pos:line="124" pos:column="61">cName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
				}</block> <catch pos:line="126" pos:column="35">catch <parameter_list pos:line="126" pos:column="41">(<param><decl><type><name><name pos:line="126" pos:column="42">Course</name><op:operator pos:line="126" pos:column="48">.</op:operator><name pos:line="126" pos:column="49">CourseDoesNotExistException</name></name></type> <name pos:line="126" pos:column="77">e</name></decl></param>)</parameter_list> <block pos:line="126" pos:column="80">{
					<comment type="line" pos:line="127" pos:column="41">// TODO Auto-generated catch block</comment>
					<expr_stmt><expr><call><name><name pos:line="128" pos:column="41">e</name><op:operator pos:line="128" pos:column="42">.</op:operator><name pos:line="128" pos:column="43">printStackTrace</name></name><argument_list pos:line="128" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="132" pos:column="17">updateCourse</name><op:operator pos:line="132" pos:column="29">.</op:operator><name pos:line="132" pos:column="30">add</name></name><argument_list pos:line="132" pos:column="33">(<argument><expr><name pos:line="132" pos:column="34">allCoursesCombo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="134" pos:column="17">JLabel</name></type> <name pos:line="134" pos:column="24">lblSelectedCourseName</name> <init pos:line="134" pos:column="46">= <expr><op:operator pos:line="134" pos:column="48">new</op:operator> <call><name pos:line="134" pos:column="52">JLabel</name><argument_list pos:line="134" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="134" pos:column="59">"Selected Course Name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="135" pos:column="17">updateCourse</name><op:operator pos:line="135" pos:column="29">.</op:operator><name pos:line="135" pos:column="30">add</name></name><argument_list pos:line="135" pos:column="33">(<argument><expr><name pos:line="135" pos:column="34">lblSelectedCourseName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="137" pos:column="17">textField_1</name> <op:operator pos:line="137" pos:column="29">=</op:operator> <op:operator pos:line="137" pos:column="31">new</op:operator> <call><name pos:line="137" pos:column="35">JTextField</name><argument_list pos:line="137" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="138" pos:column="17">textField_1</name><op:operator pos:line="138" pos:column="28">.</op:operator><name pos:line="138" pos:column="29">setEnabled</name></name><argument_list pos:line="138" pos:column="39">(<argument><expr><lit:literal type="boolean" pos:line="138" pos:column="40">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="139" pos:column="17">updateCourse</name><op:operator pos:line="139" pos:column="29">.</op:operator><name pos:line="139" pos:column="30">add</name></name><argument_list pos:line="139" pos:column="33">(<argument><expr><name pos:line="139" pos:column="34">textField_1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="140" pos:column="17">textField_1</name><op:operator pos:line="140" pos:column="28">.</op:operator><name pos:line="140" pos:column="29">setColumns</name></name><argument_list pos:line="140" pos:column="39">(<argument><expr><lit:literal type="number" pos:line="140" pos:column="40">10</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="142" pos:column="17">JLabel</name></type> <name pos:line="142" pos:column="24">lblSelectedCourseDepartment</name> <init pos:line="142" pos:column="52">= <expr><op:operator pos:line="142" pos:column="54">new</op:operator> <call><name pos:line="142" pos:column="58">JLabel</name><argument_list pos:line="142" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="142" pos:column="65">"Selected Course Department"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="143" pos:column="17">updateCourse</name><op:operator pos:line="143" pos:column="29">.</op:operator><name pos:line="143" pos:column="30">add</name></name><argument_list pos:line="143" pos:column="33">(<argument><expr><name pos:line="143" pos:column="34">lblSelectedCourseDepartment</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="145" pos:column="17">JLabel</name></type> <name pos:line="145" pos:column="24">lblDepartment_1</name> <init pos:line="145" pos:column="40">= <expr><op:operator pos:line="145" pos:column="42">new</op:operator> <call><name pos:line="145" pos:column="46">JLabel</name><argument_list pos:line="145" pos:column="52">(<argument><expr><call><name><name pos:line="145" pos:column="53">adminDepartment</name><op:operator pos:line="145" pos:column="68">.</op:operator><name pos:line="145" pos:column="69">getDepartmentName</name></name><argument_list pos:line="145" pos:column="86">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="146" pos:column="17">updateCourse</name><op:operator pos:line="146" pos:column="29">.</op:operator><name pos:line="146" pos:column="30">add</name></name><argument_list pos:line="146" pos:column="33">(<argument><expr><name pos:line="146" pos:column="34">lblDepartment_1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="148" pos:column="17">JLabel</name></type> <name pos:line="148" pos:column="24">lblUpdateWithAbove</name> <init pos:line="148" pos:column="43">= <expr><op:operator pos:line="148" pos:column="45">new</op:operator> <call><name pos:line="148" pos:column="49">JLabel</name><argument_list pos:line="148" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="148" pos:column="56">"Update with above values"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="149" pos:column="17">updateCourse</name><op:operator pos:line="149" pos:column="29">.</op:operator><name pos:line="149" pos:column="30">add</name></name><argument_list pos:line="149" pos:column="33">(<argument><expr><name pos:line="149" pos:column="34">lblUpdateWithAbove</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="151" pos:column="17">btnConfirmUpdate</name> <op:operator pos:line="151" pos:column="34">=</op:operator> <op:operator pos:line="151" pos:column="36">new</op:operator> <call><name pos:line="151" pos:column="40">JButton</name><argument_list pos:line="151" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="151" pos:column="48">"Confirm update"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="152" pos:column="17">btnConfirmUpdate</name><op:operator pos:line="152" pos:column="33">.</op:operator><name pos:line="152" pos:column="34">addActionListener</name></name><argument_list pos:line="152" pos:column="51">(<argument><expr><op:operator pos:line="152" pos:column="52">new</op:operator> <class><super><name pos:line="152" pos:column="56">ActionListener</name></super><argument_list pos:line="152" pos:column="70">()</argument_list> <block pos:line="152" pos:column="73">{
			<function><type><specifier pos:line="153" pos:column="25">public</specifier> <name pos:line="153" pos:column="32">void</name></type> <name pos:line="153" pos:column="37">actionPerformed</name><parameter_list pos:line="153" pos:column="52">(<param><decl><type><name pos:line="153" pos:column="53">ActionEvent</name></type> <name pos:line="153" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="153" pos:column="71">{
				<expr_stmt><expr><call><name pos:line="154" pos:column="33">updateCourse</name><argument_list pos:line="154" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="155" pos:column="33">DepartmentAdminUI</name><op:operator pos:line="155" pos:column="50">.</op:operator><name pos:line="155" pos:column="51">initializeAllTabs</name></name><argument_list pos:line="155" pos:column="68">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="156" pos:column="33">textField_1</name><op:operator pos:line="156" pos:column="44">.</op:operator><name pos:line="156" pos:column="45">setEnabled</name></name><argument_list pos:line="156" pos:column="55">(<argument><expr><lit:literal type="boolean" pos:line="156" pos:column="56">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="157" pos:column="33">btnConfirmUpdate</name><op:operator pos:line="157" pos:column="49">.</op:operator><name pos:line="157" pos:column="50">setEnabled</name></name><argument_list pos:line="157" pos:column="60">(<argument><expr><lit:literal type="boolean" pos:line="157" pos:column="61">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="160" pos:column="17">btnConfirmUpdate</name><op:operator pos:line="160" pos:column="33">.</op:operator><name pos:line="160" pos:column="34">setEnabled</name></name><argument_list pos:line="160" pos:column="44">(<argument><expr><lit:literal type="boolean" pos:line="160" pos:column="45">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="161" pos:column="17">updateCourse</name><op:operator pos:line="161" pos:column="29">.</op:operator><name pos:line="161" pos:column="30">add</name></name><argument_list pos:line="161" pos:column="33">(<argument><expr><name pos:line="161" pos:column="34">btnConfirmUpdate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		
		<comment type="line" pos:line="164" pos:column="17">//--------------UPDATE COURSE OFFERING CODE----------------//</comment>
		<decl_stmt><decl><type><name pos:line="165" pos:column="17">JPanel</name></type> <name pos:line="165" pos:column="24">updateCourseOffering</name> <init pos:line="165" pos:column="45">= <expr><op:operator pos:line="165" pos:column="47">new</op:operator> <call><name pos:line="165" pos:column="51">JPanel</name><argument_list pos:line="165" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="166" pos:column="17">addTab</name><argument_list pos:line="166" pos:column="23">(<argument><expr><lit:literal type="string" pos:line="166" pos:column="24">"Update Course Offering"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="166" pos:column="50">null</lit:literal></expr></argument>, <argument><expr><name pos:line="166" pos:column="56">updateCourseOffering</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="166" pos:column="78">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="167" pos:column="17">updateCourseOffering</name><op:operator pos:line="167" pos:column="37">.</op:operator><name pos:line="167" pos:column="38">setLayout</name></name><argument_list pos:line="167" pos:column="47">(<argument><expr><op:operator pos:line="167" pos:column="48">new</op:operator> <call><name pos:line="167" pos:column="52">GridLayout</name><argument_list pos:line="167" pos:column="62">(<argument><expr><lit:literal type="number" pos:line="167" pos:column="63">3</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="167" pos:column="66">2</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="167" pos:column="69">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="167" pos:column="72">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="169" pos:column="17">JLabel</name></type> <name pos:line="169" pos:column="24">lblSelectOfferId</name> <init pos:line="169" pos:column="41">= <expr><op:operator pos:line="169" pos:column="43">new</op:operator> <call><name pos:line="169" pos:column="47">JLabel</name><argument_list pos:line="169" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="169" pos:column="54">"Select Offer ID"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="170" pos:column="17">updateCourseOffering</name><op:operator pos:line="170" pos:column="37">.</op:operator><name pos:line="170" pos:column="38">add</name></name><argument_list pos:line="170" pos:column="41">(<argument><expr><name pos:line="170" pos:column="42">lblSelectOfferId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="172" pos:column="17">updateOfferIDCombo</name> <op:operator pos:line="172" pos:column="36">=</op:operator> <op:operator pos:line="172" pos:column="38">new</op:operator> <call><name><name pos:line="172" pos:column="42">JComboBox</name><argument_list pos:line="172" pos:column="51">&lt;<argument><name pos:line="172" pos:column="52">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="172" pos:column="60">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="173" pos:column="17">updateOfferIDCombo</name><op:operator pos:line="173" pos:column="35">.</op:operator><name pos:line="173" pos:column="36">addActionListener</name></name><argument_list pos:line="173" pos:column="53">(<argument><expr><op:operator pos:line="173" pos:column="54">new</op:operator> <class><super><name pos:line="173" pos:column="58">ActionListener</name></super><argument_list pos:line="173" pos:column="72">()</argument_list> <block pos:line="173" pos:column="75">{
			<function><type><specifier pos:line="174" pos:column="25">public</specifier> <name pos:line="174" pos:column="32">void</name></type> <name pos:line="174" pos:column="37">actionPerformed</name><parameter_list pos:line="174" pos:column="52">(<param><decl><type><name pos:line="174" pos:column="53">ActionEvent</name></type> <name pos:line="174" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="174" pos:column="71">{
				<expr_stmt><expr><call><name><name pos:line="175" pos:column="33">updateOfferProfessorCombo</name><op:operator pos:line="175" pos:column="58">.</op:operator><name pos:line="175" pos:column="59">setEnabled</name></name><argument_list pos:line="175" pos:column="69">(<argument><expr><lit:literal type="boolean" pos:line="175" pos:column="70">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="176" pos:column="33">btnUpdateOffer</name><op:operator pos:line="176" pos:column="47">.</op:operator><name pos:line="176" pos:column="48">setEnabled</name></name><argument_list pos:line="176" pos:column="58">(<argument><expr><lit:literal type="boolean" pos:line="176" pos:column="59">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
				<try pos:line="178" pos:column="33">try <block pos:line="178" pos:column="37">{
					<decl_stmt><decl><type><name pos:line="179" pos:column="41">CourseOffered</name></type> <name pos:line="179" pos:column="55">co</name> <init pos:line="179" pos:column="58">= <expr><op:operator pos:line="179" pos:column="60">new</op:operator> <call><name pos:line="179" pos:column="64">CourseOffered</name><argument_list pos:line="179" pos:column="77">(<argument><expr><op:operator pos:line="179" pos:column="78">(</op:operator><name pos:line="179" pos:column="79">Integer</name><op:operator pos:line="179" pos:column="86">)</op:operator><call><name><name pos:line="179" pos:column="87">updateOfferIDCombo</name><op:operator pos:line="179" pos:column="105">.</op:operator><name pos:line="179" pos:column="106">getSelectedItem</name></name><argument_list pos:line="179" pos:column="121">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name><name pos:line="180" pos:column="41">DefaultComboBoxModel</name><argument_list pos:line="180" pos:column="61">&lt;<argument><name pos:line="180" pos:column="62">String</name></argument>&gt;</argument_list></name></type> <name pos:line="180" pos:column="70">profModel</name> <init pos:line="180" pos:column="80">= <expr><op:operator pos:line="180" pos:column="82">new</op:operator> <call><name><name pos:line="180" pos:column="86">DefaultComboBoxModel</name><argument_list pos:line="180" pos:column="106">&lt;<argument><name pos:line="180" pos:column="107">String</name></argument>&gt;</argument_list></name><argument_list pos:line="180" pos:column="114">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name><name pos:line="181" pos:column="41">ArrayList</name><argument_list pos:line="181" pos:column="50">&lt;<argument><name pos:line="181" pos:column="51">Professor</name></argument>&gt;</argument_list></name></type> <name pos:line="181" pos:column="62">deptProfessor</name> <init pos:line="181" pos:column="76">= <expr><call><name><name pos:line="181" pos:column="78">Professor</name><op:operator pos:line="181" pos:column="87">.</op:operator><name pos:line="181" pos:column="88">getAllProfInADept</name></name><argument_list pos:line="181" pos:column="105">(<argument><expr><call><name><name pos:line="181" pos:column="106">adminDepartment</name><op:operator pos:line="181" pos:column="121">.</op:operator><name pos:line="181" pos:column="122">getDepartmentID</name></name><argument_list pos:line="181" pos:column="137">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<for pos:line="182" pos:column="41">for(<init><decl><type><name pos:line="182" pos:column="45">Professor</name></type> <name pos:line="182" pos:column="55">p</name><range pos:line="182" pos:column="56">:<expr><name pos:line="182" pos:column="57">deptProfessor</name></expr></range></decl></init>)<block pos:line="182" pos:column="71">{
						
						<expr_stmt><expr><call><name><name pos:line="184" pos:column="49">DBAnnotation</name><op:operator pos:line="184" pos:column="61">.</op:operator><name pos:line="184" pos:column="62">annoate</name></name><argument_list pos:line="184" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="184" pos:column="70">"prof"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="184" pos:column="78">"People"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="184" pos:column="88">"UserName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="184" pos:column="100">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<decl_stmt><decl><type><name pos:line="185" pos:column="49">String</name></type> <name pos:line="185" pos:column="56">prof</name> <init pos:line="185" pos:column="61">= <expr><call><name><name pos:line="185" pos:column="63">p</name><op:operator pos:line="185" pos:column="64">.</op:operator><name pos:line="185" pos:column="65">getUserName</name></name><argument_list pos:line="185" pos:column="76">()</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><call><name><name pos:line="186" pos:column="49">profModel</name><op:operator pos:line="186" pos:column="58">.</op:operator><name pos:line="186" pos:column="59">addElement</name></name><argument_list pos:line="186" pos:column="69">(<argument><expr><name pos:line="186" pos:column="70">prof</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></for>
					<expr_stmt><expr><call><name><name pos:line="188" pos:column="41">updateOfferProfessorCombo</name><op:operator pos:line="188" pos:column="66">.</op:operator><name pos:line="188" pos:column="67">setModel</name></name><argument_list pos:line="188" pos:column="75">(<argument><expr><name pos:line="188" pos:column="76">profModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
					<expr_stmt><expr><call><name><name pos:line="190" pos:column="41">DBAnnotation</name><op:operator pos:line="190" pos:column="53">.</op:operator><name pos:line="190" pos:column="54">annoate</name></name><argument_list pos:line="190" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="190" pos:column="62">"professorName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="190" pos:column="79">"People"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="190" pos:column="89">"UserName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="190" pos:column="101">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="191" pos:column="41">String</name></type> <name pos:line="191" pos:column="48">professorName</name> <init pos:line="191" pos:column="62">= <expr><call><name><name pos:line="191" pos:column="64">co</name><op:operator pos:line="191" pos:column="66">.</op:operator><name pos:line="191" pos:column="67">getProfessor</name></name><argument_list pos:line="191" pos:column="79">()</argument_list></call><op:operator pos:line="191" pos:column="81">.</op:operator><call><name pos:line="191" pos:column="82">getUserName</name><argument_list pos:line="191" pos:column="93">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="192" pos:column="41">updateOfferProfessorCombo</name><op:operator pos:line="192" pos:column="66">.</op:operator><name pos:line="192" pos:column="67">setSelectedIndex</name></name><argument_list pos:line="192" pos:column="83">(<argument><expr><call><name pos:line="192" pos:column="84">getProfessorIndex</name><argument_list pos:line="192" pos:column="101">(<argument><expr><name pos:line="192" pos:column="102">professorName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
				}</block> <catch pos:line="194" pos:column="35">catch <parameter_list pos:line="194" pos:column="41">(<param><decl><type><name><name pos:line="194" pos:column="42">Professor</name><op:operator pos:line="194" pos:column="51">.</op:operator><name pos:line="194" pos:column="52">ProfessorDoesNotExistException</name></name></type> <name pos:line="194" pos:column="83">e</name></decl></param>)</parameter_list> <block pos:line="194" pos:column="86">{
					<expr_stmt><expr><call><name><name pos:line="195" pos:column="41">System</name><op:operator pos:line="195" pos:column="47">.</op:operator><name pos:line="195" pos:column="48">out</name><op:operator pos:line="195" pos:column="51">.</op:operator><name pos:line="195" pos:column="52">println</name></name><argument_list pos:line="195" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="195" pos:column="60">"Failed to initialize list"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="196" pos:column="41">e</name><op:operator pos:line="196" pos:column="42">.</op:operator><name pos:line="196" pos:column="43">printStackTrace</name></name><argument_list pos:line="196" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch> <catch pos:line="197" pos:column="35">catch <parameter_list pos:line="197" pos:column="41">(<param><decl><type><name><name pos:line="197" pos:column="42">Course</name><op:operator pos:line="197" pos:column="48">.</op:operator><name pos:line="197" pos:column="49">CourseDoesNotExistException</name></name></type> <name pos:line="197" pos:column="77">e</name></decl></param>)</parameter_list> <block pos:line="197" pos:column="80">{
					<expr_stmt><expr><call><name><name pos:line="198" pos:column="41">System</name><op:operator pos:line="198" pos:column="47">.</op:operator><name pos:line="198" pos:column="48">out</name><op:operator pos:line="198" pos:column="51">.</op:operator><name pos:line="198" pos:column="52">println</name></name><argument_list pos:line="198" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="198" pos:column="60">"Failed to initialize list"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="199" pos:column="41">e</name><op:operator pos:line="199" pos:column="42">.</op:operator><name pos:line="199" pos:column="43">printStackTrace</name></name><argument_list pos:line="199" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch> <catch pos:line="200" pos:column="35">catch <parameter_list pos:line="200" pos:column="41">(<param><decl><type><name><name pos:line="200" pos:column="42">CourseOffered</name><op:operator pos:line="200" pos:column="55">.</op:operator><name pos:line="200" pos:column="56">CourseOfferingDoesNotExistException</name></name></type> <name pos:line="200" pos:column="92">e</name></decl></param>)</parameter_list> <block pos:line="200" pos:column="95">{
					<expr_stmt><expr><call><name><name pos:line="201" pos:column="41">System</name><op:operator pos:line="201" pos:column="47">.</op:operator><name pos:line="201" pos:column="48">out</name><op:operator pos:line="201" pos:column="51">.</op:operator><name pos:line="201" pos:column="52">println</name></name><argument_list pos:line="201" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="201" pos:column="60">"Failed to initialize list"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="202" pos:column="41">e</name><op:operator pos:line="202" pos:column="42">.</op:operator><name pos:line="202" pos:column="43">printStackTrace</name></name><argument_list pos:line="202" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
								
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="207" pos:column="17">updateCourseOffering</name><op:operator pos:line="207" pos:column="37">.</op:operator><name pos:line="207" pos:column="38">add</name></name><argument_list pos:line="207" pos:column="41">(<argument><expr><name pos:line="207" pos:column="42">updateOfferIDCombo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="209" pos:column="17">JLabel</name></type> <name pos:line="209" pos:column="24">lblProfessor</name> <init pos:line="209" pos:column="37">= <expr><op:operator pos:line="209" pos:column="39">new</op:operator> <call><name pos:line="209" pos:column="43">JLabel</name><argument_list pos:line="209" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="209" pos:column="50">"Professor"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="210" pos:column="17">updateCourseOffering</name><op:operator pos:line="210" pos:column="37">.</op:operator><name pos:line="210" pos:column="38">add</name></name><argument_list pos:line="210" pos:column="41">(<argument><expr><name pos:line="210" pos:column="42">lblProfessor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="212" pos:column="17">updateOfferProfessorCombo</name> <op:operator pos:line="212" pos:column="43">=</op:operator> <op:operator pos:line="212" pos:column="45">new</op:operator> <call><name><name pos:line="212" pos:column="49">JComboBox</name><argument_list pos:line="212" pos:column="58">&lt;<argument><name pos:line="212" pos:column="59">String</name></argument>&gt;</argument_list></name><argument_list pos:line="212" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="213" pos:column="17">updateOfferProfessorCombo</name><op:operator pos:line="213" pos:column="42">.</op:operator><name pos:line="213" pos:column="43">setEnabled</name></name><argument_list pos:line="213" pos:column="53">(<argument><expr><lit:literal type="boolean" pos:line="213" pos:column="54">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="214" pos:column="17">updateCourseOffering</name><op:operator pos:line="214" pos:column="37">.</op:operator><name pos:line="214" pos:column="38">add</name></name><argument_list pos:line="214" pos:column="41">(<argument><expr><name pos:line="214" pos:column="42">updateOfferProfessorCombo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="216" pos:column="17">JLabel</name></type> <name pos:line="216" pos:column="24">lblLabel</name> <init pos:line="216" pos:column="33">= <expr><op:operator pos:line="216" pos:column="35">new</op:operator> <call><name pos:line="216" pos:column="39">JLabel</name><argument_list pos:line="216" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="216" pos:column="46">"Confirm update"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="217" pos:column="17">updateCourseOffering</name><op:operator pos:line="217" pos:column="37">.</op:operator><name pos:line="217" pos:column="38">add</name></name><argument_list pos:line="217" pos:column="41">(<argument><expr><name pos:line="217" pos:column="42">lblLabel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="219" pos:column="17">btnUpdateOffer</name> <op:operator pos:line="219" pos:column="32">=</op:operator> <op:operator pos:line="219" pos:column="34">new</op:operator> <call><name pos:line="219" pos:column="38">JButton</name><argument_list pos:line="219" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="219" pos:column="46">"Update CourseOffering"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="220" pos:column="17">btnUpdateOffer</name><op:operator pos:line="220" pos:column="31">.</op:operator><name pos:line="220" pos:column="32">addActionListener</name></name><argument_list pos:line="220" pos:column="49">(<argument><expr><op:operator pos:line="220" pos:column="50">new</op:operator> <class><super><name pos:line="220" pos:column="54">ActionListener</name></super><argument_list pos:line="220" pos:column="68">()</argument_list> <block pos:line="220" pos:column="71">{
			<function><type><specifier pos:line="221" pos:column="25">public</specifier> <name pos:line="221" pos:column="32">void</name></type> <name pos:line="221" pos:column="37">actionPerformed</name><parameter_list pos:line="221" pos:column="52">(<param><decl><type><name pos:line="221" pos:column="53">ActionEvent</name></type> <name pos:line="221" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="221" pos:column="71">{
				<try pos:line="222" pos:column="33">try <block pos:line="222" pos:column="37">{
					<decl_stmt><decl><type><name pos:line="223" pos:column="41">CourseOffered</name></type> <name pos:line="223" pos:column="55">co</name> <init pos:line="223" pos:column="58">= <expr><op:operator pos:line="223" pos:column="60">new</op:operator> <call><name pos:line="223" pos:column="64">CourseOffered</name><argument_list pos:line="223" pos:column="77">(<argument><expr><op:operator pos:line="223" pos:column="78">(</op:operator><name pos:line="223" pos:column="79">Integer</name><op:operator pos:line="223" pos:column="86">)</op:operator><call><name><name pos:line="223" pos:column="87">updateOfferIDCombo</name><op:operator pos:line="223" pos:column="105">.</op:operator><name pos:line="223" pos:column="106">getSelectedItem</name></name><argument_list pos:line="223" pos:column="121">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="224" pos:column="41">Professor</name></type> <name pos:line="224" pos:column="51">professor</name> <init pos:line="224" pos:column="61">= <expr><op:operator pos:line="224" pos:column="63">new</op:operator> <call><name pos:line="224" pos:column="67">Professor</name><argument_list pos:line="224" pos:column="76">(<argument><expr><op:operator pos:line="224" pos:column="77">(</op:operator><name pos:line="224" pos:column="78">String</name><op:operator pos:line="224" pos:column="84">)</op:operator><call><name><name pos:line="224" pos:column="85">updateOfferProfessorCombo</name><op:operator pos:line="224" pos:column="110">.</op:operator><name pos:line="224" pos:column="111">getSelectedItem</name></name><argument_list pos:line="224" pos:column="126">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="225" pos:column="41">boolean</name></type> <name pos:line="225" pos:column="49">updated</name> <init pos:line="225" pos:column="57">= <expr><call><name><name pos:line="225" pos:column="59">co</name><op:operator pos:line="225" pos:column="61">.</op:operator><name pos:line="225" pos:column="62">updateCourseOffering</name></name><argument_list pos:line="225" pos:column="82">(<argument><expr><name pos:line="225" pos:column="83">professor</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if pos:line="226" pos:column="41">if<condition pos:line="226" pos:column="43">(<expr><name pos:line="226" pos:column="44">updated</name></expr>)</condition><then><block pos:line="226" pos:column="52">{
						<expr_stmt><expr><call><name pos:line="227" pos:column="49">showMessage</name><argument_list pos:line="227" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="227" pos:column="61">"Update is successfull"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="227" pos:column="86">"Success"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="228" pos:column="49">DepartmentAdminUI</name><op:operator pos:line="228" pos:column="66">.</op:operator><name pos:line="228" pos:column="67">initializeAllTabs</name></name><argument_list pos:line="228" pos:column="84">()</argument_list></call></expr>;</expr_stmt>
						
					}</block></then>
					<else pos:line="231" pos:column="41">else
						<expr_stmt><expr><call><name pos:line="232" pos:column="49">showMessage</name><argument_list pos:line="232" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="232" pos:column="61">"Update was unsuccessfull"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="232" pos:column="89">"Failure"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
					
				}</block> <catch pos:line="234" pos:column="35">catch <parameter_list pos:line="234" pos:column="41">(<param><decl><type><name><name pos:line="234" pos:column="42">Course</name><op:operator pos:line="234" pos:column="48">.</op:operator><name pos:line="234" pos:column="49">CourseDoesNotExistException</name></name></type> <name pos:line="234" pos:column="77">e</name></decl></param>)</parameter_list> <block pos:line="234" pos:column="80">{
					<comment type="line" pos:line="235" pos:column="41">// TODO Auto-generated catch block</comment>
					<expr_stmt><expr><call><name><name pos:line="236" pos:column="41">e</name><op:operator pos:line="236" pos:column="42">.</op:operator><name pos:line="236" pos:column="43">printStackTrace</name></name><argument_list pos:line="236" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch> <catch pos:line="237" pos:column="35">catch <parameter_list pos:line="237" pos:column="41">(<param><decl><type><name><name pos:line="237" pos:column="42">CourseOffered</name><op:operator pos:line="237" pos:column="55">.</op:operator><name pos:line="237" pos:column="56">CourseOfferingDoesNotExistException</name></name></type> <name pos:line="237" pos:column="92">e</name></decl></param>)</parameter_list> <block pos:line="237" pos:column="95">{
					<comment type="line" pos:line="238" pos:column="41">// TODO Auto-generated catch block</comment>
					<expr_stmt><expr><call><name><name pos:line="239" pos:column="41">e</name><op:operator pos:line="239" pos:column="42">.</op:operator><name pos:line="239" pos:column="43">printStackTrace</name></name><argument_list pos:line="239" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="243" pos:column="17">btnUpdateOffer</name><op:operator pos:line="243" pos:column="31">.</op:operator><name pos:line="243" pos:column="32">setEnabled</name></name><argument_list pos:line="243" pos:column="42">(<argument><expr><lit:literal type="boolean" pos:line="243" pos:column="43">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="244" pos:column="17">updateCourseOffering</name><op:operator pos:line="244" pos:column="37">.</op:operator><name pos:line="244" pos:column="38">add</name></name><argument_list pos:line="244" pos:column="41">(<argument><expr><name pos:line="244" pos:column="42">btnUpdateOffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<comment type="line" pos:line="246" pos:column="17">//initialization functions</comment>
		<expr_stmt><expr><call><name pos:line="247" pos:column="17">initializeCourseList</name><argument_list pos:line="247" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="248" pos:column="17">initializeCourseOfferingUpdateTab</name><argument_list pos:line="248" pos:column="50">()</argument_list></call></expr>;</expr_stmt>

	}</block></constructor>
	
	<function><type><specifier pos:line="252" pos:column="9">private</specifier> <name pos:line="252" pos:column="17">void</name></type> <name pos:line="252" pos:column="22">addCourse</name><parameter_list pos:line="252" pos:column="31">()</parameter_list><block pos:line="252" pos:column="33">{
		<decl_stmt><decl><type><name pos:line="253" pos:column="17">String</name></type> <name pos:line="253" pos:column="24">courseName</name> <init pos:line="253" pos:column="35">= <expr><call><name><name pos:line="253" pos:column="37">textField</name><op:operator pos:line="253" pos:column="46">.</op:operator><name pos:line="253" pos:column="47">getText</name></name><argument_list pos:line="253" pos:column="54">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="254" pos:column="17">if<condition pos:line="254" pos:column="19">(<expr><op:operator pos:line="254" pos:column="20">!</op:operator><call><name pos:line="254" pos:column="21">checkStringForCourseName</name><argument_list pos:line="254" pos:column="45">(<argument><expr><name pos:line="254" pos:column="46">courseName</name></expr></argument>)</argument_list></call></expr>)</condition><then><block pos:line="254" pos:column="58">{
			<expr_stmt><expr><call><name pos:line="255" pos:column="25">showMessage</name><argument_list pos:line="255" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="255" pos:column="37">"Please enter course name with two or three uppercase character followed by a number"</lit:literal>
					<op:operator pos:line="256" pos:column="41">+</op:operator> <lit:literal type="string" pos:line="256" pos:column="43">" greater than 100 less than 1000"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="256" pos:column="79">"Error in course name"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="257" pos:column="25">return;</return>
		}</block></then></if>
		
		
		<try pos:line="261" pos:column="17">try <block pos:line="261" pos:column="21">{
			<decl_stmt><decl><type><name pos:line="262" pos:column="25">Department</name></type> <name pos:line="262" pos:column="36">d</name> <init pos:line="262" pos:column="38">= <expr><name pos:line="262" pos:column="40">adminDepartment</name></expr></init></decl>;</decl_stmt>
			<if pos:line="263" pos:column="25">if<condition pos:line="263" pos:column="27">(<expr><call><name><name pos:line="263" pos:column="28">Course</name><op:operator pos:line="263" pos:column="34">.</op:operator><name pos:line="263" pos:column="35">addCourse</name></name><argument_list pos:line="263" pos:column="44">(<argument><expr><name pos:line="263" pos:column="45">courseName</name></expr></argument>, <argument><expr><name pos:line="263" pos:column="57">d</name></expr></argument>)</argument_list></call></expr>)</condition><then><block pos:line="263" pos:column="60">{
				<expr_stmt><expr><call><name pos:line="264" pos:column="33">showMessage</name><argument_list pos:line="264" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="264" pos:column="45">"Course added successfully"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="264" pos:column="74">"Success"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="266" pos:column="25">else<block pos:line="266" pos:column="29">{
				<expr_stmt><expr><call><name pos:line="267" pos:column="33">showMessage</name><argument_list pos:line="267" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="267" pos:column="45">"Course not added, unknown error occurred"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="267" pos:column="89">"Failure"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>
		}</block> <catch pos:line="269" pos:column="19">catch <parameter_list pos:line="269" pos:column="25">(<param><decl><type><name><name pos:line="269" pos:column="26">Course</name><op:operator pos:line="269" pos:column="32">.</op:operator><name pos:line="269" pos:column="33">CourseAlreadyExistsException</name></name></type> <name pos:line="269" pos:column="62">e</name></decl></param>)</parameter_list> <block pos:line="269" pos:column="65">{
			<expr_stmt><expr><call><name pos:line="270" pos:column="25">showMessage</name><argument_list pos:line="270" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="270" pos:column="37">"Course with the same name and department already exists"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="270" pos:column="96">"Duplicate course"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="271" pos:column="25">return;</return>
		}</block></catch></try>
		
		<expr_stmt><expr><call><name><name pos:line="274" pos:column="17">DepartmentAdminUI</name><op:operator pos:line="274" pos:column="34">.</op:operator><name pos:line="274" pos:column="35">initializeAllTabs</name></name><argument_list pos:line="274" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<function><type><specifier pos:line="277" pos:column="9">private</specifier> <name pos:line="277" pos:column="17">void</name></type> <name pos:line="277" pos:column="22">updateCourse</name><parameter_list pos:line="277" pos:column="34">()</parameter_list><block pos:line="277" pos:column="36">{
		<decl_stmt><decl><type><name pos:line="278" pos:column="17">String</name></type> <name pos:line="278" pos:column="24">courseNameNew</name> <init pos:line="278" pos:column="38">= <expr><call><name><name pos:line="278" pos:column="40">textField_1</name><op:operator pos:line="278" pos:column="51">.</op:operator><name pos:line="278" pos:column="52">getText</name></name><argument_list pos:line="278" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<comment type="line" pos:line="279" pos:column="17">//showMessage(courseNameNew, "New");</comment>
		<decl_stmt><decl><type><name pos:line="280" pos:column="17">String</name></type> <name pos:line="280" pos:column="24">courseNameOld</name> <init pos:line="280" pos:column="38">= <expr><op:operator pos:line="280" pos:column="40">(</op:operator><name pos:line="280" pos:column="41">String</name><op:operator pos:line="280" pos:column="47">)</op:operator><call><name><name pos:line="280" pos:column="48">allCoursesCombo</name><op:operator pos:line="280" pos:column="63">.</op:operator><name pos:line="280" pos:column="64">getSelectedItem</name></name><argument_list pos:line="280" pos:column="79">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<try pos:line="281" pos:column="17">try <block pos:line="281" pos:column="21">{
			<decl_stmt><decl><type><name pos:line="282" pos:column="25">Course</name></type> <name pos:line="282" pos:column="32">courseOld</name> <init pos:line="282" pos:column="42">= <expr><op:operator pos:line="282" pos:column="44">new</op:operator> <call><name pos:line="282" pos:column="48">Course</name><argument_list pos:line="282" pos:column="54">(<argument><expr><name pos:line="282" pos:column="55">courseNameOld</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			
			<if pos:line="284" pos:column="25">if<condition pos:line="284" pos:column="27">(<expr><op:operator pos:line="284" pos:column="28">!</op:operator><call><name pos:line="284" pos:column="29">checkStringForCourseName</name><argument_list pos:line="284" pos:column="53">(<argument><expr><name pos:line="284" pos:column="54">courseNameNew</name></expr></argument>)</argument_list></call></expr>)</condition><then><block pos:line="284" pos:column="69">{
				<expr_stmt><expr><call><name pos:line="285" pos:column="33">showMessage</name><argument_list pos:line="285" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="285" pos:column="45">"Please enter course name with two or three uppercase character followed by a number"</lit:literal>
						<op:operator pos:line="286" pos:column="49">+</op:operator> <lit:literal type="string" pos:line="286" pos:column="51">" greater than 100 less than 1000"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="286" pos:column="87">"Error in course name"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<return pos:line="287" pos:column="33">return;</return>
			}</block></then></if>
			
			<decl_stmt><decl><type><name pos:line="290" pos:column="25">Department</name></type> <name pos:line="290" pos:column="36">d</name> <init pos:line="290" pos:column="38">= <expr><name pos:line="290" pos:column="40">adminDepartment</name></expr></init></decl>;</decl_stmt>
			<if pos:line="291" pos:column="25">if<condition pos:line="291" pos:column="27">(<expr><call><name><name pos:line="291" pos:column="28">courseOld</name><op:operator pos:line="291" pos:column="37">.</op:operator><name pos:line="291" pos:column="38">updateCourse</name></name><argument_list pos:line="291" pos:column="50">(<argument><expr><call><name><name pos:line="291" pos:column="51">courseNameNew</name><op:operator pos:line="291" pos:column="64">.</op:operator><name pos:line="291" pos:column="65">toString</name></name><argument_list pos:line="291" pos:column="73">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="291" pos:column="77">d</name></expr></argument>)</argument_list></call></expr>)</condition><then><block pos:line="291" pos:column="80">{
				<expr_stmt><expr><call><name pos:line="292" pos:column="33">showMessage</name><argument_list pos:line="292" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="292" pos:column="45">"Course updated successfully"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="292" pos:column="76">"Success"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="294" pos:column="25">else<block pos:line="294" pos:column="29">{
				<expr_stmt><expr><call><name pos:line="295" pos:column="33">showMessage</name><argument_list pos:line="295" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="295" pos:column="45">"Course not updated, unknown error occurred"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="295" pos:column="91">"Failure"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>
			
		}</block> <catch pos:line="298" pos:column="19">catch <parameter_list pos:line="298" pos:column="25">(<param><decl><type><name><name pos:line="298" pos:column="26">Course</name><op:operator pos:line="298" pos:column="32">.</op:operator><name pos:line="298" pos:column="33">CourseDoesNotExistException</name></name></type> <name pos:line="298" pos:column="61">e1</name></decl></param>)</parameter_list> <block pos:line="298" pos:column="65">{
			<expr_stmt><expr><call><name pos:line="299" pos:column="25">showMessage</name><argument_list pos:line="299" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="299" pos:column="37">"Course deos not exist"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="299" pos:column="62">"Failure"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="300" pos:column="25">e1</name><op:operator pos:line="300" pos:column="27">.</op:operator><name pos:line="300" pos:column="28">printStackTrace</name></name><argument_list pos:line="300" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
		}</block></catch></try>
	}</block></function>
	
	<function><type><specifier pos:line="304" pos:column="9">public</specifier> <name pos:line="304" pos:column="16">void</name></type> <name pos:line="304" pos:column="21">initializeData</name><parameter_list pos:line="304" pos:column="35">()</parameter_list><block pos:line="304" pos:column="37">{
		<expr_stmt><expr><call><name pos:line="305" pos:column="17">initializeCourseList</name><argument_list pos:line="305" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="306" pos:column="17">initializeCourseOfferingUpdateTab</name><argument_list pos:line="306" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
	}</block></function>
	
	<function><type><specifier pos:line="309" pos:column="9">private</specifier> <name pos:line="309" pos:column="17">void</name></type> <name pos:line="309" pos:column="22">initializeCourseList</name><parameter_list pos:line="309" pos:column="42">()</parameter_list><block pos:line="309" pos:column="44">{
		<decl_stmt><decl><type><name><name pos:line="310" pos:column="17">DefaultComboBoxModel</name><argument_list pos:line="310" pos:column="37">&lt;<argument><name pos:line="310" pos:column="38">String</name></argument>&gt;</argument_list></name></type> <name pos:line="310" pos:column="46">model</name> <init pos:line="310" pos:column="52">= <expr><op:operator pos:line="310" pos:column="54">new</op:operator> <call><name><name pos:line="310" pos:column="58">DefaultComboBoxModel</name><argument_list pos:line="310" pos:column="78">&lt;<argument><name pos:line="310" pos:column="79">String</name></argument>&gt;</argument_list></name><argument_list pos:line="310" pos:column="86">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="311" pos:column="17">ArrayList</name><argument_list pos:line="311" pos:column="26">&lt;<argument><name pos:line="311" pos:column="27">Course</name></argument>&gt;</argument_list></name></type> <name pos:line="311" pos:column="35">courses</name> <init pos:line="311" pos:column="43">= <expr><call><name><name pos:line="311" pos:column="45">Course</name><op:operator pos:line="311" pos:column="51">.</op:operator><name pos:line="311" pos:column="52">getCoursesOfDepartment</name></name><argument_list pos:line="311" pos:column="74">(<argument><expr><name pos:line="311" pos:column="75">adminDepartment</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:line="312" pos:column="17">for(<init><decl><type><name pos:line="312" pos:column="21">Course</name></type> <name pos:line="312" pos:column="28">c</name> <range pos:line="312" pos:column="30">: <expr><name pos:line="312" pos:column="32">courses</name></expr></range></decl></init>)<block pos:line="312" pos:column="40">{
			<expr_stmt><expr><call><name><name pos:line="313" pos:column="25">model</name><op:operator pos:line="313" pos:column="30">.</op:operator><name pos:line="313" pos:column="31">addElement</name></name><argument_list pos:line="313" pos:column="41">(<argument><expr><call><name><name pos:line="313" pos:column="42">c</name><op:operator pos:line="313" pos:column="43">.</op:operator><name pos:line="313" pos:column="44">getCourseName</name></name><argument_list pos:line="313" pos:column="57">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		<expr_stmt><expr><call><name><name pos:line="315" pos:column="17">allCoursesCombo</name><op:operator pos:line="315" pos:column="32">.</op:operator><name pos:line="315" pos:column="33">setModel</name></name><argument_list pos:line="315" pos:column="41">(<argument><expr><name pos:line="315" pos:column="42">model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="316" pos:column="17">if<condition pos:line="316" pos:column="19">(<expr><call><name><name pos:line="316" pos:column="20">model</name><op:operator pos:line="316" pos:column="25">.</op:operator><name pos:line="316" pos:column="26">getSize</name></name><argument_list pos:line="316" pos:column="33">()</argument_list></call><op:operator pos:line="316" pos:column="35">&gt;</op:operator><lit:literal type="number" pos:line="316" pos:column="36">0</lit:literal></expr>)</condition><then pos:line="316" pos:column="38">
			<expr_stmt><expr><call><name><name pos:line="317" pos:column="25">allCoursesCombo</name><op:operator pos:line="317" pos:column="40">.</op:operator><name pos:line="317" pos:column="41">setSelectedIndex</name></name><argument_list pos:line="317" pos:column="57">(<argument><expr><lit:literal type="number" pos:line="317" pos:column="58">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	}</block></function>
	
	<function><type><specifier pos:line="320" pos:column="9">private</specifier> <name pos:line="320" pos:column="17">void</name></type> <name pos:line="320" pos:column="22">initializeCourseOfferingUpdateTab</name><parameter_list pos:line="320" pos:column="55">()</parameter_list><block pos:line="320" pos:column="57">{
		<decl_stmt><decl><type><name><name pos:line="321" pos:column="17">DefaultComboBoxModel</name><argument_list pos:line="321" pos:column="37">&lt;<argument><name pos:line="321" pos:column="38">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="321" pos:column="47">model</name> <init pos:line="321" pos:column="53">= <expr><op:operator pos:line="321" pos:column="55">new</op:operator> <call><name><name pos:line="321" pos:column="59">DefaultComboBoxModel</name><argument_list pos:line="321" pos:column="79">&lt;<argument><name pos:line="321" pos:column="80">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="321" pos:column="88">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="322" pos:column="17">allDeptCoursesOffered</name> <op:operator pos:line="322" pos:column="39">=</op:operator> <call><name><name pos:line="322" pos:column="41">CourseSchedule</name><op:operator pos:line="322" pos:column="55">.</op:operator><name pos:line="322" pos:column="56">getAllScheduledCourses</name></name><argument_list pos:line="322" pos:column="78">(<argument><expr><name pos:line="322" pos:column="79">adminDepartment</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<for pos:line="323" pos:column="17">for(<init><decl><type><name pos:line="323" pos:column="21">CourseSchedule</name></type> <name pos:line="323" pos:column="36">cs</name><range pos:line="323" pos:column="38">:<expr><name pos:line="323" pos:column="39">allDeptCoursesOffered</name></expr></range></decl></init>)<block pos:line="323" pos:column="61">{
			
			<expr_stmt><expr><call><name><name pos:line="325" pos:column="25">DBAnnotation</name><op:operator pos:line="325" pos:column="37">.</op:operator><name pos:line="325" pos:column="38">annoate</name></name><argument_list pos:line="325" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="325" pos:column="46">"oID"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="325" pos:column="53">"courseschedule"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="325" pos:column="71">"OfferID"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="325" pos:column="82">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="326" pos:column="25">int</name></type> <name pos:line="326" pos:column="29">oID</name> <init pos:line="326" pos:column="33">= <expr><call><name><name pos:line="326" pos:column="35">cs</name><op:operator pos:line="326" pos:column="37">.</op:operator><name pos:line="326" pos:column="38">getOfferID</name></name><argument_list pos:line="326" pos:column="48">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="327" pos:column="25">model</name><op:operator pos:line="327" pos:column="30">.</op:operator><name pos:line="327" pos:column="31">addElement</name></name><argument_list pos:line="327" pos:column="41">(<argument><expr><name pos:line="327" pos:column="42">oID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		<expr_stmt><expr><call><name><name pos:line="329" pos:column="17">updateOfferIDCombo</name><op:operator pos:line="329" pos:column="35">.</op:operator><name pos:line="329" pos:column="36">setModel</name></name><argument_list pos:line="329" pos:column="44">(<argument><expr><name pos:line="329" pos:column="45">model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<if pos:line="331" pos:column="17">if<condition pos:line="331" pos:column="19">(<expr><call><name><name pos:line="331" pos:column="20">allDeptCoursesOffered</name><op:operator pos:line="331" pos:column="41">.</op:operator><name pos:line="331" pos:column="42">size</name></name><argument_list pos:line="331" pos:column="46">()</argument_list></call><op:operator pos:line="331" pos:column="48">&gt;</op:operator><lit:literal type="number" pos:line="331" pos:column="49">0</lit:literal></expr>)</condition><then><block pos:line="331" pos:column="51">{
			<try pos:line="332" pos:column="25">try <block pos:line="332" pos:column="29">{
				<expr_stmt><expr><call><name><name pos:line="333" pos:column="33">DBAnnotation</name><op:operator pos:line="333" pos:column="45">.</op:operator><name pos:line="333" pos:column="46">annoate</name></name><argument_list pos:line="333" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="333" pos:column="54">"oID"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="333" pos:column="61">"courseschedule"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="333" pos:column="79">"OfferID"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="333" pos:column="90">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="334" pos:column="33">int</name></type> <name pos:line="334" pos:column="37">oID</name> <init pos:line="334" pos:column="41">= <expr><call><name><name pos:line="334" pos:column="43">allDeptCoursesOffered</name><op:operator pos:line="334" pos:column="64">.</op:operator><name pos:line="334" pos:column="65">get</name></name><argument_list pos:line="334" pos:column="68">(<argument><expr><lit:literal type="number" pos:line="334" pos:column="69">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="334" pos:column="71">.</op:operator><call><name pos:line="334" pos:column="72">getOfferID</name><argument_list pos:line="334" pos:column="82">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="335" pos:column="33">CourseOffered</name></type> <name pos:line="335" pos:column="47">co</name> <init pos:line="335" pos:column="50">= <expr><op:operator pos:line="335" pos:column="52">new</op:operator> <call><name pos:line="335" pos:column="56">CourseOffered</name><argument_list pos:line="335" pos:column="69">(<argument><expr><name pos:line="335" pos:column="70">oID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name><name pos:line="336" pos:column="33">DefaultComboBoxModel</name><argument_list pos:line="336" pos:column="53">&lt;<argument><name pos:line="336" pos:column="54">String</name></argument>&gt;</argument_list></name></type> <name pos:line="336" pos:column="62">profModel</name> <init pos:line="336" pos:column="72">= <expr><op:operator pos:line="336" pos:column="74">new</op:operator> <call><name><name pos:line="336" pos:column="78">DefaultComboBoxModel</name><argument_list pos:line="336" pos:column="98">&lt;<argument><name pos:line="336" pos:column="99">String</name></argument>&gt;</argument_list></name><argument_list pos:line="336" pos:column="106">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name><name pos:line="337" pos:column="33">ArrayList</name><argument_list pos:line="337" pos:column="42">&lt;<argument><name pos:line="337" pos:column="43">Professor</name></argument>&gt;</argument_list></name></type> <name pos:line="337" pos:column="54">deptProfessor</name> <init pos:line="337" pos:column="68">= <expr><call><name><name pos:line="337" pos:column="70">Professor</name><op:operator pos:line="337" pos:column="79">.</op:operator><name pos:line="337" pos:column="80">getAllProfInADept</name></name><argument_list pos:line="337" pos:column="97">(<argument><expr><call><name><name pos:line="337" pos:column="98">adminDepartment</name><op:operator pos:line="337" pos:column="113">.</op:operator><name pos:line="337" pos:column="114">getDepartmentID</name></name><argument_list pos:line="337" pos:column="129">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<for pos:line="338" pos:column="33">for(<init><decl><type><name pos:line="338" pos:column="37">Professor</name></type> <name pos:line="338" pos:column="47">p</name><range pos:line="338" pos:column="48">:<expr><name pos:line="338" pos:column="49">deptProfessor</name></expr></range></decl></init>)<block pos:line="338" pos:column="63">{
					<expr_stmt><expr><call><name><name pos:line="339" pos:column="41">DBAnnotation</name><op:operator pos:line="339" pos:column="53">.</op:operator><name pos:line="339" pos:column="54">annoate</name></name><argument_list pos:line="339" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="339" pos:column="62">"prof"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="339" pos:column="70">"People"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="339" pos:column="80">"UserName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="339" pos:column="92">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="340" pos:column="41">String</name></type> <name pos:line="340" pos:column="48">prof</name> <init pos:line="340" pos:column="53">= <expr><call><name><name pos:line="340" pos:column="55">p</name><op:operator pos:line="340" pos:column="56">.</op:operator><name pos:line="340" pos:column="57">getUserName</name></name><argument_list pos:line="340" pos:column="68">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="341" pos:column="41">profModel</name><op:operator pos:line="341" pos:column="50">.</op:operator><name pos:line="341" pos:column="51">addElement</name></name><argument_list pos:line="341" pos:column="61">(<argument><expr><name pos:line="341" pos:column="62">prof</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></for>
				<expr_stmt><expr><call><name><name pos:line="343" pos:column="33">updateOfferProfessorCombo</name><op:operator pos:line="343" pos:column="58">.</op:operator><name pos:line="343" pos:column="59">setModel</name></name><argument_list pos:line="343" pos:column="67">(<argument><expr><name pos:line="343" pos:column="68">profModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
				<expr_stmt><expr><call><name><name pos:line="345" pos:column="33">DBAnnotation</name><op:operator pos:line="345" pos:column="45">.</op:operator><name pos:line="345" pos:column="46">annoate</name></name><argument_list pos:line="345" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="345" pos:column="54">"professorName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="345" pos:column="71">"People"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="345" pos:column="81">"UserName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="345" pos:column="93">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="346" pos:column="33">String</name></type> <name pos:line="346" pos:column="40">professorName</name> <init pos:line="346" pos:column="54">= <expr><call><name><name pos:line="346" pos:column="56">co</name><op:operator pos:line="346" pos:column="58">.</op:operator><name pos:line="346" pos:column="59">getProfessor</name></name><argument_list pos:line="346" pos:column="71">()</argument_list></call><op:operator pos:line="346" pos:column="73">.</op:operator><call><name pos:line="346" pos:column="74">getUserName</name><argument_list pos:line="346" pos:column="85">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="347" pos:column="33">updateOfferProfessorCombo</name><op:operator pos:line="347" pos:column="58">.</op:operator><name pos:line="347" pos:column="59">setSelectedIndex</name></name><argument_list pos:line="347" pos:column="75">(<argument><expr><call><name pos:line="347" pos:column="76">getProfessorIndex</name><argument_list pos:line="347" pos:column="93">(<argument><expr><name pos:line="347" pos:column="94">professorName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
				
			}</block> <catch pos:line="350" pos:column="27">catch <parameter_list pos:line="350" pos:column="33">(<param><decl><type><name><name pos:line="350" pos:column="34">Professor</name><op:operator pos:line="350" pos:column="43">.</op:operator><name pos:line="350" pos:column="44">ProfessorDoesNotExistException</name></name></type> <name pos:line="350" pos:column="75">e</name></decl></param>)</parameter_list> <block pos:line="350" pos:column="78">{
				<expr_stmt><expr><call><name><name pos:line="351" pos:column="33">System</name><op:operator pos:line="351" pos:column="39">.</op:operator><name pos:line="351" pos:column="40">out</name><op:operator pos:line="351" pos:column="43">.</op:operator><name pos:line="351" pos:column="44">println</name></name><argument_list pos:line="351" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="351" pos:column="52">"Failed to initialize professor list"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="352" pos:column="33">e</name><op:operator pos:line="352" pos:column="34">.</op:operator><name pos:line="352" pos:column="35">printStackTrace</name></name><argument_list pos:line="352" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			}</block></catch> <catch pos:line="353" pos:column="27">catch <parameter_list pos:line="353" pos:column="33">(<param><decl><type><name><name pos:line="353" pos:column="34">Course</name><op:operator pos:line="353" pos:column="40">.</op:operator><name pos:line="353" pos:column="41">CourseDoesNotExistException</name></name></type> <name pos:line="353" pos:column="69">e</name></decl></param>)</parameter_list> <block pos:line="353" pos:column="72">{
				<comment type="line" pos:line="354" pos:column="33">// TODO Auto-generated catch block</comment>
				<expr_stmt><expr><call><name><name pos:line="355" pos:column="33">e</name><op:operator pos:line="355" pos:column="34">.</op:operator><name pos:line="355" pos:column="35">printStackTrace</name></name><argument_list pos:line="355" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			}</block></catch> <catch pos:line="356" pos:column="27">catch <parameter_list pos:line="356" pos:column="33">(<param><decl><type><name><name pos:line="356" pos:column="34">CourseOffered</name><op:operator pos:line="356" pos:column="47">.</op:operator><name pos:line="356" pos:column="48">CourseOfferingDoesNotExistException</name></name></type> <name pos:line="356" pos:column="84">e</name></decl></param>)</parameter_list> <block pos:line="356" pos:column="87">{
				<comment type="line" pos:line="357" pos:column="33">// TODO Auto-generated catch block</comment>
				<expr_stmt><expr><call><name><name pos:line="358" pos:column="33">e</name><op:operator pos:line="358" pos:column="34">.</op:operator><name pos:line="358" pos:column="35">printStackTrace</name></name><argument_list pos:line="358" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			}</block></catch></try>
		}</block></then></if>
		
	}</block></function>
	
	<function><type><specifier pos:line="364" pos:column="9">private</specifier> <name pos:line="364" pos:column="17">int</name></type> <name pos:line="364" pos:column="21">getProfessorIndex</name><parameter_list pos:line="364" pos:column="38">(<param><decl><type><name pos:line="364" pos:column="39">String</name></type> <name pos:line="364" pos:column="46">professorName</name></decl></param>)</parameter_list><block pos:line="364" pos:column="60">{
		<for pos:line="365" pos:column="17">for(<init><decl><type><name pos:line="365" pos:column="21">int</name></type> <name pos:line="365" pos:column="25">i</name><init pos:line="365" pos:column="26">=<expr><lit:literal type="number" pos:line="365" pos:column="27">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="365" pos:column="30">i</name><op:operator pos:line="365" pos:column="31">&lt;</op:operator><call><name><name pos:line="365" pos:column="32">updateOfferProfessorCombo</name><op:operator pos:line="365" pos:column="57">.</op:operator><name pos:line="365" pos:column="58">getItemCount</name></name><argument_list pos:line="365" pos:column="70">()</argument_list></call></expr> ;</condition><incr><expr><name pos:line="365" pos:column="74">i</name><op:operator pos:line="365" pos:column="75">++</op:operator></expr></incr>)<block pos:line="365" pos:column="78">{
			<if pos:line="366" pos:column="25">if<condition pos:line="366" pos:column="27">(<expr><call><name><name pos:line="366" pos:column="28">professorName</name><op:operator pos:line="366" pos:column="41">.</op:operator><name pos:line="366" pos:column="42">equals</name></name><argument_list pos:line="366" pos:column="48">(<argument><expr><op:operator pos:line="366" pos:column="49">(</op:operator><name pos:line="366" pos:column="50">String</name><op:operator pos:line="366" pos:column="56">)</op:operator><call><name><name pos:line="366" pos:column="57">updateOfferProfessorCombo</name><op:operator pos:line="366" pos:column="82">.</op:operator><name pos:line="366" pos:column="83">getItemAt</name></name><argument_list pos:line="366" pos:column="92">(<argument><expr><name pos:line="366" pos:column="93">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then><block pos:line="366" pos:column="97">{
				<return pos:line="367" pos:column="33">return <expr><name pos:line="367" pos:column="40">i</name></expr>;</return>
			}</block></then></if>
		}</block></for>
		
		<return pos:line="371" pos:column="17">return <expr><lit:literal type="number" pos:line="371" pos:column="24">0</lit:literal></expr>;</return>
	}</block></function>
	
	<function><type><specifier pos:line="374" pos:column="9">public</specifier> <name pos:line="374" pos:column="16">void</name></type> <name pos:line="374" pos:column="21">showMessage</name><parameter_list pos:line="374" pos:column="32">(<param><decl><type><name pos:line="374" pos:column="33">String</name></type> <name pos:line="374" pos:column="40">message</name></decl></param>, <param><decl><type><name pos:line="374" pos:column="49">String</name></type> <name pos:line="374" pos:column="56">title</name></decl></param>)</parameter_list>
    <block pos:line="375" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="376" pos:column="9">JOptionPane</name><op:operator pos:line="376" pos:column="20">.</op:operator><name pos:line="376" pos:column="21">showMessageDialog</name></name><argument_list pos:line="376" pos:column="38">(<argument><expr><lit:literal type="null" pos:line="376" pos:column="39">null</lit:literal></expr></argument>, <argument><expr><name pos:line="376" pos:column="45">message</name></expr></argument>, <argument><expr><name pos:line="376" pos:column="54">title</name></expr></argument>, <argument><expr><name><name pos:line="376" pos:column="61">JOptionPane</name><op:operator pos:line="376" pos:column="72">.</op:operator><name pos:line="376" pos:column="73">INFORMATION_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
	
	<function><type><specifier pos:line="379" pos:column="9">private</specifier>  <name pos:line="379" pos:column="18">boolean</name></type> <name pos:line="379" pos:column="26">checkStringForCourseName</name><parameter_list pos:line="379" pos:column="50">(<param><decl><type><name pos:line="379" pos:column="51">String</name></type> <name pos:line="379" pos:column="58">s</name></decl></param>)</parameter_list><block pos:line="379" pos:column="60">{
		<return pos:line="380" pos:column="17">return <expr><call><name><name pos:line="380" pos:column="24">s</name><op:operator pos:line="380" pos:column="25">.</op:operator><name pos:line="380" pos:column="26">matches</name></name><argument_list pos:line="380" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="380" pos:column="34">"[A-Z]{2,3}[1-9][0-9]{2}"</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
	}</block></function>
		
}</block></class>
</unit>
