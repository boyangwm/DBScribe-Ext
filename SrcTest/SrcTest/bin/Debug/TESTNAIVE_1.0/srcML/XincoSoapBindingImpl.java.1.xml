<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\xinco\src\com\bluecubs\xinco\service\XincoSoapBindingImpl.java" pos:tabs="8"><comment type="block" format="javadoc" pos:line="1" pos:column="1">/**
 * XincoSoapBindingImpl.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.
 */</comment>

<package pos:line="8" pos:column="1">package <name><name pos:line="8" pos:column="9">com</name><op:operator pos:line="8" pos:column="12">.</op:operator><name pos:line="8" pos:column="13">bluecubs</name><op:operator pos:line="8" pos:column="21">.</op:operator><name pos:line="8" pos:column="22">xinco</name><op:operator pos:line="8" pos:column="27">.</op:operator><name pos:line="8" pos:column="28">service</name></name>;</package>

<import pos:line="10" pos:column="1">import <name><name pos:line="10" pos:column="8">com</name><op:operator pos:line="10" pos:column="11">.</op:operator><name pos:line="10" pos:column="12">bluecubs</name><op:operator pos:line="10" pos:column="20">.</op:operator><name pos:line="10" pos:column="21">xinco</name><op:operator pos:line="10" pos:column="26">.</op:operator><name pos:line="10" pos:column="27">add</name><op:operator pos:line="10" pos:column="30">.</op:operator><name pos:line="10" pos:column="31">XincoAddAttribute</name></name>;</import>
<import pos:line="11" pos:column="1">import <name><name pos:line="11" pos:column="8">com</name><op:operator pos:line="11" pos:column="11">.</op:operator><name pos:line="11" pos:column="12">bluecubs</name><op:operator pos:line="11" pos:column="20">.</op:operator><name pos:line="11" pos:column="21">xinco</name><op:operator pos:line="11" pos:column="26">.</op:operator><name pos:line="11" pos:column="27">core</name><op:operator pos:line="11" pos:column="31">.</op:operator><name pos:line="11" pos:column="32">XincoCoreACE</name></name>;</import>
<import pos:line="12" pos:column="1">import <name><name pos:line="12" pos:column="8">com</name><op:operator pos:line="12" pos:column="11">.</op:operator><name pos:line="12" pos:column="12">bluecubs</name><op:operator pos:line="12" pos:column="20">.</op:operator><name pos:line="12" pos:column="21">xinco</name><op:operator pos:line="12" pos:column="26">.</op:operator><name pos:line="12" pos:column="27">core</name><op:operator pos:line="12" pos:column="31">.</op:operator><name pos:line="12" pos:column="32">XincoCoreData</name></name>;</import>
<import pos:line="13" pos:column="1">import <name><name pos:line="13" pos:column="8">com</name><op:operator pos:line="13" pos:column="11">.</op:operator><name pos:line="13" pos:column="12">bluecubs</name><op:operator pos:line="13" pos:column="20">.</op:operator><name pos:line="13" pos:column="21">xinco</name><op:operator pos:line="13" pos:column="26">.</op:operator><name pos:line="13" pos:column="27">core</name><op:operator pos:line="13" pos:column="31">.</op:operator><name pos:line="13" pos:column="32">XincoCoreGroup</name></name>;</import>
<import pos:line="14" pos:column="1">import <name><name pos:line="14" pos:column="8">com</name><op:operator pos:line="14" pos:column="11">.</op:operator><name pos:line="14" pos:column="12">bluecubs</name><op:operator pos:line="14" pos:column="20">.</op:operator><name pos:line="14" pos:column="21">xinco</name><op:operator pos:line="14" pos:column="26">.</op:operator><name pos:line="14" pos:column="27">core</name><op:operator pos:line="14" pos:column="31">.</op:operator><name pos:line="14" pos:column="32">XincoCoreLog</name></name>;</import>
<import pos:line="15" pos:column="1">import <name><name pos:line="15" pos:column="8">com</name><op:operator pos:line="15" pos:column="11">.</op:operator><name pos:line="15" pos:column="12">bluecubs</name><op:operator pos:line="15" pos:column="20">.</op:operator><name pos:line="15" pos:column="21">xinco</name><op:operator pos:line="15" pos:column="26">.</op:operator><name pos:line="15" pos:column="27">core</name><op:operator pos:line="15" pos:column="31">.</op:operator><name pos:line="15" pos:column="32">XincoCoreNode</name></name>;</import>
<import pos:line="16" pos:column="1">import <name><name pos:line="16" pos:column="8">com</name><op:operator pos:line="16" pos:column="11">.</op:operator><name pos:line="16" pos:column="12">bluecubs</name><op:operator pos:line="16" pos:column="20">.</op:operator><name pos:line="16" pos:column="21">xinco</name><op:operator pos:line="16" pos:column="26">.</op:operator><name pos:line="16" pos:column="27">core</name><op:operator pos:line="16" pos:column="31">.</op:operator><name pos:line="16" pos:column="32">XincoCoreUser</name></name>;</import>
<import pos:line="17" pos:column="1">import <name><name pos:line="17" pos:column="8">com</name><op:operator pos:line="17" pos:column="11">.</op:operator><name pos:line="17" pos:column="12">bluecubs</name><op:operator pos:line="17" pos:column="20">.</op:operator><name pos:line="17" pos:column="21">xinco</name><op:operator pos:line="17" pos:column="26">.</op:operator><name pos:line="17" pos:column="27">core</name><op:operator pos:line="17" pos:column="31">.</op:operator><name pos:line="17" pos:column="32">XincoException</name></name>;</import>
<import pos:line="18" pos:column="1">import <name><name pos:line="18" pos:column="8">com</name><op:operator pos:line="18" pos:column="11">.</op:operator><name pos:line="18" pos:column="12">bluecubs</name><op:operator pos:line="18" pos:column="20">.</op:operator><name pos:line="18" pos:column="21">xinco</name><op:operator pos:line="18" pos:column="26">.</op:operator><name pos:line="18" pos:column="27">core</name><op:operator pos:line="18" pos:column="31">.</op:operator><name pos:line="18" pos:column="32">XincoVersion</name></name>;</import>
<import pos:line="19" pos:column="1">import <name><name pos:line="19" pos:column="8">com</name><op:operator pos:line="19" pos:column="11">.</op:operator><name pos:line="19" pos:column="12">bluecubs</name><op:operator pos:line="19" pos:column="20">.</op:operator><name pos:line="19" pos:column="21">xinco</name><op:operator pos:line="19" pos:column="26">.</op:operator><name pos:line="19" pos:column="27">core</name><op:operator pos:line="19" pos:column="31">.</op:operator><name pos:line="19" pos:column="32">server</name><op:operator pos:line="19" pos:column="38">.</op:operator><name pos:line="19" pos:column="39">XincoCoreACEServer</name></name>;</import>
<import pos:line="20" pos:column="1">import <name><name pos:line="20" pos:column="8">com</name><op:operator pos:line="20" pos:column="11">.</op:operator><name pos:line="20" pos:column="12">bluecubs</name><op:operator pos:line="20" pos:column="20">.</op:operator><name pos:line="20" pos:column="21">xinco</name><op:operator pos:line="20" pos:column="26">.</op:operator><name pos:line="20" pos:column="27">core</name><op:operator pos:line="20" pos:column="31">.</op:operator><name pos:line="20" pos:column="32">server</name><op:operator pos:line="20" pos:column="38">.</op:operator><name pos:line="20" pos:column="39">XincoCoreDataServer</name></name>;</import>
<import pos:line="21" pos:column="1">import <name><name pos:line="21" pos:column="8">com</name><op:operator pos:line="21" pos:column="11">.</op:operator><name pos:line="21" pos:column="12">bluecubs</name><op:operator pos:line="21" pos:column="20">.</op:operator><name pos:line="21" pos:column="21">xinco</name><op:operator pos:line="21" pos:column="26">.</op:operator><name pos:line="21" pos:column="27">core</name><op:operator pos:line="21" pos:column="31">.</op:operator><name pos:line="21" pos:column="32">server</name><op:operator pos:line="21" pos:column="38">.</op:operator><name pos:line="21" pos:column="39">XincoCoreDataTypeServer</name></name>;</import>
<import pos:line="22" pos:column="1">import <name><name pos:line="22" pos:column="8">com</name><op:operator pos:line="22" pos:column="11">.</op:operator><name pos:line="22" pos:column="12">bluecubs</name><op:operator pos:line="22" pos:column="20">.</op:operator><name pos:line="22" pos:column="21">xinco</name><op:operator pos:line="22" pos:column="26">.</op:operator><name pos:line="22" pos:column="27">core</name><op:operator pos:line="22" pos:column="31">.</op:operator><name pos:line="22" pos:column="32">server</name><op:operator pos:line="22" pos:column="38">.</op:operator><name pos:line="22" pos:column="39">XincoCoreGroupServer</name></name>;</import>
<import pos:line="23" pos:column="1">import <name><name pos:line="23" pos:column="8">com</name><op:operator pos:line="23" pos:column="11">.</op:operator><name pos:line="23" pos:column="12">bluecubs</name><op:operator pos:line="23" pos:column="20">.</op:operator><name pos:line="23" pos:column="21">xinco</name><op:operator pos:line="23" pos:column="26">.</op:operator><name pos:line="23" pos:column="27">core</name><op:operator pos:line="23" pos:column="31">.</op:operator><name pos:line="23" pos:column="32">server</name><op:operator pos:line="23" pos:column="38">.</op:operator><name pos:line="23" pos:column="39">XincoCoreLanguageServer</name></name>;</import>
<import pos:line="24" pos:column="1">import <name><name pos:line="24" pos:column="8">com</name><op:operator pos:line="24" pos:column="11">.</op:operator><name pos:line="24" pos:column="12">bluecubs</name><op:operator pos:line="24" pos:column="20">.</op:operator><name pos:line="24" pos:column="21">xinco</name><op:operator pos:line="24" pos:column="26">.</op:operator><name pos:line="24" pos:column="27">core</name><op:operator pos:line="24" pos:column="31">.</op:operator><name pos:line="24" pos:column="32">server</name><op:operator pos:line="24" pos:column="38">.</op:operator><name pos:line="24" pos:column="39">XincoCoreLogServer</name></name>;</import>
<import pos:line="25" pos:column="1">import <name><name pos:line="25" pos:column="8">com</name><op:operator pos:line="25" pos:column="11">.</op:operator><name pos:line="25" pos:column="12">bluecubs</name><op:operator pos:line="25" pos:column="20">.</op:operator><name pos:line="25" pos:column="21">xinco</name><op:operator pos:line="25" pos:column="26">.</op:operator><name pos:line="25" pos:column="27">core</name><op:operator pos:line="25" pos:column="31">.</op:operator><name pos:line="25" pos:column="32">server</name><op:operator pos:line="25" pos:column="38">.</op:operator><name pos:line="25" pos:column="39">XincoCoreNodeServer</name></name>;</import>
<import pos:line="26" pos:column="1">import <name><name pos:line="26" pos:column="8">com</name><op:operator pos:line="26" pos:column="11">.</op:operator><name pos:line="26" pos:column="12">bluecubs</name><op:operator pos:line="26" pos:column="20">.</op:operator><name pos:line="26" pos:column="21">xinco</name><op:operator pos:line="26" pos:column="26">.</op:operator><name pos:line="26" pos:column="27">core</name><op:operator pos:line="26" pos:column="31">.</op:operator><name pos:line="26" pos:column="32">server</name><op:operator pos:line="26" pos:column="38">.</op:operator><name pos:line="26" pos:column="39">XincoCoreUserServer</name></name>;</import>
<import pos:line="27" pos:column="1">import <name><name pos:line="27" pos:column="8">com</name><op:operator pos:line="27" pos:column="11">.</op:operator><name pos:line="27" pos:column="12">bluecubs</name><op:operator pos:line="27" pos:column="20">.</op:operator><name pos:line="27" pos:column="21">xinco</name><op:operator pos:line="27" pos:column="26">.</op:operator><name pos:line="27" pos:column="27">core</name><op:operator pos:line="27" pos:column="31">.</op:operator><name pos:line="27" pos:column="32">server</name><op:operator pos:line="27" pos:column="38">.</op:operator><name pos:line="27" pos:column="39">XincoDBManager</name></name>;</import>
<import pos:line="28" pos:column="1">import <name><name pos:line="28" pos:column="8">com</name><op:operator pos:line="28" pos:column="11">.</op:operator><name pos:line="28" pos:column="12">bluecubs</name><op:operator pos:line="28" pos:column="20">.</op:operator><name pos:line="28" pos:column="21">xinco</name><op:operator pos:line="28" pos:column="26">.</op:operator><name pos:line="28" pos:column="27">index</name><op:operator pos:line="28" pos:column="32">.</op:operator><name pos:line="28" pos:column="33">XincoIndexThread</name></name>;</import>
<import pos:line="29" pos:column="1">import <name><name pos:line="29" pos:column="8">com</name><op:operator pos:line="29" pos:column="11">.</op:operator><name pos:line="29" pos:column="12">bluecubs</name><op:operator pos:line="29" pos:column="20">.</op:operator><name pos:line="29" pos:column="21">xinco</name><op:operator pos:line="29" pos:column="26">.</op:operator><name pos:line="29" pos:column="27">index</name><op:operator pos:line="29" pos:column="32">.</op:operator><name pos:line="29" pos:column="33">XincoIndexer</name></name>;</import>
<import pos:line="30" pos:column="1">import <name><name pos:line="30" pos:column="8">java</name><op:operator pos:line="30" pos:column="12">.</op:operator><name pos:line="30" pos:column="13">io</name><op:operator pos:line="30" pos:column="15">.</op:operator><name pos:line="30" pos:column="16">ByteArrayInputStream</name></name>;</import>
<import pos:line="31" pos:column="1">import <name><name pos:line="31" pos:column="8">java</name><op:operator pos:line="31" pos:column="12">.</op:operator><name pos:line="31" pos:column="13">io</name><op:operator pos:line="31" pos:column="15">.</op:operator><name pos:line="31" pos:column="16">ByteArrayOutputStream</name></name>;</import>
<import pos:line="32" pos:column="1">import <name><name pos:line="32" pos:column="8">java</name><op:operator pos:line="32" pos:column="12">.</op:operator><name pos:line="32" pos:column="13">io</name><op:operator pos:line="32" pos:column="15">.</op:operator><name pos:line="32" pos:column="16">File</name></name>;</import>
<import pos:line="33" pos:column="1">import <name><name pos:line="33" pos:column="8">java</name><op:operator pos:line="33" pos:column="12">.</op:operator><name pos:line="33" pos:column="13">io</name><op:operator pos:line="33" pos:column="15">.</op:operator><name pos:line="33" pos:column="16">FileInputStream</name></name>;</import>
<import pos:line="34" pos:column="1">import <name><name pos:line="34" pos:column="8">java</name><op:operator pos:line="34" pos:column="12">.</op:operator><name pos:line="34" pos:column="13">io</name><op:operator pos:line="34" pos:column="15">.</op:operator><name pos:line="34" pos:column="16">FileOutputStream</name></name>;</import>
<import pos:line="35" pos:column="1">import <name><name pos:line="35" pos:column="8">java</name><op:operator pos:line="35" pos:column="12">.</op:operator><name pos:line="35" pos:column="13">io</name><op:operator pos:line="35" pos:column="15">.</op:operator><name pos:line="35" pos:column="16">InputStream</name></name>;</import>
<import pos:line="36" pos:column="1">import <name><name pos:line="36" pos:column="8">java</name><op:operator pos:line="36" pos:column="12">.</op:operator><name pos:line="36" pos:column="13">util</name><op:operator pos:line="36" pos:column="17">.</op:operator><name pos:line="36" pos:column="18">ResourceBundle</name></name>;</import>
<import pos:line="37" pos:column="1">import <name><name pos:line="37" pos:column="8">java</name><op:operator pos:line="37" pos:column="12">.</op:operator><name pos:line="37" pos:column="13">util</name><op:operator pos:line="37" pos:column="17">.</op:operator><name pos:line="37" pos:column="18">zip</name><op:operator pos:line="37" pos:column="21">.</op:operator><name pos:line="37" pos:column="22">CRC32</name></name>;</import>
<import pos:line="38" pos:column="1">import <name><name pos:line="38" pos:column="8">java</name><op:operator pos:line="38" pos:column="12">.</op:operator><name pos:line="38" pos:column="13">util</name><op:operator pos:line="38" pos:column="17">.</op:operator><name pos:line="38" pos:column="18">zip</name><op:operator pos:line="38" pos:column="21">.</op:operator><name pos:line="38" pos:column="22">CheckedInputStream</name></name>;</import>
<import pos:line="39" pos:column="1">import <name><name pos:line="39" pos:column="8">java</name><op:operator pos:line="39" pos:column="12">.</op:operator><name pos:line="39" pos:column="13">util</name><op:operator pos:line="39" pos:column="17">.</op:operator><name pos:line="39" pos:column="18">zip</name><op:operator pos:line="39" pos:column="21">.</op:operator><name pos:line="39" pos:column="22">CheckedOutputStream</name></name>;</import>
<import pos:line="40" pos:column="1">import <name><name pos:line="40" pos:column="8">org</name><op:operator pos:line="40" pos:column="11">.</op:operator><name pos:line="40" pos:column="12">apache</name><op:operator pos:line="40" pos:column="18">.</op:operator><name pos:line="40" pos:column="19">axis</name><op:operator pos:line="40" pos:column="23">.</op:operator><name pos:line="40" pos:column="24">Message</name></name>;</import>
<import pos:line="41" pos:column="1">import <name><name pos:line="41" pos:column="8">org</name><op:operator pos:line="41" pos:column="11">.</op:operator><name pos:line="41" pos:column="12">apache</name><op:operator pos:line="41" pos:column="18">.</op:operator><name pos:line="41" pos:column="19">axis</name><op:operator pos:line="41" pos:column="23">.</op:operator><name pos:line="41" pos:column="24">MessageContext</name></name>;</import>
<import pos:line="42" pos:column="1">import <name><name pos:line="42" pos:column="8">org</name><op:operator pos:line="42" pos:column="11">.</op:operator><name pos:line="42" pos:column="12">apache</name><op:operator pos:line="42" pos:column="18">.</op:operator><name pos:line="42" pos:column="19">axis</name><op:operator pos:line="42" pos:column="23">.</op:operator><name pos:line="42" pos:column="24">attachments</name><op:operator pos:line="42" pos:column="35">.</op:operator><name pos:line="42" pos:column="36">AttachmentPart</name></name>;</import>

<class><specifier pos:line="44" pos:column="1">public</specifier> class <name pos:line="44" pos:column="14">XincoSoapBindingImpl</name> <super><implements pos:line="44" pos:column="35">implements <name><name pos:line="44" pos:column="46">com</name><op:operator pos:line="44" pos:column="49">.</op:operator><name pos:line="44" pos:column="50">bluecubs</name><op:operator pos:line="44" pos:column="58">.</op:operator><name pos:line="44" pos:column="59">xinco</name><op:operator pos:line="44" pos:column="64">.</op:operator><name pos:line="44" pos:column="65">service</name><op:operator pos:line="44" pos:column="72">.</op:operator><name pos:line="44" pos:column="73">Xinco</name></name></implements></super><block pos:line="44" pos:column="78">{
    <function><type><specifier pos:line="45" pos:column="5">public</specifier> <name><name pos:line="45" pos:column="12">com</name><op:operator pos:line="45" pos:column="15">.</op:operator><name pos:line="45" pos:column="16">bluecubs</name><op:operator pos:line="45" pos:column="24">.</op:operator><name pos:line="45" pos:column="25">xinco</name><op:operator pos:line="45" pos:column="30">.</op:operator><name pos:line="45" pos:column="31">core</name><op:operator pos:line="45" pos:column="35">.</op:operator><name pos:line="45" pos:column="36">XincoVersion</name></name></type> <name pos:line="45" pos:column="49">getXincoServerVersion</name><parameter_list pos:line="45" pos:column="70">()</parameter_list> <throws pos:line="45" pos:column="73">throws <argument><expr><name><name pos:line="45" pos:column="80">java</name><op:operator pos:line="45" pos:column="84">.</op:operator><name pos:line="45" pos:column="85">rmi</name><op:operator pos:line="45" pos:column="88">.</op:operator><name pos:line="45" pos:column="89">RemoteException</name></name></expr></argument></throws> <block pos:line="45" pos:column="105">{
        <decl_stmt><decl><type><name pos:line="46" pos:column="9">ResourceBundle</name></type> <name pos:line="46" pos:column="24">settings</name> <init pos:line="46" pos:column="33">= <expr><call><name><name pos:line="46" pos:column="35">ResourceBundle</name><op:operator pos:line="46" pos:column="49">.</op:operator><name pos:line="46" pos:column="50">getBundle</name></name><argument_list pos:line="46" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="46" pos:column="60">"com.bluecubs.xinco.settings.settings"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <comment type="line" pos:line="47" pos:column="9">//return current version of server</comment>
        <decl_stmt><decl><type><name pos:line="48" pos:column="9">XincoVersion</name></type> <name pos:line="48" pos:column="22">version</name> <init pos:line="48" pos:column="30">= <expr><op:operator pos:line="48" pos:column="32">new</op:operator> <call><name pos:line="48" pos:column="36">XincoVersion</name><argument_list pos:line="48" pos:column="48">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="49" pos:column="9">version</name><op:operator pos:line="49" pos:column="16">.</op:operator><name pos:line="49" pos:column="17">setVersion_high</name></name><argument_list pos:line="49" pos:column="32">(<argument><expr><call><name><name pos:line="49" pos:column="33">Integer</name><op:operator pos:line="49" pos:column="40">.</op:operator><name pos:line="49" pos:column="41">parseInt</name></name><argument_list pos:line="49" pos:column="49">(<argument><expr><call><name><name pos:line="49" pos:column="50">settings</name><op:operator pos:line="49" pos:column="58">.</op:operator><name pos:line="49" pos:column="59">getString</name></name><argument_list pos:line="49" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="49" pos:column="69">"version.high"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="50" pos:column="9">version</name><op:operator pos:line="50" pos:column="16">.</op:operator><name pos:line="50" pos:column="17">setVersion_mid</name></name><argument_list pos:line="50" pos:column="31">(<argument><expr><call><name><name pos:line="50" pos:column="32">Integer</name><op:operator pos:line="50" pos:column="39">.</op:operator><name pos:line="50" pos:column="40">parseInt</name></name><argument_list pos:line="50" pos:column="48">(<argument><expr><call><name><name pos:line="50" pos:column="49">settings</name><op:operator pos:line="50" pos:column="57">.</op:operator><name pos:line="50" pos:column="58">getString</name></name><argument_list pos:line="50" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="50" pos:column="68">"version.mid"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="51" pos:column="9">version</name><op:operator pos:line="51" pos:column="16">.</op:operator><name pos:line="51" pos:column="17">setVersion_low</name></name><argument_list pos:line="51" pos:column="31">(<argument><expr><call><name><name pos:line="51" pos:column="32">Integer</name><op:operator pos:line="51" pos:column="39">.</op:operator><name pos:line="51" pos:column="40">parseInt</name></name><argument_list pos:line="51" pos:column="48">(<argument><expr><call><name><name pos:line="51" pos:column="49">settings</name><op:operator pos:line="51" pos:column="57">.</op:operator><name pos:line="51" pos:column="58">getString</name></name><argument_list pos:line="51" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="51" pos:column="68">"version.low"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="52" pos:column="9">version</name><op:operator pos:line="52" pos:column="16">.</op:operator><name pos:line="52" pos:column="17">setVersion_postfix</name></name><argument_list pos:line="52" pos:column="35">(<argument><expr><call><name><name pos:line="52" pos:column="36">settings</name><op:operator pos:line="52" pos:column="44">.</op:operator><name pos:line="52" pos:column="45">getString</name></name><argument_list pos:line="52" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="52" pos:column="55">"version.postfix"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:line="53" pos:column="9">return <expr><name pos:line="53" pos:column="16">version</name></expr>;</return>
    }</block></function>
    
    <function><type><specifier pos:line="56" pos:column="5">public</specifier> <name><name pos:line="56" pos:column="12">com</name><op:operator pos:line="56" pos:column="15">.</op:operator><name pos:line="56" pos:column="16">bluecubs</name><op:operator pos:line="56" pos:column="24">.</op:operator><name pos:line="56" pos:column="25">xinco</name><op:operator pos:line="56" pos:column="30">.</op:operator><name pos:line="56" pos:column="31">core</name><op:operator pos:line="56" pos:column="35">.</op:operator><name pos:line="56" pos:column="36">XincoCoreUser</name></name></type> <name pos:line="56" pos:column="50">getCurrentXincoCoreUser</name><parameter_list pos:line="56" pos:column="73">(<param><decl><type><name><name pos:line="56" pos:column="74">java</name><op:operator pos:line="56" pos:column="78">.</op:operator><name pos:line="56" pos:column="79">lang</name><op:operator pos:line="56" pos:column="83">.</op:operator><name pos:line="56" pos:column="84">String</name></name></type> <name pos:line="56" pos:column="91">in0</name></decl></param>, <param><decl><type><name><name pos:line="56" pos:column="96">java</name><op:operator pos:line="56" pos:column="100">.</op:operator><name pos:line="56" pos:column="101">lang</name><op:operator pos:line="56" pos:column="105">.</op:operator><name pos:line="56" pos:column="106">String</name></name></type> <name pos:line="56" pos:column="113">in1</name></decl></param>)</parameter_list> <throws pos:line="56" pos:column="118">throws <argument><expr><name><name pos:line="56" pos:column="125">java</name><op:operator pos:line="56" pos:column="129">.</op:operator><name pos:line="56" pos:column="130">rmi</name><op:operator pos:line="56" pos:column="133">.</op:operator><name pos:line="56" pos:column="134">RemoteException</name></name></expr></argument></throws> <block pos:line="56" pos:column="150">{
        <comment type="line" pos:line="57" pos:column="9">//login</comment>
        <try pos:line="58" pos:column="9">try <block pos:line="58" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="59" pos:column="13">XincoDBManager</name></type> <name pos:line="59" pos:column="28">dbm</name> <init pos:line="59" pos:column="32">= <expr><op:operator pos:line="59" pos:column="34">new</op:operator> <call><name pos:line="59" pos:column="38">XincoDBManager</name><argument_list pos:line="59" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="60" pos:column="13">XincoCoreUserServer</name></type> <name pos:line="60" pos:column="33">user</name> <init pos:line="60" pos:column="38">= <expr><op:operator pos:line="60" pos:column="40">new</op:operator> <call><name pos:line="60" pos:column="44">XincoCoreUserServer</name><argument_list pos:line="60" pos:column="63">(<argument><expr><name pos:line="60" pos:column="64">in0</name></expr></argument>, <argument><expr><name pos:line="60" pos:column="69">in1</name></expr></argument>, <argument><expr><name pos:line="60" pos:column="74">dbm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="61" pos:column="13">dbm</name><op:operator pos:line="61" pos:column="16">.</op:operator><name pos:line="61" pos:column="17">con</name><op:operator pos:line="61" pos:column="20">.</op:operator><name pos:line="61" pos:column="21">close</name></name><argument_list pos:line="61" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="62" pos:column="13">return <expr><op:operator pos:line="62" pos:column="20">(</op:operator><name pos:line="62" pos:column="21">XincoCoreUser</name><op:operator pos:line="62" pos:column="34">)</op:operator><name pos:line="62" pos:column="35">user</name></expr>;</return>
        }</block> <catch pos:line="63" pos:column="11">catch <parameter_list pos:line="63" pos:column="17">(<param><decl><type><name pos:line="63" pos:column="18">Exception</name></type> <name pos:line="63" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="63" pos:column="31">{
            <expr_stmt><expr><call><name><name pos:line="64" pos:column="13">e</name><op:operator pos:line="64" pos:column="14">.</op:operator><name pos:line="64" pos:column="15">printStackTrace</name></name><argument_list pos:line="64" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="65" pos:column="13">return <expr><lit:literal type="null" pos:line="65" pos:column="20">null</lit:literal></expr>;</return>
        }</block></catch></try>
    }</block></function>
    
    <function><type><specifier pos:line="69" pos:column="5">public</specifier> <name><name pos:line="69" pos:column="12">java</name><op:operator pos:line="69" pos:column="16">.</op:operator><name pos:line="69" pos:column="17">util</name><op:operator pos:line="69" pos:column="21">.</op:operator><name pos:line="69" pos:column="22">Vector</name></name></type> <name pos:line="69" pos:column="29">getAllXincoCoreGroups</name><parameter_list pos:line="69" pos:column="50">(<param><decl><type><name><name pos:line="69" pos:column="51">com</name><op:operator pos:line="69" pos:column="54">.</op:operator><name pos:line="69" pos:column="55">bluecubs</name><op:operator pos:line="69" pos:column="63">.</op:operator><name pos:line="69" pos:column="64">xinco</name><op:operator pos:line="69" pos:column="69">.</op:operator><name pos:line="69" pos:column="70">core</name><op:operator pos:line="69" pos:column="74">.</op:operator><name pos:line="69" pos:column="75">XincoCoreUser</name></name></type> <name pos:line="69" pos:column="89">in0</name></decl></param>)</parameter_list> <throws pos:line="69" pos:column="94">throws <argument><expr><name><name pos:line="69" pos:column="101">java</name><op:operator pos:line="69" pos:column="105">.</op:operator><name pos:line="69" pos:column="106">rmi</name><op:operator pos:line="69" pos:column="109">.</op:operator><name pos:line="69" pos:column="110">RemoteException</name></name></expr></argument></throws> <block pos:line="69" pos:column="126">{
        <try pos:line="70" pos:column="9">try <block pos:line="70" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="71" pos:column="13">XincoDBManager</name></type> <name pos:line="71" pos:column="28">dbm</name> <init pos:line="71" pos:column="32">= <expr><op:operator pos:line="71" pos:column="34">new</op:operator> <call><name pos:line="71" pos:column="38">XincoDBManager</name><argument_list pos:line="71" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <comment type="line" pos:line="72" pos:column="13">//check if user exists</comment>
            <decl_stmt><decl><type><name pos:line="73" pos:column="13">XincoCoreUserServer</name></type> <name pos:line="73" pos:column="33">user</name> <init pos:line="73" pos:column="38">= <expr><op:operator pos:line="73" pos:column="40">new</op:operator> <call><name pos:line="73" pos:column="44">XincoCoreUserServer</name><argument_list pos:line="73" pos:column="63">(<argument><expr><call><name><name pos:line="73" pos:column="64">in0</name><op:operator pos:line="73" pos:column="67">.</op:operator><name pos:line="73" pos:column="68">getUsername</name></name><argument_list pos:line="73" pos:column="79">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="73" pos:column="83">in0</name><op:operator pos:line="73" pos:column="86">.</op:operator><name pos:line="73" pos:column="87">getUserpassword</name></name><argument_list pos:line="73" pos:column="102">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="73" pos:column="106">dbm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name><name pos:line="74" pos:column="13">java</name><op:operator pos:line="74" pos:column="17">.</op:operator><name pos:line="74" pos:column="18">util</name><op:operator pos:line="74" pos:column="22">.</op:operator><name pos:line="74" pos:column="23">Vector</name></name></type> <name pos:line="74" pos:column="30">v</name> <init pos:line="74" pos:column="32">= <expr><call><name><name pos:line="74" pos:column="34">XincoCoreGroupServer</name><op:operator pos:line="74" pos:column="54">.</op:operator><name pos:line="74" pos:column="55">getXincoCoreGroups</name></name><argument_list pos:line="74" pos:column="73">(<argument><expr><name pos:line="74" pos:column="74">dbm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="75" pos:column="13">dbm</name><op:operator pos:line="75" pos:column="16">.</op:operator><name pos:line="75" pos:column="17">con</name><op:operator pos:line="75" pos:column="20">.</op:operator><name pos:line="75" pos:column="21">close</name></name><argument_list pos:line="75" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="76" pos:column="13">return <expr><name pos:line="76" pos:column="20">v</name></expr>;</return>
        }</block> <catch pos:line="77" pos:column="11">catch <parameter_list pos:line="77" pos:column="17">(<param><decl><type><name pos:line="77" pos:column="18">Exception</name></type> <name pos:line="77" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="77" pos:column="31">{
            <expr_stmt><expr><call><name><name pos:line="78" pos:column="13">e</name><op:operator pos:line="78" pos:column="14">.</op:operator><name pos:line="78" pos:column="15">printStackTrace</name></name><argument_list pos:line="78" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="79" pos:column="13">return <expr><lit:literal type="null" pos:line="79" pos:column="20">null</lit:literal></expr>;</return>
        }</block></catch></try>
    }</block></function>
    
    <function><type><specifier pos:line="83" pos:column="5">public</specifier> <name><name pos:line="83" pos:column="12">java</name><op:operator pos:line="83" pos:column="16">.</op:operator><name pos:line="83" pos:column="17">util</name><op:operator pos:line="83" pos:column="21">.</op:operator><name pos:line="83" pos:column="22">Vector</name></name></type> <name pos:line="83" pos:column="29">getAllXincoCoreLanguages</name><parameter_list pos:line="83" pos:column="53">(<param><decl><type><name><name pos:line="83" pos:column="54">com</name><op:operator pos:line="83" pos:column="57">.</op:operator><name pos:line="83" pos:column="58">bluecubs</name><op:operator pos:line="83" pos:column="66">.</op:operator><name pos:line="83" pos:column="67">xinco</name><op:operator pos:line="83" pos:column="72">.</op:operator><name pos:line="83" pos:column="73">core</name><op:operator pos:line="83" pos:column="77">.</op:operator><name pos:line="83" pos:column="78">XincoCoreUser</name></name></type> <name pos:line="83" pos:column="92">in0</name></decl></param>)</parameter_list> <throws pos:line="83" pos:column="97">throws <argument><expr><name><name pos:line="83" pos:column="104">java</name><op:operator pos:line="83" pos:column="108">.</op:operator><name pos:line="83" pos:column="109">rmi</name><op:operator pos:line="83" pos:column="112">.</op:operator><name pos:line="83" pos:column="113">RemoteException</name></name></expr></argument></throws> <block pos:line="83" pos:column="129">{
        <try pos:line="84" pos:column="9">try <block pos:line="84" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="85" pos:column="13">XincoDBManager</name></type> <name pos:line="85" pos:column="28">dbm</name> <init pos:line="85" pos:column="32">= <expr><op:operator pos:line="85" pos:column="34">new</op:operator> <call><name pos:line="85" pos:column="38">XincoDBManager</name><argument_list pos:line="85" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <comment type="line" pos:line="86" pos:column="13">//check if user exists</comment>
            <decl_stmt><decl><type><name pos:line="87" pos:column="13">XincoCoreUserServer</name></type> <name pos:line="87" pos:column="33">user</name> <init pos:line="87" pos:column="38">= <expr><op:operator pos:line="87" pos:column="40">new</op:operator> <call><name pos:line="87" pos:column="44">XincoCoreUserServer</name><argument_list pos:line="87" pos:column="63">(<argument><expr><call><name><name pos:line="87" pos:column="64">in0</name><op:operator pos:line="87" pos:column="67">.</op:operator><name pos:line="87" pos:column="68">getUsername</name></name><argument_list pos:line="87" pos:column="79">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="87" pos:column="83">in0</name><op:operator pos:line="87" pos:column="86">.</op:operator><name pos:line="87" pos:column="87">getUserpassword</name></name><argument_list pos:line="87" pos:column="102">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="87" pos:column="106">dbm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name><name pos:line="88" pos:column="13">java</name><op:operator pos:line="88" pos:column="17">.</op:operator><name pos:line="88" pos:column="18">util</name><op:operator pos:line="88" pos:column="22">.</op:operator><name pos:line="88" pos:column="23">Vector</name></name></type> <name pos:line="88" pos:column="30">v</name> <init pos:line="88" pos:column="32">= <expr><call><name><name pos:line="88" pos:column="34">XincoCoreLanguageServer</name><op:operator pos:line="88" pos:column="57">.</op:operator><name pos:line="88" pos:column="58">getXincoCoreLanguages</name></name><argument_list pos:line="88" pos:column="79">(<argument><expr><name pos:line="88" pos:column="80">dbm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="89" pos:column="13">dbm</name><op:operator pos:line="89" pos:column="16">.</op:operator><name pos:line="89" pos:column="17">con</name><op:operator pos:line="89" pos:column="20">.</op:operator><name pos:line="89" pos:column="21">close</name></name><argument_list pos:line="89" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="90" pos:column="13">return <expr><name pos:line="90" pos:column="20">v</name></expr>;</return>
        }</block> <catch pos:line="91" pos:column="11">catch <parameter_list pos:line="91" pos:column="17">(<param><decl><type><name pos:line="91" pos:column="18">Exception</name></type> <name pos:line="91" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="91" pos:column="31">{
            <expr_stmt><expr><call><name><name pos:line="92" pos:column="13">e</name><op:operator pos:line="92" pos:column="14">.</op:operator><name pos:line="92" pos:column="15">printStackTrace</name></name><argument_list pos:line="92" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="93" pos:column="13">return <expr><lit:literal type="null" pos:line="93" pos:column="20">null</lit:literal></expr>;</return>
        }</block></catch></try>
    }</block></function>
    
    <function><type><specifier pos:line="97" pos:column="5">public</specifier> <name><name pos:line="97" pos:column="12">java</name><op:operator pos:line="97" pos:column="16">.</op:operator><name pos:line="97" pos:column="17">util</name><op:operator pos:line="97" pos:column="21">.</op:operator><name pos:line="97" pos:column="22">Vector</name></name></type> <name pos:line="97" pos:column="29">getAllXincoCoreDataTypes</name><parameter_list pos:line="97" pos:column="53">(<param><decl><type><name><name pos:line="97" pos:column="54">com</name><op:operator pos:line="97" pos:column="57">.</op:operator><name pos:line="97" pos:column="58">bluecubs</name><op:operator pos:line="97" pos:column="66">.</op:operator><name pos:line="97" pos:column="67">xinco</name><op:operator pos:line="97" pos:column="72">.</op:operator><name pos:line="97" pos:column="73">core</name><op:operator pos:line="97" pos:column="77">.</op:operator><name pos:line="97" pos:column="78">XincoCoreUser</name></name></type> <name pos:line="97" pos:column="92">in0</name></decl></param>)</parameter_list> <throws pos:line="97" pos:column="97">throws <argument><expr><name><name pos:line="97" pos:column="104">java</name><op:operator pos:line="97" pos:column="108">.</op:operator><name pos:line="97" pos:column="109">rmi</name><op:operator pos:line="97" pos:column="112">.</op:operator><name pos:line="97" pos:column="113">RemoteException</name></name></expr></argument></throws> <block pos:line="97" pos:column="129">{
        <try pos:line="98" pos:column="9">try <block pos:line="98" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="99" pos:column="13">XincoDBManager</name></type> <name pos:line="99" pos:column="28">dbm</name> <init pos:line="99" pos:column="32">= <expr><op:operator pos:line="99" pos:column="34">new</op:operator> <call><name pos:line="99" pos:column="38">XincoDBManager</name><argument_list pos:line="99" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <comment type="line" pos:line="100" pos:column="13">//check if user exists</comment>
            <decl_stmt><decl><type><name pos:line="101" pos:column="13">XincoCoreUserServer</name></type> <name pos:line="101" pos:column="33">user</name> <init pos:line="101" pos:column="38">= <expr><op:operator pos:line="101" pos:column="40">new</op:operator> <call><name pos:line="101" pos:column="44">XincoCoreUserServer</name><argument_list pos:line="101" pos:column="63">(<argument><expr><call><name><name pos:line="101" pos:column="64">in0</name><op:operator pos:line="101" pos:column="67">.</op:operator><name pos:line="101" pos:column="68">getUsername</name></name><argument_list pos:line="101" pos:column="79">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="101" pos:column="83">in0</name><op:operator pos:line="101" pos:column="86">.</op:operator><name pos:line="101" pos:column="87">getUserpassword</name></name><argument_list pos:line="101" pos:column="102">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="101" pos:column="106">dbm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name><name pos:line="102" pos:column="13">java</name><op:operator pos:line="102" pos:column="17">.</op:operator><name pos:line="102" pos:column="18">util</name><op:operator pos:line="102" pos:column="22">.</op:operator><name pos:line="102" pos:column="23">Vector</name></name></type> <name pos:line="102" pos:column="30">v</name> <init pos:line="102" pos:column="32">= <expr><call><name><name pos:line="102" pos:column="34">XincoCoreDataTypeServer</name><op:operator pos:line="102" pos:column="57">.</op:operator><name pos:line="102" pos:column="58">getXincoCoreDataTypes</name></name><argument_list pos:line="102" pos:column="79">(<argument><expr><name pos:line="102" pos:column="80">dbm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="103" pos:column="13">dbm</name><op:operator pos:line="103" pos:column="16">.</op:operator><name pos:line="103" pos:column="17">con</name><op:operator pos:line="103" pos:column="20">.</op:operator><name pos:line="103" pos:column="21">close</name></name><argument_list pos:line="103" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="104" pos:column="13">return <expr><name pos:line="104" pos:column="20">v</name></expr>;</return>
        }</block> <catch pos:line="105" pos:column="11">catch <parameter_list pos:line="105" pos:column="17">(<param><decl><type><name pos:line="105" pos:column="18">Exception</name></type> <name pos:line="105" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="105" pos:column="31">{
            <expr_stmt><expr><call><name><name pos:line="106" pos:column="13">e</name><op:operator pos:line="106" pos:column="14">.</op:operator><name pos:line="106" pos:column="15">printStackTrace</name></name><argument_list pos:line="106" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="107" pos:column="13">return <expr><lit:literal type="null" pos:line="107" pos:column="20">null</lit:literal></expr>;</return>
        }</block></catch></try>
    }</block></function>
    
    <function><type><specifier pos:line="111" pos:column="5">public</specifier> <name><name pos:line="111" pos:column="12">com</name><op:operator pos:line="111" pos:column="15">.</op:operator><name pos:line="111" pos:column="16">bluecubs</name><op:operator pos:line="111" pos:column="24">.</op:operator><name pos:line="111" pos:column="25">xinco</name><op:operator pos:line="111" pos:column="30">.</op:operator><name pos:line="111" pos:column="31">core</name><op:operator pos:line="111" pos:column="35">.</op:operator><name pos:line="111" pos:column="36">XincoCoreNode</name></name></type> <name pos:line="111" pos:column="50">getXincoCoreNode</name><parameter_list pos:line="111" pos:column="66">(<param><decl><type><name><name pos:line="111" pos:column="67">com</name><op:operator pos:line="111" pos:column="70">.</op:operator><name pos:line="111" pos:column="71">bluecubs</name><op:operator pos:line="111" pos:column="79">.</op:operator><name pos:line="111" pos:column="80">xinco</name><op:operator pos:line="111" pos:column="85">.</op:operator><name pos:line="111" pos:column="86">core</name><op:operator pos:line="111" pos:column="90">.</op:operator><name pos:line="111" pos:column="91">XincoCoreNode</name></name></type> <name pos:line="111" pos:column="105">in0</name></decl></param>, <param><decl><type><name><name pos:line="111" pos:column="110">com</name><op:operator pos:line="111" pos:column="113">.</op:operator><name pos:line="111" pos:column="114">bluecubs</name><op:operator pos:line="111" pos:column="122">.</op:operator><name pos:line="111" pos:column="123">xinco</name><op:operator pos:line="111" pos:column="128">.</op:operator><name pos:line="111" pos:column="129">core</name><op:operator pos:line="111" pos:column="133">.</op:operator><name pos:line="111" pos:column="134">XincoCoreUser</name></name></type> <name pos:line="111" pos:column="148">in1</name></decl></param>)</parameter_list> <throws pos:line="111" pos:column="153">throws <argument><expr><name><name pos:line="111" pos:column="160">java</name><op:operator pos:line="111" pos:column="164">.</op:operator><name pos:line="111" pos:column="165">rmi</name><op:operator pos:line="111" pos:column="168">.</op:operator><name pos:line="111" pos:column="169">RemoteException</name></name></expr></argument></throws> <block pos:line="111" pos:column="185">{
        <try pos:line="112" pos:column="9">try <block pos:line="112" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="113" pos:column="13">int</name></type> <name pos:line="113" pos:column="17">i</name> <init pos:line="113" pos:column="19">= <expr><lit:literal type="number" pos:line="113" pos:column="21">0</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="114" pos:column="13">XincoDBManager</name></type> <name pos:line="114" pos:column="28">dbm</name> <init pos:line="114" pos:column="32">= <expr><op:operator pos:line="114" pos:column="34">new</op:operator> <call><name pos:line="114" pos:column="38">XincoDBManager</name><argument_list pos:line="114" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="115" pos:column="13">XincoCoreUserServer</name></type> <name pos:line="115" pos:column="33">user</name> <init pos:line="115" pos:column="38">= <expr><op:operator pos:line="115" pos:column="40">new</op:operator> <call><name pos:line="115" pos:column="44">XincoCoreUserServer</name><argument_list pos:line="115" pos:column="63">(<argument><expr><call><name><name pos:line="115" pos:column="64">in1</name><op:operator pos:line="115" pos:column="67">.</op:operator><name pos:line="115" pos:column="68">getUsername</name></name><argument_list pos:line="115" pos:column="79">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="115" pos:column="83">in1</name><op:operator pos:line="115" pos:column="86">.</op:operator><name pos:line="115" pos:column="87">getUserpassword</name></name><argument_list pos:line="115" pos:column="102">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="115" pos:column="106">dbm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="116" pos:column="13">XincoCoreNodeServer</name></type> <name pos:line="116" pos:column="33">node</name> <init pos:line="116" pos:column="38">= <expr><op:operator pos:line="116" pos:column="40">new</op:operator> <call><name pos:line="116" pos:column="44">XincoCoreNodeServer</name><argument_list pos:line="116" pos:column="63">(<argument><expr><call><name><name pos:line="116" pos:column="64">in0</name><op:operator pos:line="116" pos:column="67">.</op:operator><name pos:line="116" pos:column="68">getId</name></name><argument_list pos:line="116" pos:column="73">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="116" pos:column="77">dbm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="117" pos:column="13">XincoCoreACE</name></type> <name pos:line="117" pos:column="26">ace</name> <init pos:line="117" pos:column="30">= <expr><call><name><name pos:line="117" pos:column="32">XincoCoreACEServer</name><op:operator pos:line="117" pos:column="50">.</op:operator><name pos:line="117" pos:column="51">checkAccess</name></name><argument_list pos:line="117" pos:column="62">(<argument><expr><name pos:line="117" pos:column="63">user</name></expr></argument>, <argument><expr><call><name><name pos:line="117" pos:column="69">node</name><op:operator pos:line="117" pos:column="73">.</op:operator><name pos:line="117" pos:column="74">getXinco_core_acl</name></name><argument_list pos:line="117" pos:column="91">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="118" pos:column="13">if <condition pos:line="118" pos:column="16">(<expr><call><name><name pos:line="118" pos:column="17">ace</name><op:operator pos:line="118" pos:column="20">.</op:operator><name pos:line="118" pos:column="21">isRead_permission</name></name><argument_list pos:line="118" pos:column="38">()</argument_list></call></expr>)</condition><then pos:line="118" pos:column="41"> <block pos:line="118" pos:column="42">{
                <decl_stmt><decl><type><name pos:line="119" pos:column="17">boolean</name></type> <name pos:line="119" pos:column="25">show_children</name> <init pos:line="119" pos:column="39">= <expr><lit:literal type="boolean" pos:line="119" pos:column="41">false</lit:literal></expr></init></decl>;</decl_stmt>
                <comment type="line" pos:line="120" pos:column="17">// show content of TRASH to admins ONLY!</comment>
                <if pos:line="121" pos:column="17">if <condition pos:line="121" pos:column="20">(<expr><call><name><name pos:line="121" pos:column="21">node</name><op:operator pos:line="121" pos:column="25">.</op:operator><name pos:line="121" pos:column="26">getId</name></name><argument_list pos:line="121" pos:column="31">()</argument_list></call> <op:operator pos:line="121" pos:column="34">==</op:operator> <lit:literal type="number" pos:line="121" pos:column="37">2</lit:literal></expr>)</condition><then pos:line="121" pos:column="39"> <block pos:line="121" pos:column="40">{
                    <for pos:line="122" pos:column="21">for (<init><expr><name pos:line="122" pos:column="26">i</name><op:operator pos:line="122" pos:column="27">=</op:operator><lit:literal type="number" pos:line="122" pos:column="28">0</lit:literal></expr>;</init><condition><expr><name pos:line="122" pos:column="30">i</name><op:operator pos:line="122" pos:column="31">&lt;</op:operator><call><name><name pos:line="122" pos:column="32">user</name><op:operator pos:line="122" pos:column="36">.</op:operator><name pos:line="122" pos:column="37">getXinco_core_groups</name></name><argument_list pos:line="122" pos:column="57">()</argument_list></call><op:operator pos:line="122" pos:column="59">.</op:operator><call><name pos:line="122" pos:column="60">size</name><argument_list pos:line="122" pos:column="64">()</argument_list></call></expr>;</condition><incr><expr><name pos:line="122" pos:column="67">i</name><op:operator pos:line="122" pos:column="68">++</op:operator></expr></incr>) <block pos:line="122" pos:column="72">{
                        <if pos:line="123" pos:column="25">if <condition pos:line="123" pos:column="28">(<expr><op:operator pos:line="123" pos:column="29">(</op:operator><op:operator pos:line="123" pos:column="30">(</op:operator><name pos:line="123" pos:column="31">XincoCoreGroup</name><op:operator pos:line="123" pos:column="45">)</op:operator><call><name><name pos:line="123" pos:column="46">user</name><op:operator pos:line="123" pos:column="50">.</op:operator><name pos:line="123" pos:column="51">getXinco_core_groups</name></name><argument_list pos:line="123" pos:column="71">()</argument_list></call><op:operator pos:line="123" pos:column="73">.</op:operator><call><name pos:line="123" pos:column="74">elementAt</name><argument_list pos:line="123" pos:column="83">(<argument><expr><name pos:line="123" pos:column="84">i</name></expr></argument>)</argument_list></call><op:operator pos:line="123" pos:column="86">)</op:operator><op:operator pos:line="123" pos:column="87">.</op:operator><call><name pos:line="123" pos:column="88">getId</name><argument_list pos:line="123" pos:column="93">()</argument_list></call> <op:operator pos:line="123" pos:column="96">==</op:operator> <lit:literal type="number" pos:line="123" pos:column="99">1</lit:literal></expr>)</condition><then pos:line="123" pos:column="101"> <block pos:line="123" pos:column="102">{
                            <expr_stmt><expr><name pos:line="124" pos:column="29">show_children</name> <op:operator pos:line="124" pos:column="43">=</op:operator> <lit:literal type="boolean" pos:line="124" pos:column="45">true</lit:literal></expr>;</expr_stmt>
                            <break pos:line="125" pos:column="29">break;</break>
                        }</block></then></if>
                    }</block></for>
                }</block></then> <else pos:line="128" pos:column="19">else <block pos:line="128" pos:column="24">{
                    <expr_stmt><expr><name pos:line="129" pos:column="21">show_children</name> <op:operator pos:line="129" pos:column="35">=</op:operator> <lit:literal type="boolean" pos:line="129" pos:column="37">true</lit:literal></expr>;</expr_stmt>
                }</block></else></if>
                <if pos:line="131" pos:column="17">if <condition pos:line="131" pos:column="20">(<expr><name pos:line="131" pos:column="21">show_children</name></expr>)</condition><then pos:line="131" pos:column="35"> <block pos:line="131" pos:column="36">{
                    <expr_stmt><expr><call><name><name pos:line="132" pos:column="21">node</name><op:operator pos:line="132" pos:column="25">.</op:operator><name pos:line="132" pos:column="26">fillXincoCoreNodes</name></name><argument_list pos:line="132" pos:column="44">(<argument><expr><name pos:line="132" pos:column="45">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="133" pos:column="21">node</name><op:operator pos:line="133" pos:column="25">.</op:operator><name pos:line="133" pos:column="26">fillXincoCoreData</name></name><argument_list pos:line="133" pos:column="43">(<argument><expr><name pos:line="133" pos:column="44">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <expr_stmt><expr><call><name><name pos:line="135" pos:column="17">dbm</name><op:operator pos:line="135" pos:column="20">.</op:operator><name pos:line="135" pos:column="21">con</name><op:operator pos:line="135" pos:column="24">.</op:operator><name pos:line="135" pos:column="25">close</name></name><argument_list pos:line="135" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
                <return pos:line="136" pos:column="17">return <expr><op:operator pos:line="136" pos:column="24">(</op:operator><name pos:line="136" pos:column="25">XincoCoreNode</name><op:operator pos:line="136" pos:column="38">)</op:operator><name pos:line="136" pos:column="39">node</name></expr>;</return>
            }</block></then> <else pos:line="137" pos:column="15">else <block pos:line="137" pos:column="20">{
                <expr_stmt><expr><call><name><name pos:line="138" pos:column="17">dbm</name><op:operator pos:line="138" pos:column="20">.</op:operator><name pos:line="138" pos:column="21">con</name><op:operator pos:line="138" pos:column="24">.</op:operator><name pos:line="138" pos:column="25">close</name></name><argument_list pos:line="138" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
                <return pos:line="139" pos:column="17">return <expr><lit:literal type="null" pos:line="139" pos:column="24">null</lit:literal></expr>;</return>
            }</block></else></if>
        }</block> <catch pos:line="141" pos:column="11">catch <parameter_list pos:line="141" pos:column="17">(<param><decl><type><name pos:line="141" pos:column="18">Exception</name></type> <name pos:line="141" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="141" pos:column="31">{
            <expr_stmt><expr><call><name><name pos:line="142" pos:column="13">e</name><op:operator pos:line="142" pos:column="14">.</op:operator><name pos:line="142" pos:column="15">printStackTrace</name></name><argument_list pos:line="142" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="143" pos:column="13">return <expr><lit:literal type="null" pos:line="143" pos:column="20">null</lit:literal></expr>;</return>
        }</block></catch></try>
    }</block></function>
    
    <function><type><specifier pos:line="147" pos:column="5">public</specifier> <name><name pos:line="147" pos:column="12">com</name><op:operator pos:line="147" pos:column="15">.</op:operator><name pos:line="147" pos:column="16">bluecubs</name><op:operator pos:line="147" pos:column="24">.</op:operator><name pos:line="147" pos:column="25">xinco</name><op:operator pos:line="147" pos:column="30">.</op:operator><name pos:line="147" pos:column="31">core</name><op:operator pos:line="147" pos:column="35">.</op:operator><name pos:line="147" pos:column="36">XincoCoreData</name></name></type> <name pos:line="147" pos:column="50">getXincoCoreData</name><parameter_list pos:line="147" pos:column="66">(<param><decl><type><name><name pos:line="147" pos:column="67">com</name><op:operator pos:line="147" pos:column="70">.</op:operator><name pos:line="147" pos:column="71">bluecubs</name><op:operator pos:line="147" pos:column="79">.</op:operator><name pos:line="147" pos:column="80">xinco</name><op:operator pos:line="147" pos:column="85">.</op:operator><name pos:line="147" pos:column="86">core</name><op:operator pos:line="147" pos:column="90">.</op:operator><name pos:line="147" pos:column="91">XincoCoreData</name></name></type> <name pos:line="147" pos:column="105">in0</name></decl></param>, <param><decl><type><name><name pos:line="147" pos:column="110">com</name><op:operator pos:line="147" pos:column="113">.</op:operator><name pos:line="147" pos:column="114">bluecubs</name><op:operator pos:line="147" pos:column="122">.</op:operator><name pos:line="147" pos:column="123">xinco</name><op:operator pos:line="147" pos:column="128">.</op:operator><name pos:line="147" pos:column="129">core</name><op:operator pos:line="147" pos:column="133">.</op:operator><name pos:line="147" pos:column="134">XincoCoreUser</name></name></type> <name pos:line="147" pos:column="148">in1</name></decl></param>)</parameter_list> <throws pos:line="147" pos:column="153">throws <argument><expr><name><name pos:line="147" pos:column="160">java</name><op:operator pos:line="147" pos:column="164">.</op:operator><name pos:line="147" pos:column="165">rmi</name><op:operator pos:line="147" pos:column="168">.</op:operator><name pos:line="147" pos:column="169">RemoteException</name></name></expr></argument></throws> <block pos:line="147" pos:column="185">{
        <try pos:line="148" pos:column="9">try <block pos:line="148" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="149" pos:column="13">XincoDBManager</name></type> <name pos:line="149" pos:column="28">dbm</name> <init pos:line="149" pos:column="32">= <expr><op:operator pos:line="149" pos:column="34">new</op:operator> <call><name pos:line="149" pos:column="38">XincoDBManager</name><argument_list pos:line="149" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="150" pos:column="13">XincoCoreUserServer</name></type> <name pos:line="150" pos:column="33">user</name> <init pos:line="150" pos:column="38">= <expr><op:operator pos:line="150" pos:column="40">new</op:operator> <call><name pos:line="150" pos:column="44">XincoCoreUserServer</name><argument_list pos:line="150" pos:column="63">(<argument><expr><call><name><name pos:line="150" pos:column="64">in1</name><op:operator pos:line="150" pos:column="67">.</op:operator><name pos:line="150" pos:column="68">getUsername</name></name><argument_list pos:line="150" pos:column="79">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="150" pos:column="83">in1</name><op:operator pos:line="150" pos:column="86">.</op:operator><name pos:line="150" pos:column="87">getUserpassword</name></name><argument_list pos:line="150" pos:column="102">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="150" pos:column="106">dbm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="151" pos:column="13">XincoCoreDataServer</name></type> <name pos:line="151" pos:column="33">data</name> <init pos:line="151" pos:column="38">= <expr><op:operator pos:line="151" pos:column="40">new</op:operator> <call><name pos:line="151" pos:column="44">XincoCoreDataServer</name><argument_list pos:line="151" pos:column="63">(<argument><expr><call><name><name pos:line="151" pos:column="64">in0</name><op:operator pos:line="151" pos:column="67">.</op:operator><name pos:line="151" pos:column="68">getId</name></name><argument_list pos:line="151" pos:column="73">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="151" pos:column="77">dbm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="152" pos:column="13">XincoCoreACE</name></type> <name pos:line="152" pos:column="26">ace</name> <init pos:line="152" pos:column="30">= <expr><call><name><name pos:line="152" pos:column="32">XincoCoreACEServer</name><op:operator pos:line="152" pos:column="50">.</op:operator><name pos:line="152" pos:column="51">checkAccess</name></name><argument_list pos:line="152" pos:column="62">(<argument><expr><name pos:line="152" pos:column="63">user</name></expr></argument>, <argument><expr><call><name><name pos:line="152" pos:column="69">data</name><op:operator pos:line="152" pos:column="73">.</op:operator><name pos:line="152" pos:column="74">getXinco_core_acl</name></name><argument_list pos:line="152" pos:column="91">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="153" pos:column="13">if <condition pos:line="153" pos:column="16">(<expr><call><name><name pos:line="153" pos:column="17">ace</name><op:operator pos:line="153" pos:column="20">.</op:operator><name pos:line="153" pos:column="21">isRead_permission</name></name><argument_list pos:line="153" pos:column="38">()</argument_list></call></expr>)</condition><then pos:line="153" pos:column="41"> <block pos:line="153" pos:column="42">{
                <expr_stmt><expr><call><name><name pos:line="154" pos:column="17">dbm</name><op:operator pos:line="154" pos:column="20">.</op:operator><name pos:line="154" pos:column="21">con</name><op:operator pos:line="154" pos:column="24">.</op:operator><name pos:line="154" pos:column="25">close</name></name><argument_list pos:line="154" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
                <return pos:line="155" pos:column="17">return <expr><op:operator pos:line="155" pos:column="24">(</op:operator><name pos:line="155" pos:column="25">XincoCoreData</name><op:operator pos:line="155" pos:column="38">)</op:operator><name pos:line="155" pos:column="39">data</name></expr>;</return>
            }</block></then> <else pos:line="156" pos:column="15">else <block pos:line="156" pos:column="20">{
                <expr_stmt><expr><call><name><name pos:line="157" pos:column="17">dbm</name><op:operator pos:line="157" pos:column="20">.</op:operator><name pos:line="157" pos:column="21">con</name><op:operator pos:line="157" pos:column="24">.</op:operator><name pos:line="157" pos:column="25">close</name></name><argument_list pos:line="157" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
                <return pos:line="158" pos:column="17">return <expr><lit:literal type="null" pos:line="158" pos:column="24">null</lit:literal></expr>;</return>
            }</block></else></if>
        }</block> <catch pos:line="160" pos:column="11">catch <parameter_list pos:line="160" pos:column="17">(<param><decl><type><name pos:line="160" pos:column="18">Exception</name></type> <name pos:line="160" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="160" pos:column="31">{
            <expr_stmt><expr><call><name><name pos:line="161" pos:column="13">e</name><op:operator pos:line="161" pos:column="14">.</op:operator><name pos:line="161" pos:column="15">printStackTrace</name></name><argument_list pos:line="161" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="162" pos:column="13">return <expr><lit:literal type="null" pos:line="162" pos:column="20">null</lit:literal></expr>;</return>
        }</block></catch></try>
    }</block></function>
    
    <function><type><specifier pos:line="166" pos:column="5">public</specifier> <name><name pos:line="166" pos:column="12">com</name><op:operator pos:line="166" pos:column="15">.</op:operator><name pos:line="166" pos:column="16">bluecubs</name><op:operator pos:line="166" pos:column="24">.</op:operator><name pos:line="166" pos:column="25">xinco</name><op:operator pos:line="166" pos:column="30">.</op:operator><name pos:line="166" pos:column="31">core</name><op:operator pos:line="166" pos:column="35">.</op:operator><name pos:line="166" pos:column="36">XincoCoreData</name></name></type> <name pos:line="166" pos:column="50">doXincoCoreDataCheckout</name><parameter_list pos:line="166" pos:column="73">(<param><decl><type><name><name pos:line="166" pos:column="74">com</name><op:operator pos:line="166" pos:column="77">.</op:operator><name pos:line="166" pos:column="78">bluecubs</name><op:operator pos:line="166" pos:column="86">.</op:operator><name pos:line="166" pos:column="87">xinco</name><op:operator pos:line="166" pos:column="92">.</op:operator><name pos:line="166" pos:column="93">core</name><op:operator pos:line="166" pos:column="97">.</op:operator><name pos:line="166" pos:column="98">XincoCoreData</name></name></type> <name pos:line="166" pos:column="112">in0</name></decl></param>, <param><decl><type><name><name pos:line="166" pos:column="117">com</name><op:operator pos:line="166" pos:column="120">.</op:operator><name pos:line="166" pos:column="121">bluecubs</name><op:operator pos:line="166" pos:column="129">.</op:operator><name pos:line="166" pos:column="130">xinco</name><op:operator pos:line="166" pos:column="135">.</op:operator><name pos:line="166" pos:column="136">core</name><op:operator pos:line="166" pos:column="140">.</op:operator><name pos:line="166" pos:column="141">XincoCoreUser</name></name></type> <name pos:line="166" pos:column="155">in1</name></decl></param>)</parameter_list> <throws pos:line="166" pos:column="160">throws <argument><expr><name><name pos:line="166" pos:column="167">java</name><op:operator pos:line="166" pos:column="171">.</op:operator><name pos:line="166" pos:column="172">rmi</name><op:operator pos:line="166" pos:column="175">.</op:operator><name pos:line="166" pos:column="176">RemoteException</name></name></expr></argument></throws> <block pos:line="166" pos:column="192">{
        <comment type="block" pos:line="167" pos:column="9">/*
        try {
                        XincoDBManager dbm = new XincoDBManager();
                        XincoCoreDataServer data;
                        XincoCoreACE ace;
                        XincoCoreUserServer user = new XincoCoreUserServer(in1.getUsername(), in1.getUserpassword(), dbm);
                        //get existing data
                        data = new XincoCoreDataServer(in0.getId(), dbm);
                        ace = XincoCoreACEServer.checkAccess(user, data.getXinco_core_acl());
                        //check status
                        if (data.getStatus_number() != 1) {
                                dbm.con.close();
                                return null;
                        }
                        if (ace.isWrite_permission()) {
                                //update information
                                data.setStatus_number(4);
                                data.write2DB(dbm);
                                dbm.con.close();
                                return (XincoCoreData)data;
                        } else {
                                dbm.con.close();
                                return null;
                        }
                } catch (Exception e) {
                        return null;
                }
         */</comment>
        <expr_stmt><expr><call><name><name pos:line="195" pos:column="9">in0</name><op:operator pos:line="195" pos:column="12">.</op:operator><name pos:line="195" pos:column="13">setStatus_number</name></name><argument_list pos:line="195" pos:column="29">(<argument><expr><lit:literal type="number" pos:line="195" pos:column="30">4</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:line="196" pos:column="9">return <expr><call><name pos:line="196" pos:column="16">setXincoCoreData</name><argument_list pos:line="196" pos:column="32">(<argument><expr><name pos:line="196" pos:column="33">in0</name></expr></argument>, <argument><expr><name pos:line="196" pos:column="38">in1</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>
    
    <function><type><specifier pos:line="199" pos:column="5">public</specifier> <name><name pos:line="199" pos:column="12">com</name><op:operator pos:line="199" pos:column="15">.</op:operator><name pos:line="199" pos:column="16">bluecubs</name><op:operator pos:line="199" pos:column="24">.</op:operator><name pos:line="199" pos:column="25">xinco</name><op:operator pos:line="199" pos:column="30">.</op:operator><name pos:line="199" pos:column="31">core</name><op:operator pos:line="199" pos:column="35">.</op:operator><name pos:line="199" pos:column="36">XincoCoreData</name></name></type> <name pos:line="199" pos:column="50">undoXincoCoreDataCheckout</name><parameter_list pos:line="199" pos:column="75">(<param><decl><type><name><name pos:line="199" pos:column="76">com</name><op:operator pos:line="199" pos:column="79">.</op:operator><name pos:line="199" pos:column="80">bluecubs</name><op:operator pos:line="199" pos:column="88">.</op:operator><name pos:line="199" pos:column="89">xinco</name><op:operator pos:line="199" pos:column="94">.</op:operator><name pos:line="199" pos:column="95">core</name><op:operator pos:line="199" pos:column="99">.</op:operator><name pos:line="199" pos:column="100">XincoCoreData</name></name></type> <name pos:line="199" pos:column="114">in0</name></decl></param>, <param><decl><type><name><name pos:line="199" pos:column="119">com</name><op:operator pos:line="199" pos:column="122">.</op:operator><name pos:line="199" pos:column="123">bluecubs</name><op:operator pos:line="199" pos:column="131">.</op:operator><name pos:line="199" pos:column="132">xinco</name><op:operator pos:line="199" pos:column="137">.</op:operator><name pos:line="199" pos:column="138">core</name><op:operator pos:line="199" pos:column="142">.</op:operator><name pos:line="199" pos:column="143">XincoCoreUser</name></name></type> <name pos:line="199" pos:column="157">in1</name></decl></param>)</parameter_list> <throws pos:line="199" pos:column="162">throws <argument><expr><name><name pos:line="199" pos:column="169">java</name><op:operator pos:line="199" pos:column="173">.</op:operator><name pos:line="199" pos:column="174">rmi</name><op:operator pos:line="199" pos:column="177">.</op:operator><name pos:line="199" pos:column="178">RemoteException</name></name></expr></argument></throws> <block pos:line="199" pos:column="194">{
        <comment type="block" pos:line="200" pos:column="9">/*
        try {
                        XincoDBManager dbm = new XincoDBManager();
                        XincoCoreDataServer data;
                        XincoCoreACE ace;
                        XincoCoreUserServer user = new XincoCoreUserServer(in1.getUsername(), in1.getUserpassword(), dbm);
                        //get existing data
                        data = new XincoCoreDataServer(in0.getId(), dbm);
                        ace = XincoCoreACEServer.checkAccess(user, data.getXinco_core_acl());
                        //check status
                        if (data.getStatus_number() != 4) {
                                dbm.con.close();
                                return null;
                        }
                        if (ace.isWrite_permission()) {
                                //update information
                                data.setStatus_number(1);
                                data.write2DB(dbm);
                                dbm.con.close();
                                return (XincoCoreData)data;
                        } else {
                                dbm.con.close();
                                return null;
                        }
                } catch (Exception e) {
                        return null;
                }
         */</comment>
        <expr_stmt><expr><call><name><name pos:line="228" pos:column="9">in0</name><op:operator pos:line="228" pos:column="12">.</op:operator><name pos:line="228" pos:column="13">setStatus_number</name></name><argument_list pos:line="228" pos:column="29">(<argument><expr><lit:literal type="number" pos:line="228" pos:column="30">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:line="229" pos:column="9">return <expr><call><name pos:line="229" pos:column="16">setXincoCoreData</name><argument_list pos:line="229" pos:column="32">(<argument><expr><name pos:line="229" pos:column="33">in0</name></expr></argument>, <argument><expr><name pos:line="229" pos:column="38">in1</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>
    
    <function><type><specifier pos:line="232" pos:column="5">public</specifier> <name><name pos:line="232" pos:column="12">com</name><op:operator pos:line="232" pos:column="15">.</op:operator><name pos:line="232" pos:column="16">bluecubs</name><op:operator pos:line="232" pos:column="24">.</op:operator><name pos:line="232" pos:column="25">xinco</name><op:operator pos:line="232" pos:column="30">.</op:operator><name pos:line="232" pos:column="31">core</name><op:operator pos:line="232" pos:column="35">.</op:operator><name pos:line="232" pos:column="36">XincoCoreData</name></name></type> <name pos:line="232" pos:column="50">doXincoCoreDataCheckin</name><parameter_list pos:line="232" pos:column="72">(<param><decl><type><name><name pos:line="232" pos:column="73">com</name><op:operator pos:line="232" pos:column="76">.</op:operator><name pos:line="232" pos:column="77">bluecubs</name><op:operator pos:line="232" pos:column="85">.</op:operator><name pos:line="232" pos:column="86">xinco</name><op:operator pos:line="232" pos:column="91">.</op:operator><name pos:line="232" pos:column="92">core</name><op:operator pos:line="232" pos:column="96">.</op:operator><name pos:line="232" pos:column="97">XincoCoreData</name></name></type> <name pos:line="232" pos:column="111">in0</name></decl></param>, <param><decl><type><name><name pos:line="232" pos:column="116">com</name><op:operator pos:line="232" pos:column="119">.</op:operator><name pos:line="232" pos:column="120">bluecubs</name><op:operator pos:line="232" pos:column="128">.</op:operator><name pos:line="232" pos:column="129">xinco</name><op:operator pos:line="232" pos:column="134">.</op:operator><name pos:line="232" pos:column="135">core</name><op:operator pos:line="232" pos:column="139">.</op:operator><name pos:line="232" pos:column="140">XincoCoreUser</name></name></type> <name pos:line="232" pos:column="154">in1</name></decl></param>)</parameter_list> <throws pos:line="232" pos:column="159">throws <argument><expr><name><name pos:line="232" pos:column="166">java</name><op:operator pos:line="232" pos:column="170">.</op:operator><name pos:line="232" pos:column="171">rmi</name><op:operator pos:line="232" pos:column="174">.</op:operator><name pos:line="232" pos:column="175">RemoteException</name></name></expr></argument></throws> <block pos:line="232" pos:column="191">{
        <comment type="block" pos:line="233" pos:column="9">/*
        try {
                        XincoDBManager dbm = new XincoDBManager();
                        XincoCoreDataServer data;
                        XincoCoreACE ace;
                        XincoCoreUserServer user = new XincoCoreUserServer(in1.getUsername(), in1.getUserpassword(), dbm);
                        //get existing data
                        data = new XincoCoreDataServer(in0.getId(), dbm);
                        ace = XincoCoreACEServer.checkAccess(user, data.getXinco_core_acl());
                        //check status
                        if (data.getStatus_number() != 4) {
                                dbm.con.close();
                                return null;
                        }
                        if (ace.isWrite_permission()) {
                                //update information
                                data.setStatus_number(1);
                                data.write2DB(dbm);
                                dbm.con.close();
                                return (XincoCoreData)data;
                        } else {
                                dbm.con.close();
                                return null;
                        }
                } catch (Exception e) {
                        return null;
                }
         */</comment>
        <expr_stmt><expr><call><name><name pos:line="261" pos:column="9">in0</name><op:operator pos:line="261" pos:column="12">.</op:operator><name pos:line="261" pos:column="13">setStatus_number</name></name><argument_list pos:line="261" pos:column="29">(<argument><expr><lit:literal type="number" pos:line="261" pos:column="30">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:line="262" pos:column="9">return <expr><call><name pos:line="262" pos:column="16">setXincoCoreData</name><argument_list pos:line="262" pos:column="32">(<argument><expr><name pos:line="262" pos:column="33">in0</name></expr></argument>, <argument><expr><name pos:line="262" pos:column="38">in1</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>
    
    <function><type><specifier pos:line="265" pos:column="5">public</specifier> <name pos:line="265" pos:column="12">byte</name><index pos:line="265" pos:column="16">[]</index></type> <name pos:line="265" pos:column="19">downloadXincoCoreData</name><parameter_list pos:line="265" pos:column="40">(<param><decl><type><name><name pos:line="265" pos:column="41">com</name><op:operator pos:line="265" pos:column="44">.</op:operator><name pos:line="265" pos:column="45">bluecubs</name><op:operator pos:line="265" pos:column="53">.</op:operator><name pos:line="265" pos:column="54">xinco</name><op:operator pos:line="265" pos:column="59">.</op:operator><name pos:line="265" pos:column="60">core</name><op:operator pos:line="265" pos:column="64">.</op:operator><name pos:line="265" pos:column="65">XincoCoreData</name></name></type> <name pos:line="265" pos:column="79">in0</name></decl></param>, <param><decl><type><name><name pos:line="265" pos:column="84">com</name><op:operator pos:line="265" pos:column="87">.</op:operator><name pos:line="265" pos:column="88">bluecubs</name><op:operator pos:line="265" pos:column="96">.</op:operator><name pos:line="265" pos:column="97">xinco</name><op:operator pos:line="265" pos:column="102">.</op:operator><name pos:line="265" pos:column="103">core</name><op:operator pos:line="265" pos:column="107">.</op:operator><name pos:line="265" pos:column="108">XincoCoreUser</name></name></type> <name pos:line="265" pos:column="122">in1</name></decl></param>)</parameter_list> <throws pos:line="265" pos:column="127">throws <argument><expr><name><name pos:line="265" pos:column="134">java</name><op:operator pos:line="265" pos:column="138">.</op:operator><name pos:line="265" pos:column="139">rmi</name><op:operator pos:line="265" pos:column="142">.</op:operator><name pos:line="265" pos:column="143">RemoteException</name></name></expr></argument></throws> <block pos:line="265" pos:column="159">{
        <try pos:line="266" pos:column="9">try <block pos:line="266" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="267" pos:column="13">XincoDBManager</name></type> <name pos:line="267" pos:column="28">dbm</name> <init pos:line="267" pos:column="32">= <expr><op:operator pos:line="267" pos:column="34">new</op:operator> <call><name pos:line="267" pos:column="38">XincoDBManager</name><argument_list pos:line="267" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="268" pos:column="13">XincoCoreDataServer</name></type> <name pos:line="268" pos:column="33">data</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="269" pos:column="13">XincoCoreACE</name></type> <name pos:line="269" pos:column="26">ace</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="270" pos:column="13">byte</name><index pos:line="270" pos:column="17">[]</index></type> <name pos:line="270" pos:column="20">byte_array</name> <init pos:line="270" pos:column="31">= <expr><lit:literal type="null" pos:line="270" pos:column="33">null</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="271" pos:column="13">String</name></type> <name pos:line="271" pos:column="20">revision</name> <init pos:line="271" pos:column="29">= <expr><lit:literal type="string" pos:line="271" pos:column="31">""</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="272" pos:column="13">long</name></type> <name pos:line="272" pos:column="18">total_len</name> <init pos:line="272" pos:column="28">= <expr><lit:literal type="number" pos:line="272" pos:column="30">0</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="273" pos:column="13">boolean</name></type> <name pos:line="273" pos:column="21">useSAAJ</name> <init pos:line="273" pos:column="29">= <expr><lit:literal type="boolean" pos:line="273" pos:column="31">false</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="274" pos:column="13">MessageContext</name></type> <name pos:line="274" pos:column="28">mc</name> <init pos:line="274" pos:column="31">= <expr><lit:literal type="null" pos:line="274" pos:column="33">null</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="275" pos:column="13">Message</name></type> <name pos:line="275" pos:column="21">m</name> <init pos:line="275" pos:column="23">= <expr><lit:literal type="null" pos:line="275" pos:column="25">null</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="276" pos:column="13">AttachmentPart</name></type> <name pos:line="276" pos:column="28">ap</name> <init pos:line="276" pos:column="31">= <expr><lit:literal type="null" pos:line="276" pos:column="33">null</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="277" pos:column="13">InputStream</name></type> <name pos:line="277" pos:column="25">in</name> <init pos:line="277" pos:column="28">= <expr><lit:literal type="null" pos:line="277" pos:column="30">null</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="278" pos:column="13">ByteArrayOutputStream</name></type> <name pos:line="278" pos:column="35">out</name> <init pos:line="278" pos:column="39">= <expr><lit:literal type="null" pos:line="278" pos:column="41">null</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="279" pos:column="13">XincoCoreUserServer</name></type> <name pos:line="279" pos:column="33">user</name> <init pos:line="279" pos:column="38">= <expr><op:operator pos:line="279" pos:column="40">new</op:operator> <call><name pos:line="279" pos:column="44">XincoCoreUserServer</name><argument_list pos:line="279" pos:column="63">(<argument><expr><call><name><name pos:line="279" pos:column="64">in1</name><op:operator pos:line="279" pos:column="67">.</op:operator><name pos:line="279" pos:column="68">getUsername</name></name><argument_list pos:line="279" pos:column="79">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="279" pos:column="83">in1</name><op:operator pos:line="279" pos:column="86">.</op:operator><name pos:line="279" pos:column="87">getUserpassword</name></name><argument_list pos:line="279" pos:column="102">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="279" pos:column="106">dbm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <comment type="line" pos:line="280" pos:column="13">//load data</comment>
            <expr_stmt><expr><name pos:line="281" pos:column="13">data</name> <op:operator pos:line="281" pos:column="18">=</op:operator> <op:operator pos:line="281" pos:column="20">new</op:operator> <call><name pos:line="281" pos:column="24">XincoCoreDataServer</name><argument_list pos:line="281" pos:column="43">(<argument><expr><call><name><name pos:line="281" pos:column="44">in0</name><op:operator pos:line="281" pos:column="47">.</op:operator><name pos:line="281" pos:column="48">getId</name></name><argument_list pos:line="281" pos:column="53">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="281" pos:column="57">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="282" pos:column="13">ace</name> <op:operator pos:line="282" pos:column="17">=</op:operator> <call><name><name pos:line="282" pos:column="19">XincoCoreACEServer</name><op:operator pos:line="282" pos:column="37">.</op:operator><name pos:line="282" pos:column="38">checkAccess</name></name><argument_list pos:line="282" pos:column="49">(<argument><expr><name pos:line="282" pos:column="50">user</name></expr></argument>, <argument><expr><call><name><name pos:line="282" pos:column="56">data</name><op:operator pos:line="282" pos:column="60">.</op:operator><name pos:line="282" pos:column="61">getXinco_core_acl</name></name><argument_list pos:line="282" pos:column="78">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if pos:line="283" pos:column="13">if <condition pos:line="283" pos:column="16">(<expr><call><name><name pos:line="283" pos:column="17">ace</name><op:operator pos:line="283" pos:column="20">.</op:operator><name pos:line="283" pos:column="21">isRead_permission</name></name><argument_list pos:line="283" pos:column="38">()</argument_list></call></expr>)</condition><then pos:line="283" pos:column="41"> <block pos:line="283" pos:column="42">{
                <comment type="line" pos:line="284" pos:column="17">//determine requested revision if data with only one specific log object is requested</comment>
                <if pos:line="285" pos:column="17">if <condition pos:line="285" pos:column="20">(<expr><op:operator pos:line="285" pos:column="21">(</op:operator><call><name><name pos:line="285" pos:column="22">data</name><op:operator pos:line="285" pos:column="26">.</op:operator><name pos:line="285" pos:column="27">getXinco_core_logs</name></name><argument_list pos:line="285" pos:column="45">()</argument_list></call><op:operator pos:line="285" pos:column="47">.</op:operator><call><name pos:line="285" pos:column="48">size</name><argument_list pos:line="285" pos:column="52">()</argument_list></call> <op:operator pos:line="285" pos:column="55">&gt;</op:operator> <lit:literal type="number" pos:line="285" pos:column="57">1</lit:literal><op:operator pos:line="285" pos:column="58">)</op:operator> <op:operator pos:line="285" pos:column="60">&amp;&amp;</op:operator> <op:operator pos:line="285" pos:column="63">(</op:operator><call><name><name pos:line="285" pos:column="64">in0</name><op:operator pos:line="285" pos:column="67">.</op:operator><name pos:line="285" pos:column="68">getXinco_core_logs</name></name><argument_list pos:line="285" pos:column="86">()</argument_list></call><op:operator pos:line="285" pos:column="88">.</op:operator><call><name pos:line="285" pos:column="89">size</name><argument_list pos:line="285" pos:column="93">()</argument_list></call> <op:operator pos:line="285" pos:column="96">==</op:operator> <lit:literal type="number" pos:line="285" pos:column="99">1</lit:literal><op:operator pos:line="285" pos:column="100">)</op:operator></expr>)</condition><then pos:line="285" pos:column="102"> <block pos:line="285" pos:column="103">{
                    <comment type="line" pos:line="286" pos:column="21">//find id of log</comment>
                    <decl_stmt><decl><type><name pos:line="287" pos:column="21">int</name></type> <name pos:line="287" pos:column="25">LogId</name> <init pos:line="287" pos:column="31">= <expr><lit:literal type="number" pos:line="287" pos:column="33">0</lit:literal></expr></init></decl>;</decl_stmt>
                    <if pos:line="288" pos:column="21">if <condition pos:line="288" pos:column="24">(<expr><op:operator pos:line="288" pos:column="25">(</op:operator><op:operator pos:line="288" pos:column="26">(</op:operator><op:operator pos:line="288" pos:column="27">(</op:operator><name pos:line="288" pos:column="28">XincoCoreLog</name><op:operator pos:line="288" pos:column="40">)</op:operator><call><name><name pos:line="288" pos:column="41">in0</name><op:operator pos:line="288" pos:column="44">.</op:operator><name pos:line="288" pos:column="45">getXinco_core_logs</name></name><argument_list pos:line="288" pos:column="63">()</argument_list></call><op:operator pos:line="288" pos:column="65">.</op:operator><call><name pos:line="288" pos:column="66">elementAt</name><argument_list pos:line="288" pos:column="75">(<argument><expr><lit:literal type="number" pos:line="288" pos:column="76">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="288" pos:column="78">)</op:operator><op:operator pos:line="288" pos:column="79">.</op:operator><call><name pos:line="288" pos:column="80">getOp_code</name><argument_list pos:line="288" pos:column="90">()</argument_list></call> <op:operator pos:line="288" pos:column="93">==</op:operator> <lit:literal type="number" pos:line="288" pos:column="96">1</lit:literal><op:operator pos:line="288" pos:column="97">)</op:operator> <op:operator pos:line="288" pos:column="99">||</op:operator> <op:operator pos:line="288" pos:column="102">(</op:operator><op:operator pos:line="288" pos:column="103">(</op:operator><op:operator pos:line="288" pos:column="104">(</op:operator><name pos:line="288" pos:column="105">XincoCoreLog</name><op:operator pos:line="288" pos:column="117">)</op:operator><call><name><name pos:line="288" pos:column="118">in0</name><op:operator pos:line="288" pos:column="121">.</op:operator><name pos:line="288" pos:column="122">getXinco_core_logs</name></name><argument_list pos:line="288" pos:column="140">()</argument_list></call><op:operator pos:line="288" pos:column="142">.</op:operator><call><name pos:line="288" pos:column="143">elementAt</name><argument_list pos:line="288" pos:column="152">(<argument><expr><lit:literal type="number" pos:line="288" pos:column="153">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="288" pos:column="155">)</op:operator><op:operator pos:line="288" pos:column="156">.</op:operator><call><name pos:line="288" pos:column="157">getOp_code</name><argument_list pos:line="288" pos:column="167">()</argument_list></call> <op:operator pos:line="288" pos:column="170">==</op:operator> <lit:literal type="number" pos:line="288" pos:column="173">5</lit:literal><op:operator pos:line="288" pos:column="174">)</op:operator></expr>)</condition><then pos:line="288" pos:column="176"> <block pos:line="288" pos:column="177">{
                        <expr_stmt><expr><name pos:line="289" pos:column="25">LogId</name> <op:operator pos:line="289" pos:column="31">=</op:operator> <op:operator pos:line="289" pos:column="33">(</op:operator><op:operator pos:line="289" pos:column="34">(</op:operator><name pos:line="289" pos:column="35">XincoCoreLog</name><op:operator pos:line="289" pos:column="47">)</op:operator><call><name><name pos:line="289" pos:column="48">in0</name><op:operator pos:line="289" pos:column="51">.</op:operator><name pos:line="289" pos:column="52">getXinco_core_logs</name></name><argument_list pos:line="289" pos:column="70">()</argument_list></call><op:operator pos:line="289" pos:column="72">.</op:operator><call><name pos:line="289" pos:column="73">elementAt</name><argument_list pos:line="289" pos:column="82">(<argument><expr><lit:literal type="number" pos:line="289" pos:column="83">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="289" pos:column="85">)</op:operator><op:operator pos:line="289" pos:column="86">.</op:operator><call><name pos:line="289" pos:column="87">getId</name><argument_list pos:line="289" pos:column="92">()</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if>
                    <if pos:line="291" pos:column="21">if <condition pos:line="291" pos:column="24">(<expr><name pos:line="291" pos:column="25">LogId</name> <op:operator pos:line="291" pos:column="31">&gt;</op:operator> <lit:literal type="number" pos:line="291" pos:column="33">0</lit:literal></expr>)</condition><then pos:line="291" pos:column="35"> <block pos:line="291" pos:column="36">{
                        <expr_stmt><expr><name pos:line="292" pos:column="25">revision</name> <op:operator pos:line="292" pos:column="34">=</op:operator> <lit:literal type="string" pos:line="292" pos:column="36">"-"</lit:literal> <op:operator pos:line="292" pos:column="40">+</op:operator> <name pos:line="292" pos:column="42">LogId</name></expr>;</expr_stmt>
                    }</block></then></if>
                }</block></then></if>
                
                <comment type="line" pos:line="296" pos:column="17">// decide whether to read from SOAP attachments or byte array</comment>
                <expr_stmt><expr><name pos:line="297" pos:column="17">mc</name> <op:operator pos:line="297" pos:column="20">=</op:operator> <call><name><name pos:line="297" pos:column="22">MessageContext</name><op:operator pos:line="297" pos:column="36">.</op:operator><name pos:line="297" pos:column="37">getCurrentContext</name></name><argument_list pos:line="297" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="298" pos:column="17">m</name> <op:operator pos:line="298" pos:column="19">=</op:operator> <call><name><name pos:line="298" pos:column="21">mc</name><op:operator pos:line="298" pos:column="23">.</op:operator><name pos:line="298" pos:column="24">getRequestMessage</name></name><argument_list pos:line="298" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
                <if pos:line="299" pos:column="17">if <condition pos:line="299" pos:column="20">(<expr><call><name><name pos:line="299" pos:column="21">m</name><op:operator pos:line="299" pos:column="22">.</op:operator><name pos:line="299" pos:column="23">getAttachments</name></name><argument_list pos:line="299" pos:column="37">()</argument_list></call><op:operator pos:line="299" pos:column="39">.</op:operator><call><name pos:line="299" pos:column="40">hasNext</name><argument_list pos:line="299" pos:column="47">()</argument_list></call></expr>)</condition><then pos:line="299" pos:column="50"> <block pos:line="299" pos:column="51">{
                    <expr_stmt><expr><name pos:line="300" pos:column="21">useSAAJ</name> <op:operator pos:line="300" pos:column="29">=</op:operator> <lit:literal type="boolean" pos:line="300" pos:column="31">true</lit:literal></expr>;</expr_stmt>
                }</block></then> <else pos:line="301" pos:column="19">else <block pos:line="301" pos:column="24">{
                    <expr_stmt><expr><name pos:line="302" pos:column="21">useSAAJ</name> <op:operator pos:line="302" pos:column="29">=</op:operator> <lit:literal type="boolean" pos:line="302" pos:column="31">false</lit:literal></expr>;</expr_stmt>
                }</block></else></if>
                <expr_stmt><expr><name pos:line="304" pos:column="17">in</name> <op:operator pos:line="304" pos:column="20">=</op:operator> <op:operator pos:line="304" pos:column="22">new</op:operator> <call><name pos:line="304" pos:column="26">CheckedInputStream</name><argument_list pos:line="304" pos:column="44">(<argument><expr><op:operator pos:line="304" pos:column="45">new</op:operator> <call><name pos:line="304" pos:column="49">FileInputStream</name><argument_list pos:line="304" pos:column="64">(<argument><expr><call><name><name pos:line="304" pos:column="65">XincoCoreDataServer</name><op:operator pos:line="304" pos:column="84">.</op:operator><name pos:line="304" pos:column="85">getXincoCoreDataPath</name></name><argument_list pos:line="304" pos:column="105">(<argument><expr><name><name pos:line="304" pos:column="106">dbm</name><op:operator pos:line="304" pos:column="109">.</op:operator><name pos:line="304" pos:column="110">config</name><op:operator pos:line="304" pos:column="116">.</op:operator><name pos:line="304" pos:column="117">FileRepositoryPath</name></name></expr></argument>, <argument><expr><call><name><name pos:line="304" pos:column="137">data</name><op:operator pos:line="304" pos:column="141">.</op:operator><name pos:line="304" pos:column="142">getId</name></name><argument_list pos:line="304" pos:column="147">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="304" pos:column="151">data</name><op:operator pos:line="304" pos:column="155">.</op:operator><name pos:line="304" pos:column="156">getId</name></name><argument_list pos:line="304" pos:column="161">()</argument_list></call> <op:operator pos:line="304" pos:column="164">+</op:operator> <name pos:line="304" pos:column="166">revision</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="304" pos:column="178">new</op:operator> <call><name pos:line="304" pos:column="182">CRC32</name><argument_list pos:line="304" pos:column="187">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if pos:line="305" pos:column="17">if <condition pos:line="305" pos:column="20">(<expr><name pos:line="305" pos:column="21">useSAAJ</name></expr>)</condition><then pos:line="305" pos:column="29"> <block pos:line="305" pos:column="30">{
                    <comment type="line" pos:line="306" pos:column="21">//attach file to SOAP message</comment>
                    <expr_stmt><expr><name pos:line="307" pos:column="21">m</name> <op:operator pos:line="307" pos:column="23">=</op:operator> <call><name><name pos:line="307" pos:column="25">mc</name><op:operator pos:line="307" pos:column="27">.</op:operator><name pos:line="307" pos:column="28">getResponseMessage</name></name><argument_list pos:line="307" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="308" pos:column="21">ap</name> <op:operator pos:line="308" pos:column="24">=</op:operator> <op:operator pos:line="308" pos:column="26">new</op:operator> <call><name pos:line="308" pos:column="30">AttachmentPart</name><argument_list pos:line="308" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="309" pos:column="21">ap</name><op:operator pos:line="309" pos:column="23">.</op:operator><name pos:line="309" pos:column="24">setContent</name></name><argument_list pos:line="309" pos:column="34">(<argument><expr><name pos:line="309" pos:column="35">in</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="309" pos:column="39">"unknown/unknown"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="310" pos:column="21">m</name><op:operator pos:line="310" pos:column="22">.</op:operator><name pos:line="310" pos:column="23">addAttachmentPart</name></name><argument_list pos:line="310" pos:column="40">(<argument><expr><name pos:line="310" pos:column="41">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then> <else pos:line="311" pos:column="19">else <block pos:line="311" pos:column="24">{
                    <expr_stmt><expr><name pos:line="312" pos:column="21">out</name> <op:operator pos:line="312" pos:column="25">=</op:operator> <op:operator pos:line="312" pos:column="27">new</op:operator> <call><name pos:line="312" pos:column="31">ByteArrayOutputStream</name><argument_list pos:line="312" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
                    <decl_stmt><decl><type><name pos:line="313" pos:column="21">byte</name><index pos:line="313" pos:column="25">[]</index></type> <name pos:line="313" pos:column="28">buf</name> <init pos:line="313" pos:column="32">= <expr><op:operator pos:line="313" pos:column="34">new</op:operator> <name><name pos:line="313" pos:column="38">byte</name><index pos:line="313" pos:column="42">[<expr><lit:literal type="number" pos:line="313" pos:column="43">4096</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="314" pos:column="21">int</name></type> <name pos:line="314" pos:column="25">len</name> <init pos:line="314" pos:column="29">= <expr><lit:literal type="number" pos:line="314" pos:column="31">0</lit:literal></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><name pos:line="315" pos:column="21">total_len</name> <op:operator pos:line="315" pos:column="31">=</op:operator> <lit:literal type="number" pos:line="315" pos:column="33">0</lit:literal></expr>;</expr_stmt>
                    <while pos:line="316" pos:column="21">while <condition pos:line="316" pos:column="27">(<expr><op:operator pos:line="316" pos:column="28">(</op:operator><name pos:line="316" pos:column="29">len</name> <op:operator pos:line="316" pos:column="33">=</op:operator> <call><name><name pos:line="316" pos:column="35">in</name><op:operator pos:line="316" pos:column="37">.</op:operator><name pos:line="316" pos:column="38">read</name></name><argument_list pos:line="316" pos:column="42">(<argument><expr><name pos:line="316" pos:column="43">buf</name></expr></argument>)</argument_list></call><op:operator pos:line="316" pos:column="47">)</op:operator> <op:operator pos:line="316" pos:column="49">&gt;</op:operator> <lit:literal type="number" pos:line="316" pos:column="51">0</lit:literal></expr>)</condition> <block pos:line="316" pos:column="54">{
                        <expr_stmt><expr><call><name><name pos:line="317" pos:column="25">out</name><op:operator pos:line="317" pos:column="28">.</op:operator><name pos:line="317" pos:column="29">write</name></name><argument_list pos:line="317" pos:column="34">(<argument><expr><name pos:line="317" pos:column="35">buf</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="317" pos:column="40">0</lit:literal></expr></argument>, <argument><expr><name pos:line="317" pos:column="43">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><name pos:line="318" pos:column="25">total_len</name> <op:operator pos:line="318" pos:column="35">=</op:operator> <name pos:line="318" pos:column="37">total_len</name> <op:operator pos:line="318" pos:column="47">+</op:operator> <name pos:line="318" pos:column="49">len</name></expr>;</expr_stmt>
                    }</block></while>
                    <expr_stmt><expr><call><name><name pos:line="320" pos:column="21">in</name><op:operator pos:line="320" pos:column="23">.</op:operator><name pos:line="320" pos:column="24">close</name></name><argument_list pos:line="320" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="321" pos:column="21">byte_array</name> <op:operator pos:line="321" pos:column="32">=</op:operator> <call><name><name pos:line="321" pos:column="34">out</name><op:operator pos:line="321" pos:column="37">.</op:operator><name pos:line="321" pos:column="38">toByteArray</name></name><argument_list pos:line="321" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="322" pos:column="21">out</name><op:operator pos:line="322" pos:column="24">.</op:operator><name pos:line="322" pos:column="25">close</name></name><argument_list pos:line="322" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
                }</block></else></if>
                <comment type="line" pos:line="324" pos:column="17">//in.close();</comment>
                <comment type="line" pos:line="325" pos:column="17">//check correctness of data</comment>
                                <comment type="block" pos:line="326" pos:column="33">/*
                                //if ((((XincoAddAttribute)data.getXinco_add_attributes().elementAt(1)).getAttrib_unsignedint() != total_len) || (((XincoAddAttribute)data.getXinco_add_attributes().elementAt(2)).getAttrib_varchar().compareTo("" + in.getChecksum().getValue()) == 0)) {
                                if (((XincoAddAttribute)data.getXinco_add_attributes().elementAt(1)).getAttrib_unsignedint() != total_len) {
                                        in.close();
                                        out.close();
                                        dbm.con.close();
                                        return null;
                                }
                                 */</comment>
                <comment type="line" pos:line="335" pos:column="17">//in.close();</comment>
                <expr_stmt><expr><call><name><name pos:line="336" pos:column="17">dbm</name><op:operator pos:line="336" pos:column="20">.</op:operator><name pos:line="336" pos:column="21">con</name><op:operator pos:line="336" pos:column="24">.</op:operator><name pos:line="336" pos:column="25">close</name></name><argument_list pos:line="336" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
                <return pos:line="337" pos:column="17">return <expr><name pos:line="337" pos:column="24">byte_array</name></expr>;</return>
            }</block></then> <else pos:line="338" pos:column="15">else <block pos:line="338" pos:column="20">{
                <expr_stmt><expr><call><name><name pos:line="339" pos:column="17">dbm</name><op:operator pos:line="339" pos:column="20">.</op:operator><name pos:line="339" pos:column="21">con</name><op:operator pos:line="339" pos:column="24">.</op:operator><name pos:line="339" pos:column="25">close</name></name><argument_list pos:line="339" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
                <return pos:line="340" pos:column="17">return <expr><lit:literal type="null" pos:line="340" pos:column="24">null</lit:literal></expr>;</return>
            }</block></else></if>
        }</block> <catch pos:line="342" pos:column="11">catch <parameter_list pos:line="342" pos:column="17">(<param><decl><type><name pos:line="342" pos:column="18">Exception</name></type> <name pos:line="342" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="342" pos:column="31">{
            <return pos:line="343" pos:column="13">return <expr><lit:literal type="null" pos:line="343" pos:column="20">null</lit:literal></expr>;</return>
        }</block></catch></try>
    }</block></function>
    
    <function><type><specifier pos:line="347" pos:column="5">public</specifier> <name pos:line="347" pos:column="12">int</name></type> <name pos:line="347" pos:column="16">uploadXincoCoreData</name><parameter_list pos:line="347" pos:column="35">(<param><decl><type><name><name pos:line="347" pos:column="36">com</name><op:operator pos:line="347" pos:column="39">.</op:operator><name pos:line="347" pos:column="40">bluecubs</name><op:operator pos:line="347" pos:column="48">.</op:operator><name pos:line="347" pos:column="49">xinco</name><op:operator pos:line="347" pos:column="54">.</op:operator><name pos:line="347" pos:column="55">core</name><op:operator pos:line="347" pos:column="59">.</op:operator><name pos:line="347" pos:column="60">XincoCoreData</name></name></type> <name pos:line="347" pos:column="74">in0</name></decl></param>, <param><decl><type><name><name pos:line="347" pos:column="79">byte</name><index pos:line="347" pos:column="83">[]</index></name></type> <name pos:line="347" pos:column="86">in1</name></decl></param>, <param><decl><type><name><name pos:line="347" pos:column="91">com</name><op:operator pos:line="347" pos:column="94">.</op:operator><name pos:line="347" pos:column="95">bluecubs</name><op:operator pos:line="347" pos:column="103">.</op:operator><name pos:line="347" pos:column="104">xinco</name><op:operator pos:line="347" pos:column="109">.</op:operator><name pos:line="347" pos:column="110">core</name><op:operator pos:line="347" pos:column="114">.</op:operator><name pos:line="347" pos:column="115">XincoCoreUser</name></name></type> <name pos:line="347" pos:column="129">in2</name></decl></param>)</parameter_list> <throws pos:line="347" pos:column="134">throws <argument><expr><name><name pos:line="347" pos:column="141">java</name><op:operator pos:line="347" pos:column="145">.</op:operator><name pos:line="347" pos:column="146">rmi</name><op:operator pos:line="347" pos:column="149">.</op:operator><name pos:line="347" pos:column="150">RemoteException</name></name></expr></argument></throws> <block pos:line="347" pos:column="166">{
        <try pos:line="348" pos:column="9">try <block pos:line="348" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="349" pos:column="13">XincoDBManager</name></type> <name pos:line="349" pos:column="28">dbm</name> <init pos:line="349" pos:column="32">= <expr><op:operator pos:line="349" pos:column="34">new</op:operator> <call><name pos:line="349" pos:column="38">XincoDBManager</name><argument_list pos:line="349" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="350" pos:column="13">XincoCoreDataServer</name></type> <name pos:line="350" pos:column="33">data</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="351" pos:column="13">XincoCoreACE</name></type> <name pos:line="351" pos:column="26">ace</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="352" pos:column="13">int</name></type> <name pos:line="352" pos:column="17">i</name> <init pos:line="352" pos:column="19">= <expr><lit:literal type="number" pos:line="352" pos:column="21">0</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="353" pos:column="13">int</name></type> <name pos:line="353" pos:column="17">len</name> <init pos:line="353" pos:column="21">= <expr><lit:literal type="number" pos:line="353" pos:column="23">0</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="354" pos:column="13">long</name></type> <name pos:line="354" pos:column="18">total_len</name> <init pos:line="354" pos:column="28">= <expr><lit:literal type="number" pos:line="354" pos:column="30">0</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="355" pos:column="13">boolean</name></type> <name pos:line="355" pos:column="21">useSAAJ</name> <init pos:line="355" pos:column="29">= <expr><lit:literal type="boolean" pos:line="355" pos:column="31">false</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="356" pos:column="13">MessageContext</name></type> <name pos:line="356" pos:column="28">mc</name> <init pos:line="356" pos:column="31">= <expr><lit:literal type="null" pos:line="356" pos:column="33">null</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="357" pos:column="13">Message</name></type> <name pos:line="357" pos:column="21">m</name> <init pos:line="357" pos:column="23">= <expr><lit:literal type="null" pos:line="357" pos:column="25">null</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="358" pos:column="13">AttachmentPart</name></type> <name pos:line="358" pos:column="28">ap</name> <init pos:line="358" pos:column="31">= <expr><lit:literal type="null" pos:line="358" pos:column="33">null</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="359" pos:column="13">InputStream</name></type> <name pos:line="359" pos:column="25">in</name> <init pos:line="359" pos:column="28">= <expr><lit:literal type="null" pos:line="359" pos:column="30">null</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="360" pos:column="13">XincoCoreUserServer</name></type> <name pos:line="360" pos:column="33">user</name> <init pos:line="360" pos:column="38">= <expr><op:operator pos:line="360" pos:column="40">new</op:operator> <call><name pos:line="360" pos:column="44">XincoCoreUserServer</name><argument_list pos:line="360" pos:column="63">(<argument><expr><call><name><name pos:line="360" pos:column="64">in2</name><op:operator pos:line="360" pos:column="67">.</op:operator><name pos:line="360" pos:column="68">getUsername</name></name><argument_list pos:line="360" pos:column="79">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="360" pos:column="83">in2</name><op:operator pos:line="360" pos:column="86">.</op:operator><name pos:line="360" pos:column="87">getUserpassword</name></name><argument_list pos:line="360" pos:column="102">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="360" pos:column="106">dbm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <comment type="line" pos:line="361" pos:column="13">//load data</comment>
            <expr_stmt><expr><name pos:line="362" pos:column="13">data</name> <op:operator pos:line="362" pos:column="18">=</op:operator> <op:operator pos:line="362" pos:column="20">new</op:operator> <call><name pos:line="362" pos:column="24">XincoCoreDataServer</name><argument_list pos:line="362" pos:column="43">(<argument><expr><call><name><name pos:line="362" pos:column="44">in0</name><op:operator pos:line="362" pos:column="47">.</op:operator><name pos:line="362" pos:column="48">getId</name></name><argument_list pos:line="362" pos:column="53">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="362" pos:column="57">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="363" pos:column="13">ace</name> <op:operator pos:line="363" pos:column="17">=</op:operator> <call><name><name pos:line="363" pos:column="19">XincoCoreACEServer</name><op:operator pos:line="363" pos:column="37">.</op:operator><name pos:line="363" pos:column="38">checkAccess</name></name><argument_list pos:line="363" pos:column="49">(<argument><expr><name pos:line="363" pos:column="50">user</name></expr></argument>, <argument><expr><call><name><name pos:line="363" pos:column="56">data</name><op:operator pos:line="363" pos:column="60">.</op:operator><name pos:line="363" pos:column="61">getXinco_core_acl</name></name><argument_list pos:line="363" pos:column="78">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if pos:line="364" pos:column="13">if <condition pos:line="364" pos:column="16">(<expr><call><name><name pos:line="364" pos:column="17">ace</name><op:operator pos:line="364" pos:column="20">.</op:operator><name pos:line="364" pos:column="21">isWrite_permission</name></name><argument_list pos:line="364" pos:column="39">()</argument_list></call></expr>)</condition><then pos:line="364" pos:column="42"> <block pos:line="364" pos:column="43">{
                
                <comment type="line" pos:line="366" pos:column="17">// decide whether to read from SOAP attachments or byte array</comment>
                <expr_stmt><expr><name pos:line="367" pos:column="17">mc</name> <op:operator pos:line="367" pos:column="20">=</op:operator> <call><name><name pos:line="367" pos:column="22">MessageContext</name><op:operator pos:line="367" pos:column="36">.</op:operator><name pos:line="367" pos:column="37">getCurrentContext</name></name><argument_list pos:line="367" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="368" pos:column="17">m</name> <op:operator pos:line="368" pos:column="19">=</op:operator> <call><name><name pos:line="368" pos:column="21">mc</name><op:operator pos:line="368" pos:column="23">.</op:operator><name pos:line="368" pos:column="24">getCurrentMessage</name></name><argument_list pos:line="368" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
                <if pos:line="369" pos:column="17">if <condition pos:line="369" pos:column="20">(<expr><call><name><name pos:line="369" pos:column="21">m</name><op:operator pos:line="369" pos:column="22">.</op:operator><name pos:line="369" pos:column="23">getAttachments</name></name><argument_list pos:line="369" pos:column="37">()</argument_list></call><op:operator pos:line="369" pos:column="39">.</op:operator><call><name pos:line="369" pos:column="40">hasNext</name><argument_list pos:line="369" pos:column="47">()</argument_list></call></expr>)</condition><then pos:line="369" pos:column="50"> <block pos:line="369" pos:column="51">{
                    <expr_stmt><expr><name pos:line="370" pos:column="21">useSAAJ</name> <op:operator pos:line="370" pos:column="29">=</op:operator> <lit:literal type="boolean" pos:line="370" pos:column="31">true</lit:literal></expr>;</expr_stmt>
                }</block></then> <else pos:line="371" pos:column="19">else <block pos:line="371" pos:column="24">{
                    <expr_stmt><expr><name pos:line="372" pos:column="21">useSAAJ</name> <op:operator pos:line="372" pos:column="29">=</op:operator> <lit:literal type="boolean" pos:line="372" pos:column="31">false</lit:literal></expr>;</expr_stmt>
                }</block></else></if>
                <if pos:line="374" pos:column="17">if <condition pos:line="374" pos:column="20">(<expr><name pos:line="374" pos:column="21">useSAAJ</name></expr>)</condition><then pos:line="374" pos:column="29"> <block pos:line="374" pos:column="30">{
                    <expr_stmt><expr><name pos:line="375" pos:column="21">ap</name> <op:operator pos:line="375" pos:column="24">=</op:operator> <op:operator pos:line="375" pos:column="26">(</op:operator><name pos:line="375" pos:column="27">AttachmentPart</name><op:operator pos:line="375" pos:column="41">)</op:operator><call><name><name pos:line="375" pos:column="42">m</name><op:operator pos:line="375" pos:column="43">.</op:operator><name pos:line="375" pos:column="44">getAttachments</name></name><argument_list pos:line="375" pos:column="58">()</argument_list></call><op:operator pos:line="375" pos:column="60">.</op:operator><call><name pos:line="375" pos:column="61">next</name><argument_list pos:line="375" pos:column="65">()</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="376" pos:column="21">in</name> <op:operator pos:line="376" pos:column="24">=</op:operator> <op:operator pos:line="376" pos:column="26">(</op:operator><name pos:line="376" pos:column="27">InputStream</name><op:operator pos:line="376" pos:column="38">)</op:operator><call><name><name pos:line="376" pos:column="39">ap</name><op:operator pos:line="376" pos:column="41">.</op:operator><name pos:line="376" pos:column="42">getContent</name></name><argument_list pos:line="376" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
                }</block></then> <else pos:line="377" pos:column="19">else <block pos:line="377" pos:column="24">{
                    <expr_stmt><expr><name pos:line="378" pos:column="21">in</name> <op:operator pos:line="378" pos:column="24">=</op:operator> <op:operator pos:line="378" pos:column="26">new</op:operator> <call><name pos:line="378" pos:column="30">ByteArrayInputStream</name><argument_list pos:line="378" pos:column="50">(<argument><expr><name pos:line="378" pos:column="51">in1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></else></if>
                <decl_stmt><decl><type><name pos:line="380" pos:column="17">CheckedOutputStream</name></type> <name pos:line="380" pos:column="37">out</name> <init pos:line="380" pos:column="41">= <expr><op:operator pos:line="380" pos:column="43">new</op:operator> <call><name pos:line="380" pos:column="47">CheckedOutputStream</name><argument_list pos:line="380" pos:column="66">(<argument><expr><op:operator pos:line="380" pos:column="67">new</op:operator> <call><name pos:line="380" pos:column="71">FileOutputStream</name><argument_list pos:line="380" pos:column="87">(<argument><expr><call><name><name pos:line="380" pos:column="88">XincoCoreDataServer</name><op:operator pos:line="380" pos:column="107">.</op:operator><name pos:line="380" pos:column="108">getXincoCoreDataPath</name></name><argument_list pos:line="380" pos:column="128">(<argument><expr><name><name pos:line="380" pos:column="129">dbm</name><op:operator pos:line="380" pos:column="132">.</op:operator><name pos:line="380" pos:column="133">config</name><op:operator pos:line="380" pos:column="139">.</op:operator><name pos:line="380" pos:column="140">FileRepositoryPath</name></name></expr></argument>, <argument><expr><call><name><name pos:line="380" pos:column="160">data</name><op:operator pos:line="380" pos:column="164">.</op:operator><name pos:line="380" pos:column="165">getId</name></name><argument_list pos:line="380" pos:column="170">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="380" pos:column="174">""</lit:literal> <op:operator pos:line="380" pos:column="177">+</op:operator> <call><name><name pos:line="380" pos:column="179">data</name><op:operator pos:line="380" pos:column="183">.</op:operator><name pos:line="380" pos:column="184">getId</name></name><argument_list pos:line="380" pos:column="189">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="380" pos:column="195">new</op:operator> <call><name pos:line="380" pos:column="199">CRC32</name><argument_list pos:line="380" pos:column="204">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="381" pos:column="17">byte</name><index pos:line="381" pos:column="21">[]</index></type> <name pos:line="381" pos:column="24">buf</name> <init pos:line="381" pos:column="28">= <expr><op:operator pos:line="381" pos:column="30">new</op:operator> <name><name pos:line="381" pos:column="34">byte</name><index pos:line="381" pos:column="38">[<expr><lit:literal type="number" pos:line="381" pos:column="39">4096</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name pos:line="382" pos:column="17">len</name> <op:operator pos:line="382" pos:column="21">=</op:operator> <lit:literal type="number" pos:line="382" pos:column="23">0</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="383" pos:column="17">total_len</name> <op:operator pos:line="383" pos:column="27">=</op:operator> <lit:literal type="number" pos:line="383" pos:column="29">0</lit:literal></expr>;</expr_stmt>
                <while pos:line="384" pos:column="17">while <condition pos:line="384" pos:column="23">(<expr><op:operator pos:line="384" pos:column="24">(</op:operator><name pos:line="384" pos:column="25">len</name> <op:operator pos:line="384" pos:column="29">=</op:operator> <call><name><name pos:line="384" pos:column="31">in</name><op:operator pos:line="384" pos:column="33">.</op:operator><name pos:line="384" pos:column="34">read</name></name><argument_list pos:line="384" pos:column="38">(<argument><expr><name pos:line="384" pos:column="39">buf</name></expr></argument>)</argument_list></call><op:operator pos:line="384" pos:column="43">)</op:operator> <op:operator pos:line="384" pos:column="45">&gt;</op:operator> <lit:literal type="number" pos:line="384" pos:column="47">0</lit:literal></expr>)</condition> <block pos:line="384" pos:column="50">{
                    <expr_stmt><expr><call><name><name pos:line="385" pos:column="21">out</name><op:operator pos:line="385" pos:column="24">.</op:operator><name pos:line="385" pos:column="25">write</name></name><argument_list pos:line="385" pos:column="30">(<argument><expr><name pos:line="385" pos:column="31">buf</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="385" pos:column="36">0</lit:literal></expr></argument>, <argument><expr><name pos:line="385" pos:column="39">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="386" pos:column="21">total_len</name> <op:operator pos:line="386" pos:column="31">=</op:operator> <name pos:line="386" pos:column="33">total_len</name> <op:operator pos:line="386" pos:column="43">+</op:operator> <name pos:line="386" pos:column="45">len</name></expr>;</expr_stmt>
                }</block></while>
                <expr_stmt><expr><call><name><name pos:line="388" pos:column="17">in</name><op:operator pos:line="388" pos:column="19">.</op:operator><name pos:line="388" pos:column="20">close</name></name><argument_list pos:line="388" pos:column="25">()</argument_list></call></expr>;</expr_stmt>
                <comment type="line" pos:line="389" pos:column="17">//check correctness of data</comment>
                                <comment type="block" pos:line="390" pos:column="33">/*
                                //if ((((XincoAddAttribute)data.getXinco_add_attributes().elementAt(1)).getAttrib_unsignedint() != total_len) || (((XincoAddAttribute)data.getXinco_add_attributes().elementAt(2)).getAttrib_varchar().compareTo("" + out.getChecksum().getValue()) == 0)) {
                                if (((XincoAddAttribute)data.getXinco_add_attributes().elementAt(1)).getAttrib_unsignedint() != total_len) {
                                        out.close();
                                        dbm.con.close();
                                        return 0;
                                }
                                 */</comment>
                <expr_stmt><expr><call><name><name pos:line="398" pos:column="17">out</name><op:operator pos:line="398" pos:column="20">.</op:operator><name pos:line="398" pos:column="21">close</name></name><argument_list pos:line="398" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
                
                <comment type="line" pos:line="400" pos:column="17">//dupicate file to preserve current revision</comment>
                <if pos:line="401" pos:column="17">if <condition pos:line="401" pos:column="20">(<expr><op:operator pos:line="401" pos:column="21">(</op:operator><op:operator pos:line="401" pos:column="22">(</op:operator><name pos:line="401" pos:column="23">XincoAddAttribute</name><op:operator pos:line="401" pos:column="40">)</op:operator><call><name><name pos:line="401" pos:column="41">data</name><op:operator pos:line="401" pos:column="45">.</op:operator><name pos:line="401" pos:column="46">getXinco_add_attributes</name></name><argument_list pos:line="401" pos:column="69">()</argument_list></call><op:operator pos:line="401" pos:column="71">.</op:operator><call><name pos:line="401" pos:column="72">elementAt</name><argument_list pos:line="401" pos:column="81">(<argument><expr><lit:literal type="number" pos:line="401" pos:column="82">3</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="401" pos:column="84">)</op:operator><op:operator pos:line="401" pos:column="85">.</op:operator><call><name pos:line="401" pos:column="86">getAttrib_unsignedint</name><argument_list pos:line="401" pos:column="107">()</argument_list></call> <op:operator pos:line="401" pos:column="110">==</op:operator> <lit:literal type="number" pos:line="401" pos:column="113">1</lit:literal></expr>)</condition><then pos:line="401" pos:column="115"> <block pos:line="401" pos:column="116">{
                    <comment type="line" pos:line="402" pos:column="21">//find id of latest log</comment>
                    <decl_stmt><decl><type><name pos:line="403" pos:column="21">int</name></type> <name pos:line="403" pos:column="25">MaxLogId</name> <init pos:line="403" pos:column="34">= <expr><lit:literal type="number" pos:line="403" pos:column="36">0</lit:literal></expr></init></decl>;</decl_stmt>
                    <for pos:line="404" pos:column="21">for (<init><expr><name pos:line="404" pos:column="26">i</name><op:operator pos:line="404" pos:column="27">=</op:operator><lit:literal type="number" pos:line="404" pos:column="28">0</lit:literal></expr>;</init><condition><expr><name pos:line="404" pos:column="30">i</name><op:operator pos:line="404" pos:column="31">&lt;</op:operator><call><name><name pos:line="404" pos:column="32">data</name><op:operator pos:line="404" pos:column="36">.</op:operator><name pos:line="404" pos:column="37">getXinco_core_logs</name></name><argument_list pos:line="404" pos:column="55">()</argument_list></call><op:operator pos:line="404" pos:column="57">.</op:operator><call><name pos:line="404" pos:column="58">size</name><argument_list pos:line="404" pos:column="62">()</argument_list></call></expr>;</condition><incr><expr><name pos:line="404" pos:column="65">i</name><op:operator pos:line="404" pos:column="66">++</op:operator></expr></incr>) <block pos:line="404" pos:column="70">{
                        <if pos:line="405" pos:column="25">if <condition pos:line="405" pos:column="28">(<expr><op:operator pos:line="405" pos:column="29">(</op:operator><op:operator pos:line="405" pos:column="30">(</op:operator><op:operator pos:line="405" pos:column="31">(</op:operator><name pos:line="405" pos:column="32">XincoCoreLog</name><op:operator pos:line="405" pos:column="44">)</op:operator><call><name><name pos:line="405" pos:column="45">data</name><op:operator pos:line="405" pos:column="49">.</op:operator><name pos:line="405" pos:column="50">getXinco_core_logs</name></name><argument_list pos:line="405" pos:column="68">()</argument_list></call><op:operator pos:line="405" pos:column="70">.</op:operator><call><name pos:line="405" pos:column="71">elementAt</name><argument_list pos:line="405" pos:column="80">(<argument><expr><name pos:line="405" pos:column="81">i</name></expr></argument>)</argument_list></call><op:operator pos:line="405" pos:column="83">)</op:operator><op:operator pos:line="405" pos:column="84">.</op:operator><call><name pos:line="405" pos:column="85">getId</name><argument_list pos:line="405" pos:column="90">()</argument_list></call> <op:operator pos:line="405" pos:column="93">&gt;</op:operator> <name pos:line="405" pos:column="95">MaxLogId</name><op:operator pos:line="405" pos:column="103">)</op:operator> <op:operator pos:line="405" pos:column="105">&amp;&amp;</op:operator> <op:operator pos:line="405" pos:column="108">(</op:operator><op:operator pos:line="405" pos:column="109">(</op:operator><op:operator pos:line="405" pos:column="110">(</op:operator><op:operator pos:line="405" pos:column="111">(</op:operator><name pos:line="405" pos:column="112">XincoCoreLog</name><op:operator pos:line="405" pos:column="124">)</op:operator><call><name><name pos:line="405" pos:column="125">data</name><op:operator pos:line="405" pos:column="129">.</op:operator><name pos:line="405" pos:column="130">getXinco_core_logs</name></name><argument_list pos:line="405" pos:column="148">()</argument_list></call><op:operator pos:line="405" pos:column="150">.</op:operator><call><name pos:line="405" pos:column="151">elementAt</name><argument_list pos:line="405" pos:column="160">(<argument><expr><name pos:line="405" pos:column="161">i</name></expr></argument>)</argument_list></call><op:operator pos:line="405" pos:column="163">)</op:operator><op:operator pos:line="405" pos:column="164">.</op:operator><call><name pos:line="405" pos:column="165">getOp_code</name><argument_list pos:line="405" pos:column="175">()</argument_list></call> <op:operator pos:line="405" pos:column="178">==</op:operator> <lit:literal type="number" pos:line="405" pos:column="181">1</lit:literal><op:operator pos:line="405" pos:column="182">)</op:operator> <op:operator pos:line="405" pos:column="184">||</op:operator> <op:operator pos:line="405" pos:column="187">(</op:operator><op:operator pos:line="405" pos:column="188">(</op:operator><op:operator pos:line="405" pos:column="189">(</op:operator><name pos:line="405" pos:column="190">XincoCoreLog</name><op:operator pos:line="405" pos:column="202">)</op:operator><call><name><name pos:line="405" pos:column="203">data</name><op:operator pos:line="405" pos:column="207">.</op:operator><name pos:line="405" pos:column="208">getXinco_core_logs</name></name><argument_list pos:line="405" pos:column="226">()</argument_list></call><op:operator pos:line="405" pos:column="228">.</op:operator><call><name pos:line="405" pos:column="229">elementAt</name><argument_list pos:line="405" pos:column="238">(<argument><expr><name pos:line="405" pos:column="239">i</name></expr></argument>)</argument_list></call><op:operator pos:line="405" pos:column="241">)</op:operator><op:operator pos:line="405" pos:column="242">.</op:operator><call><name pos:line="405" pos:column="243">getOp_code</name><argument_list pos:line="405" pos:column="253">()</argument_list></call> <op:operator pos:line="405" pos:column="256">==</op:operator> <lit:literal type="number" pos:line="405" pos:column="259">5</lit:literal><op:operator pos:line="405" pos:column="260">)</op:operator><op:operator pos:line="405" pos:column="261">)</op:operator></expr>)</condition><then pos:line="405" pos:column="263"> <block pos:line="405" pos:column="264">{
                            <expr_stmt><expr><name pos:line="406" pos:column="29">MaxLogId</name> <op:operator pos:line="406" pos:column="38">=</op:operator> <op:operator pos:line="406" pos:column="40">(</op:operator><op:operator pos:line="406" pos:column="41">(</op:operator><name pos:line="406" pos:column="42">XincoCoreLog</name><op:operator pos:line="406" pos:column="54">)</op:operator><call><name><name pos:line="406" pos:column="55">data</name><op:operator pos:line="406" pos:column="59">.</op:operator><name pos:line="406" pos:column="60">getXinco_core_logs</name></name><argument_list pos:line="406" pos:column="78">()</argument_list></call><op:operator pos:line="406" pos:column="80">.</op:operator><call><name pos:line="406" pos:column="81">elementAt</name><argument_list pos:line="406" pos:column="90">(<argument><expr><name pos:line="406" pos:column="91">i</name></expr></argument>)</argument_list></call><op:operator pos:line="406" pos:column="93">)</op:operator><op:operator pos:line="406" pos:column="94">.</op:operator><call><name pos:line="406" pos:column="95">getId</name><argument_list pos:line="406" pos:column="100">()</argument_list></call></expr>;</expr_stmt>
                        }</block></then></if>
                    }</block></for>
                    <if pos:line="409" pos:column="21">if <condition pos:line="409" pos:column="24">(<expr><name pos:line="409" pos:column="25">MaxLogId</name> <op:operator pos:line="409" pos:column="34">&gt;</op:operator> <lit:literal type="number" pos:line="409" pos:column="36">0</lit:literal></expr>)</condition><then pos:line="409" pos:column="38"> <block pos:line="409" pos:column="39">{
                        <comment type="line" pos:line="410" pos:column="25">//copy file</comment>
                        <decl_stmt><decl><type><name pos:line="411" pos:column="25">FileInputStream</name></type> <name pos:line="411" pos:column="41">fcis</name>  <init pos:line="411" pos:column="47">= <expr><op:operator pos:line="411" pos:column="49">new</op:operator> <call><name pos:line="411" pos:column="53">FileInputStream</name><argument_list pos:line="411" pos:column="68">(<argument><expr><op:operator pos:line="411" pos:column="69">new</op:operator> <call><name pos:line="411" pos:column="73">File</name><argument_list pos:line="411" pos:column="77">(<argument><expr><call><name><name pos:line="411" pos:column="78">XincoCoreDataServer</name><op:operator pos:line="411" pos:column="97">.</op:operator><name pos:line="411" pos:column="98">getXincoCoreDataPath</name></name><argument_list pos:line="411" pos:column="118">(<argument><expr><name><name pos:line="411" pos:column="119">dbm</name><op:operator pos:line="411" pos:column="122">.</op:operator><name pos:line="411" pos:column="123">config</name><op:operator pos:line="411" pos:column="129">.</op:operator><name pos:line="411" pos:column="130">FileRepositoryPath</name></name></expr></argument>, <argument><expr><call><name><name pos:line="411" pos:column="150">data</name><op:operator pos:line="411" pos:column="154">.</op:operator><name pos:line="411" pos:column="155">getId</name></name><argument_list pos:line="411" pos:column="160">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="411" pos:column="164">""</lit:literal> <op:operator pos:line="411" pos:column="167">+</op:operator> <call><name><name pos:line="411" pos:column="169">data</name><op:operator pos:line="411" pos:column="173">.</op:operator><name pos:line="411" pos:column="174">getId</name></name><argument_list pos:line="411" pos:column="179">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                        <decl_stmt><decl><type><name pos:line="412" pos:column="25">FileOutputStream</name></type> <name pos:line="412" pos:column="42">fcos</name> <init pos:line="412" pos:column="47">= <expr><op:operator pos:line="412" pos:column="49">new</op:operator> <call><name pos:line="412" pos:column="53">FileOutputStream</name><argument_list pos:line="412" pos:column="69">(<argument><expr><op:operator pos:line="412" pos:column="70">new</op:operator> <call><name pos:line="412" pos:column="74">File</name><argument_list pos:line="412" pos:column="78">(<argument><expr><call><name><name pos:line="412" pos:column="79">XincoCoreDataServer</name><op:operator pos:line="412" pos:column="98">.</op:operator><name pos:line="412" pos:column="99">getXincoCoreDataPath</name></name><argument_list pos:line="412" pos:column="119">(<argument><expr><name><name pos:line="412" pos:column="120">dbm</name><op:operator pos:line="412" pos:column="123">.</op:operator><name pos:line="412" pos:column="124">config</name><op:operator pos:line="412" pos:column="130">.</op:operator><name pos:line="412" pos:column="131">FileRepositoryPath</name></name></expr></argument>, <argument><expr><call><name><name pos:line="412" pos:column="151">data</name><op:operator pos:line="412" pos:column="155">.</op:operator><name pos:line="412" pos:column="156">getId</name></name><argument_list pos:line="412" pos:column="161">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="412" pos:column="165">data</name><op:operator pos:line="412" pos:column="169">.</op:operator><name pos:line="412" pos:column="170">getId</name></name><argument_list pos:line="412" pos:column="175">()</argument_list></call> <op:operator pos:line="412" pos:column="178">+</op:operator> <lit:literal type="string" pos:line="412" pos:column="180">"-"</lit:literal> <op:operator pos:line="412" pos:column="184">+</op:operator> <name pos:line="412" pos:column="186">MaxLogId</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                        <decl_stmt><decl><type><name pos:line="413" pos:column="25">byte</name><index pos:line="413" pos:column="29">[]</index></type> <name pos:line="413" pos:column="32">fcbuf</name> <init pos:line="413" pos:column="38">= <expr><op:operator pos:line="413" pos:column="40">new</op:operator> <name><name pos:line="413" pos:column="44">byte</name><index pos:line="413" pos:column="48">[<expr><lit:literal type="number" pos:line="413" pos:column="49">4096</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                        <expr_stmt><expr><name pos:line="414" pos:column="25">len</name> <op:operator pos:line="414" pos:column="29">=</op:operator> <lit:literal type="number" pos:line="414" pos:column="31">0</lit:literal></expr>;</expr_stmt>
                        <while pos:line="415" pos:column="25">while<condition pos:line="415" pos:column="30">(<expr><op:operator pos:line="415" pos:column="31">(</op:operator><name pos:line="415" pos:column="32">len</name><op:operator pos:line="415" pos:column="35">=</op:operator><call><name><name pos:line="415" pos:column="36">fcis</name><op:operator pos:line="415" pos:column="40">.</op:operator><name pos:line="415" pos:column="41">read</name></name><argument_list pos:line="415" pos:column="45">(<argument><expr><name pos:line="415" pos:column="46">fcbuf</name></expr></argument>)</argument_list></call><op:operator pos:line="415" pos:column="52">)</op:operator><op:operator pos:line="415" pos:column="53">!=</op:operator><op:operator pos:line="415" pos:column="55">-</op:operator><lit:literal type="number" pos:line="415" pos:column="56">1</lit:literal></expr>)</condition> <block pos:line="415" pos:column="59">{
                            <expr_stmt><expr><call><name><name pos:line="416" pos:column="29">fcos</name><op:operator pos:line="416" pos:column="33">.</op:operator><name pos:line="416" pos:column="34">write</name></name><argument_list pos:line="416" pos:column="39">(<argument><expr><name pos:line="416" pos:column="40">fcbuf</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="416" pos:column="47">0</lit:literal></expr></argument>, <argument><expr><name pos:line="416" pos:column="50">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        }</block></while>
                        <expr_stmt><expr><call><name><name pos:line="418" pos:column="25">fcis</name><op:operator pos:line="418" pos:column="29">.</op:operator><name pos:line="418" pos:column="30">close</name></name><argument_list pos:line="418" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="419" pos:column="25">fcos</name><op:operator pos:line="419" pos:column="29">.</op:operator><name pos:line="419" pos:column="30">close</name></name><argument_list pos:line="419" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if>
                }</block></then></if>
                
                <comment type="line" pos:line="423" pos:column="17">//index data and file content</comment>
                <decl_stmt><decl><type><name pos:line="424" pos:column="17">boolean</name></type> <name pos:line="424" pos:column="25">index_success</name> <init pos:line="424" pos:column="39">= <expr><lit:literal type="boolean" pos:line="424" pos:column="41">false</lit:literal></expr></init></decl>;</decl_stmt>
                <comment type="line" pos:line="425" pos:column="17">//index_success = XincoIndexer.indexXincoCoreData(data, true, dbm);</comment>
                <try pos:line="426" pos:column="17">try <block pos:line="426" pos:column="21">{
                    <decl_stmt><decl><type><name pos:line="427" pos:column="21">XincoIndexThread</name></type> <name pos:line="427" pos:column="38">xit</name> <init pos:line="427" pos:column="42">= <expr><op:operator pos:line="427" pos:column="44">new</op:operator> <call><name pos:line="427" pos:column="48">XincoIndexThread</name><argument_list pos:line="427" pos:column="64">(<argument><expr><name pos:line="427" pos:column="65">data</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="427" pos:column="71">true</lit:literal></expr></argument>, <argument><expr><name pos:line="427" pos:column="77">dbm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name><name pos:line="428" pos:column="21">xit</name><op:operator pos:line="428" pos:column="24">.</op:operator><name pos:line="428" pos:column="25">start</name></name><argument_list pos:line="428" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="429" pos:column="21">index_success</name> <op:operator pos:line="429" pos:column="35">=</op:operator> <lit:literal type="boolean" pos:line="429" pos:column="37">true</lit:literal></expr>;</expr_stmt>
                }</block> <catch pos:line="430" pos:column="19">catch <parameter_list pos:line="430" pos:column="25">(<param><decl><type><name pos:line="430" pos:column="26">Exception</name></type> <name pos:line="430" pos:column="36">xite</name></decl></param>)</parameter_list> <block pos:line="430" pos:column="42">{
                    <expr_stmt><expr><name pos:line="431" pos:column="21">index_success</name> <op:operator pos:line="431" pos:column="35">=</op:operator> <lit:literal type="boolean" pos:line="431" pos:column="37">false</lit:literal></expr>;</expr_stmt>
                }</block></catch></try>
                
                <comment type="line" pos:line="434" pos:column="17">//close connection if indexing thread failed</comment>
                <if pos:line="435" pos:column="17">if <condition pos:line="435" pos:column="20">(<expr><op:operator pos:line="435" pos:column="21">!</op:operator><name pos:line="435" pos:column="22">index_success</name></expr>)</condition><then pos:line="435" pos:column="36"> <block pos:line="435" pos:column="37">{
                    <expr_stmt><expr><call><name><name pos:line="436" pos:column="21">dbm</name><op:operator pos:line="436" pos:column="24">.</op:operator><name pos:line="436" pos:column="25">con</name><op:operator pos:line="436" pos:column="28">.</op:operator><name pos:line="436" pos:column="29">close</name></name><argument_list pos:line="436" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <return pos:line="438" pos:column="17">return <expr><op:operator pos:line="438" pos:column="24">(</op:operator><name pos:line="438" pos:column="25">int</name><op:operator pos:line="438" pos:column="28">)</op:operator><name pos:line="438" pos:column="29">total_len</name></expr>;</return>
            }</block></then> <else pos:line="439" pos:column="15">else <block pos:line="439" pos:column="20">{
                <expr_stmt><expr><call><name><name pos:line="440" pos:column="17">dbm</name><op:operator pos:line="440" pos:column="20">.</op:operator><name pos:line="440" pos:column="21">con</name><op:operator pos:line="440" pos:column="24">.</op:operator><name pos:line="440" pos:column="25">close</name></name><argument_list pos:line="440" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
                <return pos:line="441" pos:column="17">return <expr><lit:literal type="number" pos:line="441" pos:column="24">0</lit:literal></expr>;</return>
            }</block></else></if>
        }</block> <catch pos:line="443" pos:column="11">catch <parameter_list pos:line="443" pos:column="17">(<param><decl><type><name pos:line="443" pos:column="18">Exception</name></type> <name pos:line="443" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="443" pos:column="31">{
            <return pos:line="444" pos:column="13">return <expr><lit:literal type="number" pos:line="444" pos:column="20">0</lit:literal></expr>;</return>
        }</block></catch></try>
    }</block></function>
    
    <function><type><specifier pos:line="448" pos:column="5">public</specifier> <name><name pos:line="448" pos:column="12">java</name><op:operator pos:line="448" pos:column="16">.</op:operator><name pos:line="448" pos:column="17">util</name><op:operator pos:line="448" pos:column="21">.</op:operator><name pos:line="448" pos:column="22">Vector</name></name></type> <name pos:line="448" pos:column="29">findXincoCoreNodes</name><parameter_list pos:line="448" pos:column="47">(<param><decl><type><name><name pos:line="448" pos:column="48">java</name><op:operator pos:line="448" pos:column="52">.</op:operator><name pos:line="448" pos:column="53">lang</name><op:operator pos:line="448" pos:column="57">.</op:operator><name pos:line="448" pos:column="58">String</name></name></type> <name pos:line="448" pos:column="65">in0</name></decl></param>, <param><decl><type><name><name pos:line="448" pos:column="70">com</name><op:operator pos:line="448" pos:column="73">.</op:operator><name pos:line="448" pos:column="74">bluecubs</name><op:operator pos:line="448" pos:column="82">.</op:operator><name pos:line="448" pos:column="83">xinco</name><op:operator pos:line="448" pos:column="88">.</op:operator><name pos:line="448" pos:column="89">core</name><op:operator pos:line="448" pos:column="93">.</op:operator><name pos:line="448" pos:column="94">XincoCoreLanguage</name></name></type> <name pos:line="448" pos:column="112">in1</name></decl></param>, <param><decl><type><name><name pos:line="448" pos:column="117">com</name><op:operator pos:line="448" pos:column="120">.</op:operator><name pos:line="448" pos:column="121">bluecubs</name><op:operator pos:line="448" pos:column="129">.</op:operator><name pos:line="448" pos:column="130">xinco</name><op:operator pos:line="448" pos:column="135">.</op:operator><name pos:line="448" pos:column="136">core</name><op:operator pos:line="448" pos:column="140">.</op:operator><name pos:line="448" pos:column="141">XincoCoreUser</name></name></type> <name pos:line="448" pos:column="155">in2</name></decl></param>)</parameter_list> <throws pos:line="448" pos:column="160">throws <argument><expr><name><name pos:line="448" pos:column="167">java</name><op:operator pos:line="448" pos:column="171">.</op:operator><name pos:line="448" pos:column="172">rmi</name><op:operator pos:line="448" pos:column="175">.</op:operator><name pos:line="448" pos:column="176">RemoteException</name></name></expr></argument></throws> <block pos:line="448" pos:column="192">{
        <comment type="block" pos:line="449" pos:column="9">/*
                try {
                        XincoDBManager dbm = new XincoDBManager();
                        XincoCoreUserServer user = new XincoCoreUserServer(in2.getUsername(), in2.getUserpassword(), dbm);
                        java.util.Vector v = XincoCoreNodeServer.findXincoCoreNodes(in0, in1.getId(), dbm);
                        return v;
                        } catch (Exception e) {
                                return null;
                }
         */</comment>
        <return pos:line="459" pos:column="9">return <expr><lit:literal type="null" pos:line="459" pos:column="16">null</lit:literal></expr>;</return>
    }</block></function>
    
    <function><type><specifier pos:line="462" pos:column="5">public</specifier> <name><name pos:line="462" pos:column="12">java</name><op:operator pos:line="462" pos:column="16">.</op:operator><name pos:line="462" pos:column="17">util</name><op:operator pos:line="462" pos:column="21">.</op:operator><name pos:line="462" pos:column="22">Vector</name></name></type> <name pos:line="462" pos:column="29">findXincoCoreData</name><parameter_list pos:line="462" pos:column="46">(<param><decl><type><name><name pos:line="462" pos:column="47">java</name><op:operator pos:line="462" pos:column="51">.</op:operator><name pos:line="462" pos:column="52">lang</name><op:operator pos:line="462" pos:column="56">.</op:operator><name pos:line="462" pos:column="57">String</name></name></type> <name pos:line="462" pos:column="64">in0</name></decl></param>, <param><decl><type><name><name pos:line="462" pos:column="69">com</name><op:operator pos:line="462" pos:column="72">.</op:operator><name pos:line="462" pos:column="73">bluecubs</name><op:operator pos:line="462" pos:column="81">.</op:operator><name pos:line="462" pos:column="82">xinco</name><op:operator pos:line="462" pos:column="87">.</op:operator><name pos:line="462" pos:column="88">core</name><op:operator pos:line="462" pos:column="92">.</op:operator><name pos:line="462" pos:column="93">XincoCoreLanguage</name></name></type> <name pos:line="462" pos:column="111">in1</name></decl></param>, <param><decl><type><name><name pos:line="462" pos:column="116">com</name><op:operator pos:line="462" pos:column="119">.</op:operator><name pos:line="462" pos:column="120">bluecubs</name><op:operator pos:line="462" pos:column="128">.</op:operator><name pos:line="462" pos:column="129">xinco</name><op:operator pos:line="462" pos:column="134">.</op:operator><name pos:line="462" pos:column="135">core</name><op:operator pos:line="462" pos:column="139">.</op:operator><name pos:line="462" pos:column="140">XincoCoreUser</name></name></type> <name pos:line="462" pos:column="154">in2</name></decl></param>)</parameter_list> <throws pos:line="462" pos:column="159">throws <argument><expr><name><name pos:line="462" pos:column="166">java</name><op:operator pos:line="462" pos:column="170">.</op:operator><name pos:line="462" pos:column="171">rmi</name><op:operator pos:line="462" pos:column="174">.</op:operator><name pos:line="462" pos:column="175">RemoteException</name></name></expr></argument></throws> <block pos:line="462" pos:column="191">{
        <decl_stmt><decl><type><name pos:line="463" pos:column="9">XincoDBManager</name></type> <name pos:line="463" pos:column="24">dbm</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="464" pos:column="9">boolean</name></type> <name pos:line="464" pos:column="17">rp</name> <init pos:line="464" pos:column="20">= <expr><lit:literal type="boolean" pos:line="464" pos:column="22">false</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="465" pos:column="9">java</name><op:operator pos:line="465" pos:column="13">.</op:operator><name pos:line="465" pos:column="14">util</name><op:operator pos:line="465" pos:column="18">.</op:operator><name pos:line="465" pos:column="19">Vector</name></name></type> <name pos:line="465" pos:column="26">v</name> <init pos:line="465" pos:column="28">= <expr><op:operator pos:line="465" pos:column="30">new</op:operator> <call><name><name pos:line="465" pos:column="34">java</name><op:operator pos:line="465" pos:column="38">.</op:operator><name pos:line="465" pos:column="39">util</name><op:operator pos:line="465" pos:column="43">.</op:operator><name pos:line="465" pos:column="44">Vector</name></name><argument_list pos:line="465" pos:column="50">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="466" pos:column="9">java</name><op:operator pos:line="466" pos:column="13">.</op:operator><name pos:line="466" pos:column="14">util</name><op:operator pos:line="466" pos:column="18">.</op:operator><name pos:line="466" pos:column="19">Vector</name></name></type> <name pos:line="466" pos:column="26">v2</name> <init pos:line="466" pos:column="29">= <expr><op:operator pos:line="466" pos:column="31">new</op:operator> <call><name><name pos:line="466" pos:column="35">java</name><op:operator pos:line="466" pos:column="39">.</op:operator><name pos:line="466" pos:column="40">util</name><op:operator pos:line="466" pos:column="44">.</op:operator><name pos:line="466" pos:column="45">Vector</name></name><argument_list pos:line="466" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
        
        <comment type="line" pos:line="468" pos:column="9">//check size of keyword string</comment>
        <if pos:line="469" pos:column="9">if <condition pos:line="469" pos:column="12">(<expr><call><name><name pos:line="469" pos:column="13">in0</name><op:operator pos:line="469" pos:column="16">.</op:operator><name pos:line="469" pos:column="17">length</name></name><argument_list pos:line="469" pos:column="23">()</argument_list></call> <op:operator pos:line="469" pos:column="26">&lt;</op:operator> <lit:literal type="number" pos:line="469" pos:column="28">1</lit:literal></expr>)</condition><then pos:line="469" pos:column="30"> <block pos:line="469" pos:column="31">{
            <return pos:line="470" pos:column="13">return <expr><lit:literal type="null" pos:line="470" pos:column="20">null</lit:literal></expr>;</return>
        }</block></then></if>
        
        <comment type="line" pos:line="473" pos:column="9">//truncate % from start and end of search query</comment>
        <if pos:line="474" pos:column="9">if <condition pos:line="474" pos:column="12">(<expr><call><name><name pos:line="474" pos:column="13">in0</name><op:operator pos:line="474" pos:column="16">.</op:operator><name pos:line="474" pos:column="17">startsWith</name></name><argument_list pos:line="474" pos:column="27">(<argument><expr><lit:literal type="string" pos:line="474" pos:column="28">"%"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="474" pos:column="33">&amp;&amp;</op:operator> <call><name><name pos:line="474" pos:column="36">in0</name><op:operator pos:line="474" pos:column="39">.</op:operator><name pos:line="474" pos:column="40">endsWith</name></name><argument_list pos:line="474" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="474" pos:column="49">"%"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="474" pos:column="54"> <block pos:line="474" pos:column="55">{
            <expr_stmt><expr><name pos:line="475" pos:column="13">in0</name> <op:operator pos:line="475" pos:column="17">=</op:operator> <call><name><name pos:line="475" pos:column="19">in0</name><op:operator pos:line="475" pos:column="22">.</op:operator><name pos:line="475" pos:column="23">substring</name></name><argument_list pos:line="475" pos:column="32">(<argument><expr><lit:literal type="number" pos:line="475" pos:column="33">1</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="475" pos:column="36">in0</name><op:operator pos:line="475" pos:column="39">.</op:operator><name pos:line="475" pos:column="40">length</name></name><argument_list pos:line="475" pos:column="46">()</argument_list></call><op:operator pos:line="475" pos:column="48">-</op:operator><lit:literal type="number" pos:line="475" pos:column="49">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        
        <try pos:line="478" pos:column="9">try <block pos:line="478" pos:column="13">{
            <expr_stmt><expr><name pos:line="479" pos:column="13">dbm</name> <op:operator pos:line="479" pos:column="17">=</op:operator> <op:operator pos:line="479" pos:column="19">new</op:operator> <call><name pos:line="479" pos:column="23">XincoDBManager</name><argument_list pos:line="479" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="480" pos:column="13">XincoCoreUserServer</name></type> <name pos:line="480" pos:column="33">user</name> <init pos:line="480" pos:column="38">= <expr><op:operator pos:line="480" pos:column="40">new</op:operator> <call><name pos:line="480" pos:column="44">XincoCoreUserServer</name><argument_list pos:line="480" pos:column="63">(<argument><expr><call><name><name pos:line="480" pos:column="64">in2</name><op:operator pos:line="480" pos:column="67">.</op:operator><name pos:line="480" pos:column="68">getUsername</name></name><argument_list pos:line="480" pos:column="79">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="480" pos:column="83">in2</name><op:operator pos:line="480" pos:column="86">.</op:operator><name pos:line="480" pos:column="87">getUserpassword</name></name><argument_list pos:line="480" pos:column="102">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="480" pos:column="106">dbm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <comment type="line" pos:line="481" pos:column="13">//search on database</comment>
            <comment type="line" pos:line="482" pos:column="13">//java.util.Vector tv = XincoCoreDataServer.findXincoCoreData(in0, in1.getId(), true, true, dbm);</comment>
            <comment type="line" pos:line="483" pos:column="13">//search on index</comment>
            <decl_stmt><decl><type><name><name pos:line="484" pos:column="13">java</name><op:operator pos:line="484" pos:column="17">.</op:operator><name pos:line="484" pos:column="18">util</name><op:operator pos:line="484" pos:column="22">.</op:operator><name pos:line="484" pos:column="23">Vector</name></name></type> <name pos:line="484" pos:column="30">tv</name> <init pos:line="484" pos:column="33">= <expr><call><name><name pos:line="484" pos:column="35">XincoIndexer</name><op:operator pos:line="484" pos:column="47">.</op:operator><name pos:line="484" pos:column="48">findXincoCoreData</name></name><argument_list pos:line="484" pos:column="65">(<argument><expr><name pos:line="484" pos:column="66">in0</name></expr></argument>, <argument><expr><call><name><name pos:line="484" pos:column="71">in1</name><op:operator pos:line="484" pos:column="74">.</op:operator><name pos:line="484" pos:column="75">getId</name></name><argument_list pos:line="484" pos:column="80">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="484" pos:column="84">dbm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name><name pos:line="485" pos:column="13">java</name><op:operator pos:line="485" pos:column="17">.</op:operator><name pos:line="485" pos:column="18">util</name><op:operator pos:line="485" pos:column="22">.</op:operator><name pos:line="485" pos:column="23">Vector</name></name></type> <name pos:line="485" pos:column="30">tv2</name> <init pos:line="485" pos:column="34">= <expr><op:operator pos:line="485" pos:column="36">new</op:operator> <call><name><name pos:line="485" pos:column="40">java</name><op:operator pos:line="485" pos:column="44">.</op:operator><name pos:line="485" pos:column="45">util</name><op:operator pos:line="485" pos:column="49">.</op:operator><name pos:line="485" pos:column="50">Vector</name></name><argument_list pos:line="485" pos:column="56">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <comment type="line" pos:line="486" pos:column="13">//check immediate permissions</comment>
            <for pos:line="487" pos:column="13">for (<init><decl><type><name pos:line="487" pos:column="18">int</name></type> <name pos:line="487" pos:column="22">i</name><init pos:line="487" pos:column="23">=<expr><lit:literal type="number" pos:line="487" pos:column="24">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="487" pos:column="27">i</name><op:operator pos:line="487" pos:column="28">&lt;</op:operator><call><name><name pos:line="487" pos:column="29">tv</name><op:operator pos:line="487" pos:column="31">.</op:operator><name pos:line="487" pos:column="32">size</name></name><argument_list pos:line="487" pos:column="36">()</argument_list></call></expr>;</condition><incr><expr><name pos:line="487" pos:column="39">i</name><op:operator pos:line="487" pos:column="40">++</op:operator></expr></incr>) <block pos:line="487" pos:column="44">{
                <decl_stmt><decl><type><name pos:line="488" pos:column="17">XincoCoreACE</name></type> <name pos:line="488" pos:column="30">ace</name> <init pos:line="488" pos:column="34">= <expr><call><name><name pos:line="488" pos:column="36">XincoCoreACEServer</name><op:operator pos:line="488" pos:column="54">.</op:operator><name pos:line="488" pos:column="55">checkAccess</name></name><argument_list pos:line="488" pos:column="66">(<argument><expr><name pos:line="488" pos:column="67">user</name></expr></argument>, <argument><expr><op:operator pos:line="488" pos:column="73">(</op:operator><op:operator pos:line="488" pos:column="74">(</op:operator><name pos:line="488" pos:column="75">XincoCoreData</name><op:operator pos:line="488" pos:column="88">)</op:operator><call><name><name pos:line="488" pos:column="89">tv</name><op:operator pos:line="488" pos:column="91">.</op:operator><name pos:line="488" pos:column="92">elementAt</name></name><argument_list pos:line="488" pos:column="101">(<argument><expr><name pos:line="488" pos:column="102">i</name></expr></argument>)</argument_list></call><op:operator pos:line="488" pos:column="104">)</op:operator><op:operator pos:line="488" pos:column="105">.</op:operator><call><name pos:line="488" pos:column="106">getXinco_core_acl</name><argument_list pos:line="488" pos:column="123">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if pos:line="489" pos:column="17">if <condition pos:line="489" pos:column="20">(<expr><call><name><name pos:line="489" pos:column="21">ace</name><op:operator pos:line="489" pos:column="24">.</op:operator><name pos:line="489" pos:column="25">isRead_permission</name></name><argument_list pos:line="489" pos:column="42">()</argument_list></call></expr>)</condition><then pos:line="489" pos:column="45"> <block pos:line="489" pos:column="46">{
                    <expr_stmt><expr><call><name><name pos:line="490" pos:column="21">tv2</name><op:operator pos:line="490" pos:column="24">.</op:operator><name pos:line="490" pos:column="25">add</name></name><argument_list pos:line="490" pos:column="28">(<argument><expr><call><name><name pos:line="490" pos:column="29">tv</name><op:operator pos:line="490" pos:column="31">.</op:operator><name pos:line="490" pos:column="32">elementAt</name></name><argument_list pos:line="490" pos:column="41">(<argument><expr><name pos:line="490" pos:column="42">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></for>
            <comment type="line" pos:line="493" pos:column="13">//check permissions on parents</comment>
            <decl_stmt><decl><type><name><name pos:line="494" pos:column="13">java</name><op:operator pos:line="494" pos:column="17">.</op:operator><name pos:line="494" pos:column="18">util</name><op:operator pos:line="494" pos:column="22">.</op:operator><name pos:line="494" pos:column="23">Vector</name></name></type> <name pos:line="494" pos:column="30">tvp</name></decl>;</decl_stmt>
            <for pos:line="495" pos:column="13">for (<init><decl><type><name pos:line="495" pos:column="18">int</name></type> <name pos:line="495" pos:column="22">i</name><init pos:line="495" pos:column="23">=<expr><lit:literal type="number" pos:line="495" pos:column="24">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="495" pos:column="27">i</name><op:operator pos:line="495" pos:column="28">&lt;</op:operator><call><name><name pos:line="495" pos:column="29">tv2</name><op:operator pos:line="495" pos:column="32">.</op:operator><name pos:line="495" pos:column="33">size</name></name><argument_list pos:line="495" pos:column="37">()</argument_list></call></expr>;</condition><incr><expr><name pos:line="495" pos:column="40">i</name><op:operator pos:line="495" pos:column="41">++</op:operator></expr></incr>) <block pos:line="495" pos:column="45">{
                <expr_stmt><expr><name pos:line="496" pos:column="17">tvp</name> <op:operator pos:line="496" pos:column="21">=</op:operator> <call><name><name pos:line="496" pos:column="23">XincoCoreNodeServer</name><op:operator pos:line="496" pos:column="42">.</op:operator><name pos:line="496" pos:column="43">getXincoCoreNodeParents</name></name><argument_list pos:line="496" pos:column="66">(<argument><expr><op:operator pos:line="496" pos:column="67">(</op:operator><op:operator pos:line="496" pos:column="68">(</op:operator><name pos:line="496" pos:column="69">XincoCoreData</name><op:operator pos:line="496" pos:column="82">)</op:operator><call><name><name pos:line="496" pos:column="83">tv2</name><op:operator pos:line="496" pos:column="86">.</op:operator><name pos:line="496" pos:column="87">elementAt</name></name><argument_list pos:line="496" pos:column="96">(<argument><expr><name pos:line="496" pos:column="97">i</name></expr></argument>)</argument_list></call><op:operator pos:line="496" pos:column="99">)</op:operator><op:operator pos:line="496" pos:column="100">.</op:operator><call><name pos:line="496" pos:column="101">getXinco_core_node_id</name><argument_list pos:line="496" pos:column="122">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="496" pos:column="126">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="497" pos:column="17">rp</name> <op:operator pos:line="497" pos:column="20">=</op:operator> <lit:literal type="boolean" pos:line="497" pos:column="22">true</lit:literal></expr>;</expr_stmt>
                <for pos:line="498" pos:column="17">for (<init><decl><type><name pos:line="498" pos:column="22">int</name></type> <name pos:line="498" pos:column="26">j</name><init pos:line="498" pos:column="27">=<expr><lit:literal type="number" pos:line="498" pos:column="28">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="498" pos:column="31">j</name><op:operator pos:line="498" pos:column="32">&lt;</op:operator><call><name><name pos:line="498" pos:column="33">tvp</name><op:operator pos:line="498" pos:column="36">.</op:operator><name pos:line="498" pos:column="37">size</name></name><argument_list pos:line="498" pos:column="41">()</argument_list></call></expr>;</condition><incr><expr><name pos:line="498" pos:column="44">j</name><op:operator pos:line="498" pos:column="45">++</op:operator></expr></incr>) <block pos:line="498" pos:column="49">{
                    <decl_stmt><decl><type><name pos:line="499" pos:column="21">XincoCoreACE</name></type> <name pos:line="499" pos:column="34">ace</name> <init pos:line="499" pos:column="38">= <expr><call><name><name pos:line="499" pos:column="40">XincoCoreACEServer</name><op:operator pos:line="499" pos:column="58">.</op:operator><name pos:line="499" pos:column="59">checkAccess</name></name><argument_list pos:line="499" pos:column="70">(<argument><expr><name pos:line="499" pos:column="71">user</name></expr></argument>, <argument><expr><op:operator pos:line="499" pos:column="77">(</op:operator><op:operator pos:line="499" pos:column="78">(</op:operator><name pos:line="499" pos:column="79">XincoCoreNode</name><op:operator pos:line="499" pos:column="92">)</op:operator><call><name><name pos:line="499" pos:column="93">tvp</name><op:operator pos:line="499" pos:column="96">.</op:operator><name pos:line="499" pos:column="97">elementAt</name></name><argument_list pos:line="499" pos:column="106">(<argument><expr><name pos:line="499" pos:column="107">j</name></expr></argument>)</argument_list></call><op:operator pos:line="499" pos:column="109">)</op:operator><op:operator pos:line="499" pos:column="110">.</op:operator><call><name pos:line="499" pos:column="111">getXinco_core_acl</name><argument_list pos:line="499" pos:column="128">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <if pos:line="500" pos:column="21">if <condition pos:line="500" pos:column="24">(<expr><op:operator pos:line="500" pos:column="25">!</op:operator><call><name><name pos:line="500" pos:column="26">ace</name><op:operator pos:line="500" pos:column="29">.</op:operator><name pos:line="500" pos:column="30">isRead_permission</name></name><argument_list pos:line="500" pos:column="47">()</argument_list></call></expr>)</condition><then pos:line="500" pos:column="50"> <block pos:line="500" pos:column="51">{
                        <expr_stmt><expr><name pos:line="501" pos:column="25">rp</name> <op:operator pos:line="501" pos:column="28">=</op:operator> <lit:literal type="boolean" pos:line="501" pos:column="30">false</lit:literal></expr>;</expr_stmt>
                        <break pos:line="502" pos:column="25">break;</break>
                    }</block></then></if>
                }</block></for>
                <comment type="line" pos:line="505" pos:column="17">//for complete read permission, add Data + Parent Nodes to result!</comment>
                <if pos:line="506" pos:column="17">if <condition pos:line="506" pos:column="20">(<expr><name pos:line="506" pos:column="21">rp</name></expr>)</condition><then pos:line="506" pos:column="24"> <block pos:line="506" pos:column="25">{
                    <expr_stmt><expr><name pos:line="507" pos:column="21">v2</name> <op:operator pos:line="507" pos:column="24">=</op:operator> <op:operator pos:line="507" pos:column="26">new</op:operator> <call><name><name pos:line="507" pos:column="30">java</name><op:operator pos:line="507" pos:column="34">.</op:operator><name pos:line="507" pos:column="35">util</name><op:operator pos:line="507" pos:column="39">.</op:operator><name pos:line="507" pos:column="40">Vector</name></name><argument_list pos:line="507" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="508" pos:column="21">v2</name><op:operator pos:line="508" pos:column="23">.</op:operator><name pos:line="508" pos:column="24">add</name></name><argument_list pos:line="508" pos:column="27">(<argument><expr><call><name><name pos:line="508" pos:column="28">tv2</name><op:operator pos:line="508" pos:column="31">.</op:operator><name pos:line="508" pos:column="32">elementAt</name></name><argument_list pos:line="508" pos:column="41">(<argument><expr><name pos:line="508" pos:column="42">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <for pos:line="509" pos:column="21">for (<init><decl><type><name pos:line="509" pos:column="26">int</name></type> <name pos:line="509" pos:column="30">j</name><init pos:line="509" pos:column="31">=<expr><call><name><name pos:line="509" pos:column="32">tvp</name><op:operator pos:line="509" pos:column="35">.</op:operator><name pos:line="509" pos:column="36">size</name></name><argument_list pos:line="509" pos:column="40">()</argument_list></call><op:operator pos:line="509" pos:column="42">-</op:operator><lit:literal type="number" pos:line="509" pos:column="43">1</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="509" pos:column="46">j</name><op:operator pos:line="509" pos:column="47">&gt;=</op:operator><lit:literal type="number" pos:line="509" pos:column="49">0</lit:literal></expr>;</condition><incr><expr><name pos:line="509" pos:column="51">j</name><op:operator pos:line="509" pos:column="52">--</op:operator></expr></incr>) <block pos:line="509" pos:column="56">{
                        <expr_stmt><expr><call><name><name pos:line="510" pos:column="25">v2</name><op:operator pos:line="510" pos:column="27">.</op:operator><name pos:line="510" pos:column="28">add</name></name><argument_list pos:line="510" pos:column="31">(<argument><expr><call><name><name pos:line="510" pos:column="32">tvp</name><op:operator pos:line="510" pos:column="35">.</op:operator><name pos:line="510" pos:column="36">elementAt</name></name><argument_list pos:line="510" pos:column="45">(<argument><expr><name pos:line="510" pos:column="46">j</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></for>
                    <expr_stmt><expr><call><name><name pos:line="512" pos:column="21">v</name><op:operator pos:line="512" pos:column="22">.</op:operator><name pos:line="512" pos:column="23">add</name></name><argument_list pos:line="512" pos:column="26">(<argument><expr><name pos:line="512" pos:column="27">v2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></for>
            <expr_stmt><expr><call><name><name pos:line="515" pos:column="13">dbm</name><op:operator pos:line="515" pos:column="16">.</op:operator><name pos:line="515" pos:column="17">con</name><op:operator pos:line="515" pos:column="20">.</op:operator><name pos:line="515" pos:column="21">close</name></name><argument_list pos:line="515" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
        }</block> <catch pos:line="516" pos:column="11">catch <parameter_list pos:line="516" pos:column="17">(<param><decl><type><name pos:line="516" pos:column="18">Exception</name></type> <name pos:line="516" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="516" pos:column="31">{
            <return pos:line="517" pos:column="13">return <expr><lit:literal type="null" pos:line="517" pos:column="20">null</lit:literal></expr>;</return>
        }</block></catch></try>
        <return pos:line="519" pos:column="9">return <expr><name pos:line="519" pos:column="16">v</name></expr>;</return>
    }</block></function>
    
    <function><type><specifier pos:line="522" pos:column="5">public</specifier> <name><name pos:line="522" pos:column="12">com</name><op:operator pos:line="522" pos:column="15">.</op:operator><name pos:line="522" pos:column="16">bluecubs</name><op:operator pos:line="522" pos:column="24">.</op:operator><name pos:line="522" pos:column="25">xinco</name><op:operator pos:line="522" pos:column="30">.</op:operator><name pos:line="522" pos:column="31">core</name><op:operator pos:line="522" pos:column="35">.</op:operator><name pos:line="522" pos:column="36">XincoCoreNode</name></name></type> <name pos:line="522" pos:column="50">setXincoCoreNode</name><parameter_list pos:line="522" pos:column="66">(<param><decl><type><name><name pos:line="522" pos:column="67">com</name><op:operator pos:line="522" pos:column="70">.</op:operator><name pos:line="522" pos:column="71">bluecubs</name><op:operator pos:line="522" pos:column="79">.</op:operator><name pos:line="522" pos:column="80">xinco</name><op:operator pos:line="522" pos:column="85">.</op:operator><name pos:line="522" pos:column="86">core</name><op:operator pos:line="522" pos:column="90">.</op:operator><name pos:line="522" pos:column="91">XincoCoreNode</name></name></type> <name pos:line="522" pos:column="105">in0</name></decl></param>, <param><decl><type><name><name pos:line="522" pos:column="110">com</name><op:operator pos:line="522" pos:column="113">.</op:operator><name pos:line="522" pos:column="114">bluecubs</name><op:operator pos:line="522" pos:column="122">.</op:operator><name pos:line="522" pos:column="123">xinco</name><op:operator pos:line="522" pos:column="128">.</op:operator><name pos:line="522" pos:column="129">core</name><op:operator pos:line="522" pos:column="133">.</op:operator><name pos:line="522" pos:column="134">XincoCoreUser</name></name></type> <name pos:line="522" pos:column="148">in1</name></decl></param>)</parameter_list> <throws pos:line="522" pos:column="153">throws <argument><expr><name><name pos:line="522" pos:column="160">java</name><op:operator pos:line="522" pos:column="164">.</op:operator><name pos:line="522" pos:column="165">rmi</name><op:operator pos:line="522" pos:column="168">.</op:operator><name pos:line="522" pos:column="169">RemoteException</name></name></expr></argument></throws> <block pos:line="522" pos:column="185">{
        <try pos:line="523" pos:column="9">try <block pos:line="523" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="524" pos:column="13">int</name></type> <name pos:line="524" pos:column="17">i</name> <init pos:line="524" pos:column="19">= <expr><lit:literal type="number" pos:line="524" pos:column="21">0</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="525" pos:column="13">boolean</name></type> <name pos:line="525" pos:column="21">insertnewnode</name> <init pos:line="525" pos:column="35">= <expr><lit:literal type="boolean" pos:line="525" pos:column="37">false</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="526" pos:column="13">XincoDBManager</name></type> <name pos:line="526" pos:column="28">dbm</name> <init pos:line="526" pos:column="32">= <expr><op:operator pos:line="526" pos:column="34">new</op:operator> <call><name pos:line="526" pos:column="38">XincoDBManager</name><argument_list pos:line="526" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="527" pos:column="13">XincoCoreNodeServer</name></type> <name pos:line="527" pos:column="33">node</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="528" pos:column="13">XincoCoreNodeServer</name></type> <name pos:line="528" pos:column="33">parent_node</name> <init pos:line="528" pos:column="45">= <expr><op:operator pos:line="528" pos:column="47">new</op:operator> <call><name pos:line="528" pos:column="51">XincoCoreNodeServer</name><argument_list pos:line="528" pos:column="70">(<argument><expr><lit:literal type="number" pos:line="528" pos:column="71">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="528" pos:column="74">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="528" pos:column="77">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="528" pos:column="80">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="528" pos:column="84">1</lit:literal></expr></argument>, <argument><expr><name pos:line="528" pos:column="87">dbm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="529" pos:column="13">XincoCoreACE</name></type> <name pos:line="529" pos:column="26">ace</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="530" pos:column="13">XincoCoreACE</name></type> <name pos:line="530" pos:column="26">parent_ace</name> <init pos:line="530" pos:column="37">= <expr><op:operator pos:line="530" pos:column="39">new</op:operator> <call><name pos:line="530" pos:column="43">XincoCoreACE</name><argument_list pos:line="530" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="531" pos:column="13">parent_ace</name><op:operator pos:line="531" pos:column="23">.</op:operator><name pos:line="531" pos:column="24">setWrite_permission</name></name><argument_list pos:line="531" pos:column="43">(<argument><expr><lit:literal type="boolean" pos:line="531" pos:column="44">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="532" pos:column="13">XincoCoreUserServer</name></type> <name pos:line="532" pos:column="33">user</name> <init pos:line="532" pos:column="38">= <expr><op:operator pos:line="532" pos:column="40">new</op:operator> <call><name pos:line="532" pos:column="44">XincoCoreUserServer</name><argument_list pos:line="532" pos:column="63">(<argument><expr><call><name><name pos:line="532" pos:column="64">in1</name><op:operator pos:line="532" pos:column="67">.</op:operator><name pos:line="532" pos:column="68">getUsername</name></name><argument_list pos:line="532" pos:column="79">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="532" pos:column="83">in1</name><op:operator pos:line="532" pos:column="86">.</op:operator><name pos:line="532" pos:column="87">getUserpassword</name></name><argument_list pos:line="532" pos:column="102">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="532" pos:column="106">dbm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="533" pos:column="13">if <condition pos:line="533" pos:column="16">(<expr><call><name><name pos:line="533" pos:column="17">in0</name><op:operator pos:line="533" pos:column="20">.</op:operator><name pos:line="533" pos:column="21">getId</name></name><argument_list pos:line="533" pos:column="26">()</argument_list></call> <op:operator pos:line="533" pos:column="29">&lt;=</op:operator> <lit:literal type="number" pos:line="533" pos:column="32">0</lit:literal></expr>)</condition><then pos:line="533" pos:column="34"> <block pos:line="533" pos:column="35">{
                <comment type="line" pos:line="534" pos:column="17">//insert new node</comment>
                <expr_stmt><expr><name pos:line="535" pos:column="17">insertnewnode</name> <op:operator pos:line="535" pos:column="31">=</op:operator> <lit:literal type="boolean" pos:line="535" pos:column="33">true</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="536" pos:column="17">parent_node</name> <op:operator pos:line="536" pos:column="29">=</op:operator> <op:operator pos:line="536" pos:column="31">new</op:operator> <call><name pos:line="536" pos:column="35">XincoCoreNodeServer</name><argument_list pos:line="536" pos:column="54">(<argument><expr><call><name><name pos:line="536" pos:column="55">in0</name><op:operator pos:line="536" pos:column="58">.</op:operator><name pos:line="536" pos:column="59">getXinco_core_node_id</name></name><argument_list pos:line="536" pos:column="80">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="536" pos:column="84">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="537" pos:column="17">ace</name> <op:operator pos:line="537" pos:column="21">=</op:operator> <call><name><name pos:line="537" pos:column="23">XincoCoreACEServer</name><op:operator pos:line="537" pos:column="41">.</op:operator><name pos:line="537" pos:column="42">checkAccess</name></name><argument_list pos:line="537" pos:column="53">(<argument><expr><name pos:line="537" pos:column="54">user</name></expr></argument>, <argument><expr><call><name><name pos:line="537" pos:column="60">parent_node</name><op:operator pos:line="537" pos:column="71">.</op:operator><name pos:line="537" pos:column="72">getXinco_core_acl</name></name><argument_list pos:line="537" pos:column="89">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="538" pos:column="17">node</name> <op:operator pos:line="538" pos:column="22">=</op:operator> <op:operator pos:line="538" pos:column="24">new</op:operator> <call><name pos:line="538" pos:column="28">XincoCoreNodeServer</name><argument_list pos:line="538" pos:column="47">(<argument><expr><lit:literal type="number" pos:line="538" pos:column="48">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="538" pos:column="51">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="538" pos:column="54">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="538" pos:column="57">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="538" pos:column="61">1</lit:literal></expr></argument>, <argument><expr><name pos:line="538" pos:column="64">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then> <else pos:line="539" pos:column="15">else <block pos:line="539" pos:column="20">{
                <comment type="line" pos:line="540" pos:column="17">//update existing node</comment>
                <expr_stmt><expr><name pos:line="541" pos:column="17">node</name> <op:operator pos:line="541" pos:column="22">=</op:operator> <op:operator pos:line="541" pos:column="24">new</op:operator> <call><name pos:line="541" pos:column="28">XincoCoreNodeServer</name><argument_list pos:line="541" pos:column="47">(<argument><expr><call><name><name pos:line="541" pos:column="48">in0</name><op:operator pos:line="541" pos:column="51">.</op:operator><name pos:line="541" pos:column="52">getId</name></name><argument_list pos:line="541" pos:column="57">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="541" pos:column="61">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <comment type="line" pos:line="542" pos:column="17">//moving node requires write permission to target node</comment>
                <if pos:line="543" pos:column="17">if <condition pos:line="543" pos:column="20">(<expr><call><name><name pos:line="543" pos:column="21">in0</name><op:operator pos:line="543" pos:column="24">.</op:operator><name pos:line="543" pos:column="25">getXinco_core_node_id</name></name><argument_list pos:line="543" pos:column="46">()</argument_list></call> <op:operator pos:line="543" pos:column="49">!=</op:operator> <call><name><name pos:line="543" pos:column="52">node</name><op:operator pos:line="543" pos:column="56">.</op:operator><name pos:line="543" pos:column="57">getXinco_core_node_id</name></name><argument_list pos:line="543" pos:column="78">()</argument_list></call></expr>)</condition><then pos:line="543" pos:column="81"> <block pos:line="543" pos:column="82">{
                    <expr_stmt><expr><name pos:line="544" pos:column="21">parent_node</name> <op:operator pos:line="544" pos:column="33">=</op:operator> <op:operator pos:line="544" pos:column="35">new</op:operator> <call><name pos:line="544" pos:column="39">XincoCoreNodeServer</name><argument_list pos:line="544" pos:column="58">(<argument><expr><call><name><name pos:line="544" pos:column="59">in0</name><op:operator pos:line="544" pos:column="62">.</op:operator><name pos:line="544" pos:column="63">getXinco_core_node_id</name></name><argument_list pos:line="544" pos:column="84">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="544" pos:column="88">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="545" pos:column="21">parent_node</name><op:operator pos:line="545" pos:column="32">.</op:operator><name pos:line="545" pos:column="33">setChangerID</name></name><argument_list pos:line="545" pos:column="45">(<argument><expr><call><name><name pos:line="545" pos:column="46">in1</name><op:operator pos:line="545" pos:column="49">.</op:operator><name pos:line="545" pos:column="50">getId</name></name><argument_list pos:line="545" pos:column="55">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="546" pos:column="21">parent_ace</name> <op:operator pos:line="546" pos:column="32">=</op:operator> <call><name><name pos:line="546" pos:column="34">XincoCoreACEServer</name><op:operator pos:line="546" pos:column="52">.</op:operator><name pos:line="546" pos:column="53">checkAccess</name></name><argument_list pos:line="546" pos:column="64">(<argument><expr><name pos:line="546" pos:column="65">user</name></expr></argument>, <argument><expr><call><name><name pos:line="546" pos:column="71">parent_node</name><op:operator pos:line="546" pos:column="82">.</op:operator><name pos:line="546" pos:column="83">getXinco_core_acl</name></name><argument_list pos:line="546" pos:column="100">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <expr_stmt><expr><name pos:line="548" pos:column="17">ace</name> <op:operator pos:line="548" pos:column="21">=</op:operator> <call><name><name pos:line="548" pos:column="23">XincoCoreACEServer</name><op:operator pos:line="548" pos:column="41">.</op:operator><name pos:line="548" pos:column="42">checkAccess</name></name><argument_list pos:line="548" pos:column="53">(<argument><expr><name pos:line="548" pos:column="54">user</name></expr></argument>, <argument><expr><call><name><name pos:line="548" pos:column="60">node</name><op:operator pos:line="548" pos:column="64">.</op:operator><name pos:line="548" pos:column="65">getXinco_core_acl</name></name><argument_list pos:line="548" pos:column="82">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
            <if pos:line="550" pos:column="13">if <condition pos:line="550" pos:column="16">(<expr><op:operator pos:line="550" pos:column="17">(</op:operator><call><name><name pos:line="550" pos:column="18">ace</name><op:operator pos:line="550" pos:column="21">.</op:operator><name pos:line="550" pos:column="22">isWrite_permission</name></name><argument_list pos:line="550" pos:column="40">()</argument_list></call><op:operator pos:line="550" pos:column="42">)</op:operator> <op:operator pos:line="550" pos:column="44">&amp;&amp;</op:operator> <op:operator pos:line="550" pos:column="47">(</op:operator><call><name><name pos:line="550" pos:column="48">parent_ace</name><op:operator pos:line="550" pos:column="58">.</op:operator><name pos:line="550" pos:column="59">isWrite_permission</name></name><argument_list pos:line="550" pos:column="77">()</argument_list></call><op:operator pos:line="550" pos:column="79">)</op:operator></expr>)</condition><then pos:line="550" pos:column="81"> <block pos:line="550" pos:column="82">{
                <comment type="line" pos:line="551" pos:column="17">//update information</comment>
                <expr_stmt><expr><call><name><name pos:line="552" pos:column="17">node</name><op:operator pos:line="552" pos:column="21">.</op:operator><name pos:line="552" pos:column="22">setXinco_core_node_id</name></name><argument_list pos:line="552" pos:column="43">(<argument><expr><call><name><name pos:line="552" pos:column="44">in0</name><op:operator pos:line="552" pos:column="47">.</op:operator><name pos:line="552" pos:column="48">getXinco_core_node_id</name></name><argument_list pos:line="552" pos:column="69">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="553" pos:column="17">node</name><op:operator pos:line="553" pos:column="21">.</op:operator><name pos:line="553" pos:column="22">setChangerID</name></name><argument_list pos:line="553" pos:column="34">(<argument><expr><call><name><name pos:line="553" pos:column="35">in1</name><op:operator pos:line="553" pos:column="38">.</op:operator><name pos:line="553" pos:column="39">getId</name></name><argument_list pos:line="553" pos:column="44">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="554" pos:column="17">node</name><op:operator pos:line="554" pos:column="21">.</op:operator><name pos:line="554" pos:column="22">setDesignation</name></name><argument_list pos:line="554" pos:column="36">(<argument><expr><call><name><name pos:line="554" pos:column="37">in0</name><op:operator pos:line="554" pos:column="40">.</op:operator><name pos:line="554" pos:column="41">getDesignation</name></name><argument_list pos:line="554" pos:column="55">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="555" pos:column="17">node</name><op:operator pos:line="555" pos:column="21">.</op:operator><name pos:line="555" pos:column="22">setXinco_core_language</name></name><argument_list pos:line="555" pos:column="44">(<argument><expr><call><name><name pos:line="555" pos:column="45">in0</name><op:operator pos:line="555" pos:column="48">.</op:operator><name pos:line="555" pos:column="49">getXinco_core_language</name></name><argument_list pos:line="555" pos:column="71">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="556" pos:column="17">node</name><op:operator pos:line="556" pos:column="21">.</op:operator><name pos:line="556" pos:column="22">setStatus_number</name></name><argument_list pos:line="556" pos:column="38">(<argument><expr><call><name><name pos:line="556" pos:column="39">in0</name><op:operator pos:line="556" pos:column="42">.</op:operator><name pos:line="556" pos:column="43">getStatus_number</name></name><argument_list pos:line="556" pos:column="59">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="557" pos:column="17">node</name><op:operator pos:line="557" pos:column="21">.</op:operator><name pos:line="557" pos:column="22">write2DB</name></name><argument_list pos:line="557" pos:column="30">(<argument><expr><name pos:line="557" pos:column="31">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <comment type="line" pos:line="558" pos:column="17">//insert default ACL when inserting new node</comment>
                <if pos:line="559" pos:column="17">if <condition pos:line="559" pos:column="20">(<expr><name pos:line="559" pos:column="21">insertnewnode</name></expr>)</condition><then pos:line="559" pos:column="35"> <block pos:line="559" pos:column="36">{
                    <decl_stmt><decl><type><name pos:line="560" pos:column="21">XincoCoreACEServer</name></type> <name pos:line="560" pos:column="40">newace</name></decl>;</decl_stmt>
                    <comment type="line" pos:line="561" pos:column="21">//owner</comment>
                    <expr_stmt><expr><name pos:line="562" pos:column="21">newace</name> <op:operator pos:line="562" pos:column="28">=</op:operator> <op:operator pos:line="562" pos:column="30">new</op:operator> <call><name pos:line="562" pos:column="34">XincoCoreACEServer</name><argument_list pos:line="562" pos:column="52">(<argument><expr><lit:literal type="number" pos:line="562" pos:column="53">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="562" pos:column="56">user</name><op:operator pos:line="562" pos:column="60">.</op:operator><name pos:line="562" pos:column="61">getId</name></name><argument_list pos:line="562" pos:column="66">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="562" pos:column="70">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="562" pos:column="73">node</name><op:operator pos:line="562" pos:column="77">.</op:operator><name pos:line="562" pos:column="78">getId</name></name><argument_list pos:line="562" pos:column="83">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="562" pos:column="87">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="562" pos:column="90">true</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="562" pos:column="96">true</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="562" pos:column="102">true</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="562" pos:column="108">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="563" pos:column="21">newace</name><op:operator pos:line="563" pos:column="27">.</op:operator><name pos:line="563" pos:column="28">write2DB</name></name><argument_list pos:line="563" pos:column="36">(<argument><expr><name pos:line="563" pos:column="37">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                        <comment type="block" pos:line="564" pos:column="41">/*
                                        //admins
                                        newace = new XincoCoreACEServer(0, 0, 1, node.getId(), 0, true, true, true, true);
                                        newace.write2DB(dbm);
                                        //all users
                                        newace = new XincoCoreACEServer(0, 0, 2, node.getId(), 0, true, false, false, false);
                                        newace.write2DB(dbm);
                                         */</comment>
                    <comment type="line" pos:line="572" pos:column="21">//inherit all group ACEs</comment>
                    <for pos:line="573" pos:column="21">for (<init><expr><name pos:line="573" pos:column="26">i</name><op:operator pos:line="573" pos:column="27">=</op:operator><lit:literal type="number" pos:line="573" pos:column="28">0</lit:literal></expr>;</init><condition><expr><name pos:line="573" pos:column="30">i</name><op:operator pos:line="573" pos:column="31">&lt;</op:operator><call><name><name pos:line="573" pos:column="32">parent_node</name><op:operator pos:line="573" pos:column="43">.</op:operator><name pos:line="573" pos:column="44">getXinco_core_acl</name></name><argument_list pos:line="573" pos:column="61">()</argument_list></call><op:operator pos:line="573" pos:column="63">.</op:operator><call><name pos:line="573" pos:column="64">size</name><argument_list pos:line="573" pos:column="68">()</argument_list></call></expr>;</condition><incr><expr><name pos:line="573" pos:column="71">i</name><op:operator pos:line="573" pos:column="72">++</op:operator></expr></incr>) <block pos:line="573" pos:column="76">{
                        <expr_stmt><expr><name pos:line="574" pos:column="25">newace</name> <op:operator pos:line="574" pos:column="32">=</op:operator> <op:operator pos:line="574" pos:column="34">(</op:operator><name pos:line="574" pos:column="35">XincoCoreACEServer</name><op:operator pos:line="574" pos:column="53">)</op:operator><call><name><name pos:line="574" pos:column="54">parent_node</name><op:operator pos:line="574" pos:column="65">.</op:operator><name pos:line="574" pos:column="66">getXinco_core_acl</name></name><argument_list pos:line="574" pos:column="83">()</argument_list></call><op:operator pos:line="574" pos:column="85">.</op:operator><call><name pos:line="574" pos:column="86">elementAt</name><argument_list pos:line="574" pos:column="95">(<argument><expr><name pos:line="574" pos:column="96">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <if pos:line="575" pos:column="25">if <condition pos:line="575" pos:column="28">(<expr><call><name><name pos:line="575" pos:column="29">newace</name><op:operator pos:line="575" pos:column="35">.</op:operator><name pos:line="575" pos:column="36">getXinco_core_group_id</name></name><argument_list pos:line="575" pos:column="58">()</argument_list></call> <op:operator pos:line="575" pos:column="61">&gt;</op:operator> <lit:literal type="number" pos:line="575" pos:column="63">0</lit:literal></expr>)</condition><then><block pos:line="575" pos:column="65">{
                            <expr_stmt><expr><call><name><name pos:line="576" pos:column="29">newace</name><op:operator pos:line="576" pos:column="35">.</op:operator><name pos:line="576" pos:column="36">setId</name></name><argument_list pos:line="576" pos:column="41">(<argument><expr><lit:literal type="number" pos:line="576" pos:column="42">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name><name pos:line="577" pos:column="29">newace</name><op:operator pos:line="577" pos:column="35">.</op:operator><name pos:line="577" pos:column="36">setXinco_core_node_id</name></name><argument_list pos:line="577" pos:column="57">(<argument><expr><call><name><name pos:line="577" pos:column="58">node</name><op:operator pos:line="577" pos:column="62">.</op:operator><name pos:line="577" pos:column="63">getId</name></name><argument_list pos:line="577" pos:column="68">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name><name pos:line="578" pos:column="29">newace</name><op:operator pos:line="578" pos:column="35">.</op:operator><name pos:line="578" pos:column="36">write2DB</name></name><argument_list pos:line="578" pos:column="44">(<argument><expr><name pos:line="578" pos:column="45">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        }</block></then></if>
                    }</block></for>
                    <comment type="line" pos:line="581" pos:column="21">//load new ACL</comment>
                    <expr_stmt><expr><call><name><name pos:line="582" pos:column="21">node</name><op:operator pos:line="582" pos:column="25">.</op:operator><name pos:line="582" pos:column="26">setXinco_core_acl</name></name><argument_list pos:line="582" pos:column="43">(<argument><expr><call><name><name pos:line="582" pos:column="44">XincoCoreACEServer</name><op:operator pos:line="582" pos:column="62">.</op:operator><name pos:line="582" pos:column="63">getXincoCoreACL</name></name><argument_list pos:line="582" pos:column="78">(<argument><expr><call><name><name pos:line="582" pos:column="79">node</name><op:operator pos:line="582" pos:column="83">.</op:operator><name pos:line="582" pos:column="84">getId</name></name><argument_list pos:line="582" pos:column="89">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="582" pos:column="93">"xinco_core_node_id"</lit:literal></expr></argument>, <argument><expr><name pos:line="582" pos:column="115">dbm</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <expr_stmt><expr><call><name><name pos:line="584" pos:column="17">dbm</name><op:operator pos:line="584" pos:column="20">.</op:operator><name pos:line="584" pos:column="21">con</name><op:operator pos:line="584" pos:column="24">.</op:operator><name pos:line="584" pos:column="25">close</name></name><argument_list pos:line="584" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
                <return pos:line="585" pos:column="17">return <expr><op:operator pos:line="585" pos:column="24">(</op:operator><name pos:line="585" pos:column="25">XincoCoreNode</name><op:operator pos:line="585" pos:column="38">)</op:operator><name pos:line="585" pos:column="39">node</name></expr>;</return>
            }</block></then> <else pos:line="586" pos:column="15">else <block pos:line="586" pos:column="20">{
                <expr_stmt><expr><call><name><name pos:line="587" pos:column="17">dbm</name><op:operator pos:line="587" pos:column="20">.</op:operator><name pos:line="587" pos:column="21">con</name><op:operator pos:line="587" pos:column="24">.</op:operator><name pos:line="587" pos:column="25">close</name></name><argument_list pos:line="587" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
                <return pos:line="588" pos:column="17">return <expr><lit:literal type="null" pos:line="588" pos:column="24">null</lit:literal></expr>;</return>
            }</block></else></if>
        }</block> <catch pos:line="590" pos:column="11">catch <parameter_list pos:line="590" pos:column="17">(<param><decl><type><name pos:line="590" pos:column="18">Exception</name></type> <name pos:line="590" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="590" pos:column="31">{
            <return pos:line="591" pos:column="13">return <expr><lit:literal type="null" pos:line="591" pos:column="20">null</lit:literal></expr>;</return>
        }</block></catch></try>
    }</block></function>
    
    <function><type><specifier pos:line="595" pos:column="5">public</specifier> <name><name pos:line="595" pos:column="12">com</name><op:operator pos:line="595" pos:column="15">.</op:operator><name pos:line="595" pos:column="16">bluecubs</name><op:operator pos:line="595" pos:column="24">.</op:operator><name pos:line="595" pos:column="25">xinco</name><op:operator pos:line="595" pos:column="30">.</op:operator><name pos:line="595" pos:column="31">core</name><op:operator pos:line="595" pos:column="35">.</op:operator><name pos:line="595" pos:column="36">XincoCoreData</name></name></type> <name pos:line="595" pos:column="50">setXincoCoreData</name><parameter_list pos:line="595" pos:column="66">(<param><decl><type><name><name pos:line="595" pos:column="67">com</name><op:operator pos:line="595" pos:column="70">.</op:operator><name pos:line="595" pos:column="71">bluecubs</name><op:operator pos:line="595" pos:column="79">.</op:operator><name pos:line="595" pos:column="80">xinco</name><op:operator pos:line="595" pos:column="85">.</op:operator><name pos:line="595" pos:column="86">core</name><op:operator pos:line="595" pos:column="90">.</op:operator><name pos:line="595" pos:column="91">XincoCoreData</name></name></type> <name pos:line="595" pos:column="105">in0</name></decl></param>, <param><decl><type><name><name pos:line="595" pos:column="110">com</name><op:operator pos:line="595" pos:column="113">.</op:operator><name pos:line="595" pos:column="114">bluecubs</name><op:operator pos:line="595" pos:column="122">.</op:operator><name pos:line="595" pos:column="123">xinco</name><op:operator pos:line="595" pos:column="128">.</op:operator><name pos:line="595" pos:column="129">core</name><op:operator pos:line="595" pos:column="133">.</op:operator><name pos:line="595" pos:column="134">XincoCoreUser</name></name></type> <name pos:line="595" pos:column="148">in1</name></decl></param>)</parameter_list> <throws pos:line="595" pos:column="153">throws <argument><expr><name><name pos:line="595" pos:column="160">java</name><op:operator pos:line="595" pos:column="164">.</op:operator><name pos:line="595" pos:column="165">rmi</name><op:operator pos:line="595" pos:column="168">.</op:operator><name pos:line="595" pos:column="169">RemoteException</name></name></expr></argument></throws> <block pos:line="595" pos:column="185">{
        <try pos:line="596" pos:column="9">try <block pos:line="596" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="597" pos:column="13">int</name></type> <name pos:line="597" pos:column="17">i</name> <init pos:line="597" pos:column="19">= <expr><lit:literal type="number" pos:line="597" pos:column="21">0</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="598" pos:column="13">boolean</name></type> <name pos:line="598" pos:column="21">insertnewdata</name> <init pos:line="598" pos:column="35">= <expr><lit:literal type="boolean" pos:line="598" pos:column="37">false</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="599" pos:column="13">XincoDBManager</name></type> <name pos:line="599" pos:column="28">dbm</name> <init pos:line="599" pos:column="32">= <expr><op:operator pos:line="599" pos:column="34">new</op:operator> <call><name pos:line="599" pos:column="38">XincoDBManager</name><argument_list pos:line="599" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="600" pos:column="13">XincoCoreDataServer</name></type> <name pos:line="600" pos:column="33">data</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="601" pos:column="13">XincoCoreNodeServer</name></type> <name pos:line="601" pos:column="33">parent_node</name> <init pos:line="601" pos:column="45">= <expr><op:operator pos:line="601" pos:column="47">new</op:operator> <call><name pos:line="601" pos:column="51">XincoCoreNodeServer</name><argument_list pos:line="601" pos:column="70">(<argument><expr><lit:literal type="number" pos:line="601" pos:column="71">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="601" pos:column="74">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="601" pos:column="77">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="601" pos:column="80">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="601" pos:column="84">1</lit:literal></expr></argument>, <argument><expr><name pos:line="601" pos:column="87">dbm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt><empty_stmt pos:line="601" pos:column="92">;</empty_stmt>
            <decl_stmt><decl><type><name pos:line="602" pos:column="13">XincoCoreACE</name></type> <name pos:line="602" pos:column="26">ace</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="603" pos:column="13">XincoCoreACE</name></type> <name pos:line="603" pos:column="26">parent_ace</name> <init pos:line="603" pos:column="37">= <expr><op:operator pos:line="603" pos:column="39">new</op:operator> <call><name pos:line="603" pos:column="43">XincoCoreACE</name><argument_list pos:line="603" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="604" pos:column="13">parent_ace</name><op:operator pos:line="604" pos:column="23">.</op:operator><name pos:line="604" pos:column="24">setWrite_permission</name></name><argument_list pos:line="604" pos:column="43">(<argument><expr><lit:literal type="boolean" pos:line="604" pos:column="44">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="605" pos:column="13">XincoCoreUserServer</name></type> <name pos:line="605" pos:column="33">user</name> <init pos:line="605" pos:column="38">= <expr><op:operator pos:line="605" pos:column="40">new</op:operator> <call><name pos:line="605" pos:column="44">XincoCoreUserServer</name><argument_list pos:line="605" pos:column="63">(<argument><expr><call><name><name pos:line="605" pos:column="64">in1</name><op:operator pos:line="605" pos:column="67">.</op:operator><name pos:line="605" pos:column="68">getUsername</name></name><argument_list pos:line="605" pos:column="79">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="605" pos:column="83">in1</name><op:operator pos:line="605" pos:column="86">.</op:operator><name pos:line="605" pos:column="87">getUserpassword</name></name><argument_list pos:line="605" pos:column="102">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="605" pos:column="106">dbm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="606" pos:column="13">if <condition pos:line="606" pos:column="16">(<expr><call><name><name pos:line="606" pos:column="17">in0</name><op:operator pos:line="606" pos:column="20">.</op:operator><name pos:line="606" pos:column="21">getId</name></name><argument_list pos:line="606" pos:column="26">()</argument_list></call> <op:operator pos:line="606" pos:column="29">&lt;=</op:operator> <lit:literal type="number" pos:line="606" pos:column="32">0</lit:literal></expr>)</condition><then pos:line="606" pos:column="34"> <block pos:line="606" pos:column="35">{
                <comment type="line" pos:line="607" pos:column="17">//insert new node</comment>
                <expr_stmt><expr><name pos:line="608" pos:column="17">insertnewdata</name> <op:operator pos:line="608" pos:column="31">=</op:operator> <lit:literal type="boolean" pos:line="608" pos:column="33">true</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="609" pos:column="17">parent_node</name> <op:operator pos:line="609" pos:column="29">=</op:operator> <op:operator pos:line="609" pos:column="31">new</op:operator> <call><name pos:line="609" pos:column="35">XincoCoreNodeServer</name><argument_list pos:line="609" pos:column="54">(<argument><expr><call><name><name pos:line="609" pos:column="55">in0</name><op:operator pos:line="609" pos:column="58">.</op:operator><name pos:line="609" pos:column="59">getXinco_core_node_id</name></name><argument_list pos:line="609" pos:column="80">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="609" pos:column="84">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="610" pos:column="17">ace</name> <op:operator pos:line="610" pos:column="21">=</op:operator> <call><name><name pos:line="610" pos:column="23">XincoCoreACEServer</name><op:operator pos:line="610" pos:column="41">.</op:operator><name pos:line="610" pos:column="42">checkAccess</name></name><argument_list pos:line="610" pos:column="53">(<argument><expr><name pos:line="610" pos:column="54">user</name></expr></argument>, <argument><expr><call><name><name pos:line="610" pos:column="60">parent_node</name><op:operator pos:line="610" pos:column="71">.</op:operator><name pos:line="610" pos:column="72">getXinco_core_acl</name></name><argument_list pos:line="610" pos:column="89">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="611" pos:column="17">data</name> <op:operator pos:line="611" pos:column="22">=</op:operator> <op:operator pos:line="611" pos:column="24">new</op:operator> <call><name pos:line="611" pos:column="28">XincoCoreDataServer</name><argument_list pos:line="611" pos:column="47">(<argument><expr><lit:literal type="number" pos:line="611" pos:column="48">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="611" pos:column="51">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="611" pos:column="54">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="611" pos:column="57">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="611" pos:column="60">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="611" pos:column="64">1</lit:literal></expr></argument>, <argument><expr><name pos:line="611" pos:column="67">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then> <else pos:line="612" pos:column="15">else <block pos:line="612" pos:column="20">{
                <comment type="line" pos:line="613" pos:column="17">//update existing data</comment>
                <expr_stmt><expr><name pos:line="614" pos:column="17">data</name> <op:operator pos:line="614" pos:column="22">=</op:operator> <op:operator pos:line="614" pos:column="24">new</op:operator> <call><name pos:line="614" pos:column="28">XincoCoreDataServer</name><argument_list pos:line="614" pos:column="47">(<argument><expr><call><name><name pos:line="614" pos:column="48">in0</name><op:operator pos:line="614" pos:column="51">.</op:operator><name pos:line="614" pos:column="52">getId</name></name><argument_list pos:line="614" pos:column="57">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="614" pos:column="61">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <comment type="line" pos:line="615" pos:column="17">//moving node requires write permission to target node</comment>
                <if pos:line="616" pos:column="17">if <condition pos:line="616" pos:column="20">(<expr><call><name><name pos:line="616" pos:column="21">in0</name><op:operator pos:line="616" pos:column="24">.</op:operator><name pos:line="616" pos:column="25">getXinco_core_node_id</name></name><argument_list pos:line="616" pos:column="46">()</argument_list></call> <op:operator pos:line="616" pos:column="49">!=</op:operator> <call><name><name pos:line="616" pos:column="52">data</name><op:operator pos:line="616" pos:column="56">.</op:operator><name pos:line="616" pos:column="57">getXinco_core_node_id</name></name><argument_list pos:line="616" pos:column="78">()</argument_list></call></expr>)</condition><then pos:line="616" pos:column="81"> <block pos:line="616" pos:column="82">{
                    <expr_stmt><expr><name pos:line="617" pos:column="21">parent_node</name> <op:operator pos:line="617" pos:column="33">=</op:operator> <op:operator pos:line="617" pos:column="35">new</op:operator> <call><name pos:line="617" pos:column="39">XincoCoreNodeServer</name><argument_list pos:line="617" pos:column="58">(<argument><expr><call><name><name pos:line="617" pos:column="59">in0</name><op:operator pos:line="617" pos:column="62">.</op:operator><name pos:line="617" pos:column="63">getXinco_core_node_id</name></name><argument_list pos:line="617" pos:column="84">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="617" pos:column="88">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="618" pos:column="21">parent_node</name><op:operator pos:line="618" pos:column="32">.</op:operator><name pos:line="618" pos:column="33">setChangerID</name></name><argument_list pos:line="618" pos:column="45">(<argument><expr><call><name><name pos:line="618" pos:column="46">in1</name><op:operator pos:line="618" pos:column="49">.</op:operator><name pos:line="618" pos:column="50">getId</name></name><argument_list pos:line="618" pos:column="55">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="619" pos:column="21">parent_ace</name> <op:operator pos:line="619" pos:column="32">=</op:operator> <call><name><name pos:line="619" pos:column="34">XincoCoreACEServer</name><op:operator pos:line="619" pos:column="52">.</op:operator><name pos:line="619" pos:column="53">checkAccess</name></name><argument_list pos:line="619" pos:column="64">(<argument><expr><name pos:line="619" pos:column="65">user</name></expr></argument>, <argument><expr><call><name><name pos:line="619" pos:column="71">parent_node</name><op:operator pos:line="619" pos:column="82">.</op:operator><name pos:line="619" pos:column="83">getXinco_core_acl</name></name><argument_list pos:line="619" pos:column="100">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <expr_stmt><expr><name pos:line="621" pos:column="17">ace</name> <op:operator pos:line="621" pos:column="21">=</op:operator> <call><name><name pos:line="621" pos:column="23">XincoCoreACEServer</name><op:operator pos:line="621" pos:column="41">.</op:operator><name pos:line="621" pos:column="42">checkAccess</name></name><argument_list pos:line="621" pos:column="53">(<argument><expr><name pos:line="621" pos:column="54">user</name></expr></argument>, <argument><expr><call><name><name pos:line="621" pos:column="60">data</name><op:operator pos:line="621" pos:column="64">.</op:operator><name pos:line="621" pos:column="65">getXinco_core_acl</name></name><argument_list pos:line="621" pos:column="82">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
            <if pos:line="623" pos:column="13">if <condition pos:line="623" pos:column="16">(<expr><op:operator pos:line="623" pos:column="17">(</op:operator><call><name><name pos:line="623" pos:column="18">ace</name><op:operator pos:line="623" pos:column="21">.</op:operator><name pos:line="623" pos:column="22">isWrite_permission</name></name><argument_list pos:line="623" pos:column="40">()</argument_list></call><op:operator pos:line="623" pos:column="42">)</op:operator> <op:operator pos:line="623" pos:column="44">&amp;&amp;</op:operator> <op:operator pos:line="623" pos:column="47">(</op:operator><call><name><name pos:line="623" pos:column="48">parent_ace</name><op:operator pos:line="623" pos:column="58">.</op:operator><name pos:line="623" pos:column="59">isWrite_permission</name></name><argument_list pos:line="623" pos:column="77">()</argument_list></call><op:operator pos:line="623" pos:column="79">)</op:operator></expr>)</condition><then pos:line="623" pos:column="81"> <block pos:line="623" pos:column="82">{
                <comment type="line" pos:line="624" pos:column="17">//update information</comment>
                <expr_stmt><expr><call><name><name pos:line="625" pos:column="17">data</name><op:operator pos:line="625" pos:column="21">.</op:operator><name pos:line="625" pos:column="22">setXinco_core_node_id</name></name><argument_list pos:line="625" pos:column="43">(<argument><expr><call><name><name pos:line="625" pos:column="44">in0</name><op:operator pos:line="625" pos:column="47">.</op:operator><name pos:line="625" pos:column="48">getXinco_core_node_id</name></name><argument_list pos:line="625" pos:column="69">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="626" pos:column="17">data</name><op:operator pos:line="626" pos:column="21">.</op:operator><name pos:line="626" pos:column="22">setChangerID</name></name><argument_list pos:line="626" pos:column="34">(<argument><expr><call><name><name pos:line="626" pos:column="35">in1</name><op:operator pos:line="626" pos:column="38">.</op:operator><name pos:line="626" pos:column="39">getId</name></name><argument_list pos:line="626" pos:column="44">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="627" pos:column="17">data</name><op:operator pos:line="627" pos:column="21">.</op:operator><name pos:line="627" pos:column="22">setDesignation</name></name><argument_list pos:line="627" pos:column="36">(<argument><expr><call><name><name pos:line="627" pos:column="37">in0</name><op:operator pos:line="627" pos:column="40">.</op:operator><name pos:line="627" pos:column="41">getDesignation</name></name><argument_list pos:line="627" pos:column="55">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="628" pos:column="17">data</name><op:operator pos:line="628" pos:column="21">.</op:operator><name pos:line="628" pos:column="22">setXinco_core_language</name></name><argument_list pos:line="628" pos:column="44">(<argument><expr><call><name><name pos:line="628" pos:column="45">in0</name><op:operator pos:line="628" pos:column="48">.</op:operator><name pos:line="628" pos:column="49">getXinco_core_language</name></name><argument_list pos:line="628" pos:column="71">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="629" pos:column="17">data</name><op:operator pos:line="629" pos:column="21">.</op:operator><name pos:line="629" pos:column="22">setXinco_core_data_type</name></name><argument_list pos:line="629" pos:column="45">(<argument><expr><call><name><name pos:line="629" pos:column="46">in0</name><op:operator pos:line="629" pos:column="49">.</op:operator><name pos:line="629" pos:column="50">getXinco_core_data_type</name></name><argument_list pos:line="629" pos:column="73">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="630" pos:column="17">data</name><op:operator pos:line="630" pos:column="21">.</op:operator><name pos:line="630" pos:column="22">setXinco_add_attributes</name></name><argument_list pos:line="630" pos:column="45">(<argument><expr><call><name><name pos:line="630" pos:column="46">in0</name><op:operator pos:line="630" pos:column="49">.</op:operator><name pos:line="630" pos:column="50">getXinco_add_attributes</name></name><argument_list pos:line="630" pos:column="73">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="631" pos:column="17">data</name><op:operator pos:line="631" pos:column="21">.</op:operator><name pos:line="631" pos:column="22">setStatus_number</name></name><argument_list pos:line="631" pos:column="38">(<argument><expr><call><name><name pos:line="631" pos:column="39">in0</name><op:operator pos:line="631" pos:column="42">.</op:operator><name pos:line="631" pos:column="43">getStatus_number</name></name><argument_list pos:line="631" pos:column="59">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="632" pos:column="17">data</name><op:operator pos:line="632" pos:column="21">.</op:operator><name pos:line="632" pos:column="22">setUser</name></name><argument_list pos:line="632" pos:column="29">(<argument><expr><name pos:line="632" pos:column="30">user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="633" pos:column="17">data</name><op:operator pos:line="633" pos:column="21">.</op:operator><name pos:line="633" pos:column="22">write2DB</name></name><argument_list pos:line="633" pos:column="30">(<argument><expr><name pos:line="633" pos:column="31">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                
                <comment type="line" pos:line="635" pos:column="17">//index data (not on checkout, only when status = open = 1)</comment>
                <if pos:line="636" pos:column="17">if <condition pos:line="636" pos:column="20">(<expr><call><name><name pos:line="636" pos:column="21">data</name><op:operator pos:line="636" pos:column="25">.</op:operator><name pos:line="636" pos:column="26">getStatus_number</name></name><argument_list pos:line="636" pos:column="42">()</argument_list></call> <op:operator pos:line="636" pos:column="45">==</op:operator> <lit:literal type="number" pos:line="636" pos:column="48">1</lit:literal></expr>)</condition><then pos:line="636" pos:column="50"> <block pos:line="636" pos:column="51">{
                    <decl_stmt><decl><type><name pos:line="637" pos:column="21">boolean</name></type> <name pos:line="637" pos:column="29">index_success</name> <init pos:line="637" pos:column="43">= <expr><call><name><name pos:line="637" pos:column="45">XincoIndexer</name><op:operator pos:line="637" pos:column="57">.</op:operator><name pos:line="637" pos:column="58">indexXincoCoreData</name></name><argument_list pos:line="637" pos:column="76">(<argument><expr><name pos:line="637" pos:column="77">data</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="637" pos:column="83">false</lit:literal></expr></argument>, <argument><expr><name pos:line="637" pos:column="90">dbm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                }</block></then></if>
                
                <comment type="line" pos:line="640" pos:column="17">//insert default ACL when inserting new node</comment>
                <if pos:line="641" pos:column="17">if <condition pos:line="641" pos:column="20">(<expr><name pos:line="641" pos:column="21">insertnewdata</name></expr>)</condition><then pos:line="641" pos:column="35"> <block pos:line="641" pos:column="36">{
                    <decl_stmt><decl><type><name pos:line="642" pos:column="21">XincoCoreACEServer</name></type> <name pos:line="642" pos:column="40">newace</name></decl>;</decl_stmt>
                    <comment type="line" pos:line="643" pos:column="21">//owner</comment>
                    <expr_stmt><expr><name pos:line="644" pos:column="21">newace</name> <op:operator pos:line="644" pos:column="28">=</op:operator> <op:operator pos:line="644" pos:column="30">new</op:operator> <call><name pos:line="644" pos:column="34">XincoCoreACEServer</name><argument_list pos:line="644" pos:column="52">(<argument><expr><lit:literal type="number" pos:line="644" pos:column="53">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="644" pos:column="56">user</name><op:operator pos:line="644" pos:column="60">.</op:operator><name pos:line="644" pos:column="61">getId</name></name><argument_list pos:line="644" pos:column="66">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="644" pos:column="70">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="644" pos:column="73">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="644" pos:column="76">data</name><op:operator pos:line="644" pos:column="80">.</op:operator><name pos:line="644" pos:column="81">getId</name></name><argument_list pos:line="644" pos:column="86">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="644" pos:column="90">true</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="644" pos:column="96">true</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="644" pos:column="102">true</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="644" pos:column="108">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="645" pos:column="21">newace</name><op:operator pos:line="645" pos:column="27">.</op:operator><name pos:line="645" pos:column="28">setUserId</name></name><argument_list pos:line="645" pos:column="37">(<argument><expr><call><name><name pos:line="645" pos:column="38">user</name><op:operator pos:line="645" pos:column="42">.</op:operator><name pos:line="645" pos:column="43">getId</name></name><argument_list pos:line="645" pos:column="48">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="646" pos:column="21">newace</name><op:operator pos:line="646" pos:column="27">.</op:operator><name pos:line="646" pos:column="28">write2DB</name></name><argument_list pos:line="646" pos:column="36">(<argument><expr><name pos:line="646" pos:column="37">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                        <comment type="block" pos:line="647" pos:column="41">/*
                                        //admins
                                        newace = new XincoCoreACEServer(0, 0, 1, 0, data.getId(), true, true, true, true);
                                        newace.write2DB(dbm);
                                        //all users
                                        newace = new XincoCoreACEServer(0, 0, 2, 0, data.getId(), true, true, true, true);
                                        newace.write2DB(dbm);
                                         */</comment>
                    <comment type="line" pos:line="655" pos:column="21">//inherit all group ACEs</comment>
                    <for pos:line="656" pos:column="21">for (<init><expr><name pos:line="656" pos:column="26">i</name><op:operator pos:line="656" pos:column="27">=</op:operator><lit:literal type="number" pos:line="656" pos:column="28">0</lit:literal></expr>;</init><condition><expr><name pos:line="656" pos:column="30">i</name><op:operator pos:line="656" pos:column="31">&lt;</op:operator><call><name><name pos:line="656" pos:column="32">parent_node</name><op:operator pos:line="656" pos:column="43">.</op:operator><name pos:line="656" pos:column="44">getXinco_core_acl</name></name><argument_list pos:line="656" pos:column="61">()</argument_list></call><op:operator pos:line="656" pos:column="63">.</op:operator><call><name pos:line="656" pos:column="64">size</name><argument_list pos:line="656" pos:column="68">()</argument_list></call></expr>;</condition><incr><expr><name pos:line="656" pos:column="71">i</name><op:operator pos:line="656" pos:column="72">++</op:operator></expr></incr>) <block pos:line="656" pos:column="76">{
                        <expr_stmt><expr><name pos:line="657" pos:column="25">newace</name> <op:operator pos:line="657" pos:column="32">=</op:operator> <op:operator pos:line="657" pos:column="34">(</op:operator><name pos:line="657" pos:column="35">XincoCoreACEServer</name><op:operator pos:line="657" pos:column="53">)</op:operator><call><name><name pos:line="657" pos:column="54">parent_node</name><op:operator pos:line="657" pos:column="65">.</op:operator><name pos:line="657" pos:column="66">getXinco_core_acl</name></name><argument_list pos:line="657" pos:column="83">()</argument_list></call><op:operator pos:line="657" pos:column="85">.</op:operator><call><name pos:line="657" pos:column="86">elementAt</name><argument_list pos:line="657" pos:column="95">(<argument><expr><name pos:line="657" pos:column="96">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <if pos:line="658" pos:column="25">if <condition pos:line="658" pos:column="28">(<expr><call><name><name pos:line="658" pos:column="29">newace</name><op:operator pos:line="658" pos:column="35">.</op:operator><name pos:line="658" pos:column="36">getXinco_core_group_id</name></name><argument_list pos:line="658" pos:column="58">()</argument_list></call> <op:operator pos:line="658" pos:column="61">&gt;</op:operator> <lit:literal type="number" pos:line="658" pos:column="63">0</lit:literal></expr>)</condition><then><block pos:line="658" pos:column="65">{
                            <expr_stmt><expr><call><name><name pos:line="659" pos:column="29">newace</name><op:operator pos:line="659" pos:column="35">.</op:operator><name pos:line="659" pos:column="36">setId</name></name><argument_list pos:line="659" pos:column="41">(<argument><expr><lit:literal type="number" pos:line="659" pos:column="42">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name><name pos:line="660" pos:column="29">newace</name><op:operator pos:line="660" pos:column="35">.</op:operator><name pos:line="660" pos:column="36">setXinco_core_node_id</name></name><argument_list pos:line="660" pos:column="57">(<argument><expr><lit:literal type="number" pos:line="660" pos:column="58">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name><name pos:line="661" pos:column="29">newace</name><op:operator pos:line="661" pos:column="35">.</op:operator><name pos:line="661" pos:column="36">setXinco_core_data_id</name></name><argument_list pos:line="661" pos:column="57">(<argument><expr><call><name><name pos:line="661" pos:column="58">data</name><op:operator pos:line="661" pos:column="62">.</op:operator><name pos:line="661" pos:column="63">getId</name></name><argument_list pos:line="661" pos:column="68">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name><name pos:line="662" pos:column="29">newace</name><op:operator pos:line="662" pos:column="35">.</op:operator><name pos:line="662" pos:column="36">write2DB</name></name><argument_list pos:line="662" pos:column="44">(<argument><expr><name pos:line="662" pos:column="45">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        }</block></then></if>
                    }</block></for>
                    <comment type="line" pos:line="665" pos:column="21">//load new ACL</comment>
                    <expr_stmt><expr><call><name><name pos:line="666" pos:column="21">data</name><op:operator pos:line="666" pos:column="25">.</op:operator><name pos:line="666" pos:column="26">setXinco_core_acl</name></name><argument_list pos:line="666" pos:column="43">(<argument><expr><call><name><name pos:line="666" pos:column="44">XincoCoreACEServer</name><op:operator pos:line="666" pos:column="62">.</op:operator><name pos:line="666" pos:column="63">getXincoCoreACL</name></name><argument_list pos:line="666" pos:column="78">(<argument><expr><call><name><name pos:line="666" pos:column="79">data</name><op:operator pos:line="666" pos:column="83">.</op:operator><name pos:line="666" pos:column="84">getId</name></name><argument_list pos:line="666" pos:column="89">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="666" pos:column="93">"xinco_core_data_id"</lit:literal></expr></argument>, <argument><expr><name pos:line="666" pos:column="115">dbm</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <expr_stmt><expr><call><name><name pos:line="668" pos:column="17">dbm</name><op:operator pos:line="668" pos:column="20">.</op:operator><name pos:line="668" pos:column="21">con</name><op:operator pos:line="668" pos:column="24">.</op:operator><name pos:line="668" pos:column="25">close</name></name><argument_list pos:line="668" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
                <return pos:line="669" pos:column="17">return <expr><op:operator pos:line="669" pos:column="24">(</op:operator><name pos:line="669" pos:column="25">XincoCoreData</name><op:operator pos:line="669" pos:column="38">)</op:operator><name pos:line="669" pos:column="39">data</name></expr>;</return>
            }</block></then> <else pos:line="670" pos:column="15">else <block pos:line="670" pos:column="20">{
                <expr_stmt><expr><call><name><name pos:line="671" pos:column="17">dbm</name><op:operator pos:line="671" pos:column="20">.</op:operator><name pos:line="671" pos:column="21">con</name><op:operator pos:line="671" pos:column="24">.</op:operator><name pos:line="671" pos:column="25">close</name></name><argument_list pos:line="671" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
                <return pos:line="672" pos:column="17">return <expr><lit:literal type="null" pos:line="672" pos:column="24">null</lit:literal></expr>;</return>
            }</block></else></if>
        }</block> <catch pos:line="674" pos:column="11">catch <parameter_list pos:line="674" pos:column="17">(<param><decl><type><name pos:line="674" pos:column="18">Exception</name></type> <name pos:line="674" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="674" pos:column="31">{
            <return pos:line="675" pos:column="13">return <expr><lit:literal type="null" pos:line="675" pos:column="20">null</lit:literal></expr>;</return>
        }</block></catch></try>
    }</block></function>
    
    <function><type><specifier pos:line="679" pos:column="5">public</specifier> <name><name pos:line="679" pos:column="12">com</name><op:operator pos:line="679" pos:column="15">.</op:operator><name pos:line="679" pos:column="16">bluecubs</name><op:operator pos:line="679" pos:column="24">.</op:operator><name pos:line="679" pos:column="25">xinco</name><op:operator pos:line="679" pos:column="30">.</op:operator><name pos:line="679" pos:column="31">core</name><op:operator pos:line="679" pos:column="35">.</op:operator><name pos:line="679" pos:column="36">XincoCoreACE</name></name></type> <name pos:line="679" pos:column="49">setXincoCoreACE</name><parameter_list pos:line="679" pos:column="64">(<param><decl><type><name><name pos:line="679" pos:column="65">com</name><op:operator pos:line="679" pos:column="68">.</op:operator><name pos:line="679" pos:column="69">bluecubs</name><op:operator pos:line="679" pos:column="77">.</op:operator><name pos:line="679" pos:column="78">xinco</name><op:operator pos:line="679" pos:column="83">.</op:operator><name pos:line="679" pos:column="84">core</name><op:operator pos:line="679" pos:column="88">.</op:operator><name pos:line="679" pos:column="89">XincoCoreACE</name></name></type> <name pos:line="679" pos:column="102">in0</name></decl></param>, <param><decl><type><name><name pos:line="679" pos:column="107">com</name><op:operator pos:line="679" pos:column="110">.</op:operator><name pos:line="679" pos:column="111">bluecubs</name><op:operator pos:line="679" pos:column="119">.</op:operator><name pos:line="679" pos:column="120">xinco</name><op:operator pos:line="679" pos:column="125">.</op:operator><name pos:line="679" pos:column="126">core</name><op:operator pos:line="679" pos:column="130">.</op:operator><name pos:line="679" pos:column="131">XincoCoreUser</name></name></type> <name pos:line="679" pos:column="145">in1</name></decl></param>)</parameter_list> <throws pos:line="679" pos:column="150">throws <argument><expr><name><name pos:line="679" pos:column="157">java</name><op:operator pos:line="679" pos:column="161">.</op:operator><name pos:line="679" pos:column="162">rmi</name><op:operator pos:line="679" pos:column="165">.</op:operator><name pos:line="679" pos:column="166">RemoteException</name></name></expr></argument></throws> <block pos:line="679" pos:column="182">{
        <try pos:line="680" pos:column="9">try <block pos:line="680" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="681" pos:column="13">XincoDBManager</name></type> <name pos:line="681" pos:column="28">dbm</name> <init pos:line="681" pos:column="32">= <expr><op:operator pos:line="681" pos:column="34">new</op:operator> <call><name pos:line="681" pos:column="38">XincoDBManager</name><argument_list pos:line="681" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="682" pos:column="13">XincoCoreNodeServer</name></type> <name pos:line="682" pos:column="33">node</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="683" pos:column="13">XincoCoreDataServer</name></type> <name pos:line="683" pos:column="33">data</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="684" pos:column="13">XincoCoreACE</name></type> <name pos:line="684" pos:column="26">ace</name> <init pos:line="684" pos:column="30">= <expr><op:operator pos:line="684" pos:column="32">new</op:operator> <call><name pos:line="684" pos:column="36">XincoCoreACE</name><argument_list pos:line="684" pos:column="48">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="685" pos:column="13">XincoCoreACEServer</name></type> <name pos:line="685" pos:column="32">newace</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="686" pos:column="13">XincoCoreUserServer</name></type> <name pos:line="686" pos:column="33">user</name> <init pos:line="686" pos:column="38">= <expr><op:operator pos:line="686" pos:column="40">new</op:operator> <call><name pos:line="686" pos:column="44">XincoCoreUserServer</name><argument_list pos:line="686" pos:column="63">(<argument><expr><call><name><name pos:line="686" pos:column="64">in1</name><op:operator pos:line="686" pos:column="67">.</op:operator><name pos:line="686" pos:column="68">getUsername</name></name><argument_list pos:line="686" pos:column="79">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="686" pos:column="83">in1</name><op:operator pos:line="686" pos:column="86">.</op:operator><name pos:line="686" pos:column="87">getUserpassword</name></name><argument_list pos:line="686" pos:column="102">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="686" pos:column="106">dbm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="687" pos:column="13">if <condition pos:line="687" pos:column="16">(<expr><call><name><name pos:line="687" pos:column="17">in0</name><op:operator pos:line="687" pos:column="20">.</op:operator><name pos:line="687" pos:column="21">getXinco_core_node_id</name></name><argument_list pos:line="687" pos:column="42">()</argument_list></call> <op:operator pos:line="687" pos:column="45">&gt;</op:operator> <lit:literal type="number" pos:line="687" pos:column="47">0</lit:literal></expr>)</condition><then pos:line="687" pos:column="49"> <block pos:line="687" pos:column="50">{
                <expr_stmt><expr><name pos:line="688" pos:column="17">node</name> <op:operator pos:line="688" pos:column="22">=</op:operator> <op:operator pos:line="688" pos:column="24">new</op:operator> <call><name pos:line="688" pos:column="28">XincoCoreNodeServer</name><argument_list pos:line="688" pos:column="47">(<argument><expr><call><name><name pos:line="688" pos:column="48">in0</name><op:operator pos:line="688" pos:column="51">.</op:operator><name pos:line="688" pos:column="52">getXinco_core_node_id</name></name><argument_list pos:line="688" pos:column="73">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="688" pos:column="77">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="689" pos:column="17">node</name><op:operator pos:line="689" pos:column="21">.</op:operator><name pos:line="689" pos:column="22">setChangerID</name></name><argument_list pos:line="689" pos:column="34">(<argument><expr><call><name><name pos:line="689" pos:column="35">in1</name><op:operator pos:line="689" pos:column="38">.</op:operator><name pos:line="689" pos:column="39">getId</name></name><argument_list pos:line="689" pos:column="44">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="690" pos:column="17">ace</name> <op:operator pos:line="690" pos:column="21">=</op:operator> <call><name><name pos:line="690" pos:column="23">XincoCoreACEServer</name><op:operator pos:line="690" pos:column="41">.</op:operator><name pos:line="690" pos:column="42">checkAccess</name></name><argument_list pos:line="690" pos:column="53">(<argument><expr><name pos:line="690" pos:column="54">user</name></expr></argument>, <argument><expr><call><name><name pos:line="690" pos:column="60">node</name><op:operator pos:line="690" pos:column="64">.</op:operator><name pos:line="690" pos:column="65">getXinco_core_acl</name></name><argument_list pos:line="690" pos:column="82">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <if pos:line="692" pos:column="13">if <condition pos:line="692" pos:column="16">(<expr><call><name><name pos:line="692" pos:column="17">in0</name><op:operator pos:line="692" pos:column="20">.</op:operator><name pos:line="692" pos:column="21">getXinco_core_data_id</name></name><argument_list pos:line="692" pos:column="42">()</argument_list></call> <op:operator pos:line="692" pos:column="45">&gt;</op:operator> <lit:literal type="number" pos:line="692" pos:column="47">0</lit:literal></expr>)</condition><then pos:line="692" pos:column="49"> <block pos:line="692" pos:column="50">{
                <expr_stmt><expr><name pos:line="693" pos:column="17">data</name> <op:operator pos:line="693" pos:column="22">=</op:operator> <op:operator pos:line="693" pos:column="24">new</op:operator> <call><name pos:line="693" pos:column="28">XincoCoreDataServer</name><argument_list pos:line="693" pos:column="47">(<argument><expr><call><name><name pos:line="693" pos:column="48">in0</name><op:operator pos:line="693" pos:column="51">.</op:operator><name pos:line="693" pos:column="52">getXinco_core_data_id</name></name><argument_list pos:line="693" pos:column="73">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="693" pos:column="77">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="694" pos:column="17">data</name><op:operator pos:line="694" pos:column="21">.</op:operator><name pos:line="694" pos:column="22">setChangerID</name></name><argument_list pos:line="694" pos:column="34">(<argument><expr><call><name><name pos:line="694" pos:column="35">in1</name><op:operator pos:line="694" pos:column="38">.</op:operator><name pos:line="694" pos:column="39">getId</name></name><argument_list pos:line="694" pos:column="44">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="695" pos:column="17">ace</name> <op:operator pos:line="695" pos:column="21">=</op:operator> <call><name><name pos:line="695" pos:column="23">XincoCoreACEServer</name><op:operator pos:line="695" pos:column="41">.</op:operator><name pos:line="695" pos:column="42">checkAccess</name></name><argument_list pos:line="695" pos:column="53">(<argument><expr><name pos:line="695" pos:column="54">user</name></expr></argument>, <argument><expr><call><name><name pos:line="695" pos:column="60">data</name><op:operator pos:line="695" pos:column="64">.</op:operator><name pos:line="695" pos:column="65">getXinco_core_acl</name></name><argument_list pos:line="695" pos:column="82">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <if pos:line="697" pos:column="13">if <condition pos:line="697" pos:column="16">(<expr><call><name><name pos:line="697" pos:column="17">ace</name><op:operator pos:line="697" pos:column="20">.</op:operator><name pos:line="697" pos:column="21">isAdmin_permission</name></name><argument_list pos:line="697" pos:column="39">()</argument_list></call></expr>)</condition><then pos:line="697" pos:column="42"> <block pos:line="697" pos:column="43">{
                <comment type="line" pos:line="698" pos:column="17">//load ACE or create new one</comment>
                <if pos:line="699" pos:column="17">if <condition pos:line="699" pos:column="20">(<expr><call><name><name pos:line="699" pos:column="21">in0</name><op:operator pos:line="699" pos:column="24">.</op:operator><name pos:line="699" pos:column="25">getId</name></name><argument_list pos:line="699" pos:column="30">()</argument_list></call> <op:operator pos:line="699" pos:column="33">&gt;</op:operator> <lit:literal type="number" pos:line="699" pos:column="35">0</lit:literal></expr>)</condition><then pos:line="699" pos:column="37"> <block pos:line="699" pos:column="38">{
                    <expr_stmt><expr><name pos:line="700" pos:column="21">newace</name> <op:operator pos:line="700" pos:column="28">=</op:operator> <op:operator pos:line="700" pos:column="30">new</op:operator> <call><name pos:line="700" pos:column="34">XincoCoreACEServer</name><argument_list pos:line="700" pos:column="52">(<argument><expr><call><name><name pos:line="700" pos:column="53">in0</name><op:operator pos:line="700" pos:column="56">.</op:operator><name pos:line="700" pos:column="57">getId</name></name><argument_list pos:line="700" pos:column="62">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="700" pos:column="66">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then> <else pos:line="701" pos:column="19">else <block pos:line="701" pos:column="24">{
                    <expr_stmt><expr><name pos:line="702" pos:column="21">newace</name> <op:operator pos:line="702" pos:column="28">=</op:operator> <op:operator pos:line="702" pos:column="30">new</op:operator> <call><name pos:line="702" pos:column="34">XincoCoreACEServer</name><argument_list pos:line="702" pos:column="52">(<argument><expr><lit:literal type="number" pos:line="702" pos:column="53">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="702" pos:column="56">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="702" pos:column="59">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="702" pos:column="62">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="702" pos:column="65">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="702" pos:column="68">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="702" pos:column="75">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="702" pos:column="82">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="702" pos:column="89">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></else></if>
                <comment type="line" pos:line="704" pos:column="17">//update ACE</comment>
                <expr_stmt><expr><call><name><name pos:line="705" pos:column="17">newace</name><op:operator pos:line="705" pos:column="23">.</op:operator><name pos:line="705" pos:column="24">setXinco_core_node_id</name></name><argument_list pos:line="705" pos:column="45">(<argument><expr><call><name><name pos:line="705" pos:column="46">in0</name><op:operator pos:line="705" pos:column="49">.</op:operator><name pos:line="705" pos:column="50">getXinco_core_node_id</name></name><argument_list pos:line="705" pos:column="71">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="706" pos:column="17">newace</name><op:operator pos:line="706" pos:column="23">.</op:operator><name pos:line="706" pos:column="24">setChangerID</name></name><argument_list pos:line="706" pos:column="36">(<argument><expr><call><name><name pos:line="706" pos:column="37">in1</name><op:operator pos:line="706" pos:column="40">.</op:operator><name pos:line="706" pos:column="41">getId</name></name><argument_list pos:line="706" pos:column="46">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="707" pos:column="17">newace</name><op:operator pos:line="707" pos:column="23">.</op:operator><name pos:line="707" pos:column="24">setXinco_core_data_id</name></name><argument_list pos:line="707" pos:column="45">(<argument><expr><call><name><name pos:line="707" pos:column="46">in0</name><op:operator pos:line="707" pos:column="49">.</op:operator><name pos:line="707" pos:column="50">getXinco_core_data_id</name></name><argument_list pos:line="707" pos:column="71">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="708" pos:column="17">newace</name><op:operator pos:line="708" pos:column="23">.</op:operator><name pos:line="708" pos:column="24">setXinco_core_user_id</name></name><argument_list pos:line="708" pos:column="45">(<argument><expr><call><name><name pos:line="708" pos:column="46">in0</name><op:operator pos:line="708" pos:column="49">.</op:operator><name pos:line="708" pos:column="50">getXinco_core_user_id</name></name><argument_list pos:line="708" pos:column="71">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="709" pos:column="17">newace</name><op:operator pos:line="709" pos:column="23">.</op:operator><name pos:line="709" pos:column="24">setXinco_core_group_id</name></name><argument_list pos:line="709" pos:column="46">(<argument><expr><call><name><name pos:line="709" pos:column="47">in0</name><op:operator pos:line="709" pos:column="50">.</op:operator><name pos:line="709" pos:column="51">getXinco_core_group_id</name></name><argument_list pos:line="709" pos:column="73">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="710" pos:column="17">newace</name><op:operator pos:line="710" pos:column="23">.</op:operator><name pos:line="710" pos:column="24">setRead_permission</name></name><argument_list pos:line="710" pos:column="42">(<argument><expr><call><name><name pos:line="710" pos:column="43">in0</name><op:operator pos:line="710" pos:column="46">.</op:operator><name pos:line="710" pos:column="47">isRead_permission</name></name><argument_list pos:line="710" pos:column="64">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="711" pos:column="17">newace</name><op:operator pos:line="711" pos:column="23">.</op:operator><name pos:line="711" pos:column="24">setWrite_permission</name></name><argument_list pos:line="711" pos:column="43">(<argument><expr><call><name><name pos:line="711" pos:column="44">in0</name><op:operator pos:line="711" pos:column="47">.</op:operator><name pos:line="711" pos:column="48">isWrite_permission</name></name><argument_list pos:line="711" pos:column="66">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="712" pos:column="17">newace</name><op:operator pos:line="712" pos:column="23">.</op:operator><name pos:line="712" pos:column="24">setExecute_permission</name></name><argument_list pos:line="712" pos:column="45">(<argument><expr><call><name><name pos:line="712" pos:column="46">in0</name><op:operator pos:line="712" pos:column="49">.</op:operator><name pos:line="712" pos:column="50">isExecute_permission</name></name><argument_list pos:line="712" pos:column="70">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="713" pos:column="17">newace</name><op:operator pos:line="713" pos:column="23">.</op:operator><name pos:line="713" pos:column="24">setAdmin_permission</name></name><argument_list pos:line="713" pos:column="43">(<argument><expr><call><name><name pos:line="713" pos:column="44">in0</name><op:operator pos:line="713" pos:column="47">.</op:operator><name pos:line="713" pos:column="48">isAdmin_permission</name></name><argument_list pos:line="713" pos:column="66">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="714" pos:column="17">newace</name><op:operator pos:line="714" pos:column="23">.</op:operator><name pos:line="714" pos:column="24">setUserId</name></name><argument_list pos:line="714" pos:column="33">(<argument><expr><call><name><name pos:line="714" pos:column="34">user</name><op:operator pos:line="714" pos:column="38">.</op:operator><name pos:line="714" pos:column="39">getId</name></name><argument_list pos:line="714" pos:column="44">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="715" pos:column="17">newace</name><op:operator pos:line="715" pos:column="23">.</op:operator><name pos:line="715" pos:column="24">write2DB</name></name><argument_list pos:line="715" pos:column="32">(<argument><expr><name pos:line="715" pos:column="33">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="716" pos:column="17">dbm</name><op:operator pos:line="716" pos:column="20">.</op:operator><name pos:line="716" pos:column="21">con</name><op:operator pos:line="716" pos:column="24">.</op:operator><name pos:line="716" pos:column="25">close</name></name><argument_list pos:line="716" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
                <return pos:line="717" pos:column="17">return <expr><op:operator pos:line="717" pos:column="24">(</op:operator><name pos:line="717" pos:column="25">XincoCoreACE</name><op:operator pos:line="717" pos:column="37">)</op:operator><name pos:line="717" pos:column="38">newace</name></expr>;</return>
            }</block></then> <else pos:line="718" pos:column="15">else <block pos:line="718" pos:column="20">{
                <expr_stmt><expr><call><name><name pos:line="719" pos:column="17">dbm</name><op:operator pos:line="719" pos:column="20">.</op:operator><name pos:line="719" pos:column="21">con</name><op:operator pos:line="719" pos:column="24">.</op:operator><name pos:line="719" pos:column="25">close</name></name><argument_list pos:line="719" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
                <return pos:line="720" pos:column="17">return <expr><lit:literal type="null" pos:line="720" pos:column="24">null</lit:literal></expr>;</return>
            }</block></else></if>
        }</block> <catch pos:line="722" pos:column="11">catch <parameter_list pos:line="722" pos:column="17">(<param><decl><type><name pos:line="722" pos:column="18">Exception</name></type> <name pos:line="722" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="722" pos:column="31">{
            <return pos:line="723" pos:column="13">return <expr><lit:literal type="null" pos:line="723" pos:column="20">null</lit:literal></expr>;</return>
        }</block></catch></try>
    }</block></function>
    
    <function><type><specifier pos:line="727" pos:column="5">public</specifier> <name pos:line="727" pos:column="12">boolean</name></type> <name pos:line="727" pos:column="20">removeXincoCoreACE</name><parameter_list pos:line="727" pos:column="38">(<param><decl><type><name><name pos:line="727" pos:column="39">com</name><op:operator pos:line="727" pos:column="42">.</op:operator><name pos:line="727" pos:column="43">bluecubs</name><op:operator pos:line="727" pos:column="51">.</op:operator><name pos:line="727" pos:column="52">xinco</name><op:operator pos:line="727" pos:column="57">.</op:operator><name pos:line="727" pos:column="58">core</name><op:operator pos:line="727" pos:column="62">.</op:operator><name pos:line="727" pos:column="63">XincoCoreACE</name></name></type> <name pos:line="727" pos:column="76">in0</name></decl></param>, <param><decl><type><name><name pos:line="727" pos:column="81">com</name><op:operator pos:line="727" pos:column="84">.</op:operator><name pos:line="727" pos:column="85">bluecubs</name><op:operator pos:line="727" pos:column="93">.</op:operator><name pos:line="727" pos:column="94">xinco</name><op:operator pos:line="727" pos:column="99">.</op:operator><name pos:line="727" pos:column="100">core</name><op:operator pos:line="727" pos:column="104">.</op:operator><name pos:line="727" pos:column="105">XincoCoreUser</name></name></type> <name pos:line="727" pos:column="119">in1</name></decl></param>)</parameter_list> <throws pos:line="727" pos:column="124">throws <argument><expr><name><name pos:line="727" pos:column="131">java</name><op:operator pos:line="727" pos:column="135">.</op:operator><name pos:line="727" pos:column="136">rmi</name><op:operator pos:line="727" pos:column="139">.</op:operator><name pos:line="727" pos:column="140">RemoteException</name></name></expr></argument></throws> <block pos:line="727" pos:column="156">{
        <try pos:line="728" pos:column="9">try <block pos:line="728" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="729" pos:column="13">XincoDBManager</name></type> <name pos:line="729" pos:column="28">dbm</name> <init pos:line="729" pos:column="32">= <expr><op:operator pos:line="729" pos:column="34">new</op:operator> <call><name pos:line="729" pos:column="38">XincoDBManager</name><argument_list pos:line="729" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="730" pos:column="13">XincoCoreNodeServer</name></type> <name pos:line="730" pos:column="33">node</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="731" pos:column="13">XincoCoreDataServer</name></type> <name pos:line="731" pos:column="33">data</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="732" pos:column="13">XincoCoreACE</name></type> <name pos:line="732" pos:column="26">ace</name> <init pos:line="732" pos:column="30">= <expr><op:operator pos:line="732" pos:column="32">new</op:operator> <call><name pos:line="732" pos:column="36">XincoCoreACE</name><argument_list pos:line="732" pos:column="48">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="733" pos:column="13">XincoCoreUserServer</name></type> <name pos:line="733" pos:column="33">user</name> <init pos:line="733" pos:column="38">= <expr><op:operator pos:line="733" pos:column="40">new</op:operator> <call><name pos:line="733" pos:column="44">XincoCoreUserServer</name><argument_list pos:line="733" pos:column="63">(<argument><expr><call><name><name pos:line="733" pos:column="64">in1</name><op:operator pos:line="733" pos:column="67">.</op:operator><name pos:line="733" pos:column="68">getUsername</name></name><argument_list pos:line="733" pos:column="79">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="733" pos:column="83">in1</name><op:operator pos:line="733" pos:column="86">.</op:operator><name pos:line="733" pos:column="87">getUserpassword</name></name><argument_list pos:line="733" pos:column="102">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="733" pos:column="106">dbm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="734" pos:column="13">if <condition pos:line="734" pos:column="16">(<expr><call><name><name pos:line="734" pos:column="17">in0</name><op:operator pos:line="734" pos:column="20">.</op:operator><name pos:line="734" pos:column="21">getXinco_core_node_id</name></name><argument_list pos:line="734" pos:column="42">()</argument_list></call> <op:operator pos:line="734" pos:column="45">&gt;</op:operator> <lit:literal type="number" pos:line="734" pos:column="47">0</lit:literal></expr>)</condition><then pos:line="734" pos:column="49"> <block pos:line="734" pos:column="50">{
                <expr_stmt><expr><name pos:line="735" pos:column="17">node</name> <op:operator pos:line="735" pos:column="22">=</op:operator> <op:operator pos:line="735" pos:column="24">new</op:operator> <call><name pos:line="735" pos:column="28">XincoCoreNodeServer</name><argument_list pos:line="735" pos:column="47">(<argument><expr><call><name><name pos:line="735" pos:column="48">in0</name><op:operator pos:line="735" pos:column="51">.</op:operator><name pos:line="735" pos:column="52">getXinco_core_node_id</name></name><argument_list pos:line="735" pos:column="73">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="735" pos:column="77">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="736" pos:column="17">node</name><op:operator pos:line="736" pos:column="21">.</op:operator><name pos:line="736" pos:column="22">setChangerID</name></name><argument_list pos:line="736" pos:column="34">(<argument><expr><call><name><name pos:line="736" pos:column="35">in1</name><op:operator pos:line="736" pos:column="38">.</op:operator><name pos:line="736" pos:column="39">getId</name></name><argument_list pos:line="736" pos:column="44">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="737" pos:column="17">ace</name> <op:operator pos:line="737" pos:column="21">=</op:operator> <call><name><name pos:line="737" pos:column="23">XincoCoreACEServer</name><op:operator pos:line="737" pos:column="41">.</op:operator><name pos:line="737" pos:column="42">checkAccess</name></name><argument_list pos:line="737" pos:column="53">(<argument><expr><name pos:line="737" pos:column="54">user</name></expr></argument>, <argument><expr><call><name><name pos:line="737" pos:column="60">node</name><op:operator pos:line="737" pos:column="64">.</op:operator><name pos:line="737" pos:column="65">getXinco_core_acl</name></name><argument_list pos:line="737" pos:column="82">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <if pos:line="739" pos:column="13">if <condition pos:line="739" pos:column="16">(<expr><call><name><name pos:line="739" pos:column="17">in0</name><op:operator pos:line="739" pos:column="20">.</op:operator><name pos:line="739" pos:column="21">getXinco_core_data_id</name></name><argument_list pos:line="739" pos:column="42">()</argument_list></call> <op:operator pos:line="739" pos:column="45">&gt;</op:operator> <lit:literal type="number" pos:line="739" pos:column="47">0</lit:literal></expr>)</condition><then pos:line="739" pos:column="49"> <block pos:line="739" pos:column="50">{
                <expr_stmt><expr><name pos:line="740" pos:column="17">data</name> <op:operator pos:line="740" pos:column="22">=</op:operator> <op:operator pos:line="740" pos:column="24">new</op:operator> <call><name pos:line="740" pos:column="28">XincoCoreDataServer</name><argument_list pos:line="740" pos:column="47">(<argument><expr><call><name><name pos:line="740" pos:column="48">in0</name><op:operator pos:line="740" pos:column="51">.</op:operator><name pos:line="740" pos:column="52">getXinco_core_data_id</name></name><argument_list pos:line="740" pos:column="73">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="740" pos:column="77">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="741" pos:column="17">data</name><op:operator pos:line="741" pos:column="21">.</op:operator><name pos:line="741" pos:column="22">setChangerID</name></name><argument_list pos:line="741" pos:column="34">(<argument><expr><call><name><name pos:line="741" pos:column="35">in1</name><op:operator pos:line="741" pos:column="38">.</op:operator><name pos:line="741" pos:column="39">getId</name></name><argument_list pos:line="741" pos:column="44">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="742" pos:column="17">ace</name> <op:operator pos:line="742" pos:column="21">=</op:operator> <call><name><name pos:line="742" pos:column="23">XincoCoreACEServer</name><op:operator pos:line="742" pos:column="41">.</op:operator><name pos:line="742" pos:column="42">checkAccess</name></name><argument_list pos:line="742" pos:column="53">(<argument><expr><name pos:line="742" pos:column="54">user</name></expr></argument>, <argument><expr><call><name><name pos:line="742" pos:column="60">data</name><op:operator pos:line="742" pos:column="64">.</op:operator><name pos:line="742" pos:column="65">getXinco_core_acl</name></name><argument_list pos:line="742" pos:column="82">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <if pos:line="744" pos:column="13">if <condition pos:line="744" pos:column="16">(<expr><call><name><name pos:line="744" pos:column="17">ace</name><op:operator pos:line="744" pos:column="20">.</op:operator><name pos:line="744" pos:column="21">isAdmin_permission</name></name><argument_list pos:line="744" pos:column="39">()</argument_list></call></expr>)</condition><then pos:line="744" pos:column="42"> <block pos:line="744" pos:column="43">{
                <expr_stmt><expr><call><name><name pos:line="745" pos:column="17">XincoCoreACEServer</name><op:operator pos:line="745" pos:column="35">.</op:operator><name pos:line="745" pos:column="36">removeFromDB</name></name><argument_list pos:line="745" pos:column="48">(<argument><expr><name pos:line="745" pos:column="49">in0</name></expr></argument>, <argument><expr><name pos:line="745" pos:column="54">dbm</name></expr></argument>,<argument><expr><call><name><name pos:line="745" pos:column="58">user</name><op:operator pos:line="745" pos:column="62">.</op:operator><name pos:line="745" pos:column="63">getId</name></name><argument_list pos:line="745" pos:column="68">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="746" pos:column="17">dbm</name><op:operator pos:line="746" pos:column="20">.</op:operator><name pos:line="746" pos:column="21">con</name><op:operator pos:line="746" pos:column="24">.</op:operator><name pos:line="746" pos:column="25">close</name></name><argument_list pos:line="746" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
                <return pos:line="747" pos:column="17">return <expr><lit:literal type="boolean" pos:line="747" pos:column="24">true</lit:literal></expr>;</return>
            }</block></then> <else pos:line="748" pos:column="15">else <block pos:line="748" pos:column="20">{
                <expr_stmt><expr><call><name><name pos:line="749" pos:column="17">dbm</name><op:operator pos:line="749" pos:column="20">.</op:operator><name pos:line="749" pos:column="21">con</name><op:operator pos:line="749" pos:column="24">.</op:operator><name pos:line="749" pos:column="25">close</name></name><argument_list pos:line="749" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
                <return pos:line="750" pos:column="17">return <expr><lit:literal type="boolean" pos:line="750" pos:column="24">false</lit:literal></expr>;</return>
            }</block></else></if>
        }</block> <catch pos:line="752" pos:column="11">catch <parameter_list pos:line="752" pos:column="17">(<param><decl><type><name pos:line="752" pos:column="18">Exception</name></type> <name pos:line="752" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="752" pos:column="31">{
            <return pos:line="753" pos:column="13">return <expr><lit:literal type="boolean" pos:line="753" pos:column="20">false</lit:literal></expr>;</return>
        }</block></catch></try>
    }</block></function>
    
    <function><type><specifier pos:line="757" pos:column="5">public</specifier> <name><name pos:line="757" pos:column="12">com</name><op:operator pos:line="757" pos:column="15">.</op:operator><name pos:line="757" pos:column="16">bluecubs</name><op:operator pos:line="757" pos:column="24">.</op:operator><name pos:line="757" pos:column="25">xinco</name><op:operator pos:line="757" pos:column="30">.</op:operator><name pos:line="757" pos:column="31">core</name><op:operator pos:line="757" pos:column="35">.</op:operator><name pos:line="757" pos:column="36">XincoCoreLog</name></name></type> <name pos:line="757" pos:column="49">setXincoCoreLog</name><parameter_list pos:line="757" pos:column="64">(<param><decl><type><name><name pos:line="757" pos:column="65">com</name><op:operator pos:line="757" pos:column="68">.</op:operator><name pos:line="757" pos:column="69">bluecubs</name><op:operator pos:line="757" pos:column="77">.</op:operator><name pos:line="757" pos:column="78">xinco</name><op:operator pos:line="757" pos:column="83">.</op:operator><name pos:line="757" pos:column="84">core</name><op:operator pos:line="757" pos:column="88">.</op:operator><name pos:line="757" pos:column="89">XincoCoreLog</name></name></type> <name pos:line="757" pos:column="102">in0</name></decl></param>, <param><decl><type><name><name pos:line="757" pos:column="107">com</name><op:operator pos:line="757" pos:column="110">.</op:operator><name pos:line="757" pos:column="111">bluecubs</name><op:operator pos:line="757" pos:column="119">.</op:operator><name pos:line="757" pos:column="120">xinco</name><op:operator pos:line="757" pos:column="125">.</op:operator><name pos:line="757" pos:column="126">core</name><op:operator pos:line="757" pos:column="130">.</op:operator><name pos:line="757" pos:column="131">XincoCoreUser</name></name></type> <name pos:line="757" pos:column="145">in1</name></decl></param>)</parameter_list> <throws pos:line="757" pos:column="150">throws <argument><expr><name><name pos:line="757" pos:column="157">java</name><op:operator pos:line="757" pos:column="161">.</op:operator><name pos:line="757" pos:column="162">rmi</name><op:operator pos:line="757" pos:column="165">.</op:operator><name pos:line="757" pos:column="166">RemoteException</name></name></expr></argument></throws> <block pos:line="757" pos:column="182">{
        <try pos:line="758" pos:column="9">try <block pos:line="758" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="759" pos:column="13">XincoDBManager</name></type> <name pos:line="759" pos:column="28">dbm</name> <init pos:line="759" pos:column="32">= <expr><op:operator pos:line="759" pos:column="34">new</op:operator> <call><name pos:line="759" pos:column="38">XincoDBManager</name><argument_list pos:line="759" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="760" pos:column="13">XincoCoreLogServer</name></type> <name pos:line="760" pos:column="32">log</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="761" pos:column="13">XincoCoreUserServer</name></type> <name pos:line="761" pos:column="33">user</name> <init pos:line="761" pos:column="38">= <expr><op:operator pos:line="761" pos:column="40">new</op:operator> <call><name pos:line="761" pos:column="44">XincoCoreUserServer</name><argument_list pos:line="761" pos:column="63">(<argument><expr><call><name><name pos:line="761" pos:column="64">in1</name><op:operator pos:line="761" pos:column="67">.</op:operator><name pos:line="761" pos:column="68">getUsername</name></name><argument_list pos:line="761" pos:column="79">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="761" pos:column="83">in1</name><op:operator pos:line="761" pos:column="86">.</op:operator><name pos:line="761" pos:column="87">getUserpassword</name></name><argument_list pos:line="761" pos:column="102">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="761" pos:column="106">dbm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <comment type="line" pos:line="762" pos:column="13">//load log or create new one</comment>
            <if pos:line="763" pos:column="13">if <condition pos:line="763" pos:column="16">(<expr><call><name><name pos:line="763" pos:column="17">in0</name><op:operator pos:line="763" pos:column="20">.</op:operator><name pos:line="763" pos:column="21">getId</name></name><argument_list pos:line="763" pos:column="26">()</argument_list></call> <op:operator pos:line="763" pos:column="29">&gt;</op:operator> <lit:literal type="number" pos:line="763" pos:column="31">0</lit:literal></expr>)</condition><then pos:line="763" pos:column="33"> <block pos:line="763" pos:column="34">{
                <expr_stmt><expr><name pos:line="764" pos:column="17">log</name> <op:operator pos:line="764" pos:column="21">=</op:operator> <op:operator pos:line="764" pos:column="23">new</op:operator> <call><name pos:line="764" pos:column="27">XincoCoreLogServer</name><argument_list pos:line="764" pos:column="45">(<argument><expr><call><name><name pos:line="764" pos:column="46">in0</name><op:operator pos:line="764" pos:column="49">.</op:operator><name pos:line="764" pos:column="50">getId</name></name><argument_list pos:line="764" pos:column="55">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="764" pos:column="59">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then> <else pos:line="765" pos:column="15">else <block pos:line="765" pos:column="20">{
                <expr_stmt><expr><name pos:line="766" pos:column="17">log</name> <op:operator pos:line="766" pos:column="21">=</op:operator> <op:operator pos:line="766" pos:column="23">new</op:operator> <call><name pos:line="766" pos:column="27">XincoCoreLogServer</name><argument_list pos:line="766" pos:column="45">(<argument><expr><lit:literal type="number" pos:line="766" pos:column="46">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="766" pos:column="49">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="766" pos:column="52">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="766" pos:column="55">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="766" pos:column="58">null</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="766" pos:column="64">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="766" pos:column="68">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="766" pos:column="71">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="766" pos:column="74">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="766" pos:column="77">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
            <comment type="line" pos:line="768" pos:column="13">//update log</comment>
            <expr_stmt><expr><call><name><name pos:line="769" pos:column="13">log</name><op:operator pos:line="769" pos:column="16">.</op:operator><name pos:line="769" pos:column="17">setXinco_core_data_id</name></name><argument_list pos:line="769" pos:column="38">(<argument><expr><call><name><name pos:line="769" pos:column="39">in0</name><op:operator pos:line="769" pos:column="42">.</op:operator><name pos:line="769" pos:column="43">getXinco_core_data_id</name></name><argument_list pos:line="769" pos:column="64">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="770" pos:column="13">log</name><op:operator pos:line="770" pos:column="16">.</op:operator><name pos:line="770" pos:column="17">setChangerID</name></name><argument_list pos:line="770" pos:column="29">(<argument><expr><call><name><name pos:line="770" pos:column="30">in1</name><op:operator pos:line="770" pos:column="33">.</op:operator><name pos:line="770" pos:column="34">getId</name></name><argument_list pos:line="770" pos:column="39">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="771" pos:column="13">log</name><op:operator pos:line="771" pos:column="16">.</op:operator><name pos:line="771" pos:column="17">setXinco_core_user_id</name></name><argument_list pos:line="771" pos:column="38">(<argument><expr><call><name><name pos:line="771" pos:column="39">in0</name><op:operator pos:line="771" pos:column="42">.</op:operator><name pos:line="771" pos:column="43">getXinco_core_user_id</name></name><argument_list pos:line="771" pos:column="64">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="772" pos:column="13">log</name><op:operator pos:line="772" pos:column="16">.</op:operator><name pos:line="772" pos:column="17">setOp_code</name></name><argument_list pos:line="772" pos:column="27">(<argument><expr><call><name><name pos:line="772" pos:column="28">in0</name><op:operator pos:line="772" pos:column="31">.</op:operator><name pos:line="772" pos:column="32">getOp_code</name></name><argument_list pos:line="772" pos:column="42">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="773" pos:column="13">log</name><op:operator pos:line="773" pos:column="16">.</op:operator><name pos:line="773" pos:column="17">setOp_description</name></name><argument_list pos:line="773" pos:column="34">(<argument><expr><call><name><name pos:line="773" pos:column="35">in0</name><op:operator pos:line="773" pos:column="38">.</op:operator><name pos:line="773" pos:column="39">getOp_description</name></name><argument_list pos:line="773" pos:column="56">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="774" pos:column="13">log</name><op:operator pos:line="774" pos:column="16">.</op:operator><name pos:line="774" pos:column="17">setOp_datetime</name></name><argument_list pos:line="774" pos:column="31">(<argument><expr><call><name><name pos:line="774" pos:column="32">in0</name><op:operator pos:line="774" pos:column="35">.</op:operator><name pos:line="774" pos:column="36">getOp_datetime</name></name><argument_list pos:line="774" pos:column="50">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="775" pos:column="13">log</name><op:operator pos:line="775" pos:column="16">.</op:operator><name pos:line="775" pos:column="17">setVersion</name></name><argument_list pos:line="775" pos:column="27">(<argument><expr><call><name><name pos:line="775" pos:column="28">in0</name><op:operator pos:line="775" pos:column="31">.</op:operator><name pos:line="775" pos:column="32">getVersion</name></name><argument_list pos:line="775" pos:column="42">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="776" pos:column="13">log</name><op:operator pos:line="776" pos:column="16">.</op:operator><name pos:line="776" pos:column="17">setUser</name></name><argument_list pos:line="776" pos:column="24">(<argument><expr><name pos:line="776" pos:column="25">user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="777" pos:column="13">log</name><op:operator pos:line="777" pos:column="16">.</op:operator><name pos:line="777" pos:column="17">write2DB</name></name><argument_list pos:line="777" pos:column="25">(<argument><expr><name pos:line="777" pos:column="26">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="778" pos:column="13">dbm</name><op:operator pos:line="778" pos:column="16">.</op:operator><name pos:line="778" pos:column="17">con</name><op:operator pos:line="778" pos:column="20">.</op:operator><name pos:line="778" pos:column="21">close</name></name><argument_list pos:line="778" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="779" pos:column="13">return <expr><op:operator pos:line="779" pos:column="20">(</op:operator><name pos:line="779" pos:column="21">XincoCoreLog</name><op:operator pos:line="779" pos:column="33">)</op:operator><name pos:line="779" pos:column="34">log</name></expr>;</return>
        }</block> <catch pos:line="780" pos:column="11">catch <parameter_list pos:line="780" pos:column="17">(<param><decl><type><name pos:line="780" pos:column="18">Exception</name></type> <name pos:line="780" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="780" pos:column="31">{
            <return pos:line="781" pos:column="13">return <expr><lit:literal type="null" pos:line="781" pos:column="20">null</lit:literal></expr>;</return>
        }</block></catch></try>
    }</block></function>
    
    <function><type><specifier pos:line="785" pos:column="5">public</specifier> <name><name pos:line="785" pos:column="12">com</name><op:operator pos:line="785" pos:column="15">.</op:operator><name pos:line="785" pos:column="16">bluecubs</name><op:operator pos:line="785" pos:column="24">.</op:operator><name pos:line="785" pos:column="25">xinco</name><op:operator pos:line="785" pos:column="30">.</op:operator><name pos:line="785" pos:column="31">core</name><op:operator pos:line="785" pos:column="35">.</op:operator><name pos:line="785" pos:column="36">XincoCoreUser</name></name></type> <name pos:line="785" pos:column="50">setXincoCoreUser</name><parameter_list pos:line="785" pos:column="66">(<param><decl><type><name><name pos:line="785" pos:column="67">com</name><op:operator pos:line="785" pos:column="70">.</op:operator><name pos:line="785" pos:column="71">bluecubs</name><op:operator pos:line="785" pos:column="79">.</op:operator><name pos:line="785" pos:column="80">xinco</name><op:operator pos:line="785" pos:column="85">.</op:operator><name pos:line="785" pos:column="86">core</name><op:operator pos:line="785" pos:column="90">.</op:operator><name pos:line="785" pos:column="91">XincoCoreUser</name></name></type> <name pos:line="785" pos:column="105">in0</name></decl></param>, <param><decl><type><name><name pos:line="785" pos:column="110">com</name><op:operator pos:line="785" pos:column="113">.</op:operator><name pos:line="785" pos:column="114">bluecubs</name><op:operator pos:line="785" pos:column="122">.</op:operator><name pos:line="785" pos:column="123">xinco</name><op:operator pos:line="785" pos:column="128">.</op:operator><name pos:line="785" pos:column="129">core</name><op:operator pos:line="785" pos:column="133">.</op:operator><name pos:line="785" pos:column="134">XincoCoreUser</name></name></type> <name pos:line="785" pos:column="148">in1</name></decl></param>)</parameter_list> <throws pos:line="785" pos:column="153">throws <argument><expr><name><name pos:line="785" pos:column="160">java</name><op:operator pos:line="785" pos:column="164">.</op:operator><name pos:line="785" pos:column="165">rmi</name><op:operator pos:line="785" pos:column="168">.</op:operator><name pos:line="785" pos:column="169">RemoteException</name></name></expr></argument></throws> <block pos:line="785" pos:column="185">{
        <try pos:line="786" pos:column="9">try <block pos:line="786" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="787" pos:column="13">XincoDBManager</name></type> <name pos:line="787" pos:column="28">dbm</name> <init pos:line="787" pos:column="32">= <expr><op:operator pos:line="787" pos:column="34">new</op:operator> <call><name pos:line="787" pos:column="38">XincoDBManager</name><argument_list pos:line="787" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="788" pos:column="13">XincoCoreUserServer</name></type> <name pos:line="788" pos:column="33">user</name> <init pos:line="788" pos:column="38">= <expr><op:operator pos:line="788" pos:column="40">new</op:operator> <call><name pos:line="788" pos:column="44">XincoCoreUserServer</name><argument_list pos:line="788" pos:column="63">(<argument><expr><call><name><name pos:line="788" pos:column="64">in1</name><op:operator pos:line="788" pos:column="67">.</op:operator><name pos:line="788" pos:column="68">getUsername</name></name><argument_list pos:line="788" pos:column="79">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="788" pos:column="83">in1</name><op:operator pos:line="788" pos:column="86">.</op:operator><name pos:line="788" pos:column="87">getUserpassword</name></name><argument_list pos:line="788" pos:column="102">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="788" pos:column="106">dbm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <comment type="line" pos:line="789" pos:column="13">//Update audit trail</comment>
            <expr_stmt><expr><call><name><name pos:line="790" pos:column="13">user</name><op:operator pos:line="790" pos:column="17">.</op:operator><name pos:line="790" pos:column="18">setChange</name></name><argument_list pos:line="790" pos:column="27">(<argument><expr><call><name><name pos:line="790" pos:column="28">in0</name><op:operator pos:line="790" pos:column="31">.</op:operator><name pos:line="790" pos:column="32">isChange</name></name><argument_list pos:line="790" pos:column="40">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="791" pos:column="13">user</name><op:operator pos:line="791" pos:column="17">.</op:operator><name pos:line="791" pos:column="18">setReason</name></name><argument_list pos:line="791" pos:column="27">(<argument><expr><call><name><name pos:line="791" pos:column="28">in0</name><op:operator pos:line="791" pos:column="31">.</op:operator><name pos:line="791" pos:column="32">getReason</name></name><argument_list pos:line="791" pos:column="41">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="792" pos:column="13">user</name><op:operator pos:line="792" pos:column="17">.</op:operator><name pos:line="792" pos:column="18">write2DB</name></name><argument_list pos:line="792" pos:column="26">(<argument><expr><name pos:line="792" pos:column="27">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="line" pos:line="793" pos:column="13">//update user</comment>
            <expr_stmt><expr><call><name><name pos:line="794" pos:column="13">user</name><op:operator pos:line="794" pos:column="17">.</op:operator><name pos:line="794" pos:column="18">setUsername</name></name><argument_list pos:line="794" pos:column="29">(<argument><expr><call><name><name pos:line="794" pos:column="30">in0</name><op:operator pos:line="794" pos:column="33">.</op:operator><name pos:line="794" pos:column="34">getUsername</name></name><argument_list pos:line="794" pos:column="45">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="795" pos:column="13">user</name><op:operator pos:line="795" pos:column="17">.</op:operator><name pos:line="795" pos:column="18">setUserpassword</name></name><argument_list pos:line="795" pos:column="33">(<argument><expr><call><name><name pos:line="795" pos:column="34">in0</name><op:operator pos:line="795" pos:column="37">.</op:operator><name pos:line="795" pos:column="38">getUserpassword</name></name><argument_list pos:line="795" pos:column="53">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="796" pos:column="13">user</name><op:operator pos:line="796" pos:column="17">.</op:operator><name pos:line="796" pos:column="18">setFirstname</name></name><argument_list pos:line="796" pos:column="30">(<argument><expr><call><name><name pos:line="796" pos:column="31">in0</name><op:operator pos:line="796" pos:column="34">.</op:operator><name pos:line="796" pos:column="35">getFirstname</name></name><argument_list pos:line="796" pos:column="47">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="797" pos:column="13">user</name><op:operator pos:line="797" pos:column="17">.</op:operator><name pos:line="797" pos:column="18">setName</name></name><argument_list pos:line="797" pos:column="25">(<argument><expr><call><name><name pos:line="797" pos:column="26">in0</name><op:operator pos:line="797" pos:column="29">.</op:operator><name pos:line="797" pos:column="30">getName</name></name><argument_list pos:line="797" pos:column="37">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="798" pos:column="13">user</name><op:operator pos:line="798" pos:column="17">.</op:operator><name pos:line="798" pos:column="18">setEmail</name></name><argument_list pos:line="798" pos:column="26">(<argument><expr><call><name><name pos:line="798" pos:column="27">in0</name><op:operator pos:line="798" pos:column="30">.</op:operator><name pos:line="798" pos:column="31">getEmail</name></name><argument_list pos:line="798" pos:column="39">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="799" pos:column="13">user</name><op:operator pos:line="799" pos:column="17">.</op:operator><name pos:line="799" pos:column="18">setStatus_number</name></name><argument_list pos:line="799" pos:column="34">(<argument><expr><call><name><name pos:line="799" pos:column="35">in0</name><op:operator pos:line="799" pos:column="38">.</op:operator><name pos:line="799" pos:column="39">getStatus_number</name></name><argument_list pos:line="799" pos:column="55">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="800" pos:column="13">user</name><op:operator pos:line="800" pos:column="17">.</op:operator><name pos:line="800" pos:column="18">setChange</name></name><argument_list pos:line="800" pos:column="27">(<argument><expr><lit:literal type="boolean" pos:line="800" pos:column="28">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="801" pos:column="13">user</name><op:operator pos:line="801" pos:column="17">.</op:operator><name pos:line="801" pos:column="18">setAttempts</name></name><argument_list pos:line="801" pos:column="29">(<argument><expr><lit:literal type="number" pos:line="801" pos:column="30">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="802" pos:column="13">user</name><op:operator pos:line="802" pos:column="17">.</op:operator><name pos:line="802" pos:column="18">write2DB</name></name><argument_list pos:line="802" pos:column="26">(<argument><expr><name pos:line="802" pos:column="27">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="803" pos:column="13">dbm</name><op:operator pos:line="803" pos:column="16">.</op:operator><name pos:line="803" pos:column="17">con</name><op:operator pos:line="803" pos:column="20">.</op:operator><name pos:line="803" pos:column="21">close</name></name><argument_list pos:line="803" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="804" pos:column="13">return <expr><op:operator pos:line="804" pos:column="20">(</op:operator><name pos:line="804" pos:column="21">XincoCoreUser</name><op:operator pos:line="804" pos:column="34">)</op:operator><name pos:line="804" pos:column="35">user</name></expr>;</return>
        }</block> <catch pos:line="805" pos:column="11">catch <parameter_list pos:line="805" pos:column="17">(<param><decl><type><name pos:line="805" pos:column="18">Exception</name></type> <name pos:line="805" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="805" pos:column="31">{
            <return pos:line="806" pos:column="13">return <expr><lit:literal type="null" pos:line="806" pos:column="20">null</lit:literal></expr>;</return>
        }</block></catch></try>
    }</block></function>
    
    <function><type><specifier pos:line="810" pos:column="5">public</specifier> <name><name pos:line="810" pos:column="12">com</name><op:operator pos:line="810" pos:column="15">.</op:operator><name pos:line="810" pos:column="16">bluecubs</name><op:operator pos:line="810" pos:column="24">.</op:operator><name pos:line="810" pos:column="25">xinco</name><op:operator pos:line="810" pos:column="30">.</op:operator><name pos:line="810" pos:column="31">core</name><op:operator pos:line="810" pos:column="35">.</op:operator><name pos:line="810" pos:column="36">XincoCoreGroup</name></name></type> <name pos:line="810" pos:column="51">setXincoCoreGroup</name><parameter_list pos:line="810" pos:column="68">(<param><decl><type><name><name pos:line="810" pos:column="69">com</name><op:operator pos:line="810" pos:column="72">.</op:operator><name pos:line="810" pos:column="73">bluecubs</name><op:operator pos:line="810" pos:column="81">.</op:operator><name pos:line="810" pos:column="82">xinco</name><op:operator pos:line="810" pos:column="87">.</op:operator><name pos:line="810" pos:column="88">core</name><op:operator pos:line="810" pos:column="92">.</op:operator><name pos:line="810" pos:column="93">XincoCoreGroup</name></name></type> <name pos:line="810" pos:column="108">in0</name></decl></param>, <param><decl><type><name><name pos:line="810" pos:column="113">com</name><op:operator pos:line="810" pos:column="116">.</op:operator><name pos:line="810" pos:column="117">bluecubs</name><op:operator pos:line="810" pos:column="125">.</op:operator><name pos:line="810" pos:column="126">xinco</name><op:operator pos:line="810" pos:column="131">.</op:operator><name pos:line="810" pos:column="132">core</name><op:operator pos:line="810" pos:column="136">.</op:operator><name pos:line="810" pos:column="137">XincoCoreUser</name></name></type> <name pos:line="810" pos:column="151">in1</name></decl></param>)</parameter_list> <throws pos:line="810" pos:column="156">throws <argument><expr><name><name pos:line="810" pos:column="163">java</name><op:operator pos:line="810" pos:column="167">.</op:operator><name pos:line="810" pos:column="168">rmi</name><op:operator pos:line="810" pos:column="171">.</op:operator><name pos:line="810" pos:column="172">RemoteException</name></name></expr></argument></throws> <block pos:line="810" pos:column="188">{
        <comment type="line" pos:line="811" pos:column="9">//not to be implemented yet: advanced administration feature!</comment>
        <return pos:line="812" pos:column="9">return <expr><lit:literal type="null" pos:line="812" pos:column="16">null</lit:literal></expr>;</return>
    }</block></function>
    
    <function><type><specifier pos:line="815" pos:column="5">public</specifier> <name><name pos:line="815" pos:column="12">com</name><op:operator pos:line="815" pos:column="15">.</op:operator><name pos:line="815" pos:column="16">bluecubs</name><op:operator pos:line="815" pos:column="24">.</op:operator><name pos:line="815" pos:column="25">xinco</name><op:operator pos:line="815" pos:column="30">.</op:operator><name pos:line="815" pos:column="31">core</name><op:operator pos:line="815" pos:column="35">.</op:operator><name pos:line="815" pos:column="36">XincoCoreLanguage</name></name></type> <name pos:line="815" pos:column="54">setXincoCoreLanguage</name><parameter_list pos:line="815" pos:column="74">(<param><decl><type><name><name pos:line="815" pos:column="75">com</name><op:operator pos:line="815" pos:column="78">.</op:operator><name pos:line="815" pos:column="79">bluecubs</name><op:operator pos:line="815" pos:column="87">.</op:operator><name pos:line="815" pos:column="88">xinco</name><op:operator pos:line="815" pos:column="93">.</op:operator><name pos:line="815" pos:column="94">core</name><op:operator pos:line="815" pos:column="98">.</op:operator><name pos:line="815" pos:column="99">XincoCoreLanguage</name></name></type> <name pos:line="815" pos:column="117">in0</name></decl></param>, <param><decl><type><name><name pos:line="815" pos:column="122">com</name><op:operator pos:line="815" pos:column="125">.</op:operator><name pos:line="815" pos:column="126">bluecubs</name><op:operator pos:line="815" pos:column="134">.</op:operator><name pos:line="815" pos:column="135">xinco</name><op:operator pos:line="815" pos:column="140">.</op:operator><name pos:line="815" pos:column="141">core</name><op:operator pos:line="815" pos:column="145">.</op:operator><name pos:line="815" pos:column="146">XincoCoreUser</name></name></type> <name pos:line="815" pos:column="160">in1</name></decl></param>)</parameter_list> <throws pos:line="815" pos:column="165">throws <argument><expr><name><name pos:line="815" pos:column="172">java</name><op:operator pos:line="815" pos:column="176">.</op:operator><name pos:line="815" pos:column="177">rmi</name><op:operator pos:line="815" pos:column="180">.</op:operator><name pos:line="815" pos:column="181">RemoteException</name></name></expr></argument></throws> <block pos:line="815" pos:column="197">{
        <comment type="line" pos:line="816" pos:column="9">//not to be implemented yet: advanced administration feature!</comment>
        <return pos:line="817" pos:column="9">return <expr><lit:literal type="null" pos:line="817" pos:column="16">null</lit:literal></expr>;</return>
    }</block></function>
    
    <function><type><specifier pos:line="820" pos:column="5">public</specifier> <name><name pos:line="820" pos:column="12">com</name><op:operator pos:line="820" pos:column="15">.</op:operator><name pos:line="820" pos:column="16">bluecubs</name><op:operator pos:line="820" pos:column="24">.</op:operator><name pos:line="820" pos:column="25">xinco</name><op:operator pos:line="820" pos:column="30">.</op:operator><name pos:line="820" pos:column="31">core</name><op:operator pos:line="820" pos:column="35">.</op:operator><name pos:line="820" pos:column="36">XincoCoreDataTypeAttribute</name></name></type> <name pos:line="820" pos:column="63">getXincoCoreDataTypeAttribute</name><parameter_list pos:line="820" pos:column="92">(<param><decl><type><name><name pos:line="820" pos:column="93">com</name><op:operator pos:line="820" pos:column="96">.</op:operator><name pos:line="820" pos:column="97">bluecubs</name><op:operator pos:line="820" pos:column="105">.</op:operator><name pos:line="820" pos:column="106">xinco</name><op:operator pos:line="820" pos:column="111">.</op:operator><name pos:line="820" pos:column="112">core</name><op:operator pos:line="820" pos:column="116">.</op:operator><name pos:line="820" pos:column="117">XincoCoreDataTypeAttribute</name></name></type> <name pos:line="820" pos:column="144">in0</name></decl></param>, <param><decl><type><name><name pos:line="820" pos:column="149">com</name><op:operator pos:line="820" pos:column="152">.</op:operator><name pos:line="820" pos:column="153">bluecubs</name><op:operator pos:line="820" pos:column="161">.</op:operator><name pos:line="820" pos:column="162">xinco</name><op:operator pos:line="820" pos:column="167">.</op:operator><name pos:line="820" pos:column="168">core</name><op:operator pos:line="820" pos:column="172">.</op:operator><name pos:line="820" pos:column="173">XincoCoreUser</name></name></type> <name pos:line="820" pos:column="187">in1</name></decl></param>)</parameter_list> <throws pos:line="820" pos:column="192">throws <argument><expr><name><name pos:line="820" pos:column="199">java</name><op:operator pos:line="820" pos:column="203">.</op:operator><name pos:line="820" pos:column="204">rmi</name><op:operator pos:line="820" pos:column="207">.</op:operator><name pos:line="820" pos:column="208">RemoteException</name></name></expr></argument></throws> <block pos:line="820" pos:column="224">{
        <comment type="line" pos:line="821" pos:column="9">//dummy: not to be implemented!</comment>
        <return pos:line="822" pos:column="9">return <expr><lit:literal type="null" pos:line="822" pos:column="16">null</lit:literal></expr>;</return>
    }</block></function>
    
    <function><type><specifier pos:line="825" pos:column="5">public</specifier> <name><name pos:line="825" pos:column="12">com</name><op:operator pos:line="825" pos:column="15">.</op:operator><name pos:line="825" pos:column="16">bluecubs</name><op:operator pos:line="825" pos:column="24">.</op:operator><name pos:line="825" pos:column="25">xinco</name><op:operator pos:line="825" pos:column="30">.</op:operator><name pos:line="825" pos:column="31">add</name><op:operator pos:line="825" pos:column="34">.</op:operator><name pos:line="825" pos:column="35">XincoAddAttribute</name></name></type> <name pos:line="825" pos:column="53">getXincoAddAttribute</name><parameter_list pos:line="825" pos:column="73">(<param><decl><type><name><name pos:line="825" pos:column="74">com</name><op:operator pos:line="825" pos:column="77">.</op:operator><name pos:line="825" pos:column="78">bluecubs</name><op:operator pos:line="825" pos:column="86">.</op:operator><name pos:line="825" pos:column="87">xinco</name><op:operator pos:line="825" pos:column="92">.</op:operator><name pos:line="825" pos:column="93">add</name><op:operator pos:line="825" pos:column="96">.</op:operator><name pos:line="825" pos:column="97">XincoAddAttribute</name></name></type> <name pos:line="825" pos:column="115">in0</name></decl></param>, <param><decl><type><name><name pos:line="825" pos:column="120">com</name><op:operator pos:line="825" pos:column="123">.</op:operator><name pos:line="825" pos:column="124">bluecubs</name><op:operator pos:line="825" pos:column="132">.</op:operator><name pos:line="825" pos:column="133">xinco</name><op:operator pos:line="825" pos:column="138">.</op:operator><name pos:line="825" pos:column="139">core</name><op:operator pos:line="825" pos:column="143">.</op:operator><name pos:line="825" pos:column="144">XincoCoreUser</name></name></type> <name pos:line="825" pos:column="158">in1</name></decl></param>)</parameter_list> <throws pos:line="825" pos:column="163">throws <argument><expr><name><name pos:line="825" pos:column="170">java</name><op:operator pos:line="825" pos:column="174">.</op:operator><name pos:line="825" pos:column="175">rmi</name><op:operator pos:line="825" pos:column="178">.</op:operator><name pos:line="825" pos:column="179">RemoteException</name></name></expr></argument></throws> <block pos:line="825" pos:column="195">{
        <return pos:line="826" pos:column="9">return <expr><lit:literal type="null" pos:line="826" pos:column="16">null</lit:literal></expr>;</return>
    }</block></function>
    
    <comment type="block" pos:line="829" pos:column="5">/*in1 is the original XincoUser, in0 is the new XincoUser with the proposed new password
     **/</comment>
    <function><type><specifier pos:line="831" pos:column="5">public</specifier> <name pos:line="831" pos:column="12">boolean</name></type> <name pos:line="831" pos:column="20">checkXincoCoreUserNewPassword</name><parameter_list pos:line="831" pos:column="49">(<param><decl><type><name><name pos:line="831" pos:column="50">java</name><op:operator pos:line="831" pos:column="54">.</op:operator><name pos:line="831" pos:column="55">lang</name><op:operator pos:line="831" pos:column="59">.</op:operator><name pos:line="831" pos:column="60">String</name></name></type> <name pos:line="831" pos:column="67">in0</name></decl></param>, <param><decl><type><name><name pos:line="831" pos:column="72">com</name><op:operator pos:line="831" pos:column="75">.</op:operator><name pos:line="831" pos:column="76">bluecubs</name><op:operator pos:line="831" pos:column="84">.</op:operator><name pos:line="831" pos:column="85">xinco</name><op:operator pos:line="831" pos:column="90">.</op:operator><name pos:line="831" pos:column="91">core</name><op:operator pos:line="831" pos:column="95">.</op:operator><name pos:line="831" pos:column="96">XincoCoreUser</name></name></type> <name pos:line="831" pos:column="110">in1</name></decl></param>, <param><decl><type><name><name pos:line="831" pos:column="115">com</name><op:operator pos:line="831" pos:column="118">.</op:operator><name pos:line="831" pos:column="119">bluecubs</name><op:operator pos:line="831" pos:column="127">.</op:operator><name pos:line="831" pos:column="128">xinco</name><op:operator pos:line="831" pos:column="133">.</op:operator><name pos:line="831" pos:column="134">core</name><op:operator pos:line="831" pos:column="138">.</op:operator><name pos:line="831" pos:column="139">XincoCoreUser</name></name></type> <name pos:line="831" pos:column="153">in2</name></decl></param>)</parameter_list> <throws pos:line="831" pos:column="158">throws <argument><expr><name><name pos:line="831" pos:column="165">java</name><op:operator pos:line="831" pos:column="169">.</op:operator><name pos:line="831" pos:column="170">rmi</name><op:operator pos:line="831" pos:column="173">.</op:operator><name pos:line="831" pos:column="174">RemoteException</name></name></expr></argument></throws> <block pos:line="831" pos:column="190">{
        <decl_stmt><decl><type><name pos:line="832" pos:column="9">XincoDBManager</name></type> <name pos:line="832" pos:column="24">dbm</name><init pos:line="832" pos:column="27">=<expr><lit:literal type="null" pos:line="832" pos:column="28">null</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="833" pos:column="9">XincoCoreUserServer</name></type> <name pos:line="833" pos:column="29">user</name><init pos:line="833" pos:column="33">=<expr><lit:literal type="null" pos:line="833" pos:column="34">null</lit:literal></expr></init></decl>;</decl_stmt>
        <try pos:line="834" pos:column="9">try <block pos:line="834" pos:column="13">{
            <expr_stmt><expr><name pos:line="835" pos:column="13">dbm</name> <op:operator pos:line="835" pos:column="17">=</op:operator> <op:operator pos:line="835" pos:column="19">new</op:operator> <call><name pos:line="835" pos:column="23">XincoDBManager</name><argument_list pos:line="835" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="836" pos:column="13">user</name> <op:operator pos:line="836" pos:column="18">=</op:operator> <op:operator pos:line="836" pos:column="20">new</op:operator> <call><name pos:line="836" pos:column="24">XincoCoreUserServer</name><argument_list pos:line="836" pos:column="43">(<argument><expr><call><name><name pos:line="836" pos:column="44">in1</name><op:operator pos:line="836" pos:column="47">.</op:operator><name pos:line="836" pos:column="48">getUsername</name></name><argument_list pos:line="836" pos:column="59">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="836" pos:column="63">in1</name><op:operator pos:line="836" pos:column="66">.</op:operator><name pos:line="836" pos:column="67">getUserpassword</name></name><argument_list pos:line="836" pos:column="82">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="836" pos:column="86">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block> <catch pos:line="837" pos:column="11">catch <parameter_list pos:line="837" pos:column="17">(<param><decl><type><name pos:line="837" pos:column="18">XincoException</name></type> <name pos:line="837" pos:column="33">ex</name></decl></param>)</parameter_list> <block pos:line="837" pos:column="37">{
            <expr_stmt><expr><call><name><name pos:line="838" pos:column="13">ex</name><op:operator pos:line="838" pos:column="15">.</op:operator><name pos:line="838" pos:column="16">printStackTrace</name></name><argument_list pos:line="838" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
        }</block></catch> <catch pos:line="839" pos:column="11">catch <parameter_list pos:line="839" pos:column="17">(<param><decl><type><name pos:line="839" pos:column="18">Exception</name></type> <name pos:line="839" pos:column="28">ex</name></decl></param>)</parameter_list> <block pos:line="839" pos:column="32">{
            <expr_stmt><expr><call><name><name pos:line="840" pos:column="13">ex</name><op:operator pos:line="840" pos:column="15">.</op:operator><name pos:line="840" pos:column="16">printStackTrace</name></name><argument_list pos:line="840" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
        }</block></catch></try>
        <return pos:line="842" pos:column="9">return <expr><call><name><name pos:line="842" pos:column="16">user</name><op:operator pos:line="842" pos:column="20">.</op:operator><name pos:line="842" pos:column="21">isPasswordUsable</name></name><argument_list pos:line="842" pos:column="37">(<argument><expr><name pos:line="842" pos:column="38">in0</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>
}</block></class>
</unit>
