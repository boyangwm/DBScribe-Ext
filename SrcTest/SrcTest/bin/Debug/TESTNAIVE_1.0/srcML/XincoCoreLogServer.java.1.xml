<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\xinco\src\com\bluecubs\xinco\core\server\XincoCoreLogServer.java" pos:tabs="8"><comment type="block" format="javadoc" pos:line="1" pos:column="1">/**
 *Copyright 2009 blueCubs.com
 *
 *Licensed under the Apache License, Version 2.0 (the "License");
 *you may not use this file except in compliance with the License.
 *You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 *Unless required by applicable law or agreed to in writing, software
 *distributed under the License is distributed on an "AS IS" BASIS,
 *WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *See the License for the specific language governing permissions and
 *limitations under the License.
 *
 *************************************************************
 * This project supports the blueCubs vision of giving back
 * to the community in exchange for free software!
 * More information on: http://www.bluecubs.org
 *************************************************************
 *
 * Name:            XincoCoreLogServer
 *
 * Description:     log
 *
 * Original Author: Alexander Manes
 * Date:            2004
 *
 * Modifications:
 *
 * Who?             When?             What?
 * -                -                 -
 *
 *************************************************************
 */</comment>

<package pos:line="37" pos:column="1">package <name><name pos:line="37" pos:column="9">com</name><op:operator pos:line="37" pos:column="12">.</op:operator><name pos:line="37" pos:column="13">bluecubs</name><op:operator pos:line="37" pos:column="21">.</op:operator><name pos:line="37" pos:column="22">xinco</name><op:operator pos:line="37" pos:column="27">.</op:operator><name pos:line="37" pos:column="28">core</name><op:operator pos:line="37" pos:column="32">.</op:operator><name pos:line="37" pos:column="33">server</name></name>;</package>

<import pos:line="39" pos:column="1">import <name><name pos:line="39" pos:column="8">java</name><op:operator pos:line="39" pos:column="12">.</op:operator><name pos:line="39" pos:column="13">util</name><op:operator pos:line="39" pos:column="17">.</op:operator><name pos:line="39" pos:column="18">Vector</name></name>;</import>
<import pos:line="40" pos:column="1">import <name><name pos:line="40" pos:column="8">java</name><op:operator pos:line="40" pos:column="12">.</op:operator><name pos:line="40" pos:column="13">util</name><op:operator pos:line="40" pos:column="17">.</op:operator><name pos:line="40" pos:column="18">Calendar</name></name>;</import>
<import pos:line="41" pos:column="1">import <name><name pos:line="41" pos:column="8">java</name><op:operator pos:line="41" pos:column="12">.</op:operator><name pos:line="41" pos:column="13">util</name><op:operator pos:line="41" pos:column="17">.</op:operator><name pos:line="41" pos:column="18">GregorianCalendar</name></name>;</import>
<import pos:line="42" pos:column="1">import <name><name pos:line="42" pos:column="8">java</name><op:operator pos:line="42" pos:column="12">.</op:operator><name pos:line="42" pos:column="13">sql</name></name>.*;</import>

<import pos:line="44" pos:column="1">import <name><name pos:line="44" pos:column="8">com</name><op:operator pos:line="44" pos:column="11">.</op:operator><name pos:line="44" pos:column="12">bluecubs</name><op:operator pos:line="44" pos:column="20">.</op:operator><name pos:line="44" pos:column="21">xinco</name><op:operator pos:line="44" pos:column="26">.</op:operator><name pos:line="44" pos:column="27">core</name></name>.*;</import>
<import pos:line="45" pos:column="1">import <name><name pos:line="45" pos:column="8">java</name><op:operator pos:line="45" pos:column="12">.</op:operator><name pos:line="45" pos:column="13">util</name><op:operator pos:line="45" pos:column="17">.</op:operator><name pos:line="45" pos:column="18">ResourceBundle</name></name>;</import>

<class><specifier pos:line="47" pos:column="1">public</specifier> class <name pos:line="47" pos:column="14">XincoCoreLogServer</name> <super><extends pos:line="47" pos:column="33">extends <name pos:line="47" pos:column="41">XincoCoreLog</name></extends></super> <block pos:line="47" pos:column="54">{
    <decl_stmt><decl><type><specifier pos:line="48" pos:column="5">private</specifier> <name pos:line="48" pos:column="13">XincoCoreUser</name></type> <name pos:line="48" pos:column="27">user</name></decl>;</decl_stmt>
    <comment type="line" pos:line="49" pos:column="5">//create single log object for data structures</comment>
    <constructor><specifier pos:line="50" pos:column="5">public</specifier> <name pos:line="50" pos:column="12">XincoCoreLogServer</name><parameter_list pos:line="50" pos:column="30">(<param><decl><type><name pos:line="50" pos:column="31">int</name></type> <name pos:line="50" pos:column="35">attrID</name></decl></param>, <param><decl><type><name pos:line="50" pos:column="43">XincoDBManager</name></type> <name pos:line="50" pos:column="58">DBM</name></decl></param>)</parameter_list> <throws pos:line="50" pos:column="63">throws <argument><expr><name pos:line="50" pos:column="70">XincoException</name></expr></argument></throws> <block pos:line="50" pos:column="85">{
        
        <try pos:line="52" pos:column="9">try <block pos:line="52" pos:column="13">{
            
            <decl_stmt><decl><type><name pos:line="54" pos:column="13">Statement</name></type> <name pos:line="54" pos:column="23">stmt</name> <init pos:line="54" pos:column="28">= <expr><call><name><name pos:line="54" pos:column="30">DBM</name><op:operator pos:line="54" pos:column="33">.</op:operator><name pos:line="54" pos:column="34">con</name><op:operator pos:line="54" pos:column="37">.</op:operator><name pos:line="54" pos:column="38">createStatement</name></name><argument_list pos:line="54" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="55" pos:column="13">ResultSet</name></type> <name pos:line="55" pos:column="23">rs</name> <init pos:line="55" pos:column="26">= <expr><call><name><name pos:line="55" pos:column="28">stmt</name><op:operator pos:line="55" pos:column="32">.</op:operator><name pos:line="55" pos:column="33">executeQuery</name></name><argument_list pos:line="55" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="55" pos:column="46">"SELECT * FROM xinco_core_log WHERE id="</lit:literal> <op:operator pos:line="55" pos:column="87">+</op:operator> <name pos:line="55" pos:column="89">attrID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            
            <comment type="line" pos:line="57" pos:column="13">//throw exception if no result found</comment>
            <decl_stmt><decl><type><name pos:line="58" pos:column="13">int</name></type> <name pos:line="58" pos:column="17">RowCount</name> <init pos:line="58" pos:column="26">= <expr><lit:literal type="number" pos:line="58" pos:column="28">0</lit:literal></expr></init></decl>;</decl_stmt>
            <while pos:line="59" pos:column="13">while <condition pos:line="59" pos:column="19">(<expr><call><name><name pos:line="59" pos:column="20">rs</name><op:operator pos:line="59" pos:column="22">.</op:operator><name pos:line="59" pos:column="23">next</name></name><argument_list pos:line="59" pos:column="27">()</argument_list></call></expr>)</condition> <block pos:line="59" pos:column="31">{
                <expr_stmt><expr><name pos:line="60" pos:column="17">RowCount</name><op:operator pos:line="60" pos:column="25">++</op:operator></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="61" pos:column="17">setId</name><argument_list pos:line="61" pos:column="22">(<argument><expr><call><name><name pos:line="61" pos:column="23">rs</name><op:operator pos:line="61" pos:column="25">.</op:operator><name pos:line="61" pos:column="26">getInt</name></name><argument_list pos:line="61" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="61" pos:column="33">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="62" pos:column="17">setXinco_core_data_id</name><argument_list pos:line="62" pos:column="38">(<argument><expr><call><name><name pos:line="62" pos:column="39">rs</name><op:operator pos:line="62" pos:column="41">.</op:operator><name pos:line="62" pos:column="42">getInt</name></name><argument_list pos:line="62" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="62" pos:column="49">"xinco_core_data_id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="63" pos:column="17">setXinco_core_user_id</name><argument_list pos:line="63" pos:column="38">(<argument><expr><call><name><name pos:line="63" pos:column="39">rs</name><op:operator pos:line="63" pos:column="41">.</op:operator><name pos:line="63" pos:column="42">getInt</name></name><argument_list pos:line="63" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="63" pos:column="49">"xinco_core_user_id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="64" pos:column="17">setOp_code</name><argument_list pos:line="64" pos:column="27">(<argument><expr><call><name><name pos:line="64" pos:column="28">rs</name><op:operator pos:line="64" pos:column="30">.</op:operator><name pos:line="64" pos:column="31">getInt</name></name><argument_list pos:line="64" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="64" pos:column="38">"op_code"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="65" pos:column="17">setOp_datetime</name><argument_list pos:line="65" pos:column="31">(<argument><expr><op:operator pos:line="65" pos:column="32">new</op:operator> <call><name pos:line="65" pos:column="36">GregorianCalendar</name><argument_list pos:line="65" pos:column="53">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="66" pos:column="17">getOp_datetime</name><argument_list pos:line="66" pos:column="31">()</argument_list></call><op:operator pos:line="66" pos:column="33">.</op:operator><call><name pos:line="66" pos:column="34">setTime</name><argument_list pos:line="66" pos:column="41">(<argument><expr><call><name><name pos:line="66" pos:column="42">rs</name><op:operator pos:line="66" pos:column="44">.</op:operator><name pos:line="66" pos:column="45">getTimestamp</name></name><argument_list pos:line="66" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="66" pos:column="58">"op_datetime"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="67" pos:column="17">setOp_description</name><argument_list pos:line="67" pos:column="34">(<argument><expr><call><name><name pos:line="67" pos:column="35">rs</name><op:operator pos:line="67" pos:column="37">.</op:operator><name pos:line="67" pos:column="38">getString</name></name><argument_list pos:line="67" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="67" pos:column="48">"op_description"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="68" pos:column="17">setVersion</name><argument_list pos:line="68" pos:column="27">(<argument><expr><op:operator pos:line="68" pos:column="28">new</op:operator> <call><name pos:line="68" pos:column="32">XincoVersion</name><argument_list pos:line="68" pos:column="44">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="69" pos:column="17">getVersion</name><argument_list pos:line="69" pos:column="27">()</argument_list></call><op:operator pos:line="69" pos:column="29">.</op:operator><call><name pos:line="69" pos:column="30">setVersion_high</name><argument_list pos:line="69" pos:column="45">(<argument><expr><call><name><name pos:line="69" pos:column="46">rs</name><op:operator pos:line="69" pos:column="48">.</op:operator><name pos:line="69" pos:column="49">getInt</name></name><argument_list pos:line="69" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="69" pos:column="56">"version_high"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="70" pos:column="17">getVersion</name><argument_list pos:line="70" pos:column="27">()</argument_list></call><op:operator pos:line="70" pos:column="29">.</op:operator><call><name pos:line="70" pos:column="30">setVersion_mid</name><argument_list pos:line="70" pos:column="44">(<argument><expr><call><name><name pos:line="70" pos:column="45">rs</name><op:operator pos:line="70" pos:column="47">.</op:operator><name pos:line="70" pos:column="48">getInt</name></name><argument_list pos:line="70" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="70" pos:column="55">"version_mid"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="71" pos:column="17">getVersion</name><argument_list pos:line="71" pos:column="27">()</argument_list></call><op:operator pos:line="71" pos:column="29">.</op:operator><call><name pos:line="71" pos:column="30">setVersion_low</name><argument_list pos:line="71" pos:column="44">(<argument><expr><call><name><name pos:line="71" pos:column="45">rs</name><op:operator pos:line="71" pos:column="47">.</op:operator><name pos:line="71" pos:column="48">getInt</name></name><argument_list pos:line="71" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="71" pos:column="55">"version_low"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="72" pos:column="17">getVersion</name><argument_list pos:line="72" pos:column="27">()</argument_list></call><op:operator pos:line="72" pos:column="29">.</op:operator><call><name pos:line="72" pos:column="30">setVersion_postfix</name><argument_list pos:line="72" pos:column="48">(<argument><expr><call><name><name pos:line="72" pos:column="49">rs</name><op:operator pos:line="72" pos:column="51">.</op:operator><name pos:line="72" pos:column="52">getString</name></name><argument_list pos:line="72" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="72" pos:column="62">"version_postfix"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></while>
            <if pos:line="74" pos:column="13">if <condition pos:line="74" pos:column="16">(<expr><name pos:line="74" pos:column="17">RowCount</name> <op:operator pos:line="74" pos:column="26">&lt;</op:operator> <lit:literal type="number" pos:line="74" pos:column="28">1</lit:literal></expr>)</condition><then pos:line="74" pos:column="30"> <block pos:line="74" pos:column="31">{
                <throw pos:line="75" pos:column="17">throw <expr><op:operator pos:line="75" pos:column="23">new</op:operator> <call><name pos:line="75" pos:column="27">XincoException</name><argument_list pos:line="75" pos:column="41">()</argument_list></call></expr>;</throw>
            }</block></then></if>
            
            <expr_stmt><expr><call><name><name pos:line="78" pos:column="13">stmt</name><op:operator pos:line="78" pos:column="17">.</op:operator><name pos:line="78" pos:column="18">close</name></name><argument_list pos:line="78" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
            
        }</block> <catch pos:line="80" pos:column="11">catch <parameter_list pos:line="80" pos:column="17">(<param><decl><type><name pos:line="80" pos:column="18">Exception</name></type> <name pos:line="80" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="80" pos:column="31">{
            <throw pos:line="81" pos:column="13">throw <expr><op:operator pos:line="81" pos:column="19">new</op:operator> <call><name pos:line="81" pos:column="23">XincoException</name><argument_list pos:line="81" pos:column="37">()</argument_list></call></expr>;</throw>
        }</block></catch></try>
        
    }</block></constructor>
    
    <function><type><specifier pos:line="86" pos:column="5">public</specifier> <name pos:line="86" pos:column="12">void</name></type> <name pos:line="86" pos:column="17">setUser</name><parameter_list pos:line="86" pos:column="24">(<param><decl><type><name pos:line="86" pos:column="25">XincoCoreUserServer</name></type> <name pos:line="86" pos:column="45">user</name></decl></param>)</parameter_list><block pos:line="86" pos:column="50">{
        <expr_stmt><expr><name><name pos:line="87" pos:column="9">this</name><op:operator pos:line="87" pos:column="13">.</op:operator><name pos:line="87" pos:column="14">user</name></name><op:operator pos:line="87" pos:column="18">=</op:operator><name pos:line="87" pos:column="19">user</name></expr>;</expr_stmt>
    }</block></function>
    
    <comment type="line" pos:line="90" pos:column="5">//create single log object for data structures</comment>
    <constructor><specifier pos:line="91" pos:column="5">public</specifier> <name pos:line="91" pos:column="12">XincoCoreLogServer</name><parameter_list pos:line="91" pos:column="30">(<param><decl><type><name pos:line="91" pos:column="31">int</name></type> <name pos:line="91" pos:column="35">attrID</name></decl></param>, <param><decl><type><name pos:line="91" pos:column="43">int</name></type> <name pos:line="91" pos:column="47">attrCDID</name></decl></param>, <param><decl><type><name pos:line="91" pos:column="57">int</name></type> <name pos:line="91" pos:column="61">attrUID</name></decl></param>, <param><decl><type><name pos:line="91" pos:column="70">int</name></type> <name pos:line="91" pos:column="74">attrOC</name></decl></param>, <param><decl><type><name pos:line="91" pos:column="82">Calendar</name></type> <name pos:line="91" pos:column="91">attrODT</name></decl></param>,  <param><decl><type><name pos:line="91" pos:column="101">String</name></type> <name pos:line="91" pos:column="108">attrOD</name></decl></param>, <param><decl><type><name pos:line="91" pos:column="116">int</name></type> <name pos:line="91" pos:column="120">attrVH</name></decl></param>, <param><decl><type><name pos:line="91" pos:column="128">int</name></type> <name pos:line="91" pos:column="132">attrVM</name></decl></param>, <param><decl><type><name pos:line="91" pos:column="140">int</name></type> <name pos:line="91" pos:column="144">attrVL</name></decl></param>, <param><decl><type><name pos:line="91" pos:column="152">String</name></type> <name pos:line="91" pos:column="159">attrVP</name></decl></param>)</parameter_list> <throws pos:line="91" pos:column="167">throws <argument><expr><name pos:line="91" pos:column="174">XincoException</name></expr></argument></throws> <block pos:line="91" pos:column="189">{
        
        <expr_stmt><expr><call><name pos:line="93" pos:column="9">setId</name><argument_list pos:line="93" pos:column="14">(<argument><expr><name pos:line="93" pos:column="15">attrID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="94" pos:column="9">setXinco_core_data_id</name><argument_list pos:line="94" pos:column="30">(<argument><expr><name pos:line="94" pos:column="31">attrCDID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="95" pos:column="9">setXinco_core_user_id</name><argument_list pos:line="95" pos:column="30">(<argument><expr><name pos:line="95" pos:column="31">attrUID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="96" pos:column="9">setOp_code</name><argument_list pos:line="96" pos:column="19">(<argument><expr><name pos:line="96" pos:column="20">attrOC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="97" pos:column="9">setOp_datetime</name><argument_list pos:line="97" pos:column="23">(<argument><expr><name pos:line="97" pos:column="24">attrODT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="98" pos:column="9">setOp_description</name><argument_list pos:line="98" pos:column="26">(<argument><expr><name pos:line="98" pos:column="27">attrOD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="99" pos:column="9">setVersion</name><argument_list pos:line="99" pos:column="19">(<argument><expr><op:operator pos:line="99" pos:column="20">new</op:operator> <call><name pos:line="99" pos:column="24">XincoVersion</name><argument_list pos:line="99" pos:column="36">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="100" pos:column="9">getVersion</name><argument_list pos:line="100" pos:column="19">()</argument_list></call><op:operator pos:line="100" pos:column="21">.</op:operator><call><name pos:line="100" pos:column="22">setVersion_high</name><argument_list pos:line="100" pos:column="37">(<argument><expr><name pos:line="100" pos:column="38">attrVH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="101" pos:column="9">getVersion</name><argument_list pos:line="101" pos:column="19">()</argument_list></call><op:operator pos:line="101" pos:column="21">.</op:operator><call><name pos:line="101" pos:column="22">setVersion_mid</name><argument_list pos:line="101" pos:column="36">(<argument><expr><name pos:line="101" pos:column="37">attrVM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="102" pos:column="9">getVersion</name><argument_list pos:line="102" pos:column="19">()</argument_list></call><op:operator pos:line="102" pos:column="21">.</op:operator><call><name pos:line="102" pos:column="22">setVersion_low</name><argument_list pos:line="102" pos:column="36">(<argument><expr><name pos:line="102" pos:column="37">attrVL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="103" pos:column="9">getVersion</name><argument_list pos:line="103" pos:column="19">()</argument_list></call><op:operator pos:line="103" pos:column="21">.</op:operator><call><name pos:line="103" pos:column="22">setVersion_postfix</name><argument_list pos:line="103" pos:column="40">(<argument><expr><name pos:line="103" pos:column="41">attrVP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        
    }</block></constructor>
    
    <comment type="line" pos:line="107" pos:column="5">//write to db</comment>
    <function><type><specifier pos:line="108" pos:column="5">public</specifier> <name pos:line="108" pos:column="12">int</name></type> <name pos:line="108" pos:column="16">write2DB</name><parameter_list pos:line="108" pos:column="24">(<param><decl><type><name pos:line="108" pos:column="25">XincoDBManager</name></type> <name pos:line="108" pos:column="40">DBM</name></decl></param>)</parameter_list> <throws pos:line="108" pos:column="45">throws <argument><expr><name pos:line="108" pos:column="52">XincoException</name></expr></argument></throws> <block pos:line="108" pos:column="67">{
        
        <try pos:line="110" pos:column="9">try <block pos:line="110" pos:column="13">{
            
            <if pos:line="112" pos:column="13">if <condition pos:line="112" pos:column="16">(<expr><call><name pos:line="112" pos:column="17">getId</name><argument_list pos:line="112" pos:column="22">()</argument_list></call> <op:operator pos:line="112" pos:column="25">&gt;</op:operator> <lit:literal type="number" pos:line="112" pos:column="27">0</lit:literal></expr>)</condition><then pos:line="112" pos:column="29"> <block pos:line="112" pos:column="30">{
                <decl_stmt><decl><type><name pos:line="113" pos:column="17">Statement</name></type> <name pos:line="113" pos:column="27">stmt</name> <init pos:line="113" pos:column="32">= <expr><call><name><name pos:line="113" pos:column="34">DBM</name><op:operator pos:line="113" pos:column="37">.</op:operator><name pos:line="113" pos:column="38">con</name><op:operator pos:line="113" pos:column="41">.</op:operator><name pos:line="113" pos:column="42">createStatement</name></name><argument_list pos:line="113" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="114" pos:column="17">XincoCoreAuditServer</name></type> <name pos:line="114" pos:column="38">audit</name><init pos:line="114" pos:column="43">= <expr><op:operator pos:line="114" pos:column="45">new</op:operator> <call><name pos:line="114" pos:column="49">XincoCoreAuditServer</name><argument_list pos:line="114" pos:column="69">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="115" pos:column="17">ResourceBundle</name></type> <name pos:line="115" pos:column="32">xerb</name> <init pos:line="115" pos:column="37">= <expr><call><name><name pos:line="115" pos:column="39">ResourceBundle</name><op:operator pos:line="115" pos:column="53">.</op:operator><name pos:line="115" pos:column="54">getBundle</name></name><argument_list pos:line="115" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="115" pos:column="64">"com.bluecubs.xinco.messages.XincoMessages"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="116" pos:column="17">audit</name><op:operator pos:line="116" pos:column="22">.</op:operator><name pos:line="116" pos:column="23">updateAuditTrail</name></name><argument_list pos:line="116" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="116" pos:column="40">"xinco_core_log"</lit:literal></expr></argument>,<argument><expr><op:operator pos:line="116" pos:column="57">new</op:operator> <name><name pos:line="116" pos:column="61">String</name> <index pos:line="116" pos:column="68">[]</index></name> <block pos:line="116" pos:column="71">{<expr><lit:literal type="string" pos:line="116" pos:column="72">"id ="</lit:literal><op:operator pos:line="116" pos:column="78">+</op:operator><call><name pos:line="116" pos:column="79">getId</name><argument_list pos:line="116" pos:column="84">()</argument_list></call></expr>}</block></expr></argument>,
                        <argument><expr><name pos:line="117" pos:column="25">DBM</name></expr></argument>,<argument><expr><call><name><name pos:line="117" pos:column="29">xerb</name><op:operator pos:line="117" pos:column="33">.</op:operator><name pos:line="117" pos:column="34">getString</name></name><argument_list pos:line="117" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="117" pos:column="44">"audit.log.change"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><call><name><name pos:line="117" pos:column="64">this</name><op:operator pos:line="117" pos:column="68">.</op:operator><name pos:line="117" pos:column="69">getChangerID</name></name><argument_list pos:line="117" pos:column="81">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="118" pos:column="17">stmt</name><op:operator pos:line="118" pos:column="21">.</op:operator><name pos:line="118" pos:column="22">executeUpdate</name></name><argument_list pos:line="118" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="118" pos:column="36">"UPDATE xinco_core_log SET xinco_core_data_id="</lit:literal> <op:operator pos:line="118" pos:column="84">+</op:operator> <call><name pos:line="118" pos:column="86">getXinco_core_data_id</name><argument_list pos:line="118" pos:column="107">()</argument_list></call> <op:operator pos:line="118" pos:column="110">+</op:operator> <lit:literal type="string" pos:line="118" pos:column="112">", xinco_core_user_id="</lit:literal> <op:operator pos:line="118" pos:column="136">+</op:operator> <call><name pos:line="118" pos:column="138">getXinco_core_user_id</name><argument_list pos:line="118" pos:column="159">()</argument_list></call> <op:operator pos:line="118" pos:column="162">+</op:operator> <lit:literal type="string" pos:line="118" pos:column="164">", op_code="</lit:literal> <op:operator pos:line="118" pos:column="177">+</op:operator> <call><name pos:line="118" pos:column="179">getOp_code</name><argument_list pos:line="118" pos:column="189">()</argument_list></call> <op:operator pos:line="118" pos:column="192">+</op:operator> <lit:literal type="string" pos:line="118" pos:column="194">", op_datetime=now(), op_description='"</lit:literal> <op:operator pos:line="118" pos:column="234">+</op:operator> <call><name pos:line="118" pos:column="236">getOp_description</name><argument_list pos:line="118" pos:column="253">()</argument_list></call><op:operator pos:line="118" pos:column="255">.</op:operator><call><name pos:line="118" pos:column="256">replaceAll</name><argument_list pos:line="118" pos:column="266">(<argument><expr><lit:literal type="string" pos:line="118" pos:column="267">"'"</lit:literal></expr></argument>,<argument><expr><lit:literal type="string" pos:line="118" pos:column="271">"\\\\'"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="118" pos:column="280">+</op:operator> <lit:literal type="string" pos:line="118" pos:column="282">"', version_high="</lit:literal> <op:operator pos:line="118" pos:column="301">+</op:operator> <call><name pos:line="118" pos:column="303">getVersion</name><argument_list pos:line="118" pos:column="313">()</argument_list></call><op:operator pos:line="118" pos:column="315">.</op:operator><call><name pos:line="118" pos:column="316">getVersion_high</name><argument_list pos:line="118" pos:column="331">()</argument_list></call> <op:operator pos:line="118" pos:column="334">+</op:operator> <lit:literal type="string" pos:line="118" pos:column="336">", version_mid="</lit:literal> <op:operator pos:line="118" pos:column="353">+</op:operator> <call><name pos:line="118" pos:column="355">getVersion</name><argument_list pos:line="118" pos:column="365">()</argument_list></call><op:operator pos:line="118" pos:column="367">.</op:operator><call><name pos:line="118" pos:column="368">getVersion_mid</name><argument_list pos:line="118" pos:column="382">()</argument_list></call> <op:operator pos:line="118" pos:column="385">+</op:operator> <lit:literal type="string" pos:line="118" pos:column="387">", version_low="</lit:literal> <op:operator pos:line="118" pos:column="404">+</op:operator> <call><name pos:line="118" pos:column="406">getVersion</name><argument_list pos:line="118" pos:column="416">()</argument_list></call><op:operator pos:line="118" pos:column="418">.</op:operator><call><name pos:line="118" pos:column="419">getVersion_low</name><argument_list pos:line="118" pos:column="433">()</argument_list></call> <op:operator pos:line="118" pos:column="436">+</op:operator> <lit:literal type="string" pos:line="118" pos:column="438">", version_postfix='"</lit:literal> <op:operator pos:line="118" pos:column="460">+</op:operator> <call><name pos:line="118" pos:column="462">getVersion</name><argument_list pos:line="118" pos:column="472">()</argument_list></call><op:operator pos:line="118" pos:column="474">.</op:operator><call><name pos:line="118" pos:column="475">getVersion_postfix</name><argument_list pos:line="118" pos:column="493">()</argument_list></call><op:operator pos:line="118" pos:column="495">.</op:operator><call><name pos:line="118" pos:column="496">replaceAll</name><argument_list pos:line="118" pos:column="506">(<argument><expr><lit:literal type="string" pos:line="118" pos:column="507">"'"</lit:literal></expr></argument>,<argument><expr><lit:literal type="string" pos:line="118" pos:column="511">"\\\\'"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="118" pos:column="520">+</op:operator> <lit:literal type="string" pos:line="118" pos:column="522">"' WHERE id="</lit:literal> <op:operator pos:line="118" pos:column="536">+</op:operator> <call><name pos:line="118" pos:column="538">getId</name><argument_list pos:line="118" pos:column="543">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="119" pos:column="17">stmt</name><op:operator pos:line="119" pos:column="21">.</op:operator><name pos:line="119" pos:column="22">close</name></name><argument_list pos:line="119" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
            }</block></then> <else pos:line="120" pos:column="15">else <block pos:line="120" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="121" pos:column="17">setId</name><argument_list pos:line="121" pos:column="22">(<argument><expr><call><name><name pos:line="121" pos:column="23">DBM</name><op:operator pos:line="121" pos:column="26">.</op:operator><name pos:line="121" pos:column="27">getNewID</name></name><argument_list pos:line="121" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="121" pos:column="36">"xinco_core_log"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                
                <decl_stmt><decl><type><name pos:line="123" pos:column="17">Statement</name></type> <name pos:line="123" pos:column="27">stmt</name> <init pos:line="123" pos:column="32">= <expr><call><name><name pos:line="123" pos:column="34">DBM</name><op:operator pos:line="123" pos:column="37">.</op:operator><name pos:line="123" pos:column="38">con</name><op:operator pos:line="123" pos:column="41">.</op:operator><name pos:line="123" pos:column="42">createStatement</name></name><argument_list pos:line="123" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="124" pos:column="17">stmt</name><op:operator pos:line="124" pos:column="21">.</op:operator><name pos:line="124" pos:column="22">executeUpdate</name></name><argument_list pos:line="124" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="124" pos:column="36">"INSERT INTO xinco_core_log VALUES ("</lit:literal> <op:operator pos:line="124" pos:column="74">+</op:operator> <call><name pos:line="124" pos:column="76">getId</name><argument_list pos:line="124" pos:column="81">()</argument_list></call> <op:operator pos:line="124" pos:column="84">+</op:operator> <lit:literal type="string" pos:line="124" pos:column="86">", "</lit:literal> <op:operator pos:line="124" pos:column="91">+</op:operator> <call><name pos:line="124" pos:column="93">getXinco_core_data_id</name><argument_list pos:line="124" pos:column="114">()</argument_list></call> <op:operator pos:line="124" pos:column="117">+</op:operator> <lit:literal type="string" pos:line="124" pos:column="119">", "</lit:literal> <op:operator pos:line="124" pos:column="124">+</op:operator> <call><name pos:line="124" pos:column="126">getXinco_core_user_id</name><argument_list pos:line="124" pos:column="147">()</argument_list></call> <op:operator pos:line="124" pos:column="150">+</op:operator> <lit:literal type="string" pos:line="124" pos:column="152">", "</lit:literal> <op:operator pos:line="124" pos:column="157">+</op:operator> <call><name pos:line="124" pos:column="159">getOp_code</name><argument_list pos:line="124" pos:column="169">()</argument_list></call> <op:operator pos:line="124" pos:column="172">+</op:operator> <lit:literal type="string" pos:line="124" pos:column="174">", now(), '"</lit:literal> <op:operator pos:line="124" pos:column="187">+</op:operator> <call><name pos:line="124" pos:column="189">getOp_description</name><argument_list pos:line="124" pos:column="206">()</argument_list></call><op:operator pos:line="124" pos:column="208">.</op:operator><call><name pos:line="124" pos:column="209">replaceAll</name><argument_list pos:line="124" pos:column="219">(<argument><expr><lit:literal type="string" pos:line="124" pos:column="220">"'"</lit:literal></expr></argument>,<argument><expr><lit:literal type="string" pos:line="124" pos:column="224">"\\\\'"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="124" pos:column="233">+</op:operator> <lit:literal type="string" pos:line="124" pos:column="235">"', "</lit:literal> <op:operator pos:line="124" pos:column="241">+</op:operator> <call><name pos:line="124" pos:column="243">getVersion</name><argument_list pos:line="124" pos:column="253">()</argument_list></call><op:operator pos:line="124" pos:column="255">.</op:operator><call><name pos:line="124" pos:column="256">getVersion_high</name><argument_list pos:line="124" pos:column="271">()</argument_list></call> <op:operator pos:line="124" pos:column="274">+</op:operator> <lit:literal type="string" pos:line="124" pos:column="276">", "</lit:literal> <op:operator pos:line="124" pos:column="281">+</op:operator> <call><name pos:line="124" pos:column="283">getVersion</name><argument_list pos:line="124" pos:column="293">()</argument_list></call><op:operator pos:line="124" pos:column="295">.</op:operator><call><name pos:line="124" pos:column="296">getVersion_mid</name><argument_list pos:line="124" pos:column="310">()</argument_list></call> <op:operator pos:line="124" pos:column="313">+</op:operator> <lit:literal type="string" pos:line="124" pos:column="315">", "</lit:literal> <op:operator pos:line="124" pos:column="320">+</op:operator> <call><name pos:line="124" pos:column="322">getVersion</name><argument_list pos:line="124" pos:column="332">()</argument_list></call><op:operator pos:line="124" pos:column="334">.</op:operator><call><name pos:line="124" pos:column="335">getVersion_low</name><argument_list pos:line="124" pos:column="349">()</argument_list></call> <op:operator pos:line="124" pos:column="352">+</op:operator> <lit:literal type="string" pos:line="124" pos:column="354">", '"</lit:literal> <op:operator pos:line="124" pos:column="360">+</op:operator> <call><name pos:line="124" pos:column="362">getVersion</name><argument_list pos:line="124" pos:column="372">()</argument_list></call><op:operator pos:line="124" pos:column="374">.</op:operator><call><name pos:line="124" pos:column="375">getVersion_postfix</name><argument_list pos:line="124" pos:column="393">()</argument_list></call><op:operator pos:line="124" pos:column="395">.</op:operator><call><name pos:line="124" pos:column="396">replaceAll</name><argument_list pos:line="124" pos:column="406">(<argument><expr><lit:literal type="string" pos:line="124" pos:column="407">"'"</lit:literal></expr></argument>,<argument><expr><lit:literal type="string" pos:line="124" pos:column="411">"\\\\'"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="124" pos:column="420">+</op:operator> <lit:literal type="string" pos:line="124" pos:column="422">"')"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="125" pos:column="17">stmt</name><op:operator pos:line="125" pos:column="21">.</op:operator><name pos:line="125" pos:column="22">close</name></name><argument_list pos:line="125" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
            
            <expr_stmt><expr><call><name><name pos:line="128" pos:column="13">DBM</name><op:operator pos:line="128" pos:column="16">.</op:operator><name pos:line="128" pos:column="17">con</name><op:operator pos:line="128" pos:column="20">.</op:operator><name pos:line="128" pos:column="21">commit</name></name><argument_list pos:line="128" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
            
        }</block> <catch pos:line="130" pos:column="11">catch <parameter_list pos:line="130" pos:column="17">(<param><decl><type><name pos:line="130" pos:column="18">Exception</name></type> <name pos:line="130" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="130" pos:column="31">{
            <try pos:line="131" pos:column="13">try <block pos:line="131" pos:column="17">{
                <expr_stmt><expr><call><name><name pos:line="132" pos:column="17">DBM</name><op:operator pos:line="132" pos:column="20">.</op:operator><name pos:line="132" pos:column="21">con</name><op:operator pos:line="132" pos:column="24">.</op:operator><name pos:line="132" pos:column="25">rollback</name></name><argument_list pos:line="132" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            }</block> <catch pos:line="133" pos:column="15">catch <parameter_list pos:line="133" pos:column="21">(<param><decl><type><name pos:line="133" pos:column="22">Exception</name></type> <name pos:line="133" pos:column="32">erollback</name></decl></param>)</parameter_list> <block pos:line="133" pos:column="43">{
            }</block></catch></try>
            <throw pos:line="135" pos:column="13">throw <expr><op:operator pos:line="135" pos:column="19">new</op:operator> <call><name pos:line="135" pos:column="23">XincoException</name><argument_list pos:line="135" pos:column="37">()</argument_list></call></expr>;</throw>
        }</block></catch></try>
        
        <return pos:line="138" pos:column="9">return <expr><call><name pos:line="138" pos:column="16">getId</name><argument_list pos:line="138" pos:column="21">()</argument_list></call></expr>;</return>
        
    }</block></function>
    
    <comment type="line" pos:line="142" pos:column="5">//create complete log list for data</comment>
    <function><type><specifier pos:line="143" pos:column="5">public</specifier> <specifier pos:line="143" pos:column="12">static</specifier> <name pos:line="143" pos:column="19">Vector</name></type> <name pos:line="143" pos:column="26">getXincoCoreLogs</name><parameter_list pos:line="143" pos:column="42">(<param><decl><type><name pos:line="143" pos:column="43">int</name></type> <name pos:line="143" pos:column="47">attrID</name></decl></param>, <param><decl><type><name pos:line="143" pos:column="55">XincoDBManager</name></type> <name pos:line="143" pos:column="70">DBM</name></decl></param>)</parameter_list> <block pos:line="143" pos:column="75">{
        
        <decl_stmt><decl><type><name pos:line="145" pos:column="9">Vector</name></type> <name pos:line="145" pos:column="16">core_log</name> <init pos:line="145" pos:column="25">= <expr><op:operator pos:line="145" pos:column="27">new</op:operator> <call><name pos:line="145" pos:column="31">Vector</name><argument_list pos:line="145" pos:column="37">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="146" pos:column="9">GregorianCalendar</name></type> <name pos:line="146" pos:column="27">cal</name> <init pos:line="146" pos:column="31">= <expr><op:operator pos:line="146" pos:column="33">new</op:operator> <call><name pos:line="146" pos:column="37">GregorianCalendar</name><argument_list pos:line="146" pos:column="54">()</argument_list></call></expr></init></decl>;</decl_stmt>
        
        <try pos:line="148" pos:column="9">try <block pos:line="148" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="149" pos:column="13">Statement</name></type> <name pos:line="149" pos:column="23">stmt</name> <init pos:line="149" pos:column="28">= <expr><call><name><name pos:line="149" pos:column="30">DBM</name><op:operator pos:line="149" pos:column="33">.</op:operator><name pos:line="149" pos:column="34">con</name><op:operator pos:line="149" pos:column="37">.</op:operator><name pos:line="149" pos:column="38">createStatement</name></name><argument_list pos:line="149" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="150" pos:column="13">ResultSet</name></type> <name pos:line="150" pos:column="23">rs</name> <init pos:line="150" pos:column="26">= <expr><call><name><name pos:line="150" pos:column="28">stmt</name><op:operator pos:line="150" pos:column="32">.</op:operator><name pos:line="150" pos:column="33">executeQuery</name></name><argument_list pos:line="150" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="150" pos:column="46">"SELECT * FROM xinco_core_log WHERE xinco_core_data_id="</lit:literal> <op:operator pos:line="150" pos:column="103">+</op:operator> <name pos:line="150" pos:column="105">attrID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            
            <while pos:line="152" pos:column="13">while <condition pos:line="152" pos:column="19">(<expr><call><name><name pos:line="152" pos:column="20">rs</name><op:operator pos:line="152" pos:column="22">.</op:operator><name pos:line="152" pos:column="23">next</name></name><argument_list pos:line="152" pos:column="27">()</argument_list></call></expr>)</condition> <block pos:line="152" pos:column="31">{
                <expr_stmt><expr><name pos:line="153" pos:column="17">cal</name> <op:operator pos:line="153" pos:column="21">=</op:operator> <op:operator pos:line="153" pos:column="23">new</op:operator> <call><name pos:line="153" pos:column="27">GregorianCalendar</name><argument_list pos:line="153" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="154" pos:column="17">cal</name><op:operator pos:line="154" pos:column="20">.</op:operator><name pos:line="154" pos:column="21">setTime</name></name><argument_list pos:line="154" pos:column="28">( <argument><expr><call><name><name pos:line="154" pos:column="30">rs</name><op:operator pos:line="154" pos:column="32">.</op:operator><name pos:line="154" pos:column="33">getTimestamp</name></name><argument_list pos:line="154" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="154" pos:column="46">"op_datetime"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="155" pos:column="17">core_log</name><op:operator pos:line="155" pos:column="25">.</op:operator><name pos:line="155" pos:column="26">addElement</name></name><argument_list pos:line="155" pos:column="36">(<argument><expr><op:operator pos:line="155" pos:column="37">new</op:operator> <call><name pos:line="155" pos:column="41">XincoCoreLogServer</name><argument_list pos:line="155" pos:column="59">(<argument><expr><call><name><name pos:line="155" pos:column="60">rs</name><op:operator pos:line="155" pos:column="62">.</op:operator><name pos:line="155" pos:column="63">getInt</name></name><argument_list pos:line="155" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="155" pos:column="70">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="155" pos:column="77">rs</name><op:operator pos:line="155" pos:column="79">.</op:operator><name pos:line="155" pos:column="80">getInt</name></name><argument_list pos:line="155" pos:column="86">(<argument><expr><lit:literal type="string" pos:line="155" pos:column="87">"xinco_core_data_id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="155" pos:column="110">rs</name><op:operator pos:line="155" pos:column="112">.</op:operator><name pos:line="155" pos:column="113">getInt</name></name><argument_list pos:line="155" pos:column="119">(<argument><expr><lit:literal type="string" pos:line="155" pos:column="120">"xinco_core_user_id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="155" pos:column="143">rs</name><op:operator pos:line="155" pos:column="145">.</op:operator><name pos:line="155" pos:column="146">getInt</name></name><argument_list pos:line="155" pos:column="152">(<argument><expr><lit:literal type="string" pos:line="155" pos:column="153">"op_code"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="155" pos:column="165">cal</name></expr></argument>, <argument><expr><call><name><name pos:line="155" pos:column="170">rs</name><op:operator pos:line="155" pos:column="172">.</op:operator><name pos:line="155" pos:column="173">getString</name></name><argument_list pos:line="155" pos:column="182">(<argument><expr><lit:literal type="string" pos:line="155" pos:column="183">"op_description"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="155" pos:column="202">rs</name><op:operator pos:line="155" pos:column="204">.</op:operator><name pos:line="155" pos:column="205">getInt</name></name><argument_list pos:line="155" pos:column="211">(<argument><expr><lit:literal type="string" pos:line="155" pos:column="212">"version_high"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="155" pos:column="229">rs</name><op:operator pos:line="155" pos:column="231">.</op:operator><name pos:line="155" pos:column="232">getInt</name></name><argument_list pos:line="155" pos:column="238">(<argument><expr><lit:literal type="string" pos:line="155" pos:column="239">"version_mid"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="155" pos:column="255">rs</name><op:operator pos:line="155" pos:column="257">.</op:operator><name pos:line="155" pos:column="258">getInt</name></name><argument_list pos:line="155" pos:column="264">(<argument><expr><lit:literal type="string" pos:line="155" pos:column="265">"version_low"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="155" pos:column="281">rs</name><op:operator pos:line="155" pos:column="283">.</op:operator><name pos:line="155" pos:column="284">getString</name></name><argument_list pos:line="155" pos:column="293">(<argument><expr><lit:literal type="string" pos:line="155" pos:column="294">"version_postfix"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></while>
            
            <expr_stmt><expr><call><name><name pos:line="158" pos:column="13">stmt</name><op:operator pos:line="158" pos:column="17">.</op:operator><name pos:line="158" pos:column="18">close</name></name><argument_list pos:line="158" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
        }</block> <catch pos:line="159" pos:column="11">catch <parameter_list pos:line="159" pos:column="17">(<param><decl><type><name pos:line="159" pos:column="18">Exception</name></type> <name pos:line="159" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="159" pos:column="31">{
            <expr_stmt><expr><call><name><name pos:line="160" pos:column="13">core_log</name><op:operator pos:line="160" pos:column="21">.</op:operator><name pos:line="160" pos:column="22">removeAllElements</name></name><argument_list pos:line="160" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
        }</block></catch></try>
        
        <return pos:line="163" pos:column="9">return <expr><name pos:line="163" pos:column="16">core_log</name></expr>;</return>
    }</block></function>
    
}</block></class>
</unit>
