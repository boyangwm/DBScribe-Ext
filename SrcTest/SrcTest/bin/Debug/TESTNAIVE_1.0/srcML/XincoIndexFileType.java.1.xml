<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\xinco\src\com\bluecubs\xinco\index\filetypes\XincoIndexFileType.java" pos:tabs="8"><comment type="block" format="javadoc" pos:line="1" pos:column="1">/**
*Copyright 2005 blueCubs.com
*
*Licensed under the Apache License, Version 2.0 (the "License");
*you may not use this file except in compliance with the License.
*You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
*Unless required by applicable law or agreed to in writing, software
*distributed under the License is distributed on an "AS IS" BASIS,
*WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*See the License for the specific language governing permissions and
*limitations under the License.
*
*************************************************************
* This project supports the blueCubs vision of giving back
* to the community in exchange for free software!
* More information on: http://www.bluecubs.org
*************************************************************
*
* Name:            XincoIndexFileType
*
* Description:     interface for writing file-type specific indexers 
*
* Original Author: Alexander Manes
* Date:            2005/02/05
*
* Modifications:
* 
* Who?             When?             What?
* -                -                 -
*
*************************************************************
*/</comment>

<package pos:line="37" pos:column="1">package <name><name pos:line="37" pos:column="9">com</name><op:operator pos:line="37" pos:column="12">.</op:operator><name pos:line="37" pos:column="13">bluecubs</name><op:operator pos:line="37" pos:column="21">.</op:operator><name pos:line="37" pos:column="22">xinco</name><op:operator pos:line="37" pos:column="27">.</op:operator><name pos:line="37" pos:column="28">index</name><op:operator pos:line="37" pos:column="33">.</op:operator><name pos:line="37" pos:column="34">filetypes</name></name>;</package>

<import pos:line="39" pos:column="1">import <name><name pos:line="39" pos:column="8">java</name><op:operator pos:line="39" pos:column="12">.</op:operator><name pos:line="39" pos:column="13">io</name><op:operator pos:line="39" pos:column="15">.</op:operator><name pos:line="39" pos:column="16">File</name></name>;</import>
<import pos:line="40" pos:column="1">import <name><name pos:line="40" pos:column="8">java</name><op:operator pos:line="40" pos:column="12">.</op:operator><name pos:line="40" pos:column="13">io</name><op:operator pos:line="40" pos:column="15">.</op:operator><name pos:line="40" pos:column="16">Reader</name></name>;</import>

<class type="interface"><specifier pos:line="42" pos:column="1">public</specifier> interface <name pos:line="42" pos:column="18">XincoIndexFileType</name> <block pos:line="42" pos:column="37">{

	<function_decl><type><specifier pos:line="44" pos:column="9">public</specifier> <name pos:line="44" pos:column="16">Reader</name></type> <name pos:line="44" pos:column="23">getFileContentReader</name><parameter_list pos:line="44" pos:column="43">(<param><decl><type><name pos:line="44" pos:column="44">File</name></type> <name pos:line="44" pos:column="49">f</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="45" pos:column="9">public</specifier> <name pos:line="45" pos:column="16">String</name></type> <name pos:line="45" pos:column="23">getFileContentString</name><parameter_list pos:line="45" pos:column="43">(<param><decl><type><name pos:line="45" pos:column="44">File</name></type> <name pos:line="45" pos:column="49">f</name></decl></param>)</parameter_list>;</function_decl>
	
}</block></class>
</unit>
