<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\xinco\src\com\bluecubs\xinco\index\filetypes\XincoIndexMicrosoftExcel.java" pos:tabs="8"><comment type="block" format="javadoc" pos:line="1" pos:column="1">/**
*Copyright 2005 blueCubs.com
*
*Licensed under the Apache License, Version 2.0 (the "License");
*you may not use this file except in compliance with the License.
*You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
*Unless required by applicable law or agreed to in writing, software
*distributed under the License is distributed on an "AS IS" BASIS,
*WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*See the License for the specific language governing permissions and
*limitations under the License.
*
*************************************************************
* This project supports the blueCubs vision of giving back
* to the community in exchange for free software!
* More information on: http://www.bluecubs.org
*************************************************************
*
* Name:            XincoIndexMicrosoftExcel
*
* Description:     indexing Microsoft Excel files 
*
* Original Author: Alexander Manes
* Date:            2005/02/05
*
* Modifications:
* 
* Who?             When?             What?
* -                -                 -
*
*************************************************************
*/</comment>

<package pos:line="37" pos:column="1">package <name><name pos:line="37" pos:column="9">com</name><op:operator pos:line="37" pos:column="12">.</op:operator><name pos:line="37" pos:column="13">bluecubs</name><op:operator pos:line="37" pos:column="21">.</op:operator><name pos:line="37" pos:column="22">xinco</name><op:operator pos:line="37" pos:column="27">.</op:operator><name pos:line="37" pos:column="28">index</name><op:operator pos:line="37" pos:column="33">.</op:operator><name pos:line="37" pos:column="34">filetypes</name></name>;</package>

<import pos:line="39" pos:column="1">import <name><name pos:line="39" pos:column="8">java</name><op:operator pos:line="39" pos:column="12">.</op:operator><name pos:line="39" pos:column="13">io</name><op:operator pos:line="39" pos:column="15">.</op:operator><name pos:line="39" pos:column="16">File</name></name>;</import>
<import pos:line="40" pos:column="1">import <name><name pos:line="40" pos:column="8">java</name><op:operator pos:line="40" pos:column="12">.</op:operator><name pos:line="40" pos:column="13">io</name><op:operator pos:line="40" pos:column="15">.</op:operator><name pos:line="40" pos:column="16">FileInputStream</name></name>;</import>
<import pos:line="41" pos:column="1">import <name><name pos:line="41" pos:column="8">java</name><op:operator pos:line="41" pos:column="12">.</op:operator><name pos:line="41" pos:column="13">io</name><op:operator pos:line="41" pos:column="15">.</op:operator><name pos:line="41" pos:column="16">InputStream</name></name>;</import>
<import pos:line="42" pos:column="1">import <name><name pos:line="42" pos:column="8">java</name><op:operator pos:line="42" pos:column="12">.</op:operator><name pos:line="42" pos:column="13">io</name><op:operator pos:line="42" pos:column="15">.</op:operator><name pos:line="42" pos:column="16">Reader</name></name>;</import>
<import pos:line="43" pos:column="1">import <name><name pos:line="43" pos:column="8">org</name><op:operator pos:line="43" pos:column="11">.</op:operator><name pos:line="43" pos:column="12">apache</name><op:operator pos:line="43" pos:column="18">.</op:operator><name pos:line="43" pos:column="19">poi</name><op:operator pos:line="43" pos:column="22">.</op:operator><name pos:line="43" pos:column="23">hssf</name><op:operator pos:line="43" pos:column="27">.</op:operator><name pos:line="43" pos:column="28">usermodel</name><op:operator pos:line="43" pos:column="37">.</op:operator><name pos:line="43" pos:column="38">HSSFCell</name></name>;</import>
<import pos:line="44" pos:column="1">import <name><name pos:line="44" pos:column="8">org</name><op:operator pos:line="44" pos:column="11">.</op:operator><name pos:line="44" pos:column="12">apache</name><op:operator pos:line="44" pos:column="18">.</op:operator><name pos:line="44" pos:column="19">poi</name><op:operator pos:line="44" pos:column="22">.</op:operator><name pos:line="44" pos:column="23">hssf</name><op:operator pos:line="44" pos:column="27">.</op:operator><name pos:line="44" pos:column="28">usermodel</name><op:operator pos:line="44" pos:column="37">.</op:operator><name pos:line="44" pos:column="38">HSSFRow</name></name>;</import>
<import pos:line="45" pos:column="1">import <name><name pos:line="45" pos:column="8">org</name><op:operator pos:line="45" pos:column="11">.</op:operator><name pos:line="45" pos:column="12">apache</name><op:operator pos:line="45" pos:column="18">.</op:operator><name pos:line="45" pos:column="19">poi</name><op:operator pos:line="45" pos:column="22">.</op:operator><name pos:line="45" pos:column="23">hssf</name><op:operator pos:line="45" pos:column="27">.</op:operator><name pos:line="45" pos:column="28">usermodel</name><op:operator pos:line="45" pos:column="37">.</op:operator><name pos:line="45" pos:column="38">HSSFSheet</name></name>;</import>
<import pos:line="46" pos:column="1">import <name><name pos:line="46" pos:column="8">org</name><op:operator pos:line="46" pos:column="11">.</op:operator><name pos:line="46" pos:column="12">apache</name><op:operator pos:line="46" pos:column="18">.</op:operator><name pos:line="46" pos:column="19">poi</name><op:operator pos:line="46" pos:column="22">.</op:operator><name pos:line="46" pos:column="23">hssf</name><op:operator pos:line="46" pos:column="27">.</op:operator><name pos:line="46" pos:column="28">usermodel</name><op:operator pos:line="46" pos:column="37">.</op:operator><name pos:line="46" pos:column="38">HSSFWorkbook</name></name>;</import>
<import pos:line="47" pos:column="1">import <name><name pos:line="47" pos:column="8">org</name><op:operator pos:line="47" pos:column="11">.</op:operator><name pos:line="47" pos:column="12">apache</name><op:operator pos:line="47" pos:column="18">.</op:operator><name pos:line="47" pos:column="19">poi</name><op:operator pos:line="47" pos:column="22">.</op:operator><name pos:line="47" pos:column="23">poifs</name><op:operator pos:line="47" pos:column="28">.</op:operator><name pos:line="47" pos:column="29">filesystem</name><op:operator pos:line="47" pos:column="39">.</op:operator><name pos:line="47" pos:column="40">POIFSFileSystem</name></name>;</import>

<class><specifier pos:line="49" pos:column="1">public</specifier> class <name pos:line="49" pos:column="14">XincoIndexMicrosoftExcel</name> <super><implements pos:line="49" pos:column="39">implements <name pos:line="49" pos:column="50">XincoIndexFileType</name></implements></super> <block pos:line="49" pos:column="69">{

	<constructor><specifier pos:line="51" pos:column="9">public</specifier> <name pos:line="51" pos:column="16">XincoIndexMicrosoftExcel</name><parameter_list pos:line="51" pos:column="40">()</parameter_list> <block pos:line="51" pos:column="43">{
		<expr_stmt><expr><call><name pos:line="52" pos:column="17">super</name><argument_list pos:line="52" pos:column="22">()</argument_list></call></expr>;</expr_stmt>
	}</block></constructor>

	<function><type><specifier pos:line="55" pos:column="9">public</specifier> <name pos:line="55" pos:column="16">Reader</name></type> <name pos:line="55" pos:column="23">getFileContentReader</name><parameter_list pos:line="55" pos:column="43">(<param><decl><type><name pos:line="55" pos:column="44">File</name></type> <name pos:line="55" pos:column="49">f</name></decl></param>)</parameter_list> <block pos:line="55" pos:column="52">{
		<return pos:line="56" pos:column="17">return <expr><lit:literal type="null" pos:line="56" pos:column="24">null</lit:literal></expr>;</return>
	}</block></function>

	<function><type><specifier pos:line="59" pos:column="9">public</specifier> <name pos:line="59" pos:column="16">String</name></type> <name pos:line="59" pos:column="23">getFileContentString</name><parameter_list pos:line="59" pos:column="43">(<param><decl><type><name pos:line="59" pos:column="44">File</name></type> <name pos:line="59" pos:column="49">f</name></decl></param>)</parameter_list> <block pos:line="59" pos:column="52">{
		<decl_stmt><decl><type><name pos:line="60" pos:column="17">int</name></type> <name pos:line="60" pos:column="21">i</name></decl><op:operator pos:line="60" pos:column="22">,</op:operator><decl><type ref="prev"/><name pos:line="60" pos:column="23">j</name></decl><op:operator pos:line="60" pos:column="24">,</op:operator><decl><type ref="prev"/><name pos:line="60" pos:column="25">j2</name></decl><op:operator pos:line="60" pos:column="27">,</op:operator><decl><type ref="prev"/><name pos:line="60" pos:column="28">k</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="61" pos:column="17">short</name></type> <name pos:line="61" pos:column="23">k2</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="62" pos:column="17">HSSFWorkbook</name></type> <name pos:line="62" pos:column="30">wb</name> <init pos:line="62" pos:column="33">= <expr><lit:literal type="null" pos:line="62" pos:column="35">null</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="63" pos:column="17">HSSFSheet</name></type> <name pos:line="63" pos:column="27">sheet</name> <init pos:line="63" pos:column="33">= <expr><lit:literal type="null" pos:line="63" pos:column="35">null</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="64" pos:column="17">HSSFRow</name></type> <name pos:line="64" pos:column="25">row</name> <init pos:line="64" pos:column="29">= <expr><lit:literal type="null" pos:line="64" pos:column="31">null</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="65" pos:column="17">HSSFCell</name></type> <name pos:line="65" pos:column="26">cell</name> <init pos:line="65" pos:column="31">= <expr><lit:literal type="null" pos:line="65" pos:column="33">null</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="66" pos:column="17">InputStream</name></type> <name pos:line="66" pos:column="29">is</name> <init pos:line="66" pos:column="32">= <expr><lit:literal type="null" pos:line="66" pos:column="34">null</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="67" pos:column="17">String</name></type> <name pos:line="67" pos:column="24">cell_string</name> <init pos:line="67" pos:column="36">= <expr><lit:literal type="string" pos:line="67" pos:column="38">""</lit:literal></expr></init></decl>;</decl_stmt>
		<try pos:line="68" pos:column="17">try <block pos:line="68" pos:column="21">{
			<expr_stmt><expr><name pos:line="69" pos:column="25">is</name> <op:operator pos:line="69" pos:column="28">=</op:operator> <op:operator pos:line="69" pos:column="30">new</op:operator> <call><name pos:line="69" pos:column="34">FileInputStream</name><argument_list pos:line="69" pos:column="49">(<argument><expr><name pos:line="69" pos:column="50">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="70" pos:column="25">POIFSFileSystem</name></type> <name pos:line="70" pos:column="41">fs</name> <init pos:line="70" pos:column="44">= <expr><op:operator pos:line="70" pos:column="46">new</op:operator> <call><name pos:line="70" pos:column="50">POIFSFileSystem</name><argument_list pos:line="70" pos:column="65">(<argument><expr><name pos:line="70" pos:column="66">is</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="71" pos:column="25">wb</name> <op:operator pos:line="71" pos:column="28">=</op:operator> <op:operator pos:line="71" pos:column="30">new</op:operator> <call><name pos:line="71" pos:column="34">HSSFWorkbook</name><argument_list pos:line="71" pos:column="46">(<argument><expr><name pos:line="71" pos:column="47">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<for pos:line="72" pos:column="25">for (<init><expr><name pos:line="72" pos:column="30">i</name><op:operator pos:line="72" pos:column="31">=</op:operator><lit:literal type="number" pos:line="72" pos:column="32">0</lit:literal></expr>;</init><condition><expr><name pos:line="72" pos:column="34">i</name><op:operator pos:line="72" pos:column="35">&lt;</op:operator><call><name><name pos:line="72" pos:column="36">wb</name><op:operator pos:line="72" pos:column="38">.</op:operator><name pos:line="72" pos:column="39">getNumberOfSheets</name></name><argument_list pos:line="72" pos:column="56">()</argument_list></call></expr>;</condition><incr><expr><name pos:line="72" pos:column="59">i</name><op:operator pos:line="72" pos:column="60">++</op:operator></expr></incr>) <block pos:line="72" pos:column="64">{
				<expr_stmt><expr><name pos:line="73" pos:column="33">sheet</name> <op:operator pos:line="73" pos:column="39">=</op:operator> <call><name><name pos:line="73" pos:column="41">wb</name><op:operator pos:line="73" pos:column="43">.</op:operator><name pos:line="73" pos:column="44">getSheetAt</name></name><argument_list pos:line="73" pos:column="54">(<argument><expr><name pos:line="73" pos:column="55">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="74" pos:column="33">j2</name> <op:operator pos:line="74" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="74" pos:column="38">0</lit:literal></expr>;</expr_stmt>
				<for pos:line="75" pos:column="33">for (<init><expr><name pos:line="75" pos:column="38">j</name><op:operator pos:line="75" pos:column="39">=</op:operator><lit:literal type="number" pos:line="75" pos:column="40">0</lit:literal></expr>;</init><condition><expr><name pos:line="75" pos:column="42">j</name><op:operator pos:line="75" pos:column="43">&lt;</op:operator><call><name><name pos:line="75" pos:column="44">sheet</name><op:operator pos:line="75" pos:column="49">.</op:operator><name pos:line="75" pos:column="50">getPhysicalNumberOfRows</name></name><argument_list pos:line="75" pos:column="73">()</argument_list></call></expr>;</condition><incr><expr><name pos:line="75" pos:column="76">j</name><op:operator pos:line="75" pos:column="77">++</op:operator></expr></incr>) <block pos:line="75" pos:column="81">{
					<while pos:line="76" pos:column="41">while <condition pos:line="76" pos:column="47">(<expr><op:operator pos:line="76" pos:column="48">(</op:operator><name pos:line="76" pos:column="49">row</name> <op:operator pos:line="76" pos:column="53">=</op:operator> <call><name><name pos:line="76" pos:column="55">sheet</name><op:operator pos:line="76" pos:column="60">.</op:operator><name pos:line="76" pos:column="61">getRow</name></name><argument_list pos:line="76" pos:column="67">(<argument><expr><name pos:line="76" pos:column="68">j2</name></expr></argument>)</argument_list></call><op:operator pos:line="76" pos:column="71">)</op:operator> <op:operator pos:line="76" pos:column="73">==</op:operator> <lit:literal type="null" pos:line="76" pos:column="76">null</lit:literal></expr>)</condition> <block pos:line="76" pos:column="82">{
						<expr_stmt><expr><name pos:line="77" pos:column="49">j2</name><op:operator pos:line="77" pos:column="51">++</op:operator></expr>;</expr_stmt>
					}</block></while>
					<expr_stmt><expr><name pos:line="79" pos:column="41">j2</name><op:operator pos:line="79" pos:column="43">++</op:operator></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="80" pos:column="41">k2</name> <op:operator pos:line="80" pos:column="44">=</op:operator> <lit:literal type="number" pos:line="80" pos:column="46">0</lit:literal></expr>;</expr_stmt>
					<for pos:line="81" pos:column="41">for (<init><expr><name pos:line="81" pos:column="46">k</name><op:operator pos:line="81" pos:column="47">=</op:operator><lit:literal type="number" pos:line="81" pos:column="48">0</lit:literal></expr>;</init><condition><expr><name pos:line="81" pos:column="50">k</name><op:operator pos:line="81" pos:column="51">&lt;</op:operator><call><name><name pos:line="81" pos:column="52">row</name><op:operator pos:line="81" pos:column="55">.</op:operator><name pos:line="81" pos:column="56">getPhysicalNumberOfCells</name></name><argument_list pos:line="81" pos:column="80">()</argument_list></call></expr>;</condition><incr><expr><name pos:line="81" pos:column="83">k</name><op:operator pos:line="81" pos:column="84">++</op:operator></expr></incr>) <block pos:line="81" pos:column="88">{
						<while pos:line="82" pos:column="49">while <condition pos:line="82" pos:column="55">(<expr><op:operator pos:line="82" pos:column="56">(</op:operator><name pos:line="82" pos:column="57">cell</name> <op:operator pos:line="82" pos:column="62">=</op:operator> <call><name><name pos:line="82" pos:column="64">row</name><op:operator pos:line="82" pos:column="67">.</op:operator><name pos:line="82" pos:column="68">getCell</name></name><argument_list pos:line="82" pos:column="75">(<argument><expr><name pos:line="82" pos:column="76">k2</name></expr></argument>)</argument_list></call><op:operator pos:line="82" pos:column="79">)</op:operator> <op:operator pos:line="82" pos:column="81">==</op:operator> <lit:literal type="null" pos:line="82" pos:column="84">null</lit:literal></expr>)</condition> <block pos:line="82" pos:column="90">{
							<expr_stmt><expr><name pos:line="83" pos:column="57">k2</name><op:operator pos:line="83" pos:column="59">++</op:operator></expr>;</expr_stmt>
						}</block></while>
						<expr_stmt><expr><name pos:line="85" pos:column="49">k2</name><op:operator pos:line="85" pos:column="51">++</op:operator></expr>;</expr_stmt>
						<switch pos:line="86" pos:column="49">switch <condition pos:line="86" pos:column="56">(<expr><call><name><name pos:line="86" pos:column="57">cell</name><op:operator pos:line="86" pos:column="61">.</op:operator><name pos:line="86" pos:column="62">getCellType</name></name><argument_list pos:line="86" pos:column="73">()</argument_list></call></expr>)</condition> <block pos:line="86" pos:column="77">{
							<case pos:line="87" pos:column="57">case <expr><name><name pos:line="87" pos:column="62">HSSFCell</name><op:operator pos:line="87" pos:column="70">.</op:operator><name pos:line="87" pos:column="71">CELL_TYPE_FORMULA</name></name></expr> :
								<break pos:line="88" pos:column="65">break;</break>
							</case><case pos:line="89" pos:column="57">case <expr><name><name pos:line="89" pos:column="62">HSSFCell</name><op:operator pos:line="89" pos:column="70">.</op:operator><name pos:line="89" pos:column="71">CELL_TYPE_NUMERIC</name></name></expr> :
								<expr_stmt><expr><name pos:line="90" pos:column="65">cell_string</name> <op:operator pos:line="90" pos:column="77">=</op:operator> <name pos:line="90" pos:column="79">cell_string</name> <op:operator pos:line="90" pos:column="91">+</op:operator> <call><name><name pos:line="90" pos:column="93">cell</name><op:operator pos:line="90" pos:column="97">.</op:operator><name pos:line="90" pos:column="98">getNumericCellValue</name></name><argument_list pos:line="90" pos:column="117">()</argument_list></call> <op:operator pos:line="90" pos:column="120">+</op:operator> <lit:literal type="string" pos:line="90" pos:column="122">"\t"</lit:literal></expr>;</expr_stmt>
								<break pos:line="91" pos:column="65">break;</break>
							</case><case pos:line="92" pos:column="57">case <expr><name><name pos:line="92" pos:column="62">HSSFCell</name><op:operator pos:line="92" pos:column="70">.</op:operator><name pos:line="92" pos:column="71">CELL_TYPE_STRING</name></name></expr> :
								<expr_stmt><expr><name pos:line="93" pos:column="65">cell_string</name> <op:operator pos:line="93" pos:column="77">=</op:operator> <name pos:line="93" pos:column="79">cell_string</name> <op:operator pos:line="93" pos:column="91">+</op:operator> <call><name><name pos:line="93" pos:column="93">cell</name><op:operator pos:line="93" pos:column="97">.</op:operator><name pos:line="93" pos:column="98">getStringCellValue</name></name><argument_list pos:line="93" pos:column="116">()</argument_list></call> <op:operator pos:line="93" pos:column="119">+</op:operator> <lit:literal type="string" pos:line="93" pos:column="121">"\t"</lit:literal></expr>;</expr_stmt>
								<break pos:line="94" pos:column="65">break;</break>
                            </case><default pos:line="95" pos:column="29">default :
                        </default>}</block></switch>
						
					}</block></for>
					<expr_stmt><expr><name pos:line="99" pos:column="41">cell_string</name> <op:operator pos:line="99" pos:column="53">=</op:operator> <name pos:line="99" pos:column="55">cell_string</name> <op:operator pos:line="99" pos:column="67">+</op:operator> <lit:literal type="string" pos:line="99" pos:column="69">"\n"</lit:literal></expr>;</expr_stmt>
				}</block></for>
				<expr_stmt><expr><name pos:line="101" pos:column="33">cell_string</name> <op:operator pos:line="101" pos:column="45">=</op:operator> <name pos:line="101" pos:column="47">cell_string</name> <op:operator pos:line="101" pos:column="59">+</op:operator> <lit:literal type="string" pos:line="101" pos:column="61">"\n\n\n"</lit:literal></expr>;</expr_stmt>
			}</block></for>
			<expr_stmt><expr><call><name><name pos:line="103" pos:column="25">is</name><op:operator pos:line="103" pos:column="27">.</op:operator><name pos:line="103" pos:column="28">close</name></name><argument_list pos:line="103" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
		}</block> <catch pos:line="104" pos:column="19">catch <parameter_list pos:line="104" pos:column="25">(<param><decl><type><name pos:line="104" pos:column="26">Exception</name></type> <name pos:line="104" pos:column="36">fe</name></decl></param>)</parameter_list> <block pos:line="104" pos:column="40">{
			<expr_stmt><expr><name pos:line="105" pos:column="25">cell_string</name> <op:operator pos:line="105" pos:column="37">=</op:operator> <lit:literal type="null" pos:line="105" pos:column="39">null</lit:literal></expr>;</expr_stmt>
			<if pos:line="106" pos:column="25">if <condition pos:line="106" pos:column="28">(<expr><name pos:line="106" pos:column="29">is</name> <op:operator pos:line="106" pos:column="32">!=</op:operator> <lit:literal type="null" pos:line="106" pos:column="35">null</lit:literal></expr>)</condition><then pos:line="106" pos:column="40"> <block pos:line="106" pos:column="41">{
				<try pos:line="107" pos:column="33">try <block pos:line="107" pos:column="37">{
					<expr_stmt><expr><call><name><name pos:line="108" pos:column="41">is</name><op:operator pos:line="108" pos:column="43">.</op:operator><name pos:line="108" pos:column="44">close</name></name><argument_list pos:line="108" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
				}</block> <catch pos:line="109" pos:column="35">catch <parameter_list pos:line="109" pos:column="41">(<param><decl><type><name pos:line="109" pos:column="42">Exception</name></type> <name pos:line="109" pos:column="52">ise</name></decl></param>)</parameter_list> <block pos:line="109" pos:column="57">{}</block></catch></try>
			}</block></then></if>
		}</block></catch></try>
		<return pos:line="112" pos:column="17">return <expr><name pos:line="112" pos:column="24">cell_string</name></expr>;</return>
	}</block></function>

}</block></class>
</unit>
