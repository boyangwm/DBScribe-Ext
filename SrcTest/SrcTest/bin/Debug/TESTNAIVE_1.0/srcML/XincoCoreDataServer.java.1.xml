<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\xinco\src\com\bluecubs\xinco\core\server\XincoCoreDataServer.java" pos:tabs="8"><comment type="block" format="javadoc" pos:line="1" pos:column="1">/**
 *Copyright 2009 blueCubs.com
 *
 *Licensed under the Apache License, Version 2.0 (the "License");
 *you may not use this file except in compliance with the License.
 *You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 *Unless required by applicable law or agreed to in writing, software
 *distributed under the License is distributed on an "AS IS" BASIS,
 *WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *See the License for the specific language governing permissions and
 *limitations under the License.
 *
 *************************************************************
 * This project supports the blueCubs vision of giving back
 * to the community in exchange for free software!
 * More information on: http://www.bluecubs.org
 *************************************************************
 *
 * Name:            XincoCoreDataServer
 *
 * Description:     data object
 *
 * Original Author: Alexander Manes
 * Date:            2004
 *
 * Modifications:
 *
 * Who?             When?             What?
 * -                -                 -
 *
 *************************************************************
 */</comment>
<package pos:line="36" pos:column="1">package <name><name pos:line="36" pos:column="9">com</name><op:operator pos:line="36" pos:column="12">.</op:operator><name pos:line="36" pos:column="13">bluecubs</name><op:operator pos:line="36" pos:column="21">.</op:operator><name pos:line="36" pos:column="22">xinco</name><op:operator pos:line="36" pos:column="27">.</op:operator><name pos:line="36" pos:column="28">core</name><op:operator pos:line="36" pos:column="32">.</op:operator><name pos:line="36" pos:column="33">server</name></name>;</package>

<import pos:line="38" pos:column="1">import <name><name pos:line="38" pos:column="8">com</name><op:operator pos:line="38" pos:column="11">.</op:operator><name pos:line="38" pos:column="12">bluecubs</name><op:operator pos:line="38" pos:column="20">.</op:operator><name pos:line="38" pos:column="21">xinco</name><op:operator pos:line="38" pos:column="26">.</op:operator><name pos:line="38" pos:column="27">add</name><op:operator pos:line="38" pos:column="30">.</op:operator><name pos:line="38" pos:column="31">server</name><op:operator pos:line="38" pos:column="37">.</op:operator><name pos:line="38" pos:column="38">XincoAddAttributeServer</name></name>;</import>
<import pos:line="39" pos:column="1">import <name><name pos:line="39" pos:column="8">com</name><op:operator pos:line="39" pos:column="11">.</op:operator><name pos:line="39" pos:column="12">bluecubs</name><op:operator pos:line="39" pos:column="20">.</op:operator><name pos:line="39" pos:column="21">xinco</name><op:operator pos:line="39" pos:column="26">.</op:operator><name pos:line="39" pos:column="27">add</name><op:operator pos:line="39" pos:column="30">.</op:operator><name pos:line="39" pos:column="31">XincoAddAttribute</name></name>;</import>
<import pos:line="40" pos:column="1">import <name><name pos:line="40" pos:column="8">java</name><op:operator pos:line="40" pos:column="12">.</op:operator><name pos:line="40" pos:column="13">sql</name></name>.*;</import>
<import pos:line="41" pos:column="1">import <name><name pos:line="41" pos:column="8">java</name><op:operator pos:line="41" pos:column="12">.</op:operator><name pos:line="41" pos:column="13">util</name><op:operator pos:line="41" pos:column="17">.</op:operator><name pos:line="41" pos:column="18">Vector</name></name>;</import>
<import pos:line="42" pos:column="1">import <name><name pos:line="42" pos:column="8">java</name><op:operator pos:line="42" pos:column="12">.</op:operator><name pos:line="42" pos:column="13">io</name><op:operator pos:line="42" pos:column="15">.</op:operator><name pos:line="42" pos:column="16">File</name></name>;</import>
<import pos:line="43" pos:column="1">import <name><name pos:line="43" pos:column="8">com</name><op:operator pos:line="43" pos:column="11">.</op:operator><name pos:line="43" pos:column="12">bluecubs</name><op:operator pos:line="43" pos:column="20">.</op:operator><name pos:line="43" pos:column="21">xinco</name><op:operator pos:line="43" pos:column="26">.</op:operator><name pos:line="43" pos:column="27">core</name></name>.*;</import>

<class><specifier pos:line="45" pos:column="1">public</specifier> class <name pos:line="45" pos:column="14">XincoCoreDataServer</name> <super><extends pos:line="45" pos:column="34">extends <name pos:line="45" pos:column="42">XincoCoreData</name></extends></super> <block pos:line="45" pos:column="56">{

    <decl_stmt><decl><type><specifier pos:line="47" pos:column="5">private</specifier> <name pos:line="47" pos:column="13">XincoCoreUserServer</name></type> <name pos:line="47" pos:column="33">user</name></decl>;</decl_stmt>
    <comment type="line" pos:line="48" pos:column="5">//create data object for data structures</comment>

    <constructor><specifier pos:line="50" pos:column="5">public</specifier> <name pos:line="50" pos:column="12">XincoCoreDataServer</name><parameter_list pos:line="50" pos:column="31">(<param><decl><type><name pos:line="50" pos:column="32">int</name></type> <name pos:line="50" pos:column="36">attrID</name></decl></param>, <param><decl><type><name pos:line="50" pos:column="44">XincoDBManager</name></type> <name pos:line="50" pos:column="59">DBM</name></decl></param>)</parameter_list> <throws pos:line="50" pos:column="64">throws <argument><expr><name pos:line="50" pos:column="71">XincoException</name></expr></argument></throws> <block pos:line="50" pos:column="86">{

        <try pos:line="52" pos:column="9">try <block pos:line="52" pos:column="13">{

            <decl_stmt><decl><type><name pos:line="54" pos:column="13">Statement</name></type> <name pos:line="54" pos:column="23">stmt</name> <init pos:line="54" pos:column="28">= <expr><call><name><name pos:line="54" pos:column="30">DBM</name><op:operator pos:line="54" pos:column="33">.</op:operator><name pos:line="54" pos:column="34">con</name><op:operator pos:line="54" pos:column="37">.</op:operator><name pos:line="54" pos:column="38">createStatement</name></name><argument_list pos:line="54" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="55" pos:column="13">ResultSet</name></type> <name pos:line="55" pos:column="23">rs</name> <init pos:line="55" pos:column="26">= <expr><call><name><name pos:line="55" pos:column="28">stmt</name><op:operator pos:line="55" pos:column="32">.</op:operator><name pos:line="55" pos:column="33">executeQuery</name></name><argument_list pos:line="55" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="55" pos:column="46">"SELECT * FROM xinco_core_data WHERE id="</lit:literal> <op:operator pos:line="55" pos:column="88">+</op:operator> <name pos:line="55" pos:column="90">attrID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:line="57" pos:column="13">//throw exception if no result found</comment>
            <decl_stmt><decl><type><name pos:line="58" pos:column="13">int</name></type> <name pos:line="58" pos:column="17">RowCount</name> <init pos:line="58" pos:column="26">= <expr><lit:literal type="number" pos:line="58" pos:column="28">0</lit:literal></expr></init></decl>;</decl_stmt>
            <while pos:line="59" pos:column="13">while <condition pos:line="59" pos:column="19">(<expr><call><name><name pos:line="59" pos:column="20">rs</name><op:operator pos:line="59" pos:column="22">.</op:operator><name pos:line="59" pos:column="23">next</name></name><argument_list pos:line="59" pos:column="27">()</argument_list></call></expr>)</condition> <block pos:line="59" pos:column="31">{
                <expr_stmt><expr><name pos:line="60" pos:column="17">RowCount</name><op:operator pos:line="60" pos:column="25">++</op:operator></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="61" pos:column="17">setId</name><argument_list pos:line="61" pos:column="22">(<argument><expr><call><name><name pos:line="61" pos:column="23">rs</name><op:operator pos:line="61" pos:column="25">.</op:operator><name pos:line="61" pos:column="26">getInt</name></name><argument_list pos:line="61" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="61" pos:column="33">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="62" pos:column="17">setXinco_core_node_id</name><argument_list pos:line="62" pos:column="38">(<argument><expr><call><name><name pos:line="62" pos:column="39">rs</name><op:operator pos:line="62" pos:column="41">.</op:operator><name pos:line="62" pos:column="42">getInt</name></name><argument_list pos:line="62" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="62" pos:column="49">"xinco_core_node_id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="63" pos:column="17">setXinco_core_language</name><argument_list pos:line="63" pos:column="39">(<argument><expr><op:operator pos:line="63" pos:column="40">new</op:operator> <call><name pos:line="63" pos:column="44">XincoCoreLanguageServer</name><argument_list pos:line="63" pos:column="67">(<argument><expr><call><name><name pos:line="63" pos:column="68">rs</name><op:operator pos:line="63" pos:column="70">.</op:operator><name pos:line="63" pos:column="71">getInt</name></name><argument_list pos:line="63" pos:column="77">(<argument><expr><lit:literal type="string" pos:line="63" pos:column="78">"xinco_core_language_id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="63" pos:column="105">DBM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="64" pos:column="17">setXinco_core_data_type</name><argument_list pos:line="64" pos:column="40">(<argument><expr><op:operator pos:line="64" pos:column="41">new</op:operator> <call><name pos:line="64" pos:column="45">XincoCoreDataTypeServer</name><argument_list pos:line="64" pos:column="68">(<argument><expr><call><name><name pos:line="64" pos:column="69">rs</name><op:operator pos:line="64" pos:column="71">.</op:operator><name pos:line="64" pos:column="72">getInt</name></name><argument_list pos:line="64" pos:column="78">(<argument><expr><lit:literal type="string" pos:line="64" pos:column="79">"xinco_core_data_type_id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="64" pos:column="107">DBM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <comment type="line" pos:line="65" pos:column="17">//load logs</comment>
                <expr_stmt><expr><call><name pos:line="66" pos:column="17">setXinco_core_logs</name><argument_list pos:line="66" pos:column="35">(<argument><expr><call><name><name pos:line="66" pos:column="36">XincoCoreLogServer</name><op:operator pos:line="66" pos:column="54">.</op:operator><name pos:line="66" pos:column="55">getXincoCoreLogs</name></name><argument_list pos:line="66" pos:column="71">(<argument><expr><call><name><name pos:line="66" pos:column="72">rs</name><op:operator pos:line="66" pos:column="74">.</op:operator><name pos:line="66" pos:column="75">getInt</name></name><argument_list pos:line="66" pos:column="81">(<argument><expr><lit:literal type="string" pos:line="66" pos:column="82">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="66" pos:column="89">DBM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <comment type="line" pos:line="67" pos:column="17">//load add attributes</comment>
                <expr_stmt><expr><call><name pos:line="68" pos:column="17">setXinco_add_attributes</name><argument_list pos:line="68" pos:column="40">(<argument><expr><call><name><name pos:line="68" pos:column="41">XincoAddAttributeServer</name><op:operator pos:line="68" pos:column="64">.</op:operator><name pos:line="68" pos:column="65">getXincoAddAttributes</name></name><argument_list pos:line="68" pos:column="86">(<argument><expr><call><name><name pos:line="68" pos:column="87">rs</name><op:operator pos:line="68" pos:column="89">.</op:operator><name pos:line="68" pos:column="90">getInt</name></name><argument_list pos:line="68" pos:column="96">(<argument><expr><lit:literal type="string" pos:line="68" pos:column="97">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="68" pos:column="104">DBM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="69" pos:column="17">setDesignation</name><argument_list pos:line="69" pos:column="31">(<argument><expr><call><name><name pos:line="69" pos:column="32">rs</name><op:operator pos:line="69" pos:column="34">.</op:operator><name pos:line="69" pos:column="35">getString</name></name><argument_list pos:line="69" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="69" pos:column="45">"designation"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="70" pos:column="17">setStatus_number</name><argument_list pos:line="70" pos:column="33">(<argument><expr><call><name><name pos:line="70" pos:column="34">rs</name><op:operator pos:line="70" pos:column="36">.</op:operator><name pos:line="70" pos:column="37">getInt</name></name><argument_list pos:line="70" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="70" pos:column="44">"status_number"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <comment type="line" pos:line="71" pos:column="17">//load acl for this object</comment>
                <expr_stmt><expr><call><name pos:line="72" pos:column="17">setXinco_core_acl</name><argument_list pos:line="72" pos:column="34">(<argument><expr><call><name><name pos:line="72" pos:column="35">XincoCoreACEServer</name><op:operator pos:line="72" pos:column="53">.</op:operator><name pos:line="72" pos:column="54">getXincoCoreACL</name></name><argument_list pos:line="72" pos:column="69">(<argument><expr><call><name><name pos:line="72" pos:column="70">rs</name><op:operator pos:line="72" pos:column="72">.</op:operator><name pos:line="72" pos:column="73">getInt</name></name><argument_list pos:line="72" pos:column="79">(<argument><expr><lit:literal type="string" pos:line="72" pos:column="80">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="72" pos:column="87">"xinco_core_data_id"</lit:literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="109">DBM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></while>
            <if pos:line="74" pos:column="13">if <condition pos:line="74" pos:column="16">(<expr><name pos:line="74" pos:column="17">RowCount</name> <op:operator pos:line="74" pos:column="26">&lt;</op:operator> <lit:literal type="number" pos:line="74" pos:column="28">1</lit:literal></expr>)</condition><then pos:line="74" pos:column="30"> <block pos:line="74" pos:column="31">{
                <throw pos:line="75" pos:column="17">throw <expr><op:operator pos:line="75" pos:column="23">new</op:operator> <call><name pos:line="75" pos:column="27">XincoException</name><argument_list pos:line="75" pos:column="41">()</argument_list></call></expr>;</throw>
            }</block></then></if>

            <expr_stmt><expr><call><name><name pos:line="78" pos:column="13">stmt</name><op:operator pos:line="78" pos:column="17">.</op:operator><name pos:line="78" pos:column="18">close</name></name><argument_list pos:line="78" pos:column="23">()</argument_list></call></expr>;</expr_stmt>

        }</block> <catch pos:line="80" pos:column="11">catch <parameter_list pos:line="80" pos:column="17">(<param><decl><type><name pos:line="80" pos:column="18">Exception</name></type> <name pos:line="80" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="80" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="81" pos:column="13">getXinco_core_acl</name><argument_list pos:line="81" pos:column="30">()</argument_list></call><op:operator pos:line="81" pos:column="32">.</op:operator><call><name pos:line="81" pos:column="33">removeAllElements</name><argument_list pos:line="81" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
            <throw pos:line="82" pos:column="13">throw <expr><op:operator pos:line="82" pos:column="19">new</op:operator> <call><name pos:line="82" pos:column="23">XincoException</name><argument_list pos:line="82" pos:column="37">()</argument_list></call></expr>;</throw>
        }</block></catch></try>

    }</block></constructor>

    <comment type="line" pos:line="87" pos:column="5">//create data object for data structures</comment>
    <constructor><specifier pos:line="88" pos:column="5">public</specifier> <name pos:line="88" pos:column="12">XincoCoreDataServer</name><parameter_list pos:line="88" pos:column="31">(<param><decl><type><name pos:line="88" pos:column="32">int</name></type> <name pos:line="88" pos:column="36">attrID</name></decl></param>, <param><decl><type><name pos:line="88" pos:column="44">int</name></type> <name pos:line="88" pos:column="48">attrCNID</name></decl></param>, <param><decl><type><name pos:line="88" pos:column="58">int</name></type> <name pos:line="88" pos:column="62">attrLID</name></decl></param>, <param><decl><type><name pos:line="88" pos:column="71">int</name></type> <name pos:line="88" pos:column="75">attrDTID</name></decl></param>, <param><decl><type><name pos:line="88" pos:column="85">String</name></type> <name pos:line="88" pos:column="92">attrD</name></decl></param>, <param><decl><type><name pos:line="88" pos:column="99">int</name></type> <name pos:line="88" pos:column="103">attrSN</name></decl></param>, <param><decl><type><name pos:line="88" pos:column="111">XincoDBManager</name></type> <name pos:line="88" pos:column="126">DBM</name></decl></param>)</parameter_list> <throws pos:line="88" pos:column="131">throws <argument><expr><name pos:line="88" pos:column="138">XincoException</name></expr></argument></throws> <block pos:line="88" pos:column="153">{

        <expr_stmt><expr><call><name pos:line="90" pos:column="9">setId</name><argument_list pos:line="90" pos:column="14">(<argument><expr><name pos:line="90" pos:column="15">attrID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="91" pos:column="9">setXinco_core_node_id</name><argument_list pos:line="91" pos:column="30">(<argument><expr><name pos:line="91" pos:column="31">attrCNID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="92" pos:column="9">setXinco_core_language</name><argument_list pos:line="92" pos:column="31">(<argument><expr><op:operator pos:line="92" pos:column="32">new</op:operator> <call><name pos:line="92" pos:column="36">XincoCoreLanguageServer</name><argument_list pos:line="92" pos:column="59">(<argument><expr><name pos:line="92" pos:column="60">attrLID</name></expr></argument>, <argument><expr><name pos:line="92" pos:column="69">DBM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="93" pos:column="9">setXinco_core_data_type</name><argument_list pos:line="93" pos:column="32">(<argument><expr><op:operator pos:line="93" pos:column="33">new</op:operator> <call><name pos:line="93" pos:column="37">XincoCoreDataTypeServer</name><argument_list pos:line="93" pos:column="60">(<argument><expr><name pos:line="93" pos:column="61">attrDTID</name></expr></argument>, <argument><expr><name pos:line="93" pos:column="71">DBM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="line" pos:line="94" pos:column="9">//load logs</comment>
        <expr_stmt><expr><call><name pos:line="95" pos:column="9">setXinco_core_logs</name><argument_list pos:line="95" pos:column="27">(<argument><expr><call><name><name pos:line="95" pos:column="28">XincoCoreLogServer</name><op:operator pos:line="95" pos:column="46">.</op:operator><name pos:line="95" pos:column="47">getXincoCoreLogs</name></name><argument_list pos:line="95" pos:column="63">(<argument><expr><name pos:line="95" pos:column="64">attrID</name></expr></argument>, <argument><expr><name pos:line="95" pos:column="72">DBM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="line" pos:line="96" pos:column="9">//security: don't load add attribute, force direct access to data including check of access rights!</comment>
        <expr_stmt><expr><call><name pos:line="97" pos:column="9">setXinco_add_attributes</name><argument_list pos:line="97" pos:column="32">(<argument><expr><op:operator pos:line="97" pos:column="33">new</op:operator> <call><name pos:line="97" pos:column="37">Vector</name><argument_list pos:line="97" pos:column="43">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="98" pos:column="9">setDesignation</name><argument_list pos:line="98" pos:column="23">(<argument><expr><name pos:line="98" pos:column="24">attrD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="99" pos:column="9">setStatus_number</name><argument_list pos:line="99" pos:column="25">(<argument><expr><name pos:line="99" pos:column="26">attrSN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="line" pos:line="100" pos:column="9">//load acl for this object</comment>
        <expr_stmt><expr><call><name pos:line="101" pos:column="9">setXinco_core_acl</name><argument_list pos:line="101" pos:column="26">(<argument><expr><call><name><name pos:line="101" pos:column="27">XincoCoreACEServer</name><op:operator pos:line="101" pos:column="45">.</op:operator><name pos:line="101" pos:column="46">getXincoCoreACL</name></name><argument_list pos:line="101" pos:column="61">(<argument><expr><call><name pos:line="101" pos:column="62">getId</name><argument_list pos:line="101" pos:column="67">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="101" pos:column="71">"xinco_core_data_id"</lit:literal></expr></argument>, <argument><expr><name pos:line="101" pos:column="93">DBM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    }</block></constructor>

    <function><type><specifier pos:line="105" pos:column="5">public</specifier> <name pos:line="105" pos:column="12">void</name></type> <name pos:line="105" pos:column="17">setUser</name><parameter_list pos:line="105" pos:column="24">(<param><decl><type><name pos:line="105" pos:column="25">XincoCoreUserServer</name></type> <name pos:line="105" pos:column="45">user</name></decl></param>)</parameter_list> <block pos:line="105" pos:column="51">{
        <expr_stmt><expr><name><name pos:line="106" pos:column="9">this</name><op:operator pos:line="106" pos:column="13">.</op:operator><name pos:line="106" pos:column="14">user</name></name> <op:operator pos:line="106" pos:column="19">=</op:operator> <name pos:line="106" pos:column="21">user</name></expr>;</expr_stmt>
    }</block></function>

    <comment type="block" format="javadoc" pos:line="109" pos:column="5">/**
     * This will get the latest major revision. Basically the last version
     * with a '0' as a mid version
     * @param xinco_core_data_id 
     * @param DBM
     * @return Path to last major version
     * @throws SQLException
     * @throws XincoException
     */</comment>
    <function><type><specifier pos:line="118" pos:column="5">public</specifier> <specifier pos:line="118" pos:column="12">static</specifier> <name pos:line="118" pos:column="19">String</name></type> <name pos:line="118" pos:column="26">getLastMajorVersionDataPath</name><parameter_list pos:line="118" pos:column="53">(<param><decl><type><name pos:line="118" pos:column="54">int</name></type> <name pos:line="118" pos:column="58">xinco_core_data_id</name></decl></param>, <param><decl><type><name pos:line="118" pos:column="78">XincoDBManager</name></type> <name pos:line="118" pos:column="93">DBM</name></decl></param>)</parameter_list> <throws pos:line="118" pos:column="98">throws <argument><expr><name pos:line="118" pos:column="105">SQLException</name></expr></argument>, <argument><expr><name pos:line="118" pos:column="119">XincoException</name></expr></argument></throws> <block pos:line="118" pos:column="134">{
        <decl_stmt><decl><type><name pos:line="119" pos:column="9">Statement</name></type> <name pos:line="119" pos:column="19">stmt</name></decl>;</decl_stmt>
        <expr_stmt><expr><name pos:line="120" pos:column="9">stmt</name> <op:operator pos:line="120" pos:column="14">=</op:operator> <call><name><name pos:line="120" pos:column="16">DBM</name><op:operator pos:line="120" pos:column="19">.</op:operator><name pos:line="120" pos:column="20">con</name><op:operator pos:line="120" pos:column="23">.</op:operator><name pos:line="120" pos:column="24">createStatement</name></name><argument_list pos:line="120" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name pos:line="121" pos:column="9">ResultSet</name></type> <name pos:line="121" pos:column="19">rs</name> <init pos:line="121" pos:column="22">= <expr><call><name><name pos:line="121" pos:column="24">stmt</name><op:operator pos:line="121" pos:column="28">.</op:operator><name pos:line="121" pos:column="29">executeQuery</name></name><argument_list pos:line="121" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="121" pos:column="42">"select id from xinco.xinco_core_log "</lit:literal> <op:operator pos:line="121" pos:column="81">+</op:operator>
                <lit:literal type="string" pos:line="122" pos:column="17">"where xinco_core_data_id = "</lit:literal> <op:operator pos:line="122" pos:column="47">+</op:operator> <name pos:line="122" pos:column="49">xinco_core_data_id</name> <op:operator pos:line="122" pos:column="68">+</op:operator> <lit:literal type="string" pos:line="122" pos:column="70">" and version_mid='0' "</lit:literal> <op:operator pos:line="122" pos:column="94">+</op:operator>
                <lit:literal type="string" pos:line="123" pos:column="17">"and op_code="</lit:literal> <op:operator pos:line="123" pos:column="32">+</op:operator> <op:operator pos:line="123" pos:column="34">(</op:operator><call><name><name pos:line="123" pos:column="35">OPCode</name><op:operator pos:line="123" pos:column="41">.</op:operator><name pos:line="123" pos:column="42">CHECKIN</name><op:operator pos:line="123" pos:column="49">.</op:operator><name pos:line="123" pos:column="50">ordinal</name></name><argument_list pos:line="123" pos:column="57">()</argument_list></call> <op:operator pos:line="123" pos:column="60">+</op:operator> <lit:literal type="number" pos:line="123" pos:column="62">1</lit:literal><op:operator pos:line="123" pos:column="63">)</op:operator> <op:operator pos:line="123" pos:column="65">+</op:operator> <lit:literal type="string" pos:line="123" pos:column="67">" order by id desc"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if pos:line="124" pos:column="9">if <condition pos:line="124" pos:column="12">(<expr><call><name><name pos:line="124" pos:column="13">rs</name><op:operator pos:line="124" pos:column="15">.</op:operator><name pos:line="124" pos:column="16">next</name></name><argument_list pos:line="124" pos:column="20">()</argument_list></call></expr>)</condition><then pos:line="124" pos:column="23"> <block pos:line="124" pos:column="24">{
            <decl_stmt><decl><type><name pos:line="125" pos:column="13">XincoCoreLogServer</name></type> <name pos:line="125" pos:column="32">log</name> <init pos:line="125" pos:column="36">= <expr><op:operator pos:line="125" pos:column="38">new</op:operator> <call><name pos:line="125" pos:column="42">XincoCoreLogServer</name><argument_list pos:line="125" pos:column="60">(<argument><expr><call><name><name pos:line="125" pos:column="61">rs</name><op:operator pos:line="125" pos:column="63">.</op:operator><name pos:line="125" pos:column="64">getInt</name></name><argument_list pos:line="125" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="125" pos:column="71">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="125" pos:column="78">DBM</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="126" pos:column="13">System</name><op:operator pos:line="126" pos:column="19">.</op:operator><name pos:line="126" pos:column="20">out</name><op:operator pos:line="126" pos:column="23">.</op:operator><name pos:line="126" pos:column="24">println</name></name><argument_list pos:line="126" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="126" pos:column="32">"Getting path: "</lit:literal> <op:operator pos:line="126" pos:column="49">+</op:operator> <call><name><name pos:line="126" pos:column="51">XincoCoreDataServer</name><op:operator pos:line="126" pos:column="70">.</op:operator><name pos:line="126" pos:column="71">getXincoCoreDataPath</name></name><argument_list pos:line="126" pos:column="91">(<argument><expr><name><name pos:line="126" pos:column="92">DBM</name><op:operator pos:line="126" pos:column="95">.</op:operator><name pos:line="126" pos:column="96">config</name><op:operator pos:line="126" pos:column="102">.</op:operator><name pos:line="126" pos:column="103">FileRepositoryPath</name></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="123">xinco_core_data_id</name></expr></argument>, <argument><expr><name pos:line="126" pos:column="143">xinco_core_data_id</name> <op:operator pos:line="126" pos:column="162">+</op:operator> <lit:literal type="string" pos:line="126" pos:column="164">"-"</lit:literal> <op:operator pos:line="126" pos:column="168">+</op:operator> <call><name><name pos:line="126" pos:column="170">log</name><op:operator pos:line="126" pos:column="173">.</op:operator><name pos:line="126" pos:column="174">getId</name></name><argument_list pos:line="126" pos:column="179">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="127" pos:column="13">return <expr><call><name><name pos:line="127" pos:column="20">XincoCoreDataServer</name><op:operator pos:line="127" pos:column="39">.</op:operator><name pos:line="127" pos:column="40">getXincoCoreDataPath</name></name><argument_list pos:line="127" pos:column="60">(<argument><expr><name><name pos:line="127" pos:column="61">DBM</name><op:operator pos:line="127" pos:column="64">.</op:operator><name pos:line="127" pos:column="65">config</name><op:operator pos:line="127" pos:column="71">.</op:operator><name pos:line="127" pos:column="72">FileRepositoryPath</name></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="92">xinco_core_data_id</name></expr></argument>, <argument><expr><name pos:line="127" pos:column="112">xinco_core_data_id</name> <op:operator pos:line="127" pos:column="131">+</op:operator> <lit:literal type="string" pos:line="127" pos:column="133">"-"</lit:literal> <op:operator pos:line="127" pos:column="137">+</op:operator> <call><name><name pos:line="127" pos:column="139">log</name><op:operator pos:line="127" pos:column="142">.</op:operator><name pos:line="127" pos:column="143">getId</name></name><argument_list pos:line="127" pos:column="148">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        }</block></then> <else pos:line="128" pos:column="11">else <block pos:line="128" pos:column="16">{
            <throw pos:line="129" pos:column="13">throw <expr><op:operator pos:line="129" pos:column="19">new</op:operator> <call><name pos:line="129" pos:column="23">XincoException</name><argument_list pos:line="129" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="129" pos:column="38">"No major log history for XincoCoreData with id: "</lit:literal> <op:operator pos:line="129" pos:column="89">+</op:operator> <name pos:line="129" pos:column="91">xinco_core_data_id</name></expr></argument>)</argument_list></call></expr>;</throw>
        }</block></else></if>
    }</block></function>

    <comment type="line" pos:line="133" pos:column="5">//write to db</comment>
    <function><type><specifier pos:line="134" pos:column="5">public</specifier> <name pos:line="134" pos:column="12">int</name></type> <name pos:line="134" pos:column="16">write2DB</name><parameter_list pos:line="134" pos:column="24">(<param><decl><type><name pos:line="134" pos:column="25">XincoDBManager</name></type> <name pos:line="134" pos:column="40">DBM</name></decl></param>)</parameter_list> <throws pos:line="134" pos:column="45">throws <argument><expr><name pos:line="134" pos:column="52">XincoException</name></expr></argument></throws> <block pos:line="134" pos:column="67">{
        <decl_stmt><decl><type><name pos:line="135" pos:column="9">int</name></type> <name pos:line="135" pos:column="13">i</name> <init pos:line="135" pos:column="15">= <expr><lit:literal type="number" pos:line="135" pos:column="17">0</lit:literal></expr></init></decl>;</decl_stmt>
        <try pos:line="136" pos:column="9">try <block pos:line="136" pos:column="13">{

            <decl_stmt><decl><type><name pos:line="138" pos:column="13">Statement</name></type> <name pos:line="138" pos:column="23">stmt</name></decl>;</decl_stmt>

            <if pos:line="140" pos:column="13">if <condition pos:line="140" pos:column="16">(<expr><call><name pos:line="140" pos:column="17">getId</name><argument_list pos:line="140" pos:column="22">()</argument_list></call> <op:operator pos:line="140" pos:column="25">&gt;</op:operator> <lit:literal type="number" pos:line="140" pos:column="27">0</lit:literal></expr>)</condition><then pos:line="140" pos:column="29"> <block pos:line="140" pos:column="30">{
                <expr_stmt><expr><name pos:line="141" pos:column="17">stmt</name> <op:operator pos:line="141" pos:column="22">=</op:operator> <call><name><name pos:line="141" pos:column="24">DBM</name><op:operator pos:line="141" pos:column="27">.</op:operator><name pos:line="141" pos:column="28">con</name><op:operator pos:line="141" pos:column="31">.</op:operator><name pos:line="141" pos:column="32">createStatement</name></name><argument_list pos:line="141" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name pos:line="142" pos:column="17">XincoCoreAuditServer</name></type> <name pos:line="142" pos:column="38">audit</name> <init pos:line="142" pos:column="44">= <expr><op:operator pos:line="142" pos:column="46">new</op:operator> <call><name pos:line="142" pos:column="50">XincoCoreAuditServer</name><argument_list pos:line="142" pos:column="70">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="143" pos:column="17">audit</name><op:operator pos:line="143" pos:column="22">.</op:operator><name pos:line="143" pos:column="23">updateAuditTrail</name></name><argument_list pos:line="143" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="143" pos:column="40">"xinco_core_data"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="143" pos:column="59">new</op:operator> <name><name pos:line="143" pos:column="63">String</name><index pos:line="143" pos:column="69">[]</index></name><block pos:line="143" pos:column="71">{<expr><lit:literal type="string" pos:line="143" pos:column="72">"id ="</lit:literal> <op:operator pos:line="143" pos:column="79">+</op:operator> <call><name pos:line="143" pos:column="81">getId</name><argument_list pos:line="143" pos:column="86">()</argument_list></call></expr>}</block></expr></argument>,
                        <argument><expr><name pos:line="144" pos:column="25">DBM</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="144" pos:column="30">"audit.data.change"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="144" pos:column="51">this</name><op:operator pos:line="144" pos:column="55">.</op:operator><name pos:line="144" pos:column="56">getChangerID</name></name><argument_list pos:line="144" pos:column="68">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="145" pos:column="17">stmt</name><op:operator pos:line="145" pos:column="21">.</op:operator><name pos:line="145" pos:column="22">executeUpdate</name></name><argument_list pos:line="145" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="145" pos:column="36">"UPDATE xinco_core_data SET xinco_core_node_id="</lit:literal> <op:operator pos:line="145" pos:column="85">+</op:operator>
                        <call><name pos:line="146" pos:column="25">getXinco_core_node_id</name><argument_list pos:line="146" pos:column="46">()</argument_list></call> <op:operator pos:line="146" pos:column="49">+</op:operator> <lit:literal type="string" pos:line="146" pos:column="51">", xinco_core_language_id="</lit:literal> <op:operator pos:line="146" pos:column="79">+</op:operator>
                        <call><name pos:line="147" pos:column="25">getXinco_core_language</name><argument_list pos:line="147" pos:column="47">()</argument_list></call><op:operator pos:line="147" pos:column="49">.</op:operator><call><name pos:line="147" pos:column="50">getId</name><argument_list pos:line="147" pos:column="55">()</argument_list></call> <op:operator pos:line="147" pos:column="58">+</op:operator> <lit:literal type="string" pos:line="147" pos:column="60">", xinco_core_data_type_id="</lit:literal> <op:operator pos:line="147" pos:column="89">+</op:operator>
                        <call><name pos:line="148" pos:column="25">getXinco_core_data_type</name><argument_list pos:line="148" pos:column="48">()</argument_list></call><op:operator pos:line="148" pos:column="50">.</op:operator><call><name pos:line="148" pos:column="51">getId</name><argument_list pos:line="148" pos:column="56">()</argument_list></call> <op:operator pos:line="148" pos:column="59">+</op:operator> <lit:literal type="string" pos:line="148" pos:column="61">", designation='"</lit:literal> <op:operator pos:line="148" pos:column="79">+</op:operator>
                        <call><name pos:line="149" pos:column="25">getDesignation</name><argument_list pos:line="149" pos:column="39">()</argument_list></call><op:operator pos:line="149" pos:column="41">.</op:operator><call><name pos:line="149" pos:column="42">replaceAll</name><argument_list pos:line="149" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="149" pos:column="53">"'"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="149" pos:column="58">"\\\\'"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="149" pos:column="67">+</op:operator> <lit:literal type="string" pos:line="149" pos:column="69">"', status_number="</lit:literal> <op:operator pos:line="149" pos:column="89">+</op:operator>
                        <call><name pos:line="150" pos:column="25">getStatus_number</name><argument_list pos:line="150" pos:column="41">()</argument_list></call> <op:operator pos:line="150" pos:column="44">+</op:operator> <lit:literal type="string" pos:line="150" pos:column="46">" WHERE id ="</lit:literal> <op:operator pos:line="150" pos:column="60">+</op:operator> <call><name pos:line="150" pos:column="62">getId</name><argument_list pos:line="150" pos:column="67">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="151" pos:column="17">stmt</name><op:operator pos:line="151" pos:column="21">.</op:operator><name pos:line="151" pos:column="22">close</name></name><argument_list pos:line="151" pos:column="27">()</argument_list></call></expr>;</expr_stmt>

            }</block></then> <else pos:line="153" pos:column="15">else <block pos:line="153" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="154" pos:column="17">setId</name><argument_list pos:line="154" pos:column="22">(<argument><expr><call><name><name pos:line="154" pos:column="23">DBM</name><op:operator pos:line="154" pos:column="26">.</op:operator><name pos:line="154" pos:column="27">getNewID</name></name><argument_list pos:line="154" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="154" pos:column="36">"xinco_core_data"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="155" pos:column="17">stmt</name> <op:operator pos:line="155" pos:column="22">=</op:operator> <call><name><name pos:line="155" pos:column="24">DBM</name><op:operator pos:line="155" pos:column="27">.</op:operator><name pos:line="155" pos:column="28">con</name><op:operator pos:line="155" pos:column="31">.</op:operator><name pos:line="155" pos:column="32">createStatement</name></name><argument_list pos:line="155" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="156" pos:column="17">stmt</name><op:operator pos:line="156" pos:column="21">.</op:operator><name pos:line="156" pos:column="22">executeUpdate</name></name><argument_list pos:line="156" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="156" pos:column="36">"INSERT INTO xinco_core_data VALUES ("</lit:literal> <op:operator pos:line="156" pos:column="75">+</op:operator> <call><name pos:line="156" pos:column="77">getId</name><argument_list pos:line="156" pos:column="82">()</argument_list></call> <op:operator pos:line="156" pos:column="85">+</op:operator> <lit:literal type="string" pos:line="156" pos:column="87">", "</lit:literal> <op:operator pos:line="156" pos:column="92">+</op:operator> <call><name pos:line="156" pos:column="94">getXinco_core_node_id</name><argument_list pos:line="156" pos:column="115">()</argument_list></call> <op:operator pos:line="156" pos:column="118">+</op:operator> <lit:literal type="string" pos:line="156" pos:column="120">", "</lit:literal> <op:operator pos:line="156" pos:column="125">+</op:operator> <call><name pos:line="156" pos:column="127">getXinco_core_language</name><argument_list pos:line="156" pos:column="149">()</argument_list></call><op:operator pos:line="156" pos:column="151">.</op:operator><call><name pos:line="156" pos:column="152">getId</name><argument_list pos:line="156" pos:column="157">()</argument_list></call> <op:operator pos:line="156" pos:column="160">+</op:operator> <lit:literal type="string" pos:line="156" pos:column="162">", "</lit:literal> <op:operator pos:line="156" pos:column="167">+</op:operator> <call><name pos:line="156" pos:column="169">getXinco_core_data_type</name><argument_list pos:line="156" pos:column="192">()</argument_list></call><op:operator pos:line="156" pos:column="194">.</op:operator><call><name pos:line="156" pos:column="195">getId</name><argument_list pos:line="156" pos:column="200">()</argument_list></call> <op:operator pos:line="156" pos:column="203">+</op:operator> <lit:literal type="string" pos:line="156" pos:column="205">", '"</lit:literal> <op:operator pos:line="156" pos:column="211">+</op:operator> <call><name pos:line="156" pos:column="213">getDesignation</name><argument_list pos:line="156" pos:column="227">()</argument_list></call><op:operator pos:line="156" pos:column="229">.</op:operator><call><name pos:line="156" pos:column="230">replaceAll</name><argument_list pos:line="156" pos:column="240">(<argument><expr><lit:literal type="string" pos:line="156" pos:column="241">"'"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="156" pos:column="246">"\\\\'"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="156" pos:column="255">+</op:operator> <lit:literal type="string" pos:line="156" pos:column="257">"', "</lit:literal> <op:operator pos:line="156" pos:column="263">+</op:operator> <call><name pos:line="156" pos:column="265">getStatus_number</name><argument_list pos:line="156" pos:column="281">()</argument_list></call> <op:operator pos:line="156" pos:column="284">+</op:operator> <lit:literal type="string" pos:line="156" pos:column="286">")"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="157" pos:column="17">stmt</name><op:operator pos:line="157" pos:column="21">.</op:operator><name pos:line="157" pos:column="22">close</name></name><argument_list pos:line="157" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>

            <comment type="line" pos:line="160" pos:column="13">//write add attributes</comment>
            <expr_stmt><expr><name pos:line="161" pos:column="13">stmt</name> <op:operator pos:line="161" pos:column="18">=</op:operator> <call><name><name pos:line="161" pos:column="20">DBM</name><op:operator pos:line="161" pos:column="23">.</op:operator><name pos:line="161" pos:column="24">con</name><op:operator pos:line="161" pos:column="27">.</op:operator><name pos:line="161" pos:column="28">createStatement</name></name><argument_list pos:line="161" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="162" pos:column="13">stmt</name><op:operator pos:line="162" pos:column="17">.</op:operator><name pos:line="162" pos:column="18">executeUpdate</name></name><argument_list pos:line="162" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="162" pos:column="32">"DELETE FROM xinco_add_attribute WHERE xinco_core_data_id="</lit:literal> <op:operator pos:line="162" pos:column="92">+</op:operator> <call><name pos:line="162" pos:column="94">getId</name><argument_list pos:line="162" pos:column="99">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="163" pos:column="13">stmt</name><op:operator pos:line="163" pos:column="17">.</op:operator><name pos:line="163" pos:column="18">close</name></name><argument_list pos:line="163" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="164" pos:column="13">XincoAddAttributeServer</name></type> <name pos:line="164" pos:column="37">xaas</name></decl>;</decl_stmt>
            <for pos:line="165" pos:column="13">for (<init><expr><name pos:line="165" pos:column="18">i</name> <op:operator pos:line="165" pos:column="20">=</op:operator> <lit:literal type="number" pos:line="165" pos:column="22">0</lit:literal></expr>;</init> <condition><expr><name pos:line="165" pos:column="25">i</name> <op:operator pos:line="165" pos:column="27">&lt;</op:operator> <call><name pos:line="165" pos:column="29">getXinco_add_attributes</name><argument_list pos:line="165" pos:column="52">()</argument_list></call><op:operator pos:line="165" pos:column="54">.</op:operator><call><name pos:line="165" pos:column="55">size</name><argument_list pos:line="165" pos:column="59">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="165" pos:column="63">i</name><op:operator pos:line="165" pos:column="64">++</op:operator></expr></incr>) <block pos:line="165" pos:column="68">{
                <expr_stmt><expr><op:operator pos:line="166" pos:column="17">(</op:operator><op:operator pos:line="166" pos:column="18">(</op:operator><name pos:line="166" pos:column="19">XincoAddAttribute</name><op:operator pos:line="166" pos:column="36">)</op:operator> <call><name pos:line="166" pos:column="38">getXinco_add_attributes</name><argument_list pos:line="166" pos:column="61">()</argument_list></call><op:operator pos:line="166" pos:column="63">.</op:operator><call><name pos:line="166" pos:column="64">elementAt</name><argument_list pos:line="166" pos:column="73">(<argument><expr><name pos:line="166" pos:column="74">i</name></expr></argument>)</argument_list></call><op:operator pos:line="166" pos:column="76">)</op:operator><op:operator pos:line="166" pos:column="77">.</op:operator><call><name pos:line="166" pos:column="78">setXinco_core_data_id</name><argument_list pos:line="166" pos:column="99">(<argument><expr><call><name pos:line="166" pos:column="100">getId</name><argument_list pos:line="166" pos:column="105">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <comment type="line" pos:line="167" pos:column="17">//copy fields from XincoAddAttribute to XincoAddAttributeServer</comment>
                <expr_stmt><expr><name pos:line="168" pos:column="17">xaas</name> <op:operator pos:line="168" pos:column="22">=</op:operator> <op:operator pos:line="168" pos:column="24">new</op:operator> <call><name pos:line="168" pos:column="28">XincoAddAttributeServer</name><argument_list pos:line="168" pos:column="51">(<argument><expr><op:operator pos:line="168" pos:column="52">(</op:operator><op:operator pos:line="168" pos:column="53">(</op:operator><name pos:line="168" pos:column="54">XincoAddAttribute</name><op:operator pos:line="168" pos:column="71">)</op:operator> <call><name pos:line="168" pos:column="73">getXinco_add_attributes</name><argument_list pos:line="168" pos:column="96">()</argument_list></call><op:operator pos:line="168" pos:column="98">.</op:operator><call><name pos:line="168" pos:column="99">elementAt</name><argument_list pos:line="168" pos:column="108">(<argument><expr><name pos:line="168" pos:column="109">i</name></expr></argument>)</argument_list></call><op:operator pos:line="168" pos:column="111">)</op:operator><op:operator pos:line="168" pos:column="112">.</op:operator><call><name pos:line="168" pos:column="113">getXinco_core_data_id</name><argument_list pos:line="168" pos:column="134">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="168" pos:column="138">(</op:operator><op:operator pos:line="168" pos:column="139">(</op:operator><name pos:line="168" pos:column="140">XincoAddAttribute</name><op:operator pos:line="168" pos:column="157">)</op:operator> <call><name pos:line="168" pos:column="159">getXinco_add_attributes</name><argument_list pos:line="168" pos:column="182">()</argument_list></call><op:operator pos:line="168" pos:column="184">.</op:operator><call><name pos:line="168" pos:column="185">elementAt</name><argument_list pos:line="168" pos:column="194">(<argument><expr><name pos:line="168" pos:column="195">i</name></expr></argument>)</argument_list></call><op:operator pos:line="168" pos:column="197">)</op:operator><op:operator pos:line="168" pos:column="198">.</op:operator><call><name pos:line="168" pos:column="199">getAttribute_id</name><argument_list pos:line="168" pos:column="214">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="168" pos:column="218">(</op:operator><op:operator pos:line="168" pos:column="219">(</op:operator><name pos:line="168" pos:column="220">XincoAddAttribute</name><op:operator pos:line="168" pos:column="237">)</op:operator> <call><name pos:line="168" pos:column="239">getXinco_add_attributes</name><argument_list pos:line="168" pos:column="262">()</argument_list></call><op:operator pos:line="168" pos:column="264">.</op:operator><call><name pos:line="168" pos:column="265">elementAt</name><argument_list pos:line="168" pos:column="274">(<argument><expr><name pos:line="168" pos:column="275">i</name></expr></argument>)</argument_list></call><op:operator pos:line="168" pos:column="277">)</op:operator><op:operator pos:line="168" pos:column="278">.</op:operator><call><name pos:line="168" pos:column="279">getAttrib_int</name><argument_list pos:line="168" pos:column="292">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="168" pos:column="296">(</op:operator><op:operator pos:line="168" pos:column="297">(</op:operator><name pos:line="168" pos:column="298">XincoAddAttribute</name><op:operator pos:line="168" pos:column="315">)</op:operator> <call><name pos:line="168" pos:column="317">getXinco_add_attributes</name><argument_list pos:line="168" pos:column="340">()</argument_list></call><op:operator pos:line="168" pos:column="342">.</op:operator><call><name pos:line="168" pos:column="343">elementAt</name><argument_list pos:line="168" pos:column="352">(<argument><expr><name pos:line="168" pos:column="353">i</name></expr></argument>)</argument_list></call><op:operator pos:line="168" pos:column="355">)</op:operator><op:operator pos:line="168" pos:column="356">.</op:operator><call><name pos:line="168" pos:column="357">getAttrib_unsignedint</name><argument_list pos:line="168" pos:column="378">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="168" pos:column="382">(</op:operator><op:operator pos:line="168" pos:column="383">(</op:operator><name pos:line="168" pos:column="384">XincoAddAttribute</name><op:operator pos:line="168" pos:column="401">)</op:operator> <call><name pos:line="168" pos:column="403">getXinco_add_attributes</name><argument_list pos:line="168" pos:column="426">()</argument_list></call><op:operator pos:line="168" pos:column="428">.</op:operator><call><name pos:line="168" pos:column="429">elementAt</name><argument_list pos:line="168" pos:column="438">(<argument><expr><name pos:line="168" pos:column="439">i</name></expr></argument>)</argument_list></call><op:operator pos:line="168" pos:column="441">)</op:operator><op:operator pos:line="168" pos:column="442">.</op:operator><call><name pos:line="168" pos:column="443">getAttrib_double</name><argument_list pos:line="168" pos:column="459">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="168" pos:column="463">(</op:operator><op:operator pos:line="168" pos:column="464">(</op:operator><name pos:line="168" pos:column="465">XincoAddAttribute</name><op:operator pos:line="168" pos:column="482">)</op:operator> <call><name pos:line="168" pos:column="484">getXinco_add_attributes</name><argument_list pos:line="168" pos:column="507">()</argument_list></call><op:operator pos:line="168" pos:column="509">.</op:operator><call><name pos:line="168" pos:column="510">elementAt</name><argument_list pos:line="168" pos:column="519">(<argument><expr><name pos:line="168" pos:column="520">i</name></expr></argument>)</argument_list></call><op:operator pos:line="168" pos:column="522">)</op:operator><op:operator pos:line="168" pos:column="523">.</op:operator><call><name pos:line="168" pos:column="524">getAttrib_varchar</name><argument_list pos:line="168" pos:column="541">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="168" pos:column="545">(</op:operator><op:operator pos:line="168" pos:column="546">(</op:operator><name pos:line="168" pos:column="547">XincoAddAttribute</name><op:operator pos:line="168" pos:column="564">)</op:operator> <call><name pos:line="168" pos:column="566">getXinco_add_attributes</name><argument_list pos:line="168" pos:column="589">()</argument_list></call><op:operator pos:line="168" pos:column="591">.</op:operator><call><name pos:line="168" pos:column="592">elementAt</name><argument_list pos:line="168" pos:column="601">(<argument><expr><name pos:line="168" pos:column="602">i</name></expr></argument>)</argument_list></call><op:operator pos:line="168" pos:column="604">)</op:operator><op:operator pos:line="168" pos:column="605">.</op:operator><call><name pos:line="168" pos:column="606">getAttrib_text</name><argument_list pos:line="168" pos:column="620">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="168" pos:column="624">(</op:operator><op:operator pos:line="168" pos:column="625">(</op:operator><name pos:line="168" pos:column="626">XincoAddAttribute</name><op:operator pos:line="168" pos:column="643">)</op:operator> <call><name pos:line="168" pos:column="645">getXinco_add_attributes</name><argument_list pos:line="168" pos:column="668">()</argument_list></call><op:operator pos:line="168" pos:column="670">.</op:operator><call><name pos:line="168" pos:column="671">elementAt</name><argument_list pos:line="168" pos:column="680">(<argument><expr><name pos:line="168" pos:column="681">i</name></expr></argument>)</argument_list></call><op:operator pos:line="168" pos:column="683">)</op:operator><op:operator pos:line="168" pos:column="684">.</op:operator><call><name pos:line="168" pos:column="685">getAttrib_datetime</name><argument_list pos:line="168" pos:column="703">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="169" pos:column="17">xaas</name><op:operator pos:line="169" pos:column="21">.</op:operator><name pos:line="169" pos:column="22">write2DB</name></name><argument_list pos:line="169" pos:column="30">(<argument><expr><name pos:line="169" pos:column="31">DBM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></for>
            <expr_stmt><expr><call><name><name pos:line="171" pos:column="13">DBM</name><op:operator pos:line="171" pos:column="16">.</op:operator><name pos:line="171" pos:column="17">con</name><op:operator pos:line="171" pos:column="20">.</op:operator><name pos:line="171" pos:column="21">commit</name></name><argument_list pos:line="171" pos:column="27">()</argument_list></call></expr>;</expr_stmt>

        }</block> <catch pos:line="173" pos:column="11">catch <parameter_list pos:line="173" pos:column="17">(<param><decl><type><name pos:line="173" pos:column="18">Exception</name></type> <name pos:line="173" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="173" pos:column="31">{
            <try pos:line="174" pos:column="13">try <block pos:line="174" pos:column="17">{
                <expr_stmt><expr><call><name><name pos:line="175" pos:column="17">DBM</name><op:operator pos:line="175" pos:column="20">.</op:operator><name pos:line="175" pos:column="21">con</name><op:operator pos:line="175" pos:column="24">.</op:operator><name pos:line="175" pos:column="25">rollback</name></name><argument_list pos:line="175" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            }</block> <catch pos:line="176" pos:column="15">catch <parameter_list pos:line="176" pos:column="21">(<param><decl><type><name pos:line="176" pos:column="22">Exception</name></type> <name pos:line="176" pos:column="32">erollback</name></decl></param>)</parameter_list> <block pos:line="176" pos:column="43">{
            }</block></catch></try>
            <throw pos:line="178" pos:column="13">throw <expr><op:operator pos:line="178" pos:column="19">new</op:operator> <call><name pos:line="178" pos:column="23">XincoException</name><argument_list pos:line="178" pos:column="37">()</argument_list></call></expr>;</throw>
        }</block></catch></try>
        <return pos:line="180" pos:column="9">return <expr><call><name pos:line="180" pos:column="16">getId</name><argument_list pos:line="180" pos:column="21">()</argument_list></call></expr>;</return>
    }</block></function>

    <function><type><specifier pos:line="183" pos:column="5">public</specifier> <specifier pos:line="183" pos:column="12">static</specifier> <name pos:line="183" pos:column="19">void</name></type> <name pos:line="183" pos:column="24">removeFromDB</name><parameter_list pos:line="183" pos:column="36">(<param><decl><type><name pos:line="183" pos:column="37">XincoDBManager</name></type> <name pos:line="183" pos:column="52">DBM</name></decl></param>, <param><decl><type><name pos:line="183" pos:column="57">int</name></type> <name pos:line="183" pos:column="61">userID</name></decl></param>, <param><decl><type><name pos:line="183" pos:column="69">int</name></type> <name pos:line="183" pos:column="73">id</name></decl></param>)</parameter_list> <throws pos:line="183" pos:column="77">throws <argument><expr><name pos:line="183" pos:column="84">XincoException</name></expr></argument></throws> <block pos:line="183" pos:column="99">{
        <try pos:line="184" pos:column="9">try <block pos:line="184" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="185" pos:column="13">Statement</name></type> <name pos:line="185" pos:column="23">stmt</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="186" pos:column="13">XincoCoreAuditServer</name></type> <name pos:line="186" pos:column="34">audit</name> <init pos:line="186" pos:column="40">= <expr><op:operator pos:line="186" pos:column="42">new</op:operator> <call><name pos:line="186" pos:column="46">XincoCoreAuditServer</name><argument_list pos:line="186" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <comment type="block" pos:line="187" pos:column="13">/*
             * Aduit Trail Table (*_t) cannot handle multiple row changes!!!
            audit.updateAuditTrail("xinco_core_log",new String [] {"id ="+id},
            DBM,"audit.general.delete",userID);
             */</comment>
            <expr_stmt><expr><name pos:line="192" pos:column="13">stmt</name> <op:operator pos:line="192" pos:column="18">=</op:operator> <call><name><name pos:line="192" pos:column="20">DBM</name><op:operator pos:line="192" pos:column="23">.</op:operator><name pos:line="192" pos:column="24">con</name><op:operator pos:line="192" pos:column="27">.</op:operator><name pos:line="192" pos:column="28">createStatement</name></name><argument_list pos:line="192" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="193" pos:column="13">stmt</name><op:operator pos:line="193" pos:column="17">.</op:operator><name pos:line="193" pos:column="18">executeUpdate</name></name><argument_list pos:line="193" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="193" pos:column="32">"DELETE FROM xinco_core_log WHERE xinco_core_data_id="</lit:literal> <op:operator pos:line="193" pos:column="87">+</op:operator> <name pos:line="193" pos:column="89">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="194" pos:column="13">stmt</name><op:operator pos:line="194" pos:column="17">.</op:operator><name pos:line="194" pos:column="18">close</name></name><argument_list pos:line="194" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
            <comment type="block" pos:line="195" pos:column="13">/*
             * Aduit Trail Table (*_t) cannot handle multiple row changes!!!
            audit.updateAuditTrail("xinco_core_ace",new String [] {"id ="+id},
            DBM,"audit.general.delete",userID);
             */</comment>
            <expr_stmt><expr><name pos:line="200" pos:column="13">stmt</name> <op:operator pos:line="200" pos:column="18">=</op:operator> <call><name><name pos:line="200" pos:column="20">DBM</name><op:operator pos:line="200" pos:column="23">.</op:operator><name pos:line="200" pos:column="24">con</name><op:operator pos:line="200" pos:column="27">.</op:operator><name pos:line="200" pos:column="28">createStatement</name></name><argument_list pos:line="200" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="201" pos:column="13">stmt</name><op:operator pos:line="201" pos:column="17">.</op:operator><name pos:line="201" pos:column="18">executeUpdate</name></name><argument_list pos:line="201" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="201" pos:column="32">"DELETE FROM xinco_core_ace WHERE xinco_core_data_id="</lit:literal> <op:operator pos:line="201" pos:column="87">+</op:operator> <name pos:line="201" pos:column="89">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="202" pos:column="13">stmt</name><op:operator pos:line="202" pos:column="17">.</op:operator><name pos:line="202" pos:column="18">close</name></name><argument_list pos:line="202" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
            <comment type="block" pos:line="203" pos:column="13">/*
             * Aduit Trail Table (*_t) cannot handle multiple row changes!!!
            audit.updateAuditTrail("xinco_add_attribute",new String [] {"id ="+id},
            DBM,"audit.general.delete",userID);
             */</comment>
            <expr_stmt><expr><name pos:line="208" pos:column="13">stmt</name> <op:operator pos:line="208" pos:column="18">=</op:operator> <call><name><name pos:line="208" pos:column="20">DBM</name><op:operator pos:line="208" pos:column="23">.</op:operator><name pos:line="208" pos:column="24">con</name><op:operator pos:line="208" pos:column="27">.</op:operator><name pos:line="208" pos:column="28">createStatement</name></name><argument_list pos:line="208" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="209" pos:column="13">stmt</name><op:operator pos:line="209" pos:column="17">.</op:operator><name pos:line="209" pos:column="18">executeUpdate</name></name><argument_list pos:line="209" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="209" pos:column="32">"DELETE FROM xinco_add_attribute WHERE xinco_core_data_id="</lit:literal> <op:operator pos:line="209" pos:column="92">+</op:operator> <name pos:line="209" pos:column="94">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="210" pos:column="13">stmt</name><op:operator pos:line="210" pos:column="17">.</op:operator><name pos:line="210" pos:column="18">close</name></name><argument_list pos:line="210" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
        }</block> <catch pos:line="211" pos:column="11">catch <parameter_list pos:line="211" pos:column="17">(<param><decl><type><name pos:line="211" pos:column="18">Exception</name></type> <name pos:line="211" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="211" pos:column="31">{
            <try pos:line="212" pos:column="13">try <block pos:line="212" pos:column="17">{
                <expr_stmt><expr><call><name><name pos:line="213" pos:column="17">DBM</name><op:operator pos:line="213" pos:column="20">.</op:operator><name pos:line="213" pos:column="21">con</name><op:operator pos:line="213" pos:column="24">.</op:operator><name pos:line="213" pos:column="25">rollback</name></name><argument_list pos:line="213" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            }</block> <catch pos:line="214" pos:column="15">catch <parameter_list pos:line="214" pos:column="21">(<param><decl><type><name pos:line="214" pos:column="22">Exception</name></type> <name pos:line="214" pos:column="32">erollback</name></decl></param>)</parameter_list> <block pos:line="214" pos:column="43">{
            }</block></catch></try>
            <throw pos:line="216" pos:column="13">throw <expr><op:operator pos:line="216" pos:column="19">new</op:operator> <call><name pos:line="216" pos:column="23">XincoException</name><argument_list pos:line="216" pos:column="37">()</argument_list></call></expr>;</throw>
        }</block></catch></try>
    }</block></function>

    <comment type="line" pos:line="220" pos:column="5">//delete from db</comment>
    <function><type><specifier pos:line="221" pos:column="5">public</specifier> <name pos:line="221" pos:column="12">void</name></type> <name pos:line="221" pos:column="17">deleteFromDB</name><parameter_list pos:line="221" pos:column="29">(<param><decl><type><name pos:line="221" pos:column="30">XincoDBManager</name></type> <name pos:line="221" pos:column="45">DBM</name></decl></param>)</parameter_list> <throws pos:line="221" pos:column="50">throws <argument><expr><name pos:line="221" pos:column="57">XincoException</name></expr></argument></throws> <block pos:line="221" pos:column="72">{

        <decl_stmt><decl><type><name pos:line="223" pos:column="9">int</name></type> <name pos:line="223" pos:column="13">i</name> <init pos:line="223" pos:column="15">= <expr><lit:literal type="number" pos:line="223" pos:column="17">0</lit:literal></expr></init></decl>;</decl_stmt>

        <try pos:line="225" pos:column="9">try <block pos:line="225" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="226" pos:column="13">Statement</name></type> <name pos:line="226" pos:column="23">stmt</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="227" pos:column="13">XincoCoreAuditServer</name></type> <name pos:line="227" pos:column="34">audit</name> <init pos:line="227" pos:column="40">= <expr><op:operator pos:line="227" pos:column="42">new</op:operator> <call><name pos:line="227" pos:column="46">XincoCoreAuditServer</name><argument_list pos:line="227" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <comment type="line" pos:line="228" pos:column="13">//delete file / file = 1</comment>
            <if pos:line="229" pos:column="13">if <condition pos:line="229" pos:column="16">(<expr><call><name pos:line="229" pos:column="17">getXinco_core_data_type</name><argument_list pos:line="229" pos:column="40">()</argument_list></call><op:operator pos:line="229" pos:column="42">.</op:operator><call><name pos:line="229" pos:column="43">getId</name><argument_list pos:line="229" pos:column="48">()</argument_list></call> <op:operator pos:line="229" pos:column="51">==</op:operator> <lit:literal type="number" pos:line="229" pos:column="54">1</lit:literal></expr>)</condition><then pos:line="229" pos:column="56"> <block pos:line="229" pos:column="57">{
                <try pos:line="230" pos:column="17">try <block pos:line="230" pos:column="21">{
                    <expr_stmt><expr><op:operator pos:line="231" pos:column="21">(</op:operator><op:operator pos:line="231" pos:column="22">new</op:operator> <call><name pos:line="231" pos:column="26">File</name><argument_list pos:line="231" pos:column="30">(<argument><expr><call><name><name pos:line="231" pos:column="31">XincoCoreDataServer</name><op:operator pos:line="231" pos:column="50">.</op:operator><name pos:line="231" pos:column="51">getXincoCoreDataPath</name></name><argument_list pos:line="231" pos:column="71">(<argument><expr><name><name pos:line="231" pos:column="72">DBM</name><op:operator pos:line="231" pos:column="75">.</op:operator><name pos:line="231" pos:column="76">config</name><op:operator pos:line="231" pos:column="82">.</op:operator><name pos:line="231" pos:column="83">FileRepositoryPath</name></name></expr></argument>, <argument><expr><call><name pos:line="231" pos:column="103">getId</name><argument_list pos:line="231" pos:column="108">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="231" pos:column="112">""</lit:literal> <op:operator pos:line="231" pos:column="115">+</op:operator> <call><name pos:line="231" pos:column="117">getId</name><argument_list pos:line="231" pos:column="122">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="231" pos:column="126">)</op:operator><op:operator pos:line="231" pos:column="127">.</op:operator><call><name pos:line="231" pos:column="128">delete</name><argument_list pos:line="231" pos:column="134">()</argument_list></call></expr>;</expr_stmt>
                }</block> <catch pos:line="232" pos:column="19">catch <parameter_list pos:line="232" pos:column="25">(<param><decl><type><name pos:line="232" pos:column="26">Exception</name></type> <name pos:line="232" pos:column="36">dfe</name></decl></param>)</parameter_list> <block pos:line="232" pos:column="41">{
                    <comment type="line" pos:line="233" pos:column="21">// continue, file might not exists</comment>
                }</block></catch></try>
                <comment type="line" pos:line="235" pos:column="17">// delete revisions created upon creation or checkin</comment>
                <for pos:line="236" pos:column="17">for (<init><expr><name pos:line="236" pos:column="22">i</name> <op:operator pos:line="236" pos:column="24">=</op:operator> <lit:literal type="number" pos:line="236" pos:column="26">0</lit:literal></expr>;</init> <condition><expr><name pos:line="236" pos:column="29">i</name> <op:operator pos:line="236" pos:column="31">&lt;</op:operator> <call><name><name pos:line="236" pos:column="33">this</name><op:operator pos:line="236" pos:column="37">.</op:operator><name pos:line="236" pos:column="38">getXinco_core_logs</name></name><argument_list pos:line="236" pos:column="56">()</argument_list></call><op:operator pos:line="236" pos:column="58">.</op:operator><call><name pos:line="236" pos:column="59">size</name><argument_list pos:line="236" pos:column="63">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="236" pos:column="67">i</name><op:operator pos:line="236" pos:column="68">++</op:operator></expr></incr>) <block pos:line="236" pos:column="72">{
                    <if pos:line="237" pos:column="21">if <condition pos:line="237" pos:column="24">(<expr><op:operator pos:line="237" pos:column="25">(</op:operator><op:operator pos:line="237" pos:column="26">(</op:operator><op:operator pos:line="237" pos:column="27">(</op:operator><name pos:line="237" pos:column="28">XincoCoreLog</name><op:operator pos:line="237" pos:column="40">)</op:operator> <call><name pos:line="237" pos:column="42">getXinco_core_logs</name><argument_list pos:line="237" pos:column="60">()</argument_list></call><op:operator pos:line="237" pos:column="62">.</op:operator><call><name pos:line="237" pos:column="63">elementAt</name><argument_list pos:line="237" pos:column="72">(<argument><expr><name pos:line="237" pos:column="73">i</name></expr></argument>)</argument_list></call><op:operator pos:line="237" pos:column="75">)</op:operator><op:operator pos:line="237" pos:column="76">.</op:operator><call><name pos:line="237" pos:column="77">getOp_code</name><argument_list pos:line="237" pos:column="87">()</argument_list></call> <op:operator pos:line="237" pos:column="90">==</op:operator> <lit:literal type="number" pos:line="237" pos:column="93">1</lit:literal><op:operator pos:line="237" pos:column="94">)</op:operator> <op:operator pos:line="237" pos:column="96">||</op:operator> <op:operator pos:line="237" pos:column="99">(</op:operator><op:operator pos:line="237" pos:column="100">(</op:operator><op:operator pos:line="237" pos:column="101">(</op:operator><name pos:line="237" pos:column="102">XincoCoreLog</name><op:operator pos:line="237" pos:column="114">)</op:operator> <call><name pos:line="237" pos:column="116">getXinco_core_logs</name><argument_list pos:line="237" pos:column="134">()</argument_list></call><op:operator pos:line="237" pos:column="136">.</op:operator><call><name pos:line="237" pos:column="137">elementAt</name><argument_list pos:line="237" pos:column="146">(<argument><expr><name pos:line="237" pos:column="147">i</name></expr></argument>)</argument_list></call><op:operator pos:line="237" pos:column="149">)</op:operator><op:operator pos:line="237" pos:column="150">.</op:operator><call><name pos:line="237" pos:column="151">getOp_code</name><argument_list pos:line="237" pos:column="161">()</argument_list></call> <op:operator pos:line="237" pos:column="164">==</op:operator> <lit:literal type="number" pos:line="237" pos:column="167">5</lit:literal><op:operator pos:line="237" pos:column="168">)</op:operator></expr>)</condition><then pos:line="237" pos:column="170"> <block pos:line="237" pos:column="171">{
                        <try pos:line="238" pos:column="25">try <block pos:line="238" pos:column="29">{
                            <expr_stmt><expr><op:operator pos:line="239" pos:column="29">(</op:operator><op:operator pos:line="239" pos:column="30">new</op:operator> <call><name pos:line="239" pos:column="34">File</name><argument_list pos:line="239" pos:column="38">(<argument><expr><call><name><name pos:line="239" pos:column="39">XincoCoreDataServer</name><op:operator pos:line="239" pos:column="58">.</op:operator><name pos:line="239" pos:column="59">getXincoCoreDataPath</name></name><argument_list pos:line="239" pos:column="79">(<argument><expr><name><name pos:line="239" pos:column="80">DBM</name><op:operator pos:line="239" pos:column="83">.</op:operator><name pos:line="239" pos:column="84">config</name><op:operator pos:line="239" pos:column="90">.</op:operator><name pos:line="239" pos:column="91">FileRepositoryPath</name></name></expr></argument>, <argument><expr><call><name pos:line="239" pos:column="111">getId</name><argument_list pos:line="239" pos:column="116">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="239" pos:column="120">getId</name><argument_list pos:line="239" pos:column="125">()</argument_list></call> <op:operator pos:line="239" pos:column="128">+</op:operator> <lit:literal type="string" pos:line="239" pos:column="130">"-"</lit:literal> <op:operator pos:line="239" pos:column="134">+</op:operator> <op:operator pos:line="239" pos:column="136">(</op:operator><op:operator pos:line="239" pos:column="137">(</op:operator><name pos:line="239" pos:column="138">XincoCoreLog</name><op:operator pos:line="239" pos:column="150">)</op:operator> <call><name pos:line="239" pos:column="152">getXinco_core_logs</name><argument_list pos:line="239" pos:column="170">()</argument_list></call><op:operator pos:line="239" pos:column="172">.</op:operator><call><name pos:line="239" pos:column="173">elementAt</name><argument_list pos:line="239" pos:column="182">(<argument><expr><name pos:line="239" pos:column="183">i</name></expr></argument>)</argument_list></call><op:operator pos:line="239" pos:column="185">)</op:operator><op:operator pos:line="239" pos:column="186">.</op:operator><call><name pos:line="239" pos:column="187">getId</name><argument_list pos:line="239" pos:column="192">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="239" pos:column="196">)</op:operator><op:operator pos:line="239" pos:column="197">.</op:operator><call><name pos:line="239" pos:column="198">delete</name><argument_list pos:line="239" pos:column="204">()</argument_list></call></expr>;</expr_stmt>
                        }</block> <catch pos:line="240" pos:column="27">catch <parameter_list pos:line="240" pos:column="33">(<param><decl><type><name pos:line="240" pos:column="34">Exception</name></type> <name pos:line="240" pos:column="44">drfe</name></decl></param>)</parameter_list> <block pos:line="240" pos:column="50">{
                            <comment type="line" pos:line="241" pos:column="29">// continue, delete next revision</comment>
                        }</block></catch></try>
                    }</block></then></if>
                }</block></for>
            }</block></then></if>
            <expr_stmt><expr><call><name><name pos:line="246" pos:column="13">audit</name><op:operator pos:line="246" pos:column="18">.</op:operator><name pos:line="246" pos:column="19">updateAuditTrail</name></name><argument_list pos:line="246" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="246" pos:column="36">"xinco_core_data"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="246" pos:column="55">new</op:operator> <name><name pos:line="246" pos:column="59">String</name><index pos:line="246" pos:column="65">[]</index></name><block pos:line="246" pos:column="67">{<expr><lit:literal type="string" pos:line="246" pos:column="68">"id ="</lit:literal> <op:operator pos:line="246" pos:column="75">+</op:operator> <call><name pos:line="246" pos:column="77">getId</name><argument_list pos:line="246" pos:column="82">()</argument_list></call></expr>}</block></expr></argument>,
                    <argument><expr><name pos:line="247" pos:column="21">DBM</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="247" pos:column="26">"audit.general.delete"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="247" pos:column="50">this</name><op:operator pos:line="247" pos:column="54">.</op:operator><name pos:line="247" pos:column="55">getChangerID</name></name><argument_list pos:line="247" pos:column="67">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="248" pos:column="13">stmt</name> <op:operator pos:line="248" pos:column="18">=</op:operator> <call><name><name pos:line="248" pos:column="20">DBM</name><op:operator pos:line="248" pos:column="23">.</op:operator><name pos:line="248" pos:column="24">con</name><op:operator pos:line="248" pos:column="27">.</op:operator><name pos:line="248" pos:column="28">createStatement</name></name><argument_list pos:line="248" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="249" pos:column="13">stmt</name><op:operator pos:line="249" pos:column="17">.</op:operator><name pos:line="249" pos:column="18">executeUpdate</name></name><argument_list pos:line="249" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="249" pos:column="32">"DELETE FROM xinco_core_data WHERE id="</lit:literal> <op:operator pos:line="249" pos:column="72">+</op:operator> <call><name pos:line="249" pos:column="74">getId</name><argument_list pos:line="249" pos:column="79">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="250" pos:column="13">stmt</name><op:operator pos:line="250" pos:column="17">.</op:operator><name pos:line="250" pos:column="18">close</name></name><argument_list pos:line="250" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="251" pos:column="13">DBM</name><op:operator pos:line="251" pos:column="16">.</op:operator><name pos:line="251" pos:column="17">con</name><op:operator pos:line="251" pos:column="20">.</op:operator><name pos:line="251" pos:column="21">commit</name></name><argument_list pos:line="251" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
        }</block> <catch pos:line="252" pos:column="11">catch <parameter_list pos:line="252" pos:column="17">(<param><decl><type><name pos:line="252" pos:column="18">Exception</name></type> <name pos:line="252" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="252" pos:column="31">{
            <try pos:line="253" pos:column="13">try <block pos:line="253" pos:column="17">{
                <expr_stmt><expr><call><name><name pos:line="254" pos:column="17">DBM</name><op:operator pos:line="254" pos:column="20">.</op:operator><name pos:line="254" pos:column="21">con</name><op:operator pos:line="254" pos:column="24">.</op:operator><name pos:line="254" pos:column="25">rollback</name></name><argument_list pos:line="254" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            }</block> <catch pos:line="255" pos:column="15">catch <parameter_list pos:line="255" pos:column="21">(<param><decl><type><name pos:line="255" pos:column="22">Exception</name></type> <name pos:line="255" pos:column="32">erollback</name></decl></param>)</parameter_list> <block pos:line="255" pos:column="43">{
            }</block></catch></try>
            <throw pos:line="257" pos:column="13">throw <expr><op:operator pos:line="257" pos:column="19">new</op:operator> <call><name pos:line="257" pos:column="23">XincoException</name><argument_list pos:line="257" pos:column="37">()</argument_list></call></expr>;</throw>
        }</block></catch></try>

    }</block></function>

    <function><type><specifier pos:line="262" pos:column="5">public</specifier> <specifier pos:line="262" pos:column="12">static</specifier> <name pos:line="262" pos:column="19">byte</name><index pos:line="262" pos:column="23">[]</index></type> <name pos:line="262" pos:column="26">loadBinaryData</name><parameter_list pos:line="262" pos:column="40">(<param><decl><type><name pos:line="262" pos:column="41">XincoCoreData</name></type> <name pos:line="262" pos:column="55">attrCD</name></decl></param>)</parameter_list> <block pos:line="262" pos:column="63">{

        <decl_stmt><decl><type><name pos:line="264" pos:column="9">byte</name><index pos:line="264" pos:column="13">[]</index></type> <name pos:line="264" pos:column="16">binary_data</name> <init pos:line="264" pos:column="28">= <expr><lit:literal type="null" pos:line="264" pos:column="30">null</lit:literal></expr></init></decl>;</decl_stmt>

        <return pos:line="266" pos:column="9">return <expr><name pos:line="266" pos:column="16">binary_data</name></expr>;</return>

    }</block></function>

    <function><type><specifier pos:line="270" pos:column="5">public</specifier> <specifier pos:line="270" pos:column="12">static</specifier> <name pos:line="270" pos:column="19">int</name></type> <name pos:line="270" pos:column="23">saveBinaryData</name><parameter_list pos:line="270" pos:column="37">(<param><decl><type><name pos:line="270" pos:column="38">XincoCoreData</name></type> <name pos:line="270" pos:column="52">attrCD</name></decl></param>, <param><decl><type><name><name pos:line="270" pos:column="60">byte</name><index pos:line="270" pos:column="64">[]</index></name></type> <name pos:line="270" pos:column="67">attrBD</name></decl></param>)</parameter_list> <block pos:line="270" pos:column="75">{

        <return pos:line="272" pos:column="9">return <expr><lit:literal type="number" pos:line="272" pos:column="16">0</lit:literal></expr>;</return>

    }</block></function>

    <function><type><specifier pos:line="276" pos:column="5">public</specifier> <specifier pos:line="276" pos:column="12">static</specifier> <name pos:line="276" pos:column="19">Vector</name></type> <name pos:line="276" pos:column="26">findXincoCoreData</name><parameter_list pos:line="276" pos:column="43">(<param><decl><type><name pos:line="276" pos:column="44">String</name></type> <name pos:line="276" pos:column="51">attrS</name></decl></param>, <param><decl><type><name pos:line="276" pos:column="58">int</name></type> <name pos:line="276" pos:column="62">attrLID</name></decl></param>, <param><decl><type><name pos:line="276" pos:column="71">boolean</name></type> <name pos:line="276" pos:column="79">attrSA</name></decl></param>, <param><decl><type><name pos:line="276" pos:column="87">boolean</name></type> <name pos:line="276" pos:column="95">attrSFD</name></decl></param>, <param><decl><type><name pos:line="276" pos:column="104">XincoDBManager</name></type> <name pos:line="276" pos:column="119">DBM</name></decl></param>)</parameter_list> <block pos:line="276" pos:column="124">{
        <decl_stmt><decl><type><name pos:line="277" pos:column="9">Vector</name></type> <name pos:line="277" pos:column="16">data</name> <init pos:line="277" pos:column="21">= <expr><op:operator pos:line="277" pos:column="23">new</op:operator> <call><name pos:line="277" pos:column="27">Vector</name><argument_list pos:line="277" pos:column="33">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <try pos:line="278" pos:column="9">try <block pos:line="278" pos:column="13">{

            <decl_stmt><decl><type><name pos:line="280" pos:column="13">Statement</name></type> <name pos:line="280" pos:column="23">stmt</name> <init pos:line="280" pos:column="28">= <expr><call><name><name pos:line="280" pos:column="30">DBM</name><op:operator pos:line="280" pos:column="33">.</op:operator><name pos:line="280" pos:column="34">con</name><op:operator pos:line="280" pos:column="37">.</op:operator><name pos:line="280" pos:column="38">createStatement</name></name><argument_list pos:line="280" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="281" pos:column="13">ResultSet</name></type> <name pos:line="281" pos:column="23">rs</name></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="282" pos:column="13">String</name></type> <name pos:line="282" pos:column="20">lang</name> <init pos:line="282" pos:column="25">= <expr><lit:literal type="string" pos:line="282" pos:column="27">""</lit:literal></expr></init></decl>;</decl_stmt>
            <if pos:line="283" pos:column="13">if <condition pos:line="283" pos:column="16">(<expr><name pos:line="283" pos:column="17">attrLID</name> <op:operator pos:line="283" pos:column="25">!=</op:operator> <lit:literal type="number" pos:line="283" pos:column="28">0</lit:literal></expr>)</condition><then pos:line="283" pos:column="30"> <block pos:line="283" pos:column="31">{
                <expr_stmt><expr><name pos:line="284" pos:column="17">lang</name> <op:operator pos:line="284" pos:column="22">=</op:operator> <lit:literal type="string" pos:line="284" pos:column="24">"AND (xinco_core_language_id = "</lit:literal> <op:operator pos:line="284" pos:column="57">+</op:operator> <name pos:line="284" pos:column="59">attrLID</name> <op:operator pos:line="284" pos:column="67">+</op:operator> <lit:literal type="string" pos:line="284" pos:column="69">")"</lit:literal></expr>;</expr_stmt>
            }</block></then></if>
            <if pos:line="286" pos:column="13">if <condition pos:line="286" pos:column="16">(<expr><name pos:line="286" pos:column="17">attrSA</name></expr>)</condition><then pos:line="286" pos:column="24"> <block pos:line="286" pos:column="25">{
                <expr_stmt><expr><name pos:line="287" pos:column="17">rs</name> <op:operator pos:line="287" pos:column="20">=</op:operator> <call><name><name pos:line="287" pos:column="22">stmt</name><op:operator pos:line="287" pos:column="26">.</op:operator><name pos:line="287" pos:column="27">executeQuery</name></name><argument_list pos:line="287" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="287" pos:column="40">"SELECT DISTINCT xinco_core_data.* "</lit:literal> <op:operator pos:line="287" pos:column="77">+</op:operator>
                        <lit:literal type="string" pos:line="288" pos:column="25">"FROM xinco_core_data, xinco_add_attribute WHERE "</lit:literal> <op:operator pos:line="288" pos:column="76">+</op:operator>
                        <lit:literal type="string" pos:line="289" pos:column="25">"(xinco_core_data.id = xinco_add_attribute.xinco_core_data_id) "</lit:literal> <op:operator pos:line="289" pos:column="90">+</op:operator>
                        <lit:literal type="string" pos:line="290" pos:column="25">"AND (xinco_core_data.designation LIKE '"</lit:literal> <op:operator pos:line="290" pos:column="67">+</op:operator> <name pos:line="290" pos:column="69">attrS</name> <op:operator pos:line="290" pos:column="75">+</op:operator>
                        <lit:literal type="string" pos:line="291" pos:column="25">"%' OR xinco_add_attribute.attrib_varchar LIKE '"</lit:literal> <op:operator pos:line="291" pos:column="75">+</op:operator> <name pos:line="291" pos:column="77">attrS</name> <op:operator pos:line="291" pos:column="83">+</op:operator>
                        <lit:literal type="string" pos:line="292" pos:column="25">"' OR xinco_add_attribute.attrib_text LIKE '"</lit:literal> <op:operator pos:line="292" pos:column="71">+</op:operator> <name pos:line="292" pos:column="73">attrS</name> <op:operator pos:line="292" pos:column="79">+</op:operator> <lit:literal type="string" pos:line="292" pos:column="81">"') "</lit:literal> <op:operator pos:line="292" pos:column="87">+</op:operator> <name pos:line="292" pos:column="89">lang</name> <op:operator pos:line="292" pos:column="94">+</op:operator>
                        <lit:literal type="string" pos:line="293" pos:column="25">" ORDER BY xinco_core_data.designation, xinco_core_data.xinco_core_language_id"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then> <else pos:line="294" pos:column="15">else <block pos:line="294" pos:column="20">{
                <expr_stmt><expr><name pos:line="295" pos:column="17">rs</name> <op:operator pos:line="295" pos:column="20">=</op:operator> <call><name><name pos:line="295" pos:column="22">stmt</name><op:operator pos:line="295" pos:column="26">.</op:operator><name pos:line="295" pos:column="27">executeQuery</name></name><argument_list pos:line="295" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="295" pos:column="40">"SELECT DISTINCT xinco_core_data.* FROM xinco_core_data "</lit:literal> <op:operator pos:line="295" pos:column="98">+</op:operator>
                        <lit:literal type="string" pos:line="296" pos:column="25">"WHERE designation LIKE '"</lit:literal> <op:operator pos:line="296" pos:column="52">+</op:operator> <name pos:line="296" pos:column="54">attrS</name> <op:operator pos:line="296" pos:column="60">+</op:operator> <lit:literal type="string" pos:line="296" pos:column="62">"' "</lit:literal> <op:operator pos:line="296" pos:column="67">+</op:operator> <name pos:line="296" pos:column="69">lang</name> <op:operator pos:line="296" pos:column="74">+</op:operator>
                        <lit:literal type="string" pos:line="297" pos:column="25">" ORDER BY designation, xinco_core_language_id"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>

            <decl_stmt><decl><type><name pos:line="300" pos:column="13">int</name></type> <name pos:line="300" pos:column="17">i</name> <init pos:line="300" pos:column="19">= <expr><lit:literal type="number" pos:line="300" pos:column="21">0</lit:literal></expr></init></decl>;</decl_stmt>
            <while pos:line="301" pos:column="13">while <condition pos:line="301" pos:column="19">(<expr><call><name><name pos:line="301" pos:column="20">rs</name><op:operator pos:line="301" pos:column="22">.</op:operator><name pos:line="301" pos:column="23">next</name></name><argument_list pos:line="301" pos:column="27">()</argument_list></call></expr>)</condition> <block pos:line="301" pos:column="31">{
                <expr_stmt><expr><call><name><name pos:line="302" pos:column="17">data</name><op:operator pos:line="302" pos:column="21">.</op:operator><name pos:line="302" pos:column="22">addElement</name></name><argument_list pos:line="302" pos:column="32">(<argument><expr><op:operator pos:line="302" pos:column="33">new</op:operator> <call><name pos:line="302" pos:column="37">XincoCoreDataServer</name><argument_list pos:line="302" pos:column="56">(<argument><expr><call><name><name pos:line="302" pos:column="57">rs</name><op:operator pos:line="302" pos:column="59">.</op:operator><name pos:line="302" pos:column="60">getInt</name></name><argument_list pos:line="302" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="302" pos:column="67">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="302" pos:column="74">DBM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="303" pos:column="17">i</name><op:operator pos:line="303" pos:column="18">++</op:operator></expr>;</expr_stmt>
                <if pos:line="304" pos:column="17">if <condition pos:line="304" pos:column="20">(<expr><name pos:line="304" pos:column="21">i</name> <op:operator pos:line="304" pos:column="23">&gt;=</op:operator> <name><name pos:line="304" pos:column="26">DBM</name><op:operator pos:line="304" pos:column="29">.</op:operator><name pos:line="304" pos:column="30">config</name><op:operator pos:line="304" pos:column="36">.</op:operator><name pos:line="304" pos:column="37">MaxSearchResult</name></name></expr>)</condition><then pos:line="304" pos:column="53"> <block pos:line="304" pos:column="54">{
                    <break pos:line="305" pos:column="21">break;</break>
                }</block></then></if>
            }</block></while>

            <expr_stmt><expr><call><name><name pos:line="309" pos:column="13">stmt</name><op:operator pos:line="309" pos:column="17">.</op:operator><name pos:line="309" pos:column="18">close</name></name><argument_list pos:line="309" pos:column="23">()</argument_list></call></expr>;</expr_stmt>

        }</block> <catch pos:line="311" pos:column="11">catch <parameter_list pos:line="311" pos:column="17">(<param><decl><type><name pos:line="311" pos:column="18">Exception</name></type> <name pos:line="311" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="311" pos:column="31">{
            <expr_stmt><expr><call><name><name pos:line="312" pos:column="13">data</name><op:operator pos:line="312" pos:column="17">.</op:operator><name pos:line="312" pos:column="18">removeAllElements</name></name><argument_list pos:line="312" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
        }</block></catch></try>

        <return pos:line="315" pos:column="9">return <expr><name pos:line="315" pos:column="16">data</name></expr>;</return>

    }</block></function>

    <function><type><specifier pos:line="319" pos:column="5">public</specifier> <specifier pos:line="319" pos:column="12">static</specifier> <name pos:line="319" pos:column="19">String</name></type> <name pos:line="319" pos:column="26">getXincoCoreDataPath</name><parameter_list pos:line="319" pos:column="46">(<param><decl><type><name pos:line="319" pos:column="47">String</name></type> <name pos:line="319" pos:column="54">attrRP</name></decl></param>, <param><decl><type><name pos:line="319" pos:column="62">int</name></type> <name pos:line="319" pos:column="66">attrID</name></decl></param>, <param><decl><type><name pos:line="319" pos:column="74">String</name></type> <name pos:line="319" pos:column="81">attrFN</name></decl></param>)</parameter_list> <block pos:line="319" pos:column="89">{
        <decl_stmt><decl><type><name pos:line="320" pos:column="9">String</name></type> <name pos:line="320" pos:column="16">path</name> <init pos:line="320" pos:column="21">= <expr><lit:literal type="null" pos:line="320" pos:column="23">null</lit:literal></expr></init></decl>;</decl_stmt>
        <comment type="line" pos:line="321" pos:column="9">// convert ID to String</comment>
        <decl_stmt><decl><type><name pos:line="322" pos:column="9">String</name></type> <name pos:line="322" pos:column="16">path4Id</name> <init pos:line="322" pos:column="24">= <expr><lit:literal type="string" pos:line="322" pos:column="26">""</lit:literal> <op:operator pos:line="322" pos:column="29">+</op:operator> <name pos:line="322" pos:column="31">attrID</name></expr></init></decl>;</decl_stmt>
        <comment type="line" pos:line="323" pos:column="9">// fill ID String with zeros</comment>
        <while pos:line="324" pos:column="9">while <condition pos:line="324" pos:column="15">(<expr><call><name><name pos:line="324" pos:column="16">path4Id</name><op:operator pos:line="324" pos:column="23">.</op:operator><name pos:line="324" pos:column="24">length</name></name><argument_list pos:line="324" pos:column="30">()</argument_list></call> <op:operator pos:line="324" pos:column="33">&lt;</op:operator> <lit:literal type="number" pos:line="324" pos:column="35">10</lit:literal></expr>)</condition> <block pos:line="324" pos:column="39">{
            <expr_stmt><expr><name pos:line="325" pos:column="13">path4Id</name> <op:operator pos:line="325" pos:column="21">=</op:operator> <lit:literal type="string" pos:line="325" pos:column="23">"0"</lit:literal> <op:operator pos:line="325" pos:column="27">+</op:operator> <name pos:line="325" pos:column="29">path4Id</name></expr>;</expr_stmt>
        }</block></while>
        <comment type="line" pos:line="327" pos:column="9">// shorten to 7 chars</comment>
        <expr_stmt><expr><name pos:line="328" pos:column="9">path4Id</name> <op:operator pos:line="328" pos:column="17">=</op:operator> <call><name><name pos:line="328" pos:column="19">path4Id</name><op:operator pos:line="328" pos:column="26">.</op:operator><name pos:line="328" pos:column="27">substring</name></name><argument_list pos:line="328" pos:column="36">(<argument><expr><lit:literal type="number" pos:line="328" pos:column="37">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="328" pos:column="40">7</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="line" pos:line="329" pos:column="9">// add seperator</comment>
        <for pos:line="330" pos:column="9">for (<init><decl><type><name pos:line="330" pos:column="14">int</name></type> <name pos:line="330" pos:column="18">i</name> <init pos:line="330" pos:column="20">= <expr><lit:literal type="number" pos:line="330" pos:column="22">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="330" pos:column="25">i</name> <op:operator pos:line="330" pos:column="27">&lt;</op:operator> <lit:literal type="number" pos:line="330" pos:column="29">7</lit:literal></expr>;</condition> <incr><expr><name pos:line="330" pos:column="32">i</name><op:operator pos:line="330" pos:column="33">++</op:operator></expr></incr>) <block pos:line="330" pos:column="37">{
            <expr_stmt><expr><name pos:line="331" pos:column="13">path4Id</name> <op:operator pos:line="331" pos:column="21">=</op:operator> <call><name><name pos:line="331" pos:column="23">path4Id</name><op:operator pos:line="331" pos:column="30">.</op:operator><name pos:line="331" pos:column="31">substring</name></name><argument_list pos:line="331" pos:column="40">(<argument><expr><lit:literal type="number" pos:line="331" pos:column="41">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="331" pos:column="44">(</op:operator><name pos:line="331" pos:column="45">i</name> <op:operator pos:line="331" pos:column="47">*</op:operator> <lit:literal type="number" pos:line="331" pos:column="49">2</lit:literal> <op:operator pos:line="331" pos:column="51">+</op:operator> <lit:literal type="number" pos:line="331" pos:column="53">1</lit:literal><op:operator pos:line="331" pos:column="54">)</op:operator></expr></argument>)</argument_list></call> <op:operator pos:line="331" pos:column="57">+</op:operator>
                    <call><name><name pos:line="332" pos:column="21">System</name><op:operator pos:line="332" pos:column="27">.</op:operator><name pos:line="332" pos:column="28">getProperty</name></name><argument_list pos:line="332" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="332" pos:column="40">"file.separator"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="332" pos:column="58">+</op:operator> <call><name><name pos:line="332" pos:column="60">path4Id</name><op:operator pos:line="332" pos:column="67">.</op:operator><name pos:line="332" pos:column="68">substring</name></name><argument_list pos:line="332" pos:column="77">(<argument><expr><op:operator pos:line="332" pos:column="78">(</op:operator><name pos:line="332" pos:column="79">i</name> <op:operator pos:line="332" pos:column="81">*</op:operator> <lit:literal type="number" pos:line="332" pos:column="83">2</lit:literal> <op:operator pos:line="332" pos:column="85">+</op:operator> <lit:literal type="number" pos:line="332" pos:column="87">1</lit:literal><op:operator pos:line="332" pos:column="88">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></for>
        <comment type="line" pos:line="334" pos:column="9">// create path if neccessary</comment>
        <expr_stmt><expr><op:operator pos:line="335" pos:column="9">(</op:operator><op:operator pos:line="335" pos:column="10">new</op:operator> <call><name pos:line="335" pos:column="14">File</name><argument_list pos:line="335" pos:column="18">(<argument><expr><name pos:line="335" pos:column="19">attrRP</name> <op:operator pos:line="335" pos:column="26">+</op:operator> <name pos:line="335" pos:column="28">path4Id</name></expr></argument>)</argument_list></call><op:operator pos:line="335" pos:column="36">)</op:operator><op:operator pos:line="335" pos:column="37">.</op:operator><call><name pos:line="335" pos:column="38">mkdirs</name><argument_list pos:line="335" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
        <comment type="line" pos:line="336" pos:column="9">// check if file exists at NEW location (&gt;= xinco DMS 2.0)</comment>
        <if pos:line="337" pos:column="9">if <condition pos:line="337" pos:column="12">(<expr><op:operator pos:line="337" pos:column="13">(</op:operator><op:operator pos:line="337" pos:column="14">new</op:operator> <call><name pos:line="337" pos:column="18">File</name><argument_list pos:line="337" pos:column="22">(<argument><expr><name pos:line="337" pos:column="23">attrRP</name> <op:operator pos:line="337" pos:column="30">+</op:operator> <name pos:line="337" pos:column="32">path4Id</name> <op:operator pos:line="337" pos:column="40">+</op:operator> <name pos:line="337" pos:column="42">attrFN</name></expr></argument>)</argument_list></call><op:operator pos:line="337" pos:column="49">)</op:operator><op:operator pos:line="337" pos:column="50">.</op:operator><call><name pos:line="337" pos:column="51">exists</name><argument_list pos:line="337" pos:column="57">()</argument_list></call></expr>)</condition><then pos:line="337" pos:column="60"> <block pos:line="337" pos:column="61">{
            <comment type="line" pos:line="338" pos:column="13">// output NEW location</comment>
            <expr_stmt><expr><name pos:line="339" pos:column="13">path</name> <op:operator pos:line="339" pos:column="18">=</op:operator> <name pos:line="339" pos:column="20">attrRP</name> <op:operator pos:line="339" pos:column="27">+</op:operator> <name pos:line="339" pos:column="29">path4Id</name> <op:operator pos:line="339" pos:column="37">+</op:operator> <name pos:line="339" pos:column="39">attrFN</name></expr>;</expr_stmt>
        }</block></then> <else pos:line="340" pos:column="11">else <block pos:line="340" pos:column="16">{
            <comment type="line" pos:line="341" pos:column="13">// check if file exists at OLD location (pre xinco DMS 2.0)</comment>
            <if pos:line="342" pos:column="13">if <condition pos:line="342" pos:column="16">(<expr><op:operator pos:line="342" pos:column="17">(</op:operator><op:operator pos:line="342" pos:column="18">new</op:operator> <call><name pos:line="342" pos:column="22">File</name><argument_list pos:line="342" pos:column="26">(<argument><expr><name pos:line="342" pos:column="27">attrRP</name> <op:operator pos:line="342" pos:column="34">+</op:operator> <name pos:line="342" pos:column="36">attrFN</name></expr></argument>)</argument_list></call><op:operator pos:line="342" pos:column="43">)</op:operator><op:operator pos:line="342" pos:column="44">.</op:operator><call><name pos:line="342" pos:column="45">exists</name><argument_list pos:line="342" pos:column="51">()</argument_list></call></expr>)</condition><then pos:line="342" pos:column="54"> <block pos:line="342" pos:column="55">{
                <comment type="line" pos:line="343" pos:column="17">// output OLD location</comment>
                <expr_stmt><expr><name pos:line="344" pos:column="17">path</name> <op:operator pos:line="344" pos:column="22">=</op:operator> <name pos:line="344" pos:column="24">attrRP</name> <op:operator pos:line="344" pos:column="31">+</op:operator> <name pos:line="344" pos:column="33">attrFN</name></expr>;</expr_stmt>
            }</block></then> <else pos:line="345" pos:column="15">else <block pos:line="345" pos:column="20">{
                <comment type="line" pos:line="346" pos:column="17">// output NEW location for NEW file</comment>
                <expr_stmt><expr><name pos:line="347" pos:column="17">path</name> <op:operator pos:line="347" pos:column="22">=</op:operator> <name pos:line="347" pos:column="24">attrRP</name> <op:operator pos:line="347" pos:column="31">+</op:operator> <name pos:line="347" pos:column="33">path4Id</name> <op:operator pos:line="347" pos:column="41">+</op:operator> <name pos:line="347" pos:column="43">attrFN</name></expr>;</expr_stmt>
            }</block></else></if>
        }</block></else></if>
        <return pos:line="350" pos:column="9">return <expr><name pos:line="350" pos:column="16">path</name></expr>;</return>
    }</block></function>
}</block></class>
</unit>
