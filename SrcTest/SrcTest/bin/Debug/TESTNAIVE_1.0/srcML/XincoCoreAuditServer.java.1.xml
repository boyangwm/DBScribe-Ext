<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\xinco\src\com\bluecubs\xinco\core\server\XincoCoreAuditServer.java" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/*
 * XincoCoreAuditServer.java
 *
 * Created on November 28, 2006, 9:40 AM
 *
 * To change this template, choose Tools | Template Manager
 * and open the template in the editor.
 */</comment>
<package pos:line="9" pos:column="1">package <name><name pos:line="9" pos:column="9">com</name><op:operator pos:line="9" pos:column="12">.</op:operator><name pos:line="9" pos:column="13">bluecubs</name><op:operator pos:line="9" pos:column="21">.</op:operator><name pos:line="9" pos:column="22">xinco</name><op:operator pos:line="9" pos:column="27">.</op:operator><name pos:line="9" pos:column="28">core</name><op:operator pos:line="9" pos:column="32">.</op:operator><name pos:line="9" pos:column="33">server</name></name>;</package>

<import pos:line="11" pos:column="1">import <name><name pos:line="11" pos:column="8">java</name><op:operator pos:line="11" pos:column="12">.</op:operator><name pos:line="11" pos:column="13">sql</name><op:operator pos:line="11" pos:column="16">.</op:operator><name pos:line="11" pos:column="17">ResultSet</name></name>;</import>
<import pos:line="12" pos:column="1">import <name><name pos:line="12" pos:column="8">java</name><op:operator pos:line="12" pos:column="12">.</op:operator><name pos:line="12" pos:column="13">sql</name><op:operator pos:line="12" pos:column="16">.</op:operator><name pos:line="12" pos:column="17">SQLException</name></name>;</import>
<import pos:line="13" pos:column="1">import <name><name pos:line="13" pos:column="8">java</name><op:operator pos:line="13" pos:column="12">.</op:operator><name pos:line="13" pos:column="13">sql</name><op:operator pos:line="13" pos:column="16">.</op:operator><name pos:line="13" pos:column="17">Statement</name></name>;</import>
<import pos:line="14" pos:column="1">import <name><name pos:line="14" pos:column="8">java</name><op:operator pos:line="14" pos:column="12">.</op:operator><name pos:line="14" pos:column="13">sql</name><op:operator pos:line="14" pos:column="16">.</op:operator><name pos:line="14" pos:column="17">Timestamp</name></name>;</import>

<comment type="block" format="javadoc" pos:line="16" pos:column="1">/**
 *
 * @author Javier A. Ortiz
 */</comment>
<class><specifier pos:line="20" pos:column="1">public</specifier> class <name pos:line="20" pos:column="14">XincoCoreAuditServer</name> <block pos:line="20" pos:column="35">{

    <comment type="block" format="javadoc" pos:line="22" pos:column="5">/** Creates a new instance of XincoCoreAuditServer */</comment>
    <constructor><specifier pos:line="23" pos:column="5">public</specifier> <name pos:line="23" pos:column="12">XincoCoreAuditServer</name><parameter_list pos:line="23" pos:column="32">()</parameter_list> <block pos:line="23" pos:column="35">{
    }</block></constructor>

    <function><type><specifier pos:line="26" pos:column="5">public</specifier> <name pos:line="26" pos:column="12">void</name></type> <name pos:line="26" pos:column="17">updateAuditTrail</name><parameter_list pos:line="26" pos:column="33">(<param><decl><type><name pos:line="26" pos:column="34">String</name></type> <name pos:line="26" pos:column="41">table</name></decl></param>, <param><decl><type><name><name pos:line="26" pos:column="48">String</name><index pos:line="26" pos:column="54">[]</index></name></type> <name pos:line="26" pos:column="57">keys</name></decl></param>, <param><decl><type><name pos:line="26" pos:column="63">XincoDBManager</name></type> <name pos:line="26" pos:column="78">DBM</name></decl></param>, <param><decl><type><name pos:line="26" pos:column="83">String</name></type> <name pos:line="26" pos:column="90">reason</name></decl></param>, <param><decl><type><name pos:line="26" pos:column="98">int</name></type> <name pos:line="26" pos:column="102">id</name></decl></param>)</parameter_list> <block pos:line="26" pos:column="106">{
        <try pos:line="27" pos:column="9">try <block pos:line="27" pos:column="13">{
            <comment type="line" pos:line="28" pos:column="13">//"Copy and Paste" the original record in the audit tables</comment>
            <decl_stmt><decl><type><name pos:line="29" pos:column="13">String</name></type> <name pos:line="29" pos:column="20">where</name> <init pos:line="29" pos:column="26">= <expr><lit:literal type="string" pos:line="29" pos:column="28">""</lit:literal></expr></init></decl>;</decl_stmt>
            <for pos:line="30" pos:column="13">for (<init><decl><type><name pos:line="30" pos:column="18">int</name></type> <name pos:line="30" pos:column="22">i</name> <init pos:line="30" pos:column="24">= <expr><lit:literal type="number" pos:line="30" pos:column="26">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="30" pos:column="29">i</name> <op:operator pos:line="30" pos:column="31">&lt;</op:operator> <name><name pos:line="30" pos:column="33">keys</name><op:operator pos:line="30" pos:column="37">.</op:operator><name pos:line="30" pos:column="38">length</name></name></expr>;</condition> <incr><expr><name pos:line="30" pos:column="46">i</name><op:operator pos:line="30" pos:column="47">++</op:operator></expr></incr>) <block pos:line="30" pos:column="51">{
                <expr_stmt><expr><name pos:line="31" pos:column="17">where</name> <op:operator pos:line="31" pos:column="23">+=</op:operator> <name><name pos:line="31" pos:column="26">keys</name><index pos:line="31" pos:column="30">[<expr><name pos:line="31" pos:column="31">i</name></expr>]</index></name></expr>;</expr_stmt>
                <if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name pos:line="32" pos:column="21">i</name> <op:operator pos:line="32" pos:column="23">&lt;</op:operator> <name><name pos:line="32" pos:column="25">keys</name><op:operator pos:line="32" pos:column="29">.</op:operator><name pos:line="32" pos:column="30">length</name></name> <op:operator pos:line="32" pos:column="37">-</op:operator> <lit:literal type="number" pos:line="32" pos:column="39">1</lit:literal></expr>)</condition><then pos:line="32" pos:column="41"> <block pos:line="32" pos:column="42">{
                    <expr_stmt><expr><name pos:line="33" pos:column="21">where</name> <op:operator pos:line="33" pos:column="27">+=</op:operator> <lit:literal type="string" pos:line="33" pos:column="30">" and "</lit:literal></expr>;</expr_stmt>
                }</block></then></if>
            }</block></for>
            <decl_stmt><decl><type><name pos:line="36" pos:column="13">Statement</name></type> <name pos:line="36" pos:column="23">stmt</name> <init pos:line="36" pos:column="28">= <expr><call><name><name pos:line="36" pos:column="30">DBM</name><op:operator pos:line="36" pos:column="33">.</op:operator><name pos:line="36" pos:column="34">con</name><op:operator pos:line="36" pos:column="37">.</op:operator><name pos:line="36" pos:column="38">createStatement</name></name><argument_list pos:line="36" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="37" pos:column="13">int</name></type> <name pos:line="37" pos:column="17">record_ID</name> <init pos:line="37" pos:column="27">= <expr><lit:literal type="number" pos:line="37" pos:column="29">0</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="38" pos:column="13">String</name></type> <name pos:line="38" pos:column="20">sql</name> <init pos:line="38" pos:column="24">= <expr><lit:literal type="string" pos:line="38" pos:column="26">"select * from "</lit:literal> <op:operator pos:line="38" pos:column="43">+</op:operator> <name pos:line="38" pos:column="45">table</name> <op:operator pos:line="38" pos:column="51">+</op:operator> <lit:literal type="string" pos:line="38" pos:column="53">" where "</lit:literal> <op:operator pos:line="38" pos:column="63">+</op:operator> <name pos:line="38" pos:column="65">where</name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="39" pos:column="13">ResultSet</name></type> <name pos:line="39" pos:column="23">rs</name> <init pos:line="39" pos:column="26">= <expr><call><name><name pos:line="39" pos:column="28">stmt</name><op:operator pos:line="39" pos:column="32">.</op:operator><name pos:line="39" pos:column="33">executeQuery</name></name><argument_list pos:line="39" pos:column="45">(<argument><expr><name pos:line="39" pos:column="46">sql</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <try pos:line="40" pos:column="13">try <block pos:line="40" pos:column="17">{
                <expr_stmt><expr><name pos:line="41" pos:column="17">record_ID</name> <op:operator pos:line="41" pos:column="27">=</op:operator> <call><name><name pos:line="41" pos:column="29">DBM</name><op:operator pos:line="41" pos:column="32">.</op:operator><name pos:line="41" pos:column="33">getNewID</name></name><argument_list pos:line="41" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="41" pos:column="42">"xinco_core_user_modified_record"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block> <catch pos:line="42" pos:column="15">catch <parameter_list pos:line="42" pos:column="21">(<param><decl><type><name pos:line="42" pos:column="22">Exception</name></type> <name pos:line="42" pos:column="32">ex</name></decl></param>)</parameter_list> <block pos:line="42" pos:column="36">{
                <expr_stmt><expr><call><name><name pos:line="43" pos:column="17">ex</name><op:operator pos:line="43" pos:column="19">.</op:operator><name pos:line="43" pos:column="20">printStackTrace</name></name><argument_list pos:line="43" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
            <if pos:line="45" pos:column="13">if <condition pos:line="45" pos:column="16">(<expr><call><name><name pos:line="45" pos:column="17">rs</name><op:operator pos:line="45" pos:column="19">.</op:operator><name pos:line="45" pos:column="20">next</name></name><argument_list pos:line="45" pos:column="24">()</argument_list></call></expr>)</condition><then pos:line="45" pos:column="27"> <block pos:line="45" pos:column="28">{
                <expr_stmt><expr><name pos:line="46" pos:column="17">sql</name> <op:operator pos:line="46" pos:column="21">=</op:operator> <lit:literal type="string" pos:line="46" pos:column="23">"insert into "</lit:literal> <op:operator pos:line="46" pos:column="38">+</op:operator> <name pos:line="46" pos:column="40">table</name> <op:operator pos:line="46" pos:column="46">+</op:operator> <lit:literal type="string" pos:line="46" pos:column="48">"_t values('"</lit:literal> <op:operator pos:line="46" pos:column="62">+</op:operator> <name pos:line="46" pos:column="64">record_ID</name> <op:operator pos:line="46" pos:column="74">+</op:operator> <lit:literal type="string" pos:line="46" pos:column="76">"', "</lit:literal></expr>;</expr_stmt>
                <for pos:line="47" pos:column="17">for (<init><decl><type><name pos:line="47" pos:column="22">int</name></type> <name pos:line="47" pos:column="26">i</name> <init pos:line="47" pos:column="28">= <expr><lit:literal type="number" pos:line="47" pos:column="30">1</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="47" pos:column="33">i</name> <op:operator pos:line="47" pos:column="35">&lt;=</op:operator> <call><name><name pos:line="47" pos:column="38">rs</name><op:operator pos:line="47" pos:column="40">.</op:operator><name pos:line="47" pos:column="41">getMetaData</name></name><argument_list pos:line="47" pos:column="52">()</argument_list></call><op:operator pos:line="47" pos:column="54">.</op:operator><call><name pos:line="47" pos:column="55">getColumnCount</name><argument_list pos:line="47" pos:column="69">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="47" pos:column="73">i</name><op:operator pos:line="47" pos:column="74">++</op:operator></expr></incr>) <block pos:line="47" pos:column="78">{
                    <if pos:line="48" pos:column="21">if <condition pos:line="48" pos:column="24">(<expr><call><name><name pos:line="48" pos:column="25">rs</name><op:operator pos:line="48" pos:column="27">.</op:operator><name pos:line="48" pos:column="28">getString</name></name><argument_list pos:line="48" pos:column="37">(<argument><expr><name pos:line="48" pos:column="38">i</name></expr></argument>)</argument_list></call> <op:operator pos:line="48" pos:column="41">==</op:operator> <lit:literal type="null" pos:line="48" pos:column="44">null</lit:literal></expr>)</condition><then pos:line="48" pos:column="49"> <block pos:line="48" pos:column="50">{
                        <expr_stmt><expr><name pos:line="49" pos:column="25">sql</name> <op:operator pos:line="49" pos:column="29">+=</op:operator> <call><name><name pos:line="49" pos:column="32">rs</name><op:operator pos:line="49" pos:column="34">.</op:operator><name pos:line="49" pos:column="35">getString</name></name><argument_list pos:line="49" pos:column="44">(<argument><expr><name pos:line="49" pos:column="45">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then> <else pos:line="50" pos:column="23">else <block pos:line="50" pos:column="28">{
                        <expr_stmt><expr><name pos:line="51" pos:column="25">sql</name> <op:operator pos:line="51" pos:column="29">+=</op:operator> <lit:literal type="string" pos:line="51" pos:column="32">"'"</lit:literal> <op:operator pos:line="51" pos:column="36">+</op:operator> <call><name><name pos:line="51" pos:column="38">rs</name><op:operator pos:line="51" pos:column="40">.</op:operator><name pos:line="51" pos:column="41">getString</name></name><argument_list pos:line="51" pos:column="50">(<argument><expr><name pos:line="51" pos:column="51">i</name></expr></argument>)</argument_list></call> <op:operator pos:line="51" pos:column="54">+</op:operator> <lit:literal type="string" pos:line="51" pos:column="56">"'"</lit:literal></expr>;</expr_stmt>
                    }</block></else></if>
                    <if pos:line="53" pos:column="21">if <condition pos:line="53" pos:column="24">(<expr><name pos:line="53" pos:column="25">i</name> <op:operator pos:line="53" pos:column="27">&lt;</op:operator> <call><name><name pos:line="53" pos:column="29">rs</name><op:operator pos:line="53" pos:column="31">.</op:operator><name pos:line="53" pos:column="32">getMetaData</name></name><argument_list pos:line="53" pos:column="43">()</argument_list></call><op:operator pos:line="53" pos:column="45">.</op:operator><call><name pos:line="53" pos:column="46">getColumnCount</name><argument_list pos:line="53" pos:column="60">()</argument_list></call></expr>)</condition><then pos:line="53" pos:column="63"> <block pos:line="53" pos:column="64">{
                        <expr_stmt><expr><name pos:line="54" pos:column="25">sql</name> <op:operator pos:line="54" pos:column="29">+=</op:operator> <lit:literal type="string" pos:line="54" pos:column="32">", "</lit:literal></expr>;</expr_stmt>
                    }</block></then> <else pos:line="55" pos:column="23">else <block pos:line="55" pos:column="28">{
                        <expr_stmt><expr><name pos:line="56" pos:column="25">sql</name> <op:operator pos:line="56" pos:column="29">+=</op:operator> <lit:literal type="string" pos:line="56" pos:column="32">")"</lit:literal></expr>;</expr_stmt>
                    }</block></else></if>
                }</block></for>
                <expr_stmt><expr><call><name><name pos:line="59" pos:column="17">stmt</name><op:operator pos:line="59" pos:column="21">.</op:operator><name pos:line="59" pos:column="22">executeUpdate</name></name><argument_list pos:line="59" pos:column="35">(<argument><expr><name pos:line="59" pos:column="36">sql</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <expr_stmt><expr><name pos:line="61" pos:column="13">sql</name> <op:operator pos:line="61" pos:column="17">=</op:operator> <lit:literal type="string" pos:line="61" pos:column="19">"insert into xinco_core_user_modified_record (id, record_id, mod_Time, "</lit:literal>
                    <op:operator pos:line="62" pos:column="21">+</op:operator> <lit:literal type="string" pos:line="62" pos:column="23">"mod_Reason) values ("</lit:literal> <op:operator pos:line="62" pos:column="46">+</op:operator> <name pos:line="62" pos:column="48">id</name> <op:operator pos:line="62" pos:column="51">+</op:operator> <lit:literal type="string" pos:line="62" pos:column="53">", "</lit:literal> <op:operator pos:line="62" pos:column="58">+</op:operator> <name pos:line="62" pos:column="60">record_ID</name> <op:operator pos:line="62" pos:column="70">+</op:operator> <lit:literal type="string" pos:line="62" pos:column="72">", '"</lit:literal>
                    <op:operator pos:line="63" pos:column="21">+</op:operator> <op:operator pos:line="63" pos:column="23">new</op:operator> <call><name pos:line="63" pos:column="27">Timestamp</name><argument_list pos:line="63" pos:column="36">(<argument><expr><call><name><name pos:line="63" pos:column="37">System</name><op:operator pos:line="63" pos:column="43">.</op:operator><name pos:line="63" pos:column="44">currentTimeMillis</name></name><argument_list pos:line="63" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="63" pos:column="65">+</op:operator> <lit:literal type="string" pos:line="63" pos:column="67">"', '"</lit:literal> <op:operator pos:line="63" pos:column="74">+</op:operator> <name pos:line="63" pos:column="76">reason</name> <op:operator pos:line="63" pos:column="83">+</op:operator> <lit:literal type="string" pos:line="63" pos:column="85">"')"</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="64" pos:column="13">stmt</name><op:operator pos:line="64" pos:column="17">.</op:operator><name pos:line="64" pos:column="18">executeUpdate</name></name><argument_list pos:line="64" pos:column="31">(<argument><expr><name pos:line="64" pos:column="32">sql</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="line" pos:line="65" pos:column="13">//System.out.println(sql);</comment>
            <expr_stmt><expr><call><name><name pos:line="66" pos:column="13">DBM</name><op:operator pos:line="66" pos:column="16">.</op:operator><name pos:line="66" pos:column="17">con</name><op:operator pos:line="66" pos:column="20">.</op:operator><name pos:line="66" pos:column="21">commit</name></name><argument_list pos:line="66" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
        }</block> <catch pos:line="67" pos:column="11">catch <parameter_list pos:line="67" pos:column="17">(<param><decl><type><name pos:line="67" pos:column="18">SQLException</name></type> <name pos:line="67" pos:column="31">ex</name></decl></param>)</parameter_list> <block pos:line="67" pos:column="35">{
            <expr_stmt><expr><call><name><name pos:line="68" pos:column="13">ex</name><op:operator pos:line="68" pos:column="15">.</op:operator><name pos:line="68" pos:column="16">printStackTrace</name></name><argument_list pos:line="68" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
            <try pos:line="69" pos:column="13">try <block pos:line="69" pos:column="17">{
                <expr_stmt><expr><call><name><name pos:line="70" pos:column="17">DBM</name><op:operator pos:line="70" pos:column="20">.</op:operator><name pos:line="70" pos:column="21">con</name><op:operator pos:line="70" pos:column="24">.</op:operator><name pos:line="70" pos:column="25">rollback</name></name><argument_list pos:line="70" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            }</block> <catch pos:line="71" pos:column="15">catch <parameter_list pos:line="71" pos:column="21">(<param><decl><type><name pos:line="71" pos:column="22">SQLException</name></type> <name pos:line="71" pos:column="35">ex2</name></decl></param>)</parameter_list> <block pos:line="71" pos:column="40">{
                <expr_stmt><expr><call><name><name pos:line="72" pos:column="17">ex2</name><op:operator pos:line="72" pos:column="20">.</op:operator><name pos:line="72" pos:column="21">printStackTrace</name></name><argument_list pos:line="72" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
        }</block></catch></try>
    }</block></function>
}</block></class>
</unit>
