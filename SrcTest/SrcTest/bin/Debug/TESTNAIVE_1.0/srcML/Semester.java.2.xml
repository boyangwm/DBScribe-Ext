<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\UMAS\src\com\umas\code\Semester.java" pos:tabs="8"><package pos:line="1" pos:column="1">package <name><name pos:line="1" pos:column="9">com</name><op:operator pos:line="1" pos:column="12">.</op:operator><name pos:line="1" pos:column="13">umas</name><op:operator pos:line="1" pos:column="17">.</op:operator><name pos:line="1" pos:column="18">code</name></name>;</package>


<comment type="block" format="javadoc" pos:line="4" pos:column="1">/****************@author Simant Purohit*********************************/</comment>

<import pos:line="6" pos:column="1">import <name><name pos:line="6" pos:column="8">java</name><op:operator pos:line="6" pos:column="12">.</op:operator><name pos:line="6" pos:column="13">sql</name><op:operator pos:line="6" pos:column="16">.</op:operator><name pos:line="6" pos:column="17">Connection</name></name>;</import>
<import pos:line="7" pos:column="1">import <name><name pos:line="7" pos:column="8">java</name><op:operator pos:line="7" pos:column="12">.</op:operator><name pos:line="7" pos:column="13">sql</name><op:operator pos:line="7" pos:column="16">.</op:operator><name pos:line="7" pos:column="17">PreparedStatement</name></name>;</import>
<import pos:line="8" pos:column="1">import <name><name pos:line="8" pos:column="8">java</name><op:operator pos:line="8" pos:column="12">.</op:operator><name pos:line="8" pos:column="13">sql</name><op:operator pos:line="8" pos:column="16">.</op:operator><name pos:line="8" pos:column="17">ResultSet</name></name>;</import>
<import pos:line="9" pos:column="1">import <name><name pos:line="9" pos:column="8">java</name><op:operator pos:line="9" pos:column="12">.</op:operator><name pos:line="9" pos:column="13">sql</name><op:operator pos:line="9" pos:column="16">.</op:operator><name pos:line="9" pos:column="17">SQLException</name></name>;</import>
<import pos:line="10" pos:column="1">import <name><name pos:line="10" pos:column="8">java</name><op:operator pos:line="10" pos:column="12">.</op:operator><name pos:line="10" pos:column="13">sql</name><op:operator pos:line="10" pos:column="16">.</op:operator><name pos:line="10" pos:column="17">Timestamp</name></name>;</import>
<import pos:line="11" pos:column="1">import <name><name pos:line="11" pos:column="8">java</name><op:operator pos:line="11" pos:column="12">.</op:operator><name pos:line="11" pos:column="13">util</name><op:operator pos:line="11" pos:column="17">.</op:operator><name pos:line="11" pos:column="18">Calendar</name></name>;</import>

<class><specifier pos:line="13" pos:column="1">public</specifier> class <name pos:line="13" pos:column="14">Semester</name> <block pos:line="13" pos:column="23">{
	<decl_stmt><decl><type><specifier pos:line="14" pos:column="9">private</specifier> <name pos:line="14" pos:column="17">int</name></type> <name pos:line="14" pos:column="21">SemesterID</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="15" pos:column="9">private</specifier> <name pos:line="15" pos:column="17">String</name></type> <name pos:line="15" pos:column="24">SemesterName</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="16" pos:column="9">private</specifier> <name pos:line="16" pos:column="17">Timestamp</name></type> <name pos:line="16" pos:column="27">SemesterYear</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="17" pos:column="9">private</specifier> <name pos:line="17" pos:column="17">int</name></type> <name pos:line="17" pos:column="21">isCurrent</name></decl>;</decl_stmt>
	<comment type="block" format="javadoc" pos:line="18" pos:column="9">/**
	 * @return the semesterID
	 */</comment>
	<function><type><specifier pos:line="21" pos:column="9">public</specifier> <name pos:line="21" pos:column="16">int</name></type> <name pos:line="21" pos:column="20">getSemesterID</name><parameter_list pos:line="21" pos:column="33">()</parameter_list> <block pos:line="21" pos:column="36">{
		<return pos:line="22" pos:column="17">return <expr><name pos:line="22" pos:column="24">SemesterID</name></expr>;</return>
	}</block></function>
	<comment type="block" format="javadoc" pos:line="24" pos:column="9">/**
	 * @param semesterID the semesterID to set
	 */</comment>
	<function><type><specifier pos:line="27" pos:column="9">public</specifier> <name pos:line="27" pos:column="16">void</name></type> <name pos:line="27" pos:column="21">setSemesterID</name><parameter_list pos:line="27" pos:column="34">(<param><decl><type><name pos:line="27" pos:column="35">int</name></type> <name pos:line="27" pos:column="39">semesterID</name></decl></param>)</parameter_list> <block pos:line="27" pos:column="51">{
		<expr_stmt><expr><name pos:line="28" pos:column="17">SemesterID</name> <op:operator pos:line="28" pos:column="28">=</op:operator> <name pos:line="28" pos:column="30">semesterID</name></expr>;</expr_stmt>
	}</block></function>
	<comment type="block" format="javadoc" pos:line="30" pos:column="9">/**
	 * @return the semesterName
	 */</comment>
	<function><type><specifier pos:line="33" pos:column="9">public</specifier> <name pos:line="33" pos:column="16">String</name></type> <name pos:line="33" pos:column="23">getSemesterName</name><parameter_list pos:line="33" pos:column="38">()</parameter_list> <block pos:line="33" pos:column="41">{
		<return pos:line="34" pos:column="17">return <expr><name pos:line="34" pos:column="24">SemesterName</name></expr>;</return>
	}</block></function>
	<comment type="block" format="javadoc" pos:line="36" pos:column="9">/**
	 * @param semesterName the semesterName to set
	 */</comment>
	<function><type><specifier pos:line="39" pos:column="9">public</specifier> <name pos:line="39" pos:column="16">void</name></type> <name pos:line="39" pos:column="21">setSemesterName</name><parameter_list pos:line="39" pos:column="36">(<param><decl><type><name pos:line="39" pos:column="37">String</name></type> <name pos:line="39" pos:column="44">semesterName</name></decl></param>)</parameter_list> <block pos:line="39" pos:column="58">{
		<expr_stmt><expr><name pos:line="40" pos:column="17">SemesterName</name> <op:operator pos:line="40" pos:column="30">=</op:operator> <name pos:line="40" pos:column="32">semesterName</name></expr>;</expr_stmt>
	}</block></function>
	<comment type="block" format="javadoc" pos:line="42" pos:column="9">/**
	 * @return the semesterYear
	 */</comment>
	<function><type><specifier pos:line="45" pos:column="9">public</specifier> <name pos:line="45" pos:column="16">Timestamp</name></type> <name pos:line="45" pos:column="26">getSemesterYear</name><parameter_list pos:line="45" pos:column="41">()</parameter_list> <block pos:line="45" pos:column="44">{
		<return pos:line="46" pos:column="17">return <expr><name pos:line="46" pos:column="24">SemesterYear</name></expr>;</return>
	}</block></function>
	<comment type="block" format="javadoc" pos:line="48" pos:column="9">/**
	 * @param semesterYear the semesterYear to set
	 */</comment>
	<function><type><specifier pos:line="51" pos:column="9">public</specifier> <name pos:line="51" pos:column="16">void</name></type> <name pos:line="51" pos:column="21">setSemesterYear</name><parameter_list pos:line="51" pos:column="36">(<param><decl><type><name pos:line="51" pos:column="37">Timestamp</name></type> <name pos:line="51" pos:column="47">semesterYear</name></decl></param>)</parameter_list> <block pos:line="51" pos:column="61">{
		<expr_stmt><expr><name pos:line="52" pos:column="17">SemesterYear</name> <op:operator pos:line="52" pos:column="30">=</op:operator> <name pos:line="52" pos:column="32">semesterYear</name></expr>;</expr_stmt>
	}</block></function>
	<comment type="block" format="javadoc" pos:line="54" pos:column="9">/**
	 * @return the isCurrent
	 */</comment>
	<function><type><specifier pos:line="57" pos:column="9">public</specifier> <name pos:line="57" pos:column="16">int</name></type> <name pos:line="57" pos:column="20">getIsCurrent</name><parameter_list pos:line="57" pos:column="32">()</parameter_list> <block pos:line="57" pos:column="35">{
		<return pos:line="58" pos:column="17">return <expr><name pos:line="58" pos:column="24">isCurrent</name></expr>;</return>
	}</block></function>
	<comment type="block" format="javadoc" pos:line="60" pos:column="9">/**
	 * @param isCurrent the isCurrent to set
	 */</comment>
	<function><type><specifier pos:line="63" pos:column="9">public</specifier> <name pos:line="63" pos:column="16">void</name></type> <name pos:line="63" pos:column="21">setIsCurrent</name><parameter_list pos:line="63" pos:column="33">(<param><decl><type><name pos:line="63" pos:column="34">int</name></type> <name pos:line="63" pos:column="38">isCurrent</name></decl></param>)</parameter_list> <block pos:line="63" pos:column="49">{
		<expr_stmt><expr><name><name pos:line="64" pos:column="17">this</name><op:operator pos:line="64" pos:column="21">.</op:operator><name pos:line="64" pos:column="22">isCurrent</name></name> <op:operator pos:line="64" pos:column="32">=</op:operator> <name pos:line="64" pos:column="34">isCurrent</name></expr>;</expr_stmt>
	}</block></function>
	
	<comment type="block" pos:line="67" pos:column="9">/*
	 * Initializes the Semester object to the current semester values
	 */</comment>
	<constructor><specifier pos:line="70" pos:column="9">public</specifier> <name pos:line="70" pos:column="16">Semester</name><parameter_list pos:line="70" pos:column="24">()</parameter_list><block pos:line="70" pos:column="26">{
		<try pos:line="71" pos:column="17">try<block pos:line="71" pos:column="20">{
			<decl_stmt><decl><type><name pos:line="72" pos:column="25">Connection</name></type> <name pos:line="72" pos:column="36">conn</name> <init pos:line="72" pos:column="41">= <expr><call><name><name pos:line="72" pos:column="43">Database</name><op:operator pos:line="72" pos:column="51">.</op:operator><name pos:line="72" pos:column="52">getConnection</name></name><argument_list pos:line="72" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>
			
			<try pos:line="74" pos:column="25">try<block pos:line="74" pos:column="28">{
				<if pos:line="75" pos:column="33">if<condition pos:line="75" pos:column="35">(<expr><name pos:line="75" pos:column="36">conn</name> <op:operator pos:line="75" pos:column="41">!=</op:operator> <lit:literal type="null" pos:line="75" pos:column="44">null</lit:literal></expr>)</condition><then><block pos:line="75" pos:column="49">{
					
					<comment type="line" pos:line="77" pos:column="41">//Retrieve the current semester ID</comment>
					<decl_stmt><decl><type><name pos:line="78" pos:column="41">String</name></type> <name pos:line="78" pos:column="48">semSelect</name> <init pos:line="78" pos:column="58">= <expr><lit:literal type="string" pos:line="78" pos:column="60">"Select *"</lit:literal>
							<op:operator pos:line="79" pos:column="57">+</op:operator> <lit:literal type="string" pos:line="79" pos:column="59">" FROM semester"</lit:literal>
							<op:operator pos:line="80" pos:column="57">+</op:operator> <lit:literal type="string" pos:line="80" pos:column="59">" WHERE isCurrent= ?"</lit:literal></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="81" pos:column="41">PreparedStatement</name></type> <name pos:line="81" pos:column="59">statement</name> <init pos:line="81" pos:column="69">= <expr><call><name><name pos:line="81" pos:column="71">conn</name><op:operator pos:line="81" pos:column="75">.</op:operator><name pos:line="81" pos:column="76">prepareStatement</name></name><argument_list pos:line="81" pos:column="92">(<argument><expr><name pos:line="81" pos:column="93">semSelect</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="82" pos:column="41">statement</name><op:operator pos:line="82" pos:column="50">.</op:operator><name pos:line="82" pos:column="51">setInt</name></name><argument_list pos:line="82" pos:column="57">(<argument><expr><lit:literal type="number" pos:line="82" pos:column="58">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="82" pos:column="61">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="83" pos:column="41">ResultSet</name></type> <name pos:line="83" pos:column="51">rs</name> <init pos:line="83" pos:column="54">= <expr><call><name><name pos:line="83" pos:column="56">statement</name><op:operator pos:line="83" pos:column="65">.</op:operator><name pos:line="83" pos:column="66">executeQuery</name></name><argument_list pos:line="83" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>
					
					<if pos:line="85" pos:column="41">if<condition pos:line="85" pos:column="43">(<expr><call><name><name pos:line="85" pos:column="44">rs</name><op:operator pos:line="85" pos:column="46">.</op:operator><name pos:line="85" pos:column="47">first</name></name><argument_list pos:line="85" pos:column="52">()</argument_list></call></expr>)</condition><then><block pos:line="85" pos:column="55">{
						<expr_stmt><expr><call><name><name pos:line="86" pos:column="49">DBAnnotation</name><op:operator pos:line="86" pos:column="61">.</op:operator><name pos:line="86" pos:column="62">annoate</name></name><argument_list pos:line="86" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="86" pos:column="70">"semID"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="86" pos:column="79">"semester"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="86" pos:column="91">"SemesterID"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="86" pos:column="105">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<decl_stmt><decl><type><name pos:line="87" pos:column="49">int</name></type> <name pos:line="87" pos:column="53">semID</name> <init pos:line="87" pos:column="59">= <expr><call><name><name pos:line="87" pos:column="61">rs</name><op:operator pos:line="87" pos:column="63">.</op:operator><name pos:line="87" pos:column="64">getInt</name></name><argument_list pos:line="87" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="87" pos:column="71">"SemesterID"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><name><name pos:line="88" pos:column="49">this</name><op:operator pos:line="88" pos:column="53">.</op:operator><name pos:line="88" pos:column="54">SemesterID</name></name> <op:operator pos:line="88" pos:column="65">=</op:operator> <name pos:line="88" pos:column="67">semID</name></expr>;</expr_stmt><empty_stmt pos:line="88" pos:column="73">;</empty_stmt>
						
						<expr_stmt><expr><call><name><name pos:line="90" pos:column="49">DBAnnotation</name><op:operator pos:line="90" pos:column="61">.</op:operator><name pos:line="90" pos:column="62">annoate</name></name><argument_list pos:line="90" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="90" pos:column="70">"semName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="90" pos:column="81">"semester"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="90" pos:column="93">"SemesterName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="90" pos:column="109">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<decl_stmt><decl><type><name pos:line="91" pos:column="49">String</name></type> <name pos:line="91" pos:column="56">semName</name> <init pos:line="91" pos:column="64">= <expr><call><name><name pos:line="91" pos:column="66">rs</name><op:operator pos:line="91" pos:column="68">.</op:operator><name pos:line="91" pos:column="69">getString</name></name><argument_list pos:line="91" pos:column="78">(<argument><expr><lit:literal type="string" pos:line="91" pos:column="79">"SemesterName"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><name><name pos:line="92" pos:column="49">this</name><op:operator pos:line="92" pos:column="53">.</op:operator><name pos:line="92" pos:column="54">SemesterName</name></name> <op:operator pos:line="92" pos:column="67">=</op:operator> <name pos:line="92" pos:column="69">semName</name></expr>;</expr_stmt>
						
						<expr_stmt><expr><call><name><name pos:line="94" pos:column="49">DBAnnotation</name><op:operator pos:line="94" pos:column="61">.</op:operator><name pos:line="94" pos:column="62">annoate</name></name><argument_list pos:line="94" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="94" pos:column="70">"semYear"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="94" pos:column="81">"semester"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="94" pos:column="93">"SemesterYear"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="94" pos:column="109">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<decl_stmt><decl><type><name pos:line="95" pos:column="49">Timestamp</name></type> <name pos:line="95" pos:column="59">semYear</name> <init pos:line="95" pos:column="67">=  <expr><call><name><name pos:line="95" pos:column="70">rs</name><op:operator pos:line="95" pos:column="72">.</op:operator><name pos:line="95" pos:column="73">getTimestamp</name></name><argument_list pos:line="95" pos:column="85">(<argument><expr><lit:literal type="string" pos:line="95" pos:column="86">"SemesterYear"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><name><name pos:line="96" pos:column="49">this</name><op:operator pos:line="96" pos:column="53">.</op:operator><name pos:line="96" pos:column="54">SemesterYear</name></name> <op:operator pos:line="96" pos:column="67">=</op:operator> <name pos:line="96" pos:column="69">semYear</name></expr>;</expr_stmt>
						
						<expr_stmt><expr><call><name><name pos:line="98" pos:column="49">DBAnnotation</name><op:operator pos:line="98" pos:column="61">.</op:operator><name pos:line="98" pos:column="62">annoate</name></name><argument_list pos:line="98" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="98" pos:column="70">"usCur"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="98" pos:column="79">"semester"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="98" pos:column="91">"IsCurrent"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="98" pos:column="104">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<decl_stmt><decl><type><name pos:line="99" pos:column="49">int</name></type> <name pos:line="99" pos:column="53">isCur</name> <init pos:line="99" pos:column="59">= <expr><call><name><name pos:line="99" pos:column="61">rs</name><op:operator pos:line="99" pos:column="63">.</op:operator><name pos:line="99" pos:column="64">getInt</name></name><argument_list pos:line="99" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="99" pos:column="71">"IsCurrent"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><name><name pos:line="100" pos:column="49">this</name><op:operator pos:line="100" pos:column="53">.</op:operator><name pos:line="100" pos:column="54">isCurrent</name></name> <op:operator pos:line="100" pos:column="64">=</op:operator> <name pos:line="100" pos:column="66">isCur</name></expr>;</expr_stmt>
					}</block></then></if>							
					
				}</block></then></if>
			}</block>
			
			<catch pos:line="106" pos:column="25">catch<parameter_list pos:line="106" pos:column="30">(<param><decl><type><name pos:line="106" pos:column="31">SQLException</name></type> <name pos:line="106" pos:column="44">e</name></decl></param>)</parameter_list><block pos:line="106" pos:column="46">{
				<expr_stmt><expr><call><name><name pos:line="107" pos:column="33">System</name><op:operator pos:line="107" pos:column="39">.</op:operator><name pos:line="107" pos:column="40">out</name><op:operator pos:line="107" pos:column="43">.</op:operator><name pos:line="107" pos:column="44">println</name></name><argument_list pos:line="107" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="107" pos:column="52">"Error in SQL"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="108" pos:column="33">System</name><op:operator pos:line="108" pos:column="39">.</op:operator><name pos:line="108" pos:column="40">out</name><op:operator pos:line="108" pos:column="43">.</op:operator><name pos:line="108" pos:column="44">println</name></name><argument_list pos:line="108" pos:column="51">(<argument><expr><call><name><name pos:line="108" pos:column="52">e</name><op:operator pos:line="108" pos:column="53">.</op:operator><name pos:line="108" pos:column="54">getMessage</name></name><argument_list pos:line="108" pos:column="64">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="109" pos:column="33">e</name><op:operator pos:line="109" pos:column="34">.</op:operator><name pos:line="109" pos:column="35">printStackTrace</name></name><argument_list pos:line="109" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			}</block></catch></try>
						
		}</block>
		
		<finally pos:line="114" pos:column="17">finally<block pos:line="114" pos:column="24">{
		}</block></finally></try>
	}</block></constructor>

	<comment type="block" pos:line="118" pos:column="9">/*
	 * Starts the process for initializing the next semester
	 * This function calculates the next semester values
	 * Empties the wait and the email lists
	 * Deletes the previous semester course schedule as the new semester is being started
	 * Commits the whole transaction
	 */</comment>
	<function><type><specifier pos:line="125" pos:column="9">public</specifier> <name pos:line="125" pos:column="16">boolean</name></type> <name pos:line="125" pos:column="24">goToNextSemester</name><parameter_list pos:line="125" pos:column="40">()</parameter_list><block pos:line="125" pos:column="42">{
		<expr_stmt><expr><call><name pos:line="126" pos:column="17">calculateNextSemester</name><argument_list pos:line="126" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="127" pos:column="17">System</name><op:operator pos:line="127" pos:column="23">.</op:operator><name pos:line="127" pos:column="24">out</name><op:operator pos:line="127" pos:column="27">.</op:operator><name pos:line="127" pos:column="28">println</name></name><argument_list pos:line="127" pos:column="35">(<argument><expr><name><name pos:line="127" pos:column="36">this</name><op:operator pos:line="127" pos:column="40">.</op:operator><name pos:line="127" pos:column="41">SemesterName</name></name><op:operator pos:line="127" pos:column="53">+</op:operator><lit:literal type="string" pos:line="127" pos:column="54">" "</lit:literal><op:operator pos:line="127" pos:column="57">+</op:operator><name><name pos:line="127" pos:column="58">this</name><op:operator pos:line="127" pos:column="62">.</op:operator><name pos:line="127" pos:column="63">SemesterYear</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="128" pos:column="17">WaitList</name><op:operator pos:line="128" pos:column="25">.</op:operator><name pos:line="128" pos:column="26">emptyWaitAndEmailList</name></name><argument_list pos:line="128" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="129" pos:column="17">CourseSchedule</name><op:operator pos:line="129" pos:column="31">.</op:operator><name pos:line="129" pos:column="32">deleteAllCourseSchedule</name></name><argument_list pos:line="129" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="130" pos:column="17">updateIsCurrent</name><argument_list pos:line="130" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="131" pos:column="17">commitNextSemester</name><argument_list pos:line="131" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="132" pos:column="17">Database</name><op:operator pos:line="132" pos:column="25">.</op:operator><name pos:line="132" pos:column="26">commitTransaction</name></name><argument_list pos:line="132" pos:column="43">(<argument><expr><call><name><name pos:line="132" pos:column="44">Database</name><op:operator pos:line="132" pos:column="52">.</op:operator><name pos:line="132" pos:column="53">getConnection</name></name><argument_list pos:line="132" pos:column="66">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="133" pos:column="17">return <expr><lit:literal type="boolean" pos:line="133" pos:column="24">true</lit:literal></expr>;</return>
		
	}</block></function>
	
	<comment type="block" pos:line="137" pos:column="9">/*
	 * Calculates the new semester values
	 */</comment>
	<function><type><specifier pos:line="140" pos:column="9">private</specifier> <name pos:line="140" pos:column="17">void</name></type> <name pos:line="140" pos:column="22">calculateNextSemester</name><parameter_list pos:line="140" pos:column="43">()</parameter_list><block pos:line="140" pos:column="45">{
		<if pos:line="141" pos:column="17">if<condition pos:line="141" pos:column="19">(<expr><call><name><name pos:line="141" pos:column="20">this</name><op:operator pos:line="141" pos:column="24">.</op:operator><name pos:line="141" pos:column="25">getSemesterName</name></name><argument_list pos:line="141" pos:column="40">()</argument_list></call><op:operator pos:line="141" pos:column="42">.</op:operator><call><name pos:line="141" pos:column="43">equals</name><argument_list pos:line="141" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="141" pos:column="50">"SPRING"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then><block pos:line="141" pos:column="60">{
			<expr_stmt><expr><call><name><name pos:line="142" pos:column="25">this</name><op:operator pos:line="142" pos:column="29">.</op:operator><name pos:line="142" pos:column="30">setSemesterName</name></name><argument_list pos:line="142" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="142" pos:column="46">"SUMMER"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="143" pos:column="25">return;</return>
		}</block></then></if>
		
		<if pos:line="146" pos:column="17">if<condition pos:line="146" pos:column="19">(<expr><call><name><name pos:line="146" pos:column="20">this</name><op:operator pos:line="146" pos:column="24">.</op:operator><name pos:line="146" pos:column="25">getSemesterName</name></name><argument_list pos:line="146" pos:column="40">()</argument_list></call><op:operator pos:line="146" pos:column="42">.</op:operator><call><name pos:line="146" pos:column="43">equals</name><argument_list pos:line="146" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="146" pos:column="50">"SUMMER"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then><block pos:line="146" pos:column="60">{
			<expr_stmt><expr><call><name><name pos:line="147" pos:column="25">this</name><op:operator pos:line="147" pos:column="29">.</op:operator><name pos:line="147" pos:column="30">setSemesterName</name></name><argument_list pos:line="147" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="147" pos:column="46">"FALL"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="148" pos:column="25">return;</return>
		}</block></then></if>
		
		<if pos:line="151" pos:column="17">if<condition pos:line="151" pos:column="19">(<expr><call><name><name pos:line="151" pos:column="20">this</name><op:operator pos:line="151" pos:column="24">.</op:operator><name pos:line="151" pos:column="25">getSemesterName</name></name><argument_list pos:line="151" pos:column="40">()</argument_list></call><op:operator pos:line="151" pos:column="42">.</op:operator><call><name pos:line="151" pos:column="43">equals</name><argument_list pos:line="151" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="151" pos:column="50">"FALL"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then><block pos:line="151" pos:column="58">{
			<decl_stmt><decl><type><name pos:line="152" pos:column="25">long</name></type> <name pos:line="152" pos:column="30">timestamp</name> <init pos:line="152" pos:column="40">= <expr><call><name><name pos:line="152" pos:column="42">this</name><op:operator pos:line="152" pos:column="46">.</op:operator><name pos:line="152" pos:column="47">getSemesterYear</name></name><argument_list pos:line="152" pos:column="62">()</argument_list></call><op:operator pos:line="152" pos:column="64">.</op:operator><call><name pos:line="152" pos:column="65">getTime</name><argument_list pos:line="152" pos:column="72">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="153" pos:column="25">Calendar</name></type> <name pos:line="153" pos:column="34">cal</name> <init pos:line="153" pos:column="38">= <expr><call><name><name pos:line="153" pos:column="40">Calendar</name><op:operator pos:line="153" pos:column="48">.</op:operator><name pos:line="153" pos:column="49">getInstance</name></name><argument_list pos:line="153" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="154" pos:column="25">cal</name><op:operator pos:line="154" pos:column="28">.</op:operator><name pos:line="154" pos:column="29">setTimeInMillis</name></name><argument_list pos:line="154" pos:column="44">(<argument><expr><name pos:line="154" pos:column="45">timestamp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="155" pos:column="25">cal</name><op:operator pos:line="155" pos:column="28">.</op:operator><name pos:line="155" pos:column="29">add</name></name><argument_list pos:line="155" pos:column="32">(<argument><expr><name><name pos:line="155" pos:column="33">Calendar</name><op:operator pos:line="155" pos:column="41">.</op:operator><name pos:line="155" pos:column="42">YEAR</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="155" pos:column="48">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="156" pos:column="25">this</name><op:operator pos:line="156" pos:column="29">.</op:operator><name pos:line="156" pos:column="30">setSemesterYear</name></name><argument_list pos:line="156" pos:column="45">(<argument><expr><op:operator pos:line="156" pos:column="46">new</op:operator> <call><name pos:line="156" pos:column="50">Timestamp</name><argument_list pos:line="156" pos:column="59">(<argument><expr><call><name><name pos:line="156" pos:column="60">cal</name><op:operator pos:line="156" pos:column="63">.</op:operator><name pos:line="156" pos:column="64">getTimeInMillis</name></name><argument_list pos:line="156" pos:column="79">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="157" pos:column="25">this</name><op:operator pos:line="157" pos:column="29">.</op:operator><name pos:line="157" pos:column="30">setSemesterName</name></name><argument_list pos:line="157" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="157" pos:column="46">"SPRING"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="158" pos:column="25">return;</return>
		}</block></then></if>
		
	}</block></function>
	
	<comment type="block" pos:line="163" pos:column="9">/*
	 * Inserts the new semester values in the database
	 * Marks this new semester as current
	 */</comment>
	<function><type><specifier pos:line="167" pos:column="9">public</specifier> <name pos:line="167" pos:column="16">void</name></type> <name pos:line="167" pos:column="21">commitNextSemester</name><parameter_list pos:line="167" pos:column="39">()</parameter_list><block pos:line="167" pos:column="41">{
		<try pos:line="168" pos:column="17">try<block pos:line="168" pos:column="20">{
			<decl_stmt><decl><type><name pos:line="169" pos:column="25">Connection</name></type> <name pos:line="169" pos:column="36">conn</name> <init pos:line="169" pos:column="41">= <expr><call><name><name pos:line="169" pos:column="43">Database</name><op:operator pos:line="169" pos:column="51">.</op:operator><name pos:line="169" pos:column="52">getConnection</name></name><argument_list pos:line="169" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>
			
			<try pos:line="171" pos:column="25">try<block pos:line="171" pos:column="28">{
				<if pos:line="172" pos:column="33">if<condition pos:line="172" pos:column="35">(<expr><name pos:line="172" pos:column="36">conn</name> <op:operator pos:line="172" pos:column="41">!=</op:operator> <lit:literal type="null" pos:line="172" pos:column="44">null</lit:literal></expr>)</condition><then><block pos:line="172" pos:column="49">{

					<expr_stmt><expr><call><name><name pos:line="174" pos:column="41">DBAnnotation</name><op:operator pos:line="174" pos:column="53">.</op:operator><name pos:line="174" pos:column="54">annoate</name></name><argument_list pos:line="174" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="174" pos:column="62">"semName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="174" pos:column="73">"semester"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="174" pos:column="85">"SemesterName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="174" pos:column="101">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="175" pos:column="41">String</name></type> <name pos:line="175" pos:column="48">semName</name> <init pos:line="175" pos:column="56">= <expr><call><name><name pos:line="175" pos:column="58">this</name><op:operator pos:line="175" pos:column="62">.</op:operator><name pos:line="175" pos:column="63">getSemesterName</name></name><argument_list pos:line="175" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>
					
					<expr_stmt><expr><call><name><name pos:line="177" pos:column="41">DBAnnotation</name><op:operator pos:line="177" pos:column="53">.</op:operator><name pos:line="177" pos:column="54">annoate</name></name><argument_list pos:line="177" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="177" pos:column="62">"t"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="177" pos:column="67">"semester"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="177" pos:column="79">"SemesterYear"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="177" pos:column="95">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="178" pos:column="41">Timestamp</name></type> <name pos:line="178" pos:column="51">t</name> <init pos:line="178" pos:column="53">= <expr><call><name><name pos:line="178" pos:column="55">this</name><op:operator pos:line="178" pos:column="59">.</op:operator><name pos:line="178" pos:column="60">getSemesterYear</name></name><argument_list pos:line="178" pos:column="75">()</argument_list></call></expr></init></decl>;</decl_stmt>
					
					<comment type="line" pos:line="180" pos:column="41">//Retrieve the current semester ID</comment>
					<decl_stmt><decl><type><name pos:line="181" pos:column="41">String</name></type> <name pos:line="181" pos:column="48">semAdd</name> <init pos:line="181" pos:column="55">= <expr><lit:literal type="string" pos:line="181" pos:column="57">"Insert into semester"</lit:literal>
							<op:operator pos:line="182" pos:column="57">+</op:operator> <lit:literal type="string" pos:line="182" pos:column="59">" (SemesterName, SemesterYear, isCurrent)"</lit:literal>
							<op:operator pos:line="183" pos:column="57">+</op:operator> <lit:literal type="string" pos:line="183" pos:column="59">" Values(?,?,?)"</lit:literal></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="184" pos:column="41">PreparedStatement</name></type> <name pos:line="184" pos:column="59">statement</name> <init pos:line="184" pos:column="69">= <expr><call><name><name pos:line="184" pos:column="71">conn</name><op:operator pos:line="184" pos:column="75">.</op:operator><name pos:line="184" pos:column="76">prepareStatement</name></name><argument_list pos:line="184" pos:column="92">(<argument><expr><name pos:line="184" pos:column="93">semAdd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="185" pos:column="41">statement</name><op:operator pos:line="185" pos:column="50">.</op:operator><name pos:line="185" pos:column="51">setString</name></name><argument_list pos:line="185" pos:column="60">(<argument><expr><lit:literal type="number" pos:line="185" pos:column="61">1</lit:literal></expr></argument>, <argument><expr><name pos:line="185" pos:column="64">semName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="186" pos:column="41">statement</name><op:operator pos:line="186" pos:column="50">.</op:operator><name pos:line="186" pos:column="51">setTimestamp</name></name><argument_list pos:line="186" pos:column="63">(<argument><expr><lit:literal type="number" pos:line="186" pos:column="64">2</lit:literal></expr></argument>, <argument><expr><name pos:line="186" pos:column="67">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="187" pos:column="41">statement</name><op:operator pos:line="187" pos:column="50">.</op:operator><name pos:line="187" pos:column="51">setInt</name></name><argument_list pos:line="187" pos:column="57">(<argument><expr><lit:literal type="number" pos:line="187" pos:column="58">3</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="187" pos:column="61">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="188" pos:column="41">statement</name><op:operator pos:line="188" pos:column="50">.</op:operator><name pos:line="188" pos:column="51">executeUpdate</name></name><argument_list pos:line="188" pos:column="64">()</argument_list></call></expr>;</expr_stmt>
					
					<comment type="line" pos:line="190" pos:column="41">//Database.commitTransaction(conn);</comment>
				}</block></then></if>
			}</block>
			
			<catch pos:line="194" pos:column="25">catch<parameter_list pos:line="194" pos:column="30">(<param><decl><type><name pos:line="194" pos:column="31">SQLException</name></type> <name pos:line="194" pos:column="44">e</name></decl></param>)</parameter_list><block pos:line="194" pos:column="46">{
				<expr_stmt><expr><call><name><name pos:line="195" pos:column="33">System</name><op:operator pos:line="195" pos:column="39">.</op:operator><name pos:line="195" pos:column="40">out</name><op:operator pos:line="195" pos:column="43">.</op:operator><name pos:line="195" pos:column="44">println</name></name><argument_list pos:line="195" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="195" pos:column="52">"Error in SQL"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="196" pos:column="33">System</name><op:operator pos:line="196" pos:column="39">.</op:operator><name pos:line="196" pos:column="40">out</name><op:operator pos:line="196" pos:column="43">.</op:operator><name pos:line="196" pos:column="44">println</name></name><argument_list pos:line="196" pos:column="51">(<argument><expr><call><name><name pos:line="196" pos:column="52">e</name><op:operator pos:line="196" pos:column="53">.</op:operator><name pos:line="196" pos:column="54">getMessage</name></name><argument_list pos:line="196" pos:column="64">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="197" pos:column="33">e</name><op:operator pos:line="197" pos:column="34">.</op:operator><name pos:line="197" pos:column="35">printStackTrace</name></name><argument_list pos:line="197" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			}</block></catch></try>
						
		}</block>
		
		<finally pos:line="202" pos:column="17">finally<block pos:line="202" pos:column="24">{
		}</block></finally></try>
	}</block></function>
	
	<comment type="block" pos:line="206" pos:column="9">/*
	 * Makes all the previous semesters non current after the new semester is added
	 */</comment>
	<function><type><specifier pos:line="209" pos:column="9">public</specifier> <name pos:line="209" pos:column="16">void</name></type> <name pos:line="209" pos:column="21">updateIsCurrent</name><parameter_list pos:line="209" pos:column="36">()</parameter_list><block pos:line="209" pos:column="38">{
		<try pos:line="210" pos:column="17">try<block pos:line="210" pos:column="20">{
			<decl_stmt><decl><type><name pos:line="211" pos:column="25">Connection</name></type> <name pos:line="211" pos:column="36">conn</name> <init pos:line="211" pos:column="41">= <expr><call><name><name pos:line="211" pos:column="43">Database</name><op:operator pos:line="211" pos:column="51">.</op:operator><name pos:line="211" pos:column="52">getConnection</name></name><argument_list pos:line="211" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>
			
			<try pos:line="213" pos:column="25">try<block pos:line="213" pos:column="28">{
				<if pos:line="214" pos:column="33">if<condition pos:line="214" pos:column="35">(<expr><name pos:line="214" pos:column="36">conn</name> <op:operator pos:line="214" pos:column="41">!=</op:operator> <lit:literal type="null" pos:line="214" pos:column="44">null</lit:literal></expr>)</condition><then><block pos:line="214" pos:column="49">{
					
					<decl_stmt><decl><type><name pos:line="216" pos:column="41">String</name></type> <name pos:line="216" pos:column="48">semAdd</name> <init pos:line="216" pos:column="55">= <expr><lit:literal type="string" pos:line="216" pos:column="57">"UPDATE semester"</lit:literal>
							<op:operator pos:line="217" pos:column="57">+</op:operator> <lit:literal type="string" pos:line="217" pos:column="59">" SET IsCurrent= ?"</lit:literal></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="218" pos:column="41">PreparedStatement</name></type> <name pos:line="218" pos:column="59">statement</name> <init pos:line="218" pos:column="69">= <expr><call><name><name pos:line="218" pos:column="71">conn</name><op:operator pos:line="218" pos:column="75">.</op:operator><name pos:line="218" pos:column="76">prepareStatement</name></name><argument_list pos:line="218" pos:column="92">(<argument><expr><name pos:line="218" pos:column="93">semAdd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="219" pos:column="41">statement</name><op:operator pos:line="219" pos:column="50">.</op:operator><name pos:line="219" pos:column="51">setInt</name></name><argument_list pos:line="219" pos:column="57">(<argument><expr><lit:literal type="number" pos:line="219" pos:column="58">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="219" pos:column="61">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="220" pos:column="41">statement</name><op:operator pos:line="220" pos:column="50">.</op:operator><name pos:line="220" pos:column="51">executeUpdate</name></name><argument_list pos:line="220" pos:column="64">()</argument_list></call></expr>;</expr_stmt>			
					<expr_stmt><expr><call><name><name pos:line="221" pos:column="41">Database</name><op:operator pos:line="221" pos:column="49">.</op:operator><name pos:line="221" pos:column="50">commitTransaction</name></name><argument_list pos:line="221" pos:column="67">(<argument><expr><name pos:line="221" pos:column="68">conn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
			}</block>
			
			<catch pos:line="225" pos:column="25">catch<parameter_list pos:line="225" pos:column="30">(<param><decl><type><name pos:line="225" pos:column="31">SQLException</name></type> <name pos:line="225" pos:column="44">e</name></decl></param>)</parameter_list><block pos:line="225" pos:column="46">{
				<expr_stmt><expr><call><name><name pos:line="226" pos:column="33">System</name><op:operator pos:line="226" pos:column="39">.</op:operator><name pos:line="226" pos:column="40">out</name><op:operator pos:line="226" pos:column="43">.</op:operator><name pos:line="226" pos:column="44">println</name></name><argument_list pos:line="226" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="226" pos:column="52">"Error in SQL"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="227" pos:column="33">System</name><op:operator pos:line="227" pos:column="39">.</op:operator><name pos:line="227" pos:column="40">out</name><op:operator pos:line="227" pos:column="43">.</op:operator><name pos:line="227" pos:column="44">println</name></name><argument_list pos:line="227" pos:column="51">(<argument><expr><call><name><name pos:line="227" pos:column="52">e</name><op:operator pos:line="227" pos:column="53">.</op:operator><name pos:line="227" pos:column="54">getMessage</name></name><argument_list pos:line="227" pos:column="64">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="228" pos:column="33">e</name><op:operator pos:line="228" pos:column="34">.</op:operator><name pos:line="228" pos:column="35">printStackTrace</name></name><argument_list pos:line="228" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			}</block></catch></try>
						
		}</block>
		
		<finally pos:line="233" pos:column="17">finally<block pos:line="233" pos:column="24">{
		}</block></finally></try>		
	}</block></function>
	
	<comment type="block" pos:line="237" pos:column="9">/*
	 * (non-Javadoc)
	 * @see java.lang.Object#toString()
	 */</comment>
	<function><type><specifier pos:line="241" pos:column="9">public</specifier> <name pos:line="241" pos:column="16">String</name></type> <name pos:line="241" pos:column="23">toString</name><parameter_list pos:line="241" pos:column="31">()</parameter_list><block pos:line="241" pos:column="33">{
		<decl_stmt><decl><type><name pos:line="242" pos:column="17">long</name></type> <name pos:line="242" pos:column="22">timeStamp</name> <init pos:line="242" pos:column="32">= <expr><call><name><name pos:line="242" pos:column="34">this</name><op:operator pos:line="242" pos:column="38">.</op:operator><name pos:line="242" pos:column="39">getSemesterYear</name></name><argument_list pos:line="242" pos:column="54">()</argument_list></call><op:operator pos:line="242" pos:column="56">.</op:operator><call><name pos:line="242" pos:column="57">getTime</name><argument_list pos:line="242" pos:column="64">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="243" pos:column="17">Calendar</name></type> <name pos:line="243" pos:column="26">c</name> <init pos:line="243" pos:column="28">= <expr><call><name><name pos:line="243" pos:column="30">Calendar</name><op:operator pos:line="243" pos:column="38">.</op:operator><name pos:line="243" pos:column="39">getInstance</name></name><argument_list pos:line="243" pos:column="50">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="244" pos:column="17">c</name><op:operator pos:line="244" pos:column="18">.</op:operator><name pos:line="244" pos:column="19">setTimeInMillis</name></name><argument_list pos:line="244" pos:column="34">(<argument><expr><name pos:line="244" pos:column="35">timeStamp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="245" pos:column="17">int</name></type> <name pos:line="245" pos:column="21">year</name> <init pos:line="245" pos:column="26">= <expr><call><name><name pos:line="245" pos:column="28">c</name><op:operator pos:line="245" pos:column="29">.</op:operator><name pos:line="245" pos:column="30">get</name></name><argument_list pos:line="245" pos:column="33">(<argument><expr><name><name pos:line="245" pos:column="34">Calendar</name><op:operator pos:line="245" pos:column="42">.</op:operator><name pos:line="245" pos:column="43">YEAR</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<return pos:line="246" pos:column="17">return <expr><call><name><name pos:line="246" pos:column="24">this</name><op:operator pos:line="246" pos:column="28">.</op:operator><name pos:line="246" pos:column="29">getSemesterName</name></name><argument_list pos:line="246" pos:column="44">()</argument_list></call><op:operator pos:line="246" pos:column="46">+</op:operator><lit:literal type="string" pos:line="246" pos:column="47">" "</lit:literal><op:operator pos:line="246" pos:column="50">+</op:operator><name pos:line="246" pos:column="51">year</name></expr>;</return>
	}</block></function>
	
}</block></class>
</unit>
