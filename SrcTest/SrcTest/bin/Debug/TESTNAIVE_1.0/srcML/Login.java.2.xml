<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\UMAS\src\com\umas\code\Login.java" pos:tabs="8"><package pos:line="1" pos:column="1">package <name><name pos:line="1" pos:column="9">com</name><op:operator pos:line="1" pos:column="12">.</op:operator><name pos:line="1" pos:column="13">umas</name><op:operator pos:line="1" pos:column="17">.</op:operator><name pos:line="1" pos:column="18">code</name></name>;</package>


<comment type="line" pos:line="4" pos:column="1">//import java.lang.annotation.*;</comment>
<import pos:line="5" pos:column="1">import <name><name pos:line="5" pos:column="8">java</name><op:operator pos:line="5" pos:column="12">.</op:operator><name pos:line="5" pos:column="13">sql</name><op:operator pos:line="5" pos:column="16">.</op:operator><name pos:line="5" pos:column="17">Connection</name></name>;</import>
<import pos:line="6" pos:column="1">import <name><name pos:line="6" pos:column="8">java</name><op:operator pos:line="6" pos:column="12">.</op:operator><name pos:line="6" pos:column="13">sql</name><op:operator pos:line="6" pos:column="16">.</op:operator><name pos:line="6" pos:column="17">PreparedStatement</name></name>;</import>
<import pos:line="7" pos:column="1">import <name><name pos:line="7" pos:column="8">java</name><op:operator pos:line="7" pos:column="12">.</op:operator><name pos:line="7" pos:column="13">sql</name><op:operator pos:line="7" pos:column="16">.</op:operator><name pos:line="7" pos:column="17">ResultSet</name></name>;</import>
<import pos:line="8" pos:column="1">import <name><name pos:line="8" pos:column="8">java</name><op:operator pos:line="8" pos:column="12">.</op:operator><name pos:line="8" pos:column="13">sql</name><op:operator pos:line="8" pos:column="16">.</op:operator><name pos:line="8" pos:column="17">SQLException</name></name>;</import>

<class><specifier pos:line="10" pos:column="1">public</specifier> class <name pos:line="10" pos:column="14">Login</name> <block pos:line="10" pos:column="20">{
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">String</name></type> <name pos:line="11" pos:column="16">username</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">String</name></type> <name pos:line="12" pos:column="16">password</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">People</name></type> <name pos:line="13" pos:column="16">people</name></decl>;</decl_stmt>
	
<comment type="line" pos:line="15" pos:column="1">//	@Target({ElementType.LOCAL_VARIABLE})</comment>
<comment type="line" pos:line="16" pos:column="1">//	@Retention(RetentionPolicy.RUNTIME)</comment>
<comment type="line" pos:line="17" pos:column="1">//	public @interface DBAnnotation {</comment>
<comment type="line" pos:line="18" pos:column="1">//	 String[] variable () default "";</comment>
<comment type="line" pos:line="19" pos:column="1">//	 String[] table () default "";</comment>
<comment type="line" pos:line="20" pos:column="1">//	 String[] column () default "";</comment>
<comment type="line" pos:line="21" pos:column="1">//	 boolean[] isSource () default false; </comment>
<comment type="line" pos:line="22" pos:column="1">//	}</comment>
	
	<function><type><specifier pos:line="24" pos:column="9">public</specifier> <name pos:line="24" pos:column="16">String</name></type> <name pos:line="24" pos:column="23">getUsername</name><parameter_list pos:line="24" pos:column="34">()</parameter_list> <block pos:line="24" pos:column="37">{
		<return pos:line="25" pos:column="17">return <expr><name pos:line="25" pos:column="24">username</name></expr>;</return>
	}</block></function>

	<function><type><specifier pos:line="28" pos:column="9">public</specifier> <name pos:line="28" pos:column="16">String</name></type> <name pos:line="28" pos:column="23">getPassword</name><parameter_list pos:line="28" pos:column="34">()</parameter_list> <block pos:line="28" pos:column="37">{
		<return pos:line="29" pos:column="17">return <expr><name pos:line="29" pos:column="24">password</name></expr>;</return>
	}</block></function>
	
	<function><type><specifier pos:line="32" pos:column="9">public</specifier> <name pos:line="32" pos:column="16">void</name></type> <name pos:line="32" pos:column="21">setUsername</name><parameter_list pos:line="32" pos:column="32">(<param><decl><type><name pos:line="32" pos:column="33">String</name></type> <name pos:line="32" pos:column="40">username</name></decl></param>)</parameter_list> <block pos:line="32" pos:column="50">{
		<expr_stmt><expr><name><name pos:line="33" pos:column="17">this</name><op:operator pos:line="33" pos:column="21">.</op:operator><name pos:line="33" pos:column="22">username</name></name> <op:operator pos:line="33" pos:column="31">=</op:operator> <name pos:line="33" pos:column="33">username</name></expr>;</expr_stmt>
	}</block></function>
	
	<function><type><specifier pos:line="36" pos:column="9">public</specifier> <name pos:line="36" pos:column="16">void</name></type> <name pos:line="36" pos:column="21">setPassword</name><parameter_list pos:line="36" pos:column="32">(<param><decl><type><name pos:line="36" pos:column="33">String</name></type> <name pos:line="36" pos:column="40">password</name></decl></param>)</parameter_list> <block pos:line="36" pos:column="50">{
		<expr_stmt><expr><name><name pos:line="37" pos:column="17">this</name><op:operator pos:line="37" pos:column="21">.</op:operator><name pos:line="37" pos:column="22">password</name></name> <op:operator pos:line="37" pos:column="31">=</op:operator> <name pos:line="37" pos:column="33">password</name></expr>;</expr_stmt>
	}</block></function>

	<comment type="line" pos:line="40" pos:column="9">// Constructor</comment>
	<constructor><specifier pos:line="41" pos:column="9">public</specifier> <name pos:line="41" pos:column="16">Login</name><parameter_list pos:line="41" pos:column="21">(<param><decl><type><name pos:line="41" pos:column="22">String</name></type> <name pos:line="41" pos:column="29">username</name></decl></param>, <param><decl><type><name><name pos:line="41" pos:column="39">char</name><index pos:line="41" pos:column="43">[]</index></name></type> <name pos:line="41" pos:column="46">password</name></decl></param>)</parameter_list> <block pos:line="41" pos:column="56">{
		<expr_stmt><expr><name><name pos:line="42" pos:column="17">this</name><op:operator pos:line="42" pos:column="21">.</op:operator><name pos:line="42" pos:column="22">username</name></name> <op:operator pos:line="42" pos:column="31">=</op:operator> <name pos:line="42" pos:column="33">username</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="43" pos:column="17">this</name><op:operator pos:line="43" pos:column="21">.</op:operator><name pos:line="43" pos:column="22">password</name></name> <op:operator pos:line="43" pos:column="31">=</op:operator> <op:operator pos:line="43" pos:column="33">new</op:operator> <call><name pos:line="43" pos:column="37">String</name><argument_list pos:line="43" pos:column="43">(<argument><expr><name pos:line="43" pos:column="44">password</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></constructor>

	<comment type="line" pos:line="46" pos:column="9">// To authenticate the username and password during login</comment>
	<function><type><specifier pos:line="47" pos:column="9">public</specifier> <name pos:line="47" pos:column="16">boolean</name></type> <name pos:line="47" pos:column="24">authenticate</name><parameter_list pos:line="47" pos:column="36">()</parameter_list><block pos:line="47" pos:column="38">{
		<decl_stmt><decl><type><name pos:line="48" pos:column="17">String</name></type> <name pos:line="48" pos:column="24">username</name> <init pos:line="48" pos:column="33">= <expr><call><name><name pos:line="48" pos:column="35">this</name><op:operator pos:line="48" pos:column="39">.</op:operator><name pos:line="48" pos:column="40">getUsername</name></name><argument_list pos:line="48" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="49" pos:column="17">String</name></type> <name pos:line="49" pos:column="24">password</name> <init pos:line="49" pos:column="33">=  <expr><call><name><name pos:line="49" pos:column="36">this</name><op:operator pos:line="49" pos:column="40">.</op:operator><name pos:line="49" pos:column="41">getPassword</name></name><argument_list pos:line="49" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="50" pos:column="17">boolean</name></type> <name pos:line="50" pos:column="25">isValidUser</name> <init pos:line="50" pos:column="37">= <expr><lit:literal type="boolean" pos:line="50" pos:column="39">false</lit:literal></expr></init></decl>;</decl_stmt> 
<comment type="line" pos:line="51" pos:column="1">//		@DBAnnotation (</comment>
<comment type="line" pos:line="52" pos:column="1">//				variable = {"username","password"},  </comment>
<comment type="line" pos:line="53" pos:column="1">//				table = "logindetails", </comment>
<comment type="line" pos:line="54" pos:column="1">//				column = {"Username","Password"}, </comment>
<comment type="line" pos:line="55" pos:column="1">//				isSource = true)</comment>
		<decl_stmt><decl><type><name pos:line="56" pos:column="17">String</name></type> <name pos:line="56" pos:column="24">SQLLoginSelect</name> <init pos:line="56" pos:column="39">= <expr><lit:literal type="string" pos:line="56" pos:column="41">"SELECT Username, Password FROM logindetails WHERE username = ? AND Password = ? ;"</lit:literal></expr></init></decl>;</decl_stmt>
		
		<try pos:line="58" pos:column="17">try <block pos:line="58" pos:column="21">{
			<decl_stmt><decl><type><name pos:line="59" pos:column="25">Connection</name></type> <name pos:line="59" pos:column="36">conn</name> <init pos:line="59" pos:column="41">= <expr><call><name><name pos:line="59" pos:column="43">Database</name><op:operator pos:line="59" pos:column="51">.</op:operator><name pos:line="59" pos:column="52">getConnection</name></name><argument_list pos:line="59" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<try pos:line="60" pos:column="25">try <block pos:line="60" pos:column="29">{
				<if pos:line="61" pos:column="33">if <condition pos:line="61" pos:column="36">(<expr><name pos:line="61" pos:column="37">conn</name> <op:operator pos:line="61" pos:column="42">!=</op:operator> <lit:literal type="null" pos:line="61" pos:column="45">null</lit:literal></expr>)</condition><then pos:line="61" pos:column="50"> <block pos:line="61" pos:column="51">{
					<comment type="line" pos:line="62" pos:column="41">// Check if file is already present. </comment>
					<decl_stmt><decl><type><name pos:line="63" pos:column="41">PreparedStatement</name></type> <name pos:line="63" pos:column="59">statement</name> <init pos:line="63" pos:column="69">= <expr><call><name><name pos:line="63" pos:column="71">conn</name><op:operator pos:line="63" pos:column="75">.</op:operator><name pos:line="63" pos:column="76">prepareStatement</name></name><argument_list pos:line="63" pos:column="92">(<argument><expr><name pos:line="63" pos:column="93">SQLLoginSelect</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="64" pos:column="41">DBAnnotation</name><op:operator pos:line="64" pos:column="53">.</op:operator><name pos:line="64" pos:column="54">annoate</name></name><argument_list pos:line="64" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="64" pos:column="62">"username"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="64" pos:column="74">"logindetails"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="64" pos:column="90">"Username"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="64" pos:column="102">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="65" pos:column="41">statement</name><op:operator pos:line="65" pos:column="50">.</op:operator><name pos:line="65" pos:column="51">setString</name></name><argument_list pos:line="65" pos:column="60">(<argument><expr><lit:literal type="number" pos:line="65" pos:column="61">1</lit:literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="64">username</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="66" pos:column="41">DBAnnotation</name><op:operator pos:line="66" pos:column="53">.</op:operator><name pos:line="66" pos:column="54">annoate</name></name><argument_list pos:line="66" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="66" pos:column="62">"password"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="66" pos:column="74">"logindetails"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="66" pos:column="90">"Password"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="66" pos:column="102">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="67" pos:column="41">statement</name><op:operator pos:line="67" pos:column="50">.</op:operator><name pos:line="67" pos:column="51">setString</name></name><argument_list pos:line="67" pos:column="60">(<argument><expr><lit:literal type="number" pos:line="67" pos:column="61">2</lit:literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="64">password</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="68" pos:column="41">ResultSet</name></type> <name pos:line="68" pos:column="51">rs</name> <init pos:line="68" pos:column="54">= <expr><call><name><name pos:line="68" pos:column="56">statement</name><op:operator pos:line="68" pos:column="65">.</op:operator><name pos:line="68" pos:column="66">executeQuery</name></name><argument_list pos:line="68" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<if pos:line="69" pos:column="41">if <condition pos:line="69" pos:column="44">(<expr><call><name><name pos:line="69" pos:column="45">rs</name><op:operator pos:line="69" pos:column="47">.</op:operator><name pos:line="69" pos:column="48">next</name></name><argument_list pos:line="69" pos:column="52">()</argument_list></call></expr>)</condition><then pos:line="69" pos:column="55"> <block pos:line="69" pos:column="56">{
						<comment type="line" pos:line="70" pos:column="49">// Retrieve by column name</comment>
						<expr_stmt><expr><call><name><name pos:line="71" pos:column="49">DBAnnotation</name><op:operator pos:line="71" pos:column="61">.</op:operator><name pos:line="71" pos:column="62">annoate</name></name><argument_list pos:line="71" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="71" pos:column="70">"tableUsername"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="71" pos:column="87">"logindetails"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="71" pos:column="103">"Username"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="71" pos:column="115">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<decl_stmt><decl><type><name pos:line="72" pos:column="49">String</name></type> <name pos:line="72" pos:column="56">tableUsername</name> <init pos:line="72" pos:column="70">= <expr><call><name><name pos:line="72" pos:column="72">rs</name><op:operator pos:line="72" pos:column="74">.</op:operator><name pos:line="72" pos:column="75">getString</name></name><argument_list pos:line="72" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="72" pos:column="85">"Username"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><call><name><name pos:line="73" pos:column="49">DBAnnotation</name><op:operator pos:line="73" pos:column="61">.</op:operator><name pos:line="73" pos:column="62">annoate</name></name><argument_list pos:line="73" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="73" pos:column="70">"tablePassword"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="73" pos:column="87">"logindetails"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="73" pos:column="103">"Password"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="73" pos:column="115">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<decl_stmt><decl><type><name pos:line="74" pos:column="49">String</name></type> <name pos:line="74" pos:column="56">tablePassword</name> <init pos:line="74" pos:column="70">= <expr><call><name><name pos:line="74" pos:column="72">rs</name><op:operator pos:line="74" pos:column="74">.</op:operator><name pos:line="74" pos:column="75">getString</name></name><argument_list pos:line="74" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="74" pos:column="85">"Password"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						
						<if pos:line="76" pos:column="49">if<condition pos:line="76" pos:column="51">(<expr><op:operator pos:line="76" pos:column="52">(</op:operator><call><name><name pos:line="76" pos:column="53">tableUsername</name><op:operator pos:line="76" pos:column="66">.</op:operator><name pos:line="76" pos:column="67">equals</name></name><argument_list pos:line="76" pos:column="73">(<argument><expr><name pos:line="76" pos:column="74">username</name></expr></argument>)</argument_list></call><op:operator pos:line="76" pos:column="83">)</op:operator> <op:operator pos:line="76" pos:column="85">&amp;&amp;</op:operator> <op:operator pos:line="76" pos:column="88">(</op:operator><call><name><name pos:line="76" pos:column="89">tablePassword</name><op:operator pos:line="76" pos:column="102">.</op:operator><name pos:line="76" pos:column="103">equals</name></name><argument_list pos:line="76" pos:column="109">(<argument><expr><name pos:line="76" pos:column="110">password</name></expr></argument>)</argument_list></call><op:operator pos:line="76" pos:column="119">)</op:operator></expr>)</condition><then><block pos:line="76" pos:column="121">{ 
								<expr_stmt><expr><name pos:line="77" pos:column="65">isValidUser</name> <op:operator pos:line="77" pos:column="77">=</op:operator> <lit:literal type="boolean" pos:line="77" pos:column="79">true</lit:literal></expr>;</expr_stmt>
							<comment type="line" pos:line="78" pos:column="57">//break;</comment>
						}</block></then></if>
					}</block></then></if>
				}</block></then></if>	
			}</block> <catch pos:line="82" pos:column="27">catch <parameter_list pos:line="82" pos:column="33">(<param><decl><type><name pos:line="82" pos:column="34">SQLException</name></type> <name pos:line="82" pos:column="47">e</name></decl></param>)</parameter_list> <block pos:line="82" pos:column="50">{
				<expr_stmt><expr><call><name><name pos:line="83" pos:column="33">System</name><op:operator pos:line="83" pos:column="39">.</op:operator><name pos:line="83" pos:column="40">out</name><op:operator pos:line="83" pos:column="43">.</op:operator><name pos:line="83" pos:column="44">println</name></name><argument_list pos:line="83" pos:column="51">(<argument><expr><name pos:line="83" pos:column="52">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></catch></try>

		}</block> <catch pos:line="86" pos:column="19">catch <parameter_list pos:line="86" pos:column="25">(<param><decl><type><name pos:line="86" pos:column="26">Exception</name></type> <name pos:line="86" pos:column="36">e</name></decl></param>)</parameter_list> <block pos:line="86" pos:column="39">{
			<expr_stmt><expr><call><name><name pos:line="87" pos:column="25">System</name><op:operator pos:line="87" pos:column="31">.</op:operator><name pos:line="87" pos:column="32">out</name><op:operator pos:line="87" pos:column="35">.</op:operator><name pos:line="87" pos:column="36">println</name></name><argument_list pos:line="87" pos:column="43">(<argument><expr><name pos:line="87" pos:column="44">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></catch></try>
		
		<return pos:line="90" pos:column="17">return <expr><name pos:line="90" pos:column="24">isValidUser</name></expr>;</return>
	}</block></function>
	
	<comment type="line" pos:line="93" pos:column="9">// Adds username and password into the database table when a person is added to the people table</comment>
	<function><type><specifier pos:line="94" pos:column="9">public</specifier> <name pos:line="94" pos:column="16">boolean</name></type> <name pos:line="94" pos:column="24">addLoginInfoToDB</name><parameter_list pos:line="94" pos:column="40">(<param><decl><type><name pos:line="94" pos:column="41">String</name></type> <name pos:line="94" pos:column="48">username</name></decl></param>, <param><decl><type><name pos:line="94" pos:column="58">String</name></type> <name pos:line="94" pos:column="65">password</name></decl></param>)</parameter_list><block pos:line="94" pos:column="74">{
		<decl_stmt><decl><type><name pos:line="95" pos:column="17">boolean</name></type> <name pos:line="95" pos:column="25">loginInfoAdded</name> <init pos:line="95" pos:column="40">= <expr><lit:literal type="boolean" pos:line="95" pos:column="42">false</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="96" pos:column="17">boolean</name></type> <name pos:line="96" pos:column="25">isUsernamePresent</name> <init pos:line="96" pos:column="43">= <expr><call><name pos:line="96" pos:column="45">checkUsernameInDatabase</name><argument_list pos:line="96" pos:column="68">(<argument><expr><name pos:line="96" pos:column="69">username</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<if pos:line="98" pos:column="17">if <condition pos:line="98" pos:column="20">(<expr><name pos:line="98" pos:column="21">isUsernamePresent</name> <op:operator pos:line="98" pos:column="39">==</op:operator> <lit:literal type="boolean" pos:line="98" pos:column="42">false</lit:literal></expr>)</condition><then><block pos:line="98" pos:column="48">{
<comment type="line" pos:line="99" pos:column="1">//			@DBAnnotation (</comment>
<comment type="line" pos:line="100" pos:column="1">//				variable = {"username","password"},  </comment>
<comment type="line" pos:line="101" pos:column="1">//				table = "logindetails", </comment>
<comment type="line" pos:line="102" pos:column="1">//				column = {"Username","Password"}, </comment>
<comment type="line" pos:line="103" pos:column="1">//				isSource = false)</comment>
		
			<decl_stmt><decl><type><name pos:line="105" pos:column="25">String</name></type> <name pos:line="105" pos:column="32">SQLLoginInsert</name> <init pos:line="105" pos:column="47">= <expr><lit:literal type="string" pos:line="105" pos:column="49">"INSERT INTO logindetails (Username,Password) VALUES(?,?);"</lit:literal></expr></init></decl>;</decl_stmt>
			
			<try pos:line="107" pos:column="25">try <block pos:line="107" pos:column="29">{
				<decl_stmt><decl><type><name pos:line="108" pos:column="33">Connection</name></type> <name pos:line="108" pos:column="44">conn</name> <init pos:line="108" pos:column="49">= <expr><call><name><name pos:line="108" pos:column="51">Database</name><op:operator pos:line="108" pos:column="59">.</op:operator><name pos:line="108" pos:column="60">getConnection</name></name><argument_list pos:line="108" pos:column="73">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<try pos:line="109" pos:column="33">try <block pos:line="109" pos:column="37">{
					<if pos:line="110" pos:column="41">if <condition pos:line="110" pos:column="44">(<expr><name pos:line="110" pos:column="45">conn</name> <op:operator pos:line="110" pos:column="50">!=</op:operator> <lit:literal type="null" pos:line="110" pos:column="53">null</lit:literal></expr>)</condition><then pos:line="110" pos:column="58"> <block pos:line="110" pos:column="59">{
			
						<decl_stmt><decl><type><name pos:line="112" pos:column="49">PreparedStatement</name></type> <name pos:line="112" pos:column="67">statement</name> <init pos:line="112" pos:column="77">= <expr><call><name><name pos:line="112" pos:column="79">conn</name><op:operator pos:line="112" pos:column="83">.</op:operator><name pos:line="112" pos:column="84">prepareStatement</name></name><argument_list pos:line="112" pos:column="100">(<argument><expr><name pos:line="112" pos:column="101">SQLLoginInsert</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><call><name><name pos:line="113" pos:column="49">DBAnnotation</name><op:operator pos:line="113" pos:column="61">.</op:operator><name pos:line="113" pos:column="62">annoate</name></name><argument_list pos:line="113" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="113" pos:column="70">"username"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="113" pos:column="82">"logindetails"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="113" pos:column="98">"Username"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="113" pos:column="110">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="114" pos:column="49">statement</name><op:operator pos:line="114" pos:column="58">.</op:operator><name pos:line="114" pos:column="59">setString</name></name><argument_list pos:line="114" pos:column="68">(<argument><expr><lit:literal type="number" pos:line="114" pos:column="69">1</lit:literal></expr></argument>, <argument><expr><name pos:line="114" pos:column="72">username</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="115" pos:column="49">DBAnnotation</name><op:operator pos:line="115" pos:column="61">.</op:operator><name pos:line="115" pos:column="62">annoate</name></name><argument_list pos:line="115" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="115" pos:column="70">"password"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="115" pos:column="82">"logindetails"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="115" pos:column="98">"Password"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="115" pos:column="110">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="116" pos:column="49">statement</name><op:operator pos:line="116" pos:column="58">.</op:operator><name pos:line="116" pos:column="59">setString</name></name><argument_list pos:line="116" pos:column="68">(<argument><expr><lit:literal type="number" pos:line="116" pos:column="69">2</lit:literal></expr></argument>, <argument><expr><name pos:line="116" pos:column="72">password</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="117" pos:column="49">statement</name><op:operator pos:line="117" pos:column="58">.</op:operator><name pos:line="117" pos:column="59">executeUpdate</name></name><argument_list pos:line="117" pos:column="72">()</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="118" pos:column="49">Database</name><op:operator pos:line="118" pos:column="57">.</op:operator><name pos:line="118" pos:column="58">commitTransaction</name></name><argument_list pos:line="118" pos:column="75">(<argument><expr><name pos:line="118" pos:column="76">conn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name pos:line="119" pos:column="49">loginInfoAdded</name> <op:operator pos:line="119" pos:column="64">=</op:operator> <lit:literal type="boolean" pos:line="119" pos:column="66">true</lit:literal></expr>;</expr_stmt>
					}</block></then></if>
				}</block> <catch pos:line="121" pos:column="35">catch <parameter_list pos:line="121" pos:column="41">(<param><decl><type><name pos:line="121" pos:column="42">SQLException</name></type> <name pos:line="121" pos:column="55">e</name></decl></param>)</parameter_list> <block pos:line="121" pos:column="58">{
					<expr_stmt><expr><call><name><name pos:line="122" pos:column="41">System</name><op:operator pos:line="122" pos:column="47">.</op:operator><name pos:line="122" pos:column="48">out</name><op:operator pos:line="122" pos:column="51">.</op:operator><name pos:line="122" pos:column="52">println</name></name><argument_list pos:line="122" pos:column="59">(<argument><expr><name pos:line="122" pos:column="60">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="123" pos:column="41">Database</name><op:operator pos:line="123" pos:column="49">.</op:operator><name pos:line="123" pos:column="50">rollBackTransaction</name></name><argument_list pos:line="123" pos:column="69">(<argument><expr><name pos:line="123" pos:column="70">conn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><empty_stmt pos:line="123" pos:column="76">;</empty_stmt>
				}</block></catch></try>

			}</block> <catch pos:line="126" pos:column="27">catch <parameter_list pos:line="126" pos:column="33">(<param><decl><type><name pos:line="126" pos:column="34">Exception</name></type> <name pos:line="126" pos:column="44">e</name></decl></param>)</parameter_list> <block pos:line="126" pos:column="47">{
				<expr_stmt><expr><call><name><name pos:line="127" pos:column="33">System</name><op:operator pos:line="127" pos:column="39">.</op:operator><name pos:line="127" pos:column="40">out</name><op:operator pos:line="127" pos:column="43">.</op:operator><name pos:line="127" pos:column="44">println</name></name><argument_list pos:line="127" pos:column="51">(<argument><expr><name pos:line="127" pos:column="52">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></catch></try>			
		}</block></then></if>
		
		<return pos:line="131" pos:column="17">return <expr><name pos:line="131" pos:column="24">loginInfoAdded</name></expr>;</return>
	}</block></function>
	
	<comment type="line" pos:line="134" pos:column="9">// Checks whether the username is already present in the logindetails table before </comment>
	<comment type="line" pos:line="135" pos:column="9">// addLoginInfoToDB() adds it in the logindetails table</comment>
	<function><type><specifier pos:line="136" pos:column="9">private</specifier> <specifier pos:line="136" pos:column="17">static</specifier> <name pos:line="136" pos:column="24">boolean</name></type> <name pos:line="136" pos:column="32">checkUsernameInDatabase</name><parameter_list pos:line="136" pos:column="55">(<param><decl><type><name pos:line="136" pos:column="56">String</name></type> <name pos:line="136" pos:column="63">username</name></decl></param>)</parameter_list> <block pos:line="136" pos:column="73">{
		<decl_stmt><decl><type><name pos:line="137" pos:column="17">boolean</name></type> <name pos:line="137" pos:column="25">isUsernamePresent</name> <init pos:line="137" pos:column="43">= <expr><lit:literal type="boolean" pos:line="137" pos:column="45">false</lit:literal></expr></init></decl>;</decl_stmt>
		
<comment type="line" pos:line="139" pos:column="1">//		@DBAnnotation (</comment>
<comment type="line" pos:line="140" pos:column="1">//				variable = "username",  </comment>
<comment type="line" pos:line="141" pos:column="1">//				table = "logindetails", </comment>
<comment type="line" pos:line="142" pos:column="1">//				column = "Username", </comment>
<comment type="line" pos:line="143" pos:column="1">//				isSource = true)</comment>
		<decl_stmt><decl><type><name pos:line="144" pos:column="17">String</name></type> <name pos:line="144" pos:column="24">SQLLoginSelect</name> <init pos:line="144" pos:column="39">= <expr><lit:literal type="string" pos:line="144" pos:column="41">"SELECT Username FROM logindetails WHERE username = ? ;"</lit:literal></expr></init></decl>;</decl_stmt>
		
		<try pos:line="146" pos:column="17">try <block pos:line="146" pos:column="21">{
			<decl_stmt><decl><type><name pos:line="147" pos:column="25">Connection</name></type> <name pos:line="147" pos:column="36">conn</name> <init pos:line="147" pos:column="41">= <expr><call><name><name pos:line="147" pos:column="43">Database</name><op:operator pos:line="147" pos:column="51">.</op:operator><name pos:line="147" pos:column="52">getConnection</name></name><argument_list pos:line="147" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<try pos:line="148" pos:column="25">try <block pos:line="148" pos:column="29">{
				<if pos:line="149" pos:column="33">if <condition pos:line="149" pos:column="36">(<expr><name pos:line="149" pos:column="37">conn</name> <op:operator pos:line="149" pos:column="42">!=</op:operator> <lit:literal type="null" pos:line="149" pos:column="45">null</lit:literal></expr>)</condition><then pos:line="149" pos:column="50"> <block pos:line="149" pos:column="51">{
					
					<comment type="line" pos:line="151" pos:column="41">// Check if file is already present. </comment>
					<decl_stmt><decl><type><name pos:line="152" pos:column="41">PreparedStatement</name></type> <name pos:line="152" pos:column="59">statement</name> <init pos:line="152" pos:column="69">= <expr><call><name><name pos:line="152" pos:column="71">conn</name><op:operator pos:line="152" pos:column="75">.</op:operator><name pos:line="152" pos:column="76">prepareStatement</name></name><argument_list pos:line="152" pos:column="92">(<argument><expr><name pos:line="152" pos:column="93">SQLLoginSelect</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="153" pos:column="41">DBAnnotation</name><op:operator pos:line="153" pos:column="53">.</op:operator><name pos:line="153" pos:column="54">annoate</name></name><argument_list pos:line="153" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="153" pos:column="62">"username"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="153" pos:column="74">"logindetails"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="153" pos:column="90">"Username"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="153" pos:column="102">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="154" pos:column="41">statement</name><op:operator pos:line="154" pos:column="50">.</op:operator><name pos:line="154" pos:column="51">setString</name></name><argument_list pos:line="154" pos:column="60">(<argument><expr><lit:literal type="number" pos:line="154" pos:column="61">1</lit:literal></expr></argument>, <argument><expr><name pos:line="154" pos:column="64">username</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="155" pos:column="41">ResultSet</name></type> <name pos:line="155" pos:column="51">rs</name> <init pos:line="155" pos:column="54">= <expr><call><name><name pos:line="155" pos:column="56">statement</name><op:operator pos:line="155" pos:column="65">.</op:operator><name pos:line="155" pos:column="66">executeQuery</name></name><argument_list pos:line="155" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<while pos:line="156" pos:column="41">while <condition pos:line="156" pos:column="47">(<expr><call><name><name pos:line="156" pos:column="48">rs</name><op:operator pos:line="156" pos:column="50">.</op:operator><name pos:line="156" pos:column="51">next</name></name><argument_list pos:line="156" pos:column="55">()</argument_list></call></expr>)</condition> <block pos:line="156" pos:column="59">{
						<comment type="line" pos:line="157" pos:column="49">// Retrieve by column name</comment>
						<expr_stmt><expr><call><name><name pos:line="158" pos:column="49">DBAnnotation</name><op:operator pos:line="158" pos:column="61">.</op:operator><name pos:line="158" pos:column="62">annoate</name></name><argument_list pos:line="158" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="158" pos:column="70">"tableUsername"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="158" pos:column="87">"logindetails"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="158" pos:column="103">"Username"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="158" pos:column="115">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<decl_stmt><decl><type><name pos:line="159" pos:column="49">String</name></type> <name pos:line="159" pos:column="56">tableUsername</name> <init pos:line="159" pos:column="70">= <expr><call><name><name pos:line="159" pos:column="72">rs</name><op:operator pos:line="159" pos:column="74">.</op:operator><name pos:line="159" pos:column="75">getString</name></name><argument_list pos:line="159" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="159" pos:column="85">"Username"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<if pos:line="160" pos:column="49">if<condition pos:line="160" pos:column="51">(<expr><call><name><name pos:line="160" pos:column="52">tableUsername</name><op:operator pos:line="160" pos:column="65">.</op:operator><name pos:line="160" pos:column="66">equals</name></name><argument_list pos:line="160" pos:column="72">(<argument><expr><name pos:line="160" pos:column="73">username</name></expr></argument>)</argument_list></call></expr>)</condition><then><block pos:line="160" pos:column="83">{
							<expr_stmt><expr><name pos:line="161" pos:column="57">isUsernamePresent</name> <op:operator pos:line="161" pos:column="75">=</op:operator> <lit:literal type="boolean" pos:line="161" pos:column="77">true</lit:literal></expr>;</expr_stmt>
							<break pos:line="162" pos:column="57">break;</break>
						}</block></then></if>
					}</block></while>
				}</block></then></if>	
			}</block> <catch pos:line="166" pos:column="27">catch <parameter_list pos:line="166" pos:column="33">(<param><decl><type><name pos:line="166" pos:column="34">SQLException</name></type> <name pos:line="166" pos:column="47">e</name></decl></param>)</parameter_list> <block pos:line="166" pos:column="50">{
				<expr_stmt><expr><call><name><name pos:line="167" pos:column="33">System</name><op:operator pos:line="167" pos:column="39">.</op:operator><name pos:line="167" pos:column="40">out</name><op:operator pos:line="167" pos:column="43">.</op:operator><name pos:line="167" pos:column="44">println</name></name><argument_list pos:line="167" pos:column="51">(<argument><expr><name pos:line="167" pos:column="52">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></catch></try>

		}</block> <catch pos:line="170" pos:column="19">catch <parameter_list pos:line="170" pos:column="25">(<param><decl><type><name pos:line="170" pos:column="26">Exception</name></type> <name pos:line="170" pos:column="36">e</name></decl></param>)</parameter_list> <block pos:line="170" pos:column="39">{
			<expr_stmt><expr><call><name><name pos:line="171" pos:column="25">System</name><op:operator pos:line="171" pos:column="31">.</op:operator><name pos:line="171" pos:column="32">out</name><op:operator pos:line="171" pos:column="35">.</op:operator><name pos:line="171" pos:column="36">println</name></name><argument_list pos:line="171" pos:column="43">(<argument><expr><name pos:line="171" pos:column="44">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></catch></try>
		
		<return pos:line="174" pos:column="17">return <expr><name pos:line="174" pos:column="24">isUsernamePresent</name></expr>;</return>
	}</block></function>

	<comment type="line" pos:line="177" pos:column="9">// To change the password for a user who is logged in</comment>
	<function><type><specifier pos:line="178" pos:column="9">public</specifier> <specifier pos:line="178" pos:column="16">static</specifier> <name pos:line="178" pos:column="23">boolean</name></type> <name pos:line="178" pos:column="31">changePassword</name><parameter_list pos:line="178" pos:column="45">(<param><decl><type><name pos:line="178" pos:column="46">String</name></type> <name pos:line="178" pos:column="53">username</name></decl></param>, <param><decl><type><name pos:line="178" pos:column="63">String</name></type> <name pos:line="178" pos:column="70">newPassword</name></decl></param>)</parameter_list><block pos:line="178" pos:column="82">{
		
		<decl_stmt><decl><type><name pos:line="180" pos:column="17">boolean</name></type> <name pos:line="180" pos:column="25">passwordChanged</name> <init pos:line="180" pos:column="41">= <expr><lit:literal type="boolean" pos:line="180" pos:column="43">false</lit:literal></expr></init></decl>;</decl_stmt>
	<comment type="line" pos:line="181" pos:column="9">//	String username = this.getUsername();</comment>
		
<comment type="line" pos:line="183" pos:column="1">//		@DBAnnotation (</comment>
<comment type="line" pos:line="184" pos:column="1">//			variable = {"username","newPassword"},  </comment>
<comment type="line" pos:line="185" pos:column="1">//			table = "logindetails", </comment>
<comment type="line" pos:line="186" pos:column="1">//			column = {"Username","Password"}, </comment>
<comment type="line" pos:line="187" pos:column="1">//			isSource = false)</comment>
		
		<decl_stmt><decl><type><name pos:line="189" pos:column="17">String</name></type> <name pos:line="189" pos:column="24">SQLLoginUpdate</name> <init pos:line="189" pos:column="39">= <expr><lit:literal type="string" pos:line="189" pos:column="41">"UPDATE logindetails SET Password = ? WHERE Username = ?;"</lit:literal></expr></init></decl>;</decl_stmt>
			
		<try pos:line="191" pos:column="17">try <block pos:line="191" pos:column="21">{
			<decl_stmt><decl><type><name pos:line="192" pos:column="25">Connection</name></type> <name pos:line="192" pos:column="36">conn</name> <init pos:line="192" pos:column="41">= <expr><call><name><name pos:line="192" pos:column="43">Database</name><op:operator pos:line="192" pos:column="51">.</op:operator><name pos:line="192" pos:column="52">getConnection</name></name><argument_list pos:line="192" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<try pos:line="193" pos:column="25">try <block pos:line="193" pos:column="29">{
				<if pos:line="194" pos:column="33">if <condition pos:line="194" pos:column="36">(<expr><name pos:line="194" pos:column="37">conn</name> <op:operator pos:line="194" pos:column="42">!=</op:operator> <lit:literal type="null" pos:line="194" pos:column="45">null</lit:literal></expr>)</condition><then pos:line="194" pos:column="50"> <block pos:line="194" pos:column="51">{
		
					<decl_stmt><decl><type><name pos:line="196" pos:column="41">PreparedStatement</name></type> <name pos:line="196" pos:column="59">statement</name> <init pos:line="196" pos:column="69">= <expr><call><name><name pos:line="196" pos:column="71">conn</name><op:operator pos:line="196" pos:column="75">.</op:operator><name pos:line="196" pos:column="76">prepareStatement</name></name><argument_list pos:line="196" pos:column="92">(<argument><expr><name pos:line="196" pos:column="93">SQLLoginUpdate</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="197" pos:column="41">DBAnnotation</name><op:operator pos:line="197" pos:column="53">.</op:operator><name pos:line="197" pos:column="54">annoate</name></name><argument_list pos:line="197" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="197" pos:column="62">"newPassword"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="197" pos:column="77">"logindetails"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="197" pos:column="93">"Password"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="197" pos:column="105">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="198" pos:column="41">statement</name><op:operator pos:line="198" pos:column="50">.</op:operator><name pos:line="198" pos:column="51">setString</name></name><argument_list pos:line="198" pos:column="60">(<argument><expr><lit:literal type="number" pos:line="198" pos:column="61">1</lit:literal></expr></argument>, <argument><expr><name pos:line="198" pos:column="64">newPassword</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="199" pos:column="41">DBAnnotation</name><op:operator pos:line="199" pos:column="53">.</op:operator><name pos:line="199" pos:column="54">annoate</name></name><argument_list pos:line="199" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="199" pos:column="62">"username"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="199" pos:column="74">"logindetails"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="199" pos:column="90">"Username"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="199" pos:column="102">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="200" pos:column="41">statement</name><op:operator pos:line="200" pos:column="50">.</op:operator><name pos:line="200" pos:column="51">setString</name></name><argument_list pos:line="200" pos:column="60">(<argument><expr><lit:literal type="number" pos:line="200" pos:column="61">2</lit:literal></expr></argument>, <argument><expr><name pos:line="200" pos:column="64">username</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="201" pos:column="41">statement</name><op:operator pos:line="201" pos:column="50">.</op:operator><name pos:line="201" pos:column="51">executeUpdate</name></name><argument_list pos:line="201" pos:column="64">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="202" pos:column="41">Database</name><op:operator pos:line="202" pos:column="49">.</op:operator><name pos:line="202" pos:column="50">commitTransaction</name></name><argument_list pos:line="202" pos:column="67">(<argument><expr><name pos:line="202" pos:column="68">conn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="203" pos:column="41">passwordChanged</name> <op:operator pos:line="203" pos:column="57">=</op:operator> <lit:literal type="boolean" pos:line="203" pos:column="59">true</lit:literal></expr>;</expr_stmt>
				}</block></then></if>
			}</block> <catch pos:line="205" pos:column="27">catch <parameter_list pos:line="205" pos:column="33">(<param><decl><type><name pos:line="205" pos:column="34">SQLException</name></type> <name pos:line="205" pos:column="47">e</name></decl></param>)</parameter_list> <block pos:line="205" pos:column="50">{
				<expr_stmt><expr><call><name><name pos:line="206" pos:column="33">System</name><op:operator pos:line="206" pos:column="39">.</op:operator><name pos:line="206" pos:column="40">out</name><op:operator pos:line="206" pos:column="43">.</op:operator><name pos:line="206" pos:column="44">println</name></name><argument_list pos:line="206" pos:column="51">(<argument><expr><name pos:line="206" pos:column="52">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="207" pos:column="33">Database</name><op:operator pos:line="207" pos:column="41">.</op:operator><name pos:line="207" pos:column="42">rollBackTransaction</name></name><argument_list pos:line="207" pos:column="61">(<argument><expr><name pos:line="207" pos:column="62">conn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><empty_stmt pos:line="207" pos:column="68">;</empty_stmt>
			}</block></catch></try>
			}</block> <catch pos:line="209" pos:column="27">catch <parameter_list pos:line="209" pos:column="33">(<param><decl><type><name pos:line="209" pos:column="34">Exception</name></type> <name pos:line="209" pos:column="44">e</name></decl></param>)</parameter_list> <block pos:line="209" pos:column="47">{
			<expr_stmt><expr><call><name><name pos:line="210" pos:column="25">System</name><op:operator pos:line="210" pos:column="31">.</op:operator><name pos:line="210" pos:column="32">out</name><op:operator pos:line="210" pos:column="35">.</op:operator><name pos:line="210" pos:column="36">println</name></name><argument_list pos:line="210" pos:column="43">(<argument><expr><name pos:line="210" pos:column="44">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></catch></try>
		<return pos:line="212" pos:column="17">return <expr><name pos:line="212" pos:column="24">passwordChanged</name></expr>;</return>
	}</block></function>

	<comment type="line" pos:line="215" pos:column="9">// To recover a user's password</comment>
	<function><type><specifier pos:line="216" pos:column="9">public</specifier> <specifier pos:line="216" pos:column="16">static</specifier> <name pos:line="216" pos:column="23">boolean</name></type> <name pos:line="216" pos:column="31">recoverPassword</name> <parameter_list pos:line="216" pos:column="47">(<param><decl><type><name pos:line="216" pos:column="48">String</name></type> <name pos:line="216" pos:column="55">username</name></decl></param>)</parameter_list><block pos:line="216" pos:column="64">{
		<decl_stmt><decl><type><name pos:line="217" pos:column="17">boolean</name></type> <name pos:line="217" pos:column="25">passwordrecovered</name> <init pos:line="217" pos:column="43">= <expr><lit:literal type="boolean" pos:line="217" pos:column="45">false</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="218" pos:column="17">boolean</name></type> <name pos:line="218" pos:column="25">isUserPresent</name> <init pos:line="218" pos:column="39">= <expr><call><name pos:line="218" pos:column="41">checkUsernameInDatabase</name><argument_list pos:line="218" pos:column="64">(<argument><expr><name pos:line="218" pos:column="65">username</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="219" pos:column="17">if <condition pos:line="219" pos:column="20">(<expr><name pos:line="219" pos:column="21">isUserPresent</name> <op:operator pos:line="219" pos:column="35">==</op:operator> <lit:literal type="boolean" pos:line="219" pos:column="38">false</lit:literal></expr>)</condition><then><block pos:line="219" pos:column="44">{
			<expr_stmt><expr><call><name><name pos:line="220" pos:column="25">System</name><op:operator pos:line="220" pos:column="31">.</op:operator><name pos:line="220" pos:column="32">out</name><op:operator pos:line="220" pos:column="35">.</op:operator><name pos:line="220" pos:column="36">println</name></name><argument_list pos:line="220" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="220" pos:column="44">"Username not present"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="222" pos:column="17">else <block pos:line="222" pos:column="22">{
<comment type="line" pos:line="223" pos:column="1">//			@DBAnnotation (</comment>
<comment type="line" pos:line="224" pos:column="1">//					variable = {"username","password"},  </comment>
<comment type="line" pos:line="225" pos:column="1">//					table = "logindetails",</comment>
<comment type="line" pos:line="226" pos:column="1">//					column = {"Username", "Password"}, </comment>
<comment type="line" pos:line="227" pos:column="1">//					isSource = true)</comment>
			
			<decl_stmt><decl><type><name pos:line="229" pos:column="25">String</name></type> <name pos:line="229" pos:column="32">SQLFileSelect</name> <init pos:line="229" pos:column="46">= <expr><lit:literal type="string" pos:line="229" pos:column="48">"SELECT Password FROM logindetails WHERE Username = ?;"</lit:literal></expr></init></decl>;</decl_stmt>
			
			<try pos:line="231" pos:column="25">try <block pos:line="231" pos:column="29">{
				<decl_stmt><decl><type><name pos:line="232" pos:column="33">Connection</name></type> <name pos:line="232" pos:column="44">conn</name> <init pos:line="232" pos:column="49">= <expr><call><name><name pos:line="232" pos:column="51">Database</name><op:operator pos:line="232" pos:column="59">.</op:operator><name pos:line="232" pos:column="60">getConnection</name></name><argument_list pos:line="232" pos:column="73">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<try pos:line="233" pos:column="33">try <block pos:line="233" pos:column="37">{
					<if pos:line="234" pos:column="41">if <condition pos:line="234" pos:column="44">(<expr><name pos:line="234" pos:column="45">conn</name> <op:operator pos:line="234" pos:column="50">!=</op:operator> <lit:literal type="null" pos:line="234" pos:column="53">null</lit:literal></expr>)</condition><then pos:line="234" pos:column="58"> <block pos:line="234" pos:column="59">{
						
						<comment type="line" pos:line="236" pos:column="49">// Check if file is already present. </comment>
						<decl_stmt><decl><type><name pos:line="237" pos:column="49">PreparedStatement</name></type> <name pos:line="237" pos:column="67">statement</name> <init pos:line="237" pos:column="77">= <expr><call><name><name pos:line="237" pos:column="79">conn</name><op:operator pos:line="237" pos:column="83">.</op:operator><name pos:line="237" pos:column="84">prepareStatement</name></name><argument_list pos:line="237" pos:column="100">(<argument><expr><name pos:line="237" pos:column="101">SQLFileSelect</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><call><name><name pos:line="238" pos:column="49">DBAnnotation</name><op:operator pos:line="238" pos:column="61">.</op:operator><name pos:line="238" pos:column="62">annoate</name></name><argument_list pos:line="238" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="238" pos:column="70">"username"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="238" pos:column="82">"logindetails"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="238" pos:column="98">"Username"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="238" pos:column="110">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="239" pos:column="49">statement</name><op:operator pos:line="239" pos:column="58">.</op:operator><name pos:line="239" pos:column="59">setString</name></name><argument_list pos:line="239" pos:column="68">(<argument><expr><lit:literal type="number" pos:line="239" pos:column="69">1</lit:literal></expr></argument>, <argument><expr><name pos:line="239" pos:column="72">username</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<decl_stmt><decl><type><name pos:line="240" pos:column="49">ResultSet</name></type> <name pos:line="240" pos:column="59">rs</name> <init pos:line="240" pos:column="62">= <expr><call><name><name pos:line="240" pos:column="64">statement</name><op:operator pos:line="240" pos:column="73">.</op:operator><name pos:line="240" pos:column="74">executeQuery</name></name><argument_list pos:line="240" pos:column="86">()</argument_list></call></expr></init></decl>;</decl_stmt>
						<while pos:line="241" pos:column="49">while <condition pos:line="241" pos:column="55">(<expr><call><name><name pos:line="241" pos:column="56">rs</name><op:operator pos:line="241" pos:column="58">.</op:operator><name pos:line="241" pos:column="59">next</name></name><argument_list pos:line="241" pos:column="63">()</argument_list></call></expr>)</condition> <block pos:line="241" pos:column="67">{
							<comment type="line" pos:line="242" pos:column="57">// Retrieve by column name</comment>
							<expr_stmt><expr><call><name><name pos:line="243" pos:column="57">DBAnnotation</name><op:operator pos:line="243" pos:column="69">.</op:operator><name pos:line="243" pos:column="70">annoate</name></name><argument_list pos:line="243" pos:column="77">(<argument><expr><lit:literal type="string" pos:line="243" pos:column="78">"password"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="243" pos:column="90">"logindetails"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="243" pos:column="106">"Password"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="243" pos:column="118">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<decl_stmt><decl><type><name pos:line="244" pos:column="57">String</name></type> <name pos:line="244" pos:column="64">password</name> <init pos:line="244" pos:column="73">= <expr><call><name><name pos:line="244" pos:column="75">rs</name><op:operator pos:line="244" pos:column="77">.</op:operator><name pos:line="244" pos:column="78">getString</name></name><argument_list pos:line="244" pos:column="87">(<argument><expr><lit:literal type="string" pos:line="244" pos:column="88">"Password"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<comment type="line" pos:line="245" pos:column="57">//this.setPassword(password);</comment>
							<decl_stmt><decl><type><name pos:line="246" pos:column="57">Email</name></type> <name pos:line="246" pos:column="63">email</name> <init pos:line="246" pos:column="69">= <expr><call><name><name pos:line="246" pos:column="71">Email</name><op:operator pos:line="246" pos:column="76">.</op:operator><name pos:line="246" pos:column="77">getInstance</name></name><argument_list pos:line="246" pos:column="88">(<argument><expr><lit:literal type="string" pos:line="246" pos:column="89">"umas.uic@gmail.com"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="246" pos:column="111">"cs597project"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="247" pos:column="57">String</name></type> <name pos:line="247" pos:column="64">subject</name> <init pos:line="247" pos:column="72">= <expr><lit:literal type="string" pos:line="247" pos:column="74">"UMAS Password"</lit:literal></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="248" pos:column="57">String</name></type> <name pos:line="248" pos:column="64">body</name> <init pos:line="248" pos:column="69">= <expr><lit:literal type="string" pos:line="248" pos:column="71">"Your password is "</lit:literal> <op:operator pos:line="248" pos:column="91">+</op:operator> <name pos:line="248" pos:column="93">password</name> <op:operator pos:line="248" pos:column="102">+</op:operator> 
											<lit:literal type="string" pos:line="249" pos:column="89">"Please change your password after you login"</lit:literal></expr></init></decl>;</decl_stmt>
							
							<decl_stmt><decl><type><name pos:line="251" pos:column="57">boolean</name></type> <name pos:line="251" pos:column="65">mailSent</name> <init pos:line="251" pos:column="74">= <expr><call><name><name pos:line="251" pos:column="76">email</name><op:operator pos:line="251" pos:column="81">.</op:operator><name pos:line="251" pos:column="82">sendEmail</name></name><argument_list pos:line="251" pos:column="91">(<argument><expr><name pos:line="251" pos:column="92">username</name><op:operator pos:line="251" pos:column="100">+</op:operator><lit:literal type="string" pos:line="251" pos:column="101">"@gmail.com"</lit:literal></expr></argument>, <argument><expr><name pos:line="251" pos:column="115">subject</name></expr></argument>, <argument><expr><name pos:line="251" pos:column="124">body</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<if pos:line="252" pos:column="57">if <condition pos:line="252" pos:column="60">(<expr><name pos:line="252" pos:column="61">mailSent</name> <op:operator pos:line="252" pos:column="70">==</op:operator> <lit:literal type="boolean" pos:line="252" pos:column="73">true</lit:literal></expr>)</condition><then><block pos:line="252" pos:column="78">{
								<expr_stmt><expr><call><name><name pos:line="253" pos:column="65">System</name><op:operator pos:line="253" pos:column="71">.</op:operator><name pos:line="253" pos:column="72">out</name><op:operator pos:line="253" pos:column="75">.</op:operator><name pos:line="253" pos:column="76">println</name></name><argument_list pos:line="253" pos:column="83">(<argument><expr><lit:literal type="string" pos:line="253" pos:column="84">"Mail containing password sent to the user."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								<expr_stmt><expr><name pos:line="254" pos:column="65">passwordrecovered</name> <op:operator pos:line="254" pos:column="83">=</op:operator> <lit:literal type="boolean" pos:line="254" pos:column="85">true</lit:literal></expr>;</expr_stmt>
							}</block></then></if>
						}</block></while>
					}</block></then></if>	
				}</block> <catch pos:line="258" pos:column="35">catch <parameter_list pos:line="258" pos:column="41">(<param><decl><type><name pos:line="258" pos:column="42">SQLException</name></type> <name pos:line="258" pos:column="55">e</name></decl></param>)</parameter_list> <block pos:line="258" pos:column="58">{
					<expr_stmt><expr><call><name><name pos:line="259" pos:column="41">System</name><op:operator pos:line="259" pos:column="47">.</op:operator><name pos:line="259" pos:column="48">out</name><op:operator pos:line="259" pos:column="51">.</op:operator><name pos:line="259" pos:column="52">println</name></name><argument_list pos:line="259" pos:column="59">(<argument><expr><name pos:line="259" pos:column="60">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>

			}</block> <catch pos:line="262" pos:column="27">catch <parameter_list pos:line="262" pos:column="33">(<param><decl><type><name pos:line="262" pos:column="34">Exception</name></type> <name pos:line="262" pos:column="44">e</name></decl></param>)</parameter_list> <block pos:line="262" pos:column="47">{
				<expr_stmt><expr><call><name><name pos:line="263" pos:column="33">System</name><op:operator pos:line="263" pos:column="39">.</op:operator><name pos:line="263" pos:column="40">out</name><op:operator pos:line="263" pos:column="43">.</op:operator><name pos:line="263" pos:column="44">println</name></name><argument_list pos:line="263" pos:column="51">(<argument><expr><name pos:line="263" pos:column="52">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></catch></try>

		}</block></else></if>
		
		<return pos:line="268" pos:column="17">return <expr><name pos:line="268" pos:column="24">passwordrecovered</name></expr>;</return>
		
	}</block></function>
	
 	<function><type><specifier pos:line="272" pos:column="9">public</specifier> <specifier pos:line="272" pos:column="16">static</specifier> <name pos:line="272" pos:column="23">void</name></type> <name pos:line="272" pos:column="28">main</name><parameter_list pos:line="272" pos:column="32">(<param><decl><type><name><name pos:line="272" pos:column="33">String</name><index pos:line="272" pos:column="39">[]</index></name></type> <name pos:line="272" pos:column="42">args</name></decl></param>)</parameter_list><block pos:line="272" pos:column="47">{
		
 		<comment type="line" pos:line="274" pos:column="17">// Test authenticate function when user is present</comment>
<comment type="line" pos:line="275" pos:column="1">// 		Login user = new Login("aky1","pra");</comment>
<comment type="line" pos:line="276" pos:column="1">// 		String username = user.getUsername();</comment>
<comment type="line" pos:line="277" pos:column="1">//		boolean isPresent = user.authenticate();</comment>
<comment type="line" pos:line="278" pos:column="1">//		if(isPresent == true){</comment>
<comment type="line" pos:line="279" pos:column="1">//			System.out.println("User Present");</comment>
<comment type="line" pos:line="280" pos:column="1">//		} else {</comment>
<comment type="line" pos:line="281" pos:column="1">//			System.out.println("User Absent");</comment>
<comment type="line" pos:line="282" pos:column="1">//		}</comment>
<comment type="line" pos:line="283" pos:column="1">// 		</comment>
<comment type="line" pos:line="284" pos:column="1">//		// Test authenticate function when user is absent</comment>
<comment type="line" pos:line="285" pos:column="1">//		user = new Login("aky1","pra");</comment>
<comment type="line" pos:line="286" pos:column="1">//		isPresent = user.authenticate();</comment>
<comment type="line" pos:line="287" pos:column="1">//		if(isPresent == true){</comment>
<comment type="line" pos:line="288" pos:column="1">//			System.out.println("User Present");</comment>
<comment type="line" pos:line="289" pos:column="1">//		} else {</comment>
<comment type="line" pos:line="290" pos:column="1">//			System.out.println("User Absent");</comment>
<comment type="line" pos:line="291" pos:column="1">//		}</comment>
<comment type="line" pos:line="292" pos:column="1">//		</comment>
		
		<comment type="line" pos:line="294" pos:column="17">// Test checkUsernameInDatabase function when user is present</comment>
<comment type="line" pos:line="295" pos:column="1">// 		String username = "aky";</comment>
<comment type="line" pos:line="296" pos:column="1">// 		boolean isPresent = Login.checkUsernameInDatabase(username);</comment>
<comment type="line" pos:line="297" pos:column="1">//		if(isPresent == true){</comment>
<comment type="line" pos:line="298" pos:column="1">//			System.out.println("User Present");</comment>
<comment type="line" pos:line="299" pos:column="1">//		} else {</comment>
<comment type="line" pos:line="300" pos:column="1">//			System.out.println("User Absent");</comment>
<comment type="line" pos:line="301" pos:column="1">//		}</comment>
<comment type="line" pos:line="302" pos:column="1">// 		</comment>
<comment type="line" pos:line="303" pos:column="1">//		// Test checkUsernameInDatabase function when user is absent</comment>
<comment type="line" pos:line="304" pos:column="1">//		username = "aky1";</comment>
<comment type="line" pos:line="305" pos:column="1">//		isPresent = Login.checkUsernameInDatabase(username);</comment>
<comment type="line" pos:line="306" pos:column="1">//		if(isPresent == true){</comment>
<comment type="line" pos:line="307" pos:column="1">//			System.out.println("User Present");</comment>
<comment type="line" pos:line="308" pos:column="1">//		} else {</comment>
<comment type="line" pos:line="309" pos:column="1">//			System.out.println("User Absent");</comment>
<comment type="line" pos:line="310" pos:column="1">//		}</comment>
		
	}</block></function>

}</block></class>
</unit>
