<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\xinco\src\com\bluecubs\xinco\client\object\dragNdrop\XincoTransferableNode.java" pos:tabs="8"><comment type="block" format="javadoc" pos:line="1" pos:column="1">/**
 *Copyright 2007 blueCubs.com
 *
 *Licensed under the Apache License, Version 2.0 (the "License");
 *you may not use this file except in compliance with the License.
 *You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 *Unless required by applicable law or agreed to in writing, software
 *distributed under the License is distributed on an "AS IS" BASIS,
 *WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *See the License for the specific language governing permissions and
 *limitations under the License.
 *
 *************************************************************
 * This project supports the blueCubs vision of giving back
 * to the community in exchange for free software!
 * More information on: http://www.bluecubs.org
 *************************************************************
 *
 * Name:            XincoTransferableNode
 *
 * Description:     XincoTransferableNode
 *
 * Original Author: Javier A. Ortiz
 * Date:            May 18, 2007, 12:01 PM
 *
 * Modifications:
 *
 * Who?             When?             What?
 *
 *************************************************************
 */</comment>

<package pos:line="36" pos:column="1">package <name><name pos:line="36" pos:column="9">com</name><op:operator pos:line="36" pos:column="12">.</op:operator><name pos:line="36" pos:column="13">bluecubs</name><op:operator pos:line="36" pos:column="21">.</op:operator><name pos:line="36" pos:column="22">xinco</name><op:operator pos:line="36" pos:column="27">.</op:operator><name pos:line="36" pos:column="28">client</name><op:operator pos:line="36" pos:column="34">.</op:operator><name pos:line="36" pos:column="35">object</name><op:operator pos:line="36" pos:column="41">.</op:operator><name pos:line="36" pos:column="42">dragNdrop</name></name>;</package>

<import pos:line="38" pos:column="1">import <name><name pos:line="38" pos:column="8">com</name><op:operator pos:line="38" pos:column="11">.</op:operator><name pos:line="38" pos:column="12">bluecubs</name><op:operator pos:line="38" pos:column="20">.</op:operator><name pos:line="38" pos:column="21">xinco</name><op:operator pos:line="38" pos:column="26">.</op:operator><name pos:line="38" pos:column="27">client</name><op:operator pos:line="38" pos:column="33">.</op:operator><name pos:line="38" pos:column="34">object</name></name>.*;</import>
<import pos:line="39" pos:column="1">import <name><name pos:line="39" pos:column="8">java</name><op:operator pos:line="39" pos:column="12">.</op:operator><name pos:line="39" pos:column="13">awt</name><op:operator pos:line="39" pos:column="16">.</op:operator><name pos:line="39" pos:column="17">datatransfer</name><op:operator pos:line="39" pos:column="29">.</op:operator><name pos:line="39" pos:column="30">DataFlavor</name></name>;</import>
<import pos:line="40" pos:column="1">import <name><name pos:line="40" pos:column="8">java</name><op:operator pos:line="40" pos:column="12">.</op:operator><name pos:line="40" pos:column="13">awt</name><op:operator pos:line="40" pos:column="16">.</op:operator><name pos:line="40" pos:column="17">datatransfer</name><op:operator pos:line="40" pos:column="29">.</op:operator><name pos:line="40" pos:column="30">Transferable</name></name>;</import>
<import pos:line="41" pos:column="1">import <name><name pos:line="41" pos:column="8">java</name><op:operator pos:line="41" pos:column="12">.</op:operator><name pos:line="41" pos:column="13">awt</name><op:operator pos:line="41" pos:column="16">.</op:operator><name pos:line="41" pos:column="17">datatransfer</name><op:operator pos:line="41" pos:column="29">.</op:operator><name pos:line="41" pos:column="30">UnsupportedFlavorException</name></name>;</import>
<import pos:line="42" pos:column="1">import <name><name pos:line="42" pos:column="8">java</name><op:operator pos:line="42" pos:column="12">.</op:operator><name pos:line="42" pos:column="13">util</name><op:operator pos:line="42" pos:column="17">.</op:operator><name pos:line="42" pos:column="18">Arrays</name></name>;</import>
<import pos:line="43" pos:column="1">import <name><name pos:line="43" pos:column="8">javax</name><op:operator pos:line="43" pos:column="13">.</op:operator><name pos:line="43" pos:column="14">swing</name><op:operator pos:line="43" pos:column="19">.</op:operator><name pos:line="43" pos:column="20">tree</name><op:operator pos:line="43" pos:column="24">.</op:operator><name pos:line="43" pos:column="25">DefaultMutableTreeNode</name></name>;</import>

<comment type="block" format="javadoc" pos:line="45" pos:column="1">/**
 *
 * @author Javier A. Ortiz
 */</comment>
<class><specifier pos:line="49" pos:column="1">public</specifier> class <name pos:line="49" pos:column="14">XincoTransferableNode</name> <super><implements pos:line="49" pos:column="36">implements <name pos:line="49" pos:column="47">Transferable</name></implements></super> <block pos:line="49" pos:column="60">{
	<decl_stmt><decl><type><specifier pos:line="50" pos:column="9">static</specifier> <specifier pos:line="50" pos:column="16">final</specifier> <name pos:line="50" pos:column="22">DataFlavor</name></type> <name pos:line="50" pos:column="33">NODE_FLAVOR</name> <init pos:line="50" pos:column="45">= <expr><op:operator pos:line="50" pos:column="47">new</op:operator> <call><name pos:line="50" pos:column="51">DataFlavor</name><argument_list pos:line="50" pos:column="61">(<argument><expr><name><name pos:line="50" pos:column="62">DataFlavor</name><op:operator pos:line="50" pos:column="72">.</op:operator><name pos:line="50" pos:column="73">javaJVMLocalObjectMimeType</name></name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="50" pos:column="101">"Node"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="51" pos:column="9">private</specifier> <name pos:line="51" pos:column="17">DefaultMutableTreeNode</name></type> <name pos:line="51" pos:column="40">node</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="52" pos:column="9">private</specifier> <name pos:line="52" pos:column="17">DataFlavor</name><index pos:line="52" pos:column="27">[]</index></type> <name pos:line="52" pos:column="30">flavors</name> <init pos:line="52" pos:column="38">= <expr><block pos:line="52" pos:column="40">{ <expr><name pos:line="52" pos:column="42">NODE_FLAVOR</name></expr> }</block></expr></init></decl>;</decl_stmt>
 
	<constructor><specifier pos:line="54" pos:column="9">public</specifier> <name pos:line="54" pos:column="16">XincoTransferableNode</name><parameter_list pos:line="54" pos:column="37">(<param><decl><type><name pos:line="54" pos:column="38">DefaultMutableTreeNode</name></type> <name pos:line="54" pos:column="61">nd</name></decl></param>)</parameter_list> <block pos:line="54" pos:column="65">{
		<expr_stmt><expr><name pos:line="55" pos:column="17">node</name> <op:operator pos:line="55" pos:column="22">=</op:operator> <name pos:line="55" pos:column="24">nd</name></expr>;</expr_stmt>
	}</block></constructor>  
 
	<function><type><specifier pos:line="58" pos:column="9">public</specifier> <specifier pos:line="58" pos:column="16">synchronized</specifier> <name pos:line="58" pos:column="29">Object</name></type> <name pos:line="58" pos:column="36">getTransferData</name><parameter_list pos:line="58" pos:column="51">(<param><decl><type><name pos:line="58" pos:column="52">DataFlavor</name></type> <name pos:line="58" pos:column="63">flavor</name></decl></param>)</parameter_list> <throws pos:line="58" pos:column="71">throws <argument><expr><name pos:line="58" pos:column="78">UnsupportedFlavorException</name></expr></argument></throws> <block pos:line="58" pos:column="105">{
		<if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><name pos:line="59" pos:column="21">flavor</name> <op:operator pos:line="59" pos:column="28">==</op:operator> <name pos:line="59" pos:column="31">NODE_FLAVOR</name></expr>)</condition><then pos:line="59" pos:column="43"> <block pos:line="59" pos:column="44">{
			<return pos:line="60" pos:column="25">return <expr><name pos:line="60" pos:column="32">node</name></expr>;</return>
		}</block></then>
		<else pos:line="62" pos:column="17">else <block pos:line="62" pos:column="22">{
			<throw pos:line="63" pos:column="25">throw <expr><op:operator pos:line="63" pos:column="31">new</op:operator> <call><name pos:line="63" pos:column="35">UnsupportedFlavorException</name><argument_list pos:line="63" pos:column="61">(<argument><expr><name pos:line="63" pos:column="62">flavor</name></expr></argument>)</argument_list></call></expr>;</throw>	
		}</block></else></if>			
	}</block></function>
 
	<function><type><specifier pos:line="67" pos:column="9">public</specifier> <name pos:line="67" pos:column="16">DataFlavor</name><index pos:line="67" pos:column="26">[]</index></type> <name pos:line="67" pos:column="29">getTransferDataFlavors</name><parameter_list pos:line="67" pos:column="51">()</parameter_list> <block pos:line="67" pos:column="54">{
		<return pos:line="68" pos:column="17">return <expr><name pos:line="68" pos:column="24">flavors</name></expr>;</return>
	}</block></function>
 
	<function><type><specifier pos:line="71" pos:column="9">public</specifier> <name pos:line="71" pos:column="16">boolean</name></type> <name pos:line="71" pos:column="24">isDataFlavorSupported</name><parameter_list pos:line="71" pos:column="45">(<param><decl><type><name pos:line="71" pos:column="46">DataFlavor</name></type> <name pos:line="71" pos:column="57">flavor</name></decl></param>)</parameter_list> <block pos:line="71" pos:column="65">{
		<return pos:line="72" pos:column="17">return <expr><call><name><name pos:line="72" pos:column="24">Arrays</name><op:operator pos:line="72" pos:column="30">.</op:operator><name pos:line="72" pos:column="31">asList</name></name><argument_list pos:line="72" pos:column="37">(<argument><expr><name pos:line="72" pos:column="38">flavors</name></expr></argument>)</argument_list></call><op:operator pos:line="72" pos:column="46">.</op:operator><call><name pos:line="72" pos:column="47">contains</name><argument_list pos:line="72" pos:column="55">(<argument><expr><name pos:line="72" pos:column="56">flavor</name></expr></argument>)</argument_list></call></expr>;</return>
	}</block></function>
}</block></class>
</unit>
