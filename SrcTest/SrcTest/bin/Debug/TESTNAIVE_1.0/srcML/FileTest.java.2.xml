<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\UMAS\src\com\umas\testcode\FileTest.java" pos:tabs="8"><package pos:line="1" pos:column="1">package <name><name pos:line="1" pos:column="9">com</name><op:operator pos:line="1" pos:column="12">.</op:operator><name pos:line="1" pos:column="13">umas</name><op:operator pos:line="1" pos:column="17">.</op:operator><name pos:line="1" pos:column="18">testcode</name></name>;</package>
<import pos:line="2" pos:column="1">import <name><name pos:line="2" pos:column="8">com</name><op:operator pos:line="2" pos:column="11">.</op:operator><name pos:line="2" pos:column="12">umas</name><op:operator pos:line="2" pos:column="16">.</op:operator><name pos:line="2" pos:column="17">code</name></name>.*;</import>

<import pos:line="4" pos:column="1">import static <name><name pos:line="4" pos:column="15">org</name><op:operator pos:line="4" pos:column="18">.</op:operator><name pos:line="4" pos:column="19">junit</name><op:operator pos:line="4" pos:column="24">.</op:operator><name pos:line="4" pos:column="25">Assert</name></name>.*;</import>

<import pos:line="6" pos:column="1">import <name><name pos:line="6" pos:column="8">java</name><op:operator pos:line="6" pos:column="12">.</op:operator><name pos:line="6" pos:column="13">util</name><op:operator pos:line="6" pos:column="17">.</op:operator><name pos:line="6" pos:column="18">ArrayList</name></name>;</import>

<import pos:line="8" pos:column="1">import <name><name pos:line="8" pos:column="8">org</name><op:operator pos:line="8" pos:column="11">.</op:operator><name pos:line="8" pos:column="12">junit</name><op:operator pos:line="8" pos:column="17">.</op:operator><name pos:line="8" pos:column="18">Test</name></name>;</import>

<class><specifier pos:line="10" pos:column="1">public</specifier> class <name pos:line="10" pos:column="14">FileTest</name> <block pos:line="10" pos:column="23">{

	<comment type="line" pos:line="12" pos:column="9">// OfferID must be present in the CourseOffered Table in the db</comment>
	<function><type><annotation pos:line="13" pos:column="9">@<name pos:line="13" pos:column="10">Test</name></annotation>
	<specifier pos:line="14" pos:column="9">public</specifier> <name pos:line="14" pos:column="16">void</name></type> <name pos:line="14" pos:column="21">testAddFileToDB</name><parameter_list pos:line="14" pos:column="36">()</parameter_list> <block pos:line="14" pos:column="39">{
		<decl_stmt><decl><type><name pos:line="15" pos:column="17">String</name></type> <name pos:line="15" pos:column="24">fileName</name> <init pos:line="15" pos:column="33">= <expr><lit:literal type="string" pos:line="15" pos:column="35">"CS442Syllabus"</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="16" pos:column="17">String</name></type> <name pos:line="16" pos:column="24">fileLocation</name> <init pos:line="16" pos:column="37">= <expr><lit:literal type="string" pos:line="16" pos:column="39">"C:/CS410"</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">int</name></type> <name pos:line="17" pos:column="21">offerID</name> <init pos:line="17" pos:column="29">= <expr><lit:literal type="number" pos:line="17" pos:column="31">410</lit:literal></expr></init></decl>;</decl_stmt>
		
		<decl_stmt><decl><type><name pos:line="19" pos:column="17">File</name></type> <name pos:line="19" pos:column="22">file</name> <init pos:line="19" pos:column="27">= <expr><op:operator pos:line="19" pos:column="29">new</op:operator> <call><name pos:line="19" pos:column="33">File</name><argument_list pos:line="19" pos:column="37">(<argument><expr><name pos:line="19" pos:column="38">fileName</name></expr></argument>,<argument><expr><name pos:line="19" pos:column="47">fileLocation</name></expr></argument>,<argument><expr><name pos:line="19" pos:column="60">offerID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">boolean</name></type> <name pos:line="20" pos:column="25">fileAdded</name> <init pos:line="20" pos:column="35">= <expr><call><name><name pos:line="20" pos:column="37">File</name><op:operator pos:line="20" pos:column="41">.</op:operator><name pos:line="20" pos:column="42">addFileToDB</name></name><argument_list pos:line="20" pos:column="53">(<argument><expr><name pos:line="20" pos:column="54">fileName</name></expr></argument>, <argument><expr><name pos:line="20" pos:column="64">fileLocation</name></expr></argument>, <argument><expr><name pos:line="20" pos:column="78">offerID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="21" pos:column="17">System</name><op:operator pos:line="21" pos:column="23">.</op:operator><name pos:line="21" pos:column="24">out</name><op:operator pos:line="21" pos:column="27">.</op:operator><name pos:line="21" pos:column="28">println</name></name><argument_list pos:line="21" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="21" pos:column="36">"-"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">file</name> <op:operator pos:line="22" pos:column="22">=</op:operator> <op:operator pos:line="22" pos:column="24">new</op:operator> <call><name pos:line="22" pos:column="28">File</name><argument_list pos:line="22" pos:column="32">(<argument><expr><name pos:line="22" pos:column="33">fileName</name></expr></argument>,<argument><expr><name pos:line="22" pos:column="42">fileLocation</name></expr></argument>,<argument><expr><name pos:line="22" pos:column="55">offerID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="23" pos:column="17">file</name><op:operator pos:line="23" pos:column="21">.</op:operator><name pos:line="23" pos:column="22">deleteFileFromDB</name></name><argument_list pos:line="23" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">assertEquals</name><argument_list pos:line="24" pos:column="29">(<argument><expr><lit:literal type="boolean" pos:line="24" pos:column="30">true</lit:literal></expr></argument>,<argument><expr><name pos:line="24" pos:column="35">fileAdded</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>
	
	<comment type="line" pos:line="27" pos:column="9">// File already present </comment>
	<function><type><annotation pos:line="28" pos:column="9">@<name pos:line="28" pos:column="10">Test</name></annotation>
	<specifier pos:line="29" pos:column="9">public</specifier> <name pos:line="29" pos:column="16">void</name></type> <name pos:line="29" pos:column="21">testAddFileToFail</name><parameter_list pos:line="29" pos:column="38">()</parameter_list> <block pos:line="29" pos:column="41">{
		<decl_stmt><decl><type><name pos:line="30" pos:column="17">String</name></type> <name pos:line="30" pos:column="24">fileName</name> <init pos:line="30" pos:column="33">= <expr><lit:literal type="string" pos:line="30" pos:column="35">"CS442Syllabus"</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="31" pos:column="17">String</name></type> <name pos:line="31" pos:column="24">fileLocation</name> <init pos:line="31" pos:column="37">= <expr><lit:literal type="string" pos:line="31" pos:column="39">"C:/CS410"</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="32" pos:column="17">int</name></type> <name pos:line="32" pos:column="21">offerID</name> <init pos:line="32" pos:column="29">= <expr><lit:literal type="number" pos:line="32" pos:column="31">410</lit:literal></expr></init></decl>;</decl_stmt>
		
		<decl_stmt><decl><type><name pos:line="34" pos:column="17">File</name></type> <name pos:line="34" pos:column="22">file</name> <init pos:line="34" pos:column="27">= <expr><op:operator pos:line="34" pos:column="29">new</op:operator> <call><name pos:line="34" pos:column="33">File</name><argument_list pos:line="34" pos:column="37">(<argument><expr><name pos:line="34" pos:column="38">fileName</name></expr></argument>,<argument><expr><name pos:line="34" pos:column="47">fileLocation</name></expr></argument>,<argument><expr><name pos:line="34" pos:column="60">offerID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="35" pos:column="17">File</name><op:operator pos:line="35" pos:column="21">.</op:operator><name pos:line="35" pos:column="22">addFileToDB</name></name><argument_list pos:line="35" pos:column="33">(<argument><expr><name pos:line="35" pos:column="34">fileName</name></expr></argument>, <argument><expr><name pos:line="35" pos:column="44">fileLocation</name></expr></argument>, <argument><expr><name pos:line="35" pos:column="58">offerID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="36" pos:column="17">boolean</name></type> <name pos:line="36" pos:column="25">fileAdded</name> <init pos:line="36" pos:column="35">= <expr><call><name><name pos:line="36" pos:column="37">File</name><op:operator pos:line="36" pos:column="41">.</op:operator><name pos:line="36" pos:column="42">addFileToDB</name></name><argument_list pos:line="36" pos:column="53">(<argument><expr><name pos:line="36" pos:column="54">fileName</name></expr></argument>, <argument><expr><name pos:line="36" pos:column="64">fileLocation</name></expr></argument>, <argument><expr><name pos:line="36" pos:column="78">offerID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="37" pos:column="17">file</name> <op:operator pos:line="37" pos:column="22">=</op:operator> <op:operator pos:line="37" pos:column="24">new</op:operator> <call><name pos:line="37" pos:column="28">File</name><argument_list pos:line="37" pos:column="32">(<argument><expr><name pos:line="37" pos:column="33">fileName</name></expr></argument>,<argument><expr><name pos:line="37" pos:column="42">fileLocation</name></expr></argument>,<argument><expr><name pos:line="37" pos:column="55">offerID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="38" pos:column="17">file</name><op:operator pos:line="38" pos:column="21">.</op:operator><name pos:line="38" pos:column="22">deleteFileFromDB</name></name><argument_list pos:line="38" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">assertEquals</name><argument_list pos:line="39" pos:column="29">(<argument><expr><lit:literal type="boolean" pos:line="39" pos:column="30">false</lit:literal></expr></argument>,<argument><expr><name pos:line="39" pos:column="36">fileAdded</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<function><type><annotation pos:line="42" pos:column="9">@<name pos:line="42" pos:column="10">Test</name></annotation>
	<specifier pos:line="43" pos:column="9">public</specifier> <name pos:line="43" pos:column="16">void</name></type> <name pos:line="43" pos:column="21">testModifyFileLocation</name><parameter_list pos:line="43" pos:column="43">()</parameter_list> <block pos:line="43" pos:column="46">{
		<expr_stmt><expr><call><name><name pos:line="44" pos:column="17">System</name><op:operator pos:line="44" pos:column="23">.</op:operator><name pos:line="44" pos:column="24">out</name><op:operator pos:line="44" pos:column="27">.</op:operator><name pos:line="44" pos:column="28">println</name></name><argument_list pos:line="44" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="44" pos:column="36">"------ DELETE -------"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="45" pos:column="17">String</name></type> <name pos:line="45" pos:column="24">fileName</name> <init pos:line="45" pos:column="33">= <expr><lit:literal type="string" pos:line="45" pos:column="35">"CS442Syllabus"</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="46" pos:column="17">String</name></type> <name pos:line="46" pos:column="24">fileLocation</name> <init pos:line="46" pos:column="37">= <expr><lit:literal type="string" pos:line="46" pos:column="39">"C:/CS410"</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="47" pos:column="17">int</name></type> <name pos:line="47" pos:column="21">offerID</name> <init pos:line="47" pos:column="29">= <expr><lit:literal type="number" pos:line="47" pos:column="31">410</lit:literal></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="48" pos:column="17">File</name><op:operator pos:line="48" pos:column="21">.</op:operator><name pos:line="48" pos:column="22">addFileToDB</name></name><argument_list pos:line="48" pos:column="33">(<argument><expr><name pos:line="48" pos:column="34">fileName</name></expr></argument>, <argument><expr><name pos:line="48" pos:column="44">fileLocation</name></expr></argument>, <argument><expr><name pos:line="48" pos:column="58">offerID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="49" pos:column="17">File</name></type> <name pos:line="49" pos:column="22">file</name> <init pos:line="49" pos:column="27">= <expr><op:operator pos:line="49" pos:column="29">new</op:operator> <call><name pos:line="49" pos:column="33">File</name><argument_list pos:line="49" pos:column="37">(<argument><expr><name pos:line="49" pos:column="38">fileName</name></expr></argument>,<argument><expr><name pos:line="49" pos:column="47">fileLocation</name></expr></argument>,<argument><expr><name pos:line="49" pos:column="60">offerID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="50" pos:column="17">boolean</name></type> <name pos:line="50" pos:column="25">fileDeleted</name> <init pos:line="50" pos:column="37">= <expr><call><name><name pos:line="50" pos:column="39">file</name><op:operator pos:line="50" pos:column="43">.</op:operator><name pos:line="50" pos:column="44">modifyFileLocation</name></name><argument_list pos:line="50" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="50" pos:column="63">"C:/Syllabus/CS410"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl> ;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="51" pos:column="17">file</name><op:operator pos:line="51" pos:column="21">.</op:operator><name pos:line="51" pos:column="22">setFileLocation</name></name><argument_list pos:line="51" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="51" pos:column="38">"C:/Syllabus/CS410"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="52" pos:column="17">file</name><op:operator pos:line="52" pos:column="21">.</op:operator><name pos:line="52" pos:column="22">deleteFileFromDB</name></name><argument_list pos:line="52" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="53" pos:column="17">System</name><op:operator pos:line="53" pos:column="23">.</op:operator><name pos:line="53" pos:column="24">out</name><op:operator pos:line="53" pos:column="27">.</op:operator><name pos:line="53" pos:column="28">println</name></name><argument_list pos:line="53" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="53" pos:column="36">"------ DELETE -------"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="54" pos:column="17">assertEquals</name><argument_list pos:line="54" pos:column="29">(<argument><expr><lit:literal type="boolean" pos:line="54" pos:column="30">true</lit:literal></expr></argument>,<argument><expr><name pos:line="54" pos:column="35">fileDeleted</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		
	}</block></function>
	
	<comment type="line" pos:line="59" pos:column="9">// File must be already present to be deleted</comment>
	<function><type><annotation pos:line="60" pos:column="9">@<name pos:line="60" pos:column="10">Test</name></annotation>
	<specifier pos:line="61" pos:column="9">public</specifier> <name pos:line="61" pos:column="16">void</name></type> <name pos:line="61" pos:column="21">testDeleteFileFromDB</name><parameter_list pos:line="61" pos:column="41">()</parameter_list> <block pos:line="61" pos:column="44">{
		<decl_stmt><decl><type><name pos:line="62" pos:column="17">String</name></type> <name pos:line="62" pos:column="24">fileName</name> <init pos:line="62" pos:column="33">= <expr><lit:literal type="string" pos:line="62" pos:column="35">"CS442Syllabus"</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="63" pos:column="17">String</name></type> <name pos:line="63" pos:column="24">fileLocation</name> <init pos:line="63" pos:column="37">= <expr><lit:literal type="string" pos:line="63" pos:column="39">"C:/Syllabus/CS410"</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="64" pos:column="17">int</name></type> <name pos:line="64" pos:column="21">offerID</name> <init pos:line="64" pos:column="29">= <expr><lit:literal type="number" pos:line="64" pos:column="31">410</lit:literal></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="65" pos:column="17">File</name><op:operator pos:line="65" pos:column="21">.</op:operator><name pos:line="65" pos:column="22">addFileToDB</name></name><argument_list pos:line="65" pos:column="33">(<argument><expr><name pos:line="65" pos:column="34">fileName</name></expr></argument>, <argument><expr><name pos:line="65" pos:column="44">fileLocation</name></expr></argument>, <argument><expr><name pos:line="65" pos:column="58">offerID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="66" pos:column="17">File</name></type> <name pos:line="66" pos:column="22">file</name> <init pos:line="66" pos:column="27">= <expr><op:operator pos:line="66" pos:column="29">new</op:operator> <call><name pos:line="66" pos:column="33">File</name><argument_list pos:line="66" pos:column="37">(<argument><expr><name pos:line="66" pos:column="38">fileName</name></expr></argument>,<argument><expr><name pos:line="66" pos:column="47">fileLocation</name></expr></argument>,<argument><expr><name pos:line="66" pos:column="60">offerID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="67" pos:column="17">boolean</name></type> <name pos:line="67" pos:column="25">fileDeleted</name> <init pos:line="67" pos:column="37">= <expr><call><name><name pos:line="67" pos:column="39">file</name><op:operator pos:line="67" pos:column="43">.</op:operator><name pos:line="67" pos:column="44">deleteFileFromDB</name></name><argument_list pos:line="67" pos:column="60">()</argument_list></call></expr></init></decl> ;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="68" pos:column="17">assertEquals</name><argument_list pos:line="68" pos:column="29">(<argument><expr><lit:literal type="boolean" pos:line="68" pos:column="30">true</lit:literal></expr></argument>,<argument><expr><name pos:line="68" pos:column="35">fileDeleted</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	}</block></function>


	<function><type><annotation pos:line="73" pos:column="9">@<name pos:line="73" pos:column="10">Test</name></annotation>
	<specifier pos:line="74" pos:column="9">public</specifier> <name pos:line="74" pos:column="16">void</name></type> <name pos:line="74" pos:column="21">testGetFiles</name><parameter_list pos:line="74" pos:column="33">()</parameter_list> <block pos:line="74" pos:column="36">{
		 <decl_stmt><decl><type><name><name pos:line="75" pos:column="18">ArrayList</name><argument_list pos:line="75" pos:column="27">&lt;<argument><name pos:line="75" pos:column="28">File</name></argument>&gt;</argument_list></name></type> <name pos:line="75" pos:column="34">files</name> <init pos:line="75" pos:column="40">= <expr><call><name><name pos:line="75" pos:column="42">File</name><op:operator pos:line="75" pos:column="46">.</op:operator><name pos:line="75" pos:column="47">getFiles</name></name><argument_list pos:line="75" pos:column="55">(<argument><expr><lit:literal type="number" pos:line="75" pos:column="56">410</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 
			
		<for pos:line="77" pos:column="17">for(<init><decl><type><name pos:line="77" pos:column="21">File</name></type> <name pos:line="77" pos:column="26">file2</name><range pos:line="77" pos:column="31">: <expr><name pos:line="77" pos:column="33">files</name></expr></range></decl></init>)<block pos:line="77" pos:column="39">{
			<expr_stmt><expr><call><name><name pos:line="78" pos:column="25">System</name><op:operator pos:line="78" pos:column="31">.</op:operator><name pos:line="78" pos:column="32">out</name><op:operator pos:line="78" pos:column="35">.</op:operator><name pos:line="78" pos:column="36">println</name></name><argument_list pos:line="78" pos:column="43">(<argument><expr><call><name><name pos:line="78" pos:column="44">file2</name><op:operator pos:line="78" pos:column="49">.</op:operator><name pos:line="78" pos:column="50">getFileName</name></name><argument_list pos:line="78" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		<expr_stmt><expr><call><name pos:line="80" pos:column="17">assertNotNull</name><argument_list pos:line="80" pos:column="30">(<argument><expr><name pos:line="80" pos:column="31">files</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

}</block></class>
</unit>
