<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\UMAS\src\com\umas\frontend\manageCourse.java" pos:tabs="8"><package pos:line="1" pos:column="1">package <name><name pos:line="1" pos:column="9">com</name><op:operator pos:line="1" pos:column="12">.</op:operator><name pos:line="1" pos:column="13">umas</name><op:operator pos:line="1" pos:column="17">.</op:operator><name pos:line="1" pos:column="18">frontend</name></name>;</package>


<comment type="block" format="javadoc" pos:line="4" pos:column="1">/****************@author Simant Purohit*********************************/</comment>

<import pos:line="6" pos:column="1">import <name><name pos:line="6" pos:column="8">javax</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">swing</name><op:operator pos:line="6" pos:column="19">.</op:operator><name pos:line="6" pos:column="20">DefaultComboBoxModel</name></name>;</import>
<import pos:line="7" pos:column="1">import <name><name pos:line="7" pos:column="8">javax</name><op:operator pos:line="7" pos:column="13">.</op:operator><name pos:line="7" pos:column="14">swing</name><op:operator pos:line="7" pos:column="19">.</op:operator><name pos:line="7" pos:column="20">JOptionPane</name></name>;</import>
<import pos:line="8" pos:column="1">import <name><name pos:line="8" pos:column="8">javax</name><op:operator pos:line="8" pos:column="13">.</op:operator><name pos:line="8" pos:column="14">swing</name><op:operator pos:line="8" pos:column="19">.</op:operator><name pos:line="8" pos:column="20">JTabbedPane</name></name>;</import>
<import pos:line="9" pos:column="1">import <name><name pos:line="9" pos:column="8">javax</name><op:operator pos:line="9" pos:column="13">.</op:operator><name pos:line="9" pos:column="14">swing</name><op:operator pos:line="9" pos:column="19">.</op:operator><name pos:line="9" pos:column="20">JPanel</name></name>;</import>
<import pos:line="10" pos:column="1">import <name><name pos:line="10" pos:column="8">javax</name><op:operator pos:line="10" pos:column="13">.</op:operator><name pos:line="10" pos:column="14">swing</name><op:operator pos:line="10" pos:column="19">.</op:operator><name pos:line="10" pos:column="20">JLabel</name></name>;</import>

<import pos:line="12" pos:column="1">import <name><name pos:line="12" pos:column="8">java</name><op:operator pos:line="12" pos:column="12">.</op:operator><name pos:line="12" pos:column="13">awt</name><op:operator pos:line="12" pos:column="16">.</op:operator><name pos:line="12" pos:column="17">GridLayout</name></name>;</import>
<import pos:line="13" pos:column="1">import <name><name pos:line="13" pos:column="8">java</name><op:operator pos:line="13" pos:column="12">.</op:operator><name pos:line="13" pos:column="13">util</name><op:operator pos:line="13" pos:column="17">.</op:operator><name pos:line="13" pos:column="18">ArrayList</name></name>;</import>
<import pos:line="14" pos:column="1">import <name><name pos:line="14" pos:column="8">java</name><op:operator pos:line="14" pos:column="12">.</op:operator><name pos:line="14" pos:column="13">util</name><op:operator pos:line="14" pos:column="17">.</op:operator><name pos:line="14" pos:column="18">HashMap</name></name>;</import>
<import pos:line="15" pos:column="1">import <name><name pos:line="15" pos:column="8">java</name><op:operator pos:line="15" pos:column="12">.</op:operator><name pos:line="15" pos:column="13">util</name><op:operator pos:line="15" pos:column="17">.</op:operator><name pos:line="15" pos:column="18">LinkedHashMap</name></name>;</import>

<import pos:line="17" pos:column="1">import <name><name pos:line="17" pos:column="8">javax</name><op:operator pos:line="17" pos:column="13">.</op:operator><name pos:line="17" pos:column="14">swing</name><op:operator pos:line="17" pos:column="19">.</op:operator><name pos:line="17" pos:column="20">JTextField</name></name>;</import>
<import pos:line="18" pos:column="1">import <name><name pos:line="18" pos:column="8">javax</name><op:operator pos:line="18" pos:column="13">.</op:operator><name pos:line="18" pos:column="14">swing</name><op:operator pos:line="18" pos:column="19">.</op:operator><name pos:line="18" pos:column="20">JComboBox</name></name>;</import>
<import pos:line="19" pos:column="1">import <name><name pos:line="19" pos:column="8">javax</name><op:operator pos:line="19" pos:column="13">.</op:operator><name pos:line="19" pos:column="14">swing</name><op:operator pos:line="19" pos:column="19">.</op:operator><name pos:line="19" pos:column="20">JButton</name></name>;</import>

<import pos:line="21" pos:column="1">import <name><name pos:line="21" pos:column="8">com</name><op:operator pos:line="21" pos:column="11">.</op:operator><name pos:line="21" pos:column="12">umas</name><op:operator pos:line="21" pos:column="16">.</op:operator><name pos:line="21" pos:column="17">code</name><op:operator pos:line="21" pos:column="21">.</op:operator><name pos:line="21" pos:column="22">Course</name></name>;</import>
<import pos:line="22" pos:column="1">import <name><name pos:line="22" pos:column="8">com</name><op:operator pos:line="22" pos:column="11">.</op:operator><name pos:line="22" pos:column="12">umas</name><op:operator pos:line="22" pos:column="16">.</op:operator><name pos:line="22" pos:column="17">code</name><op:operator pos:line="22" pos:column="21">.</op:operator><name pos:line="22" pos:column="22">CourseOffered</name></name>;</import>
<import pos:line="23" pos:column="1">import <name><name pos:line="23" pos:column="8">com</name><op:operator pos:line="23" pos:column="11">.</op:operator><name pos:line="23" pos:column="12">umas</name><op:operator pos:line="23" pos:column="16">.</op:operator><name pos:line="23" pos:column="17">code</name><op:operator pos:line="23" pos:column="21">.</op:operator><name pos:line="23" pos:column="22">DBAnnotation</name></name>;</import>
<import pos:line="24" pos:column="1">import <name><name pos:line="24" pos:column="8">com</name><op:operator pos:line="24" pos:column="11">.</op:operator><name pos:line="24" pos:column="12">umas</name><op:operator pos:line="24" pos:column="16">.</op:operator><name pos:line="24" pos:column="17">code</name><op:operator pos:line="24" pos:column="21">.</op:operator><name pos:line="24" pos:column="22">Department</name></name>;</import>
<import pos:line="25" pos:column="1">import <name><name pos:line="25" pos:column="8">com</name><op:operator pos:line="25" pos:column="11">.</op:operator><name pos:line="25" pos:column="12">umas</name><op:operator pos:line="25" pos:column="16">.</op:operator><name pos:line="25" pos:column="17">code</name><op:operator pos:line="25" pos:column="21">.</op:operator><name pos:line="25" pos:column="22">Professor</name></name>;</import>
<import pos:line="26" pos:column="1">import <name><name pos:line="26" pos:column="8">com</name><op:operator pos:line="26" pos:column="11">.</op:operator><name pos:line="26" pos:column="12">umas</name><op:operator pos:line="26" pos:column="16">.</op:operator><name pos:line="26" pos:column="17">code</name><op:operator pos:line="26" pos:column="21">.</op:operator><name pos:line="26" pos:column="22">Course</name><op:operator pos:line="26" pos:column="28">.</op:operator><name pos:line="26" pos:column="29">CourseAlreadyExistsException</name></name>;</import>
<import pos:line="27" pos:column="1">import <name><name pos:line="27" pos:column="8">com</name><op:operator pos:line="27" pos:column="11">.</op:operator><name pos:line="27" pos:column="12">umas</name><op:operator pos:line="27" pos:column="16">.</op:operator><name pos:line="27" pos:column="17">code</name><op:operator pos:line="27" pos:column="21">.</op:operator><name pos:line="27" pos:column="22">Course</name><op:operator pos:line="27" pos:column="28">.</op:operator><name pos:line="27" pos:column="29">CourseDoesNotExistException</name></name>;</import>
<import pos:line="28" pos:column="1">import <name><name pos:line="28" pos:column="8">com</name><op:operator pos:line="28" pos:column="11">.</op:operator><name pos:line="28" pos:column="12">umas</name><op:operator pos:line="28" pos:column="16">.</op:operator><name pos:line="28" pos:column="17">code</name><op:operator pos:line="28" pos:column="21">.</op:operator><name pos:line="28" pos:column="22">CourseOffered</name><op:operator pos:line="28" pos:column="35">.</op:operator><name pos:line="28" pos:column="36">CourseOfferingDoesNotExistException</name></name>;</import>
<import pos:line="29" pos:column="1">import <name><name pos:line="29" pos:column="8">com</name><op:operator pos:line="29" pos:column="11">.</op:operator><name pos:line="29" pos:column="12">umas</name><op:operator pos:line="29" pos:column="16">.</op:operator><name pos:line="29" pos:column="17">code</name><op:operator pos:line="29" pos:column="21">.</op:operator><name pos:line="29" pos:column="22">Department</name><op:operator pos:line="29" pos:column="32">.</op:operator><name pos:line="29" pos:column="33">DepartmentDoesNotExistException</name></name>;</import>
<import pos:line="30" pos:column="1">import <name><name pos:line="30" pos:column="8">com</name><op:operator pos:line="30" pos:column="11">.</op:operator><name pos:line="30" pos:column="12">umas</name><op:operator pos:line="30" pos:column="16">.</op:operator><name pos:line="30" pos:column="17">code</name><op:operator pos:line="30" pos:column="21">.</op:operator><name pos:line="30" pos:column="22">Professor</name><op:operator pos:line="30" pos:column="31">.</op:operator><name pos:line="30" pos:column="32">ProfessorDoesNotExistException</name></name>;</import>

<import pos:line="32" pos:column="1">import <name><name pos:line="32" pos:column="8">java</name><op:operator pos:line="32" pos:column="12">.</op:operator><name pos:line="32" pos:column="13">awt</name><op:operator pos:line="32" pos:column="16">.</op:operator><name pos:line="32" pos:column="17">event</name><op:operator pos:line="32" pos:column="22">.</op:operator><name pos:line="32" pos:column="23">ActionListener</name></name>;</import>
<import pos:line="33" pos:column="1">import <name><name pos:line="33" pos:column="8">java</name><op:operator pos:line="33" pos:column="12">.</op:operator><name pos:line="33" pos:column="13">awt</name><op:operator pos:line="33" pos:column="16">.</op:operator><name pos:line="33" pos:column="17">event</name><op:operator pos:line="33" pos:column="22">.</op:operator><name pos:line="33" pos:column="23">ActionEvent</name></name>;</import>




<class><specifier pos:line="38" pos:column="1">public</specifier> class <name pos:line="38" pos:column="14">manageCourse</name> <super><extends pos:line="38" pos:column="27">extends <name pos:line="38" pos:column="35">JTabbedPane</name></extends></super> <block pos:line="38" pos:column="47">{
	<comment type="block" format="javadoc" pos:line="39" pos:column="9">/**
	 * 
	 */</comment>
	<decl_stmt><decl><type><specifier pos:line="42" pos:column="9">private</specifier> <specifier pos:line="42" pos:column="17">static</specifier> <specifier pos:line="42" pos:column="24">final</specifier> <name pos:line="42" pos:column="30">long</name></type> <name pos:line="42" pos:column="35">serialVersionUID</name> <init pos:line="42" pos:column="52">= <expr><lit:literal type="number" pos:line="42" pos:column="54">1L</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="43" pos:column="9">private</specifier> <name pos:line="43" pos:column="17">JTextField</name></type> <name pos:line="43" pos:column="28">textField</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="44" pos:column="9">private</specifier> <name><name pos:line="44" pos:column="17">JComboBox</name><argument_list pos:line="44" pos:column="26">&lt;<argument><name pos:line="44" pos:column="27">String</name></argument>&gt;</argument_list></name></type> <name pos:line="44" pos:column="35">allDepartmentCombo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="45" pos:column="9">private</specifier> <specifier pos:line="45" pos:column="17">static</specifier> <name pos:line="45" pos:column="24">manageCourse</name></type> <name pos:line="45" pos:column="37">manageCourseInstance</name></decl>;</decl_stmt>
	
	<comment type="line" pos:line="47" pos:column="9">//-----update COURSE variables-------------//</comment>
	<decl_stmt><decl><type><specifier pos:line="48" pos:column="9">private</specifier> <name pos:line="48" pos:column="17">JTextField</name></type> <name pos:line="48" pos:column="28">textField_1</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="49" pos:column="9">private</specifier> <name><name pos:line="49" pos:column="17">JComboBox</name><argument_list pos:line="49" pos:column="26">&lt;<argument><name pos:line="49" pos:column="27">String</name></argument>&gt;</argument_list></name></type> <name pos:line="49" pos:column="35">allCoursesCombo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="50" pos:column="9">private</specifier> <name><name pos:line="50" pos:column="17">JComboBox</name><argument_list pos:line="50" pos:column="26">&lt;<argument><name pos:line="50" pos:column="27">String</name></argument>&gt;</argument_list></name></type> <name pos:line="50" pos:column="35">updateCourseDeptCombo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="51" pos:column="9">private</specifier> <name pos:line="51" pos:column="17">JButton</name></type> <name pos:line="51" pos:column="25">btnConfirmUpdate</name></decl>;</decl_stmt>
	
	<comment type="line" pos:line="53" pos:column="9">//-------------UPDATE COURSE OFFERING VARIABLES------------------//</comment>
	<decl_stmt><decl><type><specifier pos:line="54" pos:column="9">private</specifier> <name><name pos:line="54" pos:column="17">JComboBox</name><argument_list pos:line="54" pos:column="26">&lt;<argument><name pos:line="54" pos:column="27">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="54" pos:column="36">updateOfferIDCombo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="55" pos:column="9">private</specifier> <name><name pos:line="55" pos:column="17">JComboBox</name><argument_list pos:line="55" pos:column="26">&lt;<argument><name pos:line="55" pos:column="27">String</name></argument>&gt;</argument_list></name></type> <name pos:line="55" pos:column="35">updateOfferProfessorCombo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="56" pos:column="9">private</specifier> <name pos:line="56" pos:column="17">JButton</name></type> <name pos:line="56" pos:column="25">btnUpdateOffer</name></decl>;</decl_stmt>
	
	
	<function><type><specifier pos:line="59" pos:column="9">public</specifier> <specifier pos:line="59" pos:column="16">static</specifier> <name pos:line="59" pos:column="23">manageCourse</name></type> <name pos:line="59" pos:column="36">getInstance</name><parameter_list pos:line="59" pos:column="47">()</parameter_list><block pos:line="59" pos:column="49">{
		<if pos:line="60" pos:column="17">if<condition pos:line="60" pos:column="19">(<expr><name pos:line="60" pos:column="20">manageCourseInstance</name> <op:operator pos:line="60" pos:column="41">==</op:operator> <lit:literal type="null" pos:line="60" pos:column="44">null</lit:literal></expr>)</condition><then><block pos:line="60" pos:column="49">{
			<expr_stmt><expr><name pos:line="61" pos:column="25">manageCourseInstance</name> <op:operator pos:line="61" pos:column="46">=</op:operator> <op:operator pos:line="61" pos:column="48">new</op:operator> <call><name pos:line="61" pos:column="52">manageCourse</name><argument_list pos:line="61" pos:column="64">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		
		<return pos:line="64" pos:column="17">return <expr><name pos:line="64" pos:column="24">manageCourseInstance</name></expr>;</return>
	}</block></function>

	<comment type="block" format="javadoc" pos:line="67" pos:column="9">/**
	 * Create the panel.
	 */</comment>
	<constructor><specifier pos:line="70" pos:column="9">private</specifier> <name pos:line="70" pos:column="17">manageCourse</name><parameter_list pos:line="70" pos:column="29">()</parameter_list> <block pos:line="70" pos:column="32">{
		
		<comment type="line" pos:line="72" pos:column="17">//-------------ADD A COURSE CODE----------//</comment>
		<decl_stmt><decl><type><name pos:line="73" pos:column="17">JPanel</name></type> <name pos:line="73" pos:column="24">addACourse</name> <init pos:line="73" pos:column="35">= <expr><op:operator pos:line="73" pos:column="37">new</op:operator> <call><name pos:line="73" pos:column="41">JPanel</name><argument_list pos:line="73" pos:column="47">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="74" pos:column="17">addTab</name><argument_list pos:line="74" pos:column="23">(<argument><expr><lit:literal type="string" pos:line="74" pos:column="24">"Add a Course"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="74" pos:column="40">null</lit:literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="46">addACourse</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="74" pos:column="58">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="75" pos:column="17">addACourse</name><op:operator pos:line="75" pos:column="27">.</op:operator><name pos:line="75" pos:column="28">setLayout</name></name><argument_list pos:line="75" pos:column="37">(<argument><expr><op:operator pos:line="75" pos:column="38">new</op:operator> <call><name pos:line="75" pos:column="42">GridLayout</name><argument_list pos:line="75" pos:column="52">(<argument><expr><lit:literal type="number" pos:line="75" pos:column="53">3</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="75" pos:column="56">2</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="75" pos:column="59">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="75" pos:column="62">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="77" pos:column="17">JLabel</name></type> <name pos:line="77" pos:column="24">lblCourseName</name> <init pos:line="77" pos:column="38">= <expr><op:operator pos:line="77" pos:column="40">new</op:operator> <call><name pos:line="77" pos:column="44">JLabel</name><argument_list pos:line="77" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="77" pos:column="51">"Course Name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="78" pos:column="17">addACourse</name><op:operator pos:line="78" pos:column="27">.</op:operator><name pos:line="78" pos:column="28">add</name></name><argument_list pos:line="78" pos:column="31">(<argument><expr><name pos:line="78" pos:column="32">lblCourseName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="80" pos:column="17">textField</name> <op:operator pos:line="80" pos:column="27">=</op:operator> <op:operator pos:line="80" pos:column="29">new</op:operator> <call><name pos:line="80" pos:column="33">JTextField</name><argument_list pos:line="80" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="81" pos:column="17">addACourse</name><op:operator pos:line="81" pos:column="27">.</op:operator><name pos:line="81" pos:column="28">add</name></name><argument_list pos:line="81" pos:column="31">(<argument><expr><name pos:line="81" pos:column="32">textField</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="82" pos:column="17">textField</name><op:operator pos:line="82" pos:column="26">.</op:operator><name pos:line="82" pos:column="27">setColumns</name></name><argument_list pos:line="82" pos:column="37">(<argument><expr><lit:literal type="number" pos:line="82" pos:column="38">10</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="84" pos:column="17">JLabel</name></type> <name pos:line="84" pos:column="24">lblNewLabel</name> <init pos:line="84" pos:column="36">= <expr><op:operator pos:line="84" pos:column="38">new</op:operator> <call><name pos:line="84" pos:column="42">JLabel</name><argument_list pos:line="84" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="84" pos:column="49">"Select Department"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="85" pos:column="17">addACourse</name><op:operator pos:line="85" pos:column="27">.</op:operator><name pos:line="85" pos:column="28">add</name></name><argument_list pos:line="85" pos:column="31">(<argument><expr><name pos:line="85" pos:column="32">lblNewLabel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="87" pos:column="17">allDepartmentCombo</name> <op:operator pos:line="87" pos:column="36">=</op:operator> <op:operator pos:line="87" pos:column="38">new</op:operator> <call><name><name pos:line="87" pos:column="42">JComboBox</name><argument_list pos:line="87" pos:column="51">&lt;<argument><name pos:line="87" pos:column="52">String</name></argument>&gt;</argument_list></name><argument_list pos:line="87" pos:column="59">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="88" pos:column="17">addACourse</name><op:operator pos:line="88" pos:column="27">.</op:operator><name pos:line="88" pos:column="28">add</name></name><argument_list pos:line="88" pos:column="31">(<argument><expr><name pos:line="88" pos:column="32">allDepartmentCombo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="90" pos:column="17">JLabel</name></type> <name pos:line="90" pos:column="24">lblNewLabel_1</name> <init pos:line="90" pos:column="38">= <expr><op:operator pos:line="90" pos:column="40">new</op:operator> <call><name pos:line="90" pos:column="44">JLabel</name><argument_list pos:line="90" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="90" pos:column="51">"Confirm Changes"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="91" pos:column="17">addACourse</name><op:operator pos:line="91" pos:column="27">.</op:operator><name pos:line="91" pos:column="28">add</name></name><argument_list pos:line="91" pos:column="31">(<argument><expr><name pos:line="91" pos:column="32">lblNewLabel_1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="93" pos:column="17">JButton</name></type> <name pos:line="93" pos:column="25">btnNewButton</name> <init pos:line="93" pos:column="38">= <expr><op:operator pos:line="93" pos:column="40">new</op:operator> <call><name pos:line="93" pos:column="44">JButton</name><argument_list pos:line="93" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="93" pos:column="52">"Add course"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="94" pos:column="17">btnNewButton</name><op:operator pos:line="94" pos:column="29">.</op:operator><name pos:line="94" pos:column="30">addActionListener</name></name><argument_list pos:line="94" pos:column="47">(<argument><expr><op:operator pos:line="94" pos:column="48">new</op:operator> <class><super><name pos:line="94" pos:column="52">ActionListener</name></super><argument_list pos:line="94" pos:column="66">()</argument_list> <block pos:line="94" pos:column="69">{
			<function><type><specifier pos:line="95" pos:column="25">public</specifier> <name pos:line="95" pos:column="32">void</name></type> <name pos:line="95" pos:column="37">actionPerformed</name><parameter_list pos:line="95" pos:column="52">(<param><decl><type><name pos:line="95" pos:column="53">ActionEvent</name></type> <name pos:line="95" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="95" pos:column="71">{
				<expr_stmt><expr><call><name pos:line="96" pos:column="33">addCourse</name><argument_list pos:line="96" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="97" pos:column="33">textField</name><op:operator pos:line="97" pos:column="42">.</op:operator><name pos:line="97" pos:column="43">setText</name></name><argument_list pos:line="97" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="97" pos:column="51">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="98" pos:column="33">initializeDepartments</name><argument_list pos:line="98" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="101" pos:column="17">addACourse</name><op:operator pos:line="101" pos:column="27">.</op:operator><name pos:line="101" pos:column="28">add</name></name><argument_list pos:line="101" pos:column="31">(<argument><expr><name pos:line="101" pos:column="32">btnNewButton</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<comment type="line" pos:line="103" pos:column="17">//------------UPDATE COURSE CODE-----------------//</comment>
		<decl_stmt><decl><type><name pos:line="104" pos:column="17">JPanel</name></type> <name pos:line="104" pos:column="24">updateCourse</name> <init pos:line="104" pos:column="37">= <expr><op:operator pos:line="104" pos:column="39">new</op:operator> <call><name pos:line="104" pos:column="43">JPanel</name><argument_list pos:line="104" pos:column="49">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="105" pos:column="17">addTab</name><argument_list pos:line="105" pos:column="23">(<argument><expr><lit:literal type="string" pos:line="105" pos:column="24">"Update a course"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="105" pos:column="43">null</lit:literal></expr></argument>, <argument><expr><name pos:line="105" pos:column="49">updateCourse</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="105" pos:column="63">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="106" pos:column="17">updateCourse</name><op:operator pos:line="106" pos:column="29">.</op:operator><name pos:line="106" pos:column="30">setLayout</name></name><argument_list pos:line="106" pos:column="39">(<argument><expr><op:operator pos:line="106" pos:column="40">new</op:operator> <call><name pos:line="106" pos:column="44">GridLayout</name><argument_list pos:line="106" pos:column="54">(<argument><expr><lit:literal type="number" pos:line="106" pos:column="55">4</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="106" pos:column="58">2</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="106" pos:column="61">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="106" pos:column="64">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="108" pos:column="17">JLabel</name></type> <name pos:line="108" pos:column="24">lblSelectCourse</name> <init pos:line="108" pos:column="40">= <expr><op:operator pos:line="108" pos:column="42">new</op:operator> <call><name pos:line="108" pos:column="46">JLabel</name><argument_list pos:line="108" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="108" pos:column="53">"Select Course"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="109" pos:column="17">updateCourse</name><op:operator pos:line="109" pos:column="29">.</op:operator><name pos:line="109" pos:column="30">add</name></name><argument_list pos:line="109" pos:column="33">(<argument><expr><name pos:line="109" pos:column="34">lblSelectCourse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="111" pos:column="17">allCoursesCombo</name> <op:operator pos:line="111" pos:column="33">=</op:operator> <op:operator pos:line="111" pos:column="35">new</op:operator> <call><name><name pos:line="111" pos:column="39">JComboBox</name><argument_list pos:line="111" pos:column="48">&lt;<argument><name pos:line="111" pos:column="49">String</name></argument>&gt;</argument_list></name><argument_list pos:line="111" pos:column="56">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="112" pos:column="17">allCoursesCombo</name><op:operator pos:line="112" pos:column="32">.</op:operator><name pos:line="112" pos:column="33">addActionListener</name></name><argument_list pos:line="112" pos:column="50">(<argument><expr><op:operator pos:line="112" pos:column="51">new</op:operator> <class><super><name pos:line="112" pos:column="55">ActionListener</name></super><argument_list pos:line="112" pos:column="69">()</argument_list> <block pos:line="112" pos:column="72">{
			<function><type><specifier pos:line="113" pos:column="25">public</specifier> <name pos:line="113" pos:column="32">void</name></type> <name pos:line="113" pos:column="37">actionPerformed</name><parameter_list pos:line="113" pos:column="52">(<param><decl><type><name pos:line="113" pos:column="53">ActionEvent</name></type> <name pos:line="113" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="113" pos:column="71">{
				<expr_stmt><expr><call><name><name pos:line="114" pos:column="33">updateCourseDeptCombo</name><op:operator pos:line="114" pos:column="54">.</op:operator><name pos:line="114" pos:column="55">setEnabled</name></name><argument_list pos:line="114" pos:column="65">(<argument><expr><lit:literal type="boolean" pos:line="114" pos:column="66">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="115" pos:column="33">textField_1</name><op:operator pos:line="115" pos:column="44">.</op:operator><name pos:line="115" pos:column="45">setEnabled</name></name><argument_list pos:line="115" pos:column="55">(<argument><expr><lit:literal type="boolean" pos:line="115" pos:column="56">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="116" pos:column="33">btnConfirmUpdate</name><op:operator pos:line="116" pos:column="49">.</op:operator><name pos:line="116" pos:column="50">setEnabled</name></name><argument_list pos:line="116" pos:column="60">(<argument><expr><lit:literal type="boolean" pos:line="116" pos:column="61">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
				<try pos:line="118" pos:column="33">try <block pos:line="118" pos:column="37">{
					<decl_stmt><decl><type><name pos:line="119" pos:column="41">Course</name></type> <name pos:line="119" pos:column="48">courseSelected</name> <init pos:line="119" pos:column="63">= <expr><op:operator pos:line="119" pos:column="65">new</op:operator> <call><name pos:line="119" pos:column="69">Course</name><argument_list pos:line="119" pos:column="75">(<argument><expr><op:operator pos:line="119" pos:column="76">(</op:operator><name pos:line="119" pos:column="77">String</name><op:operator pos:line="119" pos:column="83">)</op:operator><call><name><name pos:line="119" pos:column="84">allCoursesCombo</name><op:operator pos:line="119" pos:column="99">.</op:operator><name pos:line="119" pos:column="100">getSelectedItem</name></name><argument_list pos:line="119" pos:column="115">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="120" pos:column="41">textField_1</name><op:operator pos:line="120" pos:column="52">.</op:operator><name pos:line="120" pos:column="53">setText</name></name><argument_list pos:line="120" pos:column="60">(<argument><expr><call><name><name pos:line="120" pos:column="61">courseSelected</name><op:operator pos:line="120" pos:column="75">.</op:operator><name pos:line="120" pos:column="76">getCourseName</name></name><argument_list pos:line="120" pos:column="89">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
					<expr_stmt><expr><call><name><name pos:line="122" pos:column="41">DBAnnotation</name><op:operator pos:line="122" pos:column="53">.</op:operator><name pos:line="122" pos:column="54">annoate</name></name><argument_list pos:line="122" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="122" pos:column="62">"courseDepartment"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="122" pos:column="82">"department"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="122" pos:column="96">"Department"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="122" pos:column="110">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="123" pos:column="41">String</name></type> <name pos:line="123" pos:column="48">courseDepartment</name> <init pos:line="123" pos:column="65">= <expr><call><name><name pos:line="123" pos:column="67">courseSelected</name><op:operator pos:line="123" pos:column="81">.</op:operator><name pos:line="123" pos:column="82">getDepartment</name></name><argument_list pos:line="123" pos:column="95">()</argument_list></call><op:operator pos:line="123" pos:column="97">.</op:operator><call><name pos:line="123" pos:column="98">getDepartmentName</name><argument_list pos:line="123" pos:column="115">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="124" pos:column="41">int</name></type> <name pos:line="124" pos:column="45">i</name> <init pos:line="124" pos:column="47">= <expr><call><name pos:line="124" pos:column="49">getDepartmentIndex</name><argument_list pos:line="124" pos:column="67">(<argument><expr><name pos:line="124" pos:column="68">courseDepartment</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					
					<if pos:line="126" pos:column="41">if<condition pos:line="126" pos:column="43">(<expr><name pos:line="126" pos:column="44">i</name><op:operator pos:line="126" pos:column="45">==</op:operator><op:operator pos:line="126" pos:column="47">-</op:operator><lit:literal type="number" pos:line="126" pos:column="48">1</lit:literal></expr>)</condition><then><block pos:line="126" pos:column="50">{
						<expr_stmt><expr><call><name pos:line="127" pos:column="49">showMessage</name><argument_list pos:line="127" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="127" pos:column="61">"Error retrieving the department"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="127" pos:column="96">"Failure"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="128" pos:column="49">updateCourseDeptCombo</name><op:operator pos:line="128" pos:column="70">.</op:operator><name pos:line="128" pos:column="71">setSelectedIndex</name></name><argument_list pos:line="128" pos:column="87">(<argument><expr><name pos:line="128" pos:column="88">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<return pos:line="129" pos:column="49">return;</return>
					}</block></then></if>
					
					<expr_stmt><expr><call><name><name pos:line="132" pos:column="41">updateCourseDeptCombo</name><op:operator pos:line="132" pos:column="62">.</op:operator><name pos:line="132" pos:column="63">setSelectedIndex</name></name><argument_list pos:line="132" pos:column="79">(<argument><expr><name pos:line="132" pos:column="80">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
					
				}</block> <catch pos:line="135" pos:column="35">catch <parameter_list pos:line="135" pos:column="41">(<param><decl><type><name><name pos:line="135" pos:column="42">Course</name><op:operator pos:line="135" pos:column="48">.</op:operator><name pos:line="135" pos:column="49">CourseDoesNotExistException</name></name></type> <name pos:line="135" pos:column="77">e</name></decl></param>)</parameter_list> <block pos:line="135" pos:column="80">{
					<comment type="line" pos:line="136" pos:column="41">// TODO Auto-generated catch block</comment>
					<expr_stmt><expr><call><name><name pos:line="137" pos:column="41">e</name><op:operator pos:line="137" pos:column="42">.</op:operator><name pos:line="137" pos:column="43">printStackTrace</name></name><argument_list pos:line="137" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="141" pos:column="17">updateCourse</name><op:operator pos:line="141" pos:column="29">.</op:operator><name pos:line="141" pos:column="30">add</name></name><argument_list pos:line="141" pos:column="33">(<argument><expr><name pos:line="141" pos:column="34">allCoursesCombo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="143" pos:column="17">JLabel</name></type> <name pos:line="143" pos:column="24">lblSelectedCourseName</name> <init pos:line="143" pos:column="46">= <expr><op:operator pos:line="143" pos:column="48">new</op:operator> <call><name pos:line="143" pos:column="52">JLabel</name><argument_list pos:line="143" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="143" pos:column="59">"Selected Course Name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="144" pos:column="17">updateCourse</name><op:operator pos:line="144" pos:column="29">.</op:operator><name pos:line="144" pos:column="30">add</name></name><argument_list pos:line="144" pos:column="33">(<argument><expr><name pos:line="144" pos:column="34">lblSelectedCourseName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="146" pos:column="17">textField_1</name> <op:operator pos:line="146" pos:column="29">=</op:operator> <op:operator pos:line="146" pos:column="31">new</op:operator> <call><name pos:line="146" pos:column="35">JTextField</name><argument_list pos:line="146" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="147" pos:column="17">textField_1</name><op:operator pos:line="147" pos:column="28">.</op:operator><name pos:line="147" pos:column="29">setEnabled</name></name><argument_list pos:line="147" pos:column="39">(<argument><expr><lit:literal type="boolean" pos:line="147" pos:column="40">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="148" pos:column="17">updateCourse</name><op:operator pos:line="148" pos:column="29">.</op:operator><name pos:line="148" pos:column="30">add</name></name><argument_list pos:line="148" pos:column="33">(<argument><expr><name pos:line="148" pos:column="34">textField_1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="149" pos:column="17">textField_1</name><op:operator pos:line="149" pos:column="28">.</op:operator><name pos:line="149" pos:column="29">setColumns</name></name><argument_list pos:line="149" pos:column="39">(<argument><expr><lit:literal type="number" pos:line="149" pos:column="40">10</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="151" pos:column="17">JLabel</name></type> <name pos:line="151" pos:column="24">lblSelectedCourseDepartment</name> <init pos:line="151" pos:column="52">= <expr><op:operator pos:line="151" pos:column="54">new</op:operator> <call><name pos:line="151" pos:column="58">JLabel</name><argument_list pos:line="151" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="151" pos:column="65">"Selected Course Department"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="152" pos:column="17">updateCourse</name><op:operator pos:line="152" pos:column="29">.</op:operator><name pos:line="152" pos:column="30">add</name></name><argument_list pos:line="152" pos:column="33">(<argument><expr><name pos:line="152" pos:column="34">lblSelectedCourseDepartment</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="154" pos:column="17">updateCourseDeptCombo</name> <op:operator pos:line="154" pos:column="39">=</op:operator> <op:operator pos:line="154" pos:column="41">new</op:operator> <call><name><name pos:line="154" pos:column="45">JComboBox</name><argument_list pos:line="154" pos:column="54">&lt;<argument><name pos:line="154" pos:column="55">String</name></argument>&gt;</argument_list></name><argument_list pos:line="154" pos:column="62">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="155" pos:column="17">updateCourseDeptCombo</name><op:operator pos:line="155" pos:column="38">.</op:operator><name pos:line="155" pos:column="39">setEnabled</name></name><argument_list pos:line="155" pos:column="49">(<argument><expr><lit:literal type="boolean" pos:line="155" pos:column="50">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="156" pos:column="17">updateCourse</name><op:operator pos:line="156" pos:column="29">.</op:operator><name pos:line="156" pos:column="30">add</name></name><argument_list pos:line="156" pos:column="33">(<argument><expr><name pos:line="156" pos:column="34">updateCourseDeptCombo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="158" pos:column="17">JLabel</name></type> <name pos:line="158" pos:column="24">lblUpdateWithAbove</name> <init pos:line="158" pos:column="43">= <expr><op:operator pos:line="158" pos:column="45">new</op:operator> <call><name pos:line="158" pos:column="49">JLabel</name><argument_list pos:line="158" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="158" pos:column="56">"Update with above values"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="159" pos:column="17">updateCourse</name><op:operator pos:line="159" pos:column="29">.</op:operator><name pos:line="159" pos:column="30">add</name></name><argument_list pos:line="159" pos:column="33">(<argument><expr><name pos:line="159" pos:column="34">lblUpdateWithAbove</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="161" pos:column="17">btnConfirmUpdate</name> <op:operator pos:line="161" pos:column="34">=</op:operator> <op:operator pos:line="161" pos:column="36">new</op:operator> <call><name pos:line="161" pos:column="40">JButton</name><argument_list pos:line="161" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="161" pos:column="48">"Confirm update"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="162" pos:column="17">btnConfirmUpdate</name><op:operator pos:line="162" pos:column="33">.</op:operator><name pos:line="162" pos:column="34">addActionListener</name></name><argument_list pos:line="162" pos:column="51">(<argument><expr><op:operator pos:line="162" pos:column="52">new</op:operator> <class><super><name pos:line="162" pos:column="56">ActionListener</name></super><argument_list pos:line="162" pos:column="70">()</argument_list> <block pos:line="162" pos:column="73">{
			<function><type><specifier pos:line="163" pos:column="25">public</specifier> <name pos:line="163" pos:column="32">void</name></type> <name pos:line="163" pos:column="37">actionPerformed</name><parameter_list pos:line="163" pos:column="52">(<param><decl><type><name pos:line="163" pos:column="53">ActionEvent</name></type> <name pos:line="163" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="163" pos:column="71">{
				<expr_stmt><expr><call><name pos:line="164" pos:column="33">updateCourse</name><argument_list pos:line="164" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="165" pos:column="33">initializeDepartments</name><argument_list pos:line="165" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="166" pos:column="33">initializeCourseList</name><argument_list pos:line="166" pos:column="53">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="167" pos:column="33">initializeCourseOfferingUpdateTab</name><argument_list pos:line="167" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="168" pos:column="33">textField_1</name><op:operator pos:line="168" pos:column="44">.</op:operator><name pos:line="168" pos:column="45">setEnabled</name></name><argument_list pos:line="168" pos:column="55">(<argument><expr><lit:literal type="boolean" pos:line="168" pos:column="56">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="169" pos:column="33">updateCourseDeptCombo</name><op:operator pos:line="169" pos:column="54">.</op:operator><name pos:line="169" pos:column="55">setEnabled</name></name><argument_list pos:line="169" pos:column="65">(<argument><expr><lit:literal type="boolean" pos:line="169" pos:column="66">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="170" pos:column="33">btnConfirmUpdate</name><op:operator pos:line="170" pos:column="49">.</op:operator><name pos:line="170" pos:column="50">setEnabled</name></name><argument_list pos:line="170" pos:column="60">(<argument><expr><lit:literal type="boolean" pos:line="170" pos:column="61">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="171" pos:column="33">AdminUI</name></type> <name pos:line="171" pos:column="41">adminUI</name> <init pos:line="171" pos:column="49">= <expr><call><name><name pos:line="171" pos:column="51">AdminUI</name><op:operator pos:line="171" pos:column="58">.</op:operator><name pos:line="171" pos:column="59">getInstance</name></name><argument_list pos:line="171" pos:column="70">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="172" pos:column="33">adminUI</name><op:operator pos:line="172" pos:column="40">.</op:operator><name pos:line="172" pos:column="41">initializeEveryThing</name></name><argument_list pos:line="172" pos:column="61">()</argument_list></call></expr>;</expr_stmt>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="175" pos:column="17">btnConfirmUpdate</name><op:operator pos:line="175" pos:column="33">.</op:operator><name pos:line="175" pos:column="34">setEnabled</name></name><argument_list pos:line="175" pos:column="44">(<argument><expr><lit:literal type="boolean" pos:line="175" pos:column="45">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="176" pos:column="17">updateCourse</name><op:operator pos:line="176" pos:column="29">.</op:operator><name pos:line="176" pos:column="30">add</name></name><argument_list pos:line="176" pos:column="33">(<argument><expr><name pos:line="176" pos:column="34">btnConfirmUpdate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		
		<comment type="line" pos:line="179" pos:column="17">//--------------UPDATE COURSE OFFERING CODE----------------//</comment>
		<decl_stmt><decl><type><name pos:line="180" pos:column="17">JPanel</name></type> <name pos:line="180" pos:column="24">updateCourseOffering</name> <init pos:line="180" pos:column="45">= <expr><op:operator pos:line="180" pos:column="47">new</op:operator> <call><name pos:line="180" pos:column="51">JPanel</name><argument_list pos:line="180" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="181" pos:column="17">addTab</name><argument_list pos:line="181" pos:column="23">(<argument><expr><lit:literal type="string" pos:line="181" pos:column="24">"Update Course Offering"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="181" pos:column="50">null</lit:literal></expr></argument>, <argument><expr><name pos:line="181" pos:column="56">updateCourseOffering</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="181" pos:column="78">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="182" pos:column="17">updateCourseOffering</name><op:operator pos:line="182" pos:column="37">.</op:operator><name pos:line="182" pos:column="38">setLayout</name></name><argument_list pos:line="182" pos:column="47">(<argument><expr><op:operator pos:line="182" pos:column="48">new</op:operator> <call><name pos:line="182" pos:column="52">GridLayout</name><argument_list pos:line="182" pos:column="62">(<argument><expr><lit:literal type="number" pos:line="182" pos:column="63">3</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="182" pos:column="66">2</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="182" pos:column="69">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="182" pos:column="72">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="184" pos:column="17">JLabel</name></type> <name pos:line="184" pos:column="24">lblSelectOfferId</name> <init pos:line="184" pos:column="41">= <expr><op:operator pos:line="184" pos:column="43">new</op:operator> <call><name pos:line="184" pos:column="47">JLabel</name><argument_list pos:line="184" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="184" pos:column="54">"Select Offer ID"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="185" pos:column="17">updateCourseOffering</name><op:operator pos:line="185" pos:column="37">.</op:operator><name pos:line="185" pos:column="38">add</name></name><argument_list pos:line="185" pos:column="41">(<argument><expr><name pos:line="185" pos:column="42">lblSelectOfferId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="187" pos:column="17">updateOfferIDCombo</name> <op:operator pos:line="187" pos:column="36">=</op:operator> <op:operator pos:line="187" pos:column="38">new</op:operator> <call><name><name pos:line="187" pos:column="42">JComboBox</name><argument_list pos:line="187" pos:column="51">&lt;<argument><name pos:line="187" pos:column="52">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="187" pos:column="60">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="188" pos:column="17">updateOfferIDCombo</name><op:operator pos:line="188" pos:column="35">.</op:operator><name pos:line="188" pos:column="36">addActionListener</name></name><argument_list pos:line="188" pos:column="53">(<argument><expr><op:operator pos:line="188" pos:column="54">new</op:operator> <class><super><name pos:line="188" pos:column="58">ActionListener</name></super><argument_list pos:line="188" pos:column="72">()</argument_list> <block pos:line="188" pos:column="75">{
			<function><type><specifier pos:line="189" pos:column="25">public</specifier> <name pos:line="189" pos:column="32">void</name></type> <name pos:line="189" pos:column="37">actionPerformed</name><parameter_list pos:line="189" pos:column="52">(<param><decl><type><name pos:line="189" pos:column="53">ActionEvent</name></type> <name pos:line="189" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="189" pos:column="71">{
				<expr_stmt><expr><call><name><name pos:line="190" pos:column="33">updateOfferProfessorCombo</name><op:operator pos:line="190" pos:column="58">.</op:operator><name pos:line="190" pos:column="59">setEnabled</name></name><argument_list pos:line="190" pos:column="69">(<argument><expr><lit:literal type="boolean" pos:line="190" pos:column="70">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="191" pos:column="33">btnUpdateOffer</name><op:operator pos:line="191" pos:column="47">.</op:operator><name pos:line="191" pos:column="48">setEnabled</name></name><argument_list pos:line="191" pos:column="58">(<argument><expr><lit:literal type="boolean" pos:line="191" pos:column="59">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
				<try pos:line="193" pos:column="33">try <block pos:line="193" pos:column="37">{
					<decl_stmt><decl><type><name pos:line="194" pos:column="41">CourseOffered</name></type> <name pos:line="194" pos:column="55">co</name> <init pos:line="194" pos:column="58">= <expr><op:operator pos:line="194" pos:column="60">new</op:operator> <call><name pos:line="194" pos:column="64">CourseOffered</name><argument_list pos:line="194" pos:column="77">(<argument><expr><op:operator pos:line="194" pos:column="78">(</op:operator><name pos:line="194" pos:column="79">Integer</name><op:operator pos:line="194" pos:column="86">)</op:operator><call><name><name pos:line="194" pos:column="87">updateOfferIDCombo</name><op:operator pos:line="194" pos:column="105">.</op:operator><name pos:line="194" pos:column="106">getSelectedItem</name></name><argument_list pos:line="194" pos:column="121">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name><name pos:line="195" pos:column="41">DefaultComboBoxModel</name><argument_list pos:line="195" pos:column="61">&lt;<argument><name pos:line="195" pos:column="62">String</name></argument>&gt;</argument_list></name></type> <name pos:line="195" pos:column="70">profModel</name> <init pos:line="195" pos:column="80">= <expr><op:operator pos:line="195" pos:column="82">new</op:operator> <call><name><name pos:line="195" pos:column="86">DefaultComboBoxModel</name><argument_list pos:line="195" pos:column="106">&lt;<argument><name pos:line="195" pos:column="107">String</name></argument>&gt;</argument_list></name><argument_list pos:line="195" pos:column="114">()</argument_list></call></expr></init></decl>;</decl_stmt>
					
					<expr_stmt><expr><call><name><name pos:line="197" pos:column="41">DBAnnotation</name><op:operator pos:line="197" pos:column="53">.</op:operator><name pos:line="197" pos:column="54">annoate</name></name><argument_list pos:line="197" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="197" pos:column="62">"deptName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="197" pos:column="74">"department"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="197" pos:column="88">"DepartmentName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="197" pos:column="106">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="198" pos:column="41">String</name></type> <name pos:line="198" pos:column="48">deptName</name> <init pos:line="198" pos:column="57">= <expr><call><name><name pos:line="198" pos:column="59">co</name><op:operator pos:line="198" pos:column="61">.</op:operator><name pos:line="198" pos:column="62">getDepartmentName</name></name><argument_list pos:line="198" pos:column="79">()</argument_list></call></expr></init></decl>;</decl_stmt>
					
					<decl_stmt><decl><type><name><name pos:line="200" pos:column="41">ArrayList</name><argument_list pos:line="200" pos:column="50">&lt;<argument><name pos:line="200" pos:column="51">Professor</name></argument>&gt;</argument_list></name></type> <name pos:line="200" pos:column="62">deptProfessor</name> <init pos:line="200" pos:column="76">= <expr><call><name><name pos:line="200" pos:column="78">Professor</name><op:operator pos:line="200" pos:column="87">.</op:operator><name pos:line="200" pos:column="88">getAllProfInADept</name></name><argument_list pos:line="200" pos:column="105">(<argument><expr><op:operator pos:line="200" pos:column="106">new</op:operator> <call><name pos:line="200" pos:column="110">Department</name><argument_list pos:line="200" pos:column="120">(<argument><expr><name pos:line="200" pos:column="121">deptName</name></expr></argument>)</argument_list></call><op:operator pos:line="200" pos:column="130">.</op:operator><call><name pos:line="200" pos:column="131">getDepartmentID</name><argument_list pos:line="200" pos:column="146">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<for pos:line="201" pos:column="41">for(<init><decl><type><name pos:line="201" pos:column="45">Professor</name></type> <name pos:line="201" pos:column="55">p</name><range pos:line="201" pos:column="56">:<expr><name pos:line="201" pos:column="57">deptProfessor</name></expr></range></decl></init>)<block pos:line="201" pos:column="71">{
						<expr_stmt><expr><call><name><name pos:line="202" pos:column="49">profModel</name><op:operator pos:line="202" pos:column="58">.</op:operator><name pos:line="202" pos:column="59">addElement</name></name><argument_list pos:line="202" pos:column="69">(<argument><expr><call><name><name pos:line="202" pos:column="70">p</name><op:operator pos:line="202" pos:column="71">.</op:operator><name pos:line="202" pos:column="72">getUserName</name></name><argument_list pos:line="202" pos:column="83">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></for>
					<expr_stmt><expr><call><name><name pos:line="204" pos:column="41">updateOfferProfessorCombo</name><op:operator pos:line="204" pos:column="66">.</op:operator><name pos:line="204" pos:column="67">setModel</name></name><argument_list pos:line="204" pos:column="75">(<argument><expr><name pos:line="204" pos:column="76">profModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="205" pos:column="41">String</name></type> <name pos:line="205" pos:column="48">professorName</name> <init pos:line="205" pos:column="62">= <expr><call><name><name pos:line="205" pos:column="64">co</name><op:operator pos:line="205" pos:column="66">.</op:operator><name pos:line="205" pos:column="67">getProfessor</name></name><argument_list pos:line="205" pos:column="79">()</argument_list></call><op:operator pos:line="205" pos:column="81">.</op:operator><call><name pos:line="205" pos:column="82">getUserName</name><argument_list pos:line="205" pos:column="93">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="206" pos:column="41">updateOfferProfessorCombo</name><op:operator pos:line="206" pos:column="66">.</op:operator><name pos:line="206" pos:column="67">setSelectedIndex</name></name><argument_list pos:line="206" pos:column="83">(<argument><expr><call><name pos:line="206" pos:column="84">getProfessorIndex</name><argument_list pos:line="206" pos:column="101">(<argument><expr><name pos:line="206" pos:column="102">professorName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
				}</block> <catch pos:line="208" pos:column="35">catch <parameter_list pos:line="208" pos:column="41">(<param><decl><type><name><name pos:line="208" pos:column="42">Professor</name><op:operator pos:line="208" pos:column="51">.</op:operator><name pos:line="208" pos:column="52">ProfessorDoesNotExistException</name></name></type> <name pos:line="208" pos:column="83">e</name></decl></param>)</parameter_list> <block pos:line="208" pos:column="86">{
					<expr_stmt><expr><call><name><name pos:line="209" pos:column="41">System</name><op:operator pos:line="209" pos:column="47">.</op:operator><name pos:line="209" pos:column="48">out</name><op:operator pos:line="209" pos:column="51">.</op:operator><name pos:line="209" pos:column="52">println</name></name><argument_list pos:line="209" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="209" pos:column="60">"Failed to initialize list"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="210" pos:column="41">e</name><op:operator pos:line="210" pos:column="42">.</op:operator><name pos:line="210" pos:column="43">printStackTrace</name></name><argument_list pos:line="210" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch>
				<catch pos:line="212" pos:column="33">catch <parameter_list pos:line="212" pos:column="39">(<param><decl><type><name><name pos:line="212" pos:column="40">Department</name><op:operator pos:line="212" pos:column="50">.</op:operator><name pos:line="212" pos:column="51">DepartmentDoesNotExistException</name></name></type> <name pos:line="212" pos:column="83">e</name></decl></param>)</parameter_list> <block pos:line="212" pos:column="86">{
					<expr_stmt><expr><call><name><name pos:line="213" pos:column="41">System</name><op:operator pos:line="213" pos:column="47">.</op:operator><name pos:line="213" pos:column="48">out</name><op:operator pos:line="213" pos:column="51">.</op:operator><name pos:line="213" pos:column="52">println</name></name><argument_list pos:line="213" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="213" pos:column="60">"Failed to initialize list"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="214" pos:column="41">e</name><op:operator pos:line="214" pos:column="42">.</op:operator><name pos:line="214" pos:column="43">printStackTrace</name></name><argument_list pos:line="214" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch>
				<catch pos:line="216" pos:column="33">catch <parameter_list pos:line="216" pos:column="39">(<param><decl><type><name><name pos:line="216" pos:column="40">Course</name><op:operator pos:line="216" pos:column="46">.</op:operator><name pos:line="216" pos:column="47">CourseDoesNotExistException</name></name></type> <name pos:line="216" pos:column="75">e</name></decl></param>)</parameter_list> <block pos:line="216" pos:column="78">{
					<expr_stmt><expr><call><name><name pos:line="217" pos:column="41">System</name><op:operator pos:line="217" pos:column="47">.</op:operator><name pos:line="217" pos:column="48">out</name><op:operator pos:line="217" pos:column="51">.</op:operator><name pos:line="217" pos:column="52">println</name></name><argument_list pos:line="217" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="217" pos:column="60">"Failed to initialize list"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="218" pos:column="41">e</name><op:operator pos:line="218" pos:column="42">.</op:operator><name pos:line="218" pos:column="43">printStackTrace</name></name><argument_list pos:line="218" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch>
				<catch pos:line="220" pos:column="33">catch <parameter_list pos:line="220" pos:column="39">(<param><decl><type><name><name pos:line="220" pos:column="40">CourseOffered</name><op:operator pos:line="220" pos:column="53">.</op:operator><name pos:line="220" pos:column="54">CourseOfferingDoesNotExistException</name></name></type> <name pos:line="220" pos:column="90">e</name></decl></param>)</parameter_list> <block pos:line="220" pos:column="93">{
					<expr_stmt><expr><call><name><name pos:line="221" pos:column="41">System</name><op:operator pos:line="221" pos:column="47">.</op:operator><name pos:line="221" pos:column="48">out</name><op:operator pos:line="221" pos:column="51">.</op:operator><name pos:line="221" pos:column="52">println</name></name><argument_list pos:line="221" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="221" pos:column="60">"Failed to initialize list"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="222" pos:column="41">e</name><op:operator pos:line="222" pos:column="42">.</op:operator><name pos:line="222" pos:column="43">printStackTrace</name></name><argument_list pos:line="222" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
								
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="227" pos:column="17">updateCourseOffering</name><op:operator pos:line="227" pos:column="37">.</op:operator><name pos:line="227" pos:column="38">add</name></name><argument_list pos:line="227" pos:column="41">(<argument><expr><name pos:line="227" pos:column="42">updateOfferIDCombo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="229" pos:column="17">JLabel</name></type> <name pos:line="229" pos:column="24">lblProfessor</name> <init pos:line="229" pos:column="37">= <expr><op:operator pos:line="229" pos:column="39">new</op:operator> <call><name pos:line="229" pos:column="43">JLabel</name><argument_list pos:line="229" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="229" pos:column="50">"Professor"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="230" pos:column="17">updateCourseOffering</name><op:operator pos:line="230" pos:column="37">.</op:operator><name pos:line="230" pos:column="38">add</name></name><argument_list pos:line="230" pos:column="41">(<argument><expr><name pos:line="230" pos:column="42">lblProfessor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="232" pos:column="17">updateOfferProfessorCombo</name> <op:operator pos:line="232" pos:column="43">=</op:operator> <op:operator pos:line="232" pos:column="45">new</op:operator> <call><name><name pos:line="232" pos:column="49">JComboBox</name><argument_list pos:line="232" pos:column="58">&lt;<argument><name pos:line="232" pos:column="59">String</name></argument>&gt;</argument_list></name><argument_list pos:line="232" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="233" pos:column="17">updateOfferProfessorCombo</name><op:operator pos:line="233" pos:column="42">.</op:operator><name pos:line="233" pos:column="43">setEnabled</name></name><argument_list pos:line="233" pos:column="53">(<argument><expr><lit:literal type="boolean" pos:line="233" pos:column="54">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="234" pos:column="17">updateCourseOffering</name><op:operator pos:line="234" pos:column="37">.</op:operator><name pos:line="234" pos:column="38">add</name></name><argument_list pos:line="234" pos:column="41">(<argument><expr><name pos:line="234" pos:column="42">updateOfferProfessorCombo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="236" pos:column="17">JLabel</name></type> <name pos:line="236" pos:column="24">lblLabel</name> <init pos:line="236" pos:column="33">= <expr><op:operator pos:line="236" pos:column="35">new</op:operator> <call><name pos:line="236" pos:column="39">JLabel</name><argument_list pos:line="236" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="236" pos:column="46">"Confirm update"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="237" pos:column="17">updateCourseOffering</name><op:operator pos:line="237" pos:column="37">.</op:operator><name pos:line="237" pos:column="38">add</name></name><argument_list pos:line="237" pos:column="41">(<argument><expr><name pos:line="237" pos:column="42">lblLabel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="239" pos:column="17">btnUpdateOffer</name> <op:operator pos:line="239" pos:column="32">=</op:operator> <op:operator pos:line="239" pos:column="34">new</op:operator> <call><name pos:line="239" pos:column="38">JButton</name><argument_list pos:line="239" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="239" pos:column="46">"Update CourseOffering"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="240" pos:column="17">btnUpdateOffer</name><op:operator pos:line="240" pos:column="31">.</op:operator><name pos:line="240" pos:column="32">addActionListener</name></name><argument_list pos:line="240" pos:column="49">(<argument><expr><op:operator pos:line="240" pos:column="50">new</op:operator> <class><super><name pos:line="240" pos:column="54">ActionListener</name></super><argument_list pos:line="240" pos:column="68">()</argument_list> <block pos:line="240" pos:column="71">{
			<function><type><specifier pos:line="241" pos:column="25">public</specifier> <name pos:line="241" pos:column="32">void</name></type> <name pos:line="241" pos:column="37">actionPerformed</name><parameter_list pos:line="241" pos:column="52">(<param><decl><type><name pos:line="241" pos:column="53">ActionEvent</name></type> <name pos:line="241" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="241" pos:column="71">{
				<try pos:line="242" pos:column="33">try <block pos:line="242" pos:column="37">{
					<decl_stmt><decl><type><name pos:line="243" pos:column="41">CourseOffered</name></type> <name pos:line="243" pos:column="55">co</name> <init pos:line="243" pos:column="58">= <expr><op:operator pos:line="243" pos:column="60">new</op:operator> <call><name pos:line="243" pos:column="64">CourseOffered</name><argument_list pos:line="243" pos:column="77">(<argument><expr><op:operator pos:line="243" pos:column="78">(</op:operator><name pos:line="243" pos:column="79">Integer</name><op:operator pos:line="243" pos:column="86">)</op:operator><call><name><name pos:line="243" pos:column="87">updateOfferIDCombo</name><op:operator pos:line="243" pos:column="105">.</op:operator><name pos:line="243" pos:column="106">getSelectedItem</name></name><argument_list pos:line="243" pos:column="121">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="244" pos:column="41">Professor</name></type> <name pos:line="244" pos:column="51">professor</name> <init pos:line="244" pos:column="61">= <expr><op:operator pos:line="244" pos:column="63">new</op:operator> <call><name pos:line="244" pos:column="67">Professor</name><argument_list pos:line="244" pos:column="76">(<argument><expr><op:operator pos:line="244" pos:column="77">(</op:operator><name pos:line="244" pos:column="78">String</name><op:operator pos:line="244" pos:column="84">)</op:operator><call><name><name pos:line="244" pos:column="85">updateOfferProfessorCombo</name><op:operator pos:line="244" pos:column="110">.</op:operator><name pos:line="244" pos:column="111">getSelectedItem</name></name><argument_list pos:line="244" pos:column="126">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="245" pos:column="41">boolean</name></type> <name pos:line="245" pos:column="49">updated</name> <init pos:line="245" pos:column="57">= <expr><call><name><name pos:line="245" pos:column="59">co</name><op:operator pos:line="245" pos:column="61">.</op:operator><name pos:line="245" pos:column="62">updateCourseOffering</name></name><argument_list pos:line="245" pos:column="82">(<argument><expr><name pos:line="245" pos:column="83">professor</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if pos:line="246" pos:column="41">if<condition pos:line="246" pos:column="43">(<expr><name pos:line="246" pos:column="44">updated</name></expr>)</condition><then><block pos:line="246" pos:column="52">{
						<expr_stmt><expr><call><name pos:line="247" pos:column="49">showMessage</name><argument_list pos:line="247" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="247" pos:column="61">"Update is successfull"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="247" pos:column="86">"Success"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name pos:line="248" pos:column="49">initializeDepartments</name><argument_list pos:line="248" pos:column="70">()</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name pos:line="249" pos:column="49">initializeCourseList</name><argument_list pos:line="249" pos:column="69">()</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name pos:line="250" pos:column="49">initializeCourseOfferingUpdateTab</name><argument_list pos:line="250" pos:column="82">()</argument_list></call></expr>;</expr_stmt>
						<decl_stmt><decl><type><name pos:line="251" pos:column="49">AdminUI</name></type> <name pos:line="251" pos:column="57">adminUI</name> <init pos:line="251" pos:column="65">= <expr><call><name><name pos:line="251" pos:column="67">AdminUI</name><op:operator pos:line="251" pos:column="74">.</op:operator><name pos:line="251" pos:column="75">getInstance</name></name><argument_list pos:line="251" pos:column="86">()</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><call><name><name pos:line="252" pos:column="49">adminUI</name><op:operator pos:line="252" pos:column="56">.</op:operator><name pos:line="252" pos:column="57">initializeEveryThing</name></name><argument_list pos:line="252" pos:column="77">()</argument_list></call></expr>;</expr_stmt>
						
					}</block></then>
					<else pos:line="255" pos:column="41">else
						<expr_stmt><expr><call><name pos:line="256" pos:column="49">showMessage</name><argument_list pos:line="256" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="256" pos:column="61">"Update was unsuccessfull"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="256" pos:column="89">"Failure"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
					
				}</block> <catch pos:line="258" pos:column="35">catch <parameter_list pos:line="258" pos:column="41">(<param><decl><type><name><name pos:line="258" pos:column="42">Course</name><op:operator pos:line="258" pos:column="48">.</op:operator><name pos:line="258" pos:column="49">CourseDoesNotExistException</name></name></type> <name pos:line="258" pos:column="77">e</name></decl></param>)</parameter_list> <block pos:line="258" pos:column="80">{
					<comment type="line" pos:line="259" pos:column="41">// TODO Auto-generated catch block</comment>
					<expr_stmt><expr><call><name><name pos:line="260" pos:column="41">e</name><op:operator pos:line="260" pos:column="42">.</op:operator><name pos:line="260" pos:column="43">printStackTrace</name></name><argument_list pos:line="260" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch> <catch pos:line="261" pos:column="35">catch <parameter_list pos:line="261" pos:column="41">(<param><decl><type><name><name pos:line="261" pos:column="42">CourseOffered</name><op:operator pos:line="261" pos:column="55">.</op:operator><name pos:line="261" pos:column="56">CourseOfferingDoesNotExistException</name></name></type> <name pos:line="261" pos:column="92">e</name></decl></param>)</parameter_list> <block pos:line="261" pos:column="95">{
					<comment type="line" pos:line="262" pos:column="41">// TODO Auto-generated catch block</comment>
					<expr_stmt><expr><call><name><name pos:line="263" pos:column="41">e</name><op:operator pos:line="263" pos:column="42">.</op:operator><name pos:line="263" pos:column="43">printStackTrace</name></name><argument_list pos:line="263" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="267" pos:column="17">btnUpdateOffer</name><op:operator pos:line="267" pos:column="31">.</op:operator><name pos:line="267" pos:column="32">setEnabled</name></name><argument_list pos:line="267" pos:column="42">(<argument><expr><lit:literal type="boolean" pos:line="267" pos:column="43">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="268" pos:column="17">updateCourseOffering</name><op:operator pos:line="268" pos:column="37">.</op:operator><name pos:line="268" pos:column="38">add</name></name><argument_list pos:line="268" pos:column="41">(<argument><expr><name pos:line="268" pos:column="42">btnUpdateOffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<comment type="line" pos:line="270" pos:column="17">//initialization functions</comment>
		<expr_stmt><expr><call><name pos:line="271" pos:column="17">initializeDepartments</name><argument_list pos:line="271" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="272" pos:column="17">initializeCourseList</name><argument_list pos:line="272" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="273" pos:column="17">initializeCourseOfferingUpdateTab</name><argument_list pos:line="273" pos:column="50">()</argument_list></call></expr>;</expr_stmt>

	}</block></constructor>
	
	<function><type><specifier pos:line="277" pos:column="9">private</specifier> <name pos:line="277" pos:column="17">void</name></type> <name pos:line="277" pos:column="22">addCourse</name><parameter_list pos:line="277" pos:column="31">()</parameter_list><block pos:line="277" pos:column="33">{
		<decl_stmt><decl><type><name pos:line="278" pos:column="17">String</name></type> <name pos:line="278" pos:column="24">courseName</name> <init pos:line="278" pos:column="35">= <expr><call><name><name pos:line="278" pos:column="37">textField</name><op:operator pos:line="278" pos:column="46">.</op:operator><name pos:line="278" pos:column="47">getText</name></name><argument_list pos:line="278" pos:column="54">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="279" pos:column="17">String</name></type> <name pos:line="279" pos:column="24">department</name> <init pos:line="279" pos:column="35">= <expr><lit:literal type="null" pos:line="279" pos:column="37">null</lit:literal></expr></init></decl>;</decl_stmt>
		<if pos:line="280" pos:column="17">if<condition pos:line="280" pos:column="19">(<expr><op:operator pos:line="280" pos:column="20">!</op:operator><call><name pos:line="280" pos:column="21">checkStringForCourseName</name><argument_list pos:line="280" pos:column="45">(<argument><expr><name pos:line="280" pos:column="46">courseName</name></expr></argument>)</argument_list></call></expr>)</condition><then><block pos:line="280" pos:column="58">{
			<expr_stmt><expr><call><name pos:line="281" pos:column="25">showMessage</name><argument_list pos:line="281" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="281" pos:column="37">"Please enter course name with two or three uppercase character followed by a number"</lit:literal>
					<op:operator pos:line="282" pos:column="41">+</op:operator> <lit:literal type="string" pos:line="282" pos:column="43">" greater than 100 less than 1000"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="282" pos:column="79">"Error in course name"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="283" pos:column="25">return;</return>
		}</block></then></if>
		
		<decl_stmt><decl><type><name pos:line="286" pos:column="17">int</name></type> <name pos:line="286" pos:column="21">indexDept</name> <init pos:line="286" pos:column="31">= <expr><call><name><name pos:line="286" pos:column="33">allDepartmentCombo</name><op:operator pos:line="286" pos:column="51">.</op:operator><name pos:line="286" pos:column="52">getSelectedIndex</name></name><argument_list pos:line="286" pos:column="68">()</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<if pos:line="288" pos:column="17">if<condition pos:line="288" pos:column="19">(<expr><name pos:line="288" pos:column="20">indexDept</name><op:operator pos:line="288" pos:column="29">&lt;</op:operator><lit:literal type="number" pos:line="288" pos:column="30">0</lit:literal></expr>)</condition><then><block pos:line="288" pos:column="32">{
			<expr_stmt><expr><call><name pos:line="289" pos:column="25">showMessage</name><argument_list pos:line="289" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="289" pos:column="37">"Error retrieving the department"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="289" pos:column="72">"Department does not exist"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="290" pos:column="25">return;</return>
		}</block></then></if>
		
		<expr_stmt><expr><name pos:line="293" pos:column="17">department</name> <op:operator pos:line="293" pos:column="28">=</op:operator> <op:operator pos:line="293" pos:column="30">(</op:operator><name pos:line="293" pos:column="31">String</name><op:operator pos:line="293" pos:column="37">)</op:operator><call><name><name pos:line="293" pos:column="38">allDepartmentCombo</name><op:operator pos:line="293" pos:column="56">.</op:operator><name pos:line="293" pos:column="57">getSelectedItem</name></name><argument_list pos:line="293" pos:column="72">()</argument_list></call></expr>;</expr_stmt>
		<try pos:line="294" pos:column="17">try <block pos:line="294" pos:column="21">{
			<decl_stmt><decl><type><name pos:line="295" pos:column="25">Department</name></type> <name pos:line="295" pos:column="36">d</name> <init pos:line="295" pos:column="38">= <expr><op:operator pos:line="295" pos:column="40">new</op:operator> <call><name pos:line="295" pos:column="44">Department</name><argument_list pos:line="295" pos:column="54">(<argument><expr><name pos:line="295" pos:column="55">department</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="296" pos:column="25">if<condition pos:line="296" pos:column="27">(<expr><call><name><name pos:line="296" pos:column="28">Course</name><op:operator pos:line="296" pos:column="34">.</op:operator><name pos:line="296" pos:column="35">addCourse</name></name><argument_list pos:line="296" pos:column="44">(<argument><expr><name pos:line="296" pos:column="45">courseName</name></expr></argument>, <argument><expr><name pos:line="296" pos:column="57">d</name></expr></argument>)</argument_list></call></expr>)</condition><then><block pos:line="296" pos:column="60">{
				<expr_stmt><expr><call><name pos:line="297" pos:column="33">showMessage</name><argument_list pos:line="297" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="297" pos:column="45">"Course added successfully"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="297" pos:column="74">"Success"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="299" pos:column="25">else<block pos:line="299" pos:column="29">{
				<expr_stmt><expr><call><name pos:line="300" pos:column="33">showMessage</name><argument_list pos:line="300" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="300" pos:column="45">"Course not added, unknown error occurred"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="300" pos:column="89">"Failure"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>
		}</block> <catch pos:line="302" pos:column="19">catch <parameter_list pos:line="302" pos:column="25">(<param><decl><type><name><name pos:line="302" pos:column="26">Department</name><op:operator pos:line="302" pos:column="36">.</op:operator><name pos:line="302" pos:column="37">DepartmentDoesNotExistException</name></name></type> <name pos:line="302" pos:column="69">e</name></decl></param>)</parameter_list> <block pos:line="302" pos:column="72">{
			<expr_stmt><expr><call><name pos:line="303" pos:column="25">showMessage</name><argument_list pos:line="303" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="303" pos:column="37">"Error retrieving the department"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="303" pos:column="72">"Department does not exist"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="304" pos:column="25">return;</return>
		}</block></catch> <catch pos:line="305" pos:column="19">catch <parameter_list pos:line="305" pos:column="25">(<param><decl><type><name><name pos:line="305" pos:column="26">Course</name><op:operator pos:line="305" pos:column="32">.</op:operator><name pos:line="305" pos:column="33">CourseAlreadyExistsException</name></name></type> <name pos:line="305" pos:column="62">e</name></decl></param>)</parameter_list> <block pos:line="305" pos:column="65">{
			<expr_stmt><expr><call><name pos:line="306" pos:column="25">showMessage</name><argument_list pos:line="306" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="306" pos:column="37">"Course offering with the same name and department already exists"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="306" pos:column="105">"Duplicate course"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="307" pos:column="25">return;</return>
		}</block></catch></try>
	}</block></function>

	<function><type><specifier pos:line="311" pos:column="9">private</specifier> <name pos:line="311" pos:column="17">void</name></type> <name pos:line="311" pos:column="22">updateCourse</name><parameter_list pos:line="311" pos:column="34">()</parameter_list><block pos:line="311" pos:column="36">{
		<decl_stmt><decl><type><name pos:line="312" pos:column="17">String</name></type> <name pos:line="312" pos:column="24">courseNameNew</name> <init pos:line="312" pos:column="38">= <expr><call><name><name pos:line="312" pos:column="40">textField_1</name><op:operator pos:line="312" pos:column="51">.</op:operator><name pos:line="312" pos:column="52">getText</name></name><argument_list pos:line="312" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="313" pos:column="17">showMessage</name><argument_list pos:line="313" pos:column="28">(<argument><expr><name pos:line="313" pos:column="29">courseNameNew</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="313" pos:column="44">"New"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="314" pos:column="17">String</name></type> <name pos:line="314" pos:column="24">courseNameOld</name> <init pos:line="314" pos:column="38">= <expr><op:operator pos:line="314" pos:column="40">(</op:operator><name pos:line="314" pos:column="41">String</name><op:operator pos:line="314" pos:column="47">)</op:operator><call><name><name pos:line="314" pos:column="48">allCoursesCombo</name><op:operator pos:line="314" pos:column="63">.</op:operator><name pos:line="314" pos:column="64">getSelectedItem</name></name><argument_list pos:line="314" pos:column="79">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<try pos:line="315" pos:column="17">try <block pos:line="315" pos:column="21">{
			<decl_stmt><decl><type><name pos:line="316" pos:column="25">Course</name></type> <name pos:line="316" pos:column="32">courseOld</name> <init pos:line="316" pos:column="42">= <expr><op:operator pos:line="316" pos:column="44">new</op:operator> <call><name pos:line="316" pos:column="48">Course</name><argument_list pos:line="316" pos:column="54">(<argument><expr><name pos:line="316" pos:column="55">courseNameOld</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="317" pos:column="25">String</name></type> <name pos:line="317" pos:column="32">department</name> <init pos:line="317" pos:column="43">= <expr><lit:literal type="null" pos:line="317" pos:column="45">null</lit:literal></expr></init></decl>;</decl_stmt>
			<if pos:line="318" pos:column="25">if<condition pos:line="318" pos:column="27">(<expr><op:operator pos:line="318" pos:column="28">!</op:operator><call><name pos:line="318" pos:column="29">checkStringForCourseName</name><argument_list pos:line="318" pos:column="53">(<argument><expr><name pos:line="318" pos:column="54">courseNameNew</name></expr></argument>)</argument_list></call></expr>)</condition><then><block pos:line="318" pos:column="69">{
				<expr_stmt><expr><call><name pos:line="319" pos:column="33">showMessage</name><argument_list pos:line="319" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="319" pos:column="45">"Please enter course name with two or three uppercase character followed by a number"</lit:literal>
						<op:operator pos:line="320" pos:column="49">+</op:operator> <lit:literal type="string" pos:line="320" pos:column="51">" greater than 100 less than 1000"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="320" pos:column="87">"Error in course name"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<return pos:line="321" pos:column="33">return;</return>
			}</block></then></if>
			
			<decl_stmt><decl><type><name pos:line="324" pos:column="25">int</name></type> <name pos:line="324" pos:column="29">indexDept</name> <init pos:line="324" pos:column="39">= <expr><call><name><name pos:line="324" pos:column="41">updateCourseDeptCombo</name><op:operator pos:line="324" pos:column="62">.</op:operator><name pos:line="324" pos:column="63">getSelectedIndex</name></name><argument_list pos:line="324" pos:column="79">()</argument_list></call></expr></init></decl>;</decl_stmt>
			
			<if pos:line="326" pos:column="25">if<condition pos:line="326" pos:column="27">(<expr><name pos:line="326" pos:column="28">indexDept</name><op:operator pos:line="326" pos:column="37">&lt;</op:operator><lit:literal type="number" pos:line="326" pos:column="38">0</lit:literal></expr>)</condition><then><block pos:line="326" pos:column="40">{
				<expr_stmt><expr><call><name pos:line="327" pos:column="33">showMessage</name><argument_list pos:line="327" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="327" pos:column="45">"Error retrieving the department"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="327" pos:column="80">"Department does not exist"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<return pos:line="328" pos:column="33">return;</return>
			}</block></then></if>
			
			<expr_stmt><expr><name pos:line="331" pos:column="25">department</name> <op:operator pos:line="331" pos:column="36">=</op:operator> <op:operator pos:line="331" pos:column="38">(</op:operator><name pos:line="331" pos:column="39">String</name><op:operator pos:line="331" pos:column="45">)</op:operator><call><name><name pos:line="331" pos:column="46">updateCourseDeptCombo</name><op:operator pos:line="331" pos:column="67">.</op:operator><name pos:line="331" pos:column="68">getSelectedItem</name></name><argument_list pos:line="331" pos:column="83">()</argument_list></call></expr>;</expr_stmt>
			
			<try pos:line="333" pos:column="25">try <block pos:line="333" pos:column="29">{
				<decl_stmt><decl><type><name pos:line="334" pos:column="33">Department</name></type> <name pos:line="334" pos:column="44">d</name> <init pos:line="334" pos:column="46">= <expr><op:operator pos:line="334" pos:column="48">new</op:operator> <call><name pos:line="334" pos:column="52">Department</name><argument_list pos:line="334" pos:column="62">(<argument><expr><name pos:line="334" pos:column="63">department</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="335" pos:column="33">if<condition pos:line="335" pos:column="35">(<expr><call><name><name pos:line="335" pos:column="36">courseOld</name><op:operator pos:line="335" pos:column="45">.</op:operator><name pos:line="335" pos:column="46">updateCourse</name></name><argument_list pos:line="335" pos:column="58">(<argument><expr><call><name><name pos:line="335" pos:column="59">courseNameNew</name><op:operator pos:line="335" pos:column="72">.</op:operator><name pos:line="335" pos:column="73">toString</name></name><argument_list pos:line="335" pos:column="81">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="335" pos:column="85">d</name></expr></argument>)</argument_list></call></expr>)</condition><then><block pos:line="335" pos:column="88">{
					<expr_stmt><expr><call><name pos:line="336" pos:column="41">showMessage</name><argument_list pos:line="336" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="336" pos:column="53">"Course updated successfully"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="336" pos:column="84">"Success"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then>
				<else pos:line="338" pos:column="33">else<block pos:line="338" pos:column="37">{
					<expr_stmt><expr><call><name pos:line="339" pos:column="41">showMessage</name><argument_list pos:line="339" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="339" pos:column="53">"Course not updated, unknown error occurred"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="339" pos:column="99">"Failure"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></else></if>
			}</block> <catch pos:line="341" pos:column="27">catch <parameter_list pos:line="341" pos:column="33">(<param><decl><type><name><name pos:line="341" pos:column="34">Department</name><op:operator pos:line="341" pos:column="44">.</op:operator><name pos:line="341" pos:column="45">DepartmentDoesNotExistException</name></name></type> <name pos:line="341" pos:column="77">e</name></decl></param>)</parameter_list> <block pos:line="341" pos:column="80">{
				<expr_stmt><expr><call><name pos:line="342" pos:column="33">showMessage</name><argument_list pos:line="342" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="342" pos:column="45">"Error retrieving the department"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="342" pos:column="80">"Department does not exist"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<return pos:line="343" pos:column="33">return;</return>
			}</block></catch></try>
			
		}</block> <catch pos:line="346" pos:column="19">catch <parameter_list pos:line="346" pos:column="25">(<param><decl><type><name><name pos:line="346" pos:column="26">Course</name><op:operator pos:line="346" pos:column="32">.</op:operator><name pos:line="346" pos:column="33">CourseDoesNotExistException</name></name></type> <name pos:line="346" pos:column="61">e1</name></decl></param>)</parameter_list> <block pos:line="346" pos:column="65">{
			<expr_stmt><expr><call><name pos:line="347" pos:column="25">showMessage</name><argument_list pos:line="347" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="347" pos:column="37">"Course deos not exist"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="347" pos:column="62">"Failure"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="348" pos:column="25">e1</name><op:operator pos:line="348" pos:column="27">.</op:operator><name pos:line="348" pos:column="28">printStackTrace</name></name><argument_list pos:line="348" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
		}</block></catch></try>
	}</block></function>
	
	<function><type><specifier pos:line="352" pos:column="9">private</specifier> <name pos:line="352" pos:column="17">void</name></type> <name pos:line="352" pos:column="22">initializeDepartments</name><parameter_list pos:line="352" pos:column="43">()</parameter_list><block pos:line="352" pos:column="45">{
		<decl_stmt><decl><type><name><name pos:line="353" pos:column="17">DefaultComboBoxModel</name><argument_list pos:line="353" pos:column="37">&lt;<argument><name pos:line="353" pos:column="38">String</name></argument>&gt;</argument_list></name></type> <name pos:line="353" pos:column="46">model</name> <init pos:line="353" pos:column="52">= <expr><op:operator pos:line="353" pos:column="54">new</op:operator> <call><name><name pos:line="353" pos:column="58">DefaultComboBoxModel</name><argument_list pos:line="353" pos:column="78">&lt;<argument><name pos:line="353" pos:column="79">String</name></argument>&gt;</argument_list></name><argument_list pos:line="353" pos:column="86">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="354" pos:column="17">ArrayList</name><argument_list pos:line="354" pos:column="26">&lt;<argument><name pos:line="354" pos:column="27">Department</name></argument>&gt;</argument_list></name></type> <name pos:line="354" pos:column="39">departments</name> <init pos:line="354" pos:column="51">= <expr><call><name><name pos:line="354" pos:column="53">Department</name><op:operator pos:line="354" pos:column="63">.</op:operator><name pos:line="354" pos:column="64">getAllDepartments</name></name><argument_list pos:line="354" pos:column="81">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:line="355" pos:column="17">for(<init><decl><type><name pos:line="355" pos:column="21">Department</name></type> <name pos:line="355" pos:column="32">d</name><range pos:line="355" pos:column="33">:<expr><name pos:line="355" pos:column="34">departments</name></expr></range></decl></init>)<block pos:line="355" pos:column="46">{
			<expr_stmt><expr><call><name><name pos:line="356" pos:column="25">model</name><op:operator pos:line="356" pos:column="30">.</op:operator><name pos:line="356" pos:column="31">addElement</name></name><argument_list pos:line="356" pos:column="41">(<argument><expr><call><name><name pos:line="356" pos:column="42">d</name><op:operator pos:line="356" pos:column="43">.</op:operator><name pos:line="356" pos:column="44">getDepartmentName</name></name><argument_list pos:line="356" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		<expr_stmt><expr><call><name><name pos:line="358" pos:column="17">allDepartmentCombo</name><op:operator pos:line="358" pos:column="35">.</op:operator><name pos:line="358" pos:column="36">setModel</name></name><argument_list pos:line="358" pos:column="44">(<argument><expr><name pos:line="358" pos:column="45">model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="359" pos:column="17">updateCourseDeptCombo</name><op:operator pos:line="359" pos:column="38">.</op:operator><name pos:line="359" pos:column="39">setModel</name></name><argument_list pos:line="359" pos:column="47">(<argument><expr><name pos:line="359" pos:column="48">model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>
	
	<function><type><specifier pos:line="362" pos:column="9">private</specifier> <name pos:line="362" pos:column="17">void</name></type> <name pos:line="362" pos:column="22">initializeCourseList</name><parameter_list pos:line="362" pos:column="42">()</parameter_list><block pos:line="362" pos:column="44">{
		<decl_stmt><decl><type><name><name pos:line="363" pos:column="17">DefaultComboBoxModel</name><argument_list pos:line="363" pos:column="37">&lt;<argument><name pos:line="363" pos:column="38">String</name></argument>&gt;</argument_list></name></type> <name pos:line="363" pos:column="46">model</name> <init pos:line="363" pos:column="52">= <expr><op:operator pos:line="363" pos:column="54">new</op:operator> <call><name><name pos:line="363" pos:column="58">DefaultComboBoxModel</name><argument_list pos:line="363" pos:column="78">&lt;<argument><name pos:line="363" pos:column="79">String</name></argument>&gt;</argument_list></name><argument_list pos:line="363" pos:column="86">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="364" pos:column="17">LinkedHashMap</name><argument_list pos:line="364" pos:column="30">&lt;<argument><name pos:line="364" pos:column="31">Integer</name></argument>, <argument><name pos:line="364" pos:column="40">Course</name></argument>&gt;</argument_list></name></type> <name pos:line="364" pos:column="48">courses</name> <init pos:line="364" pos:column="56">= <expr><call><name><name pos:line="364" pos:column="58">Course</name><op:operator pos:line="364" pos:column="64">.</op:operator><name pos:line="364" pos:column="65">getAllCourses</name></name><argument_list pos:line="364" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:line="365" pos:column="17">for(<init><decl><type><name pos:line="365" pos:column="21">Integer</name></type> <name pos:line="365" pos:column="29">i</name> <range pos:line="365" pos:column="31">: <expr><call><name><name pos:line="365" pos:column="33">courses</name><op:operator pos:line="365" pos:column="40">.</op:operator><name pos:line="365" pos:column="41">keySet</name></name><argument_list pos:line="365" pos:column="47">()</argument_list></call></expr></range></decl></init>)<block pos:line="365" pos:column="50">{
			<expr_stmt><expr><call><name><name pos:line="366" pos:column="25">model</name><op:operator pos:line="366" pos:column="30">.</op:operator><name pos:line="366" pos:column="31">addElement</name></name><argument_list pos:line="366" pos:column="41">(<argument><expr><call><name><name pos:line="366" pos:column="42">courses</name><op:operator pos:line="366" pos:column="49">.</op:operator><name pos:line="366" pos:column="50">get</name></name><argument_list pos:line="366" pos:column="53">(<argument><expr><name pos:line="366" pos:column="54">i</name></expr></argument>)</argument_list></call><op:operator pos:line="366" pos:column="56">.</op:operator><call><name pos:line="366" pos:column="57">getCourseName</name><argument_list pos:line="366" pos:column="70">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		<expr_stmt><expr><call><name><name pos:line="368" pos:column="17">allCoursesCombo</name><op:operator pos:line="368" pos:column="32">.</op:operator><name pos:line="368" pos:column="33">setModel</name></name><argument_list pos:line="368" pos:column="41">(<argument><expr><name pos:line="368" pos:column="42">model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="369" pos:column="17">if<condition pos:line="369" pos:column="19">(<expr><call><name><name pos:line="369" pos:column="20">model</name><op:operator pos:line="369" pos:column="25">.</op:operator><name pos:line="369" pos:column="26">getSize</name></name><argument_list pos:line="369" pos:column="33">()</argument_list></call><op:operator pos:line="369" pos:column="35">&gt;</op:operator><lit:literal type="number" pos:line="369" pos:column="36">0</lit:literal></expr>)</condition><then pos:line="369" pos:column="38">
			<expr_stmt><expr><call><name><name pos:line="370" pos:column="25">allCoursesCombo</name><op:operator pos:line="370" pos:column="40">.</op:operator><name pos:line="370" pos:column="41">setSelectedIndex</name></name><argument_list pos:line="370" pos:column="57">(<argument><expr><lit:literal type="number" pos:line="370" pos:column="58">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	}</block></function>
	
	<function><type><specifier pos:line="373" pos:column="9">private</specifier> <name pos:line="373" pos:column="17">void</name></type> <name pos:line="373" pos:column="22">initializeCourseOfferingUpdateTab</name><parameter_list pos:line="373" pos:column="55">()</parameter_list><block pos:line="373" pos:column="57">{
		<decl_stmt><decl><type><name><name pos:line="374" pos:column="17">DefaultComboBoxModel</name><argument_list pos:line="374" pos:column="37">&lt;<argument><name pos:line="374" pos:column="38">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="374" pos:column="47">model</name> <init pos:line="374" pos:column="53">= <expr><op:operator pos:line="374" pos:column="55">new</op:operator> <call><name><name pos:line="374" pos:column="59">DefaultComboBoxModel</name><argument_list pos:line="374" pos:column="79">&lt;<argument><name pos:line="374" pos:column="80">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="374" pos:column="88">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="375" pos:column="17">HashMap</name><argument_list pos:line="375" pos:column="24">&lt;<argument><name pos:line="375" pos:column="25">Integer</name></argument>, <argument><name pos:line="375" pos:column="34">CourseOffered</name></argument>&gt;</argument_list></name></type> <name pos:line="375" pos:column="49">courseOffered</name> <init pos:line="375" pos:column="63">= <expr><call><name><name pos:line="375" pos:column="65">CourseOffered</name><op:operator pos:line="375" pos:column="78">.</op:operator><name pos:line="375" pos:column="79">getAllOfferedIDAndCourseOffered</name></name><argument_list pos:line="375" pos:column="110">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:line="376" pos:column="17">for(<init><decl><type><name pos:line="376" pos:column="21">Integer</name></type> <name pos:line="376" pos:column="29">i</name><range pos:line="376" pos:column="30">:<expr><call><name><name pos:line="376" pos:column="31">courseOffered</name><op:operator pos:line="376" pos:column="44">.</op:operator><name pos:line="376" pos:column="45">keySet</name></name><argument_list pos:line="376" pos:column="51">()</argument_list></call></expr></range></decl></init>)<block pos:line="376" pos:column="54">{
			<expr_stmt><expr><call><name><name pos:line="377" pos:column="25">model</name><op:operator pos:line="377" pos:column="30">.</op:operator><name pos:line="377" pos:column="31">addElement</name></name><argument_list pos:line="377" pos:column="41">(<argument><expr><name pos:line="377" pos:column="42">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		<expr_stmt><expr><call><name><name pos:line="379" pos:column="17">updateOfferIDCombo</name><op:operator pos:line="379" pos:column="35">.</op:operator><name pos:line="379" pos:column="36">setModel</name></name><argument_list pos:line="379" pos:column="44">(<argument><expr><name pos:line="379" pos:column="45">model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<if pos:line="381" pos:column="17">if<condition pos:line="381" pos:column="19">(<expr><call><name><name pos:line="381" pos:column="20">model</name><op:operator pos:line="381" pos:column="25">.</op:operator><name pos:line="381" pos:column="26">getSize</name></name><argument_list pos:line="381" pos:column="33">()</argument_list></call><op:operator pos:line="381" pos:column="35">&gt;</op:operator><lit:literal type="number" pos:line="381" pos:column="36">0</lit:literal></expr>)</condition><then><block pos:line="381" pos:column="38">{
			<decl_stmt><decl><type><name pos:line="382" pos:column="25">CourseOffered</name></type> <name pos:line="382" pos:column="39">co</name> <init pos:line="382" pos:column="42">= <expr><call><name><name pos:line="382" pos:column="44">courseOffered</name><op:operator pos:line="382" pos:column="57">.</op:operator><name pos:line="382" pos:column="58">get</name></name><argument_list pos:line="382" pos:column="61">(<argument><expr><call><name><name pos:line="382" pos:column="62">model</name><op:operator pos:line="382" pos:column="67">.</op:operator><name pos:line="382" pos:column="68">getElementAt</name></name><argument_list pos:line="382" pos:column="80">(<argument><expr><lit:literal type="number" pos:line="382" pos:column="81">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="383" pos:column="25">DefaultComboBoxModel</name><argument_list pos:line="383" pos:column="45">&lt;<argument><name pos:line="383" pos:column="46">String</name></argument>&gt;</argument_list></name></type> <name pos:line="383" pos:column="54">profModel</name> <init pos:line="383" pos:column="64">= <expr><op:operator pos:line="383" pos:column="66">new</op:operator> <call><name><name pos:line="383" pos:column="70">DefaultComboBoxModel</name><argument_list pos:line="383" pos:column="90">&lt;<argument><name pos:line="383" pos:column="91">String</name></argument>&gt;</argument_list></name><argument_list pos:line="383" pos:column="98">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<try pos:line="384" pos:column="25">try <block pos:line="384" pos:column="29">{
				
				<expr_stmt><expr><call><name><name pos:line="386" pos:column="33">DBAnnotation</name><op:operator pos:line="386" pos:column="45">.</op:operator><name pos:line="386" pos:column="46">annoate</name></name><argument_list pos:line="386" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="386" pos:column="54">"deptName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="386" pos:column="66">"department"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="386" pos:column="80">"DepartmentName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="386" pos:column="98">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="387" pos:column="33">String</name></type> <name pos:line="387" pos:column="40">deptName</name> <init pos:line="387" pos:column="49">= <expr><call><name><name pos:line="387" pos:column="51">co</name><op:operator pos:line="387" pos:column="53">.</op:operator><name pos:line="387" pos:column="54">getDepartmentName</name></name><argument_list pos:line="387" pos:column="71">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name><name pos:line="388" pos:column="33">ArrayList</name><argument_list pos:line="388" pos:column="42">&lt;<argument><name pos:line="388" pos:column="43">Professor</name></argument>&gt;</argument_list></name></type> <name pos:line="388" pos:column="54">deptProfessor</name> <init pos:line="388" pos:column="68">= <expr><call><name><name pos:line="388" pos:column="70">Professor</name><op:operator pos:line="388" pos:column="79">.</op:operator><name pos:line="388" pos:column="80">getAllProfInADept</name></name><argument_list pos:line="388" pos:column="97">(<argument><expr><op:operator pos:line="388" pos:column="98">new</op:operator> <call><name pos:line="388" pos:column="102">Department</name><argument_list pos:line="388" pos:column="112">(<argument><expr><name pos:line="388" pos:column="113">deptName</name></expr></argument>)</argument_list></call><op:operator pos:line="388" pos:column="122">.</op:operator><call><name pos:line="388" pos:column="123">getDepartmentID</name><argument_list pos:line="388" pos:column="138">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<for pos:line="389" pos:column="33">for(<init><decl><type><name pos:line="389" pos:column="37">Professor</name></type> <name pos:line="389" pos:column="47">p</name><range pos:line="389" pos:column="48">:<expr><name pos:line="389" pos:column="49">deptProfessor</name></expr></range></decl></init>)<block pos:line="389" pos:column="63">{
					<expr_stmt><expr><call><name><name pos:line="390" pos:column="41">profModel</name><op:operator pos:line="390" pos:column="50">.</op:operator><name pos:line="390" pos:column="51">addElement</name></name><argument_list pos:line="390" pos:column="61">(<argument><expr><call><name><name pos:line="390" pos:column="62">p</name><op:operator pos:line="390" pos:column="63">.</op:operator><name pos:line="390" pos:column="64">getUserName</name></name><argument_list pos:line="390" pos:column="75">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></for>
				<expr_stmt><expr><call><name><name pos:line="392" pos:column="33">updateOfferProfessorCombo</name><op:operator pos:line="392" pos:column="58">.</op:operator><name pos:line="392" pos:column="59">setModel</name></name><argument_list pos:line="392" pos:column="67">(<argument><expr><name pos:line="392" pos:column="68">profModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
			}</block> <catch pos:line="394" pos:column="27">catch <parameter_list pos:line="394" pos:column="33">(<param><decl><type><name><name pos:line="394" pos:column="34">Professor</name><op:operator pos:line="394" pos:column="43">.</op:operator><name pos:line="394" pos:column="44">ProfessorDoesNotExistException</name></name></type> <name pos:line="394" pos:column="75">e</name></decl></param>)</parameter_list> <block pos:line="394" pos:column="78">{
				<expr_stmt><expr><call><name><name pos:line="395" pos:column="33">System</name><op:operator pos:line="395" pos:column="39">.</op:operator><name pos:line="395" pos:column="40">out</name><op:operator pos:line="395" pos:column="43">.</op:operator><name pos:line="395" pos:column="44">println</name></name><argument_list pos:line="395" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="395" pos:column="52">"Failed to initialize professor list"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="396" pos:column="33">e</name><op:operator pos:line="396" pos:column="34">.</op:operator><name pos:line="396" pos:column="35">printStackTrace</name></name><argument_list pos:line="396" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			}</block></catch> <catch pos:line="397" pos:column="27">catch <parameter_list pos:line="397" pos:column="33">(<param><decl><type><name><name pos:line="397" pos:column="34">Department</name><op:operator pos:line="397" pos:column="44">.</op:operator><name pos:line="397" pos:column="45">DepartmentDoesNotExistException</name></name></type> <name pos:line="397" pos:column="77">e</name></decl></param>)</parameter_list> <block pos:line="397" pos:column="80">{
				<expr_stmt><expr><call><name><name pos:line="398" pos:column="33">System</name><op:operator pos:line="398" pos:column="39">.</op:operator><name pos:line="398" pos:column="40">out</name><op:operator pos:line="398" pos:column="43">.</op:operator><name pos:line="398" pos:column="44">println</name></name><argument_list pos:line="398" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="398" pos:column="52">"Failed to initialize professor list"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="399" pos:column="33">e</name><op:operator pos:line="399" pos:column="34">.</op:operator><name pos:line="399" pos:column="35">printStackTrace</name></name><argument_list pos:line="399" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			}</block></catch></try>
			
			<decl_stmt><decl><type><name pos:line="402" pos:column="25">String</name></type> <name pos:line="402" pos:column="32">professorName</name> <init pos:line="402" pos:column="46">= <expr><call><name><name pos:line="402" pos:column="48">co</name><op:operator pos:line="402" pos:column="50">.</op:operator><name pos:line="402" pos:column="51">getProfessor</name></name><argument_list pos:line="402" pos:column="63">()</argument_list></call><op:operator pos:line="402" pos:column="65">.</op:operator><call><name pos:line="402" pos:column="66">getUserName</name><argument_list pos:line="402" pos:column="77">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="403" pos:column="25">updateOfferProfessorCombo</name><op:operator pos:line="403" pos:column="50">.</op:operator><name pos:line="403" pos:column="51">setSelectedIndex</name></name><argument_list pos:line="403" pos:column="67">(<argument><expr><call><name pos:line="403" pos:column="68">getProfessorIndex</name><argument_list pos:line="403" pos:column="85">(<argument><expr><name pos:line="403" pos:column="86">professorName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		
	}</block></function>
	
	<function><type><specifier pos:line="408" pos:column="9">public</specifier> <name pos:line="408" pos:column="16">void</name></type> <name pos:line="408" pos:column="21">initializeAll</name><parameter_list pos:line="408" pos:column="34">()</parameter_list><block pos:line="408" pos:column="36">{
		<expr_stmt><expr><call><name pos:line="409" pos:column="17">initializeCourseList</name><argument_list pos:line="409" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="410" pos:column="17">initializeDepartments</name><argument_list pos:line="410" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="411" pos:column="17">initializeCourseOfferingUpdateTab</name><argument_list pos:line="411" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
	}</block></function>
	
	<function><type><specifier pos:line="414" pos:column="9">private</specifier> <name pos:line="414" pos:column="17">int</name></type> <name pos:line="414" pos:column="21">getProfessorIndex</name><parameter_list pos:line="414" pos:column="38">(<param><decl><type><name pos:line="414" pos:column="39">String</name></type> <name pos:line="414" pos:column="46">professorName</name></decl></param>)</parameter_list><block pos:line="414" pos:column="60">{
		<for pos:line="415" pos:column="17">for(<init><decl><type><name pos:line="415" pos:column="21">int</name></type> <name pos:line="415" pos:column="25">i</name><init pos:line="415" pos:column="26">=<expr><lit:literal type="number" pos:line="415" pos:column="27">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="415" pos:column="30">i</name><op:operator pos:line="415" pos:column="31">&lt;</op:operator><call><name><name pos:line="415" pos:column="32">updateOfferProfessorCombo</name><op:operator pos:line="415" pos:column="57">.</op:operator><name pos:line="415" pos:column="58">getItemCount</name></name><argument_list pos:line="415" pos:column="70">()</argument_list></call></expr> ;</condition><incr><expr><name pos:line="415" pos:column="74">i</name><op:operator pos:line="415" pos:column="75">++</op:operator></expr></incr>)<block pos:line="415" pos:column="78">{
			<if pos:line="416" pos:column="25">if<condition pos:line="416" pos:column="27">(<expr><call><name><name pos:line="416" pos:column="28">professorName</name><op:operator pos:line="416" pos:column="41">.</op:operator><name pos:line="416" pos:column="42">equals</name></name><argument_list pos:line="416" pos:column="48">(<argument><expr><op:operator pos:line="416" pos:column="49">(</op:operator><name pos:line="416" pos:column="50">String</name><op:operator pos:line="416" pos:column="56">)</op:operator><call><name><name pos:line="416" pos:column="57">updateOfferProfessorCombo</name><op:operator pos:line="416" pos:column="82">.</op:operator><name pos:line="416" pos:column="83">getItemAt</name></name><argument_list pos:line="416" pos:column="92">(<argument><expr><name pos:line="416" pos:column="93">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then><block pos:line="416" pos:column="97">{
				<return pos:line="417" pos:column="33">return <expr><name pos:line="417" pos:column="40">i</name></expr>;</return>
			}</block></then></if>
		}</block></for>
		
		<return pos:line="421" pos:column="17">return <expr><lit:literal type="number" pos:line="421" pos:column="24">0</lit:literal></expr>;</return>
	}</block></function>
	
	<function><type><specifier pos:line="424" pos:column="9">private</specifier> <name pos:line="424" pos:column="17">int</name></type> <name pos:line="424" pos:column="21">getDepartmentIndex</name><parameter_list pos:line="424" pos:column="39">(<param><decl><type><name pos:line="424" pos:column="40">String</name></type> <name pos:line="424" pos:column="47">departmentName</name></decl></param>)</parameter_list><block pos:line="424" pos:column="62">{
		<for pos:line="425" pos:column="17">for(<init><decl><type><name pos:line="425" pos:column="21">int</name></type> <name pos:line="425" pos:column="25">i</name><init pos:line="425" pos:column="26">=<expr><lit:literal type="number" pos:line="425" pos:column="27">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="425" pos:column="30">i</name><op:operator pos:line="425" pos:column="31">&lt;</op:operator><call><name><name pos:line="425" pos:column="32">updateCourseDeptCombo</name><op:operator pos:line="425" pos:column="53">.</op:operator><name pos:line="425" pos:column="54">getItemCount</name></name><argument_list pos:line="425" pos:column="66">()</argument_list></call></expr> ;</condition><incr><expr><name pos:line="425" pos:column="70">i</name><op:operator pos:line="425" pos:column="71">++</op:operator></expr></incr>)<block pos:line="425" pos:column="74">{
			<if pos:line="426" pos:column="25">if<condition pos:line="426" pos:column="27">(<expr><call><name><name pos:line="426" pos:column="28">departmentName</name><op:operator pos:line="426" pos:column="42">.</op:operator><name pos:line="426" pos:column="43">equals</name></name><argument_list pos:line="426" pos:column="49">(<argument><expr><op:operator pos:line="426" pos:column="50">(</op:operator><name pos:line="426" pos:column="51">String</name><op:operator pos:line="426" pos:column="57">)</op:operator><call><name><name pos:line="426" pos:column="58">updateCourseDeptCombo</name><op:operator pos:line="426" pos:column="79">.</op:operator><name pos:line="426" pos:column="80">getItemAt</name></name><argument_list pos:line="426" pos:column="89">(<argument><expr><name pos:line="426" pos:column="90">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then><block pos:line="426" pos:column="94">{
				<return pos:line="427" pos:column="33">return <expr><name pos:line="427" pos:column="40">i</name></expr>;</return>
			}</block></then></if>
		}</block></for>
		
		<return pos:line="431" pos:column="17">return <expr><op:operator pos:line="431" pos:column="24">-</op:operator><lit:literal type="number" pos:line="431" pos:column="25">1</lit:literal></expr>;</return>
	}</block></function>
	
	<function><type><specifier pos:line="434" pos:column="9">public</specifier> <name pos:line="434" pos:column="16">void</name></type> <name pos:line="434" pos:column="21">showMessage</name><parameter_list pos:line="434" pos:column="32">(<param><decl><type><name pos:line="434" pos:column="33">String</name></type> <name pos:line="434" pos:column="40">message</name></decl></param>, <param><decl><type><name pos:line="434" pos:column="49">String</name></type> <name pos:line="434" pos:column="56">title</name></decl></param>)</parameter_list>
    <block pos:line="435" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="436" pos:column="9">JOptionPane</name><op:operator pos:line="436" pos:column="20">.</op:operator><name pos:line="436" pos:column="21">showMessageDialog</name></name><argument_list pos:line="436" pos:column="38">(<argument><expr><lit:literal type="null" pos:line="436" pos:column="39">null</lit:literal></expr></argument>, <argument><expr><name pos:line="436" pos:column="45">message</name></expr></argument>, <argument><expr><name pos:line="436" pos:column="54">title</name></expr></argument>, <argument><expr><name><name pos:line="436" pos:column="61">JOptionPane</name><op:operator pos:line="436" pos:column="72">.</op:operator><name pos:line="436" pos:column="73">INFORMATION_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
	
	<function><type><specifier pos:line="439" pos:column="9">private</specifier>  <name pos:line="439" pos:column="18">boolean</name></type> <name pos:line="439" pos:column="26">checkStringForCourseName</name><parameter_list pos:line="439" pos:column="50">(<param><decl><type><name pos:line="439" pos:column="51">String</name></type> <name pos:line="439" pos:column="58">s</name></decl></param>)</parameter_list><block pos:line="439" pos:column="60">{
		<return pos:line="440" pos:column="17">return <expr><call><name><name pos:line="440" pos:column="24">s</name><op:operator pos:line="440" pos:column="25">.</op:operator><name pos:line="440" pos:column="26">matches</name></name><argument_list pos:line="440" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="440" pos:column="34">"[A-Z]{2,3}[1-9][0-9]{2}"</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
	}</block></function>
		
}</block></class>
</unit>
