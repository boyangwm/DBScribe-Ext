<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\UMAS\src\com\umas\code\File.java" pos:tabs="8"><package pos:line="1" pos:column="1">package <name><name pos:line="1" pos:column="9">com</name><op:operator pos:line="1" pos:column="12">.</op:operator><name pos:line="1" pos:column="13">umas</name><op:operator pos:line="1" pos:column="17">.</op:operator><name pos:line="1" pos:column="18">code</name></name>;</package>
<comment type="line" pos:line="2" pos:column="1">//import java.lang.annotation.ElementType;</comment>
<comment type="line" pos:line="3" pos:column="1">//import java.lang.annotation.Retention;</comment>
<comment type="line" pos:line="4" pos:column="1">//import java.lang.annotation.RetentionPolicy;</comment>
<comment type="line" pos:line="5" pos:column="1">//import java.lang.annotation.Target;</comment>
<import pos:line="6" pos:column="1">import <name><name pos:line="6" pos:column="8">java</name><op:operator pos:line="6" pos:column="12">.</op:operator><name pos:line="6" pos:column="13">sql</name><op:operator pos:line="6" pos:column="16">.</op:operator><name pos:line="6" pos:column="17">Connection</name></name>;</import>
<import pos:line="7" pos:column="1">import <name><name pos:line="7" pos:column="8">java</name><op:operator pos:line="7" pos:column="12">.</op:operator><name pos:line="7" pos:column="13">sql</name><op:operator pos:line="7" pos:column="16">.</op:operator><name pos:line="7" pos:column="17">PreparedStatement</name></name>;</import>
<import pos:line="8" pos:column="1">import <name><name pos:line="8" pos:column="8">java</name><op:operator pos:line="8" pos:column="12">.</op:operator><name pos:line="8" pos:column="13">sql</name><op:operator pos:line="8" pos:column="16">.</op:operator><name pos:line="8" pos:column="17">ResultSet</name></name>;</import>
<import pos:line="9" pos:column="1">import <name><name pos:line="9" pos:column="8">java</name><op:operator pos:line="9" pos:column="12">.</op:operator><name pos:line="9" pos:column="13">sql</name><op:operator pos:line="9" pos:column="16">.</op:operator><name pos:line="9" pos:column="17">SQLException</name></name>;</import>
<import pos:line="10" pos:column="1">import <name><name pos:line="10" pos:column="8">java</name><op:operator pos:line="10" pos:column="12">.</op:operator><name pos:line="10" pos:column="13">util</name><op:operator pos:line="10" pos:column="17">.</op:operator><name pos:line="10" pos:column="18">ArrayList</name></name>;</import>
<import pos:line="11" pos:column="1">import <name><name pos:line="11" pos:column="8">java</name><op:operator pos:line="11" pos:column="12">.</op:operator><name pos:line="11" pos:column="13">util</name><op:operator pos:line="11" pos:column="17">.</op:operator><name pos:line="11" pos:column="18">Scanner</name></name>;</import>

	
<class><specifier pos:line="14" pos:column="1">public</specifier> class <name pos:line="14" pos:column="14">File</name> <block pos:line="14" pos:column="19">{
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">int</name></type> <name pos:line="15" pos:column="13">fileID</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="16" pos:column="9">String</name></type> <name pos:line="16" pos:column="16">fileName</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="17" pos:column="9">String</name></type> <name pos:line="17" pos:column="16">fileLocation</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="18" pos:column="9">int</name></type> <name pos:line="18" pos:column="13">offerID</name></decl>;</decl_stmt>
	
<comment type="line" pos:line="20" pos:column="1">//	@Target({ElementType.LOCAL_VARIABLE})</comment>
<comment type="line" pos:line="21" pos:column="1">//	@Retention(RetentionPolicy.RUNTIME)</comment>
<comment type="line" pos:line="22" pos:column="1">//	public @interface DBAnnotation {</comment>
<comment type="line" pos:line="23" pos:column="1">//	 String[] variable () default "";</comment>
<comment type="line" pos:line="24" pos:column="1">//	 String[] table () default "";</comment>
<comment type="line" pos:line="25" pos:column="1">//	 String[] column () default "";</comment>
<comment type="line" pos:line="26" pos:column="1">//	 boolean[] isSource () default false; </comment>
<comment type="line" pos:line="27" pos:column="1">//	}</comment>
	
	
	<comment type="line" pos:line="30" pos:column="9">// Constructor</comment>
	<constructor><specifier pos:line="31" pos:column="9">public</specifier> <name pos:line="31" pos:column="16">File</name><parameter_list pos:line="31" pos:column="20">(<param><decl><type><name pos:line="31" pos:column="21">int</name></type> <name pos:line="31" pos:column="25">fileID</name></decl></param>, <param><decl><type><name pos:line="31" pos:column="33">String</name></type> <name pos:line="31" pos:column="40">fileName</name></decl></param>, <param><decl><type><name pos:line="31" pos:column="50">String</name></type> <name pos:line="31" pos:column="57">fileLocation</name></decl></param>, <param><decl><type><name pos:line="31" pos:column="71">int</name></type> <name pos:line="31" pos:column="75">offerID</name></decl></param>)</parameter_list> <block pos:line="31" pos:column="84">{
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">super</name><argument_list pos:line="32" pos:column="22">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="33" pos:column="17">this</name><op:operator pos:line="33" pos:column="21">.</op:operator><name pos:line="33" pos:column="22">fileID</name></name> <op:operator pos:line="33" pos:column="29">=</op:operator> <name pos:line="33" pos:column="31">fileID</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="34" pos:column="17">this</name><op:operator pos:line="34" pos:column="21">.</op:operator><name pos:line="34" pos:column="22">fileName</name></name> <op:operator pos:line="34" pos:column="31">=</op:operator> <name pos:line="34" pos:column="33">fileName</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="35" pos:column="17">this</name><op:operator pos:line="35" pos:column="21">.</op:operator><name pos:line="35" pos:column="22">fileLocation</name></name> <op:operator pos:line="35" pos:column="35">=</op:operator> <name pos:line="35" pos:column="37">fileLocation</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="36" pos:column="17">this</name><op:operator pos:line="36" pos:column="21">.</op:operator><name pos:line="36" pos:column="22">offerID</name></name> <op:operator pos:line="36" pos:column="30">=</op:operator> <name pos:line="36" pos:column="32">offerID</name></expr>;</expr_stmt>
	}</block></constructor>

	<comment type="line" pos:line="39" pos:column="9">// Constructor</comment>
	<constructor><specifier pos:line="40" pos:column="9">public</specifier> <name pos:line="40" pos:column="16">File</name><parameter_list pos:line="40" pos:column="20">(<param><decl><type><name pos:line="40" pos:column="21">String</name></type> <name pos:line="40" pos:column="28">fileName</name></decl></param>, <param><decl><type><name pos:line="40" pos:column="38">String</name></type> <name pos:line="40" pos:column="45">fileLocation</name></decl></param>, <param><decl><type><name pos:line="40" pos:column="59">int</name></type> <name pos:line="40" pos:column="63">offerID</name></decl></param>)</parameter_list> <block pos:line="40" pos:column="72">{
		
		<decl_stmt><decl><type><name pos:line="42" pos:column="17">boolean</name></type> <name pos:line="42" pos:column="25">isFilePresent</name> <init pos:line="42" pos:column="39">= <expr><call><name pos:line="42" pos:column="41">isFilePresent</name><argument_list pos:line="42" pos:column="54">(<argument><expr><name pos:line="42" pos:column="55">fileName</name></expr></argument>, <argument><expr><name pos:line="42" pos:column="65">fileLocation</name></expr></argument>, <argument><expr><name pos:line="42" pos:column="79">offerID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><name pos:line="43" pos:column="21">isFilePresent</name> <op:operator pos:line="43" pos:column="35">==</op:operator> <lit:literal type="boolean" pos:line="43" pos:column="38">true</lit:literal></expr> )</condition><then><block pos:line="43" pos:column="44">{
			<decl_stmt><decl><type><name pos:line="44" pos:column="25">int</name></type> <name pos:line="44" pos:column="29">fileID</name> <init pos:line="44" pos:column="36">= <expr><call><name><name pos:line="44" pos:column="38">File</name><op:operator pos:line="44" pos:column="42">.</op:operator><name pos:line="44" pos:column="43">getFileIDFromDB</name></name><argument_list pos:line="44" pos:column="58">(<argument><expr><name pos:line="44" pos:column="59">fileName</name></expr></argument>, <argument><expr><name pos:line="44" pos:column="69">fileLocation</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="45" pos:column="25">this</name><op:operator pos:line="45" pos:column="29">.</op:operator><name pos:line="45" pos:column="30">fileID</name></name> <op:operator pos:line="45" pos:column="37">=</op:operator> <name pos:line="45" pos:column="39">fileID</name></expr>;</expr_stmt>
			
		}</block></then> <else pos:line="47" pos:column="19">else<block pos:line="47" pos:column="23">{
			<expr_stmt><expr><name><name pos:line="48" pos:column="25">this</name><op:operator pos:line="48" pos:column="29">.</op:operator><name pos:line="48" pos:column="30">fileID</name></name> <op:operator pos:line="48" pos:column="37">=</op:operator> <lit:literal type="number" pos:line="48" pos:column="39">0</lit:literal></expr>;</expr_stmt>
		}</block></else></if>
		<expr_stmt><expr><name><name pos:line="50" pos:column="17">this</name><op:operator pos:line="50" pos:column="21">.</op:operator><name pos:line="50" pos:column="22">fileName</name></name> <op:operator pos:line="50" pos:column="31">=</op:operator> <name pos:line="50" pos:column="33">fileName</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="51" pos:column="17">this</name><op:operator pos:line="51" pos:column="21">.</op:operator><name pos:line="51" pos:column="22">fileLocation</name></name> <op:operator pos:line="51" pos:column="35">=</op:operator> <name pos:line="51" pos:column="37">fileLocation</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="52" pos:column="17">this</name><op:operator pos:line="52" pos:column="21">.</op:operator><name pos:line="52" pos:column="22">offerID</name></name> <op:operator pos:line="52" pos:column="30">=</op:operator> <name pos:line="52" pos:column="32">offerID</name></expr>;</expr_stmt>
	}</block></constructor>
	
	<function><type><specifier pos:line="55" pos:column="9">public</specifier> <name pos:line="55" pos:column="16">int</name></type> <name pos:line="55" pos:column="20">getFileID</name><parameter_list pos:line="55" pos:column="29">()</parameter_list> <block pos:line="55" pos:column="32">{
		<return pos:line="56" pos:column="17">return <expr><name pos:line="56" pos:column="24">fileID</name></expr>;</return>
	}</block></function>
	
	<function><type><specifier pos:line="59" pos:column="9">public</specifier> <name pos:line="59" pos:column="16">void</name></type> <name pos:line="59" pos:column="21">setFileID</name><parameter_list pos:line="59" pos:column="30">(<param><decl><type><name pos:line="59" pos:column="31">int</name></type> <name pos:line="59" pos:column="35">fileID</name></decl></param>)</parameter_list> <block pos:line="59" pos:column="43">{
		<expr_stmt><expr><name><name pos:line="60" pos:column="17">this</name><op:operator pos:line="60" pos:column="21">.</op:operator><name pos:line="60" pos:column="22">fileID</name></name> <op:operator pos:line="60" pos:column="29">=</op:operator> <name pos:line="60" pos:column="31">fileID</name></expr>;</expr_stmt>
	}</block></function>
	
	<function><type><specifier pos:line="63" pos:column="9">public</specifier> <name pos:line="63" pos:column="16">String</name></type> <name pos:line="63" pos:column="23">getFileName</name><parameter_list pos:line="63" pos:column="34">()</parameter_list> <block pos:line="63" pos:column="37">{
		<return pos:line="64" pos:column="17">return <expr><name pos:line="64" pos:column="24">fileName</name></expr>;</return>
	}</block></function>
	
	<function><type><specifier pos:line="67" pos:column="9">public</specifier> <name pos:line="67" pos:column="16">void</name></type> <name pos:line="67" pos:column="21">setFileName</name><parameter_list pos:line="67" pos:column="32">(<param><decl><type><name pos:line="67" pos:column="33">String</name></type> <name pos:line="67" pos:column="40">fileName</name></decl></param>)</parameter_list> <block pos:line="67" pos:column="50">{
		<expr_stmt><expr><name><name pos:line="68" pos:column="17">this</name><op:operator pos:line="68" pos:column="21">.</op:operator><name pos:line="68" pos:column="22">fileName</name></name> <op:operator pos:line="68" pos:column="31">=</op:operator> <name pos:line="68" pos:column="33">fileName</name></expr>;</expr_stmt>
	}</block></function>
	
	<function><type><specifier pos:line="71" pos:column="9">public</specifier> <name pos:line="71" pos:column="16">String</name></type> <name pos:line="71" pos:column="23">getFileLocation</name><parameter_list pos:line="71" pos:column="38">()</parameter_list> <block pos:line="71" pos:column="41">{
		<return pos:line="72" pos:column="17">return <expr><name pos:line="72" pos:column="24">fileLocation</name></expr>;</return>
	}</block></function>
	
	<function><type><specifier pos:line="75" pos:column="9">public</specifier> <name pos:line="75" pos:column="16">void</name></type> <name pos:line="75" pos:column="21">setFileLocation</name><parameter_list pos:line="75" pos:column="36">(<param><decl><type><name pos:line="75" pos:column="37">String</name></type> <name pos:line="75" pos:column="44">fileLocation</name></decl></param>)</parameter_list> <block pos:line="75" pos:column="58">{
		<expr_stmt><expr><name><name pos:line="76" pos:column="17">this</name><op:operator pos:line="76" pos:column="21">.</op:operator><name pos:line="76" pos:column="22">fileLocation</name></name> <op:operator pos:line="76" pos:column="35">=</op:operator> <name pos:line="76" pos:column="37">fileLocation</name></expr>;</expr_stmt>
	}</block></function>
	
	<function><type><specifier pos:line="79" pos:column="9">public</specifier> <name pos:line="79" pos:column="16">int</name></type> <name pos:line="79" pos:column="20">getOfferID</name><parameter_list pos:line="79" pos:column="30">()</parameter_list> <block pos:line="79" pos:column="33">{
		<return pos:line="80" pos:column="17">return <expr><name pos:line="80" pos:column="24">offerID</name></expr>;</return>
	}</block></function>
	
	<function><type><specifier pos:line="83" pos:column="9">public</specifier> <name pos:line="83" pos:column="16">void</name></type> <name pos:line="83" pos:column="21">setOfferID</name><parameter_list pos:line="83" pos:column="31">(<param><decl><type><name pos:line="83" pos:column="32">int</name></type> <name pos:line="83" pos:column="36">offerID</name></decl></param>)</parameter_list> <block pos:line="83" pos:column="45">{
		<expr_stmt><expr><name><name pos:line="84" pos:column="17">this</name><op:operator pos:line="84" pos:column="21">.</op:operator><name pos:line="84" pos:column="22">offerID</name></name> <op:operator pos:line="84" pos:column="30">=</op:operator> <name pos:line="84" pos:column="32">offerID</name></expr>;</expr_stmt>
	}</block></function>
	
	
	<comment type="line" pos:line="88" pos:column="9">// Add a new file to file table in the database</comment>
	<function><type><specifier pos:line="89" pos:column="9">public</specifier> <specifier pos:line="89" pos:column="16">static</specifier> <name pos:line="89" pos:column="23">boolean</name></type> <name pos:line="89" pos:column="31">addFileToDB</name><parameter_list pos:line="89" pos:column="42">(<param><decl><type><name pos:line="89" pos:column="43">String</name></type> <name pos:line="89" pos:column="50">fileName</name></decl></param>, <param><decl><type><name pos:line="89" pos:column="60">String</name></type> <name pos:line="89" pos:column="67">fileLocation</name></decl></param>, <param><decl><type><name pos:line="89" pos:column="81">int</name></type> <name pos:line="89" pos:column="85">offerID</name></decl></param>)</parameter_list><block pos:line="89" pos:column="93">{
		<decl_stmt><decl><type><name pos:line="90" pos:column="17">boolean</name></type> <name pos:line="90" pos:column="25">fileAdded</name> <init pos:line="90" pos:column="35">= <expr><lit:literal type="boolean" pos:line="90" pos:column="37">false</lit:literal></expr></init></decl>;</decl_stmt>
		<comment type="line" pos:line="91" pos:column="17">// String newFileLocation = fileLocation.replace("/","//");</comment>
<comment type="line" pos:line="92" pos:column="1">//		@DBAnnotation (</comment>
<comment type="line" pos:line="93" pos:column="1">//				variable = {"fileName","newfileLocation", "offerID"},  </comment>
<comment type="line" pos:line="94" pos:column="1">//				table = "files", </comment>
<comment type="line" pos:line="95" pos:column="1">//				column = {"FileName","FileLocation", "OfferID"}, </comment>
<comment type="line" pos:line="96" pos:column="1">//				isSource = false)</comment>
		
		<decl_stmt><decl><type><name pos:line="98" pos:column="17">String</name></type> <name pos:line="98" pos:column="24">SQLFileInsert</name> <init pos:line="98" pos:column="38">= <expr><lit:literal type="string" pos:line="98" pos:column="40">"INSERT INTO files (FileName,FileLocation,OfferID) VALUES(?,?,?);"</lit:literal></expr></init></decl>;</decl_stmt>
		
		
		<comment type="line" pos:line="101" pos:column="17">// Step 1: Check if file is already present</comment>
		<try pos:line="102" pos:column="17">try <block pos:line="102" pos:column="21">{
			<decl_stmt><decl><type><name pos:line="103" pos:column="25">Connection</name></type> <name pos:line="103" pos:column="36">conn</name> <init pos:line="103" pos:column="41">= <expr><call><name><name pos:line="103" pos:column="43">Database</name><op:operator pos:line="103" pos:column="51">.</op:operator><name pos:line="103" pos:column="52">getConnection</name></name><argument_list pos:line="103" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<try pos:line="104" pos:column="25">try <block pos:line="104" pos:column="29">{
				<if pos:line="105" pos:column="33">if <condition pos:line="105" pos:column="36">(<expr><name pos:line="105" pos:column="37">conn</name> <op:operator pos:line="105" pos:column="42">!=</op:operator> <lit:literal type="null" pos:line="105" pos:column="45">null</lit:literal></expr>)</condition><then pos:line="105" pos:column="50"> <block pos:line="105" pos:column="51">{
					
					<comment type="line" pos:line="107" pos:column="41">// Check if file is already present. </comment>
					
					<decl_stmt><decl><type><name pos:line="109" pos:column="41">boolean</name></type> <name pos:line="109" pos:column="49">isFilePresent</name> <init pos:line="109" pos:column="63">= <expr><call><name pos:line="109" pos:column="65">isFilePresent</name><argument_list pos:line="109" pos:column="78">(<argument><expr><name pos:line="109" pos:column="79">fileName</name></expr></argument>, <argument><expr><name pos:line="109" pos:column="89">fileLocation</name></expr></argument>, <argument><expr><name pos:line="109" pos:column="103">offerID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					
					<comment type="line" pos:line="111" pos:column="41">// If present, confirm whether it needs to be replaced</comment>
					<decl_stmt><decl><type><name pos:line="112" pos:column="41">String</name></type> <name pos:line="112" pos:column="48">addFileToDB</name> <init pos:line="112" pos:column="60">= <expr><lit:literal type="string" pos:line="112" pos:column="62">"yes"</lit:literal></expr></init></decl>;</decl_stmt>
					
					<if pos:line="114" pos:column="41">if<condition pos:line="114" pos:column="43">(<expr><name pos:line="114" pos:column="44">isFilePresent</name> <op:operator pos:line="114" pos:column="58">==</op:operator> <lit:literal type="boolean" pos:line="114" pos:column="61">true</lit:literal></expr>)</condition><then><block pos:line="114" pos:column="66">{
<comment type="line" pos:line="115" pos:column="1">//						Scanner in = new Scanner(System.in);</comment>
<comment type="line" pos:line="116" pos:column="1">//						System.out.println("File already Present. Do you want to Replace it? Yes/No: ");</comment>
<comment type="line" pos:line="117" pos:column="1">//						addFileToDB = in.next();</comment>
<comment type="line" pos:line="118" pos:column="1">//						in.close();</comment>
						<expr_stmt><expr><name pos:line="119" pos:column="49">fileAdded</name> <op:operator pos:line="119" pos:column="59">=</op:operator> <lit:literal type="boolean" pos:line="119" pos:column="61">false</lit:literal></expr>;</expr_stmt>
					}</block></then>
				
						
					<comment type="line" pos:line="123" pos:column="41">// Add file in database</comment>
					
					<comment type="line" pos:line="125" pos:column="41">// if(addFileToDB.toLowerCase().equals("yes")){</comment>
					<else pos:line="126" pos:column="41">else<block pos:line="126" pos:column="45">{	
						<decl_stmt><decl><type><name pos:line="127" pos:column="49">File</name></type> <name pos:line="127" pos:column="54">file</name> <init pos:line="127" pos:column="59">= <expr><op:operator pos:line="127" pos:column="61">new</op:operator> <call><name pos:line="127" pos:column="65">File</name><argument_list pos:line="127" pos:column="69">(<argument><expr><name pos:line="127" pos:column="70">fileName</name></expr></argument>, <argument><expr><name pos:line="127" pos:column="80">fileLocation</name></expr></argument>, <argument><expr><name pos:line="127" pos:column="94">offerID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><call><name><name pos:line="128" pos:column="49">file</name><op:operator pos:line="128" pos:column="53">.</op:operator><name pos:line="128" pos:column="54">deleteFileFromDB</name></name><argument_list pos:line="128" pos:column="70">()</argument_list></call></expr>;</expr_stmt>
						<decl_stmt><decl><type><name pos:line="129" pos:column="49">PreparedStatement</name></type> <name pos:line="129" pos:column="67">statement</name> <init pos:line="129" pos:column="77">= <expr><call><name><name pos:line="129" pos:column="79">conn</name><op:operator pos:line="129" pos:column="83">.</op:operator><name pos:line="129" pos:column="84">prepareStatement</name></name><argument_list pos:line="129" pos:column="100">(<argument><expr><name pos:line="129" pos:column="101">SQLFileInsert</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><call><name><name pos:line="130" pos:column="49">DBAnnotation</name><op:operator pos:line="130" pos:column="61">.</op:operator><name pos:line="130" pos:column="62">annoate</name></name><argument_list pos:line="130" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="130" pos:column="70">"fileName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="130" pos:column="82">"files"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="130" pos:column="91">"FileName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="130" pos:column="103">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="131" pos:column="49">statement</name><op:operator pos:line="131" pos:column="58">.</op:operator><name pos:line="131" pos:column="59">setString</name></name><argument_list pos:line="131" pos:column="68">(<argument><expr><lit:literal type="number" pos:line="131" pos:column="69">1</lit:literal></expr></argument>, <argument><expr><name pos:line="131" pos:column="72">fileName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="132" pos:column="49">DBAnnotation</name><op:operator pos:line="132" pos:column="61">.</op:operator><name pos:line="132" pos:column="62">annoate</name></name><argument_list pos:line="132" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="132" pos:column="70">"fileLocation"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="132" pos:column="86">"files"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="132" pos:column="95">"FileLocation"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="132" pos:column="111">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="133" pos:column="49">statement</name><op:operator pos:line="133" pos:column="58">.</op:operator><name pos:line="133" pos:column="59">setString</name></name><argument_list pos:line="133" pos:column="68">(<argument><expr><lit:literal type="number" pos:line="133" pos:column="69">2</lit:literal></expr></argument>, <argument><expr><name pos:line="133" pos:column="72">fileLocation</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="134" pos:column="49">DBAnnotation</name><op:operator pos:line="134" pos:column="61">.</op:operator><name pos:line="134" pos:column="62">annoate</name></name><argument_list pos:line="134" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="134" pos:column="70">"offerID"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="134" pos:column="81">"files"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="134" pos:column="90">"OfferID"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="134" pos:column="101">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="135" pos:column="49">statement</name><op:operator pos:line="135" pos:column="58">.</op:operator><name pos:line="135" pos:column="59">setInt</name></name><argument_list pos:line="135" pos:column="65">(<argument><expr><lit:literal type="number" pos:line="135" pos:column="66">3</lit:literal></expr></argument>, <argument><expr><name pos:line="135" pos:column="69">offerID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="136" pos:column="49">statement</name><op:operator pos:line="136" pos:column="58">.</op:operator><name pos:line="136" pos:column="59">executeUpdate</name></name><argument_list pos:line="136" pos:column="72">()</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="137" pos:column="49">Database</name><op:operator pos:line="137" pos:column="57">.</op:operator><name pos:line="137" pos:column="58">commitTransaction</name></name><argument_list pos:line="137" pos:column="75">(<argument><expr><name pos:line="137" pos:column="76">conn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name pos:line="138" pos:column="49">fileAdded</name> <op:operator pos:line="138" pos:column="59">=</op:operator> <lit:literal type="boolean" pos:line="138" pos:column="61">true</lit:literal></expr>;</expr_stmt>
					}</block></else></if>		
				}</block></then></if>
			}</block> <catch pos:line="141" pos:column="27">catch <parameter_list pos:line="141" pos:column="33">(<param><decl><type><name pos:line="141" pos:column="34">SQLException</name></type> <name pos:line="141" pos:column="47">e</name></decl></param>)</parameter_list> <block pos:line="141" pos:column="50">{
				<expr_stmt><expr><call><name><name pos:line="142" pos:column="33">System</name><op:operator pos:line="142" pos:column="39">.</op:operator><name pos:line="142" pos:column="40">out</name><op:operator pos:line="142" pos:column="43">.</op:operator><name pos:line="142" pos:column="44">println</name></name><argument_list pos:line="142" pos:column="51">(<argument><expr><name pos:line="142" pos:column="52">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="143" pos:column="33">Database</name><op:operator pos:line="143" pos:column="41">.</op:operator><name pos:line="143" pos:column="42">rollBackTransaction</name></name><argument_list pos:line="143" pos:column="61">(<argument><expr><name pos:line="143" pos:column="62">conn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><empty_stmt pos:line="143" pos:column="68">;</empty_stmt>
			}</block></catch></try>
	
		}</block> <catch pos:line="146" pos:column="19">catch <parameter_list pos:line="146" pos:column="25">(<param><decl><type><name pos:line="146" pos:column="26">Exception</name></type> <name pos:line="146" pos:column="36">e</name></decl></param>)</parameter_list> <block pos:line="146" pos:column="39">{
			<expr_stmt><expr><call><name><name pos:line="147" pos:column="25">System</name><op:operator pos:line="147" pos:column="31">.</op:operator><name pos:line="147" pos:column="32">out</name><op:operator pos:line="147" pos:column="35">.</op:operator><name pos:line="147" pos:column="36">println</name></name><argument_list pos:line="147" pos:column="43">(<argument><expr><name pos:line="147" pos:column="44">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></catch></try>
		
		<return pos:line="150" pos:column="17">return <expr><name pos:line="150" pos:column="24">fileAdded</name></expr>;</return>
			
	}</block></function>
	
	<comment type="line" pos:line="154" pos:column="9">// Checks whether the file is already present in the same file location and for the same course </comment>
	<function><type><specifier pos:line="155" pos:column="9">private</specifier> <specifier pos:line="155" pos:column="17">static</specifier> <name pos:line="155" pos:column="24">boolean</name></type> <name pos:line="155" pos:column="32">isFilePresent</name><parameter_list pos:line="155" pos:column="45">(<param><decl><type><name pos:line="155" pos:column="46">String</name></type> <name pos:line="155" pos:column="53">fileName</name></decl></param>, <param><decl><type><name pos:line="155" pos:column="63">String</name></type> <name pos:line="155" pos:column="70">fileLocation</name></decl></param>, <param><decl><type><name pos:line="155" pos:column="84">int</name></type> <name pos:line="155" pos:column="88">offerID</name></decl></param>)</parameter_list><block pos:line="155" pos:column="96">{
		<decl_stmt><decl><type><name pos:line="156" pos:column="17">boolean</name></type> <name pos:line="156" pos:column="25">isFilePresent</name> <init pos:line="156" pos:column="39">= <expr><lit:literal type="boolean" pos:line="156" pos:column="41">false</lit:literal></expr></init></decl>;</decl_stmt>
<comment type="line" pos:line="157" pos:column="1">//		String newFileLocation = fileLocation.replace("/","//");</comment>
<comment type="line" pos:line="158" pos:column="1">//		@DBAnnotation (</comment>
<comment type="line" pos:line="159" pos:column="1">//				variable = "fileName",  </comment>
<comment type="line" pos:line="160" pos:column="1">//				table = "files", </comment>
<comment type="line" pos:line="161" pos:column="1">//				column = "FileName", </comment>
<comment type="line" pos:line="162" pos:column="1">//				isSource = true)</comment>
		
		<decl_stmt><decl><type><name pos:line="164" pos:column="17">String</name></type> <name pos:line="164" pos:column="24">SQLFileSelect</name> <init pos:line="164" pos:column="38">= <expr><lit:literal type="string" pos:line="164" pos:column="40">"SELECT FileName FROM files WHERE OfferID = ? AND FileName = ? AND FileLocation = ?;"</lit:literal></expr></init></decl>;</decl_stmt>
		
		<try pos:line="166" pos:column="17">try <block pos:line="166" pos:column="21">{
			<decl_stmt><decl><type><name pos:line="167" pos:column="25">Connection</name></type> <name pos:line="167" pos:column="36">conn</name> <init pos:line="167" pos:column="41">= <expr><call><name><name pos:line="167" pos:column="43">Database</name><op:operator pos:line="167" pos:column="51">.</op:operator><name pos:line="167" pos:column="52">getConnection</name></name><argument_list pos:line="167" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<try pos:line="168" pos:column="25">try <block pos:line="168" pos:column="29">{
				<if pos:line="169" pos:column="33">if <condition pos:line="169" pos:column="36">(<expr><name pos:line="169" pos:column="37">conn</name> <op:operator pos:line="169" pos:column="42">!=</op:operator> <lit:literal type="null" pos:line="169" pos:column="45">null</lit:literal></expr>)</condition><then pos:line="169" pos:column="50"> <block pos:line="169" pos:column="51">{
					
					<comment type="line" pos:line="171" pos:column="41">// Check if file is already present. </comment>
					<decl_stmt><decl><type><name pos:line="172" pos:column="41">PreparedStatement</name></type> <name pos:line="172" pos:column="59">statement</name> <init pos:line="172" pos:column="69">= <expr><call><name><name pos:line="172" pos:column="71">conn</name><op:operator pos:line="172" pos:column="75">.</op:operator><name pos:line="172" pos:column="76">prepareStatement</name></name><argument_list pos:line="172" pos:column="92">(<argument><expr><name pos:line="172" pos:column="93">SQLFileSelect</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="173" pos:column="41">DBAnnotation</name><op:operator pos:line="173" pos:column="53">.</op:operator><name pos:line="173" pos:column="54">annoate</name></name><argument_list pos:line="173" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="173" pos:column="62">"offerID"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="173" pos:column="73">"files"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="173" pos:column="82">"OfferID"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="173" pos:column="93">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="174" pos:column="41">statement</name><op:operator pos:line="174" pos:column="50">.</op:operator><name pos:line="174" pos:column="51">setInt</name></name><argument_list pos:line="174" pos:column="57">(<argument><expr><lit:literal type="number" pos:line="174" pos:column="58">1</lit:literal></expr></argument>, <argument><expr><name pos:line="174" pos:column="61">offerID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="175" pos:column="41">DBAnnotation</name><op:operator pos:line="175" pos:column="53">.</op:operator><name pos:line="175" pos:column="54">annoate</name></name><argument_list pos:line="175" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="175" pos:column="62">"fileName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="175" pos:column="74">"files"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="175" pos:column="83">"FileName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="175" pos:column="95">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="176" pos:column="41">statement</name><op:operator pos:line="176" pos:column="50">.</op:operator><name pos:line="176" pos:column="51">setString</name></name><argument_list pos:line="176" pos:column="60">(<argument><expr><lit:literal type="number" pos:line="176" pos:column="61">2</lit:literal></expr></argument>, <argument><expr><name pos:line="176" pos:column="64">fileName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="177" pos:column="41">DBAnnotation</name><op:operator pos:line="177" pos:column="53">.</op:operator><name pos:line="177" pos:column="54">annoate</name></name><argument_list pos:line="177" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="177" pos:column="62">"fileLocation"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="177" pos:column="78">"files"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="177" pos:column="87">"FileLocation"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="177" pos:column="103">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="178" pos:column="41">statement</name><op:operator pos:line="178" pos:column="50">.</op:operator><name pos:line="178" pos:column="51">setString</name></name><argument_list pos:line="178" pos:column="60">(<argument><expr><lit:literal type="number" pos:line="178" pos:column="61">3</lit:literal></expr></argument>, <argument><expr><name pos:line="178" pos:column="64">fileLocation</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="179" pos:column="41">ResultSet</name></type> <name pos:line="179" pos:column="51">rs</name> <init pos:line="179" pos:column="54">= <expr><call><name><name pos:line="179" pos:column="56">statement</name><op:operator pos:line="179" pos:column="65">.</op:operator><name pos:line="179" pos:column="66">executeQuery</name></name><argument_list pos:line="179" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<while pos:line="180" pos:column="41">while <condition pos:line="180" pos:column="47">(<expr><call><name><name pos:line="180" pos:column="48">rs</name><op:operator pos:line="180" pos:column="50">.</op:operator><name pos:line="180" pos:column="51">next</name></name><argument_list pos:line="180" pos:column="55">()</argument_list></call></expr>)</condition> <block pos:line="180" pos:column="59">{
						<comment type="line" pos:line="181" pos:column="49">// Retrieve by column name</comment>
						<expr_stmt><expr><call><name><name pos:line="182" pos:column="49">DBAnnotation</name><op:operator pos:line="182" pos:column="61">.</op:operator><name pos:line="182" pos:column="62">annoate</name></name><argument_list pos:line="182" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="182" pos:column="70">"fileName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="182" pos:column="82">"files"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="182" pos:column="91">"FileName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="182" pos:column="103">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<decl_stmt><decl><type><name pos:line="183" pos:column="49">String</name></type> <name pos:line="183" pos:column="56">tableFileName</name> <init pos:line="183" pos:column="70">= <expr><call><name><name pos:line="183" pos:column="72">rs</name><op:operator pos:line="183" pos:column="74">.</op:operator><name pos:line="183" pos:column="75">getString</name></name><argument_list pos:line="183" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="183" pos:column="85">"FileName"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><call><name><name pos:line="184" pos:column="49">System</name><op:operator pos:line="184" pos:column="55">.</op:operator><name pos:line="184" pos:column="56">out</name><op:operator pos:line="184" pos:column="59">.</op:operator><name pos:line="184" pos:column="60">println</name></name><argument_list pos:line="184" pos:column="67">(<argument><expr><name pos:line="184" pos:column="68">tableFileName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<if pos:line="185" pos:column="49">if<condition pos:line="185" pos:column="51">(<expr><call><name><name pos:line="185" pos:column="52">tableFileName</name><op:operator pos:line="185" pos:column="65">.</op:operator><name pos:line="185" pos:column="66">equals</name></name><argument_list pos:line="185" pos:column="72">(<argument><expr><name pos:line="185" pos:column="73">fileName</name></expr></argument>)</argument_list></call></expr>)</condition><then><block pos:line="185" pos:column="83">{
							<expr_stmt><expr><name pos:line="186" pos:column="57">isFilePresent</name> <op:operator pos:line="186" pos:column="71">=</op:operator> <lit:literal type="boolean" pos:line="186" pos:column="73">true</lit:literal></expr>;</expr_stmt>
							<break pos:line="187" pos:column="57">break;</break>
						}</block></then></if>
					}</block></while>
				}</block></then></if>	
			}</block> <catch pos:line="191" pos:column="27">catch <parameter_list pos:line="191" pos:column="33">(<param><decl><type><name pos:line="191" pos:column="34">SQLException</name></type> <name pos:line="191" pos:column="47">e</name></decl></param>)</parameter_list> <block pos:line="191" pos:column="50">{
				<expr_stmt><expr><call><name><name pos:line="192" pos:column="33">System</name><op:operator pos:line="192" pos:column="39">.</op:operator><name pos:line="192" pos:column="40">out</name><op:operator pos:line="192" pos:column="43">.</op:operator><name pos:line="192" pos:column="44">println</name></name><argument_list pos:line="192" pos:column="51">(<argument><expr><name pos:line="192" pos:column="52">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></catch></try>
	
		}</block> <catch pos:line="195" pos:column="19">catch <parameter_list pos:line="195" pos:column="25">(<param><decl><type><name pos:line="195" pos:column="26">Exception</name></type> <name pos:line="195" pos:column="36">e</name></decl></param>)</parameter_list> <block pos:line="195" pos:column="39">{
			<expr_stmt><expr><call><name><name pos:line="196" pos:column="25">System</name><op:operator pos:line="196" pos:column="31">.</op:operator><name pos:line="196" pos:column="32">out</name><op:operator pos:line="196" pos:column="35">.</op:operator><name pos:line="196" pos:column="36">println</name></name><argument_list pos:line="196" pos:column="43">(<argument><expr><name pos:line="196" pos:column="44">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></catch></try>
		<return pos:line="198" pos:column="17">return <expr><name pos:line="198" pos:column="24">isFilePresent</name></expr>;</return>
	}</block></function>
	
	<comment type="line" pos:line="201" pos:column="9">// Deletes the file information from the file table </comment>
	<function><type><specifier pos:line="202" pos:column="9">public</specifier> <name pos:line="202" pos:column="16">boolean</name></type> <name pos:line="202" pos:column="24">deleteFileFromDB</name><parameter_list pos:line="202" pos:column="40">()</parameter_list><block pos:line="202" pos:column="42">{
		<decl_stmt><decl><type><name pos:line="203" pos:column="17">boolean</name></type> <name pos:line="203" pos:column="25">fileDeleted</name> <init pos:line="203" pos:column="37">= <expr><lit:literal type="boolean" pos:line="203" pos:column="39">false</lit:literal></expr></init></decl>;</decl_stmt>
		
		<decl_stmt><decl><type><name pos:line="205" pos:column="17">int</name></type> <name pos:line="205" pos:column="21">fileID</name> <init pos:line="205" pos:column="28">= <expr><call><name><name pos:line="205" pos:column="30">this</name><op:operator pos:line="205" pos:column="34">.</op:operator><name pos:line="205" pos:column="35">getFileID</name></name><argument_list pos:line="205" pos:column="44">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="206" pos:column="17">String</name></type> <name pos:line="206" pos:column="24">fileName</name> <init pos:line="206" pos:column="33">= <expr><call><name><name pos:line="206" pos:column="35">this</name><op:operator pos:line="206" pos:column="39">.</op:operator><name pos:line="206" pos:column="40">getFileName</name></name><argument_list pos:line="206" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="207" pos:column="17">String</name></type> <name pos:line="207" pos:column="24">fileLocation</name> <init pos:line="207" pos:column="37">= <expr><call><name><name pos:line="207" pos:column="39">this</name><op:operator pos:line="207" pos:column="43">.</op:operator><name pos:line="207" pos:column="44">getFileLocation</name></name><argument_list pos:line="207" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="208" pos:column="17">int</name></type> <name pos:line="208" pos:column="21">offerID</name> <init pos:line="208" pos:column="29">= <expr><call><name><name pos:line="208" pos:column="31">this</name><op:operator pos:line="208" pos:column="35">.</op:operator><name pos:line="208" pos:column="36">getOfferID</name></name><argument_list pos:line="208" pos:column="46">()</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<decl_stmt><decl><type><name pos:line="210" pos:column="17">boolean</name></type> <name pos:line="210" pos:column="25">isFilePresent</name> <init pos:line="210" pos:column="39">= <expr><call><name pos:line="210" pos:column="41">isFilePresent</name><argument_list pos:line="210" pos:column="54">(<argument><expr><name pos:line="210" pos:column="55">fileName</name></expr></argument>,<argument><expr><name pos:line="210" pos:column="64">fileLocation</name></expr></argument>,<argument><expr><name pos:line="210" pos:column="77">offerID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="211" pos:column="17">System</name><op:operator pos:line="211" pos:column="23">.</op:operator><name pos:line="211" pos:column="24">out</name><op:operator pos:line="211" pos:column="27">.</op:operator><name pos:line="211" pos:column="28">println</name></name><argument_list pos:line="211" pos:column="35">(<argument><expr><name pos:line="211" pos:column="36">isFilePresent</name><op:operator pos:line="211" pos:column="49">+</op:operator><lit:literal type="string" pos:line="211" pos:column="50">" fileName: "</lit:literal><op:operator pos:line="211" pos:column="63">+</op:operator><name pos:line="211" pos:column="64">fileName</name> <op:operator pos:line="211" pos:column="73">+</op:operator> <lit:literal type="string" pos:line="211" pos:column="75">" loca: "</lit:literal> <op:operator pos:line="211" pos:column="85">+</op:operator> <name pos:line="211" pos:column="87">fileLocation</name> <op:operator pos:line="211" pos:column="100">+</op:operator> <lit:literal type="string" pos:line="211" pos:column="102">" id:"</lit:literal> <op:operator pos:line="211" pos:column="109">+</op:operator> <name pos:line="211" pos:column="111">fileID</name> <op:operator pos:line="211" pos:column="118">+</op:operator> <lit:literal type="string" pos:line="211" pos:column="120">" offerID "</lit:literal> <op:operator pos:line="211" pos:column="132">+</op:operator> <name pos:line="211" pos:column="134">offerID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="212" pos:column="17">if<condition pos:line="212" pos:column="19">(<expr><name pos:line="212" pos:column="20">isFilePresent</name> <op:operator pos:line="212" pos:column="34">==</op:operator> <lit:literal type="boolean" pos:line="212" pos:column="37">false</lit:literal></expr>)</condition><then><block pos:line="212" pos:column="43">{
			<expr_stmt><expr><call><name><name pos:line="213" pos:column="25">System</name><op:operator pos:line="213" pos:column="31">.</op:operator><name pos:line="213" pos:column="32">out</name><op:operator pos:line="213" pos:column="35">.</op:operator><name pos:line="213" pos:column="36">println</name></name><argument_list pos:line="213" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="213" pos:column="44">"The file is not present"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="214" pos:column="19">else <block pos:line="214" pos:column="24">{
<comment type="line" pos:line="215" pos:column="1">//			@DBAnnotation (</comment>
<comment type="line" pos:line="216" pos:column="1">//					variable = {"fileID"},  </comment>
<comment type="line" pos:line="217" pos:column="1">//					table = "files", </comment>
<comment type="line" pos:line="218" pos:column="1">//					column = {"FileID"}, </comment>
<comment type="line" pos:line="219" pos:column="1">//					isSource = false)</comment>
			
			<decl_stmt><decl><type><name pos:line="221" pos:column="25">String</name></type> <name pos:line="221" pos:column="32">SQLFileSelect</name> <init pos:line="221" pos:column="46">= <expr><lit:literal type="string" pos:line="221" pos:column="48">"DELETE FROM files WHERE FileID = ?;"</lit:literal></expr></init></decl>;</decl_stmt>
			<try pos:line="222" pos:column="25">try <block pos:line="222" pos:column="29">{
				<decl_stmt><decl><type><name pos:line="223" pos:column="33">Connection</name></type> <name pos:line="223" pos:column="44">conn</name> <init pos:line="223" pos:column="49">= <expr><call><name><name pos:line="223" pos:column="51">Database</name><op:operator pos:line="223" pos:column="59">.</op:operator><name pos:line="223" pos:column="60">getConnection</name></name><argument_list pos:line="223" pos:column="73">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<try pos:line="224" pos:column="33">try <block pos:line="224" pos:column="37">{
					<if pos:line="225" pos:column="41">if <condition pos:line="225" pos:column="44">(<expr><name pos:line="225" pos:column="45">conn</name> <op:operator pos:line="225" pos:column="50">!=</op:operator> <lit:literal type="null" pos:line="225" pos:column="53">null</lit:literal></expr>)</condition><then pos:line="225" pos:column="58"> <block pos:line="225" pos:column="59">{
						<decl_stmt><decl><type><name pos:line="226" pos:column="49">PreparedStatement</name></type> <name pos:line="226" pos:column="67">statement</name> <init pos:line="226" pos:column="77">= <expr><call><name><name pos:line="226" pos:column="79">conn</name><op:operator pos:line="226" pos:column="83">.</op:operator><name pos:line="226" pos:column="84">prepareStatement</name></name><argument_list pos:line="226" pos:column="100">(<argument><expr><name pos:line="226" pos:column="101">SQLFileSelect</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><call><name><name pos:line="227" pos:column="49">DBAnnotation</name><op:operator pos:line="227" pos:column="61">.</op:operator><name pos:line="227" pos:column="62">annoate</name></name><argument_list pos:line="227" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="227" pos:column="70">"fileID"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="227" pos:column="80">"files"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="227" pos:column="89">"FileID"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="227" pos:column="99">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="228" pos:column="49">statement</name><op:operator pos:line="228" pos:column="58">.</op:operator><name pos:line="228" pos:column="59">setInt</name></name><argument_list pos:line="228" pos:column="65">(<argument><expr><lit:literal type="number" pos:line="228" pos:column="66">1</lit:literal></expr></argument>, <argument><expr><name pos:line="228" pos:column="69">fileID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>				
						<expr_stmt><expr><call><name><name pos:line="229" pos:column="49">statement</name><op:operator pos:line="229" pos:column="58">.</op:operator><name pos:line="229" pos:column="59">executeUpdate</name></name><argument_list pos:line="229" pos:column="72">()</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="230" pos:column="49">Database</name><op:operator pos:line="230" pos:column="57">.</op:operator><name pos:line="230" pos:column="58">commitTransaction</name></name><argument_list pos:line="230" pos:column="75">(<argument><expr><name pos:line="230" pos:column="76">conn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name pos:line="231" pos:column="49">fileDeleted</name> <op:operator pos:line="231" pos:column="61">=</op:operator> <lit:literal type="boolean" pos:line="231" pos:column="63">true</lit:literal></expr>;</expr_stmt>
					}</block></then></if>
				}</block> <catch pos:line="233" pos:column="35">catch <parameter_list pos:line="233" pos:column="41">(<param><decl><type><name pos:line="233" pos:column="42">SQLException</name></type> <name pos:line="233" pos:column="55">e</name></decl></param>)</parameter_list> <block pos:line="233" pos:column="58">{
					<expr_stmt><expr><call><name><name pos:line="234" pos:column="41">System</name><op:operator pos:line="234" pos:column="47">.</op:operator><name pos:line="234" pos:column="48">out</name><op:operator pos:line="234" pos:column="51">.</op:operator><name pos:line="234" pos:column="52">println</name></name><argument_list pos:line="234" pos:column="59">(<argument><expr><name pos:line="234" pos:column="60">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="235" pos:column="41">Database</name><op:operator pos:line="235" pos:column="49">.</op:operator><name pos:line="235" pos:column="50">rollBackTransaction</name></name><argument_list pos:line="235" pos:column="69">(<argument><expr><name pos:line="235" pos:column="70">conn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
	
			}</block> <catch pos:line="238" pos:column="27">catch <parameter_list pos:line="238" pos:column="33">(<param><decl><type><name pos:line="238" pos:column="34">Exception</name></type> <name pos:line="238" pos:column="44">e</name></decl></param>)</parameter_list> <block pos:line="238" pos:column="47">{
				<expr_stmt><expr><call><name><name pos:line="239" pos:column="33">System</name><op:operator pos:line="239" pos:column="39">.</op:operator><name pos:line="239" pos:column="40">out</name><op:operator pos:line="239" pos:column="43">.</op:operator><name pos:line="239" pos:column="44">println</name></name><argument_list pos:line="239" pos:column="51">(<argument><expr><name pos:line="239" pos:column="52">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></catch></try>
	
		}</block></else></if>
		
		<return pos:line="244" pos:column="17">return <expr><name pos:line="244" pos:column="24">fileDeleted</name></expr>;</return>
	}</block></function>
	
	<comment type="line" pos:line="247" pos:column="9">// This function modifes the file location of an existing file to the new location</comment>
	<function><type><specifier pos:line="248" pos:column="9">public</specifier> <name pos:line="248" pos:column="16">boolean</name></type> <name pos:line="248" pos:column="24">modifyFileLocation</name><parameter_list pos:line="248" pos:column="42">(<param><decl><type><name pos:line="248" pos:column="43">String</name></type> <name pos:line="248" pos:column="50">newFileLocation</name></decl></param>)</parameter_list><block pos:line="248" pos:column="66">{
		<decl_stmt><decl><type><name pos:line="249" pos:column="17">boolean</name></type> <name pos:line="249" pos:column="25">fileLocationModified</name> <init pos:line="249" pos:column="46">= <expr><lit:literal type="boolean" pos:line="249" pos:column="48">false</lit:literal></expr></init></decl>;</decl_stmt>
		
		<decl_stmt><decl><type><name pos:line="251" pos:column="17">int</name></type> <name pos:line="251" pos:column="21">fileID</name> <init pos:line="251" pos:column="28">= <expr><call><name><name pos:line="251" pos:column="30">this</name><op:operator pos:line="251" pos:column="34">.</op:operator><name pos:line="251" pos:column="35">getFileID</name></name><argument_list pos:line="251" pos:column="44">()</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<decl_stmt><decl><type><name pos:line="253" pos:column="17">String</name></type> <name pos:line="253" pos:column="24">fileName</name> <init pos:line="253" pos:column="33">= <expr><call><name><name pos:line="253" pos:column="35">this</name><op:operator pos:line="253" pos:column="39">.</op:operator><name pos:line="253" pos:column="40">getFileName</name></name><argument_list pos:line="253" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="254" pos:column="17">String</name></type> <name pos:line="254" pos:column="24">fileLocation</name> <init pos:line="254" pos:column="37">= <expr><call><name><name pos:line="254" pos:column="39">this</name><op:operator pos:line="254" pos:column="43">.</op:operator><name pos:line="254" pos:column="44">getFileLocation</name></name><argument_list pos:line="254" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="255" pos:column="17">int</name></type> <name pos:line="255" pos:column="21">offerID</name> <init pos:line="255" pos:column="29">= <expr><call><name><name pos:line="255" pos:column="31">this</name><op:operator pos:line="255" pos:column="35">.</op:operator><name pos:line="255" pos:column="36">getOfferID</name></name><argument_list pos:line="255" pos:column="46">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="256" pos:column="17">boolean</name></type> <name pos:line="256" pos:column="25">isFilePresent</name> <init pos:line="256" pos:column="39">= <expr><call><name pos:line="256" pos:column="41">isFilePresent</name><argument_list pos:line="256" pos:column="54">(<argument><expr><name pos:line="256" pos:column="55">fileName</name></expr></argument>,<argument><expr><name pos:line="256" pos:column="64">fileLocation</name></expr></argument>,<argument><expr><name pos:line="256" pos:column="77">offerID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="257" pos:column="17">if<condition pos:line="257" pos:column="19">(<expr><name pos:line="257" pos:column="20">isFilePresent</name> <op:operator pos:line="257" pos:column="34">==</op:operator> <lit:literal type="boolean" pos:line="257" pos:column="37">false</lit:literal></expr>)</condition><then><block pos:line="257" pos:column="43">{
			<expr_stmt><expr><call><name><name pos:line="258" pos:column="25">System</name><op:operator pos:line="258" pos:column="31">.</op:operator><name pos:line="258" pos:column="32">out</name><op:operator pos:line="258" pos:column="35">.</op:operator><name pos:line="258" pos:column="36">println</name></name><argument_list pos:line="258" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="258" pos:column="44">"The file is not present"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="259" pos:column="19">else <block pos:line="259" pos:column="24">{
<comment type="line" pos:line="260" pos:column="1">//			@DBAnnotation (</comment>
<comment type="line" pos:line="261" pos:column="1">//					variable = {"fileID","fileLocation"},  </comment>
<comment type="line" pos:line="262" pos:column="1">//					table = "files", </comment>
<comment type="line" pos:line="263" pos:column="1">//					column = {"FileID","FileLocation"}, </comment>
<comment type="line" pos:line="264" pos:column="1">//					isSource = false)</comment>
			
			<decl_stmt><decl><type><name pos:line="266" pos:column="25">String</name></type> <name pos:line="266" pos:column="32">SQLFileSelect</name> <init pos:line="266" pos:column="46">= <expr><lit:literal type="string" pos:line="266" pos:column="48">"UPDATE files SET `FileLocation`= ? WHERE `FileID`= ? ;"</lit:literal></expr></init></decl>;</decl_stmt>
			<try pos:line="267" pos:column="25">try <block pos:line="267" pos:column="29">{
				<decl_stmt><decl><type><name pos:line="268" pos:column="33">Connection</name></type> <name pos:line="268" pos:column="44">conn</name> <init pos:line="268" pos:column="49">= <expr><call><name><name pos:line="268" pos:column="51">Database</name><op:operator pos:line="268" pos:column="59">.</op:operator><name pos:line="268" pos:column="60">getConnection</name></name><argument_list pos:line="268" pos:column="73">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<try pos:line="269" pos:column="33">try <block pos:line="269" pos:column="37">{
					<if pos:line="270" pos:column="41">if <condition pos:line="270" pos:column="44">(<expr><name pos:line="270" pos:column="45">conn</name> <op:operator pos:line="270" pos:column="50">!=</op:operator> <lit:literal type="null" pos:line="270" pos:column="53">null</lit:literal></expr>)</condition><then pos:line="270" pos:column="58"> <block pos:line="270" pos:column="59">{
						<decl_stmt><decl><type><name pos:line="271" pos:column="49">PreparedStatement</name></type> <name pos:line="271" pos:column="67">statement</name> <init pos:line="271" pos:column="77">= <expr><call><name><name pos:line="271" pos:column="79">conn</name><op:operator pos:line="271" pos:column="83">.</op:operator><name pos:line="271" pos:column="84">prepareStatement</name></name><argument_list pos:line="271" pos:column="100">(<argument><expr><name pos:line="271" pos:column="101">SQLFileSelect</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><call><name><name pos:line="272" pos:column="49">DBAnnotation</name><op:operator pos:line="272" pos:column="61">.</op:operator><name pos:line="272" pos:column="62">annoate</name></name><argument_list pos:line="272" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="272" pos:column="70">"newFileLocation"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="272" pos:column="89">"files"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="272" pos:column="98">"FileLocation"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="272" pos:column="114">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="273" pos:column="49">statement</name><op:operator pos:line="273" pos:column="58">.</op:operator><name pos:line="273" pos:column="59">setString</name></name><argument_list pos:line="273" pos:column="68">(<argument><expr><lit:literal type="number" pos:line="273" pos:column="69">1</lit:literal></expr></argument>, <argument><expr><name pos:line="273" pos:column="72">newFileLocation</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="274" pos:column="49">DBAnnotation</name><op:operator pos:line="274" pos:column="61">.</op:operator><name pos:line="274" pos:column="62">annoate</name></name><argument_list pos:line="274" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="274" pos:column="70">"fileID"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="274" pos:column="80">"files"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="274" pos:column="89">"FileID"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="274" pos:column="99">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="275" pos:column="49">statement</name><op:operator pos:line="275" pos:column="58">.</op:operator><name pos:line="275" pos:column="59">setInt</name></name><argument_list pos:line="275" pos:column="65">(<argument><expr><lit:literal type="number" pos:line="275" pos:column="66">2</lit:literal></expr></argument>, <argument><expr><name pos:line="275" pos:column="69">fileID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>				
						<expr_stmt><expr><call><name><name pos:line="276" pos:column="49">statement</name><op:operator pos:line="276" pos:column="58">.</op:operator><name pos:line="276" pos:column="59">executeUpdate</name></name><argument_list pos:line="276" pos:column="72">()</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="277" pos:column="49">Database</name><op:operator pos:line="277" pos:column="57">.</op:operator><name pos:line="277" pos:column="58">commitTransaction</name></name><argument_list pos:line="277" pos:column="75">(<argument><expr><name pos:line="277" pos:column="76">conn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name pos:line="278" pos:column="49">fileLocationModified</name> <op:operator pos:line="278" pos:column="70">=</op:operator> <lit:literal type="boolean" pos:line="278" pos:column="72">true</lit:literal></expr>;</expr_stmt>
					}</block></then></if>
				}</block> <catch pos:line="280" pos:column="35">catch <parameter_list pos:line="280" pos:column="41">(<param><decl><type><name pos:line="280" pos:column="42">SQLException</name></type> <name pos:line="280" pos:column="55">e</name></decl></param>)</parameter_list> <block pos:line="280" pos:column="58">{
					<expr_stmt><expr><call><name><name pos:line="281" pos:column="41">System</name><op:operator pos:line="281" pos:column="47">.</op:operator><name pos:line="281" pos:column="48">out</name><op:operator pos:line="281" pos:column="51">.</op:operator><name pos:line="281" pos:column="52">println</name></name><argument_list pos:line="281" pos:column="59">(<argument><expr><name pos:line="281" pos:column="60">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="282" pos:column="41">Database</name><op:operator pos:line="282" pos:column="49">.</op:operator><name pos:line="282" pos:column="50">rollBackTransaction</name></name><argument_list pos:line="282" pos:column="69">(<argument><expr><name pos:line="282" pos:column="70">conn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
	
			}</block> <catch pos:line="285" pos:column="27">catch <parameter_list pos:line="285" pos:column="33">(<param><decl><type><name pos:line="285" pos:column="34">Exception</name></type> <name pos:line="285" pos:column="44">e</name></decl></param>)</parameter_list> <block pos:line="285" pos:column="47">{
				<expr_stmt><expr><call><name><name pos:line="286" pos:column="33">System</name><op:operator pos:line="286" pos:column="39">.</op:operator><name pos:line="286" pos:column="40">out</name><op:operator pos:line="286" pos:column="43">.</op:operator><name pos:line="286" pos:column="44">println</name></name><argument_list pos:line="286" pos:column="51">(<argument><expr><name pos:line="286" pos:column="52">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></catch></try>
	
		}</block></else></if>
	
		<return pos:line="291" pos:column="17">return <expr><name pos:line="291" pos:column="24">fileLocationModified</name></expr>;</return>
	}</block></function>
	
	<comment type="line" pos:line="294" pos:column="9">// This function retrives the file details from the File table</comment>
	<function><type><specifier pos:line="295" pos:column="9">public</specifier> <specifier pos:line="295" pos:column="16">static</specifier> <name pos:line="295" pos:column="23">int</name></type> <name pos:line="295" pos:column="27">getFileIDFromDB</name><parameter_list pos:line="295" pos:column="42">(<param><decl><type><name pos:line="295" pos:column="43">String</name></type> <name pos:line="295" pos:column="50">fileName</name></decl></param>,<param><decl><type><name pos:line="295" pos:column="59">String</name></type> <name pos:line="295" pos:column="66">fileLocation</name></decl></param>)</parameter_list><block pos:line="295" pos:column="79">{
		<decl_stmt><decl><type><name pos:line="296" pos:column="17">int</name></type> <name pos:line="296" pos:column="21">fileID</name> <init pos:line="296" pos:column="28">= <expr><lit:literal type="number" pos:line="296" pos:column="30">0</lit:literal></expr></init></decl>;</decl_stmt>
		
<comment type="line" pos:line="298" pos:column="1">//		@DBAnnotation (</comment>
<comment type="line" pos:line="299" pos:column="1">//				variable = {"fileID", "fileName","fileLocation"},  </comment>
<comment type="line" pos:line="300" pos:column="1">//				table = "files", </comment>
<comment type="line" pos:line="301" pos:column="1">//				column = {"FileID","FileName","FileLocation"}, </comment>
<comment type="line" pos:line="302" pos:column="1">//				isSource = {true})</comment>
		
		<decl_stmt><decl><type><name pos:line="304" pos:column="17">String</name></type> <name pos:line="304" pos:column="24">SQLFileSelect</name> <init pos:line="304" pos:column="38">= <expr><lit:literal type="string" pos:line="304" pos:column="40">"SELECT FileID FROM files WHERE FileName = ? AND FileLocation = ?;"</lit:literal></expr></init></decl>;</decl_stmt>
		<try pos:line="305" pos:column="17">try <block pos:line="305" pos:column="21">{
			<decl_stmt><decl><type><name pos:line="306" pos:column="25">Connection</name></type> <name pos:line="306" pos:column="36">conn</name> <init pos:line="306" pos:column="41">= <expr><call><name><name pos:line="306" pos:column="43">Database</name><op:operator pos:line="306" pos:column="51">.</op:operator><name pos:line="306" pos:column="52">getConnection</name></name><argument_list pos:line="306" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<try pos:line="307" pos:column="25">try <block pos:line="307" pos:column="29">{
				<if pos:line="308" pos:column="33">if <condition pos:line="308" pos:column="36">(<expr><name pos:line="308" pos:column="37">conn</name> <op:operator pos:line="308" pos:column="42">!=</op:operator> <lit:literal type="null" pos:line="308" pos:column="45">null</lit:literal></expr>)</condition><then pos:line="308" pos:column="50"> <block pos:line="308" pos:column="51">{
					<decl_stmt><decl><type><name pos:line="309" pos:column="41">PreparedStatement</name></type> <name pos:line="309" pos:column="59">statement</name> <init pos:line="309" pos:column="69">= <expr><call><name><name pos:line="309" pos:column="71">conn</name><op:operator pos:line="309" pos:column="75">.</op:operator><name pos:line="309" pos:column="76">prepareStatement</name></name><argument_list pos:line="309" pos:column="92">(<argument><expr><name pos:line="309" pos:column="93">SQLFileSelect</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="310" pos:column="41">DBAnnotation</name><op:operator pos:line="310" pos:column="53">.</op:operator><name pos:line="310" pos:column="54">annoate</name></name><argument_list pos:line="310" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="310" pos:column="62">"fileName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="310" pos:column="74">"files"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="310" pos:column="83">"FileName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="310" pos:column="95">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="311" pos:column="41">statement</name><op:operator pos:line="311" pos:column="50">.</op:operator><name pos:line="311" pos:column="51">setString</name></name><argument_list pos:line="311" pos:column="60">(<argument><expr><lit:literal type="number" pos:line="311" pos:column="61">1</lit:literal></expr></argument>, <argument><expr><name pos:line="311" pos:column="64">fileName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="312" pos:column="41">DBAnnotation</name><op:operator pos:line="312" pos:column="53">.</op:operator><name pos:line="312" pos:column="54">annoate</name></name><argument_list pos:line="312" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="312" pos:column="62">"fileLocation"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="312" pos:column="78">"files"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="312" pos:column="87">"FileLocation"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="312" pos:column="103">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="313" pos:column="41">statement</name><op:operator pos:line="313" pos:column="50">.</op:operator><name pos:line="313" pos:column="51">setString</name></name><argument_list pos:line="313" pos:column="60">(<argument><expr><lit:literal type="number" pos:line="313" pos:column="61">2</lit:literal></expr></argument>, <argument><expr><name pos:line="313" pos:column="64">fileLocation</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
					<decl_stmt><decl><type><name pos:line="315" pos:column="41">ResultSet</name></type> <name pos:line="315" pos:column="51">rs</name> <init pos:line="315" pos:column="54">= <expr><call><name><name pos:line="315" pos:column="56">statement</name><op:operator pos:line="315" pos:column="65">.</op:operator><name pos:line="315" pos:column="66">executeQuery</name></name><argument_list pos:line="315" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>
					
					<while pos:line="317" pos:column="41">while<condition pos:line="317" pos:column="46">(<expr><call><name><name pos:line="317" pos:column="47">rs</name><op:operator pos:line="317" pos:column="49">.</op:operator><name pos:line="317" pos:column="50">next</name></name><argument_list pos:line="317" pos:column="54">()</argument_list></call></expr>)</condition><block pos:line="317" pos:column="57">{
						<expr_stmt><expr><name pos:line="318" pos:column="49">fileID</name> <op:operator pos:line="318" pos:column="56">=</op:operator> <call><name><name pos:line="318" pos:column="58">rs</name><op:operator pos:line="318" pos:column="60">.</op:operator><name pos:line="318" pos:column="61">getInt</name></name><argument_list pos:line="318" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="318" pos:column="68">"FileID"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></while>
				}</block></then></if>
			}</block> <catch pos:line="321" pos:column="27">catch <parameter_list pos:line="321" pos:column="33">(<param><decl><type><name pos:line="321" pos:column="34">SQLException</name></type> <name pos:line="321" pos:column="47">e</name></decl></param>)</parameter_list> <block pos:line="321" pos:column="50">{
				<expr_stmt><expr><call><name><name pos:line="322" pos:column="33">System</name><op:operator pos:line="322" pos:column="39">.</op:operator><name pos:line="322" pos:column="40">out</name><op:operator pos:line="322" pos:column="43">.</op:operator><name pos:line="322" pos:column="44">println</name></name><argument_list pos:line="322" pos:column="51">(<argument><expr><name pos:line="322" pos:column="52">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></catch></try>
	
		}</block> <catch pos:line="325" pos:column="19">catch <parameter_list pos:line="325" pos:column="25">(<param><decl><type><name pos:line="325" pos:column="26">Exception</name></type> <name pos:line="325" pos:column="36">e</name></decl></param>)</parameter_list> <block pos:line="325" pos:column="39">{
			<expr_stmt><expr><call><name><name pos:line="326" pos:column="25">System</name><op:operator pos:line="326" pos:column="31">.</op:operator><name pos:line="326" pos:column="32">out</name><op:operator pos:line="326" pos:column="35">.</op:operator><name pos:line="326" pos:column="36">println</name></name><argument_list pos:line="326" pos:column="43">(<argument><expr><name pos:line="326" pos:column="44">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></catch></try>
		
		<return pos:line="329" pos:column="17">return <expr><name pos:line="329" pos:column="24">fileID</name></expr>;</return>
	}</block></function>
	
	<comment type="line" pos:line="332" pos:column="9">// Get a list of files for a single course</comment>
	<function><type><specifier pos:line="333" pos:column="9">public</specifier> <specifier pos:line="333" pos:column="16">static</specifier> <name><name pos:line="333" pos:column="23">ArrayList</name><argument_list pos:line="333" pos:column="32">&lt;<argument><name pos:line="333" pos:column="33">File</name></argument>&gt;</argument_list></name></type> <name pos:line="333" pos:column="39">getFiles</name><parameter_list pos:line="333" pos:column="47">(<param><decl><type><name pos:line="333" pos:column="48">int</name></type> <name pos:line="333" pos:column="52">offerID</name></decl></param>)</parameter_list><block pos:line="333" pos:column="60">{
<comment type="line" pos:line="334" pos:column="1">//		</comment>
<comment type="line" pos:line="335" pos:column="1">//		@DBAnnotation (</comment>
<comment type="line" pos:line="336" pos:column="1">//				variable = {"fileID", "fileName","fileLocation", "offerID"},  </comment>
<comment type="line" pos:line="337" pos:column="1">//				table = "files", </comment>
<comment type="line" pos:line="338" pos:column="1">//				column = {"FileID","FileName","FileLocation", "OfferID"}, </comment>
<comment type="line" pos:line="339" pos:column="1">//				isSource = {false,false,false,true})</comment>
		
		<decl_stmt><decl><type><name><name pos:line="341" pos:column="17">ArrayList</name><argument_list pos:line="341" pos:column="26">&lt;<argument><name pos:line="341" pos:column="27">File</name></argument>&gt;</argument_list></name></type> <name pos:line="341" pos:column="33">courseFiles</name> <init pos:line="341" pos:column="45">= <expr><op:operator pos:line="341" pos:column="47">new</op:operator> <call><name><name pos:line="341" pos:column="51">ArrayList</name><argument_list pos:line="341" pos:column="60">&lt;<argument><name pos:line="341" pos:column="61">File</name></argument>&gt;</argument_list></name><argument_list pos:line="341" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="342" pos:column="17">int</name></type> <name pos:line="342" pos:column="21">fileID</name> <init pos:line="342" pos:column="28">= <expr><lit:literal type="number" pos:line="342" pos:column="30">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="343" pos:column="17">String</name></type> <name pos:line="343" pos:column="24">fileName</name> <init pos:line="343" pos:column="33">= <expr><lit:literal type="null" pos:line="343" pos:column="35">null</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="344" pos:column="17">String</name></type> <name pos:line="344" pos:column="24">fileLocation</name> <init pos:line="344" pos:column="37">= <expr><lit:literal type="null" pos:line="344" pos:column="39">null</lit:literal></expr></init></decl>;</decl_stmt>
		
		<decl_stmt><decl><type><name pos:line="346" pos:column="17">String</name></type> <name pos:line="346" pos:column="24">SQLFileSelect</name> <init pos:line="346" pos:column="38">= <expr><lit:literal type="string" pos:line="346" pos:column="40">"SELECT FileID, FileName, FileLocation FROM files WHERE OfferID = ?;"</lit:literal></expr></init></decl>;</decl_stmt>
		<try pos:line="347" pos:column="17">try <block pos:line="347" pos:column="21">{
			<decl_stmt><decl><type><name pos:line="348" pos:column="25">Connection</name></type> <name pos:line="348" pos:column="36">conn</name> <init pos:line="348" pos:column="41">= <expr><call><name><name pos:line="348" pos:column="43">Database</name><op:operator pos:line="348" pos:column="51">.</op:operator><name pos:line="348" pos:column="52">getConnection</name></name><argument_list pos:line="348" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<try pos:line="349" pos:column="25">try <block pos:line="349" pos:column="29">{
				<if pos:line="350" pos:column="33">if <condition pos:line="350" pos:column="36">(<expr><name pos:line="350" pos:column="37">conn</name> <op:operator pos:line="350" pos:column="42">!=</op:operator> <lit:literal type="null" pos:line="350" pos:column="45">null</lit:literal></expr>)</condition><then pos:line="350" pos:column="50"> <block pos:line="350" pos:column="51">{
					<decl_stmt><decl><type><name pos:line="351" pos:column="41">PreparedStatement</name></type> <name pos:line="351" pos:column="59">statement</name> <init pos:line="351" pos:column="69">= <expr><call><name><name pos:line="351" pos:column="71">conn</name><op:operator pos:line="351" pos:column="75">.</op:operator><name pos:line="351" pos:column="76">prepareStatement</name></name><argument_list pos:line="351" pos:column="92">(<argument><expr><name pos:line="351" pos:column="93">SQLFileSelect</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="352" pos:column="41">DBAnnotation</name><op:operator pos:line="352" pos:column="53">.</op:operator><name pos:line="352" pos:column="54">annoate</name></name><argument_list pos:line="352" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="352" pos:column="62">"offerID"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="352" pos:column="73">"files"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="352" pos:column="82">"OfferID"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="352" pos:column="93">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="353" pos:column="41">statement</name><op:operator pos:line="353" pos:column="50">.</op:operator><name pos:line="353" pos:column="51">setInt</name></name><argument_list pos:line="353" pos:column="57">(<argument><expr><lit:literal type="number" pos:line="353" pos:column="58">1</lit:literal></expr></argument>, <argument><expr><name pos:line="353" pos:column="61">offerID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
					<decl_stmt><decl><type><name pos:line="355" pos:column="41">ResultSet</name></type> <name pos:line="355" pos:column="51">rs</name> <init pos:line="355" pos:column="54">= <expr><call><name><name pos:line="355" pos:column="56">statement</name><op:operator pos:line="355" pos:column="65">.</op:operator><name pos:line="355" pos:column="66">executeQuery</name></name><argument_list pos:line="355" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>
					
					<while pos:line="357" pos:column="41">while<condition pos:line="357" pos:column="46">(<expr><call><name><name pos:line="357" pos:column="47">rs</name><op:operator pos:line="357" pos:column="49">.</op:operator><name pos:line="357" pos:column="50">next</name></name><argument_list pos:line="357" pos:column="54">()</argument_list></call></expr>)</condition><block pos:line="357" pos:column="57">{
						<expr_stmt><expr><call><name><name pos:line="358" pos:column="49">DBAnnotation</name><op:operator pos:line="358" pos:column="61">.</op:operator><name pos:line="358" pos:column="62">annoate</name></name><argument_list pos:line="358" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="358" pos:column="70">"fileID"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="358" pos:column="80">"files"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="358" pos:column="89">"FileID"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="358" pos:column="99">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name pos:line="359" pos:column="49">fileID</name> <op:operator pos:line="359" pos:column="56">=</op:operator> <call><name><name pos:line="359" pos:column="58">rs</name><op:operator pos:line="359" pos:column="60">.</op:operator><name pos:line="359" pos:column="61">getInt</name></name><argument_list pos:line="359" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="359" pos:column="68">"FileID"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="360" pos:column="49">DBAnnotation</name><op:operator pos:line="360" pos:column="61">.</op:operator><name pos:line="360" pos:column="62">annoate</name></name><argument_list pos:line="360" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="360" pos:column="70">"fileName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="360" pos:column="82">"files"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="360" pos:column="91">"FileName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="360" pos:column="103">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name pos:line="361" pos:column="49">fileName</name> <op:operator pos:line="361" pos:column="58">=</op:operator> <call><name><name pos:line="361" pos:column="60">rs</name><op:operator pos:line="361" pos:column="62">.</op:operator><name pos:line="361" pos:column="63">getString</name></name><argument_list pos:line="361" pos:column="72">(<argument><expr><lit:literal type="string" pos:line="361" pos:column="73">"FileName"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="362" pos:column="49">DBAnnotation</name><op:operator pos:line="362" pos:column="61">.</op:operator><name pos:line="362" pos:column="62">annoate</name></name><argument_list pos:line="362" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="362" pos:column="70">"fileLocation"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="362" pos:column="86">"files"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="362" pos:column="95">"FileLocation"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="362" pos:column="111">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name pos:line="363" pos:column="49">fileLocation</name> <op:operator pos:line="363" pos:column="62">=</op:operator> <call><name><name pos:line="363" pos:column="64">rs</name><op:operator pos:line="363" pos:column="66">.</op:operator><name pos:line="363" pos:column="67">getString</name></name><argument_list pos:line="363" pos:column="76">(<argument><expr><lit:literal type="string" pos:line="363" pos:column="77">"FileLocation"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<comment type="line" pos:line="364" pos:column="49">// String newFileLocation = fileLocation.replace("/","//");</comment>
						<decl_stmt><decl><type><name pos:line="365" pos:column="49">File</name></type> <name pos:line="365" pos:column="54">file</name> <init pos:line="365" pos:column="59">= <expr><op:operator pos:line="365" pos:column="61">new</op:operator> <call><name pos:line="365" pos:column="65">File</name><argument_list pos:line="365" pos:column="69">(<argument><expr><name pos:line="365" pos:column="70">fileID</name></expr></argument>, <argument><expr><name pos:line="365" pos:column="78">fileName</name></expr></argument>, <argument><expr><name pos:line="365" pos:column="88">fileLocation</name></expr></argument>, <argument><expr><name pos:line="365" pos:column="102">offerID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><call><name><name pos:line="366" pos:column="49">courseFiles</name><op:operator pos:line="366" pos:column="60">.</op:operator><name pos:line="366" pos:column="61">add</name></name><argument_list pos:line="366" pos:column="64">(<argument><expr><name pos:line="366" pos:column="65">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></while>
				}</block></then></if>
			}</block> <catch pos:line="369" pos:column="27">catch <parameter_list pos:line="369" pos:column="33">(<param><decl><type><name pos:line="369" pos:column="34">SQLException</name></type> <name pos:line="369" pos:column="47">e</name></decl></param>)</parameter_list> <block pos:line="369" pos:column="50">{
				<expr_stmt><expr><call><name><name pos:line="370" pos:column="33">System</name><op:operator pos:line="370" pos:column="39">.</op:operator><name pos:line="370" pos:column="40">out</name><op:operator pos:line="370" pos:column="43">.</op:operator><name pos:line="370" pos:column="44">println</name></name><argument_list pos:line="370" pos:column="51">(<argument><expr><name pos:line="370" pos:column="52">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></catch></try>
	
		}</block> <catch pos:line="373" pos:column="19">catch <parameter_list pos:line="373" pos:column="25">(<param><decl><type><name pos:line="373" pos:column="26">Exception</name></type> <name pos:line="373" pos:column="36">e</name></decl></param>)</parameter_list> <block pos:line="373" pos:column="39">{
			<expr_stmt><expr><call><name><name pos:line="374" pos:column="25">System</name><op:operator pos:line="374" pos:column="31">.</op:operator><name pos:line="374" pos:column="32">out</name><op:operator pos:line="374" pos:column="35">.</op:operator><name pos:line="374" pos:column="36">println</name></name><argument_list pos:line="374" pos:column="43">(<argument><expr><name pos:line="374" pos:column="44">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></catch></try>
		
		<return pos:line="377" pos:column="17">return <expr><name pos:line="377" pos:column="24">courseFiles</name></expr>;</return>
		
	}</block></function>
	
	<function><type><specifier pos:line="381" pos:column="9">public</specifier> <specifier pos:line="381" pos:column="16">static</specifier> <name pos:line="381" pos:column="23">void</name></type> <name pos:line="381" pos:column="28">main</name><parameter_list pos:line="381" pos:column="32">(<param><decl><type><name><name pos:line="381" pos:column="33">String</name><index pos:line="381" pos:column="39">[]</index></name></type> <name pos:line="381" pos:column="42">args</name></decl></param>)</parameter_list><block pos:line="381" pos:column="47">{
<comment type="line" pos:line="382" pos:column="1">//		String fileName = "CS442Syllabus";</comment>
<comment type="line" pos:line="383" pos:column="1">//		String fileLocation = "C:/CS442";</comment>
<comment type="line" pos:line="384" pos:column="1">//		int offerID = 123456;</comment>
<comment type="line" pos:line="385" pos:column="1">//		</comment>
<comment type="line" pos:line="386" pos:column="1">//		File file = new File(fileName,fileLocation,offerID);</comment>
<comment type="line" pos:line="387" pos:column="1">//		</comment>
<comment type="line" pos:line="388" pos:column="1">//		boolean fileAdded = File.addFileToDB(fileName, fileLocation, offerID);</comment>
<comment type="line" pos:line="389" pos:column="1">//		</comment>
<comment type="line" pos:line="390" pos:column="1">//		if(fileAdded == true){</comment>
<comment type="line" pos:line="391" pos:column="1">//			System.out.println("File Added");</comment>
<comment type="line" pos:line="392" pos:column="1">//		} else {</comment>
<comment type="line" pos:line="393" pos:column="1">//			System.out.println("File Not Added");</comment>
<comment type="line" pos:line="394" pos:column="1">//		}</comment>
		
		
		<comment type="line" pos:line="397" pos:column="17">// To test delete function</comment>
<comment type="line" pos:line="398" pos:column="1">//		boolean fileDeleted = file.deleteFileFromDB();</comment>
<comment type="line" pos:line="399" pos:column="1">//		</comment>
<comment type="line" pos:line="400" pos:column="1">//		if(fileDeleted == true){</comment>
<comment type="line" pos:line="401" pos:column="1">//			System.out.println("File Deleted");</comment>
<comment type="line" pos:line="402" pos:column="1">//		} else {</comment>
<comment type="line" pos:line="403" pos:column="1">//			System.out.println("File Not Deleted");</comment>
<comment type="line" pos:line="404" pos:column="1">//		}</comment>
		
		<comment type="line" pos:line="406" pos:column="17">// To test modify location</comment>
<comment type="line" pos:line="407" pos:column="1">//		String newFileLocation = "C:/Courses/CS442";</comment>
<comment type="line" pos:line="408" pos:column="1">//		boolean fileLocationModified = file.modifyFileLocation(newFileLocation); </comment>
<comment type="line" pos:line="409" pos:column="1">//				</comment>
<comment type="line" pos:line="410" pos:column="1">//		</comment>
<comment type="line" pos:line="411" pos:column="1">//		if(fileLocationModified == true){</comment>
<comment type="line" pos:line="412" pos:column="1">//			System.out.println("File Added");</comment>
<comment type="line" pos:line="413" pos:column="1">//		} else {</comment>
<comment type="line" pos:line="414" pos:column="1">//			System.out.println("File Not Added");</comment>
<comment type="line" pos:line="415" pos:column="1">//		}</comment>
		
		<comment type="line" pos:line="417" pos:column="17">// To test get files</comment>
<comment type="line" pos:line="418" pos:column="1">//		 ArrayList&lt;File&gt; files = File.getFiles(offerID); </comment>
<comment type="line" pos:line="419" pos:column="1">//				</comment>
<comment type="line" pos:line="420" pos:column="1">//		</comment>
<comment type="line" pos:line="421" pos:column="1">//		for(File file2: files){</comment>
<comment type="line" pos:line="422" pos:column="1">//			System.out.println(file2.getFileName());</comment>
<comment type="line" pos:line="423" pos:column="1">//		}</comment>
		
	}</block></function>
	
	}</block></class>
	
</unit>
