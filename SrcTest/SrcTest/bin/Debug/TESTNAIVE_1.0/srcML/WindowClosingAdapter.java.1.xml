<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\xinco\src\com\bluecubs\xinco\client\object\WindowClosingAdapter.java" pos:tabs="8"><comment type="block" format="javadoc" pos:line="1" pos:column="1">/**
 *Copyright 2009 blueCubs.com
 *
 *Licensed under the Apache License, Version 2.0 (the "License");
 *you may not use this file except in compliance with the License.
 *You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 *Unless required by applicable law or agreed to in writing, software
 *distributed under the License is distributed on an "AS IS" BASIS,
 *WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *See the License for the specific language governing permissions and
 *limitations under the License.
 *
 *************************************************************
 * This project supports the blueCubs vision of giving back
 * to the community in exchange for free software!
 * More information on: http://www.bluecubs.org
 *************************************************************
 *
 * Name:            WindowClosingAdapter
 *
 * Description:     exits the program correctly 
 *
 * Original Author: Alexander Manes
 * Date:            2004
 *
 * Modifications:
 * 
 * Who?             When?             What?
 * -                -                 -
 *
 *************************************************************
 */</comment>

<package pos:line="37" pos:column="1">package <name><name pos:line="37" pos:column="9">com</name><op:operator pos:line="37" pos:column="12">.</op:operator><name pos:line="37" pos:column="13">bluecubs</name><op:operator pos:line="37" pos:column="21">.</op:operator><name pos:line="37" pos:column="22">xinco</name><op:operator pos:line="37" pos:column="27">.</op:operator><name pos:line="37" pos:column="28">client</name><op:operator pos:line="37" pos:column="34">.</op:operator><name pos:line="37" pos:column="35">object</name></name>;</package>

<import pos:line="39" pos:column="1">import <name><name pos:line="39" pos:column="8">java</name><op:operator pos:line="39" pos:column="12">.</op:operator><name pos:line="39" pos:column="13">awt</name><op:operator pos:line="39" pos:column="16">.</op:operator><name pos:line="39" pos:column="17">event</name></name>.*;</import>

<class><specifier pos:line="41" pos:column="1">public</specifier> class <name pos:line="41" pos:column="14">WindowClosingAdapter</name>
<super><extends pos:line="42" pos:column="1">extends <name pos:line="42" pos:column="9">WindowAdapter</name></extends></super>
<block pos:line="43" pos:column="1">{
 <decl_stmt><decl><type><specifier pos:line="44" pos:column="2">private</specifier> <name pos:line="44" pos:column="10">boolean</name></type> <name pos:line="44" pos:column="18">exitSystem</name></decl>;</decl_stmt>
  <constructor><specifier pos:line="45" pos:column="3">public</specifier> <name pos:line="45" pos:column="10">WindowClosingAdapter</name><parameter_list pos:line="45" pos:column="30">(<param><decl><type><name pos:line="45" pos:column="31">boolean</name></type> <name pos:line="45" pos:column="39">exitSystem</name></decl></param>)</parameter_list>
  <block pos:line="46" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="47" pos:column="5">this</name><op:operator pos:line="47" pos:column="9">.</op:operator><name pos:line="47" pos:column="10">exitSystem</name></name> <op:operator pos:line="47" pos:column="21">=</op:operator> <name pos:line="47" pos:column="23">exitSystem</name></expr>;</expr_stmt>
  }</block></constructor>
 <constructor><specifier pos:line="49" pos:column="2">public</specifier> <name pos:line="49" pos:column="9">WindowClosingAdapter</name><parameter_list pos:line="49" pos:column="29">()</parameter_list>
 <block pos:line="50" pos:column="2">{
   <expr_stmt><expr><call><name pos:line="51" pos:column="4">this</name><argument_list pos:line="51" pos:column="8">(<argument><expr><lit:literal type="boolean" pos:line="51" pos:column="9">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 }</block></constructor>
 <function><type><annotation pos:line="53" pos:column="2">@<name pos:line="53" pos:column="3">Override</name></annotation>
 <specifier pos:line="54" pos:column="2">public</specifier> <name pos:line="54" pos:column="9">void</name></type> <name pos:line="54" pos:column="14">windowClosing</name><parameter_list pos:line="54" pos:column="27">(<param><decl><type><name pos:line="54" pos:column="28">WindowEvent</name></type> <name pos:line="54" pos:column="40">event</name></decl></param>)</parameter_list>
 <block pos:line="55" pos:column="2">{
   <expr_stmt><expr><call><name><name pos:line="56" pos:column="4">event</name><op:operator pos:line="56" pos:column="9">.</op:operator><name pos:line="56" pos:column="10">getWindow</name></name><argument_list pos:line="56" pos:column="19">()</argument_list></call><op:operator pos:line="56" pos:column="21">.</op:operator><call><name pos:line="56" pos:column="22">setVisible</name><argument_list pos:line="56" pos:column="32">(<argument><expr><lit:literal type="boolean" pos:line="56" pos:column="33">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   <expr_stmt><expr><call><name><name pos:line="57" pos:column="4">event</name><op:operator pos:line="57" pos:column="9">.</op:operator><name pos:line="57" pos:column="10">getWindow</name></name><argument_list pos:line="57" pos:column="19">()</argument_list></call><op:operator pos:line="57" pos:column="21">.</op:operator><call><name pos:line="57" pos:column="22">dispose</name><argument_list pos:line="57" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
   <if pos:line="58" pos:column="4">if <condition pos:line="58" pos:column="7">(<expr><name pos:line="58" pos:column="8">exitSystem</name></expr>)</condition><then pos:line="58" pos:column="19"> <block pos:line="58" pos:column="20">{
     <expr_stmt><expr><call><name><name pos:line="59" pos:column="6">System</name><op:operator pos:line="59" pos:column="12">.</op:operator><name pos:line="59" pos:column="13">exit</name></name><argument_list pos:line="59" pos:column="17">(<argument><expr><lit:literal type="number" pos:line="59" pos:column="18">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   }</block></then></if>
 }</block></function>
}</block></class>
</unit>
