<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\xinco\src\com\bluecubs\xinco\core\server\XincoCoreDataTypeAttributeServer.java" pos:tabs="8"><comment type="block" format="javadoc" pos:line="1" pos:column="1">/**
 *Copyright 2009 blueCubs.com
 *
 *Licensed under the Apache License, Version 2.0 (the "License");
 *you may not use this file except in compliance with the License.
 *You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 *Unless required by applicable law or agreed to in writing, software
 *distributed under the License is distributed on an "AS IS" BASIS,
 *WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *See the License for the specific language governing permissions and
 *limitations under the License.
 *
 *************************************************************
 * This project supports the blueCubs vision of giving back
 * to the community in exchange for free software!
 * More information on: http://www.bluecubs.org
 *************************************************************
 *
 * Name:            XincoCoreDataTypeAttributeServer
 *
 * Description:     data type attribute
 *
 * Original Author: Alexander Manes
 * Date:            2004
 *
 * Modifications:
 *
 * Who?             When?             What?
 * -                -                 -
 *
 *************************************************************
 */</comment>
<package pos:line="36" pos:column="1">package <name><name pos:line="36" pos:column="9">com</name><op:operator pos:line="36" pos:column="12">.</op:operator><name pos:line="36" pos:column="13">bluecubs</name><op:operator pos:line="36" pos:column="21">.</op:operator><name pos:line="36" pos:column="22">xinco</name><op:operator pos:line="36" pos:column="27">.</op:operator><name pos:line="36" pos:column="28">core</name><op:operator pos:line="36" pos:column="32">.</op:operator><name pos:line="36" pos:column="33">server</name></name>;</package>

<import pos:line="38" pos:column="1">import <name><name pos:line="38" pos:column="8">java</name><op:operator pos:line="38" pos:column="12">.</op:operator><name pos:line="38" pos:column="13">util</name><op:operator pos:line="38" pos:column="17">.</op:operator><name pos:line="38" pos:column="18">Vector</name></name>;</import>
<import pos:line="39" pos:column="1">import <name><name pos:line="39" pos:column="8">java</name><op:operator pos:line="39" pos:column="12">.</op:operator><name pos:line="39" pos:column="13">sql</name></name>.*;</import>

<import pos:line="41" pos:column="1">import <name><name pos:line="41" pos:column="8">com</name><op:operator pos:line="41" pos:column="11">.</op:operator><name pos:line="41" pos:column="12">bluecubs</name><op:operator pos:line="41" pos:column="20">.</op:operator><name pos:line="41" pos:column="21">xinco</name><op:operator pos:line="41" pos:column="26">.</op:operator><name pos:line="41" pos:column="27">core</name></name>.*;</import>

<class><specifier pos:line="43" pos:column="1">public</specifier> class <name pos:line="43" pos:column="14">XincoCoreDataTypeAttributeServer</name> <super><extends pos:line="43" pos:column="47">extends <name pos:line="43" pos:column="55">XincoCoreDataTypeAttribute</name></extends></super> <block pos:line="43" pos:column="82">{

    <decl_stmt><decl><type><specifier pos:line="45" pos:column="5">private</specifier> <specifier pos:line="45" pos:column="13">static</specifier> <name pos:line="45" pos:column="20">int</name></type> <name pos:line="45" pos:column="24">changer</name> <init pos:line="45" pos:column="32">= <expr><lit:literal type="number" pos:line="45" pos:column="34">0</lit:literal></expr></init></decl>;</decl_stmt>
    <comment type="line" pos:line="46" pos:column="5">//create data type attribute object for data structures</comment>

    <constructor><specifier pos:line="48" pos:column="5">public</specifier> <name pos:line="48" pos:column="12">XincoCoreDataTypeAttributeServer</name><parameter_list pos:line="48" pos:column="44">(<param><decl><type><name pos:line="48" pos:column="45">int</name></type> <name pos:line="48" pos:column="49">attrID1</name></decl></param>, <param><decl><type><name pos:line="48" pos:column="58">int</name></type> <name pos:line="48" pos:column="62">attrID2</name></decl></param>, <param><decl><type><name pos:line="48" pos:column="71">XincoDBManager</name></type> <name pos:line="48" pos:column="86">DBM</name></decl></param>)</parameter_list> <throws pos:line="48" pos:column="91">throws <argument><expr><name pos:line="48" pos:column="98">XincoException</name></expr></argument></throws> <block pos:line="48" pos:column="113">{

        <try pos:line="50" pos:column="9">try <block pos:line="50" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="51" pos:column="13">Statement</name></type> <name pos:line="51" pos:column="23">stmt</name> <init pos:line="51" pos:column="28">= <expr><call><name><name pos:line="51" pos:column="30">DBM</name><op:operator pos:line="51" pos:column="33">.</op:operator><name pos:line="51" pos:column="34">con</name><op:operator pos:line="51" pos:column="37">.</op:operator><name pos:line="51" pos:column="38">createStatement</name></name><argument_list pos:line="51" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="52" pos:column="13">ResultSet</name></type> <name pos:line="52" pos:column="23">rs</name> <init pos:line="52" pos:column="26">= <expr><call><name><name pos:line="52" pos:column="28">stmt</name><op:operator pos:line="52" pos:column="32">.</op:operator><name pos:line="52" pos:column="33">executeQuery</name></name><argument_list pos:line="52" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="52" pos:column="46">"SELECT * FROM xinco_core_data_type_attribute WHERE xinco_core_data_type_id="</lit:literal> <op:operator pos:line="52" pos:column="124">+</op:operator> <name pos:line="52" pos:column="126">attrID1</name> <op:operator pos:line="52" pos:column="134">+</op:operator> <lit:literal type="string" pos:line="52" pos:column="136">" AND attribute_id="</lit:literal> <op:operator pos:line="52" pos:column="157">+</op:operator> <name pos:line="52" pos:column="159">attrID2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:line="54" pos:column="13">//throw exception if no result found</comment>
            <decl_stmt><decl><type><name pos:line="55" pos:column="13">int</name></type> <name pos:line="55" pos:column="17">RowCount</name> <init pos:line="55" pos:column="26">= <expr><lit:literal type="number" pos:line="55" pos:column="28">0</lit:literal></expr></init></decl>;</decl_stmt>
            <while pos:line="56" pos:column="13">while <condition pos:line="56" pos:column="19">(<expr><call><name><name pos:line="56" pos:column="20">rs</name><op:operator pos:line="56" pos:column="22">.</op:operator><name pos:line="56" pos:column="23">next</name></name><argument_list pos:line="56" pos:column="27">()</argument_list></call></expr>)</condition> <block pos:line="56" pos:column="31">{
                <expr_stmt><expr><name pos:line="57" pos:column="17">RowCount</name><op:operator pos:line="57" pos:column="25">++</op:operator></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="58" pos:column="17">setXinco_core_data_type_id</name><argument_list pos:line="58" pos:column="43">(<argument><expr><call><name><name pos:line="58" pos:column="44">rs</name><op:operator pos:line="58" pos:column="46">.</op:operator><name pos:line="58" pos:column="47">getInt</name></name><argument_list pos:line="58" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="58" pos:column="54">"xinco_core_data_type_id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="59" pos:column="17">setAttribute_id</name><argument_list pos:line="59" pos:column="32">(<argument><expr><call><name><name pos:line="59" pos:column="33">rs</name><op:operator pos:line="59" pos:column="35">.</op:operator><name pos:line="59" pos:column="36">getInt</name></name><argument_list pos:line="59" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="59" pos:column="43">"attribute_id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="60" pos:column="17">setDesignation</name><argument_list pos:line="60" pos:column="31">(<argument><expr><call><name><name pos:line="60" pos:column="32">rs</name><op:operator pos:line="60" pos:column="34">.</op:operator><name pos:line="60" pos:column="35">getString</name></name><argument_list pos:line="60" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="60" pos:column="45">"designation"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="61" pos:column="17">setData_type</name><argument_list pos:line="61" pos:column="29">(<argument><expr><call><name><name pos:line="61" pos:column="30">rs</name><op:operator pos:line="61" pos:column="32">.</op:operator><name pos:line="61" pos:column="33">getString</name></name><argument_list pos:line="61" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="61" pos:column="43">"data_type"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="62" pos:column="17">setSize</name><argument_list pos:line="62" pos:column="24">(<argument><expr><call><name><name pos:line="62" pos:column="25">rs</name><op:operator pos:line="62" pos:column="27">.</op:operator><name pos:line="62" pos:column="28">getInt</name></name><argument_list pos:line="62" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="62" pos:column="35">"attr_size"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></while>
            <if pos:line="64" pos:column="13">if <condition pos:line="64" pos:column="16">(<expr><name pos:line="64" pos:column="17">RowCount</name> <op:operator pos:line="64" pos:column="26">&lt;</op:operator> <lit:literal type="number" pos:line="64" pos:column="28">1</lit:literal></expr>)</condition><then pos:line="64" pos:column="30"> <block pos:line="64" pos:column="31">{
                <throw pos:line="65" pos:column="17">throw <expr><op:operator pos:line="65" pos:column="23">new</op:operator> <call><name pos:line="65" pos:column="27">XincoException</name><argument_list pos:line="65" pos:column="41">()</argument_list></call></expr>;</throw>
            }</block></then></if>

            <expr_stmt><expr><call><name><name pos:line="68" pos:column="13">stmt</name><op:operator pos:line="68" pos:column="17">.</op:operator><name pos:line="68" pos:column="18">close</name></name><argument_list pos:line="68" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
        }</block> <catch pos:line="69" pos:column="11">catch <parameter_list pos:line="69" pos:column="17">(<param><decl><type><name pos:line="69" pos:column="18">Exception</name></type> <name pos:line="69" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="69" pos:column="31">{
            <throw pos:line="70" pos:column="13">throw <expr><op:operator pos:line="70" pos:column="19">new</op:operator> <call><name pos:line="70" pos:column="23">XincoException</name><argument_list pos:line="70" pos:column="37">()</argument_list></call></expr>;</throw>
        }</block></catch></try>

    }</block></constructor>

    <comment type="line" pos:line="75" pos:column="5">//create data type attribute object for data structures</comment>
    <constructor><specifier pos:line="76" pos:column="5">public</specifier> <name pos:line="76" pos:column="12">XincoCoreDataTypeAttributeServer</name><parameter_list pos:line="76" pos:column="44">(<param><decl><type><name pos:line="76" pos:column="45">int</name></type> <name pos:line="76" pos:column="49">attrID1</name></decl></param>, <param><decl><type><name pos:line="76" pos:column="58">int</name></type> <name pos:line="76" pos:column="62">attrID2</name></decl></param>, <param><decl><type><name pos:line="76" pos:column="71">String</name></type> <name pos:line="76" pos:column="78">attrD</name></decl></param>, <param><decl><type><name pos:line="76" pos:column="85">String</name></type> <name pos:line="76" pos:column="92">attrDT</name></decl></param>, <param><decl><type><name pos:line="76" pos:column="100">int</name></type> <name pos:line="76" pos:column="104">attrS</name></decl></param>)</parameter_list> <throws pos:line="76" pos:column="111">throws <argument><expr><name pos:line="76" pos:column="118">XincoException</name></expr></argument></throws> <block pos:line="76" pos:column="133">{

        <expr_stmt><expr><call><name pos:line="78" pos:column="9">setXinco_core_data_type_id</name><argument_list pos:line="78" pos:column="35">(<argument><expr><name pos:line="78" pos:column="36">attrID1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="79" pos:column="9">setAttribute_id</name><argument_list pos:line="79" pos:column="24">(<argument><expr><name pos:line="79" pos:column="25">attrID2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="80" pos:column="9">setDesignation</name><argument_list pos:line="80" pos:column="23">(<argument><expr><name pos:line="80" pos:column="24">attrD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="81" pos:column="9">setData_type</name><argument_list pos:line="81" pos:column="21">(<argument><expr><name pos:line="81" pos:column="22">attrDT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="82" pos:column="9">setSize</name><argument_list pos:line="82" pos:column="16">(<argument><expr><name pos:line="82" pos:column="17">attrS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    }</block></constructor>

    <comment type="line" pos:line="86" pos:column="5">//write to db</comment>
    <function><type><specifier pos:line="87" pos:column="5">public</specifier> <name pos:line="87" pos:column="12">int</name></type> <name pos:line="87" pos:column="16">write2DB</name><parameter_list pos:line="87" pos:column="24">(<param><decl><type><name pos:line="87" pos:column="25">XincoDBManager</name></type> <name pos:line="87" pos:column="40">DBM</name></decl></param>)</parameter_list> <throws pos:line="87" pos:column="45">throws <argument><expr><name pos:line="87" pos:column="52">XincoException</name></expr></argument></throws> <block pos:line="87" pos:column="67">{

        <try pos:line="89" pos:column="9">try <block pos:line="89" pos:column="13">{

            <decl_stmt><decl><type><name pos:line="91" pos:column="13">Statement</name></type> <name pos:line="91" pos:column="23">stmt</name> <init pos:line="91" pos:column="28">= <expr><lit:literal type="null" pos:line="91" pos:column="30">null</lit:literal></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><name pos:line="93" pos:column="13">stmt</name> <op:operator pos:line="93" pos:column="18">=</op:operator> <call><name><name pos:line="93" pos:column="20">DBM</name><op:operator pos:line="93" pos:column="23">.</op:operator><name pos:line="93" pos:column="24">con</name><op:operator pos:line="93" pos:column="27">.</op:operator><name pos:line="93" pos:column="28">createStatement</name></name><argument_list pos:line="93" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="94" pos:column="13">stmt</name><op:operator pos:line="94" pos:column="17">.</op:operator><name pos:line="94" pos:column="18">executeUpdate</name></name><argument_list pos:line="94" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="94" pos:column="32">"INSERT INTO xinco_core_data_type_attribute VALUES ("</lit:literal> <op:operator pos:line="94" pos:column="86">+</op:operator> <call><name pos:line="94" pos:column="88">getXinco_core_data_type_id</name><argument_list pos:line="94" pos:column="114">()</argument_list></call> <op:operator pos:line="94" pos:column="117">+</op:operator> <lit:literal type="string" pos:line="94" pos:column="119">", "</lit:literal> <op:operator pos:line="94" pos:column="124">+</op:operator> <call><name pos:line="94" pos:column="126">getAttribute_id</name><argument_list pos:line="94" pos:column="141">()</argument_list></call> <op:operator pos:line="94" pos:column="144">+</op:operator> <lit:literal type="string" pos:line="94" pos:column="146">", '"</lit:literal> <op:operator pos:line="94" pos:column="152">+</op:operator> <call><name pos:line="94" pos:column="154">getDesignation</name><argument_list pos:line="94" pos:column="168">()</argument_list></call> <op:operator pos:line="94" pos:column="171">+</op:operator> <lit:literal type="string" pos:line="94" pos:column="173">"', '"</lit:literal> <op:operator pos:line="94" pos:column="180">+</op:operator> <call><name pos:line="94" pos:column="182">getData_type</name><argument_list pos:line="94" pos:column="194">()</argument_list></call> <op:operator pos:line="94" pos:column="197">+</op:operator> <lit:literal type="string" pos:line="94" pos:column="199">"', "</lit:literal> <op:operator pos:line="94" pos:column="205">+</op:operator> <call><name pos:line="94" pos:column="207">getSize</name><argument_list pos:line="94" pos:column="214">()</argument_list></call> <op:operator pos:line="94" pos:column="217">+</op:operator> <lit:literal type="string" pos:line="94" pos:column="219">")"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="95" pos:column="13">stmt</name><op:operator pos:line="95" pos:column="17">.</op:operator><name pos:line="95" pos:column="18">close</name></name><argument_list pos:line="95" pos:column="23">()</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:line="97" pos:column="13">/*
             * Aduit Trail Table (*_t) cannot handle multiple row changes!!!
            XincoCoreAuditServer audit= new XincoCoreAuditServer();
            audit.updateAuditTrail("xinco_add_attribute",new String [] {"xinco_add_attribute.attribute_id=" + getAttribute_id(),
            "xinco_add_attribute.xinco_core_data_id IN (SELECT id FROM xinco_core_data WHERE xinco_core_data.xinco_core_data_type_id=" +
            getXinco_core_data_type_id()+ ")"},
            DBM,"audit.datatype.attribute.change",this.getChangerID());
             */</comment>

            <expr_stmt><expr><name pos:line="106" pos:column="13">stmt</name> <op:operator pos:line="106" pos:column="18">=</op:operator> <call><name><name pos:line="106" pos:column="20">DBM</name><op:operator pos:line="106" pos:column="23">.</op:operator><name pos:line="106" pos:column="24">con</name><op:operator pos:line="106" pos:column="27">.</op:operator><name pos:line="106" pos:column="28">createStatement</name></name><argument_list pos:line="106" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="107" pos:column="13">stmt</name><op:operator pos:line="107" pos:column="17">.</op:operator><name pos:line="107" pos:column="18">executeUpdate</name></name><argument_list pos:line="107" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="107" pos:column="32">"INSERT INTO xinco_add_attribute SELECT id, "</lit:literal> <op:operator pos:line="107" pos:column="78">+</op:operator> <call><name pos:line="107" pos:column="80">getAttribute_id</name><argument_list pos:line="107" pos:column="95">()</argument_list></call> <op:operator pos:line="107" pos:column="98">+</op:operator> <lit:literal type="string" pos:line="107" pos:column="100">", 0, 0, 0, '', '', now() FROM xinco_core_data WHERE xinco_core_data_type_id = "</lit:literal> <op:operator pos:line="107" pos:column="181">+</op:operator> <call><name pos:line="107" pos:column="183">getXinco_core_data_type_id</name><argument_list pos:line="107" pos:column="209">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="108" pos:column="13">stmt</name><op:operator pos:line="108" pos:column="17">.</op:operator><name pos:line="108" pos:column="18">close</name></name><argument_list pos:line="108" pos:column="23">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="110" pos:column="13">DBM</name><op:operator pos:line="110" pos:column="16">.</op:operator><name pos:line="110" pos:column="17">con</name><op:operator pos:line="110" pos:column="20">.</op:operator><name pos:line="110" pos:column="21">commit</name></name><argument_list pos:line="110" pos:column="27">()</argument_list></call></expr>;</expr_stmt>

        }</block> <catch pos:line="112" pos:column="11">catch <parameter_list pos:line="112" pos:column="17">(<param><decl><type><name pos:line="112" pos:column="18">Exception</name></type> <name pos:line="112" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="112" pos:column="31">{
            <try pos:line="113" pos:column="13">try <block pos:line="113" pos:column="17">{
                <expr_stmt><expr><call><name><name pos:line="114" pos:column="17">DBM</name><op:operator pos:line="114" pos:column="20">.</op:operator><name pos:line="114" pos:column="21">con</name><op:operator pos:line="114" pos:column="24">.</op:operator><name pos:line="114" pos:column="25">rollback</name></name><argument_list pos:line="114" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            }</block> <catch pos:line="115" pos:column="15">catch <parameter_list pos:line="115" pos:column="21">(<param><decl><type><name pos:line="115" pos:column="22">Exception</name></type> <name pos:line="115" pos:column="32">erollback</name></decl></param>)</parameter_list> <block pos:line="115" pos:column="43">{
            }</block></catch></try>
            <throw pos:line="117" pos:column="13">throw <expr><op:operator pos:line="117" pos:column="19">new</op:operator> <call><name pos:line="117" pos:column="23">XincoException</name><argument_list pos:line="117" pos:column="37">()</argument_list></call></expr>;</throw>
        }</block></catch></try>

        <return pos:line="120" pos:column="9">return <expr><lit:literal type="number" pos:line="120" pos:column="16">0</lit:literal></expr>;</return>

    }</block></function>

    <comment type="line" pos:line="124" pos:column="5">//delete from db</comment>
    <function><type><specifier pos:line="125" pos:column="5">public</specifier> <specifier pos:line="125" pos:column="12">static</specifier> <name pos:line="125" pos:column="19">int</name></type> <name pos:line="125" pos:column="23">deleteFromDB</name><parameter_list pos:line="125" pos:column="35">(<param><decl><type><name pos:line="125" pos:column="36">XincoCoreDataTypeAttribute</name></type> <name pos:line="125" pos:column="63">attrCDTA</name></decl></param>, <param><decl><type><name pos:line="125" pos:column="73">XincoDBManager</name></type> <name pos:line="125" pos:column="88">DBM</name></decl></param>, <param><decl><type><name pos:line="125" pos:column="93">int</name></type> <name pos:line="125" pos:column="97">userID</name></decl></param>)</parameter_list> <throws pos:line="125" pos:column="105">throws <argument><expr><name pos:line="125" pos:column="112">XincoException</name></expr></argument></throws> <block pos:line="125" pos:column="127">{

        <try pos:line="127" pos:column="9">try <block pos:line="127" pos:column="13">{

            <decl_stmt><decl><type><name pos:line="129" pos:column="13">Statement</name></type> <name pos:line="129" pos:column="23">stmt</name> <init pos:line="129" pos:column="28">= <expr><lit:literal type="null" pos:line="129" pos:column="30">null</lit:literal></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><name pos:line="131" pos:column="13">stmt</name> <op:operator pos:line="131" pos:column="18">=</op:operator> <call><name><name pos:line="131" pos:column="20">DBM</name><op:operator pos:line="131" pos:column="23">.</op:operator><name pos:line="131" pos:column="24">con</name><op:operator pos:line="131" pos:column="27">.</op:operator><name pos:line="131" pos:column="28">createStatement</name></name><argument_list pos:line="131" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="132" pos:column="13">XincoCoreAuditServer</name></type> <name pos:line="132" pos:column="34">audit</name> <init pos:line="132" pos:column="40">= <expr><op:operator pos:line="132" pos:column="42">new</op:operator> <call><name pos:line="132" pos:column="46">XincoCoreAuditServer</name><argument_list pos:line="132" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <comment type="block" pos:line="133" pos:column="13">/*
             * Aduit Trail Table (*_t) cannot handle multiple row changes!!!
            audit.updateAuditTrail("xinco_add_attribute",new String [] {"xinco_add_attribute.attribute_id=" + attrCDTA.getAttribute_id(),
            "xinco_add_attribute.xinco_core_data_id IN (SELECT id FROM xinco_core_data WHERE xinco_core_data.xinco_core_data_type_id=" +
            attrCDTA.getXinco_core_data_type_id()+ ")"},
            DBM,"audit.general.delete",userID);
             */</comment>
            <expr_stmt><expr><call><name><name pos:line="140" pos:column="13">stmt</name><op:operator pos:line="140" pos:column="17">.</op:operator><name pos:line="140" pos:column="18">executeUpdate</name></name><argument_list pos:line="140" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="140" pos:column="32">"DELETE FROM xinco_add_attribute WHERE xinco_add_attribute.attribute_id="</lit:literal>
                    <op:operator pos:line="141" pos:column="21">+</op:operator> <call><name><name pos:line="141" pos:column="23">attrCDTA</name><op:operator pos:line="141" pos:column="31">.</op:operator><name pos:line="141" pos:column="32">getAttribute_id</name></name><argument_list pos:line="141" pos:column="47">()</argument_list></call> <op:operator pos:line="141" pos:column="50">+</op:operator> <lit:literal type="string" pos:line="141" pos:column="52">" AND xinco_add_attribute.xinco_core_data_id IN (SELECT id FROM xinco_core_data WHERE xinco_core_data.xinco_core_data_type_id="</lit:literal>
                    <op:operator pos:line="142" pos:column="21">+</op:operator> <call><name><name pos:line="142" pos:column="23">attrCDTA</name><op:operator pos:line="142" pos:column="31">.</op:operator><name pos:line="142" pos:column="32">getXinco_core_data_type_id</name></name><argument_list pos:line="142" pos:column="58">()</argument_list></call> <op:operator pos:line="142" pos:column="61">+</op:operator> <lit:literal type="string" pos:line="142" pos:column="63">")"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="143" pos:column="13">stmt</name><op:operator pos:line="143" pos:column="17">.</op:operator><name pos:line="143" pos:column="18">close</name></name><argument_list pos:line="143" pos:column="23">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name pos:line="145" pos:column="13">stmt</name> <op:operator pos:line="145" pos:column="18">=</op:operator> <call><name><name pos:line="145" pos:column="20">DBM</name><op:operator pos:line="145" pos:column="23">.</op:operator><name pos:line="145" pos:column="24">con</name><op:operator pos:line="145" pos:column="27">.</op:operator><name pos:line="145" pos:column="28">createStatement</name></name><argument_list pos:line="145" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="146" pos:column="13">audit</name><op:operator pos:line="146" pos:column="18">.</op:operator><name pos:line="146" pos:column="19">updateAuditTrail</name></name><argument_list pos:line="146" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="146" pos:column="36">"xinco_core_data_type_attribute"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="146" pos:column="70">new</op:operator> <name><name pos:line="146" pos:column="74">String</name><index pos:line="146" pos:column="80">[]</index></name><block pos:line="146" pos:column="82">{<expr><lit:literal type="string" pos:line="146" pos:column="83">"xinco_core_data_type_id="</lit:literal> <op:operator pos:line="146" pos:column="110">+</op:operator> <call><name><name pos:line="146" pos:column="112">attrCDTA</name><op:operator pos:line="146" pos:column="120">.</op:operator><name pos:line="146" pos:column="121">getXinco_core_data_type_id</name></name><argument_list pos:line="146" pos:column="147">()</argument_list></call></expr><op:operator pos:line="146" pos:column="149">,</op:operator> <expr><lit:literal type="string" pos:line="146" pos:column="151">"attribute_id="</lit:literal> <op:operator pos:line="146" pos:column="167">+</op:operator> <call><name><name pos:line="146" pos:column="169">attrCDTA</name><op:operator pos:line="146" pos:column="177">.</op:operator><name pos:line="146" pos:column="178">getAttribute_id</name></name><argument_list pos:line="146" pos:column="193">()</argument_list></call></expr>}</block></expr></argument>,
                    <argument><expr><name pos:line="147" pos:column="21">DBM</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="147" pos:column="26">"audit.general.delete"</lit:literal></expr></argument>, <argument><expr><name pos:line="147" pos:column="50">userID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="148" pos:column="13">stmt</name><op:operator pos:line="148" pos:column="17">.</op:operator><name pos:line="148" pos:column="18">executeUpdate</name></name><argument_list pos:line="148" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="148" pos:column="32">"DELETE FROM xinco_core_data_type_attribute WHERE xinco_core_data_type_id="</lit:literal> <op:operator pos:line="148" pos:column="108">+</op:operator> <call><name><name pos:line="148" pos:column="110">attrCDTA</name><op:operator pos:line="148" pos:column="118">.</op:operator><name pos:line="148" pos:column="119">getXinco_core_data_type_id</name></name><argument_list pos:line="148" pos:column="145">()</argument_list></call> <op:operator pos:line="148" pos:column="148">+</op:operator> <lit:literal type="string" pos:line="148" pos:column="150">" AND attribute_id="</lit:literal> <op:operator pos:line="148" pos:column="171">+</op:operator> <call><name><name pos:line="148" pos:column="173">attrCDTA</name><op:operator pos:line="148" pos:column="181">.</op:operator><name pos:line="148" pos:column="182">getAttribute_id</name></name><argument_list pos:line="148" pos:column="197">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="149" pos:column="13">stmt</name><op:operator pos:line="149" pos:column="17">.</op:operator><name pos:line="149" pos:column="18">close</name></name><argument_list pos:line="149" pos:column="23">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="151" pos:column="13">DBM</name><op:operator pos:line="151" pos:column="16">.</op:operator><name pos:line="151" pos:column="17">con</name><op:operator pos:line="151" pos:column="20">.</op:operator><name pos:line="151" pos:column="21">commit</name></name><argument_list pos:line="151" pos:column="27">()</argument_list></call></expr>;</expr_stmt>

        }</block> <catch pos:line="153" pos:column="11">catch <parameter_list pos:line="153" pos:column="17">(<param><decl><type><name pos:line="153" pos:column="18">Exception</name></type> <name pos:line="153" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="153" pos:column="31">{
            <try pos:line="154" pos:column="13">try <block pos:line="154" pos:column="17">{
                <expr_stmt><expr><call><name><name pos:line="155" pos:column="17">DBM</name><op:operator pos:line="155" pos:column="20">.</op:operator><name pos:line="155" pos:column="21">con</name><op:operator pos:line="155" pos:column="24">.</op:operator><name pos:line="155" pos:column="25">rollback</name></name><argument_list pos:line="155" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            }</block> <catch pos:line="156" pos:column="15">catch <parameter_list pos:line="156" pos:column="21">(<param><decl><type><name pos:line="156" pos:column="22">Exception</name></type> <name pos:line="156" pos:column="32">erollback</name></decl></param>)</parameter_list> <block pos:line="156" pos:column="43">{
            }</block></catch></try>
            <throw pos:line="158" pos:column="13">throw <expr><op:operator pos:line="158" pos:column="19">new</op:operator> <call><name pos:line="158" pos:column="23">XincoException</name><argument_list pos:line="158" pos:column="37">()</argument_list></call></expr>;</throw>
        }</block></catch></try>
        <return pos:line="160" pos:column="9">return <expr><lit:literal type="number" pos:line="160" pos:column="16">0</lit:literal></expr>;</return>
    }</block></function>

    <comment type="line" pos:line="163" pos:column="5">//create complete list of data type attributes</comment>
    <function><type><specifier pos:line="164" pos:column="5">public</specifier> <specifier pos:line="164" pos:column="12">static</specifier> <name pos:line="164" pos:column="19">Vector</name></type> <name pos:line="164" pos:column="26">getXincoCoreDataTypeAttributes</name><parameter_list pos:line="164" pos:column="56">(<param><decl><type><name pos:line="164" pos:column="57">int</name></type> <name pos:line="164" pos:column="61">attrID</name></decl></param>, <param><decl><type><name pos:line="164" pos:column="69">XincoDBManager</name></type> <name pos:line="164" pos:column="84">DBM</name></decl></param>)</parameter_list> <block pos:line="164" pos:column="89">{
        <decl_stmt><decl><type><name pos:line="165" pos:column="9">Vector</name></type> <name pos:line="165" pos:column="16">coreDataTypeAttributes</name> <init pos:line="165" pos:column="39">= <expr><op:operator pos:line="165" pos:column="41">new</op:operator> <call><name pos:line="165" pos:column="45">Vector</name><argument_list pos:line="165" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <try pos:line="166" pos:column="9">try <block pos:line="166" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="167" pos:column="13">Statement</name></type> <name pos:line="167" pos:column="23">stmt</name> <init pos:line="167" pos:column="28">= <expr><call><name><name pos:line="167" pos:column="30">DBM</name><op:operator pos:line="167" pos:column="33">.</op:operator><name pos:line="167" pos:column="34">con</name><op:operator pos:line="167" pos:column="37">.</op:operator><name pos:line="167" pos:column="38">createStatement</name></name><argument_list pos:line="167" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="168" pos:column="13">ResultSet</name></type> <name pos:line="168" pos:column="23">rs</name> <init pos:line="168" pos:column="26">= <expr><call><name><name pos:line="168" pos:column="28">stmt</name><op:operator pos:line="168" pos:column="32">.</op:operator><name pos:line="168" pos:column="33">executeQuery</name></name><argument_list pos:line="168" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="168" pos:column="46">"SELECT * FROM xinco_core_data_type_attribute WHERE xinco_core_data_type_id ="</lit:literal> <op:operator pos:line="168" pos:column="125">+</op:operator> <name pos:line="168" pos:column="127">attrID</name> <op:operator pos:line="168" pos:column="134">+</op:operator> <lit:literal type="string" pos:line="168" pos:column="136">" ORDER BY attribute_id"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <while pos:line="169" pos:column="13">while <condition pos:line="169" pos:column="19">(<expr><call><name><name pos:line="169" pos:column="20">rs</name><op:operator pos:line="169" pos:column="22">.</op:operator><name pos:line="169" pos:column="23">next</name></name><argument_list pos:line="169" pos:column="27">()</argument_list></call></expr>)</condition> <block pos:line="169" pos:column="31">{
                <expr_stmt><expr><call><name><name pos:line="170" pos:column="17">coreDataTypeAttributes</name><op:operator pos:line="170" pos:column="39">.</op:operator><name pos:line="170" pos:column="40">addElement</name></name><argument_list pos:line="170" pos:column="50">(<argument><expr><op:operator pos:line="170" pos:column="51">new</op:operator> <call><name pos:line="170" pos:column="55">XincoCoreDataTypeAttributeServer</name><argument_list pos:line="170" pos:column="87">(<argument><expr><call><name><name pos:line="170" pos:column="88">rs</name><op:operator pos:line="170" pos:column="90">.</op:operator><name pos:line="170" pos:column="91">getInt</name></name><argument_list pos:line="170" pos:column="97">(<argument><expr><lit:literal type="string" pos:line="170" pos:column="98">"xinco_core_data_type_id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="170" pos:column="126">rs</name><op:operator pos:line="170" pos:column="128">.</op:operator><name pos:line="170" pos:column="129">getInt</name></name><argument_list pos:line="170" pos:column="135">(<argument><expr><lit:literal type="string" pos:line="170" pos:column="136">"attribute_id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="170" pos:column="153">rs</name><op:operator pos:line="170" pos:column="155">.</op:operator><name pos:line="170" pos:column="156">getString</name></name><argument_list pos:line="170" pos:column="165">(<argument><expr><lit:literal type="string" pos:line="170" pos:column="166">"designation"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="170" pos:column="182">rs</name><op:operator pos:line="170" pos:column="184">.</op:operator><name pos:line="170" pos:column="185">getString</name></name><argument_list pos:line="170" pos:column="194">(<argument><expr><lit:literal type="string" pos:line="170" pos:column="195">"data_type"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="170" pos:column="209">rs</name><op:operator pos:line="170" pos:column="211">.</op:operator><name pos:line="170" pos:column="212">getInt</name></name><argument_list pos:line="170" pos:column="218">(<argument><expr><lit:literal type="string" pos:line="170" pos:column="219">"attr_size"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></while>
            <expr_stmt><expr><call><name><name pos:line="172" pos:column="13">stmt</name><op:operator pos:line="172" pos:column="17">.</op:operator><name pos:line="172" pos:column="18">close</name></name><argument_list pos:line="172" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
        }</block> <catch pos:line="173" pos:column="11">catch <parameter_list pos:line="173" pos:column="17">(<param><decl><type><name pos:line="173" pos:column="18">Exception</name></type> <name pos:line="173" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="173" pos:column="31">{
            <expr_stmt><expr><call><name><name pos:line="174" pos:column="13">coreDataTypeAttributes</name><op:operator pos:line="174" pos:column="35">.</op:operator><name pos:line="174" pos:column="36">removeAllElements</name></name><argument_list pos:line="174" pos:column="53">()</argument_list></call></expr>;</expr_stmt>
        }</block></catch></try>
        <return pos:line="176" pos:column="9">return <expr><name pos:line="176" pos:column="16">coreDataTypeAttributes</name></expr>;</return>
    }</block></function>
}</block></class>
</unit>
