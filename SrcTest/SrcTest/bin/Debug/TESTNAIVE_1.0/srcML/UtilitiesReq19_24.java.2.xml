<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\RiskIt\src\com\riskIt\util\UtilitiesReq19_24.java" pos:tabs="8"><package pos:line="1" pos:column="1">package <name><name pos:line="1" pos:column="9">com</name><op:operator pos:line="1" pos:column="12">.</op:operator><name pos:line="1" pos:column="13">riskIt</name><op:operator pos:line="1" pos:column="19">.</op:operator><name pos:line="1" pos:column="20">util</name></name>;</package>

<import pos:line="3" pos:column="1">import <name><name pos:line="3" pos:column="8">java</name><op:operator pos:line="3" pos:column="12">.</op:operator><name pos:line="3" pos:column="13">sql</name><op:operator pos:line="3" pos:column="16">.</op:operator><name pos:line="3" pos:column="17">SQLException</name></name>;</import>

<class><specifier pos:line="5" pos:column="1">public</specifier> class <name pos:line="5" pos:column="14">UtilitiesReq19_24</name> <block pos:line="5" pos:column="32">{
    	<function><type><specifier pos:line="6" pos:column="9">public</specifier> <specifier pos:line="6" pos:column="16">static</specifier> <name pos:line="6" pos:column="23">double</name></type> <name pos:line="6" pos:column="30">CalculateIncomePercentageDifference</name><parameter_list pos:line="6" pos:column="65">(<param><decl><type><name pos:line="6" pos:column="66">double</name></type> <name pos:line="6" pos:column="73">MaxAverageIncome</name></decl></param>, <param><decl><type><name pos:line="6" pos:column="91">double</name></type> <name pos:line="6" pos:column="98">MinAverageIncome</name></decl></param>)</parameter_list><block pos:line="6" pos:column="115">{

        <if pos:line="8" pos:column="9">if<condition pos:line="8" pos:column="11">( <expr><name pos:line="8" pos:column="13">MaxAverageIncome</name> <op:operator pos:line="8" pos:column="30">&gt;</op:operator> <name pos:line="8" pos:column="32">MinAverageIncome</name></expr> )</condition><then pos:line="8" pos:column="50">
           <return pos:line="9" pos:column="12">return <expr><op:operator pos:line="9" pos:column="19">(</op:operator><lit:literal type="number" pos:line="9" pos:column="20">100</lit:literal><op:operator pos:line="9" pos:column="23">*</op:operator><name pos:line="9" pos:column="24">MinAverageIncome</name><op:operator pos:line="9" pos:column="40">/</op:operator><name pos:line="9" pos:column="41">MaxAverageIncome</name><op:operator pos:line="9" pos:column="57">)</op:operator></expr>;</return></then>
        <else pos:line="10" pos:column="9">else
           <return pos:line="11" pos:column="12">return <expr><op:operator pos:line="11" pos:column="19">(</op:operator><lit:literal type="number" pos:line="11" pos:column="20">100</lit:literal><op:operator pos:line="11" pos:column="23">*</op:operator><name pos:line="11" pos:column="24">MaxAverageIncome</name><op:operator pos:line="11" pos:column="40">/</op:operator><name pos:line="11" pos:column="41">MinAverageIncome</name><op:operator pos:line="11" pos:column="57">)</op:operator></expr>;</return></else></if>

       }</block></function>
       <comment type="block" format="javadoc" pos:line="14" pos:column="8">/**
        * Reports a data verification failure to System.err with the given message.
        *
        * @param message A message describing what failed.
        */</comment>
       <function><type><specifier pos:line="19" pos:column="8">public</specifier> <specifier pos:line="19" pos:column="15">static</specifier> <name pos:line="19" pos:column="22">void</name></type> <name pos:line="19" pos:column="27">reportFailure</name><parameter_list pos:line="19" pos:column="40">(<param><decl><type><name pos:line="19" pos:column="41">String</name></type> <name pos:line="19" pos:column="48">message</name></decl></param>)</parameter_list> <block pos:line="19" pos:column="57">{
    	   <expr_stmt><expr><call><name><name pos:line="20" pos:column="12">System</name><op:operator pos:line="20" pos:column="18">.</op:operator><name pos:line="20" pos:column="19">out</name><op:operator pos:line="20" pos:column="22">.</op:operator><name pos:line="20" pos:column="23">println</name></name><argument_list pos:line="20" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="20" pos:column="31">"flow:26"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <expr_stmt><expr><call><name><name pos:line="21" pos:column="12">System</name><op:operator pos:line="21" pos:column="18">.</op:operator><name pos:line="21" pos:column="19">err</name><op:operator pos:line="21" pos:column="22">.</op:operator><name pos:line="21" pos:column="23">println</name></name><argument_list pos:line="21" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="21" pos:column="31">"\nData verification failed:"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
           <expr_stmt><expr><call><name><name pos:line="22" pos:column="12">System</name><op:operator pos:line="22" pos:column="18">.</op:operator><name pos:line="22" pos:column="19">err</name><op:operator pos:line="22" pos:column="22">.</op:operator><name pos:line="22" pos:column="23">println</name></name><argument_list pos:line="22" pos:column="30">(<argument><expr><lit:literal type="char" pos:line="22" pos:column="31">'\t'</lit:literal> <op:operator pos:line="22" pos:column="36">+</op:operator> <name pos:line="22" pos:column="38">message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
       }</block></function>

       <function><type><specifier pos:line="25" pos:column="8">public</specifier> <specifier pos:line="25" pos:column="15">static</specifier> <name pos:line="25" pos:column="22">void</name></type> <name pos:line="25" pos:column="27">printExceptionText</name><parameter_list pos:line="25" pos:column="45">(<param><decl><type><name pos:line="25" pos:column="46">SQLException</name></type> <name pos:line="25" pos:column="59">e</name></decl></param>)</parameter_list><block pos:line="25" pos:column="61">{
         <while pos:line="26" pos:column="10">while <condition pos:line="26" pos:column="16">(<expr><name pos:line="26" pos:column="17">e</name> <op:operator pos:line="26" pos:column="19">!=</op:operator> <lit:literal type="null" pos:line="26" pos:column="22">null</lit:literal></expr>)</condition>
         <block pos:line="27" pos:column="10">{
        	 <expr_stmt><expr><call><name><name pos:line="28" pos:column="18">System</name><op:operator pos:line="28" pos:column="24">.</op:operator><name pos:line="28" pos:column="25">out</name><op:operator pos:line="28" pos:column="28">.</op:operator><name pos:line="28" pos:column="29">println</name></name><argument_list pos:line="28" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="28" pos:column="37">"flow:25"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        	 <expr_stmt><expr><call><name><name pos:line="29" pos:column="18">System</name><op:operator pos:line="29" pos:column="24">.</op:operator><name pos:line="29" pos:column="25">err</name><op:operator pos:line="29" pos:column="28">.</op:operator><name pos:line="29" pos:column="29">println</name></name><argument_list pos:line="29" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="29" pos:column="37">"\n----- SQLException -----"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        	 <expr_stmt><expr><call><name><name pos:line="30" pos:column="18">System</name><op:operator pos:line="30" pos:column="24">.</op:operator><name pos:line="30" pos:column="25">err</name><op:operator pos:line="30" pos:column="28">.</op:operator><name pos:line="30" pos:column="29">println</name></name><argument_list pos:line="30" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="30" pos:column="37">"  SQL State:  "</lit:literal> <op:operator pos:line="30" pos:column="54">+</op:operator> <call><name><name pos:line="30" pos:column="56">e</name><op:operator pos:line="30" pos:column="57">.</op:operator><name pos:line="30" pos:column="58">getSQLState</name></name><argument_list pos:line="30" pos:column="69">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        	 <expr_stmt><expr><call><name><name pos:line="31" pos:column="18">System</name><op:operator pos:line="31" pos:column="24">.</op:operator><name pos:line="31" pos:column="25">err</name><op:operator pos:line="31" pos:column="28">.</op:operator><name pos:line="31" pos:column="29">println</name></name><argument_list pos:line="31" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="31" pos:column="37">"  Error Code: "</lit:literal> <op:operator pos:line="31" pos:column="54">+</op:operator> <call><name><name pos:line="31" pos:column="56">e</name><op:operator pos:line="31" pos:column="57">.</op:operator><name pos:line="31" pos:column="58">getErrorCode</name></name><argument_list pos:line="31" pos:column="70">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        	 <expr_stmt><expr><call><name><name pos:line="32" pos:column="18">System</name><op:operator pos:line="32" pos:column="24">.</op:operator><name pos:line="32" pos:column="25">err</name><op:operator pos:line="32" pos:column="28">.</op:operator><name pos:line="32" pos:column="29">println</name></name><argument_list pos:line="32" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="32" pos:column="37">"  Message:    "</lit:literal> <op:operator pos:line="32" pos:column="54">+</op:operator> <call><name><name pos:line="32" pos:column="56">e</name><op:operator pos:line="32" pos:column="57">.</op:operator><name pos:line="32" pos:column="58">getMessage</name></name><argument_list pos:line="32" pos:column="68">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        	 <comment type="line" pos:line="33" pos:column="18">// for stack traces, refer to derby.log or uncomment this:</comment>
        	 <comment type="line" pos:line="34" pos:column="18">//e.printStackTrace(System.err);</comment>
        	 <expr_stmt><expr><name pos:line="35" pos:column="18">e</name> <op:operator pos:line="35" pos:column="20">=</op:operator> <call><name><name pos:line="35" pos:column="22">e</name><op:operator pos:line="35" pos:column="23">.</op:operator><name pos:line="35" pos:column="24">getNextException</name></name><argument_list pos:line="35" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
         }</block></while>
       }</block></function>
}</block></class>
</unit>
