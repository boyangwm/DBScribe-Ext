<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\RiskIt\src\com\riskIt\ui\SubMenuChoices.java" pos:tabs="8"><package pos:line="1" pos:column="1">package <name><name pos:line="1" pos:column="9">com</name><op:operator pos:line="1" pos:column="12">.</op:operator><name pos:line="1" pos:column="13">riskIt</name><op:operator pos:line="1" pos:column="19">.</op:operator><name pos:line="1" pos:column="20">ui</name></name>;</package>

<import pos:line="3" pos:column="1">import <name><name pos:line="3" pos:column="8">java</name><op:operator pos:line="3" pos:column="12">.</op:operator><name pos:line="3" pos:column="13">sql</name><op:operator pos:line="3" pos:column="16">.</op:operator><name pos:line="3" pos:column="17">Connection</name></name>;</import>
<import pos:line="4" pos:column="1">import <name><name pos:line="4" pos:column="8">java</name><op:operator pos:line="4" pos:column="12">.</op:operator><name pos:line="4" pos:column="13">sql</name><op:operator pos:line="4" pos:column="16">.</op:operator><name pos:line="4" pos:column="17">ResultSet</name></name>;</import>
<import pos:line="5" pos:column="1">import <name><name pos:line="5" pos:column="8">java</name><op:operator pos:line="5" pos:column="12">.</op:operator><name pos:line="5" pos:column="13">sql</name><op:operator pos:line="5" pos:column="16">.</op:operator><name pos:line="5" pos:column="17">Statement</name></name>;</import>
<import pos:line="6" pos:column="1">import <name><name pos:line="6" pos:column="8">java</name><op:operator pos:line="6" pos:column="12">.</op:operator><name pos:line="6" pos:column="13">util</name><op:operator pos:line="6" pos:column="17">.</op:operator><name pos:line="6" pos:column="18">ArrayList</name></name>;</import>
<import pos:line="7" pos:column="1">import <name><name pos:line="7" pos:column="8">java</name><op:operator pos:line="7" pos:column="12">.</op:operator><name pos:line="7" pos:column="13">util</name><op:operator pos:line="7" pos:column="17">.</op:operator><name pos:line="7" pos:column="18">Scanner</name></name>;</import>
<import pos:line="8" pos:column="1">import <name><name pos:line="8" pos:column="8">com</name><op:operator pos:line="8" pos:column="11">.</op:operator><name pos:line="8" pos:column="12">riskIt</name><op:operator pos:line="8" pos:column="18">.</op:operator><name pos:line="8" pos:column="19">controller</name><op:operator pos:line="8" pos:column="29">.</op:operator><name pos:line="8" pos:column="30">UserManager</name></name>;</import>
<import pos:line="9" pos:column="1">import <name><name pos:line="9" pos:column="8">com</name><op:operator pos:line="9" pos:column="11">.</op:operator><name pos:line="9" pos:column="12">riskIt</name><op:operator pos:line="9" pos:column="18">.</op:operator><name pos:line="9" pos:column="19">db</name><op:operator pos:line="9" pos:column="21">.</op:operator><name pos:line="9" pos:column="22">DatabaseConnection</name></name>;</import>
<import pos:line="10" pos:column="1">import <name><name pos:line="10" pos:column="8">com</name><op:operator pos:line="10" pos:column="11">.</op:operator><name pos:line="10" pos:column="12">riskIt</name><op:operator pos:line="10" pos:column="18">.</op:operator><name pos:line="10" pos:column="19">controller</name><op:operator pos:line="10" pos:column="29">.</op:operator><name pos:line="10" pos:column="30">AgentManager</name></name>;</import>
<import pos:line="11" pos:column="1">import <name><name pos:line="11" pos:column="8">com</name><op:operator pos:line="11" pos:column="11">.</op:operator><name pos:line="11" pos:column="12">riskIt</name><op:operator pos:line="11" pos:column="18">.</op:operator><name pos:line="11" pos:column="19">data</name><op:operator pos:line="11" pos:column="23">.</op:operator><name pos:line="11" pos:column="24">Invitation</name></name>;</import>
<import pos:line="12" pos:column="1">import <name><name pos:line="12" pos:column="8">com</name><op:operator pos:line="12" pos:column="11">.</op:operator><name pos:line="12" pos:column="12">riskIt</name><op:operator pos:line="12" pos:column="18">.</op:operator><name pos:line="12" pos:column="19">util</name></name>.*;</import>


<comment type="block" format="javadoc" pos:line="15" pos:column="1">/**
 * This class provides all UI choices for agent and customer
 * and then calls appropriate method to continue calculations
 * @author Poornima Tantry
 *
 */</comment>
<class><specifier pos:line="21" pos:column="1">public</specifier> class <name pos:line="21" pos:column="14">SubMenuChoices</name> 
<block pos:line="22" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="23" pos:column="9">private</specifier> <name pos:line="23" pos:column="17">AgentManager</name></type> <name pos:line="23" pos:column="30">agent</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="24" pos:column="9">private</specifier> <name pos:line="24" pos:column="17">UserManager</name></type> <name pos:line="24" pos:column="29">user</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="25" pos:column="9">private</specifier> <name pos:line="25" pos:column="17">Scanner</name></type> <name pos:line="25" pos:column="25">in</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="26" pos:column="9">private</specifier> <name pos:line="26" pos:column="17">AccessorMethods</name></type> <name pos:line="26" pos:column="33">acc</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="27" pos:column="9">private</specifier> <name pos:line="27" pos:column="17">String</name></type> <name pos:line="27" pos:column="24">agentName</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="28" pos:column="9">private</specifier> <name pos:line="28" pos:column="17">int</name></type> <name pos:line="28" pos:column="21">agentId</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="29" pos:column="9">private</specifier> <specifier pos:line="29" pos:column="17">static</specifier> <name pos:line="29" pos:column="24">boolean</name></type> <name pos:line="29" pos:column="32">agentFlag</name> <init pos:line="29" pos:column="42">= <expr><lit:literal type="boolean" pos:line="29" pos:column="44">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="30" pos:column="9">private</specifier> <name><name pos:line="30" pos:column="17">ArrayList</name><argument_list pos:line="30" pos:column="26">&lt;<argument><name pos:line="30" pos:column="27">Invitation</name></argument>&gt;</argument_list></name></type> <name pos:line="30" pos:column="39">userInviteList</name></decl>;</decl_stmt>
	
	<comment type="line" pos:line="32" pos:column="9">//Constructor</comment>
	<constructor><specifier pos:line="33" pos:column="9">public</specifier> <name pos:line="33" pos:column="16">SubMenuChoices</name><parameter_list pos:line="33" pos:column="30">()</parameter_list>
	<block pos:line="34" pos:column="9">{
		<expr_stmt><expr><name pos:line="35" pos:column="17">agent</name> <op:operator pos:line="35" pos:column="23">=</op:operator> <op:operator pos:line="35" pos:column="25">new</op:operator> <call><name pos:line="35" pos:column="29">AgentManager</name><argument_list pos:line="35" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="36" pos:column="17">user</name> <op:operator pos:line="36" pos:column="22">=</op:operator> <op:operator pos:line="36" pos:column="24">new</op:operator> <call><name pos:line="36" pos:column="28">UserManager</name><argument_list pos:line="36" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="37" pos:column="17">acc</name> <op:operator pos:line="37" pos:column="21">=</op:operator> <op:operator pos:line="37" pos:column="23">new</op:operator> <call><name pos:line="37" pos:column="27">AccessorMethods</name><argument_list pos:line="37" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="38" pos:column="17">in</name> <op:operator pos:line="38" pos:column="20">=</op:operator> <op:operator pos:line="38" pos:column="22">new</op:operator> <call><name pos:line="38" pos:column="26">Scanner</name><argument_list pos:line="38" pos:column="33">(<argument><expr><name><name pos:line="38" pos:column="34">System</name><op:operator pos:line="38" pos:column="40">.</op:operator><name pos:line="38" pos:column="41">in</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	
		<expr_stmt><expr><name pos:line="39" pos:column="17">userInviteList</name> <op:operator pos:line="39" pos:column="32">=</op:operator> <op:operator pos:line="39" pos:column="34">new</op:operator> <call><name><name pos:line="39" pos:column="38">ArrayList</name><argument_list pos:line="39" pos:column="47">&lt;<argument><name pos:line="39" pos:column="48">Invitation</name></argument>&gt;</argument_list></name><argument_list pos:line="39" pos:column="59">()</argument_list></call></expr>;</expr_stmt>
	}</block></constructor>
	
	<comment type="block" format="javadoc" pos:line="42" pos:column="9">/**
	 * This is the UI, so that agent can see number of people
	 * or customers and getting a count, by providing
	 * either zipcode or education, occupation, marital status
	 * or estimated income
	 */</comment>
	<function><type><specifier pos:line="48" pos:column="9">public</specifier> <name pos:line="48" pos:column="16">void</name></type> <name pos:line="48" pos:column="21">browseUserByChoice</name><parameter_list pos:line="48" pos:column="39">()</parameter_list>
	<block pos:line="49" pos:column="9">{
		
		<decl_stmt><decl><type><name pos:line="51" pos:column="17">int</name></type> <name pos:line="51" pos:column="21">choice</name> <init pos:line="51" pos:column="28">= <expr><lit:literal type="number" pos:line="51" pos:column="30">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="52" pos:column="17">String</name></type> <name pos:line="52" pos:column="24">getChoice</name> <init pos:line="52" pos:column="34">= <expr><lit:literal type="string" pos:line="52" pos:column="36">""</lit:literal></expr></init></decl>;</decl_stmt>
		
		<do pos:line="54" pos:column="17">do
		<block pos:line="55" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="56" pos:column="25">System</name><op:operator pos:line="56" pos:column="31">.</op:operator><name pos:line="56" pos:column="32">out</name><op:operator pos:line="56" pos:column="35">.</op:operator><name pos:line="56" pos:column="36">println</name></name><argument_list pos:line="56" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="56" pos:column="44">"1. Filter using ZIPCODE"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="57" pos:column="25">System</name><op:operator pos:line="57" pos:column="31">.</op:operator><name pos:line="57" pos:column="32">out</name><op:operator pos:line="57" pos:column="35">.</op:operator><name pos:line="57" pos:column="36">println</name></name><argument_list pos:line="57" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="57" pos:column="44">"2. Filter using EDUCATION"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="58" pos:column="25">System</name><op:operator pos:line="58" pos:column="31">.</op:operator><name pos:line="58" pos:column="32">out</name><op:operator pos:line="58" pos:column="35">.</op:operator><name pos:line="58" pos:column="36">println</name></name><argument_list pos:line="58" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="58" pos:column="44">"3. Filter using OCCUPATION"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="59" pos:column="25">System</name><op:operator pos:line="59" pos:column="31">.</op:operator><name pos:line="59" pos:column="32">out</name><op:operator pos:line="59" pos:column="35">.</op:operator><name pos:line="59" pos:column="36">println</name></name><argument_list pos:line="59" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="59" pos:column="44">"4. Filter using MARITAL_STATUS"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="60" pos:column="25">System</name><op:operator pos:line="60" pos:column="31">.</op:operator><name pos:line="60" pos:column="32">out</name><op:operator pos:line="60" pos:column="35">.</op:operator><name pos:line="60" pos:column="36">println</name></name><argument_list pos:line="60" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="60" pos:column="44">"5. Filter using ESTIMATED_INCOME"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="61" pos:column="25">System</name><op:operator pos:line="61" pos:column="31">.</op:operator><name pos:line="61" pos:column="32">out</name><op:operator pos:line="61" pos:column="35">.</op:operator><name pos:line="61" pos:column="36">println</name></name><argument_list pos:line="61" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="61" pos:column="44">"6. Exit"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			<expr_stmt><expr><call><name><name pos:line="63" pos:column="25">System</name><op:operator pos:line="63" pos:column="31">.</op:operator><name pos:line="63" pos:column="32">out</name><op:operator pos:line="63" pos:column="35">.</op:operator><name pos:line="63" pos:column="36">print</name></name><argument_list pos:line="63" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="63" pos:column="42">"Enter your choice : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="64" pos:column="25">getChoice</name> <op:operator pos:line="64" pos:column="35">=</op:operator> <call><name><name pos:line="64" pos:column="37">in</name><op:operator pos:line="64" pos:column="39">.</op:operator><name pos:line="64" pos:column="40">nextLine</name></name><argument_list pos:line="64" pos:column="48">()</argument_list></call></expr>;</expr_stmt>	
			
			<comment type="line" pos:line="66" pos:column="25">//check for invalid input</comment>
			<expr_stmt><expr><name pos:line="67" pos:column="25">choice</name> <op:operator pos:line="67" pos:column="32">=</op:operator> <call><name><name pos:line="67" pos:column="34">acc</name><op:operator pos:line="67" pos:column="37">.</op:operator><name pos:line="67" pos:column="38">checkLetterDigit</name></name><argument_list pos:line="67" pos:column="54">(<argument><expr><name pos:line="67" pos:column="55">getChoice</name></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="66">RiskItConstants</name><op:operator pos:line="67" pos:column="81">.</op:operator><name pos:line="67" pos:column="82">SUB_INVALID</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			<switch pos:line="69" pos:column="25">switch<condition pos:line="69" pos:column="31">(<expr><name pos:line="69" pos:column="32">choice</name></expr>)</condition>
			<block pos:line="70" pos:column="25">{
			<case pos:line="71" pos:column="25">case <expr><lit:literal type="number" pos:line="71" pos:column="30">1</lit:literal></expr>:
				<comment type="line" pos:line="72" pos:column="33">//get customer names filtering through zipcode</comment>
					<expr_stmt><expr><call><name><name pos:line="73" pos:column="41">System</name><op:operator pos:line="73" pos:column="47">.</op:operator><name pos:line="73" pos:column="48">out</name><op:operator pos:line="73" pos:column="51">.</op:operator><name pos:line="73" pos:column="52">print</name></name><argument_list pos:line="73" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="73" pos:column="58">"Enter zipcode : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="74" pos:column="41">String</name></type> <name pos:line="74" pos:column="48">zip</name> <init pos:line="74" pos:column="52">= <expr><call><name><name pos:line="74" pos:column="54">in</name><op:operator pos:line="74" pos:column="56">.</op:operator><name pos:line="74" pos:column="57">nextLine</name></name><argument_list pos:line="74" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="75" pos:column="41">System</name><op:operator pos:line="75" pos:column="47">.</op:operator><name pos:line="75" pos:column="48">out</name><op:operator pos:line="75" pos:column="51">.</op:operator><name pos:line="75" pos:column="52">println</name></name><argument_list pos:line="75" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="75" pos:column="60">"------------------------------------------"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="76" pos:column="41">user</name><op:operator pos:line="76" pos:column="45">.</op:operator><name pos:line="76" pos:column="46">filterZipcode</name></name><argument_list pos:line="76" pos:column="59">(<argument><expr><name pos:line="76" pos:column="60">zip</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="77" pos:column="41">System</name><op:operator pos:line="77" pos:column="47">.</op:operator><name pos:line="77" pos:column="48">out</name><op:operator pos:line="77" pos:column="51">.</op:operator><name pos:line="77" pos:column="52">println</name></name><argument_list pos:line="77" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="77" pos:column="60">"------------------------------------------"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break pos:line="78" pos:column="41">break;</break>
			</case><case pos:line="79" pos:column="25">case <expr><lit:literal type="number" pos:line="79" pos:column="30">2</lit:literal></expr>:
				<comment type="line" pos:line="80" pos:column="33">//get customer names filtering through education </comment>
					<expr_stmt><expr><call><name><name pos:line="81" pos:column="41">System</name><op:operator pos:line="81" pos:column="47">.</op:operator><name pos:line="81" pos:column="48">out</name><op:operator pos:line="81" pos:column="51">.</op:operator><name pos:line="81" pos:column="52">print</name></name><argument_list pos:line="81" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="81" pos:column="58">"Enter education level : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="82" pos:column="41">String</name></type> <name pos:line="82" pos:column="48">edu</name> <init pos:line="82" pos:column="52">= <expr><call><name><name pos:line="82" pos:column="54">in</name><op:operator pos:line="82" pos:column="56">.</op:operator><name pos:line="82" pos:column="57">nextLine</name></name><argument_list pos:line="82" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="83" pos:column="41">System</name><op:operator pos:line="83" pos:column="47">.</op:operator><name pos:line="83" pos:column="48">out</name><op:operator pos:line="83" pos:column="51">.</op:operator><name pos:line="83" pos:column="52">println</name></name><argument_list pos:line="83" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="83" pos:column="60">"------------------------------------------"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="84" pos:column="41">user</name><op:operator pos:line="84" pos:column="45">.</op:operator><name pos:line="84" pos:column="46">filterEducation</name></name><argument_list pos:line="84" pos:column="61">(<argument><expr><name pos:line="84" pos:column="62">edu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="85" pos:column="41">System</name><op:operator pos:line="85" pos:column="47">.</op:operator><name pos:line="85" pos:column="48">out</name><op:operator pos:line="85" pos:column="51">.</op:operator><name pos:line="85" pos:column="52">println</name></name><argument_list pos:line="85" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="85" pos:column="60">"------------------------------------------"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break pos:line="86" pos:column="41">break;</break>
			</case><case pos:line="87" pos:column="25">case <expr><lit:literal type="number" pos:line="87" pos:column="30">3</lit:literal></expr>:
				<comment type="line" pos:line="88" pos:column="33">//get customer names filtering through Occupation</comment>
					<expr_stmt><expr><call><name><name pos:line="89" pos:column="41">System</name><op:operator pos:line="89" pos:column="47">.</op:operator><name pos:line="89" pos:column="48">out</name><op:operator pos:line="89" pos:column="51">.</op:operator><name pos:line="89" pos:column="52">print</name></name><argument_list pos:line="89" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="89" pos:column="58">"Enter Occupation : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="90" pos:column="41">String</name></type> <name pos:line="90" pos:column="48">occupation</name> <init pos:line="90" pos:column="59">= <expr><call><name><name pos:line="90" pos:column="61">in</name><op:operator pos:line="90" pos:column="63">.</op:operator><name pos:line="90" pos:column="64">nextLine</name></name><argument_list pos:line="90" pos:column="72">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="91" pos:column="41">System</name><op:operator pos:line="91" pos:column="47">.</op:operator><name pos:line="91" pos:column="48">out</name><op:operator pos:line="91" pos:column="51">.</op:operator><name pos:line="91" pos:column="52">println</name></name><argument_list pos:line="91" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="91" pos:column="60">"------------------------------------------"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="92" pos:column="41">user</name><op:operator pos:line="92" pos:column="45">.</op:operator><name pos:line="92" pos:column="46">filterOccupation</name></name><argument_list pos:line="92" pos:column="62">(<argument><expr><name pos:line="92" pos:column="63">occupation</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="93" pos:column="41">System</name><op:operator pos:line="93" pos:column="47">.</op:operator><name pos:line="93" pos:column="48">out</name><op:operator pos:line="93" pos:column="51">.</op:operator><name pos:line="93" pos:column="52">println</name></name><argument_list pos:line="93" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="93" pos:column="60">"------------------------------------------"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break pos:line="94" pos:column="41">break;</break>
			</case><case pos:line="95" pos:column="25">case <expr><lit:literal type="number" pos:line="95" pos:column="30">4</lit:literal></expr>:
				<comment type="line" pos:line="96" pos:column="33">//get customer names filtering through Marital Status</comment>
					<expr_stmt><expr><call><name><name pos:line="97" pos:column="41">System</name><op:operator pos:line="97" pos:column="47">.</op:operator><name pos:line="97" pos:column="48">out</name><op:operator pos:line="97" pos:column="51">.</op:operator><name pos:line="97" pos:column="52">print</name></name><argument_list pos:line="97" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="97" pos:column="58">"Enter Marital Status : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="98" pos:column="41">String</name></type> <name pos:line="98" pos:column="48">status</name> <init pos:line="98" pos:column="55">= <expr><call><name><name pos:line="98" pos:column="57">in</name><op:operator pos:line="98" pos:column="59">.</op:operator><name pos:line="98" pos:column="60">nextLine</name></name><argument_list pos:line="98" pos:column="68">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="99" pos:column="41">System</name><op:operator pos:line="99" pos:column="47">.</op:operator><name pos:line="99" pos:column="48">out</name><op:operator pos:line="99" pos:column="51">.</op:operator><name pos:line="99" pos:column="52">println</name></name><argument_list pos:line="99" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="99" pos:column="60">"------------------------------------------"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="100" pos:column="41">user</name><op:operator pos:line="100" pos:column="45">.</op:operator><name pos:line="100" pos:column="46">filterMaritalStatus</name></name><argument_list pos:line="100" pos:column="65">(<argument><expr><name pos:line="100" pos:column="66">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="101" pos:column="41">System</name><op:operator pos:line="101" pos:column="47">.</op:operator><name pos:line="101" pos:column="48">out</name><op:operator pos:line="101" pos:column="51">.</op:operator><name pos:line="101" pos:column="52">println</name></name><argument_list pos:line="101" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="101" pos:column="60">"------------------------------------------"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break pos:line="102" pos:column="41">break;</break>
			</case><case pos:line="103" pos:column="25">case <expr><lit:literal type="number" pos:line="103" pos:column="30">5</lit:literal></expr>:
				<comment type="line" pos:line="104" pos:column="33">//get customer names filtering through estimated income</comment>
					<expr_stmt><expr><call><name><name pos:line="105" pos:column="41">System</name><op:operator pos:line="105" pos:column="47">.</op:operator><name pos:line="105" pos:column="48">out</name><op:operator pos:line="105" pos:column="51">.</op:operator><name pos:line="105" pos:column="52">print</name></name><argument_list pos:line="105" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="105" pos:column="58">"Enter Estimated income : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="106" pos:column="41">String</name></type> <name pos:line="106" pos:column="48">getIncome</name> <init pos:line="106" pos:column="58">= <expr><call><name><name pos:line="106" pos:column="60">in</name><op:operator pos:line="106" pos:column="62">.</op:operator><name pos:line="106" pos:column="63">nextLine</name></name><argument_list pos:line="106" pos:column="71">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="107" pos:column="41">System</name><op:operator pos:line="107" pos:column="47">.</op:operator><name pos:line="107" pos:column="48">out</name><op:operator pos:line="107" pos:column="51">.</op:operator><name pos:line="107" pos:column="52">println</name></name><argument_list pos:line="107" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="107" pos:column="60">"------------------------------------------"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="108" pos:column="41">user</name><op:operator pos:line="108" pos:column="45">.</op:operator><name pos:line="108" pos:column="46">filterEstimatedIncome</name></name><argument_list pos:line="108" pos:column="67">(<argument><expr><name pos:line="108" pos:column="68">getIncome</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="109" pos:column="41">System</name><op:operator pos:line="109" pos:column="47">.</op:operator><name pos:line="109" pos:column="48">out</name><op:operator pos:line="109" pos:column="51">.</op:operator><name pos:line="109" pos:column="52">println</name></name><argument_list pos:line="109" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="109" pos:column="60">"------------------------------------------"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break pos:line="110" pos:column="41">break;</break>
			</case><default pos:line="111" pos:column="25">default:
					<expr_stmt><expr><call><name><name pos:line="112" pos:column="41">System</name><op:operator pos:line="112" pos:column="47">.</op:operator><name pos:line="112" pos:column="48">out</name><op:operator pos:line="112" pos:column="51">.</op:operator><name pos:line="112" pos:column="52">println</name></name><argument_list pos:line="112" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="112" pos:column="60">"You chose invalid option. Please try again..."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break pos:line="113" pos:column="33">break;</break>
					
					 
			
			</default>}</block></switch>
		}</block>while<condition pos:line="118" pos:column="23">(<expr><name pos:line="118" pos:column="24">choice</name> <op:operator pos:line="118" pos:column="31">&gt;</op:operator> <lit:literal type="number" pos:line="118" pos:column="33">0</lit:literal> <op:operator pos:line="118" pos:column="35">&amp;&amp;</op:operator> <name pos:line="118" pos:column="38">choice</name> <op:operator pos:line="118" pos:column="45">&lt;</op:operator> <lit:literal type="number" pos:line="118" pos:column="47">6</lit:literal></expr>)</condition>;</do>
	}</block></function>
	
	<comment type="block" format="javadoc" pos:line="121" pos:column="9">/**
	 * This method accepts all user inputs for creating a new user and then 
	 * passes it be inserted into table
	 * @author Poornima Tantry
	 */</comment>
	<function><type><specifier pos:line="126" pos:column="9">public</specifier> <name pos:line="126" pos:column="16">void</name></type> <name pos:line="126" pos:column="21">inputForCreateUser</name><parameter_list pos:line="126" pos:column="39">()</parameter_list>
	<block pos:line="127" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="128" pos:column="17">String</name></type> <name pos:line="128" pos:column="24">getInput</name></decl><op:operator pos:line="128" pos:column="32">,</op:operator> <decl><type ref="prev"/><name pos:line="128" pos:column="34">name</name></decl><op:operator pos:line="128" pos:column="38">,</op:operator> <decl><type ref="prev"/><name pos:line="128" pos:column="40">fName</name></decl><op:operator pos:line="128" pos:column="45">,</op:operator> <decl><type ref="prev"/><name pos:line="128" pos:column="47">mName</name></decl><op:operator pos:line="128" pos:column="52">,</op:operator> <decl><type ref="prev"/><name pos:line="128" pos:column="54">lName</name></decl><op:operator pos:line="128" pos:column="59">,</op:operator> <decl><type ref="prev"/><name pos:line="128" pos:column="61">zipcode</name></decl><op:operator pos:line="128" pos:column="68">,</op:operator> <decl><type ref="prev"/><name pos:line="128" pos:column="70">ssn</name></decl><op:operator pos:line="128" pos:column="73">,</op:operator> <decl><type ref="prev"/><name pos:line="128" pos:column="75">sex</name></decl><op:operator pos:line="128" pos:column="78">,</op:operator> <decl><type ref="prev"/><name pos:line="128" pos:column="80">marital</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="129" pos:column="17">String</name></type> <name pos:line="129" pos:column="24">race</name></decl><op:operator pos:line="129" pos:column="28">,</op:operator> <decl><type ref="prev"/><name pos:line="129" pos:column="30">taxStatus</name></decl><op:operator pos:line="129" pos:column="39">,</op:operator> <decl><type ref="prev"/><name pos:line="129" pos:column="41">taxDetails</name></decl><op:operator pos:line="129" pos:column="51">,</op:operator> <decl><type ref="prev"/><name pos:line="129" pos:column="53">houseHoldDetails</name></decl><op:operator pos:line="129" pos:column="69">,</op:operator> <decl><type ref="prev"/><name pos:line="129" pos:column="71">fatherOrigin</name></decl><op:operator pos:line="129" pos:column="83">,</op:operator> <decl><type ref="prev"/><name pos:line="129" pos:column="85">motherOrigin</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="130" pos:column="17">String</name></type> <name pos:line="130" pos:column="24">birthCountry</name></decl><op:operator pos:line="130" pos:column="36">,</op:operator> <decl><type ref="prev"/><name pos:line="130" pos:column="38">citizenship</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="131" pos:column="17">String</name></type> <name pos:line="131" pos:column="24">parents</name></decl><op:operator pos:line="131" pos:column="31">,</op:operator> <decl><type ref="prev"/><name pos:line="131" pos:column="33">unEmploymentReason</name></decl><op:operator pos:line="131" pos:column="51">,</op:operator> <decl><type ref="prev"/><name pos:line="131" pos:column="53">employmentStatus</name></decl><op:operator pos:line="131" pos:column="69">,</op:operator> <decl><type ref="prev"/><name pos:line="131" pos:column="71">education</name></decl><op:operator pos:line="131" pos:column="80">,</op:operator> <decl><type ref="prev"/><name pos:line="131" pos:column="82">eduEnroll</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="132" pos:column="17">String</name></type> <name pos:line="132" pos:column="24">workClass</name></decl><op:operator pos:line="132" pos:column="33">,</op:operator> <decl><type ref="prev"/><name pos:line="132" pos:column="35">unionMember</name></decl>;</decl_stmt>			
		<decl_stmt><decl><type><name pos:line="133" pos:column="17">int</name></type> <name pos:line="133" pos:column="21">age</name></decl><op:operator pos:line="133" pos:column="24">,</op:operator> <decl><type ref="prev"/><name pos:line="133" pos:column="26">capitalGains</name></decl><op:operator pos:line="133" pos:column="38">,</op:operator> <decl><type ref="prev"/><name pos:line="133" pos:column="40">capitalLosses</name></decl><op:operator pos:line="133" pos:column="53">,</op:operator> <decl><type ref="prev"/><name pos:line="133" pos:column="55">stockDividend</name></decl><op:operator pos:line="133" pos:column="68">,</op:operator> <decl><type ref="prev"/><name pos:line="133" pos:column="70">industryCode</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="134" pos:column="17">int</name></type> <name pos:line="134" pos:column="21">employerSize</name></decl><op:operator pos:line="134" pos:column="33">,</op:operator> <decl><type ref="prev"/><name pos:line="134" pos:column="35">occupationCode</name></decl><op:operator pos:line="134" pos:column="49">,</op:operator> <decl><type ref="prev"/><name pos:line="134" pos:column="51">weekWage</name></decl><op:operator pos:line="134" pos:column="59">,</op:operator> <decl><type ref="prev"/><name pos:line="134" pos:column="61">workWeeks</name></decl><op:operator pos:line="134" pos:column="70">,</op:operator> <decl><type ref="prev"/><name pos:line="134" pos:column="72">selfEmployed</name> <init pos:line="134" pos:column="85">= <expr><lit:literal type="number" pos:line="134" pos:column="87">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="135" pos:column="17">Statement</name></type> <name pos:line="135" pos:column="27">stat</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="136" pos:column="17">ResultSet</name></type> <name pos:line="136" pos:column="27">result</name></decl>;</decl_stmt>
		
		<comment type="line" pos:line="138" pos:column="17">//first name cannot be a null value</comment>
		<do pos:line="139" pos:column="17">do<block pos:line="139" pos:column="19">{
			<expr_stmt><expr><call><name><name pos:line="140" pos:column="25">System</name><op:operator pos:line="140" pos:column="31">.</op:operator><name pos:line="140" pos:column="32">out</name><op:operator pos:line="140" pos:column="35">.</op:operator><name pos:line="140" pos:column="36">print</name></name><argument_list pos:line="140" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="140" pos:column="42">"Customer's First-Name : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="141" pos:column="25">fName</name> <op:operator pos:line="141" pos:column="31">=</op:operator> <call><name><name pos:line="141" pos:column="33">in</name><op:operator pos:line="141" pos:column="35">.</op:operator><name pos:line="141" pos:column="36">nextLine</name></name><argument_list pos:line="141" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
		}</block>while<condition pos:line="142" pos:column="23">(<expr><call><name><name pos:line="142" pos:column="24">fName</name><op:operator pos:line="142" pos:column="29">.</op:operator><name pos:line="142" pos:column="30">length</name></name><argument_list pos:line="142" pos:column="36">()</argument_list></call> <op:operator pos:line="142" pos:column="39">&lt;=</op:operator> <lit:literal type="number" pos:line="142" pos:column="42">0</lit:literal></expr>)</condition>;</do>
		
		<comment type="line" pos:line="144" pos:column="17">//middle name</comment>
		<expr_stmt><expr><call><name><name pos:line="145" pos:column="17">System</name><op:operator pos:line="145" pos:column="23">.</op:operator><name pos:line="145" pos:column="24">out</name><op:operator pos:line="145" pos:column="27">.</op:operator><name pos:line="145" pos:column="28">print</name></name><argument_list pos:line="145" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="145" pos:column="34">"Customer's middle-Name : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="146" pos:column="17">mName</name> <op:operator pos:line="146" pos:column="23">=</op:operator> <call><name><name pos:line="146" pos:column="25">in</name><op:operator pos:line="146" pos:column="27">.</op:operator><name pos:line="146" pos:column="28">nextLine</name></name><argument_list pos:line="146" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
		
		<comment type="line" pos:line="148" pos:column="17">//last name</comment>
		<do pos:line="149" pos:column="17">do
		<block pos:line="150" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="151" pos:column="25">System</name><op:operator pos:line="151" pos:column="31">.</op:operator><name pos:line="151" pos:column="32">out</name><op:operator pos:line="151" pos:column="35">.</op:operator><name pos:line="151" pos:column="36">print</name></name><argument_list pos:line="151" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="151" pos:column="42">"Customer's Last-Name : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="152" pos:column="25">lName</name> <op:operator pos:line="152" pos:column="31">=</op:operator> <call><name><name pos:line="152" pos:column="33">in</name><op:operator pos:line="152" pos:column="35">.</op:operator><name pos:line="152" pos:column="36">nextLine</name></name><argument_list pos:line="152" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
		}</block>while<condition pos:line="153" pos:column="23">(<expr><call><name><name pos:line="153" pos:column="24">lName</name><op:operator pos:line="153" pos:column="29">.</op:operator><name pos:line="153" pos:column="30">length</name></name><argument_list pos:line="153" pos:column="36">()</argument_list></call> <op:operator pos:line="153" pos:column="39">&lt;=</op:operator> <lit:literal type="number" pos:line="153" pos:column="42">0</lit:literal></expr>)</condition>;</do>
		
		<comment type="line" pos:line="155" pos:column="17">//form the complete name here</comment>
		<if pos:line="156" pos:column="17">if<condition pos:line="156" pos:column="19">(<expr><call><name><name pos:line="156" pos:column="20">mName</name><op:operator pos:line="156" pos:column="25">.</op:operator><name pos:line="156" pos:column="26">length</name></name><argument_list pos:line="156" pos:column="32">()</argument_list></call> <op:operator pos:line="156" pos:column="35">==</op:operator> <lit:literal type="number" pos:line="156" pos:column="38">0</lit:literal></expr>)</condition><then pos:line="156" pos:column="40">
			<expr_stmt><expr><name pos:line="157" pos:column="25">name</name> <op:operator pos:line="157" pos:column="30">=</op:operator> <name pos:line="157" pos:column="32">fName</name> <op:operator pos:line="157" pos:column="38">+</op:operator> <lit:literal type="string" pos:line="157" pos:column="40">" ,"</lit:literal> <op:operator pos:line="157" pos:column="45">+</op:operator> <name pos:line="157" pos:column="47">lName</name></expr>;</expr_stmt></then>
		<else pos:line="158" pos:column="17">else
			<expr_stmt><expr><name pos:line="159" pos:column="25">name</name> <op:operator pos:line="159" pos:column="30">=</op:operator> <name pos:line="159" pos:column="32">fName</name> <op:operator pos:line="159" pos:column="38">+</op:operator> <lit:literal type="string" pos:line="159" pos:column="40">" ,"</lit:literal> <op:operator pos:line="159" pos:column="45">+</op:operator> <name pos:line="159" pos:column="47">mName</name> <op:operator pos:line="159" pos:column="53">+</op:operator> <lit:literal type="string" pos:line="159" pos:column="55">" ,"</lit:literal> <op:operator pos:line="159" pos:column="60">+</op:operator> <name pos:line="159" pos:column="62">lName</name></expr>;</expr_stmt></else></if>
		
		<comment type="line" pos:line="161" pos:column="17">//customer's SSN</comment>
		<do pos:line="162" pos:column="17">do<block pos:line="162" pos:column="19">{
		<expr_stmt><expr><call><name><name pos:line="163" pos:column="17">System</name><op:operator pos:line="163" pos:column="23">.</op:operator><name pos:line="163" pos:column="24">out</name><op:operator pos:line="163" pos:column="27">.</op:operator><name pos:line="163" pos:column="28">print</name></name><argument_list pos:line="163" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="163" pos:column="34">"Customer's SSN : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="164" pos:column="17">ssn</name> <op:operator pos:line="164" pos:column="21">=</op:operator> <call><name><name pos:line="164" pos:column="23">in</name><op:operator pos:line="164" pos:column="25">.</op:operator><name pos:line="164" pos:column="26">nextLine</name></name><argument_list pos:line="164" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="165" pos:column="17">int</name></type> <name pos:line="165" pos:column="21">tempssn</name> <init pos:line="165" pos:column="29">= <expr><call><name><name pos:line="165" pos:column="31">acc</name><op:operator pos:line="165" pos:column="34">.</op:operator><name pos:line="165" pos:column="35">checkLetterDigit</name></name><argument_list pos:line="165" pos:column="51">(<argument><expr><name pos:line="165" pos:column="52">ssn</name></expr></argument>, <argument><expr><name><name pos:line="165" pos:column="57">RiskItConstants</name><op:operator pos:line="165" pos:column="72">.</op:operator><name pos:line="165" pos:column="73">INVALID_VALUE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="166" pos:column="17">ssn</name> <op:operator pos:line="166" pos:column="21">=</op:operator> <call><name><name pos:line="166" pos:column="23">Integer</name><op:operator pos:line="166" pos:column="30">.</op:operator><name pos:line="166" pos:column="31">toString</name></name><argument_list pos:line="166" pos:column="39">(<argument><expr><name pos:line="166" pos:column="40">tempssn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>while<condition pos:line="167" pos:column="23">(<expr><call><name><name pos:line="167" pos:column="24">ssn</name><op:operator pos:line="167" pos:column="27">.</op:operator><name pos:line="167" pos:column="28">length</name></name><argument_list pos:line="167" pos:column="34">()</argument_list></call> <op:operator pos:line="167" pos:column="37">&lt;=</op:operator> <lit:literal type="number" pos:line="167" pos:column="40">0</lit:literal> <op:operator pos:line="167" pos:column="42">||</op:operator> <call><name><name pos:line="167" pos:column="45">ssn</name><op:operator pos:line="167" pos:column="48">.</op:operator><name pos:line="167" pos:column="49">equalsIgnoreCase</name></name><argument_list pos:line="167" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="167" pos:column="66">"0"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition>;</do>
		
		<try pos:line="169" pos:column="17">try
		<block pos:line="170" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="171" pos:column="25">Connection</name></type> <name pos:line="171" pos:column="36">conn</name> <init pos:line="171" pos:column="41">= <expr><call><name><name pos:line="171" pos:column="43">DatabaseConnection</name><op:operator pos:line="171" pos:column="61">.</op:operator><name pos:line="171" pos:column="62">getConnection</name></name><argument_list pos:line="171" pos:column="75">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="172" pos:column="25">stat</name> <op:operator pos:line="172" pos:column="30">=</op:operator> <call><name><name pos:line="172" pos:column="32">conn</name><op:operator pos:line="172" pos:column="36">.</op:operator><name pos:line="172" pos:column="37">createStatement</name></name><argument_list pos:line="172" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
			
			<comment type="line" pos:line="174" pos:column="25">//check to see if customer already in database</comment>
			<decl_stmt><decl><type><name pos:line="175" pos:column="25">String</name></type> <name pos:line="175" pos:column="32">cmd_search</name> <init pos:line="175" pos:column="43">= <expr><lit:literal type="string" pos:line="175" pos:column="45">"SELECT * from userrecord where ssn = "</lit:literal> <op:operator pos:line="175" pos:column="85">+</op:operator> <name pos:line="175" pos:column="87">ssn</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="176" pos:column="25">result</name> <op:operator pos:line="176" pos:column="32">=</op:operator> <call><name><name pos:line="176" pos:column="34">stat</name><op:operator pos:line="176" pos:column="38">.</op:operator><name pos:line="176" pos:column="39">executeQuery</name></name><argument_list pos:line="176" pos:column="51">(<argument><expr><name pos:line="176" pos:column="52">cmd_search</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>		
			
			<comment type="line" pos:line="178" pos:column="25">//check to see if the customer already exists in our database</comment>
			<decl_stmt><decl><type><name pos:line="179" pos:column="25">boolean</name></type> <name pos:line="179" pos:column="33">checkCustomerFlag</name> <init pos:line="179" pos:column="51">= <expr><lit:literal type="boolean" pos:line="179" pos:column="53">false</lit:literal></expr></init></decl>;</decl_stmt>
			<while pos:line="180" pos:column="25">while<condition pos:line="180" pos:column="30">(<expr><call><name><name pos:line="180" pos:column="31">result</name><op:operator pos:line="180" pos:column="37">.</op:operator><name pos:line="180" pos:column="38">next</name></name><argument_list pos:line="180" pos:column="42">()</argument_list></call></expr>)</condition>
			<block pos:line="181" pos:column="25">{	
				<expr_stmt><expr><name pos:line="182" pos:column="33">checkCustomerFlag</name> <op:operator pos:line="182" pos:column="51">=</op:operator> <lit:literal type="boolean" pos:line="182" pos:column="53">true</lit:literal></expr>;</expr_stmt>
			}</block></while>
			
			
			<if pos:line="186" pos:column="25">if<condition pos:line="186" pos:column="27">(<expr><name pos:line="186" pos:column="28">checkCustomerFlag</name></expr>)</condition><then pos:line="186" pos:column="46">
			<block pos:line="187" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="188" pos:column="33">System</name><op:operator pos:line="188" pos:column="39">.</op:operator><name pos:line="188" pos:column="40">out</name><op:operator pos:line="188" pos:column="43">.</op:operator><name pos:line="188" pos:column="44">println</name></name><argument_list pos:line="188" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="188" pos:column="52">"--------------------------------------------"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="189" pos:column="33">System</name><op:operator pos:line="189" pos:column="39">.</op:operator><name pos:line="189" pos:column="40">out</name><op:operator pos:line="189" pos:column="43">.</op:operator><name pos:line="189" pos:column="44">println</name></name><argument_list pos:line="189" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="189" pos:column="52">"This customer is already in our database"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="190" pos:column="33">System</name><op:operator pos:line="190" pos:column="39">.</op:operator><name pos:line="190" pos:column="40">out</name><op:operator pos:line="190" pos:column="43">.</op:operator><name pos:line="190" pos:column="44">println</name></name><argument_list pos:line="190" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="190" pos:column="52">"--------------------------------------------"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="192" pos:column="25">else
			<block pos:line="193" pos:column="25">{
				<comment type="line" pos:line="194" pos:column="33">//get all data and insert into database</comment>
				<do pos:line="195" pos:column="33">do<block pos:line="195" pos:column="35">{
					<expr_stmt><expr><call><name><name pos:line="196" pos:column="41">System</name><op:operator pos:line="196" pos:column="47">.</op:operator><name pos:line="196" pos:column="48">out</name><op:operator pos:line="196" pos:column="51">.</op:operator><name pos:line="196" pos:column="52">print</name></name><argument_list pos:line="196" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="196" pos:column="58">"Customer's age : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="197" pos:column="41">getInput</name> <op:operator pos:line="197" pos:column="50">=</op:operator> <call><name><name pos:line="197" pos:column="52">in</name><op:operator pos:line="197" pos:column="54">.</op:operator><name pos:line="197" pos:column="55">nextLine</name></name><argument_list pos:line="197" pos:column="63">()</argument_list></call></expr>;</expr_stmt>
				}</block>while<condition pos:line="198" pos:column="39">(<expr><call><name><name pos:line="198" pos:column="40">getInput</name><op:operator pos:line="198" pos:column="48">.</op:operator><name pos:line="198" pos:column="49">length</name></name><argument_list pos:line="198" pos:column="55">()</argument_list></call> <op:operator pos:line="198" pos:column="58">&lt;=</op:operator><lit:literal type="number" pos:line="198" pos:column="60">0</lit:literal></expr>)</condition>;</do>
				<expr_stmt><expr><name pos:line="199" pos:column="33">age</name> <op:operator pos:line="199" pos:column="37">=</op:operator> <call><name><name pos:line="199" pos:column="39">Integer</name><op:operator pos:line="199" pos:column="46">.</op:operator><name pos:line="199" pos:column="47">parseInt</name></name><argument_list pos:line="199" pos:column="55">(<argument><expr><name pos:line="199" pos:column="56">getInput</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			
				<do pos:line="202" pos:column="33">do<block pos:line="202" pos:column="35">{
					<expr_stmt><expr><call><name><name pos:line="203" pos:column="41">System</name><op:operator pos:line="203" pos:column="47">.</op:operator><name pos:line="203" pos:column="48">out</name><op:operator pos:line="203" pos:column="51">.</op:operator><name pos:line="203" pos:column="52">print</name></name><argument_list pos:line="203" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="203" pos:column="58">"Customer's sex : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="204" pos:column="41">sex</name> <op:operator pos:line="204" pos:column="45">=</op:operator> <call><name><name pos:line="204" pos:column="47">in</name><op:operator pos:line="204" pos:column="49">.</op:operator><name pos:line="204" pos:column="50">nextLine</name></name><argument_list pos:line="204" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block>while<condition pos:line="205" pos:column="39">(<expr><call><name><name pos:line="205" pos:column="40">sex</name><op:operator pos:line="205" pos:column="43">.</op:operator><name pos:line="205" pos:column="44">length</name></name><argument_list pos:line="205" pos:column="50">()</argument_list></call> <op:operator pos:line="205" pos:column="53">&lt;=</op:operator> <lit:literal type="number" pos:line="205" pos:column="56">0</lit:literal></expr>)</condition>;</do>
			
				<do pos:line="207" pos:column="33">do<block pos:line="207" pos:column="35">{
					<expr_stmt><expr><call><name><name pos:line="208" pos:column="41">System</name><op:operator pos:line="208" pos:column="47">.</op:operator><name pos:line="208" pos:column="48">out</name><op:operator pos:line="208" pos:column="51">.</op:operator><name pos:line="208" pos:column="52">print</name></name><argument_list pos:line="208" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="208" pos:column="58">"Customer's race : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="209" pos:column="41">race</name> <op:operator pos:line="209" pos:column="46">=</op:operator> <call><name><name pos:line="209" pos:column="48">in</name><op:operator pos:line="209" pos:column="50">.</op:operator><name pos:line="209" pos:column="51">nextLine</name></name><argument_list pos:line="209" pos:column="59">()</argument_list></call></expr>;</expr_stmt>
				}</block>while<condition pos:line="210" pos:column="39">(<expr><call><name><name pos:line="210" pos:column="40">race</name><op:operator pos:line="210" pos:column="44">.</op:operator><name pos:line="210" pos:column="45">length</name></name><argument_list pos:line="210" pos:column="51">()</argument_list></call> <op:operator pos:line="210" pos:column="54">&lt;=</op:operator> <lit:literal type="number" pos:line="210" pos:column="57">0</lit:literal></expr>)</condition>;</do>
				
				<do pos:line="212" pos:column="33">do<block pos:line="212" pos:column="35">{
					<expr_stmt><expr><call><name><name pos:line="213" pos:column="41">System</name><op:operator pos:line="213" pos:column="47">.</op:operator><name pos:line="213" pos:column="48">out</name><op:operator pos:line="213" pos:column="51">.</op:operator><name pos:line="213" pos:column="52">print</name></name><argument_list pos:line="213" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="213" pos:column="58">"Customer's marital-Status : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="214" pos:column="41">marital</name> <op:operator pos:line="214" pos:column="49">=</op:operator> <call><name><name pos:line="214" pos:column="51">in</name><op:operator pos:line="214" pos:column="53">.</op:operator><name pos:line="214" pos:column="54">nextLine</name></name><argument_list pos:line="214" pos:column="62">()</argument_list></call></expr>;</expr_stmt>
				}</block>while<condition pos:line="215" pos:column="39">(<expr><call><name><name pos:line="215" pos:column="40">marital</name><op:operator pos:line="215" pos:column="47">.</op:operator><name pos:line="215" pos:column="48">length</name></name><argument_list pos:line="215" pos:column="54">()</argument_list></call> <op:operator pos:line="215" pos:column="57">&lt;=</op:operator> <lit:literal type="number" pos:line="215" pos:column="60">0</lit:literal></expr>)</condition>;</do>
			
				<do pos:line="217" pos:column="33">do<block pos:line="217" pos:column="35">{
					<expr_stmt><expr><call><name><name pos:line="218" pos:column="41">System</name><op:operator pos:line="218" pos:column="47">.</op:operator><name pos:line="218" pos:column="48">out</name><op:operator pos:line="218" pos:column="51">.</op:operator><name pos:line="218" pos:column="52">print</name></name><argument_list pos:line="218" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="218" pos:column="58">"Customer's citizenship-status : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="219" pos:column="41">citizenship</name> <op:operator pos:line="219" pos:column="53">=</op:operator> <call><name><name pos:line="219" pos:column="55">in</name><op:operator pos:line="219" pos:column="57">.</op:operator><name pos:line="219" pos:column="58">nextLine</name></name><argument_list pos:line="219" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
				}</block>while<condition pos:line="220" pos:column="39">(<expr><call><name><name pos:line="220" pos:column="40">citizenship</name><op:operator pos:line="220" pos:column="51">.</op:operator><name pos:line="220" pos:column="52">length</name></name><argument_list pos:line="220" pos:column="58">()</argument_list></call> <op:operator pos:line="220" pos:column="61">&lt;=</op:operator> <lit:literal type="number" pos:line="220" pos:column="64">0</lit:literal></expr>)</condition>;</do>
			
				<do pos:line="222" pos:column="33">do<block pos:line="222" pos:column="35">{
				<expr_stmt><expr><call><name><name pos:line="223" pos:column="33">System</name><op:operator pos:line="223" pos:column="39">.</op:operator><name pos:line="223" pos:column="40">out</name><op:operator pos:line="223" pos:column="43">.</op:operator><name pos:line="223" pos:column="44">print</name></name><argument_list pos:line="223" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="223" pos:column="50">"Customer's tax-filing-status : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="224" pos:column="33">taxStatus</name> <op:operator pos:line="224" pos:column="43">=</op:operator> <call><name><name pos:line="224" pos:column="45">in</name><op:operator pos:line="224" pos:column="47">.</op:operator><name pos:line="224" pos:column="48">nextLine</name></name><argument_list pos:line="224" pos:column="56">()</argument_list></call></expr>;</expr_stmt>
				}</block>while<condition pos:line="225" pos:column="39">(<expr><call><name><name pos:line="225" pos:column="40">taxStatus</name><op:operator pos:line="225" pos:column="49">.</op:operator><name pos:line="225" pos:column="50">length</name></name><argument_list pos:line="225" pos:column="56">()</argument_list></call> <op:operator pos:line="225" pos:column="59">&lt;=</op:operator> <lit:literal type="number" pos:line="225" pos:column="62">0</lit:literal></expr>)</condition>;</do>
			
				<do pos:line="227" pos:column="33">do<block pos:line="227" pos:column="35">{
					<expr_stmt><expr><call><name><name pos:line="228" pos:column="41">System</name><op:operator pos:line="228" pos:column="47">.</op:operator><name pos:line="228" pos:column="48">out</name><op:operator pos:line="228" pos:column="51">.</op:operator><name pos:line="228" pos:column="52">print</name></name><argument_list pos:line="228" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="228" pos:column="58">"Customer's details for given tax-filing-status : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="229" pos:column="41">taxDetails</name> <op:operator pos:line="229" pos:column="52">=</op:operator> <call><name><name pos:line="229" pos:column="54">in</name><op:operator pos:line="229" pos:column="56">.</op:operator><name pos:line="229" pos:column="57">nextLine</name></name><argument_list pos:line="229" pos:column="65">()</argument_list></call></expr>;</expr_stmt>
				}</block>while<condition pos:line="230" pos:column="39">(<expr><call><name><name pos:line="230" pos:column="40">taxDetails</name><op:operator pos:line="230" pos:column="50">.</op:operator><name pos:line="230" pos:column="51">length</name></name><argument_list pos:line="230" pos:column="57">()</argument_list></call> <op:operator pos:line="230" pos:column="60">&lt;=</op:operator> <lit:literal type="number" pos:line="230" pos:column="63">0</lit:literal></expr>)</condition>;</do>
			
				<do pos:line="232" pos:column="33">do<block pos:line="232" pos:column="35">{
					<expr_stmt><expr><call><name><name pos:line="233" pos:column="41">System</name><op:operator pos:line="233" pos:column="47">.</op:operator><name pos:line="233" pos:column="48">out</name><op:operator pos:line="233" pos:column="51">.</op:operator><name pos:line="233" pos:column="52">print</name></name><argument_list pos:line="233" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="233" pos:column="58">"Customer's house-hold-details : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="234" pos:column="41">houseHoldDetails</name> <op:operator pos:line="234" pos:column="58">=</op:operator> <call><name><name pos:line="234" pos:column="60">in</name><op:operator pos:line="234" pos:column="62">.</op:operator><name pos:line="234" pos:column="63">nextLine</name></name><argument_list pos:line="234" pos:column="71">()</argument_list></call></expr>;</expr_stmt>
				}</block>while<condition pos:line="235" pos:column="39">(<expr><call><name><name pos:line="235" pos:column="40">houseHoldDetails</name><op:operator pos:line="235" pos:column="56">.</op:operator><name pos:line="235" pos:column="57">length</name></name><argument_list pos:line="235" pos:column="63">()</argument_list></call> <op:operator pos:line="235" pos:column="66">&lt;=</op:operator> <lit:literal type="number" pos:line="235" pos:column="69">0</lit:literal></expr>)</condition>;</do>
			
				<do pos:line="237" pos:column="33">do<block pos:line="237" pos:column="35">{
					<expr_stmt><expr><call><name><name pos:line="238" pos:column="41">System</name><op:operator pos:line="238" pos:column="47">.</op:operator><name pos:line="238" pos:column="48">out</name><op:operator pos:line="238" pos:column="51">.</op:operator><name pos:line="238" pos:column="52">print</name></name><argument_list pos:line="238" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="238" pos:column="58">"Customer's father's origin : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="239" pos:column="41">fatherOrigin</name> <op:operator pos:line="239" pos:column="54">=</op:operator> <call><name><name pos:line="239" pos:column="56">in</name><op:operator pos:line="239" pos:column="58">.</op:operator><name pos:line="239" pos:column="59">nextLine</name></name><argument_list pos:line="239" pos:column="67">()</argument_list></call></expr>;</expr_stmt>
				}</block>while<condition pos:line="240" pos:column="39">(<expr><call><name><name pos:line="240" pos:column="40">fatherOrigin</name><op:operator pos:line="240" pos:column="52">.</op:operator><name pos:line="240" pos:column="53">length</name></name><argument_list pos:line="240" pos:column="59">()</argument_list></call> <op:operator pos:line="240" pos:column="62">&lt;=</op:operator> <lit:literal type="number" pos:line="240" pos:column="65">0</lit:literal></expr>)</condition>;</do>
			
				<do pos:line="242" pos:column="33">do<block pos:line="242" pos:column="35">{
					<expr_stmt><expr><call><name><name pos:line="243" pos:column="41">System</name><op:operator pos:line="243" pos:column="47">.</op:operator><name pos:line="243" pos:column="48">out</name><op:operator pos:line="243" pos:column="51">.</op:operator><name pos:line="243" pos:column="52">print</name></name><argument_list pos:line="243" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="243" pos:column="58">"Customer's mother's origin : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="244" pos:column="41">motherOrigin</name> <op:operator pos:line="244" pos:column="54">=</op:operator> <call><name><name pos:line="244" pos:column="56">in</name><op:operator pos:line="244" pos:column="58">.</op:operator><name pos:line="244" pos:column="59">nextLine</name></name><argument_list pos:line="244" pos:column="67">()</argument_list></call></expr>;</expr_stmt>
				}</block>while<condition pos:line="245" pos:column="39">(<expr><call><name><name pos:line="245" pos:column="40">motherOrigin</name><op:operator pos:line="245" pos:column="52">.</op:operator><name pos:line="245" pos:column="53">length</name></name><argument_list pos:line="245" pos:column="59">()</argument_list></call> <op:operator pos:line="245" pos:column="62">&lt;=</op:operator> <lit:literal type="number" pos:line="245" pos:column="65">0</lit:literal></expr>)</condition>;</do>
			
				<do pos:line="247" pos:column="33">do<block pos:line="247" pos:column="35">{
					<expr_stmt><expr><call><name><name pos:line="248" pos:column="41">System</name><op:operator pos:line="248" pos:column="47">.</op:operator><name pos:line="248" pos:column="48">out</name><op:operator pos:line="248" pos:column="51">.</op:operator><name pos:line="248" pos:column="52">print</name></name><argument_list pos:line="248" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="248" pos:column="58">"Customer's birth-country : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="249" pos:column="41">birthCountry</name> <op:operator pos:line="249" pos:column="54">=</op:operator> <call><name><name pos:line="249" pos:column="56">in</name><op:operator pos:line="249" pos:column="58">.</op:operator><name pos:line="249" pos:column="59">nextLine</name></name><argument_list pos:line="249" pos:column="67">()</argument_list></call></expr>;</expr_stmt>
				}</block>while<condition pos:line="250" pos:column="39">(<expr><call><name><name pos:line="250" pos:column="40">birthCountry</name><op:operator pos:line="250" pos:column="52">.</op:operator><name pos:line="250" pos:column="53">length</name></name><argument_list pos:line="250" pos:column="59">()</argument_list></call> <op:operator pos:line="250" pos:column="62">&lt;=</op:operator> <lit:literal type="number" pos:line="250" pos:column="65">0</lit:literal></expr>)</condition>;</do>
			
				<expr_stmt><expr><call><name><name pos:line="252" pos:column="33">System</name><op:operator pos:line="252" pos:column="39">.</op:operator><name pos:line="252" pos:column="40">out</name><op:operator pos:line="252" pos:column="43">.</op:operator><name pos:line="252" pos:column="44">print</name></name><argument_list pos:line="252" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="252" pos:column="50">"Customer's zipcode : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="253" pos:column="33">zipcode</name> <op:operator pos:line="253" pos:column="41">=</op:operator> <call><name><name pos:line="253" pos:column="43">in</name><op:operator pos:line="253" pos:column="45">.</op:operator><name pos:line="253" pos:column="46">nextLine</name></name><argument_list pos:line="253" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
				<if pos:line="254" pos:column="33">if<condition pos:line="254" pos:column="35">(<expr><call><name><name pos:line="254" pos:column="36">zipcode</name><op:operator pos:line="254" pos:column="43">.</op:operator><name pos:line="254" pos:column="44">length</name></name><argument_list pos:line="254" pos:column="50">()</argument_list></call> <op:operator pos:line="254" pos:column="53">&lt;=</op:operator> <lit:literal type="number" pos:line="254" pos:column="56">0</lit:literal></expr>)</condition><then pos:line="254" pos:column="58">
					<expr_stmt><expr><name pos:line="255" pos:column="41">zipcode</name> <op:operator pos:line="255" pos:column="49">=</op:operator> <lit:literal type="null" pos:line="255" pos:column="51">null</lit:literal></expr>;</expr_stmt></then></if>
			
				<expr_stmt><expr><call><name><name pos:line="257" pos:column="33">System</name><op:operator pos:line="257" pos:column="39">.</op:operator><name pos:line="257" pos:column="40">out</name><op:operator pos:line="257" pos:column="43">.</op:operator><name pos:line="257" pos:column="44">print</name></name><argument_list pos:line="257" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="257" pos:column="50">"Does customer have any capital-gains(No COMMA) : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="258" pos:column="41">getInput</name> <op:operator pos:line="258" pos:column="50">=</op:operator> <call><name><name pos:line="258" pos:column="52">in</name><op:operator pos:line="258" pos:column="54">.</op:operator><name pos:line="258" pos:column="55">nextLine</name></name><argument_list pos:line="258" pos:column="63">()</argument_list></call></expr>;</expr_stmt>	
				<expr_stmt><expr><name pos:line="259" pos:column="33">capitalGains</name> <op:operator pos:line="259" pos:column="46">=</op:operator> <call><name><name pos:line="259" pos:column="48">acc</name><op:operator pos:line="259" pos:column="51">.</op:operator><name pos:line="259" pos:column="52">checkLetterDigit</name></name><argument_list pos:line="259" pos:column="68">(<argument><expr><name pos:line="259" pos:column="69">getInput</name></expr></argument>, <argument><expr><name><name pos:line="259" pos:column="79">RiskItConstants</name><op:operator pos:line="259" pos:column="94">.</op:operator><name pos:line="259" pos:column="95">INVALID_VALUE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							
				<expr_stmt><expr><call><name><name pos:line="261" pos:column="33">System</name><op:operator pos:line="261" pos:column="39">.</op:operator><name pos:line="261" pos:column="40">out</name><op:operator pos:line="261" pos:column="43">.</op:operator><name pos:line="261" pos:column="44">print</name></name><argument_list pos:line="261" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="261" pos:column="50">"Did customer have capital-losses(No COMMA) : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="262" pos:column="33">getInput</name> <op:operator pos:line="262" pos:column="42">=</op:operator> <call><name><name pos:line="262" pos:column="44">in</name><op:operator pos:line="262" pos:column="46">.</op:operator><name pos:line="262" pos:column="47">nextLine</name></name><argument_list pos:line="262" pos:column="55">()</argument_list></call></expr>;</expr_stmt>	
				<expr_stmt><expr><name pos:line="263" pos:column="33">capitalLosses</name> <op:operator pos:line="263" pos:column="47">=</op:operator> <call><name><name pos:line="263" pos:column="49">acc</name><op:operator pos:line="263" pos:column="52">.</op:operator><name pos:line="263" pos:column="53">checkLetterDigit</name></name><argument_list pos:line="263" pos:column="69">(<argument><expr><name pos:line="263" pos:column="70">getInput</name></expr></argument>, <argument><expr><name><name pos:line="263" pos:column="80">RiskItConstants</name><op:operator pos:line="263" pos:column="95">.</op:operator><name pos:line="263" pos:column="96">INVALID_VALUE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
				<expr_stmt><expr><call><name><name pos:line="265" pos:column="33">System</name><op:operator pos:line="265" pos:column="39">.</op:operator><name pos:line="265" pos:column="40">out</name><op:operator pos:line="265" pos:column="43">.</op:operator><name pos:line="265" pos:column="44">print</name></name><argument_list pos:line="265" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="265" pos:column="50">"Does customer have stock-dividends(No COMMA) : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="266" pos:column="33">getInput</name> <op:operator pos:line="266" pos:column="42">=</op:operator> <call><name><name pos:line="266" pos:column="44">in</name><op:operator pos:line="266" pos:column="46">.</op:operator><name pos:line="266" pos:column="47">nextLine</name></name><argument_list pos:line="266" pos:column="55">()</argument_list></call></expr>;</expr_stmt>		
				<expr_stmt><expr><name pos:line="267" pos:column="33">stockDividend</name> <op:operator pos:line="267" pos:column="47">=</op:operator> <call><name><name pos:line="267" pos:column="49">acc</name><op:operator pos:line="267" pos:column="52">.</op:operator><name pos:line="267" pos:column="53">checkLetterDigit</name></name><argument_list pos:line="267" pos:column="69">(<argument><expr><name pos:line="267" pos:column="70">getInput</name></expr></argument>, <argument><expr><name><name pos:line="267" pos:column="80">RiskItConstants</name><op:operator pos:line="267" pos:column="95">.</op:operator><name pos:line="267" pos:column="96">INVALID_VALUE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
				<do pos:line="269" pos:column="33">do<block pos:line="269" pos:column="35">{
					<expr_stmt><expr><call><name><name pos:line="270" pos:column="41">System</name><op:operator pos:line="270" pos:column="47">.</op:operator><name pos:line="270" pos:column="48">out</name><op:operator pos:line="270" pos:column="51">.</op:operator><name pos:line="270" pos:column="52">print</name></name><argument_list pos:line="270" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="270" pos:column="58">"Customer's parents information : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="271" pos:column="41">parents</name> <op:operator pos:line="271" pos:column="49">=</op:operator> <call><name><name pos:line="271" pos:column="51">in</name><op:operator pos:line="271" pos:column="53">.</op:operator><name pos:line="271" pos:column="54">nextLine</name></name><argument_list pos:line="271" pos:column="62">()</argument_list></call></expr>;</expr_stmt>
				}</block>while<condition pos:line="272" pos:column="39">(<expr><call><name><name pos:line="272" pos:column="40">parents</name><op:operator pos:line="272" pos:column="47">.</op:operator><name pos:line="272" pos:column="48">length</name></name><argument_list pos:line="272" pos:column="54">()</argument_list></call> <op:operator pos:line="272" pos:column="57">&lt;=</op:operator> <lit:literal type="number" pos:line="272" pos:column="60">0</lit:literal></expr>)</condition>;</do>
				
				<do pos:line="274" pos:column="33">do<block pos:line="274" pos:column="35">{
					<expr_stmt><expr><call><name><name pos:line="275" pos:column="41">System</name><op:operator pos:line="275" pos:column="47">.</op:operator><name pos:line="275" pos:column="48">out</name><op:operator pos:line="275" pos:column="51">.</op:operator><name pos:line="275" pos:column="52">print</name></name><argument_list pos:line="275" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="275" pos:column="58">"Customer's employment-Status : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="276" pos:column="41">employmentStatus</name> <op:operator pos:line="276" pos:column="58">=</op:operator> <call><name><name pos:line="276" pos:column="60">in</name><op:operator pos:line="276" pos:column="62">.</op:operator><name pos:line="276" pos:column="63">nextLine</name></name><argument_list pos:line="276" pos:column="71">()</argument_list></call></expr>;</expr_stmt>
					}</block>while<condition pos:line="277" pos:column="47">(<expr><call><name><name pos:line="277" pos:column="48">employmentStatus</name><op:operator pos:line="277" pos:column="64">.</op:operator><name pos:line="277" pos:column="65">length</name></name><argument_list pos:line="277" pos:column="71">()</argument_list></call> <op:operator pos:line="277" pos:column="74">&lt;=</op:operator> <lit:literal type="number" pos:line="277" pos:column="77">0</lit:literal></expr>)</condition>;</do>
				
					<expr_stmt><expr><call><name><name pos:line="279" pos:column="41">System</name><op:operator pos:line="279" pos:column="47">.</op:operator><name pos:line="279" pos:column="48">out</name><op:operator pos:line="279" pos:column="51">.</op:operator><name pos:line="279" pos:column="52">print</name></name><argument_list pos:line="279" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="279" pos:column="58">"Customer's un-employment reason : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="280" pos:column="41">unEmploymentReason</name> <op:operator pos:line="280" pos:column="60">=</op:operator> <call><name><name pos:line="280" pos:column="62">in</name><op:operator pos:line="280" pos:column="64">.</op:operator><name pos:line="280" pos:column="65">nextLine</name></name><argument_list pos:line="280" pos:column="73">()</argument_list></call></expr>;</expr_stmt>
					<if pos:line="281" pos:column="41">if<condition pos:line="281" pos:column="43">(<expr><call><name><name pos:line="281" pos:column="44">unEmploymentReason</name><op:operator pos:line="281" pos:column="62">.</op:operator><name pos:line="281" pos:column="63">length</name></name><argument_list pos:line="281" pos:column="69">()</argument_list></call> <op:operator pos:line="281" pos:column="72">&lt;=</op:operator> <lit:literal type="number" pos:line="281" pos:column="75">0</lit:literal></expr>)</condition><then pos:line="281" pos:column="77">
						<expr_stmt><expr><name pos:line="282" pos:column="49">unEmploymentReason</name> <op:operator pos:line="282" pos:column="68">=</op:operator> <lit:literal type="null" pos:line="282" pos:column="70">null</lit:literal></expr>;</expr_stmt></then></if>
					
					<do pos:line="284" pos:column="41">do<block pos:line="284" pos:column="43">{
						<expr_stmt><expr><call><name><name pos:line="285" pos:column="49">System</name><op:operator pos:line="285" pos:column="55">.</op:operator><name pos:line="285" pos:column="56">out</name><op:operator pos:line="285" pos:column="59">.</op:operator><name pos:line="285" pos:column="60">print</name></name><argument_list pos:line="285" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="285" pos:column="66">"Customer's education : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name pos:line="286" pos:column="49">education</name> <op:operator pos:line="286" pos:column="59">=</op:operator> <call><name><name pos:line="286" pos:column="61">in</name><op:operator pos:line="286" pos:column="63">.</op:operator><name pos:line="286" pos:column="64">nextLine</name></name><argument_list pos:line="286" pos:column="72">()</argument_list></call></expr>;</expr_stmt>
					}</block>while<condition pos:line="287" pos:column="47">(<expr><call><name><name pos:line="287" pos:column="48">education</name><op:operator pos:line="287" pos:column="57">.</op:operator><name pos:line="287" pos:column="58">length</name></name><argument_list pos:line="287" pos:column="64">()</argument_list></call> <op:operator pos:line="287" pos:column="67">&lt;=</op:operator> <lit:literal type="number" pos:line="287" pos:column="70">0</lit:literal></expr>)</condition>;</do>
			
					<expr_stmt><expr><call><name><name pos:line="289" pos:column="41">System</name><op:operator pos:line="289" pos:column="47">.</op:operator><name pos:line="289" pos:column="48">out</name><op:operator pos:line="289" pos:column="51">.</op:operator><name pos:line="289" pos:column="52">print</name></name><argument_list pos:line="289" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="289" pos:column="58">"Is customer currently enrolled for further education : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="290" pos:column="41">eduEnroll</name> <op:operator pos:line="290" pos:column="51">=</op:operator> <call><name><name pos:line="290" pos:column="53">in</name><op:operator pos:line="290" pos:column="55">.</op:operator><name pos:line="290" pos:column="56">nextLine</name></name><argument_list pos:line="290" pos:column="64">()</argument_list></call></expr>;</expr_stmt>
					<if pos:line="291" pos:column="41">if<condition pos:line="291" pos:column="43">(<expr><call><name><name pos:line="291" pos:column="44">eduEnroll</name><op:operator pos:line="291" pos:column="53">.</op:operator><name pos:line="291" pos:column="54">length</name></name><argument_list pos:line="291" pos:column="60">()</argument_list></call> <op:operator pos:line="291" pos:column="63">&lt;=</op:operator> <lit:literal type="number" pos:line="291" pos:column="66">0</lit:literal></expr>)</condition><then pos:line="291" pos:column="68">
						<expr_stmt><expr><name pos:line="292" pos:column="49">eduEnroll</name> <op:operator pos:line="292" pos:column="59">=</op:operator> <lit:literal type="null" pos:line="292" pos:column="61">null</lit:literal></expr>;</expr_stmt></then></if>
					
					<do pos:line="294" pos:column="41">do<block pos:line="294" pos:column="43">{
						<expr_stmt><expr><call><name><name pos:line="295" pos:column="49">System</name><op:operator pos:line="295" pos:column="55">.</op:operator><name pos:line="295" pos:column="56">out</name><op:operator pos:line="295" pos:column="59">.</op:operator><name pos:line="295" pos:column="60">print</name></name><argument_list pos:line="295" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="295" pos:column="66">"Customer's working-class [public/Private]: "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name pos:line="296" pos:column="49">workClass</name> <op:operator pos:line="296" pos:column="59">=</op:operator> <call><name><name pos:line="296" pos:column="61">in</name><op:operator pos:line="296" pos:column="63">.</op:operator><name pos:line="296" pos:column="64">nextLine</name></name><argument_list pos:line="296" pos:column="72">()</argument_list></call></expr>;</expr_stmt>
					}</block>while<condition pos:line="297" pos:column="47">(<expr><call><name><name pos:line="297" pos:column="48">workClass</name><op:operator pos:line="297" pos:column="57">.</op:operator><name pos:line="297" pos:column="58">length</name></name><argument_list pos:line="297" pos:column="64">()</argument_list></call> <op:operator pos:line="297" pos:column="67">&lt;=</op:operator> <lit:literal type="number" pos:line="297" pos:column="70">0</lit:literal></expr>)</condition>;</do>
				
					<do pos:line="299" pos:column="41">do<block pos:line="299" pos:column="43">{
						<expr_stmt><expr><call><name><name pos:line="300" pos:column="49">System</name><op:operator pos:line="300" pos:column="55">.</op:operator><name pos:line="300" pos:column="56">out</name><op:operator pos:line="300" pos:column="59">.</op:operator><name pos:line="300" pos:column="60">print</name></name><argument_list pos:line="300" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="300" pos:column="66">"Customer's industry-code : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name pos:line="301" pos:column="49">getInput</name> <op:operator pos:line="301" pos:column="58">=</op:operator> <call><name><name pos:line="301" pos:column="60">in</name><op:operator pos:line="301" pos:column="62">.</op:operator><name pos:line="301" pos:column="63">nextLine</name></name><argument_list pos:line="301" pos:column="71">()</argument_list></call></expr>;</expr_stmt>
					}</block>while<condition pos:line="302" pos:column="47">(<expr><call><name><name pos:line="302" pos:column="48">getInput</name><op:operator pos:line="302" pos:column="56">.</op:operator><name pos:line="302" pos:column="57">length</name></name><argument_list pos:line="302" pos:column="63">()</argument_list></call> <op:operator pos:line="302" pos:column="66">&lt;=</op:operator> <lit:literal type="number" pos:line="302" pos:column="69">0</lit:literal></expr>)</condition>;</do>		
					<expr_stmt><expr><name pos:line="303" pos:column="41">industryCode</name> <op:operator pos:line="303" pos:column="54">=</op:operator> <call><name><name pos:line="303" pos:column="56">acc</name><op:operator pos:line="303" pos:column="59">.</op:operator><name pos:line="303" pos:column="60">checkLetterDigit</name></name><argument_list pos:line="303" pos:column="76">(<argument><expr><name pos:line="303" pos:column="77">getInput</name></expr></argument>, <argument><expr><name><name pos:line="303" pos:column="87">RiskItConstants</name><op:operator pos:line="303" pos:column="102">.</op:operator><name pos:line="303" pos:column="103">INVALID_VALUE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
					<do pos:line="305" pos:column="41">do<block pos:line="305" pos:column="43">{
						<expr_stmt><expr><call><name><name pos:line="306" pos:column="49">System</name><op:operator pos:line="306" pos:column="55">.</op:operator><name pos:line="306" pos:column="56">out</name><op:operator pos:line="306" pos:column="59">.</op:operator><name pos:line="306" pos:column="60">print</name></name><argument_list pos:line="306" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="306" pos:column="66">"Customer's occupation-code : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name pos:line="307" pos:column="49">getInput</name> <op:operator pos:line="307" pos:column="58">=</op:operator> <call><name><name pos:line="307" pos:column="60">in</name><op:operator pos:line="307" pos:column="62">.</op:operator><name pos:line="307" pos:column="63">nextLine</name></name><argument_list pos:line="307" pos:column="71">()</argument_list></call></expr>;</expr_stmt>
					}</block>while<condition pos:line="308" pos:column="47">(<expr><call><name><name pos:line="308" pos:column="48">getInput</name><op:operator pos:line="308" pos:column="56">.</op:operator><name pos:line="308" pos:column="57">length</name></name><argument_list pos:line="308" pos:column="63">()</argument_list></call> <op:operator pos:line="308" pos:column="66">&lt;=</op:operator> <lit:literal type="number" pos:line="308" pos:column="69">0</lit:literal></expr>)</condition>;</do>		
					<expr_stmt><expr><name pos:line="309" pos:column="41">occupationCode</name> <op:operator pos:line="309" pos:column="56">=</op:operator> <call><name><name pos:line="309" pos:column="58">acc</name><op:operator pos:line="309" pos:column="61">.</op:operator><name pos:line="309" pos:column="62">checkLetterDigit</name></name><argument_list pos:line="309" pos:column="78">(<argument><expr><name pos:line="309" pos:column="79">getInput</name></expr></argument>, <argument><expr><name><name pos:line="309" pos:column="89">RiskItConstants</name><op:operator pos:line="309" pos:column="104">.</op:operator><name pos:line="309" pos:column="105">INVALID_VALUE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
					<expr_stmt><expr><call><name><name pos:line="311" pos:column="41">System</name><op:operator pos:line="311" pos:column="47">.</op:operator><name pos:line="311" pos:column="48">out</name><op:operator pos:line="311" pos:column="51">.</op:operator><name pos:line="311" pos:column="52">print</name></name><argument_list pos:line="311" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="311" pos:column="58">"Is customer a union-member(Y/N) : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="312" pos:column="41">unionMember</name> <op:operator pos:line="312" pos:column="53">=</op:operator> <call><name><name pos:line="312" pos:column="55">in</name><op:operator pos:line="312" pos:column="57">.</op:operator><name pos:line="312" pos:column="58">nextLine</name></name><argument_list pos:line="312" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
					
					<comment type="line" pos:line="314" pos:column="41">//validate input</comment>
					<if pos:line="315" pos:column="41">if<condition pos:line="315" pos:column="43">(<expr><call><name><name pos:line="315" pos:column="44">unionMember</name><op:operator pos:line="315" pos:column="55">.</op:operator><name pos:line="315" pos:column="56">length</name></name><argument_list pos:line="315" pos:column="62">()</argument_list></call> <op:operator pos:line="315" pos:column="65">&lt;=</op:operator> <lit:literal type="number" pos:line="315" pos:column="68">0</lit:literal></expr>)</condition><then pos:line="315" pos:column="70">
						<expr_stmt><expr><name pos:line="316" pos:column="49">unionMember</name> <op:operator pos:line="316" pos:column="61">=</op:operator> <lit:literal type="null" pos:line="316" pos:column="63">null</lit:literal></expr>;</expr_stmt></then></if>
					<if pos:line="317" pos:column="41">if<condition pos:line="317" pos:column="43">(<expr><call><name><name pos:line="317" pos:column="44">unionMember</name><op:operator pos:line="317" pos:column="55">.</op:operator><name pos:line="317" pos:column="56">equalsIgnoreCase</name></name><argument_list pos:line="317" pos:column="72">(<argument><expr><lit:literal type="string" pos:line="317" pos:column="73">"Y"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="317" pos:column="77">||</op:operator><call><name><name pos:line="317" pos:column="79">unionMember</name><op:operator pos:line="317" pos:column="90">.</op:operator><name pos:line="317" pos:column="91">equalsIgnoreCase</name></name><argument_list pos:line="317" pos:column="107">(<argument><expr><lit:literal type="string" pos:line="317" pos:column="108">"yes"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="317" pos:column="115">
						<expr_stmt><expr><name pos:line="318" pos:column="49">unionMember</name> <op:operator pos:line="318" pos:column="61">=</op:operator> <lit:literal type="string" pos:line="318" pos:column="63">"Yes"</lit:literal></expr>;</expr_stmt></then>
					<else pos:line="319" pos:column="41">else 
						<expr_stmt><expr><name pos:line="320" pos:column="49">unionMember</name> <op:operator pos:line="320" pos:column="61">=</op:operator> <lit:literal type="string" pos:line="320" pos:column="63">"No"</lit:literal></expr> ;</expr_stmt></else></if>
				
					<expr_stmt><expr><call><name><name pos:line="322" pos:column="41">System</name><op:operator pos:line="322" pos:column="47">.</op:operator><name pos:line="322" pos:column="48">out</name><op:operator pos:line="322" pos:column="51">.</op:operator><name pos:line="322" pos:column="52">print</name></name><argument_list pos:line="322" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="322" pos:column="58">"Size of customer's employer(No Comma) : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="323" pos:column="41">getInput</name> <op:operator pos:line="323" pos:column="50">=</op:operator> <call><name><name pos:line="323" pos:column="52">in</name><op:operator pos:line="323" pos:column="54">.</op:operator><name pos:line="323" pos:column="55">nextLine</name></name><argument_list pos:line="323" pos:column="63">()</argument_list></call></expr>;</expr_stmt>	
					<expr_stmt><expr><name pos:line="324" pos:column="41">employerSize</name> <op:operator pos:line="324" pos:column="54">=</op:operator> <call><name><name pos:line="324" pos:column="56">acc</name><op:operator pos:line="324" pos:column="59">.</op:operator><name pos:line="324" pos:column="60">checkLetterDigit</name></name><argument_list pos:line="324" pos:column="76">(<argument><expr><name pos:line="324" pos:column="77">getInput</name></expr></argument>, <argument><expr><name><name pos:line="324" pos:column="87">RiskItConstants</name><op:operator pos:line="324" pos:column="102">.</op:operator><name pos:line="324" pos:column="103">INVALID_VALUE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
					<expr_stmt><expr><call><name><name pos:line="326" pos:column="41">System</name><op:operator pos:line="326" pos:column="47">.</op:operator><name pos:line="326" pos:column="48">out</name><op:operator pos:line="326" pos:column="51">.</op:operator><name pos:line="326" pos:column="52">print</name></name><argument_list pos:line="326" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="326" pos:column="58">"Is customer self-employed(Y/N) : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="327" pos:column="41">getInput</name> <op:operator pos:line="327" pos:column="50">=</op:operator> <call><name><name pos:line="327" pos:column="52">in</name><op:operator pos:line="327" pos:column="54">.</op:operator><name pos:line="327" pos:column="55">nextLine</name></name><argument_list pos:line="327" pos:column="63">()</argument_list></call></expr>;</expr_stmt>
					
					<comment type="line" pos:line="329" pos:column="41">//validate input</comment>
					<if pos:line="330" pos:column="41">if<condition pos:line="330" pos:column="43">(<expr><call><name><name pos:line="330" pos:column="44">getInput</name><op:operator pos:line="330" pos:column="52">.</op:operator><name pos:line="330" pos:column="53">length</name></name><argument_list pos:line="330" pos:column="59">()</argument_list></call> <op:operator pos:line="330" pos:column="62">&lt;=</op:operator> <lit:literal type="number" pos:line="330" pos:column="65">0</lit:literal></expr>)</condition><then pos:line="330" pos:column="67">
						<expr_stmt><expr><name pos:line="331" pos:column="49">selfEmployed</name> <op:operator pos:line="331" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="331" pos:column="64">0</lit:literal></expr>;</expr_stmt></then></if>
					<if pos:line="332" pos:column="41">if<condition pos:line="332" pos:column="43">(<expr><call><name><name pos:line="332" pos:column="44">getInput</name><op:operator pos:line="332" pos:column="52">.</op:operator><name pos:line="332" pos:column="53">equalsIgnoreCase</name></name><argument_list pos:line="332" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="332" pos:column="70">"Y"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="332" pos:column="74">||</op:operator><call><name><name pos:line="332" pos:column="76">getInput</name><op:operator pos:line="332" pos:column="84">.</op:operator><name pos:line="332" pos:column="85">equalsIgnoreCase</name></name><argument_list pos:line="332" pos:column="101">(<argument><expr><lit:literal type="string" pos:line="332" pos:column="102">"yes"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="332" pos:column="109">
						<expr_stmt><expr><name pos:line="333" pos:column="49">selfEmployed</name> <op:operator pos:line="333" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="333" pos:column="64">1</lit:literal></expr>;</expr_stmt></then>
					<else pos:line="334" pos:column="41">else 
						<expr_stmt><expr><name pos:line="335" pos:column="49">selfEmployed</name> <op:operator pos:line="335" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="335" pos:column="64">0</lit:literal></expr> ;</expr_stmt></else></if>
					
					
					<expr_stmt><expr><call><name><name pos:line="338" pos:column="41">System</name><op:operator pos:line="338" pos:column="47">.</op:operator><name pos:line="338" pos:column="48">out</name><op:operator pos:line="338" pos:column="51">.</op:operator><name pos:line="338" pos:column="52">print</name></name><argument_list pos:line="338" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="338" pos:column="58">"Customer's week-wage (No Comma): "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="339" pos:column="41">getInput</name> <op:operator pos:line="339" pos:column="50">=</op:operator> <call><name><name pos:line="339" pos:column="52">in</name><op:operator pos:line="339" pos:column="54">.</op:operator><name pos:line="339" pos:column="55">nextLine</name></name><argument_list pos:line="339" pos:column="63">()</argument_list></call></expr>;</expr_stmt>		
					<expr_stmt><expr><name pos:line="340" pos:column="41">weekWage</name> <op:operator pos:line="340" pos:column="50">=</op:operator> <call><name><name pos:line="340" pos:column="52">acc</name><op:operator pos:line="340" pos:column="55">.</op:operator><name pos:line="340" pos:column="56">checkLetterDigit</name></name><argument_list pos:line="340" pos:column="72">(<argument><expr><name pos:line="340" pos:column="73">getInput</name></expr></argument>, <argument><expr><name><name pos:line="340" pos:column="83">RiskItConstants</name><op:operator pos:line="340" pos:column="98">.</op:operator><name pos:line="340" pos:column="99">INVALID_VALUE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
					<expr_stmt><expr><call><name><name pos:line="342" pos:column="41">System</name><op:operator pos:line="342" pos:column="47">.</op:operator><name pos:line="342" pos:column="48">out</name><op:operator pos:line="342" pos:column="51">.</op:operator><name pos:line="342" pos:column="52">print</name></name><argument_list pos:line="342" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="342" pos:column="58">"Customer's working hours in WEEKS (No Comma) : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="343" pos:column="41">getInput</name> <op:operator pos:line="343" pos:column="50">=</op:operator> <call><name><name pos:line="343" pos:column="52">in</name><op:operator pos:line="343" pos:column="54">.</op:operator><name pos:line="343" pos:column="55">nextLine</name></name><argument_list pos:line="343" pos:column="63">()</argument_list></call></expr>;</expr_stmt>	
					<expr_stmt><expr><name pos:line="344" pos:column="41">workWeeks</name> <op:operator pos:line="344" pos:column="51">=</op:operator> <call><name><name pos:line="344" pos:column="53">acc</name><op:operator pos:line="344" pos:column="56">.</op:operator><name pos:line="344" pos:column="57">checkLetterDigit</name></name><argument_list pos:line="344" pos:column="73">(<argument><expr><name pos:line="344" pos:column="74">getInput</name></expr></argument>, <argument><expr><name><name pos:line="344" pos:column="84">RiskItConstants</name><op:operator pos:line="344" pos:column="99">.</op:operator><name pos:line="344" pos:column="100">INVALID_VALUE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
					<expr_stmt><expr><call><name><name pos:line="346" pos:column="41">agent</name><op:operator pos:line="346" pos:column="46">.</op:operator><name pos:line="346" pos:column="47">createNewUser</name></name><argument_list pos:line="346" pos:column="60">(<argument><expr><name pos:line="346" pos:column="61">name</name></expr></argument>, <argument><expr><name pos:line="346" pos:column="67">zipcode</name></expr></argument>, <argument><expr><call><name><name pos:line="346" pos:column="76">Long</name><op:operator pos:line="346" pos:column="80">.</op:operator><name pos:line="346" pos:column="81">parseLong</name></name><argument_list pos:line="346" pos:column="90">(<argument><expr><name pos:line="346" pos:column="91">ssn</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="346" pos:column="97">age</name></expr></argument>, <argument><expr><name pos:line="346" pos:column="102">sex</name></expr></argument>, <argument><expr><name pos:line="346" pos:column="107">marital</name></expr></argument>, <argument><expr><name pos:line="346" pos:column="116">race</name></expr></argument>, <argument><expr><name pos:line="346" pos:column="122">taxStatus</name></expr></argument>,
										<argument><expr><name pos:line="347" pos:column="81">taxDetails</name></expr></argument>, <argument><expr><name pos:line="347" pos:column="93">houseHoldDetails</name></expr></argument>, <argument><expr><name pos:line="347" pos:column="111">fatherOrigin</name></expr></argument>, <argument><expr><name pos:line="347" pos:column="125">motherOrigin</name></expr></argument>, 
										<argument><expr><name pos:line="348" pos:column="81">birthCountry</name></expr></argument>, <argument><expr><name pos:line="348" pos:column="95">citizenship</name></expr></argument>, <argument><expr><name pos:line="348" pos:column="108">capitalGains</name></expr></argument>, <argument><expr><name pos:line="348" pos:column="122">capitalLosses</name></expr></argument>, 
										<argument><expr><name pos:line="349" pos:column="81">stockDividend</name></expr></argument>, <argument><expr><name pos:line="349" pos:column="96">parents</name></expr></argument>, <argument><expr><name pos:line="349" pos:column="105">unEmploymentReason</name></expr></argument>, <argument><expr><name pos:line="349" pos:column="125">employmentStatus</name></expr></argument>,
										<argument><expr><name pos:line="350" pos:column="81">education</name></expr></argument>, <argument><expr><name pos:line="350" pos:column="92">eduEnroll</name></expr></argument>, <argument><expr><name pos:line="350" pos:column="103">workClass</name></expr></argument>, <argument><expr><name pos:line="350" pos:column="114">unionMember</name></expr></argument>, <argument><expr><name pos:line="350" pos:column="127">industryCode</name></expr></argument>, 
										<argument><expr><name pos:line="351" pos:column="81">occupationCode</name></expr></argument>, <argument><expr><name pos:line="351" pos:column="97">employerSize</name></expr></argument>, <argument><expr><name pos:line="351" pos:column="111">weekWage</name></expr></argument>, <argument><expr><name pos:line="351" pos:column="121">selfEmployed</name></expr></argument>, <argument><expr><name pos:line="351" pos:column="135">workWeeks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			}</block></else></if>
			
		}</block>
		<catch pos:line="356" pos:column="17">catch<parameter_list pos:line="356" pos:column="22">(<param><decl><type><name pos:line="356" pos:column="23">Exception</name></type> <name pos:line="356" pos:column="33">e</name></decl></param>)</parameter_list>
		<block pos:line="357" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="358" pos:column="25">System</name><op:operator pos:line="358" pos:column="31">.</op:operator><name pos:line="358" pos:column="32">out</name><op:operator pos:line="358" pos:column="35">.</op:operator><name pos:line="358" pos:column="36">println</name></name><argument_list pos:line="358" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="358" pos:column="44">"Exception in inputForCreateUser"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="359" pos:column="25">e</name><op:operator pos:line="359" pos:column="26">.</op:operator><name pos:line="359" pos:column="27">printStackTrace</name></name><argument_list pos:line="359" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
		}</block></catch></try>
		
		
	}</block></function>
	
	<comment type="block" format="javadoc" pos:line="365" pos:column="9">/**
	 * This method is the input means for accessing user with different 
	 * combinations of data and then calls the method to print results
	 * @author Poornima Tantry
	 */</comment>
	<function><type><specifier pos:line="370" pos:column="9">public</specifier> <name pos:line="370" pos:column="16">void</name></type> <name pos:line="370" pos:column="21">inputForbrowseUserProperties</name><parameter_list pos:line="370" pos:column="49">()</parameter_list>
	<block pos:line="371" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="372" pos:column="17">boolean</name></type> <name pos:line="372" pos:column="25">checkInputFlag</name>  <init pos:line="372" pos:column="41">= <expr><lit:literal type="boolean" pos:line="372" pos:column="43">false</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="373" pos:column="17">ArrayList</name><argument_list pos:line="373" pos:column="26">&lt;<argument><name pos:line="373" pos:column="27">String</name></argument>&gt;</argument_list></name></type> <name pos:line="373" pos:column="35">prop</name> <init pos:line="373" pos:column="40">= <expr><op:operator pos:line="373" pos:column="42">new</op:operator> <call><name><name pos:line="373" pos:column="46">ArrayList</name><argument_list pos:line="373" pos:column="55">&lt;<argument><name pos:line="373" pos:column="56">String</name></argument>&gt;</argument_list></name><argument_list pos:line="373" pos:column="63">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="374" pos:column="17">String</name></type> <name pos:line="374" pos:column="24">getInput</name> <init pos:line="374" pos:column="33">= <expr><lit:literal type="string" pos:line="374" pos:column="35">""</lit:literal></expr></init></decl>;</decl_stmt>
		
		
		<expr_stmt><expr><call><name><name pos:line="377" pos:column="17">System</name><op:operator pos:line="377" pos:column="23">.</op:operator><name pos:line="377" pos:column="24">out</name><op:operator pos:line="377" pos:column="27">.</op:operator><name pos:line="377" pos:column="28">println</name></name><argument_list pos:line="377" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="377" pos:column="36">"--------------------------------------------------------------"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="378" pos:column="17">System</name><op:operator pos:line="378" pos:column="23">.</op:operator><name pos:line="378" pos:column="24">out</name><op:operator pos:line="378" pos:column="27">.</op:operator><name pos:line="378" pos:column="28">println</name></name><argument_list pos:line="378" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="378" pos:column="36">"PLEASE HIT ENTER KEY IF YOU DO NOT WISH TO ENTER VALUES"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><name pos:line="380" pos:column="17">System</name><op:operator pos:line="380" pos:column="23">.</op:operator><name pos:line="380" pos:column="24">out</name><op:operator pos:line="380" pos:column="27">.</op:operator><name pos:line="380" pos:column="28">print</name></name><argument_list pos:line="380" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="380" pos:column="34">"Do you wish to enter name of customer : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="381" pos:column="17">getInput</name> <op:operator pos:line="381" pos:column="26">=</op:operator> <call><name><name pos:line="381" pos:column="28">in</name><op:operator pos:line="381" pos:column="30">.</op:operator><name pos:line="381" pos:column="31">nextLine</name></name><argument_list pos:line="381" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="382" pos:column="17">prop</name><op:operator pos:line="382" pos:column="21">.</op:operator><name pos:line="382" pos:column="22">add</name></name><argument_list pos:line="382" pos:column="25">(<argument><expr><name pos:line="382" pos:column="26">getInput</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
		
		
		<expr_stmt><expr><call><name><name pos:line="385" pos:column="17">System</name><op:operator pos:line="385" pos:column="23">.</op:operator><name pos:line="385" pos:column="24">out</name><op:operator pos:line="385" pos:column="27">.</op:operator><name pos:line="385" pos:column="28">print</name></name><argument_list pos:line="385" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="385" pos:column="34">"Do you wish to enter SSN of customer : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="386" pos:column="17">getInput</name> <op:operator pos:line="386" pos:column="26">=</op:operator> <call><name><name pos:line="386" pos:column="28">in</name><op:operator pos:line="386" pos:column="30">.</op:operator><name pos:line="386" pos:column="31">nextLine</name></name><argument_list pos:line="386" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		
		<if pos:line="388" pos:column="17">if<condition pos:line="388" pos:column="19">(<expr><call><name><name pos:line="388" pos:column="20">getInput</name><op:operator pos:line="388" pos:column="28">.</op:operator><name pos:line="388" pos:column="29">length</name></name><argument_list pos:line="388" pos:column="35">()</argument_list></call> <op:operator pos:line="388" pos:column="38">&lt;=</op:operator> <lit:literal type="number" pos:line="388" pos:column="41">0</lit:literal></expr>)</condition><then pos:line="388" pos:column="43">
			<expr_stmt><expr><name pos:line="389" pos:column="25">getInput</name> <op:operator pos:line="389" pos:column="34">=</op:operator> <lit:literal type="string" pos:line="389" pos:column="36">""</lit:literal></expr>;</expr_stmt></then>
		<else pos:line="390" pos:column="17">else 
		<block pos:line="391" pos:column="17">{
			<expr_stmt><expr><name pos:line="392" pos:column="25">getInput</name> <op:operator pos:line="392" pos:column="34">=</op:operator> <call><name><name pos:line="392" pos:column="36">Integer</name><op:operator pos:line="392" pos:column="43">.</op:operator><name pos:line="392" pos:column="44">toString</name></name><argument_list pos:line="392" pos:column="52">(<argument><expr><call><name><name pos:line="392" pos:column="53">acc</name><op:operator pos:line="392" pos:column="56">.</op:operator><name pos:line="392" pos:column="57">checkLetterDigit</name></name><argument_list pos:line="392" pos:column="73">(<argument><expr><name pos:line="392" pos:column="74">getInput</name></expr></argument>, <argument><expr><name><name pos:line="392" pos:column="84">RiskItConstants</name><op:operator pos:line="392" pos:column="99">.</op:operator><name pos:line="392" pos:column="100">INVALID_VALUE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="393" pos:column="25">if<condition pos:line="393" pos:column="27">(<expr><call><name><name pos:line="393" pos:column="28">getInput</name><op:operator pos:line="393" pos:column="36">.</op:operator><name pos:line="393" pos:column="37">equals</name></name><argument_list pos:line="393" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="393" pos:column="44">"0"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="393" pos:column="49">
				<expr_stmt><expr><name pos:line="394" pos:column="33">checkInputFlag</name> <op:operator pos:line="394" pos:column="48">=</op:operator> <lit:literal type="boolean" pos:line="394" pos:column="50">true</lit:literal></expr>;</expr_stmt></then></if>
		}</block></else></if>
		
		<comment type="line" pos:line="397" pos:column="17">//if everything is fine, then add input</comment>
		<if pos:line="398" pos:column="17">if<condition pos:line="398" pos:column="19">(<expr><op:operator pos:line="398" pos:column="20">!</op:operator><name pos:line="398" pos:column="21">checkInputFlag</name></expr>)</condition><then pos:line="398" pos:column="36">
			<expr_stmt><expr><call><name><name pos:line="399" pos:column="25">prop</name><op:operator pos:line="399" pos:column="29">.</op:operator><name pos:line="399" pos:column="30">add</name></name><argument_list pos:line="399" pos:column="33">(<argument><expr><name pos:line="399" pos:column="34">getInput</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt></then></if>
	
		
		<if pos:line="402" pos:column="17">if<condition pos:line="402" pos:column="19">(<expr><op:operator pos:line="402" pos:column="20">!</op:operator><name pos:line="402" pos:column="21">checkInputFlag</name></expr>)</condition><then pos:line="402" pos:column="36">
		<block pos:line="403" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="404" pos:column="25">System</name><op:operator pos:line="404" pos:column="31">.</op:operator><name pos:line="404" pos:column="32">out</name><op:operator pos:line="404" pos:column="35">.</op:operator><name pos:line="404" pos:column="36">print</name></name><argument_list pos:line="404" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="404" pos:column="42">"Do you wish to enter age of customer : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="405" pos:column="25">getInput</name> <op:operator pos:line="405" pos:column="34">=</op:operator> <call><name><name pos:line="405" pos:column="36">in</name><op:operator pos:line="405" pos:column="38">.</op:operator><name pos:line="405" pos:column="39">nextLine</name></name><argument_list pos:line="405" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
			
			<if pos:line="407" pos:column="25">if<condition pos:line="407" pos:column="27">(<expr><call><name><name pos:line="407" pos:column="28">getInput</name><op:operator pos:line="407" pos:column="36">.</op:operator><name pos:line="407" pos:column="37">length</name></name><argument_list pos:line="407" pos:column="43">()</argument_list></call> <op:operator pos:line="407" pos:column="46">&lt;=</op:operator> <lit:literal type="number" pos:line="407" pos:column="49">0</lit:literal></expr>)</condition><then pos:line="407" pos:column="51">
				<expr_stmt><expr><name pos:line="408" pos:column="33">getInput</name> <op:operator pos:line="408" pos:column="42">=</op:operator> <lit:literal type="string" pos:line="408" pos:column="44">""</lit:literal></expr>;</expr_stmt></then>
			<else pos:line="409" pos:column="25">else
			<block pos:line="410" pos:column="25">{
				<expr_stmt><expr><name pos:line="411" pos:column="33">getInput</name> <op:operator pos:line="411" pos:column="42">=</op:operator> <call><name><name pos:line="411" pos:column="44">Integer</name><op:operator pos:line="411" pos:column="51">.</op:operator><name pos:line="411" pos:column="52">toString</name></name><argument_list pos:line="411" pos:column="60">(<argument><expr><call><name><name pos:line="411" pos:column="61">acc</name><op:operator pos:line="411" pos:column="64">.</op:operator><name pos:line="411" pos:column="65">checkLetterDigit</name></name><argument_list pos:line="411" pos:column="81">(<argument><expr><name pos:line="411" pos:column="82">getInput</name></expr></argument>, <argument><expr><name><name pos:line="411" pos:column="92">RiskItConstants</name><op:operator pos:line="411" pos:column="107">.</op:operator><name pos:line="411" pos:column="108">INVALID_VALUE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<if pos:line="412" pos:column="33">if<condition pos:line="412" pos:column="35">(<expr><call><name><name pos:line="412" pos:column="36">getInput</name><op:operator pos:line="412" pos:column="44">.</op:operator><name pos:line="412" pos:column="45">equals</name></name><argument_list pos:line="412" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="412" pos:column="52">"0"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="412" pos:column="57">
					<expr_stmt><expr><name pos:line="413" pos:column="41">checkInputFlag</name> <op:operator pos:line="413" pos:column="56">=</op:operator> <lit:literal type="boolean" pos:line="413" pos:column="58">true</lit:literal></expr>;</expr_stmt></then></if>
			}</block></else></if>
		}</block></then></if>
		
		<comment type="line" pos:line="417" pos:column="17">//if everything is fine, then add input</comment>
		<if pos:line="418" pos:column="17">if<condition pos:line="418" pos:column="19">(<expr><op:operator pos:line="418" pos:column="20">!</op:operator><name pos:line="418" pos:column="21">checkInputFlag</name></expr>)</condition><then pos:line="418" pos:column="36">
			<expr_stmt><expr><call><name><name pos:line="419" pos:column="25">prop</name><op:operator pos:line="419" pos:column="29">.</op:operator><name pos:line="419" pos:column="30">add</name></name><argument_list pos:line="419" pos:column="33">(<argument><expr><name pos:line="419" pos:column="34">getInput</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt></then></if>
		
		<if pos:line="421" pos:column="17">if<condition pos:line="421" pos:column="19">(<expr><op:operator pos:line="421" pos:column="20">!</op:operator><name pos:line="421" pos:column="21">checkInputFlag</name></expr>)</condition><then pos:line="421" pos:column="36">
		<block pos:line="422" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="423" pos:column="25">System</name><op:operator pos:line="423" pos:column="31">.</op:operator><name pos:line="423" pos:column="32">out</name><op:operator pos:line="423" pos:column="35">.</op:operator><name pos:line="423" pos:column="36">print</name></name><argument_list pos:line="423" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="423" pos:column="42">"Do you wish to enter sex of customer : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="424" pos:column="25">getInput</name> <op:operator pos:line="424" pos:column="34">=</op:operator> <call><name><name pos:line="424" pos:column="36">in</name><op:operator pos:line="424" pos:column="38">.</op:operator><name pos:line="424" pos:column="39">nextLine</name></name><argument_list pos:line="424" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="425" pos:column="25">prop</name><op:operator pos:line="425" pos:column="29">.</op:operator><name pos:line="425" pos:column="30">add</name></name><argument_list pos:line="425" pos:column="33">(<argument><expr><name pos:line="425" pos:column="34">getInput</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
		
		
			<expr_stmt><expr><call><name><name pos:line="428" pos:column="25">System</name><op:operator pos:line="428" pos:column="31">.</op:operator><name pos:line="428" pos:column="32">out</name><op:operator pos:line="428" pos:column="35">.</op:operator><name pos:line="428" pos:column="36">print</name></name><argument_list pos:line="428" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="428" pos:column="42">"Do you wish to enter marital_status of customer : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="429" pos:column="25">getInput</name> <op:operator pos:line="429" pos:column="34">=</op:operator> <call><name><name pos:line="429" pos:column="36">in</name><op:operator pos:line="429" pos:column="38">.</op:operator><name pos:line="429" pos:column="39">nextLine</name></name><argument_list pos:line="429" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="430" pos:column="25">prop</name><op:operator pos:line="430" pos:column="29">.</op:operator><name pos:line="430" pos:column="30">add</name></name><argument_list pos:line="430" pos:column="33">(<argument><expr><name pos:line="430" pos:column="34">getInput</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
		
			<expr_stmt><expr><call><name><name pos:line="432" pos:column="25">System</name><op:operator pos:line="432" pos:column="31">.</op:operator><name pos:line="432" pos:column="32">out</name><op:operator pos:line="432" pos:column="35">.</op:operator><name pos:line="432" pos:column="36">print</name></name><argument_list pos:line="432" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="432" pos:column="42">"Do you wish to enter race of customer : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="433" pos:column="25">getInput</name> <op:operator pos:line="433" pos:column="34">=</op:operator> <call><name><name pos:line="433" pos:column="36">in</name><op:operator pos:line="433" pos:column="38">.</op:operator><name pos:line="433" pos:column="39">nextLine</name></name><argument_list pos:line="433" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="434" pos:column="25">prop</name><op:operator pos:line="434" pos:column="29">.</op:operator><name pos:line="434" pos:column="30">add</name></name><argument_list pos:line="434" pos:column="33">(<argument><expr><name pos:line="434" pos:column="34">getInput</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
		
			<expr_stmt><expr><call><name><name pos:line="436" pos:column="25">System</name><op:operator pos:line="436" pos:column="31">.</op:operator><name pos:line="436" pos:column="32">out</name><op:operator pos:line="436" pos:column="35">.</op:operator><name pos:line="436" pos:column="36">print</name></name><argument_list pos:line="436" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="436" pos:column="42">"Do you wish to enter country of customer : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="437" pos:column="25">getInput</name> <op:operator pos:line="437" pos:column="34">=</op:operator> <call><name><name pos:line="437" pos:column="36">in</name><op:operator pos:line="437" pos:column="38">.</op:operator><name pos:line="437" pos:column="39">nextLine</name></name><argument_list pos:line="437" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="438" pos:column="25">prop</name><op:operator pos:line="438" pos:column="29">.</op:operator><name pos:line="438" pos:column="30">add</name></name><argument_list pos:line="438" pos:column="33">(<argument><expr><name pos:line="438" pos:column="34">getInput</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
				
			<expr_stmt><expr><call><name><name pos:line="440" pos:column="25">user</name><op:operator pos:line="440" pos:column="29">.</op:operator><name pos:line="440" pos:column="30">browseUserProperties</name></name><argument_list pos:line="440" pos:column="50">(<argument><expr><name pos:line="440" pos:column="51">prop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="442" pos:column="17">else
			<expr_stmt><expr><call><name><name pos:line="443" pos:column="25">System</name><op:operator pos:line="443" pos:column="31">.</op:operator><name pos:line="443" pos:column="32">out</name><op:operator pos:line="443" pos:column="35">.</op:operator><name pos:line="443" pos:column="36">println</name></name><argument_list pos:line="443" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="443" pos:column="44">"You have entered invalid input.."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
		
		
	}</block></function>
	
	<comment type="block" format="javadoc" pos:line="448" pos:column="9">/**
	 * The method provided a choice for either agent to get values or user to get
	 * their values
	 * @author Poornima Tantry
	 */</comment>
	<function><type><specifier pos:line="453" pos:column="9">public</specifier> <name pos:line="453" pos:column="16">void</name></type> <name pos:line="453" pos:column="21">AgentAndUser</name><parameter_list pos:line="453" pos:column="33">()</parameter_list>
	<block pos:line="454" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="455" pos:column="17">int</name></type> <name pos:line="455" pos:column="21">choice</name> <init pos:line="455" pos:column="28">= <expr><lit:literal type="number" pos:line="455" pos:column="30">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="456" pos:column="17">String</name></type> <name pos:line="456" pos:column="24">getChoice</name> <init pos:line="456" pos:column="34">= <expr><lit:literal type="string" pos:line="456" pos:column="36">""</lit:literal></expr></init></decl>;</decl_stmt>
		<do pos:line="457" pos:column="17">do
		<block pos:line="458" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="459" pos:column="25">System</name><op:operator pos:line="459" pos:column="31">.</op:operator><name pos:line="459" pos:column="32">out</name><op:operator pos:line="459" pos:column="35">.</op:operator><name pos:line="459" pos:column="36">print</name></name><argument_list pos:line="459" pos:column="41">( <argument><expr><lit:literal type="string" pos:line="459" pos:column="43">"ENTER \n 1. Agent \n 2. User \n 3. Exit \n Please enter your choice : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="460" pos:column="25">getChoice</name> <op:operator pos:line="460" pos:column="35">=</op:operator> <call><name><name pos:line="460" pos:column="37">in</name><op:operator pos:line="460" pos:column="39">.</op:operator><name pos:line="460" pos:column="40">nextLine</name></name><argument_list pos:line="460" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
			
			<expr_stmt><expr><name pos:line="462" pos:column="25">choice</name> <op:operator pos:line="462" pos:column="32">=</op:operator> <call><name><name pos:line="462" pos:column="34">acc</name><op:operator pos:line="462" pos:column="37">.</op:operator><name pos:line="462" pos:column="38">checkLetterDigit</name></name><argument_list pos:line="462" pos:column="54">(<argument><expr><name pos:line="462" pos:column="55">getChoice</name></expr></argument>, <argument><expr><name><name pos:line="462" pos:column="66">RiskItConstants</name><op:operator pos:line="462" pos:column="81">.</op:operator><name pos:line="462" pos:column="82">AGENT_INVALID</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			<switch pos:line="464" pos:column="25">switch<condition pos:line="464" pos:column="31">(<expr><name pos:line="464" pos:column="32">choice</name></expr>)</condition>
			<block pos:line="465" pos:column="25">{
			<case pos:line="466" pos:column="25">case <expr><lit:literal type="number" pos:line="466" pos:column="30">1</lit:literal></expr>:
					<comment type="line" pos:line="467" pos:column="41">//if agent has already given his id</comment>
					<comment type="line" pos:line="468" pos:column="41">//then directly go to agent menu else</comment>
					<comment type="line" pos:line="469" pos:column="41">//first accept the id from agent</comment>
					<if pos:line="470" pos:column="41">if<condition pos:line="470" pos:column="43">(<expr><name pos:line="470" pos:column="44">agentFlag</name></expr>)</condition><then pos:line="470" pos:column="54">
						<expr_stmt><expr><call><name pos:line="471" pos:column="49">agentMenu</name><argument_list pos:line="471" pos:column="58">()</argument_list></call></expr>;</expr_stmt></then>
					<else pos:line="472" pos:column="41">else
						<expr_stmt><expr><name pos:line="473" pos:column="49">agentFlag</name>  <op:operator pos:line="473" pos:column="60">=</op:operator> <call><name pos:line="473" pos:column="62">AgentLogin</name><argument_list pos:line="473" pos:column="72">()</argument_list></call></expr>;</expr_stmt></else></if>
					<break pos:line="474" pos:column="41">break;</break>
			</case><case pos:line="475" pos:column="25">case <expr><lit:literal type="number" pos:line="475" pos:column="30">2</lit:literal></expr>:
					<comment type="line" pos:line="476" pos:column="41">//UI for customer to get a quote for themselves</comment>
					<expr_stmt><expr><call><name pos:line="477" pos:column="41">inputForUserQuotes</name><argument_list pos:line="477" pos:column="59">()</argument_list></call></expr>;</expr_stmt>
					<break pos:line="478" pos:column="41">break;</break>
			</case><default pos:line="479" pos:column="25">default:
					<break pos:line="480" pos:column="41">break;</break>
			</default>}</block></switch>
			
		}</block>while<condition pos:line="483" pos:column="23">(<expr><name pos:line="483" pos:column="24">choice</name> <op:operator pos:line="483" pos:column="31">&gt;</op:operator> <lit:literal type="number" pos:line="483" pos:column="33">0</lit:literal> <op:operator pos:line="483" pos:column="35">&amp;&amp;</op:operator> <name pos:line="483" pos:column="38">choice</name> <op:operator pos:line="483" pos:column="45">&lt;</op:operator> <lit:literal type="number" pos:line="483" pos:column="47">3</lit:literal></expr>)</condition>;</do>
		
		
	}</block></function>
	
	
	<comment type="block" format="javadoc" pos:line="489" pos:column="9">/**
	 * This method first creates a agent table and then helps agent 
	 * login to system
	 * @author Poornima Tantry
	 */</comment>
	
	<function><type><specifier pos:line="495" pos:column="9">public</specifier> <name pos:line="495" pos:column="16">boolean</name></type> <name pos:line="495" pos:column="24">AgentLogin</name><parameter_list pos:line="495" pos:column="34">()</parameter_list>
	<block pos:line="496" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="497" pos:column="17">Statement</name></type> <name pos:line="497" pos:column="27">stat</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="498" pos:column="17">ResultSet</name></type> <name pos:line="498" pos:column="27">result</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="499" pos:column="17">boolean</name></type> <name pos:line="499" pos:column="25">checkFlag</name> <init pos:line="499" pos:column="35">= <expr><lit:literal type="boolean" pos:line="499" pos:column="37">false</lit:literal></expr></init></decl>;</decl_stmt>
		
		<expr_stmt><expr><call><name><name pos:line="501" pos:column="17">agent</name><op:operator pos:line="501" pos:column="22">.</op:operator><name pos:line="501" pos:column="23">createAgentTable</name></name><argument_list pos:line="501" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		
		<comment type="line" pos:line="503" pos:column="17">//read data from user</comment>
		<expr_stmt><expr><call><name><name pos:line="504" pos:column="17">System</name><op:operator pos:line="504" pos:column="23">.</op:operator><name pos:line="504" pos:column="24">out</name><op:operator pos:line="504" pos:column="27">.</op:operator><name pos:line="504" pos:column="28">print</name></name><argument_list pos:line="504" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="504" pos:column="34">"Enter your name : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="505" pos:column="17">agentName</name> <op:operator pos:line="505" pos:column="27">=</op:operator> <call><name><name pos:line="505" pos:column="29">in</name><op:operator pos:line="505" pos:column="31">.</op:operator><name pos:line="505" pos:column="32">nextLine</name></name><argument_list pos:line="505" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><name pos:line="507" pos:column="17">System</name><op:operator pos:line="507" pos:column="23">.</op:operator><name pos:line="507" pos:column="24">out</name><op:operator pos:line="507" pos:column="27">.</op:operator><name pos:line="507" pos:column="28">print</name></name><argument_list pos:line="507" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="507" pos:column="34">"Enter your id : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="508" pos:column="17">String</name></type> <name pos:line="508" pos:column="24">num</name> <init pos:line="508" pos:column="28">= <expr><call><name><name pos:line="508" pos:column="30">in</name><op:operator pos:line="508" pos:column="32">.</op:operator><name pos:line="508" pos:column="33">nextLine</name></name><argument_list pos:line="508" pos:column="41">()</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<if pos:line="510" pos:column="17">if<condition pos:line="510" pos:column="19">(<expr><call><name><name pos:line="510" pos:column="20">num</name><op:operator pos:line="510" pos:column="23">.</op:operator><name pos:line="510" pos:column="24">length</name></name><argument_list pos:line="510" pos:column="30">()</argument_list></call> <op:operator pos:line="510" pos:column="33">&gt;</op:operator> <lit:literal type="number" pos:line="510" pos:column="35">0</lit:literal></expr>)</condition><then pos:line="510" pos:column="37">
			<expr_stmt><expr><name pos:line="511" pos:column="25">agentId</name> <op:operator pos:line="511" pos:column="33">=</op:operator> <call><name><name pos:line="511" pos:column="35">Integer</name><op:operator pos:line="511" pos:column="42">.</op:operator><name pos:line="511" pos:column="43">parseInt</name></name><argument_list pos:line="511" pos:column="51">(<argument><expr><name pos:line="511" pos:column="52">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
		<else pos:line="512" pos:column="17">else
			<expr_stmt><expr><name pos:line="513" pos:column="25">agentId</name> <op:operator pos:line="513" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="513" pos:column="35">0</lit:literal></expr>;</expr_stmt></else></if>
		
		<comment type="line" pos:line="515" pos:column="17">//compare the accepted input, to see if the agent is in</comment>
		<comment type="line" pos:line="516" pos:column="17">//agent table, else try again</comment>
		<try pos:line="517" pos:column="17">try
		<block pos:line="518" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="519" pos:column="25">Connection</name></type> <name pos:line="519" pos:column="36">conn</name> <init pos:line="519" pos:column="41">= <expr><call><name><name pos:line="519" pos:column="43">DatabaseConnection</name><op:operator pos:line="519" pos:column="61">.</op:operator><name pos:line="519" pos:column="62">getConnection</name></name><argument_list pos:line="519" pos:column="75">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="520" pos:column="25">stat</name> <op:operator pos:line="520" pos:column="30">=</op:operator> <call><name><name pos:line="520" pos:column="32">conn</name><op:operator pos:line="520" pos:column="36">.</op:operator><name pos:line="520" pos:column="37">createStatement</name></name><argument_list pos:line="520" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
			
			<decl_stmt><decl><type><name pos:line="522" pos:column="25">String</name></type> <name pos:line="522" pos:column="32">cmd_search</name> <init pos:line="522" pos:column="43">= <expr><lit:literal type="string" pos:line="522" pos:column="45">"Select * from AgentTable where name = '"</lit:literal> <op:operator pos:line="522" pos:column="87">+</op:operator> <name pos:line="522" pos:column="89">agentName</name> <op:operator pos:line="522" pos:column="99">+</op:operator> <lit:literal type="string" pos:line="522" pos:column="101">"'"</lit:literal>
								<op:operator pos:line="523" pos:column="65">+</op:operator> <lit:literal type="string" pos:line="523" pos:column="67">" and id = '"</lit:literal> <op:operator pos:line="523" pos:column="81">+</op:operator> <name pos:line="523" pos:column="83">agentId</name> <op:operator pos:line="523" pos:column="91">+</op:operator> <lit:literal type="string" pos:line="523" pos:column="93">"'"</lit:literal></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="524" pos:column="25">result</name> <op:operator pos:line="524" pos:column="32">=</op:operator> <call><name><name pos:line="524" pos:column="34">stat</name><op:operator pos:line="524" pos:column="38">.</op:operator><name pos:line="524" pos:column="39">executeQuery</name></name><argument_list pos:line="524" pos:column="51">(<argument><expr><name pos:line="524" pos:column="52">cmd_search</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			<if pos:line="526" pos:column="25">if<condition pos:line="526" pos:column="27">(<expr><call><name><name pos:line="526" pos:column="28">result</name><op:operator pos:line="526" pos:column="34">.</op:operator><name pos:line="526" pos:column="35">next</name></name><argument_list pos:line="526" pos:column="39">()</argument_list></call></expr>)</condition><then pos:line="526" pos:column="42">
			<block pos:line="527" pos:column="25">{
				<expr_stmt><expr><name pos:line="528" pos:column="33">checkFlag</name> <op:operator pos:line="528" pos:column="43">=</op:operator> <lit:literal type="boolean" pos:line="528" pos:column="45">true</lit:literal></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="529" pos:column="33">agentMenu</name><argument_list pos:line="529" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="531" pos:column="25">else
				<expr_stmt><expr><call><name><name pos:line="532" pos:column="33">System</name><op:operator pos:line="532" pos:column="39">.</op:operator><name pos:line="532" pos:column="40">out</name><op:operator pos:line="532" pos:column="43">.</op:operator><name pos:line="532" pos:column="44">println</name></name><argument_list pos:line="532" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="532" pos:column="52">"You have not identified yourself. Try again..."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
			
		}</block>
		<catch pos:line="535" pos:column="17">catch<parameter_list pos:line="535" pos:column="22">(<param><decl><type><name pos:line="535" pos:column="23">Exception</name></type> <name pos:line="535" pos:column="33">e</name></decl></param>)</parameter_list>
		<block pos:line="536" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="537" pos:column="25">System</name><op:operator pos:line="537" pos:column="31">.</op:operator><name pos:line="537" pos:column="32">out</name><op:operator pos:line="537" pos:column="35">.</op:operator><name pos:line="537" pos:column="36">println</name></name><argument_list pos:line="537" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="537" pos:column="44">"Exception in chooseAgentActivity"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="538" pos:column="25">e</name><op:operator pos:line="538" pos:column="26">.</op:operator><name pos:line="538" pos:column="27">printStackTrace</name></name><argument_list pos:line="538" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
		}</block></catch></try>
		
		<return pos:line="541" pos:column="17">return <expr><name pos:line="541" pos:column="24">checkFlag</name></expr>;</return>
		
	}</block></function>
	<comment type="block" format="javadoc" pos:line="544" pos:column="9">/**
	 * This is menu option for the agent to send out invitation
	 * to customer
	 * @author Poornima Tantry
	 */</comment>
	<function><type><specifier pos:line="549" pos:column="9">public</specifier> <name pos:line="549" pos:column="16">void</name></type> <name pos:line="549" pos:column="21">agentMenu</name><parameter_list pos:line="549" pos:column="30">()</parameter_list>
	<block pos:line="550" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="551" pos:column="17">String</name></type> <name pos:line="551" pos:column="24">getChoice</name> <init pos:line="551" pos:column="34">= <expr><lit:literal type="string" pos:line="551" pos:column="36">""</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="552" pos:column="17">int</name></type> <name pos:line="552" pos:column="21">choice</name> <init pos:line="552" pos:column="28">= <expr><lit:literal type="number" pos:line="552" pos:column="30">0</lit:literal></expr></init></decl>;</decl_stmt>
		
		<do pos:line="554" pos:column="17">do
		<block pos:line="555" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="556" pos:column="25">System</name><op:operator pos:line="556" pos:column="31">.</op:operator><name pos:line="556" pos:column="32">out</name><op:operator pos:line="556" pos:column="35">.</op:operator><name pos:line="556" pos:column="36">print</name></name><argument_list pos:line="556" pos:column="41">( <argument><expr><lit:literal type="string" pos:line="556" pos:column="43">"ENTER \n 1. Send Invitation  \n 2. Exit \n Please enter your choice : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="557" pos:column="25">getChoice</name> <op:operator pos:line="557" pos:column="35">=</op:operator> <call><name><name pos:line="557" pos:column="37">in</name><op:operator pos:line="557" pos:column="39">.</op:operator><name pos:line="557" pos:column="40">nextLine</name></name><argument_list pos:line="557" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
			
			<expr_stmt><expr><name pos:line="559" pos:column="25">choice</name> <op:operator pos:line="559" pos:column="32">=</op:operator> <call><name><name pos:line="559" pos:column="34">acc</name><op:operator pos:line="559" pos:column="37">.</op:operator><name pos:line="559" pos:column="38">checkLetterDigit</name></name><argument_list pos:line="559" pos:column="54">(<argument><expr><name pos:line="559" pos:column="55">getChoice</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="559" pos:column="66">2</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			<switch pos:line="561" pos:column="25">switch<condition pos:line="561" pos:column="31">(<expr><name pos:line="561" pos:column="32">choice</name></expr>)</condition>
			<block pos:line="562" pos:column="25">{
			<case pos:line="563" pos:column="25">case <expr><lit:literal type="number" pos:line="563" pos:column="30">1</lit:literal></expr>:
					<comment type="line" pos:line="564" pos:column="41">//create UI for accepting input to send </comment>
					<comment type="line" pos:line="565" pos:column="41">//invitation to customer </comment>
					<expr_stmt><expr><call><name pos:line="566" pos:column="41">sendInvitation</name><argument_list pos:line="566" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
					<break pos:line="567" pos:column="41">break;</break>
			</case><default pos:line="568" pos:column="25">default:
					<break pos:line="569" pos:column="41">break;</break>
			</default>}</block></switch>
			
		}</block>while<condition pos:line="572" pos:column="23">(<expr><name pos:line="572" pos:column="24">choice</name> <op:operator pos:line="572" pos:column="31">&gt;</op:operator> <lit:literal type="number" pos:line="572" pos:column="33">0</lit:literal> <op:operator pos:line="572" pos:column="35">&amp;&amp;</op:operator> <name pos:line="572" pos:column="38">choice</name> <op:operator pos:line="572" pos:column="45">&lt;</op:operator> <lit:literal type="number" pos:line="572" pos:column="47">2</lit:literal></expr>)</condition>;</do>
		
	}</block></function>
	
	<comment type="block" format="javadoc" pos:line="576" pos:column="9">/**
	 * This method accepts all information for a user and stores it in a
	 * object and calculates the premium amount and helps agent
	 * send out invitation.
	 * @author Poornima Tantry
	 */</comment>
	
	<function><type><specifier pos:line="583" pos:column="9">public</specifier> <name pos:line="583" pos:column="16">void</name></type> <name pos:line="583" pos:column="21">sendInvitation</name><parameter_list pos:line="583" pos:column="35">()</parameter_list>
	<block pos:line="584" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="585" pos:column="17">long</name></type> <name pos:line="585" pos:column="22">ssn</name> <init pos:line="585" pos:column="26">= <expr><lit:literal type="number" pos:line="585" pos:column="28">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="586" pos:column="17">double</name></type> <name pos:line="586" pos:column="24">expo_value</name> <init pos:line="586" pos:column="35">= <expr><lit:literal type="number" pos:line="586" pos:column="37">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="587" pos:column="17">String</name></type> <name pos:line="587" pos:column="24">getInput</name> <init pos:line="587" pos:column="33">= <expr><lit:literal type="string" pos:line="587" pos:column="35">""</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="588" pos:column="17">String</name></type> <name pos:line="588" pos:column="24">choice</name> <init pos:line="588" pos:column="31">= <expr><lit:literal type="string" pos:line="588" pos:column="33">"N"</lit:literal></expr></init></decl>;</decl_stmt> 
		
		
		<do pos:line="591" pos:column="17">do
		<block pos:line="592" pos:column="17">{
			<comment type="line" pos:line="593" pos:column="25">//create a new invitation object for each customer</comment>
			<decl_stmt><decl><type><name pos:line="594" pos:column="25">Invitation</name></type> <name pos:line="594" pos:column="36">invite</name> <init pos:line="594" pos:column="43">= <expr><op:operator pos:line="594" pos:column="45">new</op:operator> <call><name pos:line="594" pos:column="49">Invitation</name><argument_list pos:line="594" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
			
			<comment type="line" pos:line="596" pos:column="25">//enter all relevant values</comment>
			<expr_stmt><expr><call><name><name pos:line="597" pos:column="25">System</name><op:operator pos:line="597" pos:column="31">.</op:operator><name pos:line="597" pos:column="32">out</name><op:operator pos:line="597" pos:column="35">.</op:operator><name pos:line="597" pos:column="36">print</name></name><argument_list pos:line="597" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="597" pos:column="42">"Enter the customer's SSN : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="598" pos:column="25">getInput</name> <op:operator pos:line="598" pos:column="34">=</op:operator> <call><name><name pos:line="598" pos:column="36">in</name><op:operator pos:line="598" pos:column="38">.</op:operator><name pos:line="598" pos:column="39">nextLine</name></name><argument_list pos:line="598" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
			
			<comment type="line" pos:line="600" pos:column="25">//validate input</comment>
			<expr_stmt><expr><name pos:line="601" pos:column="25">getInput</name> <op:operator pos:line="601" pos:column="34">=</op:operator> <call><name><name pos:line="601" pos:column="36">Integer</name><op:operator pos:line="601" pos:column="43">.</op:operator><name pos:line="601" pos:column="44">toString</name></name><argument_list pos:line="601" pos:column="52">(<argument><expr><call><name><name pos:line="601" pos:column="53">acc</name><op:operator pos:line="601" pos:column="56">.</op:operator><name pos:line="601" pos:column="57">checkLetterDigit</name></name><argument_list pos:line="601" pos:column="73">(<argument><expr><name pos:line="601" pos:column="74">getInput</name></expr></argument>, <argument><expr><name><name pos:line="601" pos:column="84">RiskItConstants</name><op:operator pos:line="601" pos:column="99">.</op:operator><name pos:line="601" pos:column="100">INVALID_VALUE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
			<if pos:line="603" pos:column="25">if<condition pos:line="603" pos:column="27">(<expr><call><name><name pos:line="603" pos:column="28">getInput</name><op:operator pos:line="603" pos:column="36">.</op:operator><name pos:line="603" pos:column="37">length</name></name><argument_list pos:line="603" pos:column="43">()</argument_list></call> <op:operator pos:line="603" pos:column="46">&lt;=</op:operator> <lit:literal type="number" pos:line="603" pos:column="49">0</lit:literal> <op:operator pos:line="603" pos:column="51">||</op:operator> <call><name><name pos:line="603" pos:column="54">getInput</name><op:operator pos:line="603" pos:column="62">.</op:operator><name pos:line="603" pos:column="63">equals</name></name><argument_list pos:line="603" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="603" pos:column="70">"0"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="603" pos:column="75">
			<block pos:line="604" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="605" pos:column="33">System</name><op:operator pos:line="605" pos:column="39">.</op:operator><name pos:line="605" pos:column="40">out</name><op:operator pos:line="605" pos:column="43">.</op:operator><name pos:line="605" pos:column="44">println</name></name><argument_list pos:line="605" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="605" pos:column="52">"You have entered a invalid SSN"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="607" pos:column="25">else
			<block pos:line="608" pos:column="25">{
				<expr_stmt><expr><name pos:line="609" pos:column="33">ssn</name> <op:operator pos:line="609" pos:column="37">=</op:operator> <call><name><name pos:line="609" pos:column="39">Long</name><op:operator pos:line="609" pos:column="43">.</op:operator><name pos:line="609" pos:column="44">parseLong</name></name><argument_list pos:line="609" pos:column="53">(<argument><expr><name pos:line="609" pos:column="54">getInput</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="610" pos:column="33">invite</name><op:operator pos:line="610" pos:column="39">.</op:operator><name pos:line="610" pos:column="40">setUserSSN</name></name><argument_list pos:line="610" pos:column="50">(<argument><expr><call><name><name pos:line="610" pos:column="51">Long</name><op:operator pos:line="610" pos:column="55">.</op:operator><name pos:line="610" pos:column="56">parseLong</name></name><argument_list pos:line="610" pos:column="65">(<argument><expr><name pos:line="610" pos:column="66">getInput</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
				<expr_stmt><expr><call><name><name pos:line="612" pos:column="33">System</name><op:operator pos:line="612" pos:column="39">.</op:operator><name pos:line="612" pos:column="40">out</name><op:operator pos:line="612" pos:column="43">.</op:operator><name pos:line="612" pos:column="44">print</name></name><argument_list pos:line="612" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="612" pos:column="50">"Enter total expense value (NO COMMA): $"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="613" pos:column="33">getInput</name> <op:operator pos:line="613" pos:column="42">=</op:operator> <call><name><name pos:line="613" pos:column="44">in</name><op:operator pos:line="613" pos:column="46">.</op:operator><name pos:line="613" pos:column="47">nextLine</name></name><argument_list pos:line="613" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="614" pos:column="33">getInput</name> <op:operator pos:line="614" pos:column="42">=</op:operator> <call><name><name pos:line="614" pos:column="44">Integer</name><op:operator pos:line="614" pos:column="51">.</op:operator><name pos:line="614" pos:column="52">toString</name></name><argument_list pos:line="614" pos:column="60">(<argument><expr><call><name><name pos:line="614" pos:column="61">acc</name><op:operator pos:line="614" pos:column="64">.</op:operator><name pos:line="614" pos:column="65">checkLetterDigit</name></name><argument_list pos:line="614" pos:column="81">(<argument><expr><name pos:line="614" pos:column="82">getInput</name></expr></argument>, <argument><expr><name><name pos:line="614" pos:column="92">RiskItConstants</name><op:operator pos:line="614" pos:column="107">.</op:operator><name pos:line="614" pos:column="108">INVALID_VALUE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
				<if pos:line="616" pos:column="33">if<condition pos:line="616" pos:column="35">(<expr><call><name><name pos:line="616" pos:column="36">getInput</name><op:operator pos:line="616" pos:column="44">.</op:operator><name pos:line="616" pos:column="45">length</name></name><argument_list pos:line="616" pos:column="51">()</argument_list></call> <op:operator pos:line="616" pos:column="54">&gt;</op:operator> <lit:literal type="number" pos:line="616" pos:column="56">0</lit:literal></expr>)</condition><then pos:line="616" pos:column="58">
					<expr_stmt><expr><call><name><name pos:line="617" pos:column="41">invite</name><op:operator pos:line="617" pos:column="47">.</op:operator><name pos:line="617" pos:column="48">setPropertyValue</name></name><argument_list pos:line="617" pos:column="64">(<argument><expr><call><name><name pos:line="617" pos:column="65">Double</name><op:operator pos:line="617" pos:column="71">.</op:operator><name pos:line="617" pos:column="72">parseDouble</name></name><argument_list pos:line="617" pos:column="83">(<argument><expr><name pos:line="617" pos:column="84">getInput</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			
			
				<expr_stmt><expr><call><name><name pos:line="620" pos:column="33">System</name><op:operator pos:line="620" pos:column="39">.</op:operator><name pos:line="620" pos:column="40">out</name><op:operator pos:line="620" pos:column="43">.</op:operator><name pos:line="620" pos:column="44">print</name></name><argument_list pos:line="620" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="620" pos:column="50">"Enter coverage amount that insurance company provides for full year(Exposure Unit) (NO COMMA): $"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="621" pos:column="33">getInput</name> <op:operator pos:line="621" pos:column="42">=</op:operator> <call><name><name pos:line="621" pos:column="44">in</name><op:operator pos:line="621" pos:column="46">.</op:operator><name pos:line="621" pos:column="47">nextLine</name></name><argument_list pos:line="621" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="622" pos:column="33">getInput</name> <op:operator pos:line="622" pos:column="42">=</op:operator> <call><name><name pos:line="622" pos:column="44">Integer</name><op:operator pos:line="622" pos:column="51">.</op:operator><name pos:line="622" pos:column="52">toString</name></name><argument_list pos:line="622" pos:column="60">(<argument><expr><call><name><name pos:line="622" pos:column="61">acc</name><op:operator pos:line="622" pos:column="64">.</op:operator><name pos:line="622" pos:column="65">checkLetterDigit</name></name><argument_list pos:line="622" pos:column="81">(<argument><expr><name pos:line="622" pos:column="82">getInput</name></expr></argument>, <argument><expr><name><name pos:line="622" pos:column="92">RiskItConstants</name><op:operator pos:line="622" pos:column="107">.</op:operator><name pos:line="622" pos:column="108">INVALID_VALUE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
				<if pos:line="624" pos:column="33">if<condition pos:line="624" pos:column="35">(<expr><call><name><name pos:line="624" pos:column="36">getInput</name><op:operator pos:line="624" pos:column="44">.</op:operator><name pos:line="624" pos:column="45">length</name></name><argument_list pos:line="624" pos:column="51">()</argument_list></call> <op:operator pos:line="624" pos:column="54">&gt;</op:operator> <lit:literal type="number" pos:line="624" pos:column="56">0</lit:literal></expr>)</condition><then pos:line="624" pos:column="58">
					<expr_stmt><expr><name pos:line="625" pos:column="41">expo_value</name> <op:operator pos:line="625" pos:column="52">=</op:operator> <call><name><name pos:line="625" pos:column="54">Double</name><op:operator pos:line="625" pos:column="60">.</op:operator><name pos:line="625" pos:column="61">parseDouble</name></name><argument_list pos:line="625" pos:column="72">(<argument><expr><name pos:line="625" pos:column="73">getInput</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
					<expr_stmt><expr><call><name><name pos:line="626" pos:column="41">invite</name><op:operator pos:line="626" pos:column="47">.</op:operator><name pos:line="626" pos:column="48">setExpoUnit</name></name><argument_list pos:line="626" pos:column="59">(<argument><expr><name pos:line="626" pos:column="60">expo_value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
				<expr_stmt><expr><call><name><name pos:line="628" pos:column="33">System</name><op:operator pos:line="628" pos:column="39">.</op:operator><name pos:line="628" pos:column="40">out</name><op:operator pos:line="628" pos:column="43">.</op:operator><name pos:line="628" pos:column="44">print</name></name><argument_list pos:line="628" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="628" pos:column="50">"Enter loss amount(if needed in future) (NO COMMA): $"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="629" pos:column="33">getInput</name> <op:operator pos:line="629" pos:column="42">=</op:operator> <call><name><name pos:line="629" pos:column="44">in</name><op:operator pos:line="629" pos:column="46">.</op:operator><name pos:line="629" pos:column="47">nextLine</name></name><argument_list pos:line="629" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="630" pos:column="33">getInput</name> <op:operator pos:line="630" pos:column="42">=</op:operator> <call><name><name pos:line="630" pos:column="44">Integer</name><op:operator pos:line="630" pos:column="51">.</op:operator><name pos:line="630" pos:column="52">toString</name></name><argument_list pos:line="630" pos:column="60">(<argument><expr><call><name><name pos:line="630" pos:column="61">acc</name><op:operator pos:line="630" pos:column="64">.</op:operator><name pos:line="630" pos:column="65">checkLetterDigit</name></name><argument_list pos:line="630" pos:column="81">(<argument><expr><name pos:line="630" pos:column="82">getInput</name></expr></argument>, <argument><expr><name><name pos:line="630" pos:column="92">RiskItConstants</name><op:operator pos:line="630" pos:column="107">.</op:operator><name pos:line="630" pos:column="108">INVALID_VALUE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
				<if pos:line="632" pos:column="33">if<condition pos:line="632" pos:column="35">(<expr><call><name><name pos:line="632" pos:column="36">getInput</name><op:operator pos:line="632" pos:column="44">.</op:operator><name pos:line="632" pos:column="45">length</name></name><argument_list pos:line="632" pos:column="51">()</argument_list></call> <op:operator pos:line="632" pos:column="54">&gt;</op:operator> <lit:literal type="number" pos:line="632" pos:column="56">0</lit:literal></expr>)</condition><then pos:line="632" pos:column="58">
					<expr_stmt><expr><call><name><name pos:line="633" pos:column="41">invite</name><op:operator pos:line="633" pos:column="47">.</op:operator><name pos:line="633" pos:column="48">setlossCoverage</name></name><argument_list pos:line="633" pos:column="63">(<argument><expr><call><name><name pos:line="633" pos:column="64">Double</name><op:operator pos:line="633" pos:column="70">.</op:operator><name pos:line="633" pos:column="71">parseDouble</name></name><argument_list pos:line="633" pos:column="82">(<argument><expr><name pos:line="633" pos:column="83">getInput</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				
				<expr_stmt><expr><call><name><name pos:line="635" pos:column="33">System</name><op:operator pos:line="635" pos:column="39">.</op:operator><name pos:line="635" pos:column="40">out</name><op:operator pos:line="635" pos:column="43">.</op:operator><name pos:line="635" pos:column="44">print</name></name><argument_list pos:line="635" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="635" pos:column="50">"Enter the deductible amount (NO COMMA): $"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="636" pos:column="33">getInput</name> <op:operator pos:line="636" pos:column="42">=</op:operator> <call><name><name pos:line="636" pos:column="44">in</name><op:operator pos:line="636" pos:column="46">.</op:operator><name pos:line="636" pos:column="47">nextLine</name></name><argument_list pos:line="636" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="637" pos:column="33">getInput</name> <op:operator pos:line="637" pos:column="42">=</op:operator> <call><name><name pos:line="637" pos:column="44">Integer</name><op:operator pos:line="637" pos:column="51">.</op:operator><name pos:line="637" pos:column="52">toString</name></name><argument_list pos:line="637" pos:column="60">(<argument><expr><call><name><name pos:line="637" pos:column="61">acc</name><op:operator pos:line="637" pos:column="64">.</op:operator><name pos:line="637" pos:column="65">checkLetterDigit</name></name><argument_list pos:line="637" pos:column="81">(<argument><expr><name pos:line="637" pos:column="82">getInput</name></expr></argument>, <argument><expr><name><name pos:line="637" pos:column="92">RiskItConstants</name><op:operator pos:line="637" pos:column="107">.</op:operator><name pos:line="637" pos:column="108">INVALID_VALUE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
				<if pos:line="639" pos:column="33">if<condition pos:line="639" pos:column="35">(<expr><call><name><name pos:line="639" pos:column="36">getInput</name><op:operator pos:line="639" pos:column="44">.</op:operator><name pos:line="639" pos:column="45">length</name></name><argument_list pos:line="639" pos:column="51">()</argument_list></call> <op:operator pos:line="639" pos:column="54">&gt;</op:operator> <lit:literal type="number" pos:line="639" pos:column="56">0</lit:literal></expr>)</condition><then pos:line="639" pos:column="58">
					<expr_stmt><expr><call><name><name pos:line="640" pos:column="41">invite</name><op:operator pos:line="640" pos:column="47">.</op:operator><name pos:line="640" pos:column="48">setDeductible</name></name><argument_list pos:line="640" pos:column="61">(<argument><expr><call><name><name pos:line="640" pos:column="62">Double</name><op:operator pos:line="640" pos:column="68">.</op:operator><name pos:line="640" pos:column="69">parseDouble</name></name><argument_list pos:line="640" pos:column="80">(<argument><expr><name pos:line="640" pos:column="81">getInput</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				
				<expr_stmt><expr><call><name><name pos:line="642" pos:column="33">invite</name><op:operator pos:line="642" pos:column="39">.</op:operator><name pos:line="642" pos:column="40">setPremium</name></name><argument_list pos:line="642" pos:column="50">(<argument><expr><lit:literal type="number" pos:line="642" pos:column="51">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="643" pos:column="33">invite</name><op:operator pos:line="643" pos:column="39">.</op:operator><name pos:line="643" pos:column="40">setAgentID</name></name><argument_list pos:line="643" pos:column="50">(<argument><expr><name pos:line="643" pos:column="51">agentId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
				<decl_stmt><decl><type><name pos:line="645" pos:column="33">double</name></type> <name pos:line="645" pos:column="40">tempScore</name> <init pos:line="645" pos:column="50">= <expr><call><name><name pos:line="645" pos:column="52">agent</name><op:operator pos:line="645" pos:column="57">.</op:operator><name pos:line="645" pos:column="58">calculateScore</name></name><argument_list pos:line="645" pos:column="72">(<argument><expr><name pos:line="645" pos:column="73">ssn</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="646" pos:column="33">invite</name><op:operator pos:line="646" pos:column="39">.</op:operator><name pos:line="646" pos:column="40">setScore</name></name><argument_list pos:line="646" pos:column="48">(<argument><expr><name pos:line="646" pos:column="49">tempScore</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
				<expr_stmt><expr><call><name><name pos:line="648" pos:column="33">userInviteList</name><op:operator pos:line="648" pos:column="47">.</op:operator><name pos:line="648" pos:column="48">add</name></name><argument_list pos:line="648" pos:column="51">(<argument><expr><name pos:line="648" pos:column="52">invite</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="649" pos:column="33">System</name><op:operator pos:line="649" pos:column="39">.</op:operator><name pos:line="649" pos:column="40">out</name><op:operator pos:line="649" pos:column="43">.</op:operator><name pos:line="649" pos:column="44">print</name></name><argument_list pos:line="649" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="649" pos:column="50">"Do you wish to add another customer(Y/N) : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="650" pos:column="33">choice</name> <op:operator pos:line="650" pos:column="40">=</op:operator> <call><name><name pos:line="650" pos:column="42">in</name><op:operator pos:line="650" pos:column="44">.</op:operator><name pos:line="650" pos:column="45">nextLine</name></name><argument_list pos:line="650" pos:column="53">()</argument_list></call></expr>;</expr_stmt>
			
				<decl_stmt><decl><type><name pos:line="652" pos:column="33">double</name></type> <name pos:line="652" pos:column="40">premium</name> <init pos:line="652" pos:column="48">= <expr><call><name><name pos:line="652" pos:column="50">agent</name><op:operator pos:line="652" pos:column="55">.</op:operator><name pos:line="652" pos:column="56">calculateTotalValue</name></name><argument_list pos:line="652" pos:column="75">(<argument><expr><name pos:line="652" pos:column="76">invite</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<comment type="line" pos:line="653" pos:column="33">//precision to 2 digits</comment>
				<expr_stmt><expr><name pos:line="654" pos:column="33">premium</name> <op:operator pos:line="654" pos:column="41">=</op:operator> <name pos:line="654" pos:column="43">premium</name> <op:operator pos:line="654" pos:column="51">*</op:operator> <lit:literal type="number" pos:line="654" pos:column="53">100</lit:literal></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="655" pos:column="33">premium</name> <op:operator pos:line="655" pos:column="41">=</op:operator> <call><name><name pos:line="655" pos:column="43">Math</name><op:operator pos:line="655" pos:column="47">.</op:operator><name pos:line="655" pos:column="48">round</name></name><argument_list pos:line="655" pos:column="53">(<argument><expr><name pos:line="655" pos:column="54">premium</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="656" pos:column="33">premium</name> <op:operator pos:line="656" pos:column="41">=</op:operator> <name pos:line="656" pos:column="43">premium</name><op:operator pos:line="656" pos:column="50">/</op:operator><lit:literal type="number" pos:line="656" pos:column="51">100</lit:literal></expr>;</expr_stmt>
				
				<expr_stmt><expr><call><name><name pos:line="658" pos:column="33">System</name><op:operator pos:line="658" pos:column="39">.</op:operator><name pos:line="658" pos:column="40">out</name><op:operator pos:line="658" pos:column="43">.</op:operator><name pos:line="658" pos:column="44">println</name></name><argument_list pos:line="658" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="658" pos:column="52">"The monthly premium for this customer is : $"</lit:literal> <op:operator pos:line="658" pos:column="99">+</op:operator> <name pos:line="658" pos:column="101">premium</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>
				
		}</block>while<condition pos:line="661" pos:column="23">(<expr><call><name><name pos:line="661" pos:column="24">choice</name><op:operator pos:line="661" pos:column="30">.</op:operator><name pos:line="661" pos:column="31">equals</name></name><argument_list pos:line="661" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="661" pos:column="38">"Y"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="661" pos:column="42">||</op:operator> <call><name><name pos:line="661" pos:column="45">choice</name><op:operator pos:line="661" pos:column="51">.</op:operator><name pos:line="661" pos:column="52">equals</name></name><argument_list pos:line="661" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="661" pos:column="59">"Yes"</lit:literal></expr></argument>)</argument_list></call></expr> )</condition>;</do>
	}</block></function>
	
	<comment type="block" format="javadoc" pos:line="664" pos:column="9">/**
	 * This method is used to accept input for customer and get a quote using
	 * deductible and property value
	 * @author Poornima Tantry
	 */</comment>
	<function><type><specifier pos:line="669" pos:column="9">public</specifier> <name pos:line="669" pos:column="16">void</name></type> <name pos:line="669" pos:column="21">inputForUserQuotes</name><parameter_list pos:line="669" pos:column="39">()</parameter_list>
	<block pos:line="670" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="671" pos:column="17">String</name></type>  <name pos:line="671" pos:column="25">getInput</name> <init pos:line="671" pos:column="34">= <expr><lit:literal type="string" pos:line="671" pos:column="36">""</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="672" pos:column="17">double</name></type> <name pos:line="672" pos:column="24">deductible</name> <init pos:line="672" pos:column="35">= <expr><lit:literal type="number" pos:line="672" pos:column="37">0</lit:literal></expr></init><op:operator pos:line="672" pos:column="38">,</op:operator> <name pos:line="672" pos:column="40">netWorth</name> <init pos:line="672" pos:column="49">= <expr><lit:literal type="number" pos:line="672" pos:column="51">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="673" pos:column="17">long</name></type> <name pos:line="673" pos:column="22">ssn</name> <init pos:line="673" pos:column="26">= <expr><lit:literal type="number" pos:line="673" pos:column="28">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="674" pos:column="17">Invitation</name></type> <name pos:line="674" pos:column="28">invite</name> <init pos:line="674" pos:column="35">= <expr><op:operator pos:line="674" pos:column="37">new</op:operator> <call><name pos:line="674" pos:column="41">Invitation</name><argument_list pos:line="674" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<expr_stmt><expr><call><name><name pos:line="676" pos:column="17">System</name><op:operator pos:line="676" pos:column="23">.</op:operator><name pos:line="676" pos:column="24">out</name><op:operator pos:line="676" pos:column="27">.</op:operator><name pos:line="676" pos:column="28">print</name></name><argument_list pos:line="676" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="676" pos:column="34">"Enter your SSN : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="677" pos:column="17">getInput</name> <op:operator pos:line="677" pos:column="26">=</op:operator> <call><name><name pos:line="677" pos:column="28">in</name><op:operator pos:line="677" pos:column="30">.</op:operator><name pos:line="677" pos:column="31">nextLine</name></name><argument_list pos:line="677" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="678" pos:column="17">ssn</name> <op:operator pos:line="678" pos:column="21">=</op:operator> <call><name><name pos:line="678" pos:column="23">Long</name><op:operator pos:line="678" pos:column="27">.</op:operator><name pos:line="678" pos:column="28">parseLong</name></name><argument_list pos:line="678" pos:column="37">(<argument><expr><name pos:line="678" pos:column="38">getInput</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><name pos:line="680" pos:column="17">System</name><op:operator pos:line="680" pos:column="23">.</op:operator><name pos:line="680" pos:column="24">out</name><op:operator pos:line="680" pos:column="27">.</op:operator><name pos:line="680" pos:column="28">print</name></name><argument_list pos:line="680" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="680" pos:column="34">"Enter all expenses your property (NO COMMA): $"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="681" pos:column="17">getInput</name> <op:operator pos:line="681" pos:column="26">=</op:operator> <call><name><name pos:line="681" pos:column="28">in</name><op:operator pos:line="681" pos:column="30">.</op:operator><name pos:line="681" pos:column="31">nextLine</name></name><argument_list pos:line="681" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="682" pos:column="17">netWorth</name> <op:operator pos:line="682" pos:column="26">=</op:operator> <call><name><name pos:line="682" pos:column="28">Double</name><op:operator pos:line="682" pos:column="34">.</op:operator><name pos:line="682" pos:column="35">parseDouble</name></name><argument_list pos:line="682" pos:column="46">(<argument><expr><name pos:line="682" pos:column="47">getInput</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><name pos:line="684" pos:column="17">System</name><op:operator pos:line="684" pos:column="23">.</op:operator><name pos:line="684" pos:column="24">out</name><op:operator pos:line="684" pos:column="27">.</op:operator><name pos:line="684" pos:column="28">print</name></name><argument_list pos:line="684" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="684" pos:column="34">"Enter the amount of deductible (NO COMMA): $"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="685" pos:column="17">getInput</name> <op:operator pos:line="685" pos:column="26">=</op:operator> <call><name><name pos:line="685" pos:column="28">in</name><op:operator pos:line="685" pos:column="30">.</op:operator><name pos:line="685" pos:column="31">nextLine</name></name><argument_list pos:line="685" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="686" pos:column="17">deductible</name> <op:operator pos:line="686" pos:column="28">=</op:operator> <call><name><name pos:line="686" pos:column="30">Double</name><op:operator pos:line="686" pos:column="36">.</op:operator><name pos:line="686" pos:column="37">parseDouble</name></name><argument_list pos:line="686" pos:column="48">(<argument><expr><name pos:line="686" pos:column="49">getInput</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="688" pos:column="17">invite</name> <op:operator pos:line="688" pos:column="24">=</op:operator> <call><name><name pos:line="688" pos:column="26">user</name><op:operator pos:line="688" pos:column="30">.</op:operator><name pos:line="688" pos:column="31">calculateQuoteForCustomer</name></name><argument_list pos:line="688" pos:column="56">(<argument><expr><name pos:line="688" pos:column="57">ssn</name></expr></argument>, <argument><expr><name pos:line="688" pos:column="62">deductible</name></expr></argument>, <argument><expr><name pos:line="688" pos:column="74">netWorth</name></expr></argument>, <argument><expr><name pos:line="688" pos:column="84">userInviteList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><name pos:line="690" pos:column="17">System</name><op:operator pos:line="690" pos:column="23">.</op:operator><name pos:line="690" pos:column="24">out</name><op:operator pos:line="690" pos:column="27">.</op:operator><name pos:line="690" pos:column="28">print</name></name><argument_list pos:line="690" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="690" pos:column="34">"Would you like to accpet this offer(Y/N) : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="691" pos:column="17">String</name></type> <name pos:line="691" pos:column="24">input</name> <init pos:line="691" pos:column="30">= <expr><call><name><name pos:line="691" pos:column="32">in</name><op:operator pos:line="691" pos:column="34">.</op:operator><name pos:line="691" pos:column="35">nextLine</name></name><argument_list pos:line="691" pos:column="43">()</argument_list></call></expr></init></decl>;</decl_stmt>
	
		<comment type="line" pos:line="693" pos:column="17">//save the customer input so that agent can be compensated.</comment>
		<if pos:line="694" pos:column="17">if<condition pos:line="694" pos:column="19">(<expr><call><name><name pos:line="694" pos:column="20">input</name><op:operator pos:line="694" pos:column="25">.</op:operator><name pos:line="694" pos:column="26">equals</name></name><argument_list pos:line="694" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="694" pos:column="33">"Y"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="694" pos:column="38">||</op:operator> <call><name><name pos:line="694" pos:column="41">input</name><op:operator pos:line="694" pos:column="46">.</op:operator><name pos:line="694" pos:column="47">equals</name></name><argument_list pos:line="694" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="694" pos:column="54">"y"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="694" pos:column="59">
			<expr_stmt><expr><call><name><name pos:line="695" pos:column="25">invite</name><op:operator pos:line="695" pos:column="31">.</op:operator><name pos:line="695" pos:column="32">setAcceptInvite</name></name><argument_list pos:line="695" pos:column="47">(<argument><expr><name><name pos:line="695" pos:column="48">RiskItConstants</name><op:operator pos:line="695" pos:column="63">.</op:operator><name pos:line="695" pos:column="64">ACCEPT</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
		<else pos:line="696" pos:column="17">else
			<expr_stmt><expr><call><name><name pos:line="697" pos:column="25">invite</name><op:operator pos:line="697" pos:column="31">.</op:operator><name pos:line="697" pos:column="32">setAcceptInvite</name></name><argument_list pos:line="697" pos:column="47">(<argument><expr><name><name pos:line="697" pos:column="48">RiskItConstants</name><op:operator pos:line="697" pos:column="63">.</op:operator><name pos:line="697" pos:column="64">DENY</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
		
	}</block></function>
}</block></class>
</unit>
