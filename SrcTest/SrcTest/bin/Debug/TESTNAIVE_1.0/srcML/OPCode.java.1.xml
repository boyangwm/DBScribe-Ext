<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\xinco\src\com\bluecubs\xinco\core\OPCode.java" pos:tabs="8"><comment type="block" format="javadoc" pos:line="1" pos:column="1">/**
 *Copyright 2009 blueCubs.com
 *
 *Licensed under the Apache License, Version 2.0 (the "License");
 *you may not use this file except in compliance with the License.
 *You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 *Unless required by applicable law or agreed to in writing, software
 *distributed under the License is distributed on an "AS IS" BASIS,
 *WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *See the License for the specific language governing permissions and
 *limitations under the License.
 *
 *************************************************************
 * This project supports the blueCubs vision of giving back
 * to the community in exchange for free software!
 * More information on: http://www.bluecubs.org
 *************************************************************
 *
 * Name:            OpCode
 *
 * Description:     OPCode enumeration
 *
 * Original Author: Javier A. Ortiz
 * Date:            2009
 *
 * Modifications:
 *
 * Who?             When?             What?
 *
 *
 *************************************************************
 * LogDialog.java
 *
 * Created on November 22, 2006, 10:09 AM
 */</comment>
<package pos:line="39" pos:column="1">package <name><name pos:line="39" pos:column="9">com</name><op:operator pos:line="39" pos:column="12">.</op:operator><name pos:line="39" pos:column="13">bluecubs</name><op:operator pos:line="39" pos:column="21">.</op:operator><name pos:line="39" pos:column="22">xinco</name><op:operator pos:line="39" pos:column="27">.</op:operator><name pos:line="39" pos:column="28">core</name></name>;</package>

<comment type="block" format="javadoc" pos:line="41" pos:column="1">/**
 *
 * @author Javier A. Ortiz Bultron &lt;javier.ortiz.78@gmail.com&gt;
 */</comment>
<enum><specifier pos:line="45" pos:column="1">public</specifier> enum <name pos:line="45" pos:column="13">OPCode</name> <block pos:line="45" pos:column="20">{

    <decl><name pos:line="47" pos:column="5">CREATION</name><argument_list pos:line="47" pos:column="13">(<argument><expr><lit:literal type="string" pos:line="47" pos:column="14">"datawizard.logging.creation"</lit:literal></expr></argument>)</argument_list></decl><op:operator pos:line="47" pos:column="44">,</op:operator>
    <decl><name pos:line="48" pos:column="5">MODIFICATION</name><argument_list pos:line="48" pos:column="17">(<argument><expr><lit:literal type="string" pos:line="48" pos:column="18">"datawizard.logging.modification"</lit:literal></expr></argument>)</argument_list></decl><op:operator pos:line="48" pos:column="52">,</op:operator>
    <decl><name pos:line="49" pos:column="5">CHECKOUT</name><argument_list pos:line="49" pos:column="13">(<argument><expr><lit:literal type="string" pos:line="49" pos:column="14">"datawizard.logging.checkoutchangesplanned"</lit:literal></expr></argument>)</argument_list></decl><op:operator pos:line="49" pos:column="58">,</op:operator>
    <decl><name pos:line="50" pos:column="5">CHECKOUT_UNDONE</name><argument_list pos:line="50" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="50" pos:column="21">"datawizard.logging.checkoutundone"</lit:literal></expr></argument>)</argument_list></decl><op:operator pos:line="50" pos:column="57">,</op:operator>
    <decl><name pos:line="51" pos:column="5">CHECKIN</name><argument_list pos:line="51" pos:column="12">(<argument><expr><lit:literal type="string" pos:line="51" pos:column="13">"datawizard.logging.checkinchangesmade"</lit:literal></expr></argument>)</argument_list></decl><op:operator pos:line="51" pos:column="53">,</op:operator>
    <decl><name pos:line="52" pos:column="5">PUBLISH_COMMENT</name><argument_list pos:line="52" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="52" pos:column="21">"datawizard.logging.publishcomment"</lit:literal></expr></argument>)</argument_list></decl><op:operator pos:line="52" pos:column="57">,</op:operator>
    <decl><name pos:line="53" pos:column="5">LOCK_COMMENT</name><argument_list pos:line="53" pos:column="17">(<argument><expr><lit:literal type="string" pos:line="53" pos:column="18">"datawizard.logging.lockcomment"</lit:literal></expr></argument>)</argument_list></decl><op:operator pos:line="53" pos:column="51">,</op:operator>
    <decl><name pos:line="54" pos:column="5">ARCHIVED</name><argument_list pos:line="54" pos:column="13">(<argument><expr><lit:literal type="string" pos:line="54" pos:column="14">"datawizard.logging.archivecomment"</lit:literal></expr></argument>)</argument_list></decl><op:operator pos:line="54" pos:column="50">,</op:operator>
    <decl><name pos:line="55" pos:column="5">COMMENT_COMMENT</name><argument_list pos:line="55" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="55" pos:column="21">"datawizard.logging.commentcomment"</lit:literal></expr></argument>)</argument_list></decl>;
    <decl_stmt><decl><type><specifier pos:line="56" pos:column="5">private</specifier> <name pos:line="56" pos:column="13">String</name></type> <name pos:line="56" pos:column="20">name</name></decl>;</decl_stmt>

    <constructor><name pos:line="58" pos:column="5">OPCode</name><parameter_list pos:line="58" pos:column="11">(<param><decl><type><name pos:line="58" pos:column="12">String</name></type> <name pos:line="58" pos:column="19">name</name></decl></param>)</parameter_list> <block pos:line="58" pos:column="25">{
        <expr_stmt><expr><name><name pos:line="59" pos:column="9">this</name><op:operator pos:line="59" pos:column="13">.</op:operator><name pos:line="59" pos:column="14">name</name></name> <op:operator pos:line="59" pos:column="19">=</op:operator> <name pos:line="59" pos:column="21">name</name></expr>;</expr_stmt>
    }</block></constructor>

    <function><type><specifier pos:line="62" pos:column="5">public</specifier> <specifier pos:line="62" pos:column="12">static</specifier> <name pos:line="62" pos:column="19">OPCode</name></type> <name pos:line="62" pos:column="26">getOPCode</name><parameter_list pos:line="62" pos:column="35">(<param><decl><type><name pos:line="62" pos:column="36">int</name></type> <name pos:line="62" pos:column="40">op_code</name></decl></param>)</parameter_list> <block pos:line="62" pos:column="49">{
        <decl_stmt><decl><type><name pos:line="63" pos:column="9">OPCode</name><index pos:line="63" pos:column="15">[]</index></type> <name pos:line="63" pos:column="18">fields</name> <init pos:line="63" pos:column="25">= <expr><call><name><name pos:line="63" pos:column="27">OPCode</name><op:operator pos:line="63" pos:column="33">.</op:operator><name pos:line="63" pos:column="34">values</name></name><argument_list pos:line="63" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name pos:line="64" pos:column="13">op_code</name> <op:operator pos:line="64" pos:column="21">-</op:operator> <lit:literal type="number" pos:line="64" pos:column="23">1</lit:literal> <op:operator pos:line="64" pos:column="25">&lt;</op:operator> <name><name pos:line="64" pos:column="27">fields</name><op:operator pos:line="64" pos:column="33">.</op:operator><name pos:line="64" pos:column="34">length</name></name> <op:operator pos:line="64" pos:column="41">&amp;&amp;</op:operator> <name pos:line="64" pos:column="44">op_code</name> <op:operator pos:line="64" pos:column="52">-</op:operator> <lit:literal type="number" pos:line="64" pos:column="54">1</lit:literal> <op:operator pos:line="64" pos:column="56">&gt;=</op:operator> <lit:literal type="number" pos:line="64" pos:column="59">0</lit:literal></expr>)</condition><then pos:line="64" pos:column="61"> <block pos:line="64" pos:column="62">{
            <return pos:line="65" pos:column="13">return <expr><name><name pos:line="65" pos:column="20">fields</name><index pos:line="65" pos:column="26">[<expr><name pos:line="65" pos:column="27">op_code</name> <op:operator pos:line="65" pos:column="35">-</op:operator> <lit:literal type="number" pos:line="65" pos:column="37">1</lit:literal></expr>]</index></name></expr>;</return>
        }</block></then> <else pos:line="66" pos:column="11">else <block pos:line="66" pos:column="16">{
            <return pos:line="67" pos:column="13">return <expr><lit:literal type="null" pos:line="67" pos:column="20">null</lit:literal></expr>;</return>
        }</block></else></if>
    }</block></function>

    <comment type="block" format="javadoc" pos:line="71" pos:column="5">/**
     * @return the name
     */</comment>
    <function><type><specifier pos:line="74" pos:column="5">public</specifier> <name pos:line="74" pos:column="12">String</name></type> <name pos:line="74" pos:column="19">getName</name><parameter_list pos:line="74" pos:column="26">()</parameter_list> <block pos:line="74" pos:column="29">{
        <return pos:line="75" pos:column="9">return <expr><name pos:line="75" pos:column="16">name</name></expr>;</return>
    }</block></function>
}</block></enum>
</unit>
