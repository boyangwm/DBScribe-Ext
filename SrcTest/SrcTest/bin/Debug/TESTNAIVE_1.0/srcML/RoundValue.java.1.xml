<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\SE-project\testcode\RiskIt\src\com\riskIt\util\RoundValue.java" pos:tabs="8"><package pos:line="1" pos:column="1">package <name><name pos:line="1" pos:column="9">com</name><op:operator pos:line="1" pos:column="12">.</op:operator><name pos:line="1" pos:column="13">riskIt</name><op:operator pos:line="1" pos:column="19">.</op:operator><name pos:line="1" pos:column="20">util</name></name>;</package>

<import pos:line="3" pos:column="1">import <name><name pos:line="3" pos:column="8">java</name><op:operator pos:line="3" pos:column="12">.</op:operator><name pos:line="3" pos:column="13">math</name><op:operator pos:line="3" pos:column="17">.</op:operator><name pos:line="3" pos:column="18">BigDecimal</name></name>;</import>

<comment type="block" format="javadoc" pos:line="5" pos:column="1">/**
 * RoundValue.java
 * Purpose: Method takes a double value and returns a double value
 * 	rounded to two decimal places using the 'bankers round' method of
 * 	the BigDecimal class.
 * 
 * @author Bryan Angone
 * @version 1.0 7-12-09
 */</comment>

<class><specifier pos:line="15" pos:column="1">public</specifier> class <name pos:line="15" pos:column="14">RoundValue</name> <block pos:line="15" pos:column="25">{

	<function><type><specifier pos:line="17" pos:column="9">public</specifier> <name pos:line="17" pos:column="16">double</name></type> <name pos:line="17" pos:column="23">roundValue</name><parameter_list pos:line="17" pos:column="33">(<param><decl><type><name pos:line="17" pos:column="34">double</name></type> <name pos:line="17" pos:column="41">value</name></decl></param>)</parameter_list> <block pos:line="17" pos:column="48">{
		<decl_stmt><decl><type><name pos:line="18" pos:column="17">BigDecimal</name></type> <name pos:line="18" pos:column="28">bd</name> <init pos:line="18" pos:column="31">= <expr><op:operator pos:line="18" pos:column="33">new</op:operator> <call><name pos:line="18" pos:column="37">BigDecimal</name><argument_list pos:line="18" pos:column="47">(<argument><expr><name pos:line="18" pos:column="48">value</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	    <expr_stmt><expr><name pos:line="19" pos:column="13">bd</name> <op:operator pos:line="19" pos:column="16">=</op:operator> <call><name><name pos:line="19" pos:column="18">bd</name><op:operator pos:line="19" pos:column="20">.</op:operator><name pos:line="19" pos:column="21">setScale</name></name><argument_list pos:line="19" pos:column="29">(<argument><expr><lit:literal type="number" pos:line="19" pos:column="30">2</lit:literal></expr></argument>,<argument><expr><name><name pos:line="19" pos:column="32">BigDecimal</name><op:operator pos:line="19" pos:column="42">.</op:operator><name pos:line="19" pos:column="43">ROUND_HALF_EVEN</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	    <expr_stmt><expr><call><name><name pos:line="20" pos:column="13">bd</name><op:operator pos:line="20" pos:column="15">.</op:operator><name pos:line="20" pos:column="16">doubleValue</name></name><argument_list pos:line="20" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
		
		<return pos:line="22" pos:column="17">return <expr><call><name><name pos:line="22" pos:column="24">bd</name><op:operator pos:line="22" pos:column="26">.</op:operator><name pos:line="22" pos:column="27">doubleValue</name></name><argument_list pos:line="22" pos:column="38">()</argument_list></call></expr>;</return>
	}</block></function>

}</block></class>
</unit>
