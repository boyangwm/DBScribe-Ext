<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\RiskIt\src\com\riskIt\ui\CalculateWeeklyWageUI.java" pos:tabs="8"><package pos:line="1" pos:column="1">package <name><name pos:line="1" pos:column="9">com</name><op:operator pos:line="1" pos:column="12">.</op:operator><name pos:line="1" pos:column="13">riskIt</name><op:operator pos:line="1" pos:column="19">.</op:operator><name pos:line="1" pos:column="20">ui</name></name>;</package>

<import pos:line="3" pos:column="1">import <name><name pos:line="3" pos:column="8">java</name><op:operator pos:line="3" pos:column="12">.</op:operator><name pos:line="3" pos:column="13">util</name><op:operator pos:line="3" pos:column="17">.</op:operator><name pos:line="3" pos:column="18">ArrayList</name></name>;</import>
<import pos:line="4" pos:column="1">import <name><name pos:line="4" pos:column="8">java</name><op:operator pos:line="4" pos:column="12">.</op:operator><name pos:line="4" pos:column="13">util</name><op:operator pos:line="4" pos:column="17">.</op:operator><name pos:line="4" pos:column="18">Scanner</name></name>;</import>

<import pos:line="6" pos:column="1">import <name><name pos:line="6" pos:column="8">com</name><op:operator pos:line="6" pos:column="11">.</op:operator><name pos:line="6" pos:column="12">riskIt</name><op:operator pos:line="6" pos:column="18">.</op:operator><name pos:line="6" pos:column="19">interfaces</name><op:operator pos:line="6" pos:column="29">.</op:operator><name pos:line="6" pos:column="30">StartInterface</name></name>;</import>
<import pos:line="7" pos:column="1">import <name><name pos:line="7" pos:column="8">com</name><op:operator pos:line="7" pos:column="11">.</op:operator><name pos:line="7" pos:column="12">riskIt</name><op:operator pos:line="7" pos:column="18">.</op:operator><name pos:line="7" pos:column="19">util</name><op:operator pos:line="7" pos:column="23">.</op:operator><name pos:line="7" pos:column="24">Factory</name></name>;</import>


<comment type="block" format="javadoc" pos:line="10" pos:column="1">/**
 * CalculateWeeklyWageGUI.java
 * Purpose: GUI component for calculating average income and average
 * 	weekly wage for requirement 4.
 * 
 * Actual calculations for weekly values are delegated (via factory) to :
 * 
 * CalculateByState Class
 * CalculatebyOccupationOrIndustryCode Class
 * CalculateByEducation Class
 * CalculateByRace Class
 * 
 * @author Bryan Angone
 * @version 1.0 7-12-09
 */</comment>

<class><specifier pos:line="26" pos:column="1">public</specifier> class <name pos:line="26" pos:column="14">CalculateWeeklyWageUI</name> <super><implements pos:line="26" pos:column="36">implements <name pos:line="26" pos:column="47">StartInterface</name></implements></super><block pos:line="26" pos:column="61">{
	<decl_stmt><decl><type><specifier pos:line="27" pos:column="9">private</specifier> <name pos:line="27" pos:column="17">Scanner</name></type> <name pos:line="27" pos:column="25">in</name> <init pos:line="27" pos:column="28">= <expr><op:operator pos:line="27" pos:column="30">new</op:operator> <call><name pos:line="27" pos:column="34">Scanner</name><argument_list pos:line="27" pos:column="41">(<argument><expr><name><name pos:line="27" pos:column="42">System</name><op:operator pos:line="27" pos:column="48">.</op:operator><name pos:line="27" pos:column="49">in</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="28" pos:column="9">private</specifier> <name pos:line="28" pos:column="17">int</name></type> <name pos:line="28" pos:column="21">listCount</name></decl>;</decl_stmt>
	
	<decl_stmt><decl><type><name><name pos:line="30" pos:column="9">ArrayList</name><argument_list pos:line="30" pos:column="18">&lt;<argument><name pos:line="30" pos:column="19">String</name></argument>&gt;</argument_list></name></type> <name pos:line="30" pos:column="27">optionList</name> <init pos:line="30" pos:column="38">= <expr><op:operator pos:line="30" pos:column="40">new</op:operator> <call><name><name pos:line="30" pos:column="44">ArrayList</name><argument_list pos:line="30" pos:column="53">&lt;<argument><name pos:line="30" pos:column="54">String</name></argument>&gt;</argument_list></name><argument_list pos:line="30" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<function><type><specifier pos:line="32" pos:column="9">public</specifier> <name pos:line="32" pos:column="16">void</name></type> <name pos:line="32" pos:column="21">start</name><parameter_list pos:line="32" pos:column="26">()</parameter_list> <block pos:line="32" pos:column="29">{
		
		<expr_stmt><expr><call><name><name pos:line="34" pos:column="17">optionList</name><op:operator pos:line="34" pos:column="27">.</op:operator><name pos:line="34" pos:column="28">add</name></name><argument_list pos:line="34" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="34" pos:column="32">"State"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 						<comment type="line" pos:line="34" pos:column="89">// 1</comment>
		<expr_stmt><expr><call><name><name pos:line="35" pos:column="17">optionList</name><op:operator pos:line="35" pos:column="27">.</op:operator><name pos:line="35" pos:column="28">add</name></name><argument_list pos:line="35" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="35" pos:column="32">"Occupation or Industry Code"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 	<comment type="line" pos:line="35" pos:column="65">// 2</comment>
		<expr_stmt><expr><call><name><name pos:line="36" pos:column="17">optionList</name><op:operator pos:line="36" pos:column="27">.</op:operator><name pos:line="36" pos:column="28">add</name></name><argument_list pos:line="36" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="36" pos:column="32">"Education Level"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 				<comment type="line" pos:line="36" pos:column="81">// 3</comment>
		<expr_stmt><expr><call><name><name pos:line="37" pos:column="17">optionList</name><op:operator pos:line="37" pos:column="27">.</op:operator><name pos:line="37" pos:column="28">add</name></name><argument_list pos:line="37" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="37" pos:column="32">"Race"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 						<comment type="line" pos:line="37" pos:column="89">// 4</comment>

		<expr_stmt><expr><call><name pos:line="39" pos:column="17">displayMenu</name><argument_list pos:line="39" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
		
        <comment type="line" pos:line="41" pos:column="9">// Get Selection from User</comment>
        <decl_stmt><decl><type><name pos:line="42" pos:column="9">int</name></type> <name pos:line="42" pos:column="13">intChoice</name> <init pos:line="42" pos:column="23">= <expr><lit:literal type="number" pos:line="42" pos:column="25">0</lit:literal></expr></init></decl>;</decl_stmt>
        <do pos:line="43" pos:column="9">do <block pos:line="43" pos:column="12">{
            <do pos:line="44" pos:column="13">do<block pos:line="44" pos:column="15">{
            	<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><call><name><name pos:line="45" pos:column="21">in</name><op:operator pos:line="45" pos:column="23">.</op:operator><name pos:line="45" pos:column="24">hasNextInt</name></name><argument_list pos:line="45" pos:column="34">()</argument_list></call></expr>)</condition><then pos:line="45" pos:column="37"> <block pos:line="45" pos:column="38">{
            		<expr_stmt><expr><name pos:line="46" pos:column="25">intChoice</name> <op:operator pos:line="46" pos:column="35">=</op:operator> <call><name><name pos:line="46" pos:column="37">in</name><op:operator pos:line="46" pos:column="39">.</op:operator><name pos:line="46" pos:column="40">nextInt</name></name><argument_list pos:line="46" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
            		<if pos:line="47" pos:column="25">if<condition pos:line="47" pos:column="27">(<expr><name><name pos:line="47" pos:column="28">intChoice</name> <argument_list pos:line="47" pos:column="38">&lt; <argument><lit:literal type="number" pos:line="47" pos:column="40">1</lit:literal> <op:operator pos:line="47" pos:column="42">||</op:operator> <name pos:line="47" pos:column="45">intChoice</name></argument> &gt;</argument_list></name>  <name pos:line="47" pos:column="58">listCount</name><op:operator pos:line="47" pos:column="67">-</op:operator><lit:literal type="number" pos:line="47" pos:column="68">1</lit:literal></expr>)</condition><then><block pos:line="47" pos:column="70">{
            	        <expr_stmt><expr><call><name pos:line="48" pos:column="25">displayMenu</name><argument_list pos:line="48" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
            	        <expr_stmt><expr><call><name><name pos:line="49" pos:column="25">System</name><op:operator pos:line="49" pos:column="31">.</op:operator><name pos:line="49" pos:column="32">out</name><op:operator pos:line="49" pos:column="35">.</op:operator><name pos:line="49" pos:column="36">println</name></name><argument_list pos:line="49" pos:column="43">(<argument><expr><name pos:line="49" pos:column="44">intChoice</name> <op:operator pos:line="49" pos:column="54">+</op:operator> <lit:literal type="string" pos:line="49" pos:column="56">" is an invalid selection."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            		}</block></then></if>
            	}</block></then>
            	<else pos:line="52" pos:column="17">else <block pos:line="52" pos:column="22">{
                    <expr_stmt><expr><call><name pos:line="53" pos:column="21">displayMenu</name><argument_list pos:line="53" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
            		<expr_stmt><expr><call><name><name pos:line="54" pos:column="25">System</name><op:operator pos:line="54" pos:column="31">.</op:operator><name pos:line="54" pos:column="32">out</name><op:operator pos:line="54" pos:column="35">.</op:operator><name pos:line="54" pos:column="36">println</name></name><argument_list pos:line="54" pos:column="43">(<argument><expr><call><name><name pos:line="54" pos:column="44">in</name><op:operator pos:line="54" pos:column="46">.</op:operator><name pos:line="54" pos:column="47">next</name></name><argument_list pos:line="54" pos:column="51">()</argument_list></call> <op:operator pos:line="54" pos:column="54">+</op:operator> <lit:literal type="string" pos:line="54" pos:column="56">" is an invalid selection."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            		<expr_stmt><expr><name pos:line="55" pos:column="25">intChoice</name> <op:operator pos:line="55" pos:column="35">=</op:operator> <lit:literal type="number" pos:line="55" pos:column="37">0</lit:literal></expr>;</expr_stmt>
            	}</block></else></if>
            }</block> while <condition pos:line="57" pos:column="21">(<expr><name><name pos:line="57" pos:column="22">intChoice</name> <argument_list pos:line="57" pos:column="32">&lt; <argument><lit:literal type="number" pos:line="57" pos:column="34">1</lit:literal> <op:operator pos:line="57" pos:column="36">||</op:operator> <name pos:line="57" pos:column="39">intChoice</name></argument> &gt;</argument_list></name> <name pos:line="57" pos:column="51">listCount</name><op:operator pos:line="57" pos:column="60">-</op:operator><lit:literal type="number" pos:line="57" pos:column="61">1</lit:literal></expr>)</condition>;</do>
            
            <comment type="line" pos:line="59" pos:column="13">// Exit</comment>
            <if pos:line="60" pos:column="13">if<condition pos:line="60" pos:column="15">(<expr><name pos:line="60" pos:column="16">intChoice</name> <op:operator pos:line="60" pos:column="26">==</op:operator> <call><name><name pos:line="60" pos:column="29">optionList</name><op:operator pos:line="60" pos:column="39">.</op:operator><name pos:line="60" pos:column="40">size</name></name><argument_list pos:line="60" pos:column="44">()</argument_list></call><op:operator pos:line="60" pos:column="46">+</op:operator><lit:literal type="number" pos:line="60" pos:column="47">1</lit:literal></expr>)</condition><then><block pos:line="60" pos:column="49">{
            	<break pos:line="61" pos:column="17">break;</break>
            }</block></then></if>
            
            <if pos:line="64" pos:column="13">if<condition pos:line="64" pos:column="15">(<expr><name pos:line="64" pos:column="16">intChoice</name> <op:operator pos:line="64" pos:column="26">==</op:operator> <lit:literal type="number" pos:line="64" pos:column="29">1</lit:literal></expr>)</condition><then><block pos:line="64" pos:column="31">{
            	<expr_stmt><expr><call><name><name pos:line="65" pos:column="17">Factory</name><op:operator pos:line="65" pos:column="24">.</op:operator><name pos:line="65" pos:column="25">getWeeklyWageByState</name></name><argument_list pos:line="65" pos:column="45">()</argument_list></call><op:operator pos:line="65" pos:column="47">.</op:operator><call><name pos:line="65" pos:column="48">start</name><argument_list pos:line="65" pos:column="53">()</argument_list></call></expr>;</expr_stmt>
            	<expr_stmt><expr><name pos:line="66" pos:column="17">intChoice</name> <op:operator pos:line="66" pos:column="27">=</op:operator> <lit:literal type="number" pos:line="66" pos:column="29">0</lit:literal></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="68" pos:column="13">else <if pos:line="68" pos:column="18">if<condition pos:line="68" pos:column="20">(<expr><name pos:line="68" pos:column="21">intChoice</name> <op:operator pos:line="68" pos:column="31">==</op:operator> <lit:literal type="number" pos:line="68" pos:column="34">2</lit:literal></expr>)</condition><then><block pos:line="68" pos:column="36">{
            	<expr_stmt><expr><call><name><name pos:line="69" pos:column="17">Factory</name><op:operator pos:line="69" pos:column="24">.</op:operator><name pos:line="69" pos:column="25">getWeeklyWageByOccupationOrIndustryCode</name></name><argument_list pos:line="69" pos:column="64">()</argument_list></call><op:operator pos:line="69" pos:column="66">.</op:operator><call><name pos:line="69" pos:column="67">start</name><argument_list pos:line="69" pos:column="72">()</argument_list></call></expr>;</expr_stmt>
            	<expr_stmt><expr><name pos:line="70" pos:column="17">intChoice</name> <op:operator pos:line="70" pos:column="27">=</op:operator> <lit:literal type="number" pos:line="70" pos:column="29">0</lit:literal></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="72" pos:column="13">else <if pos:line="72" pos:column="18">if<condition pos:line="72" pos:column="20">(<expr><name pos:line="72" pos:column="21">intChoice</name> <op:operator pos:line="72" pos:column="31">==</op:operator> <lit:literal type="number" pos:line="72" pos:column="34">3</lit:literal></expr>)</condition><then><block pos:line="72" pos:column="36">{
            	<expr_stmt><expr><call><name><name pos:line="73" pos:column="17">Factory</name><op:operator pos:line="73" pos:column="24">.</op:operator><name pos:line="73" pos:column="25">getWeeklyWageByEducation</name></name><argument_list pos:line="73" pos:column="49">()</argument_list></call><op:operator pos:line="73" pos:column="51">.</op:operator><call><name pos:line="73" pos:column="52">start</name><argument_list pos:line="73" pos:column="57">()</argument_list></call></expr>;</expr_stmt>
            	<expr_stmt><expr><name pos:line="74" pos:column="17">intChoice</name> <op:operator pos:line="74" pos:column="27">=</op:operator> <lit:literal type="number" pos:line="74" pos:column="29">0</lit:literal></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="76" pos:column="13">else <if pos:line="76" pos:column="18">if<condition pos:line="76" pos:column="20">(<expr><name pos:line="76" pos:column="21">intChoice</name> <op:operator pos:line="76" pos:column="31">==</op:operator> <lit:literal type="number" pos:line="76" pos:column="34">4</lit:literal></expr>)</condition><then pos:line="76" pos:column="36"> <block pos:line="76" pos:column="37">{
            	<expr_stmt><expr><call><name><name pos:line="77" pos:column="17">Factory</name><op:operator pos:line="77" pos:column="24">.</op:operator><name pos:line="77" pos:column="25">getWeeklyWageByRace</name></name><argument_list pos:line="77" pos:column="44">()</argument_list></call><op:operator pos:line="77" pos:column="46">.</op:operator><call><name pos:line="77" pos:column="47">start</name><argument_list pos:line="77" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
            	<expr_stmt><expr><name pos:line="78" pos:column="17">intChoice</name> <op:operator pos:line="78" pos:column="27">=</op:operator> <lit:literal type="number" pos:line="78" pos:column="29">0</lit:literal></expr>;</expr_stmt>
            }</block></then></if></else></if></else></if></else></if>

        	<expr_stmt><expr><call><name pos:line="81" pos:column="17">displayMenu</name><argument_list pos:line="81" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
        	
        }</block> while <condition pos:line="83" pos:column="17">(<expr><lit:literal type="boolean" pos:line="83" pos:column="18">true</lit:literal></expr>)</condition>;</do>	
	}</block></function>
	
	<function><type><specifier pos:line="86" pos:column="9">private</specifier> <name pos:line="86" pos:column="17">void</name></type> <name pos:line="86" pos:column="22">displayMenu</name><parameter_list pos:line="86" pos:column="33">()</parameter_list><block pos:line="86" pos:column="35">{
    	<expr_stmt><expr><name pos:line="87" pos:column="9">listCount</name> <op:operator pos:line="87" pos:column="19">=</op:operator> <lit:literal type="number" pos:line="87" pos:column="21">1</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="88" pos:column="17">System</name><op:operator pos:line="88" pos:column="23">.</op:operator><name pos:line="88" pos:column="24">out</name><op:operator pos:line="88" pos:column="27">.</op:operator><name pos:line="88" pos:column="28">println</name></name><argument_list pos:line="88" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="88" pos:column="36">"Enter a catigory to display average weekly wage for: "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for pos:line="89" pos:column="9">for(<init><decl><type><name pos:line="89" pos:column="13">String</name></type> <name pos:line="89" pos:column="20">i</name> <range pos:line="89" pos:column="22">: <expr><name pos:line="89" pos:column="24">optionList</name></expr></range></decl></init>)<block pos:line="89" pos:column="35">{
        	<expr_stmt><expr><call><name><name pos:line="90" pos:column="17">System</name><op:operator pos:line="90" pos:column="23">.</op:operator><name pos:line="90" pos:column="24">out</name><op:operator pos:line="90" pos:column="27">.</op:operator><name pos:line="90" pos:column="28">println</name></name><argument_list pos:line="90" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="90" pos:column="36">"["</lit:literal> <op:operator pos:line="90" pos:column="40">+</op:operator> <name pos:line="90" pos:column="42">listCount</name><op:operator pos:line="90" pos:column="51">++</op:operator> <op:operator pos:line="90" pos:column="54">+</op:operator> <lit:literal type="string" pos:line="90" pos:column="56">"] "</lit:literal> <op:operator pos:line="90" pos:column="61">+</op:operator> <name pos:line="90" pos:column="63">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></for>       
        <expr_stmt><expr><call><name><name pos:line="92" pos:column="9">System</name><op:operator pos:line="92" pos:column="15">.</op:operator><name pos:line="92" pos:column="16">out</name><op:operator pos:line="92" pos:column="19">.</op:operator><name pos:line="92" pos:column="20">println</name></name><argument_list pos:line="92" pos:column="27">(<argument><expr><lit:literal type="string" pos:line="92" pos:column="28">"["</lit:literal> <op:operator pos:line="92" pos:column="32">+</op:operator> <name pos:line="92" pos:column="34">listCount</name><op:operator pos:line="92" pos:column="43">++</op:operator> <op:operator pos:line="92" pos:column="46">+</op:operator> <lit:literal type="string" pos:line="92" pos:column="48">"] "</lit:literal> <op:operator pos:line="92" pos:column="53">+</op:operator> <lit:literal type="string" pos:line="92" pos:column="55">"Return"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	
        <expr_stmt><expr><call><name><name pos:line="93" pos:column="9">System</name><op:operator pos:line="93" pos:column="15">.</op:operator><name pos:line="93" pos:column="16">out</name><op:operator pos:line="93" pos:column="19">.</op:operator><name pos:line="93" pos:column="20">println</name></name><argument_list pos:line="93" pos:column="27">(<argument><expr><lit:literal type="string" pos:line="93" pos:column="28">"Please enter a selection 1 ~"</lit:literal> <op:operator pos:line="93" pos:column="59">+</op:operator> <op:operator pos:line="93" pos:column="61">(</op:operator><name pos:line="93" pos:column="62">listCount</name><op:operator pos:line="93" pos:column="71">-</op:operator><lit:literal type="number" pos:line="93" pos:column="72">1</lit:literal><op:operator pos:line="93" pos:column="73">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>
}</block></class>
</unit>
