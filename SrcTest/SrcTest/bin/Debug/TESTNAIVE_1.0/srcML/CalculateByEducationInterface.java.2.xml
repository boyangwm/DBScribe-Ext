<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\RiskIt\src\com\riskIt\interfaces\CalculateByEducationInterface.java" pos:tabs="8"><package pos:line="1" pos:column="1">package <name><name pos:line="1" pos:column="9">com</name><op:operator pos:line="1" pos:column="12">.</op:operator><name pos:line="1" pos:column="13">riskIt</name><op:operator pos:line="1" pos:column="19">.</op:operator><name pos:line="1" pos:column="20">interfaces</name></name>;</package>

<import pos:line="3" pos:column="1">import <name><name pos:line="3" pos:column="8">java</name><op:operator pos:line="3" pos:column="12">.</op:operator><name pos:line="3" pos:column="13">util</name><op:operator pos:line="3" pos:column="17">.</op:operator><name pos:line="3" pos:column="18">ArrayList</name></name>;</import>

<comment type="block" format="javadoc" pos:line="5" pos:column="1">/**
 * CalculateByEducationInterface.java
 * Purpose: Interface for CalculateByEducation class
 * 
 * @author Bryan Angone
 * @version 1.0 7-12-09
 */</comment>

<class type="interface"><specifier pos:line="13" pos:column="1">public</specifier> interface <name pos:line="13" pos:column="18">CalculateByEducationInterface</name> <block pos:line="13" pos:column="48">{
	
	<function_decl><type><specifier pos:line="15" pos:column="9">public</specifier> <name><name pos:line="15" pos:column="16">ArrayList</name><argument_list pos:line="15" pos:column="25">&lt;<argument><name pos:line="15" pos:column="26">String</name></argument>&gt;</argument_list></name></type> <name pos:line="15" pos:column="34">getEducationLevelList</name><parameter_list pos:line="15" pos:column="55">()</parameter_list>;</function_decl>
	
	<function_decl><type><specifier pos:line="17" pos:column="9">public</specifier> <name pos:line="17" pos:column="16">boolean</name></type> <name pos:line="17" pos:column="24">isInEducationList</name><parameter_list pos:line="17" pos:column="41">(<param><decl><type><name pos:line="17" pos:column="42">String</name></type> <name pos:line="17" pos:column="49">education</name></decl></param>)</parameter_list>;</function_decl>
	
	<function_decl><type><specifier pos:line="19" pos:column="9">public</specifier> <name pos:line="19" pos:column="16">double</name></type> <name pos:line="19" pos:column="23">calculateIncomeByEducationLevel</name><parameter_list pos:line="19" pos:column="54">(<param><decl><type><name pos:line="19" pos:column="55">String</name></type> <name pos:line="19" pos:column="62">education</name></decl></param>)</parameter_list>;</function_decl>
	
	<function_decl><type><specifier pos:line="21" pos:column="9">public</specifier> <name pos:line="21" pos:column="16">double</name></type> <name pos:line="21" pos:column="23">calculateIncomeByAllEducationLevels</name><parameter_list pos:line="21" pos:column="58">()</parameter_list>;</function_decl>
	
	<function_decl><type><specifier pos:line="23" pos:column="9">public</specifier> <name pos:line="23" pos:column="16">double</name></type> <name pos:line="23" pos:column="23">calculateWeeklyWageByEducationLevel</name><parameter_list pos:line="23" pos:column="58">(<param><decl><type><name pos:line="23" pos:column="59">String</name></type> <name pos:line="23" pos:column="66">education</name></decl></param>)</parameter_list>;</function_decl>
	
	<function_decl><type><specifier pos:line="25" pos:column="9">public</specifier> <name pos:line="25" pos:column="16">double</name></type> <name pos:line="25" pos:column="23">calculateWeeklyWageByAllEducationLevels</name><parameter_list pos:line="25" pos:column="62">()</parameter_list>;</function_decl>

}</block></class>
</unit>
