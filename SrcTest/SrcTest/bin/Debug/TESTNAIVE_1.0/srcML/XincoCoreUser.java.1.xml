<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\xinco\src\com\bluecubs\xinco\core\XincoCoreUser.java" pos:tabs="8"><comment type="block" format="javadoc" pos:line="1" pos:column="1">/**
 * XincoCoreUser.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.
 */</comment>

<package pos:line="8" pos:column="1">package <name><name pos:line="8" pos:column="9">com</name><op:operator pos:line="8" pos:column="12">.</op:operator><name pos:line="8" pos:column="13">bluecubs</name><op:operator pos:line="8" pos:column="21">.</op:operator><name pos:line="8" pos:column="22">xinco</name><op:operator pos:line="8" pos:column="27">.</op:operator><name pos:line="8" pos:column="28">core</name></name>;</package>

<class><specifier pos:line="10" pos:column="1">public</specifier> class <name pos:line="10" pos:column="14">XincoCoreUser</name>  <super><implements pos:line="10" pos:column="29">implements <name><name pos:line="10" pos:column="40">java</name><op:operator pos:line="10" pos:column="44">.</op:operator><name pos:line="10" pos:column="45">io</name><op:operator pos:line="10" pos:column="47">.</op:operator><name pos:line="10" pos:column="48">Serializable</name></name></implements></super> <block pos:line="10" pos:column="61">{
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">private</specifier> <name pos:line="11" pos:column="13">boolean</name></type> <name pos:line="11" pos:column="21">change</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="13" pos:column="5">private</specifier> <name pos:line="13" pos:column="13">int</name></type> <name pos:line="13" pos:column="17">changerID</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="15" pos:column="5">private</specifier> <name><name pos:line="15" pos:column="13">java</name><op:operator pos:line="15" pos:column="17">.</op:operator><name pos:line="15" pos:column="18">lang</name><op:operator pos:line="15" pos:column="22">.</op:operator><name pos:line="15" pos:column="23">String</name></name></type> <name pos:line="15" pos:column="30">email</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="17" pos:column="5">private</specifier> <name><name pos:line="17" pos:column="13">java</name><op:operator pos:line="17" pos:column="17">.</op:operator><name pos:line="17" pos:column="18">lang</name><op:operator pos:line="17" pos:column="22">.</op:operator><name pos:line="17" pos:column="23">String</name></name></type> <name pos:line="17" pos:column="30">firstname</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="19" pos:column="5">private</specifier> <name pos:line="19" pos:column="13">int</name></type> <name pos:line="19" pos:column="17">id</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="21" pos:column="5">private</specifier> <name><name pos:line="21" pos:column="13">java</name><op:operator pos:line="21" pos:column="17">.</op:operator><name pos:line="21" pos:column="18">lang</name><op:operator pos:line="21" pos:column="22">.</op:operator><name pos:line="21" pos:column="23">String</name></name></type> <name pos:line="21" pos:column="30">name</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="23" pos:column="5">private</specifier> <name><name pos:line="23" pos:column="13">java</name><op:operator pos:line="23" pos:column="17">.</op:operator><name pos:line="23" pos:column="18">lang</name><op:operator pos:line="23" pos:column="22">.</op:operator><name pos:line="23" pos:column="23">String</name></name></type> <name pos:line="23" pos:column="30">reason</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="25" pos:column="5">private</specifier> <name pos:line="25" pos:column="13">int</name></type> <name pos:line="25" pos:column="17">status_number</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="27" pos:column="5">private</specifier> <name><name pos:line="27" pos:column="13">java</name><op:operator pos:line="27" pos:column="17">.</op:operator><name pos:line="27" pos:column="18">lang</name><op:operator pos:line="27" pos:column="22">.</op:operator><name pos:line="27" pos:column="23">String</name></name></type> <name pos:line="27" pos:column="30">username</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="29" pos:column="5">private</specifier> <name><name pos:line="29" pos:column="13">java</name><op:operator pos:line="29" pos:column="17">.</op:operator><name pos:line="29" pos:column="18">lang</name><op:operator pos:line="29" pos:column="22">.</op:operator><name pos:line="29" pos:column="23">String</name></name></type> <name pos:line="29" pos:column="30">userpassword</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="31" pos:column="5">private</specifier> <name pos:line="31" pos:column="13">boolean</name></type> <name pos:line="31" pos:column="21">writeGroups</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="33" pos:column="5">private</specifier> <name><name pos:line="33" pos:column="13">java</name><op:operator pos:line="33" pos:column="17">.</op:operator><name pos:line="33" pos:column="18">util</name><op:operator pos:line="33" pos:column="22">.</op:operator><name pos:line="33" pos:column="23">Vector</name></name></type> <name pos:line="33" pos:column="30">xinco_core_groups</name></decl>;</decl_stmt>

    <constructor><specifier pos:line="35" pos:column="5">public</specifier> <name pos:line="35" pos:column="12">XincoCoreUser</name><parameter_list pos:line="35" pos:column="25">()</parameter_list> <block pos:line="35" pos:column="28">{
    }</block></constructor>

    <constructor><specifier pos:line="38" pos:column="5">public</specifier> <name pos:line="38" pos:column="12">XincoCoreUser</name><parameter_list pos:line="38" pos:column="25">(
           <param><decl><type><name pos:line="39" pos:column="12">boolean</name></type> <name pos:line="39" pos:column="20">change</name></decl></param>,
           <param><decl><type><name pos:line="40" pos:column="12">int</name></type> <name pos:line="40" pos:column="16">changerID</name></decl></param>,
           <param><decl><type><name><name pos:line="41" pos:column="12">java</name><op:operator pos:line="41" pos:column="16">.</op:operator><name pos:line="41" pos:column="17">lang</name><op:operator pos:line="41" pos:column="21">.</op:operator><name pos:line="41" pos:column="22">String</name></name></type> <name pos:line="41" pos:column="29">email</name></decl></param>,
           <param><decl><type><name><name pos:line="42" pos:column="12">java</name><op:operator pos:line="42" pos:column="16">.</op:operator><name pos:line="42" pos:column="17">lang</name><op:operator pos:line="42" pos:column="21">.</op:operator><name pos:line="42" pos:column="22">String</name></name></type> <name pos:line="42" pos:column="29">firstname</name></decl></param>,
           <param><decl><type><name pos:line="43" pos:column="12">int</name></type> <name pos:line="43" pos:column="16">id</name></decl></param>,
           <param><decl><type><name><name pos:line="44" pos:column="12">java</name><op:operator pos:line="44" pos:column="16">.</op:operator><name pos:line="44" pos:column="17">lang</name><op:operator pos:line="44" pos:column="21">.</op:operator><name pos:line="44" pos:column="22">String</name></name></type> <name pos:line="44" pos:column="29">name</name></decl></param>,
           <param><decl><type><name><name pos:line="45" pos:column="12">java</name><op:operator pos:line="45" pos:column="16">.</op:operator><name pos:line="45" pos:column="17">lang</name><op:operator pos:line="45" pos:column="21">.</op:operator><name pos:line="45" pos:column="22">String</name></name></type> <name pos:line="45" pos:column="29">reason</name></decl></param>,
           <param><decl><type><name pos:line="46" pos:column="12">int</name></type> <name pos:line="46" pos:column="16">status_number</name></decl></param>,
           <param><decl><type><name><name pos:line="47" pos:column="12">java</name><op:operator pos:line="47" pos:column="16">.</op:operator><name pos:line="47" pos:column="17">lang</name><op:operator pos:line="47" pos:column="21">.</op:operator><name pos:line="47" pos:column="22">String</name></name></type> <name pos:line="47" pos:column="29">username</name></decl></param>,
           <param><decl><type><name><name pos:line="48" pos:column="12">java</name><op:operator pos:line="48" pos:column="16">.</op:operator><name pos:line="48" pos:column="17">lang</name><op:operator pos:line="48" pos:column="21">.</op:operator><name pos:line="48" pos:column="22">String</name></name></type> <name pos:line="48" pos:column="29">userpassword</name></decl></param>,
           <param><decl><type><name pos:line="49" pos:column="12">boolean</name></type> <name pos:line="49" pos:column="20">writeGroups</name></decl></param>,
           <param><decl><type><name><name pos:line="50" pos:column="12">java</name><op:operator pos:line="50" pos:column="16">.</op:operator><name pos:line="50" pos:column="17">util</name><op:operator pos:line="50" pos:column="21">.</op:operator><name pos:line="50" pos:column="22">Vector</name></name></type> <name pos:line="50" pos:column="29">xinco_core_groups</name></decl></param>)</parameter_list> <block pos:line="50" pos:column="48">{
           <expr_stmt><expr><name><name pos:line="51" pos:column="12">this</name><op:operator pos:line="51" pos:column="16">.</op:operator><name pos:line="51" pos:column="17">change</name></name> <op:operator pos:line="51" pos:column="24">=</op:operator> <name pos:line="51" pos:column="26">change</name></expr>;</expr_stmt>
           <expr_stmt><expr><name><name pos:line="52" pos:column="12">this</name><op:operator pos:line="52" pos:column="16">.</op:operator><name pos:line="52" pos:column="17">changerID</name></name> <op:operator pos:line="52" pos:column="27">=</op:operator> <name pos:line="52" pos:column="29">changerID</name></expr>;</expr_stmt>
           <expr_stmt><expr><name><name pos:line="53" pos:column="12">this</name><op:operator pos:line="53" pos:column="16">.</op:operator><name pos:line="53" pos:column="17">email</name></name> <op:operator pos:line="53" pos:column="23">=</op:operator> <name pos:line="53" pos:column="25">email</name></expr>;</expr_stmt>
           <expr_stmt><expr><name><name pos:line="54" pos:column="12">this</name><op:operator pos:line="54" pos:column="16">.</op:operator><name pos:line="54" pos:column="17">firstname</name></name> <op:operator pos:line="54" pos:column="27">=</op:operator> <name pos:line="54" pos:column="29">firstname</name></expr>;</expr_stmt>
           <expr_stmt><expr><name><name pos:line="55" pos:column="12">this</name><op:operator pos:line="55" pos:column="16">.</op:operator><name pos:line="55" pos:column="17">id</name></name> <op:operator pos:line="55" pos:column="20">=</op:operator> <name pos:line="55" pos:column="22">id</name></expr>;</expr_stmt>
           <expr_stmt><expr><name><name pos:line="56" pos:column="12">this</name><op:operator pos:line="56" pos:column="16">.</op:operator><name pos:line="56" pos:column="17">name</name></name> <op:operator pos:line="56" pos:column="22">=</op:operator> <name pos:line="56" pos:column="24">name</name></expr>;</expr_stmt>
           <expr_stmt><expr><name><name pos:line="57" pos:column="12">this</name><op:operator pos:line="57" pos:column="16">.</op:operator><name pos:line="57" pos:column="17">reason</name></name> <op:operator pos:line="57" pos:column="24">=</op:operator> <name pos:line="57" pos:column="26">reason</name></expr>;</expr_stmt>
           <expr_stmt><expr><name><name pos:line="58" pos:column="12">this</name><op:operator pos:line="58" pos:column="16">.</op:operator><name pos:line="58" pos:column="17">status_number</name></name> <op:operator pos:line="58" pos:column="31">=</op:operator> <name pos:line="58" pos:column="33">status_number</name></expr>;</expr_stmt>
           <expr_stmt><expr><name><name pos:line="59" pos:column="12">this</name><op:operator pos:line="59" pos:column="16">.</op:operator><name pos:line="59" pos:column="17">username</name></name> <op:operator pos:line="59" pos:column="26">=</op:operator> <name pos:line="59" pos:column="28">username</name></expr>;</expr_stmt>
           <expr_stmt><expr><name><name pos:line="60" pos:column="12">this</name><op:operator pos:line="60" pos:column="16">.</op:operator><name pos:line="60" pos:column="17">userpassword</name></name> <op:operator pos:line="60" pos:column="30">=</op:operator> <name pos:line="60" pos:column="32">userpassword</name></expr>;</expr_stmt>
           <expr_stmt><expr><name><name pos:line="61" pos:column="12">this</name><op:operator pos:line="61" pos:column="16">.</op:operator><name pos:line="61" pos:column="17">writeGroups</name></name> <op:operator pos:line="61" pos:column="29">=</op:operator> <name pos:line="61" pos:column="31">writeGroups</name></expr>;</expr_stmt>
           <expr_stmt><expr><name><name pos:line="62" pos:column="12">this</name><op:operator pos:line="62" pos:column="16">.</op:operator><name pos:line="62" pos:column="17">xinco_core_groups</name></name> <op:operator pos:line="62" pos:column="35">=</op:operator> <name pos:line="62" pos:column="37">xinco_core_groups</name></expr>;</expr_stmt>
    }</block></constructor>


    <comment type="block" format="javadoc" pos:line="66" pos:column="5">/**
     * Gets the change value for this XincoCoreUser.
     * 
     * @return change
     */</comment>
    <function><type><specifier pos:line="71" pos:column="5">public</specifier> <name pos:line="71" pos:column="12">boolean</name></type> <name pos:line="71" pos:column="20">isChange</name><parameter_list pos:line="71" pos:column="28">()</parameter_list> <block pos:line="71" pos:column="31">{
        <return pos:line="72" pos:column="9">return <expr><name pos:line="72" pos:column="16">change</name></expr>;</return>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="76" pos:column="5">/**
     * Sets the change value for this XincoCoreUser.
     * 
     * @param change
     */</comment>
    <function><type><specifier pos:line="81" pos:column="5">public</specifier> <name pos:line="81" pos:column="12">void</name></type> <name pos:line="81" pos:column="17">setChange</name><parameter_list pos:line="81" pos:column="26">(<param><decl><type><name pos:line="81" pos:column="27">boolean</name></type> <name pos:line="81" pos:column="35">change</name></decl></param>)</parameter_list> <block pos:line="81" pos:column="43">{
        <expr_stmt><expr><name><name pos:line="82" pos:column="9">this</name><op:operator pos:line="82" pos:column="13">.</op:operator><name pos:line="82" pos:column="14">change</name></name> <op:operator pos:line="82" pos:column="21">=</op:operator> <name pos:line="82" pos:column="23">change</name></expr>;</expr_stmt>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="86" pos:column="5">/**
     * Gets the changerID value for this XincoCoreUser.
     * 
     * @return changerID
     */</comment>
    <function><type><specifier pos:line="91" pos:column="5">public</specifier> <name pos:line="91" pos:column="12">int</name></type> <name pos:line="91" pos:column="16">getChangerID</name><parameter_list pos:line="91" pos:column="28">()</parameter_list> <block pos:line="91" pos:column="31">{
        <return pos:line="92" pos:column="9">return <expr><name pos:line="92" pos:column="16">changerID</name></expr>;</return>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="96" pos:column="5">/**
     * Sets the changerID value for this XincoCoreUser.
     * 
     * @param changerID
     */</comment>
    <function><type><specifier pos:line="101" pos:column="5">public</specifier> <name pos:line="101" pos:column="12">void</name></type> <name pos:line="101" pos:column="17">setChangerID</name><parameter_list pos:line="101" pos:column="29">(<param><decl><type><name pos:line="101" pos:column="30">int</name></type> <name pos:line="101" pos:column="34">changerID</name></decl></param>)</parameter_list> <block pos:line="101" pos:column="45">{
        <expr_stmt><expr><name><name pos:line="102" pos:column="9">this</name><op:operator pos:line="102" pos:column="13">.</op:operator><name pos:line="102" pos:column="14">changerID</name></name> <op:operator pos:line="102" pos:column="24">=</op:operator> <name pos:line="102" pos:column="26">changerID</name></expr>;</expr_stmt>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="106" pos:column="5">/**
     * Gets the email value for this XincoCoreUser.
     * 
     * @return email
     */</comment>
    <function><type><specifier pos:line="111" pos:column="5">public</specifier> <name><name pos:line="111" pos:column="12">java</name><op:operator pos:line="111" pos:column="16">.</op:operator><name pos:line="111" pos:column="17">lang</name><op:operator pos:line="111" pos:column="21">.</op:operator><name pos:line="111" pos:column="22">String</name></name></type> <name pos:line="111" pos:column="29">getEmail</name><parameter_list pos:line="111" pos:column="37">()</parameter_list> <block pos:line="111" pos:column="40">{
        <return pos:line="112" pos:column="9">return <expr><name pos:line="112" pos:column="16">email</name></expr>;</return>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="116" pos:column="5">/**
     * Sets the email value for this XincoCoreUser.
     * 
     * @param email
     */</comment>
    <function><type><specifier pos:line="121" pos:column="5">public</specifier> <name pos:line="121" pos:column="12">void</name></type> <name pos:line="121" pos:column="17">setEmail</name><parameter_list pos:line="121" pos:column="25">(<param><decl><type><name><name pos:line="121" pos:column="26">java</name><op:operator pos:line="121" pos:column="30">.</op:operator><name pos:line="121" pos:column="31">lang</name><op:operator pos:line="121" pos:column="35">.</op:operator><name pos:line="121" pos:column="36">String</name></name></type> <name pos:line="121" pos:column="43">email</name></decl></param>)</parameter_list> <block pos:line="121" pos:column="50">{
        <expr_stmt><expr><name><name pos:line="122" pos:column="9">this</name><op:operator pos:line="122" pos:column="13">.</op:operator><name pos:line="122" pos:column="14">email</name></name> <op:operator pos:line="122" pos:column="20">=</op:operator> <name pos:line="122" pos:column="22">email</name></expr>;</expr_stmt>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="126" pos:column="5">/**
     * Gets the firstname value for this XincoCoreUser.
     * 
     * @return firstname
     */</comment>
    <function><type><specifier pos:line="131" pos:column="5">public</specifier> <name><name pos:line="131" pos:column="12">java</name><op:operator pos:line="131" pos:column="16">.</op:operator><name pos:line="131" pos:column="17">lang</name><op:operator pos:line="131" pos:column="21">.</op:operator><name pos:line="131" pos:column="22">String</name></name></type> <name pos:line="131" pos:column="29">getFirstname</name><parameter_list pos:line="131" pos:column="41">()</parameter_list> <block pos:line="131" pos:column="44">{
        <return pos:line="132" pos:column="9">return <expr><name pos:line="132" pos:column="16">firstname</name></expr>;</return>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="136" pos:column="5">/**
     * Sets the firstname value for this XincoCoreUser.
     * 
     * @param firstname
     */</comment>
    <function><type><specifier pos:line="141" pos:column="5">public</specifier> <name pos:line="141" pos:column="12">void</name></type> <name pos:line="141" pos:column="17">setFirstname</name><parameter_list pos:line="141" pos:column="29">(<param><decl><type><name><name pos:line="141" pos:column="30">java</name><op:operator pos:line="141" pos:column="34">.</op:operator><name pos:line="141" pos:column="35">lang</name><op:operator pos:line="141" pos:column="39">.</op:operator><name pos:line="141" pos:column="40">String</name></name></type> <name pos:line="141" pos:column="47">firstname</name></decl></param>)</parameter_list> <block pos:line="141" pos:column="58">{
        <expr_stmt><expr><name><name pos:line="142" pos:column="9">this</name><op:operator pos:line="142" pos:column="13">.</op:operator><name pos:line="142" pos:column="14">firstname</name></name> <op:operator pos:line="142" pos:column="24">=</op:operator> <name pos:line="142" pos:column="26">firstname</name></expr>;</expr_stmt>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="146" pos:column="5">/**
     * Gets the id value for this XincoCoreUser.
     * 
     * @return id
     */</comment>
    <function><type><specifier pos:line="151" pos:column="5">public</specifier> <name pos:line="151" pos:column="12">int</name></type> <name pos:line="151" pos:column="16">getId</name><parameter_list pos:line="151" pos:column="21">()</parameter_list> <block pos:line="151" pos:column="24">{
        <return pos:line="152" pos:column="9">return <expr><name pos:line="152" pos:column="16">id</name></expr>;</return>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="156" pos:column="5">/**
     * Sets the id value for this XincoCoreUser.
     * 
     * @param id
     */</comment>
    <function><type><specifier pos:line="161" pos:column="5">public</specifier> <name pos:line="161" pos:column="12">void</name></type> <name pos:line="161" pos:column="17">setId</name><parameter_list pos:line="161" pos:column="22">(<param><decl><type><name pos:line="161" pos:column="23">int</name></type> <name pos:line="161" pos:column="27">id</name></decl></param>)</parameter_list> <block pos:line="161" pos:column="31">{
        <expr_stmt><expr><name><name pos:line="162" pos:column="9">this</name><op:operator pos:line="162" pos:column="13">.</op:operator><name pos:line="162" pos:column="14">id</name></name> <op:operator pos:line="162" pos:column="17">=</op:operator> <name pos:line="162" pos:column="19">id</name></expr>;</expr_stmt>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="166" pos:column="5">/**
     * Gets the name value for this XincoCoreUser.
     * 
     * @return name
     */</comment>
    <function><type><specifier pos:line="171" pos:column="5">public</specifier> <name><name pos:line="171" pos:column="12">java</name><op:operator pos:line="171" pos:column="16">.</op:operator><name pos:line="171" pos:column="17">lang</name><op:operator pos:line="171" pos:column="21">.</op:operator><name pos:line="171" pos:column="22">String</name></name></type> <name pos:line="171" pos:column="29">getName</name><parameter_list pos:line="171" pos:column="36">()</parameter_list> <block pos:line="171" pos:column="39">{
        <return pos:line="172" pos:column="9">return <expr><name pos:line="172" pos:column="16">name</name></expr>;</return>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="176" pos:column="5">/**
     * Sets the name value for this XincoCoreUser.
     * 
     * @param name
     */</comment>
    <function><type><specifier pos:line="181" pos:column="5">public</specifier> <name pos:line="181" pos:column="12">void</name></type> <name pos:line="181" pos:column="17">setName</name><parameter_list pos:line="181" pos:column="24">(<param><decl><type><name><name pos:line="181" pos:column="25">java</name><op:operator pos:line="181" pos:column="29">.</op:operator><name pos:line="181" pos:column="30">lang</name><op:operator pos:line="181" pos:column="34">.</op:operator><name pos:line="181" pos:column="35">String</name></name></type> <name pos:line="181" pos:column="42">name</name></decl></param>)</parameter_list> <block pos:line="181" pos:column="48">{
        <expr_stmt><expr><name><name pos:line="182" pos:column="9">this</name><op:operator pos:line="182" pos:column="13">.</op:operator><name pos:line="182" pos:column="14">name</name></name> <op:operator pos:line="182" pos:column="19">=</op:operator> <name pos:line="182" pos:column="21">name</name></expr>;</expr_stmt>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="186" pos:column="5">/**
     * Gets the reason value for this XincoCoreUser.
     * 
     * @return reason
     */</comment>
    <function><type><specifier pos:line="191" pos:column="5">public</specifier> <name><name pos:line="191" pos:column="12">java</name><op:operator pos:line="191" pos:column="16">.</op:operator><name pos:line="191" pos:column="17">lang</name><op:operator pos:line="191" pos:column="21">.</op:operator><name pos:line="191" pos:column="22">String</name></name></type> <name pos:line="191" pos:column="29">getReason</name><parameter_list pos:line="191" pos:column="38">()</parameter_list> <block pos:line="191" pos:column="41">{
        <return pos:line="192" pos:column="9">return <expr><name pos:line="192" pos:column="16">reason</name></expr>;</return>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="196" pos:column="5">/**
     * Sets the reason value for this XincoCoreUser.
     * 
     * @param reason
     */</comment>
    <function><type><specifier pos:line="201" pos:column="5">public</specifier> <name pos:line="201" pos:column="12">void</name></type> <name pos:line="201" pos:column="17">setReason</name><parameter_list pos:line="201" pos:column="26">(<param><decl><type><name><name pos:line="201" pos:column="27">java</name><op:operator pos:line="201" pos:column="31">.</op:operator><name pos:line="201" pos:column="32">lang</name><op:operator pos:line="201" pos:column="36">.</op:operator><name pos:line="201" pos:column="37">String</name></name></type> <name pos:line="201" pos:column="44">reason</name></decl></param>)</parameter_list> <block pos:line="201" pos:column="52">{
        <expr_stmt><expr><name><name pos:line="202" pos:column="9">this</name><op:operator pos:line="202" pos:column="13">.</op:operator><name pos:line="202" pos:column="14">reason</name></name> <op:operator pos:line="202" pos:column="21">=</op:operator> <name pos:line="202" pos:column="23">reason</name></expr>;</expr_stmt>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="206" pos:column="5">/**
     * Gets the status_number value for this XincoCoreUser.
     * 
     * @return status_number
     */</comment>
    <function><type><specifier pos:line="211" pos:column="5">public</specifier> <name pos:line="211" pos:column="12">int</name></type> <name pos:line="211" pos:column="16">getStatus_number</name><parameter_list pos:line="211" pos:column="32">()</parameter_list> <block pos:line="211" pos:column="35">{
        <return pos:line="212" pos:column="9">return <expr><name pos:line="212" pos:column="16">status_number</name></expr>;</return>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="216" pos:column="5">/**
     * Sets the status_number value for this XincoCoreUser.
     * 
     * @param status_number
     */</comment>
    <function><type><specifier pos:line="221" pos:column="5">public</specifier> <name pos:line="221" pos:column="12">void</name></type> <name pos:line="221" pos:column="17">setStatus_number</name><parameter_list pos:line="221" pos:column="33">(<param><decl><type><name pos:line="221" pos:column="34">int</name></type> <name pos:line="221" pos:column="38">status_number</name></decl></param>)</parameter_list> <block pos:line="221" pos:column="53">{
        <expr_stmt><expr><name><name pos:line="222" pos:column="9">this</name><op:operator pos:line="222" pos:column="13">.</op:operator><name pos:line="222" pos:column="14">status_number</name></name> <op:operator pos:line="222" pos:column="28">=</op:operator> <name pos:line="222" pos:column="30">status_number</name></expr>;</expr_stmt>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="226" pos:column="5">/**
     * Gets the username value for this XincoCoreUser.
     * 
     * @return username
     */</comment>
    <function><type><specifier pos:line="231" pos:column="5">public</specifier> <name><name pos:line="231" pos:column="12">java</name><op:operator pos:line="231" pos:column="16">.</op:operator><name pos:line="231" pos:column="17">lang</name><op:operator pos:line="231" pos:column="21">.</op:operator><name pos:line="231" pos:column="22">String</name></name></type> <name pos:line="231" pos:column="29">getUsername</name><parameter_list pos:line="231" pos:column="40">()</parameter_list> <block pos:line="231" pos:column="43">{
        <return pos:line="232" pos:column="9">return <expr><name pos:line="232" pos:column="16">username</name></expr>;</return>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="236" pos:column="5">/**
     * Sets the username value for this XincoCoreUser.
     * 
     * @param username
     */</comment>
    <function><type><specifier pos:line="241" pos:column="5">public</specifier> <name pos:line="241" pos:column="12">void</name></type> <name pos:line="241" pos:column="17">setUsername</name><parameter_list pos:line="241" pos:column="28">(<param><decl><type><name><name pos:line="241" pos:column="29">java</name><op:operator pos:line="241" pos:column="33">.</op:operator><name pos:line="241" pos:column="34">lang</name><op:operator pos:line="241" pos:column="38">.</op:operator><name pos:line="241" pos:column="39">String</name></name></type> <name pos:line="241" pos:column="46">username</name></decl></param>)</parameter_list> <block pos:line="241" pos:column="56">{
        <expr_stmt><expr><name><name pos:line="242" pos:column="9">this</name><op:operator pos:line="242" pos:column="13">.</op:operator><name pos:line="242" pos:column="14">username</name></name> <op:operator pos:line="242" pos:column="23">=</op:operator> <name pos:line="242" pos:column="25">username</name></expr>;</expr_stmt>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="246" pos:column="5">/**
     * Gets the userpassword value for this XincoCoreUser.
     * 
     * @return userpassword
     */</comment>
    <function><type><specifier pos:line="251" pos:column="5">public</specifier> <name><name pos:line="251" pos:column="12">java</name><op:operator pos:line="251" pos:column="16">.</op:operator><name pos:line="251" pos:column="17">lang</name><op:operator pos:line="251" pos:column="21">.</op:operator><name pos:line="251" pos:column="22">String</name></name></type> <name pos:line="251" pos:column="29">getUserpassword</name><parameter_list pos:line="251" pos:column="44">()</parameter_list> <block pos:line="251" pos:column="47">{
        <return pos:line="252" pos:column="9">return <expr><name pos:line="252" pos:column="16">userpassword</name></expr>;</return>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="256" pos:column="5">/**
     * Sets the userpassword value for this XincoCoreUser.
     * 
     * @param userpassword
     */</comment>
    <function><type><specifier pos:line="261" pos:column="5">public</specifier> <name pos:line="261" pos:column="12">void</name></type> <name pos:line="261" pos:column="17">setUserpassword</name><parameter_list pos:line="261" pos:column="32">(<param><decl><type><name><name pos:line="261" pos:column="33">java</name><op:operator pos:line="261" pos:column="37">.</op:operator><name pos:line="261" pos:column="38">lang</name><op:operator pos:line="261" pos:column="42">.</op:operator><name pos:line="261" pos:column="43">String</name></name></type> <name pos:line="261" pos:column="50">userpassword</name></decl></param>)</parameter_list> <block pos:line="261" pos:column="64">{
        <expr_stmt><expr><name><name pos:line="262" pos:column="9">this</name><op:operator pos:line="262" pos:column="13">.</op:operator><name pos:line="262" pos:column="14">userpassword</name></name> <op:operator pos:line="262" pos:column="27">=</op:operator> <name pos:line="262" pos:column="29">userpassword</name></expr>;</expr_stmt>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="266" pos:column="5">/**
     * Gets the writeGroups value for this XincoCoreUser.
     * 
     * @return writeGroups
     */</comment>
    <function><type><specifier pos:line="271" pos:column="5">public</specifier> <name pos:line="271" pos:column="12">boolean</name></type> <name pos:line="271" pos:column="20">isWriteGroups</name><parameter_list pos:line="271" pos:column="33">()</parameter_list> <block pos:line="271" pos:column="36">{
        <return pos:line="272" pos:column="9">return <expr><name pos:line="272" pos:column="16">writeGroups</name></expr>;</return>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="276" pos:column="5">/**
     * Sets the writeGroups value for this XincoCoreUser.
     * 
     * @param writeGroups
     */</comment>
    <function><type><specifier pos:line="281" pos:column="5">public</specifier> <name pos:line="281" pos:column="12">void</name></type> <name pos:line="281" pos:column="17">setWriteGroups</name><parameter_list pos:line="281" pos:column="31">(<param><decl><type><name pos:line="281" pos:column="32">boolean</name></type> <name pos:line="281" pos:column="40">writeGroups</name></decl></param>)</parameter_list> <block pos:line="281" pos:column="53">{
        <expr_stmt><expr><name><name pos:line="282" pos:column="9">this</name><op:operator pos:line="282" pos:column="13">.</op:operator><name pos:line="282" pos:column="14">writeGroups</name></name> <op:operator pos:line="282" pos:column="26">=</op:operator> <name pos:line="282" pos:column="28">writeGroups</name></expr>;</expr_stmt>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="286" pos:column="5">/**
     * Gets the xinco_core_groups value for this XincoCoreUser.
     * 
     * @return xinco_core_groups
     */</comment>
    <function><type><specifier pos:line="291" pos:column="5">public</specifier> <name><name pos:line="291" pos:column="12">java</name><op:operator pos:line="291" pos:column="16">.</op:operator><name pos:line="291" pos:column="17">util</name><op:operator pos:line="291" pos:column="21">.</op:operator><name pos:line="291" pos:column="22">Vector</name></name></type> <name pos:line="291" pos:column="29">getXinco_core_groups</name><parameter_list pos:line="291" pos:column="49">()</parameter_list> <block pos:line="291" pos:column="52">{
        <return pos:line="292" pos:column="9">return <expr><name pos:line="292" pos:column="16">xinco_core_groups</name></expr>;</return>
    }</block></function>


    <comment type="block" format="javadoc" pos:line="296" pos:column="5">/**
     * Sets the xinco_core_groups value for this XincoCoreUser.
     * 
     * @param xinco_core_groups
     */</comment>
    <function><type><specifier pos:line="301" pos:column="5">public</specifier> <name pos:line="301" pos:column="12">void</name></type> <name pos:line="301" pos:column="17">setXinco_core_groups</name><parameter_list pos:line="301" pos:column="37">(<param><decl><type><name><name pos:line="301" pos:column="38">java</name><op:operator pos:line="301" pos:column="42">.</op:operator><name pos:line="301" pos:column="43">util</name><op:operator pos:line="301" pos:column="47">.</op:operator><name pos:line="301" pos:column="48">Vector</name></name></type> <name pos:line="301" pos:column="55">xinco_core_groups</name></decl></param>)</parameter_list> <block pos:line="301" pos:column="74">{
        <expr_stmt><expr><name><name pos:line="302" pos:column="9">this</name><op:operator pos:line="302" pos:column="13">.</op:operator><name pos:line="302" pos:column="14">xinco_core_groups</name></name> <op:operator pos:line="302" pos:column="32">=</op:operator> <name pos:line="302" pos:column="34">xinco_core_groups</name></expr>;</expr_stmt>
    }</block></function>

    <decl_stmt><decl><type><specifier pos:line="305" pos:column="5">private</specifier> <name><name pos:line="305" pos:column="13">java</name><op:operator pos:line="305" pos:column="17">.</op:operator><name pos:line="305" pos:column="18">lang</name><op:operator pos:line="305" pos:column="22">.</op:operator><name pos:line="305" pos:column="23">Object</name></name></type> <name pos:line="305" pos:column="30">__equalsCalc</name> <init pos:line="305" pos:column="43">= <expr><lit:literal type="null" pos:line="305" pos:column="45">null</lit:literal></expr></init></decl>;</decl_stmt>
    <function><type><specifier pos:line="306" pos:column="5">public</specifier> <specifier pos:line="306" pos:column="12">synchronized</specifier> <name pos:line="306" pos:column="25">boolean</name></type> <name pos:line="306" pos:column="33">equals</name><parameter_list pos:line="306" pos:column="39">(<param><decl><type><name><name pos:line="306" pos:column="40">java</name><op:operator pos:line="306" pos:column="44">.</op:operator><name pos:line="306" pos:column="45">lang</name><op:operator pos:line="306" pos:column="49">.</op:operator><name pos:line="306" pos:column="50">Object</name></name></type> <name pos:line="306" pos:column="57">obj</name></decl></param>)</parameter_list> <block pos:line="306" pos:column="62">{
        <if pos:line="307" pos:column="9">if <condition pos:line="307" pos:column="12">(<expr><op:operator pos:line="307" pos:column="13">!</op:operator><op:operator pos:line="307" pos:column="14">(</op:operator><name pos:line="307" pos:column="15">obj</name> <op:operator pos:line="307" pos:column="19">instanceof</op:operator> <name pos:line="307" pos:column="30">XincoCoreUser</name><op:operator pos:line="307" pos:column="43">)</op:operator></expr>)</condition><then pos:line="307" pos:column="45"> <return pos:line="307" pos:column="46">return <expr><lit:literal type="boolean" pos:line="307" pos:column="53">false</lit:literal></expr>;</return></then></if>
        <decl_stmt><decl><type><name pos:line="308" pos:column="9">XincoCoreUser</name></type> <name pos:line="308" pos:column="23">other</name> <init pos:line="308" pos:column="29">= <expr><op:operator pos:line="308" pos:column="31">(</op:operator><name pos:line="308" pos:column="32">XincoCoreUser</name><op:operator pos:line="308" pos:column="45">)</op:operator> <name pos:line="308" pos:column="47">obj</name></expr></init></decl>;</decl_stmt>
        <if pos:line="309" pos:column="9">if <condition pos:line="309" pos:column="12">(<expr><name pos:line="309" pos:column="13">obj</name> <op:operator pos:line="309" pos:column="17">==</op:operator> <lit:literal type="null" pos:line="309" pos:column="20">null</lit:literal></expr>)</condition><then pos:line="309" pos:column="25"> <return pos:line="309" pos:column="26">return <expr><lit:literal type="boolean" pos:line="309" pos:column="33">false</lit:literal></expr>;</return></then></if>
        <if pos:line="310" pos:column="9">if <condition pos:line="310" pos:column="12">(<expr><name pos:line="310" pos:column="13">this</name> <op:operator pos:line="310" pos:column="18">==</op:operator> <name pos:line="310" pos:column="21">obj</name></expr>)</condition><then pos:line="310" pos:column="25"> <return pos:line="310" pos:column="26">return <expr><lit:literal type="boolean" pos:line="310" pos:column="33">true</lit:literal></expr>;</return></then></if>
        <if pos:line="311" pos:column="9">if <condition pos:line="311" pos:column="12">(<expr><name pos:line="311" pos:column="13">__equalsCalc</name> <op:operator pos:line="311" pos:column="26">!=</op:operator> <lit:literal type="null" pos:line="311" pos:column="29">null</lit:literal></expr>)</condition><then pos:line="311" pos:column="34"> <block pos:line="311" pos:column="35">{
            <return pos:line="312" pos:column="13">return <expr><op:operator pos:line="312" pos:column="20">(</op:operator><name pos:line="312" pos:column="21">__equalsCalc</name> <op:operator pos:line="312" pos:column="34">==</op:operator> <name pos:line="312" pos:column="37">obj</name><op:operator pos:line="312" pos:column="40">)</op:operator></expr>;</return>
        }</block></then></if>
        <expr_stmt><expr><name pos:line="314" pos:column="9">__equalsCalc</name> <op:operator pos:line="314" pos:column="22">=</op:operator> <name pos:line="314" pos:column="24">obj</name></expr>;</expr_stmt>
        <decl_stmt><decl><type><name pos:line="315" pos:column="9">boolean</name></type> <name pos:line="315" pos:column="17">_equals</name></decl>;</decl_stmt>
        <expr_stmt><expr><name pos:line="316" pos:column="9">_equals</name> <op:operator pos:line="316" pos:column="17">=</op:operator> <lit:literal type="boolean" pos:line="316" pos:column="19">true</lit:literal> <op:operator pos:line="316" pos:column="24">&amp;&amp;</op:operator> 
            <name><name pos:line="317" pos:column="13">this</name><op:operator pos:line="317" pos:column="17">.</op:operator><name pos:line="317" pos:column="18">change</name></name> <op:operator pos:line="317" pos:column="25">==</op:operator> <call><name><name pos:line="317" pos:column="28">other</name><op:operator pos:line="317" pos:column="33">.</op:operator><name pos:line="317" pos:column="34">isChange</name></name><argument_list pos:line="317" pos:column="42">()</argument_list></call> <op:operator pos:line="317" pos:column="45">&amp;&amp;</op:operator>
            <name><name pos:line="318" pos:column="13">this</name><op:operator pos:line="318" pos:column="17">.</op:operator><name pos:line="318" pos:column="18">changerID</name></name> <op:operator pos:line="318" pos:column="28">==</op:operator> <call><name><name pos:line="318" pos:column="31">other</name><op:operator pos:line="318" pos:column="36">.</op:operator><name pos:line="318" pos:column="37">getChangerID</name></name><argument_list pos:line="318" pos:column="49">()</argument_list></call> <op:operator pos:line="318" pos:column="52">&amp;&amp;</op:operator>
            <op:operator pos:line="319" pos:column="13">(</op:operator><op:operator pos:line="319" pos:column="14">(</op:operator><name><name pos:line="319" pos:column="15">this</name><op:operator pos:line="319" pos:column="19">.</op:operator><name pos:line="319" pos:column="20">email</name></name><op:operator pos:line="319" pos:column="25">==</op:operator><lit:literal type="null" pos:line="319" pos:column="27">null</lit:literal> <op:operator pos:line="319" pos:column="32">&amp;&amp;</op:operator> <call><name><name pos:line="319" pos:column="35">other</name><op:operator pos:line="319" pos:column="40">.</op:operator><name pos:line="319" pos:column="41">getEmail</name></name><argument_list pos:line="319" pos:column="49">()</argument_list></call><op:operator pos:line="319" pos:column="51">==</op:operator><lit:literal type="null" pos:line="319" pos:column="53">null</lit:literal><op:operator pos:line="319" pos:column="57">)</op:operator> <op:operator pos:line="319" pos:column="59">||</op:operator> 
             <op:operator pos:line="320" pos:column="14">(</op:operator><name><name pos:line="320" pos:column="15">this</name><op:operator pos:line="320" pos:column="19">.</op:operator><name pos:line="320" pos:column="20">email</name></name><op:operator pos:line="320" pos:column="25">!=</op:operator><lit:literal type="null" pos:line="320" pos:column="27">null</lit:literal> <op:operator pos:line="320" pos:column="32">&amp;&amp;</op:operator>
              <call><name><name pos:line="321" pos:column="15">this</name><op:operator pos:line="321" pos:column="19">.</op:operator><name pos:line="321" pos:column="20">email</name><op:operator pos:line="321" pos:column="25">.</op:operator><name pos:line="321" pos:column="26">equals</name></name><argument_list pos:line="321" pos:column="32">(<argument><expr><call><name><name pos:line="321" pos:column="33">other</name><op:operator pos:line="321" pos:column="38">.</op:operator><name pos:line="321" pos:column="39">getEmail</name></name><argument_list pos:line="321" pos:column="47">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="321" pos:column="50">)</op:operator><op:operator pos:line="321" pos:column="51">)</op:operator> <op:operator pos:line="321" pos:column="53">&amp;&amp;</op:operator>
            <op:operator pos:line="322" pos:column="13">(</op:operator><op:operator pos:line="322" pos:column="14">(</op:operator><name><name pos:line="322" pos:column="15">this</name><op:operator pos:line="322" pos:column="19">.</op:operator><name pos:line="322" pos:column="20">firstname</name></name><op:operator pos:line="322" pos:column="29">==</op:operator><lit:literal type="null" pos:line="322" pos:column="31">null</lit:literal> <op:operator pos:line="322" pos:column="36">&amp;&amp;</op:operator> <call><name><name pos:line="322" pos:column="39">other</name><op:operator pos:line="322" pos:column="44">.</op:operator><name pos:line="322" pos:column="45">getFirstname</name></name><argument_list pos:line="322" pos:column="57">()</argument_list></call><op:operator pos:line="322" pos:column="59">==</op:operator><lit:literal type="null" pos:line="322" pos:column="61">null</lit:literal><op:operator pos:line="322" pos:column="65">)</op:operator> <op:operator pos:line="322" pos:column="67">||</op:operator> 
             <op:operator pos:line="323" pos:column="14">(</op:operator><name><name pos:line="323" pos:column="15">this</name><op:operator pos:line="323" pos:column="19">.</op:operator><name pos:line="323" pos:column="20">firstname</name></name><op:operator pos:line="323" pos:column="29">!=</op:operator><lit:literal type="null" pos:line="323" pos:column="31">null</lit:literal> <op:operator pos:line="323" pos:column="36">&amp;&amp;</op:operator>
              <call><name><name pos:line="324" pos:column="15">this</name><op:operator pos:line="324" pos:column="19">.</op:operator><name pos:line="324" pos:column="20">firstname</name><op:operator pos:line="324" pos:column="29">.</op:operator><name pos:line="324" pos:column="30">equals</name></name><argument_list pos:line="324" pos:column="36">(<argument><expr><call><name><name pos:line="324" pos:column="37">other</name><op:operator pos:line="324" pos:column="42">.</op:operator><name pos:line="324" pos:column="43">getFirstname</name></name><argument_list pos:line="324" pos:column="55">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="324" pos:column="58">)</op:operator><op:operator pos:line="324" pos:column="59">)</op:operator> <op:operator pos:line="324" pos:column="61">&amp;&amp;</op:operator>
            <name><name pos:line="325" pos:column="13">this</name><op:operator pos:line="325" pos:column="17">.</op:operator><name pos:line="325" pos:column="18">id</name></name> <op:operator pos:line="325" pos:column="21">==</op:operator> <call><name><name pos:line="325" pos:column="24">other</name><op:operator pos:line="325" pos:column="29">.</op:operator><name pos:line="325" pos:column="30">getId</name></name><argument_list pos:line="325" pos:column="35">()</argument_list></call> <op:operator pos:line="325" pos:column="38">&amp;&amp;</op:operator>
            <op:operator pos:line="326" pos:column="13">(</op:operator><op:operator pos:line="326" pos:column="14">(</op:operator><name><name pos:line="326" pos:column="15">this</name><op:operator pos:line="326" pos:column="19">.</op:operator><name pos:line="326" pos:column="20">name</name></name><op:operator pos:line="326" pos:column="24">==</op:operator><lit:literal type="null" pos:line="326" pos:column="26">null</lit:literal> <op:operator pos:line="326" pos:column="31">&amp;&amp;</op:operator> <call><name><name pos:line="326" pos:column="34">other</name><op:operator pos:line="326" pos:column="39">.</op:operator><name pos:line="326" pos:column="40">getName</name></name><argument_list pos:line="326" pos:column="47">()</argument_list></call><op:operator pos:line="326" pos:column="49">==</op:operator><lit:literal type="null" pos:line="326" pos:column="51">null</lit:literal><op:operator pos:line="326" pos:column="55">)</op:operator> <op:operator pos:line="326" pos:column="57">||</op:operator> 
             <op:operator pos:line="327" pos:column="14">(</op:operator><name><name pos:line="327" pos:column="15">this</name><op:operator pos:line="327" pos:column="19">.</op:operator><name pos:line="327" pos:column="20">name</name></name><op:operator pos:line="327" pos:column="24">!=</op:operator><lit:literal type="null" pos:line="327" pos:column="26">null</lit:literal> <op:operator pos:line="327" pos:column="31">&amp;&amp;</op:operator>
              <call><name><name pos:line="328" pos:column="15">this</name><op:operator pos:line="328" pos:column="19">.</op:operator><name pos:line="328" pos:column="20">name</name><op:operator pos:line="328" pos:column="24">.</op:operator><name pos:line="328" pos:column="25">equals</name></name><argument_list pos:line="328" pos:column="31">(<argument><expr><call><name><name pos:line="328" pos:column="32">other</name><op:operator pos:line="328" pos:column="37">.</op:operator><name pos:line="328" pos:column="38">getName</name></name><argument_list pos:line="328" pos:column="45">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="328" pos:column="48">)</op:operator><op:operator pos:line="328" pos:column="49">)</op:operator> <op:operator pos:line="328" pos:column="51">&amp;&amp;</op:operator>
            <op:operator pos:line="329" pos:column="13">(</op:operator><op:operator pos:line="329" pos:column="14">(</op:operator><name><name pos:line="329" pos:column="15">this</name><op:operator pos:line="329" pos:column="19">.</op:operator><name pos:line="329" pos:column="20">reason</name></name><op:operator pos:line="329" pos:column="26">==</op:operator><lit:literal type="null" pos:line="329" pos:column="28">null</lit:literal> <op:operator pos:line="329" pos:column="33">&amp;&amp;</op:operator> <call><name><name pos:line="329" pos:column="36">other</name><op:operator pos:line="329" pos:column="41">.</op:operator><name pos:line="329" pos:column="42">getReason</name></name><argument_list pos:line="329" pos:column="51">()</argument_list></call><op:operator pos:line="329" pos:column="53">==</op:operator><lit:literal type="null" pos:line="329" pos:column="55">null</lit:literal><op:operator pos:line="329" pos:column="59">)</op:operator> <op:operator pos:line="329" pos:column="61">||</op:operator> 
             <op:operator pos:line="330" pos:column="14">(</op:operator><name><name pos:line="330" pos:column="15">this</name><op:operator pos:line="330" pos:column="19">.</op:operator><name pos:line="330" pos:column="20">reason</name></name><op:operator pos:line="330" pos:column="26">!=</op:operator><lit:literal type="null" pos:line="330" pos:column="28">null</lit:literal> <op:operator pos:line="330" pos:column="33">&amp;&amp;</op:operator>
              <call><name><name pos:line="331" pos:column="15">this</name><op:operator pos:line="331" pos:column="19">.</op:operator><name pos:line="331" pos:column="20">reason</name><op:operator pos:line="331" pos:column="26">.</op:operator><name pos:line="331" pos:column="27">equals</name></name><argument_list pos:line="331" pos:column="33">(<argument><expr><call><name><name pos:line="331" pos:column="34">other</name><op:operator pos:line="331" pos:column="39">.</op:operator><name pos:line="331" pos:column="40">getReason</name></name><argument_list pos:line="331" pos:column="49">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="331" pos:column="52">)</op:operator><op:operator pos:line="331" pos:column="53">)</op:operator> <op:operator pos:line="331" pos:column="55">&amp;&amp;</op:operator>
            <name><name pos:line="332" pos:column="13">this</name><op:operator pos:line="332" pos:column="17">.</op:operator><name pos:line="332" pos:column="18">status_number</name></name> <op:operator pos:line="332" pos:column="32">==</op:operator> <call><name><name pos:line="332" pos:column="35">other</name><op:operator pos:line="332" pos:column="40">.</op:operator><name pos:line="332" pos:column="41">getStatus_number</name></name><argument_list pos:line="332" pos:column="57">()</argument_list></call> <op:operator pos:line="332" pos:column="60">&amp;&amp;</op:operator>
            <op:operator pos:line="333" pos:column="13">(</op:operator><op:operator pos:line="333" pos:column="14">(</op:operator><name><name pos:line="333" pos:column="15">this</name><op:operator pos:line="333" pos:column="19">.</op:operator><name pos:line="333" pos:column="20">username</name></name><op:operator pos:line="333" pos:column="28">==</op:operator><lit:literal type="null" pos:line="333" pos:column="30">null</lit:literal> <op:operator pos:line="333" pos:column="35">&amp;&amp;</op:operator> <call><name><name pos:line="333" pos:column="38">other</name><op:operator pos:line="333" pos:column="43">.</op:operator><name pos:line="333" pos:column="44">getUsername</name></name><argument_list pos:line="333" pos:column="55">()</argument_list></call><op:operator pos:line="333" pos:column="57">==</op:operator><lit:literal type="null" pos:line="333" pos:column="59">null</lit:literal><op:operator pos:line="333" pos:column="63">)</op:operator> <op:operator pos:line="333" pos:column="65">||</op:operator> 
             <op:operator pos:line="334" pos:column="14">(</op:operator><name><name pos:line="334" pos:column="15">this</name><op:operator pos:line="334" pos:column="19">.</op:operator><name pos:line="334" pos:column="20">username</name></name><op:operator pos:line="334" pos:column="28">!=</op:operator><lit:literal type="null" pos:line="334" pos:column="30">null</lit:literal> <op:operator pos:line="334" pos:column="35">&amp;&amp;</op:operator>
              <call><name><name pos:line="335" pos:column="15">this</name><op:operator pos:line="335" pos:column="19">.</op:operator><name pos:line="335" pos:column="20">username</name><op:operator pos:line="335" pos:column="28">.</op:operator><name pos:line="335" pos:column="29">equals</name></name><argument_list pos:line="335" pos:column="35">(<argument><expr><call><name><name pos:line="335" pos:column="36">other</name><op:operator pos:line="335" pos:column="41">.</op:operator><name pos:line="335" pos:column="42">getUsername</name></name><argument_list pos:line="335" pos:column="53">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="335" pos:column="56">)</op:operator><op:operator pos:line="335" pos:column="57">)</op:operator> <op:operator pos:line="335" pos:column="59">&amp;&amp;</op:operator>
            <op:operator pos:line="336" pos:column="13">(</op:operator><op:operator pos:line="336" pos:column="14">(</op:operator><name><name pos:line="336" pos:column="15">this</name><op:operator pos:line="336" pos:column="19">.</op:operator><name pos:line="336" pos:column="20">userpassword</name></name><op:operator pos:line="336" pos:column="32">==</op:operator><lit:literal type="null" pos:line="336" pos:column="34">null</lit:literal> <op:operator pos:line="336" pos:column="39">&amp;&amp;</op:operator> <call><name><name pos:line="336" pos:column="42">other</name><op:operator pos:line="336" pos:column="47">.</op:operator><name pos:line="336" pos:column="48">getUserpassword</name></name><argument_list pos:line="336" pos:column="63">()</argument_list></call><op:operator pos:line="336" pos:column="65">==</op:operator><lit:literal type="null" pos:line="336" pos:column="67">null</lit:literal><op:operator pos:line="336" pos:column="71">)</op:operator> <op:operator pos:line="336" pos:column="73">||</op:operator> 
             <op:operator pos:line="337" pos:column="14">(</op:operator><name><name pos:line="337" pos:column="15">this</name><op:operator pos:line="337" pos:column="19">.</op:operator><name pos:line="337" pos:column="20">userpassword</name></name><op:operator pos:line="337" pos:column="32">!=</op:operator><lit:literal type="null" pos:line="337" pos:column="34">null</lit:literal> <op:operator pos:line="337" pos:column="39">&amp;&amp;</op:operator>
              <call><name><name pos:line="338" pos:column="15">this</name><op:operator pos:line="338" pos:column="19">.</op:operator><name pos:line="338" pos:column="20">userpassword</name><op:operator pos:line="338" pos:column="32">.</op:operator><name pos:line="338" pos:column="33">equals</name></name><argument_list pos:line="338" pos:column="39">(<argument><expr><call><name><name pos:line="338" pos:column="40">other</name><op:operator pos:line="338" pos:column="45">.</op:operator><name pos:line="338" pos:column="46">getUserpassword</name></name><argument_list pos:line="338" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="338" pos:column="64">)</op:operator><op:operator pos:line="338" pos:column="65">)</op:operator> <op:operator pos:line="338" pos:column="67">&amp;&amp;</op:operator>
            <name><name pos:line="339" pos:column="13">this</name><op:operator pos:line="339" pos:column="17">.</op:operator><name pos:line="339" pos:column="18">writeGroups</name></name> <op:operator pos:line="339" pos:column="30">==</op:operator> <call><name><name pos:line="339" pos:column="33">other</name><op:operator pos:line="339" pos:column="38">.</op:operator><name pos:line="339" pos:column="39">isWriteGroups</name></name><argument_list pos:line="339" pos:column="52">()</argument_list></call> <op:operator pos:line="339" pos:column="55">&amp;&amp;</op:operator>
            <op:operator pos:line="340" pos:column="13">(</op:operator><op:operator pos:line="340" pos:column="14">(</op:operator><name><name pos:line="340" pos:column="15">this</name><op:operator pos:line="340" pos:column="19">.</op:operator><name pos:line="340" pos:column="20">xinco_core_groups</name></name><op:operator pos:line="340" pos:column="37">==</op:operator><lit:literal type="null" pos:line="340" pos:column="39">null</lit:literal> <op:operator pos:line="340" pos:column="44">&amp;&amp;</op:operator> <call><name><name pos:line="340" pos:column="47">other</name><op:operator pos:line="340" pos:column="52">.</op:operator><name pos:line="340" pos:column="53">getXinco_core_groups</name></name><argument_list pos:line="340" pos:column="73">()</argument_list></call><op:operator pos:line="340" pos:column="75">==</op:operator><lit:literal type="null" pos:line="340" pos:column="77">null</lit:literal><op:operator pos:line="340" pos:column="81">)</op:operator> <op:operator pos:line="340" pos:column="83">||</op:operator> 
             <op:operator pos:line="341" pos:column="14">(</op:operator><name><name pos:line="341" pos:column="15">this</name><op:operator pos:line="341" pos:column="19">.</op:operator><name pos:line="341" pos:column="20">xinco_core_groups</name></name><op:operator pos:line="341" pos:column="37">!=</op:operator><lit:literal type="null" pos:line="341" pos:column="39">null</lit:literal> <op:operator pos:line="341" pos:column="44">&amp;&amp;</op:operator>
              <call><name><name pos:line="342" pos:column="15">this</name><op:operator pos:line="342" pos:column="19">.</op:operator><name pos:line="342" pos:column="20">xinco_core_groups</name><op:operator pos:line="342" pos:column="37">.</op:operator><name pos:line="342" pos:column="38">equals</name></name><argument_list pos:line="342" pos:column="44">(<argument><expr><call><name><name pos:line="342" pos:column="45">other</name><op:operator pos:line="342" pos:column="50">.</op:operator><name pos:line="342" pos:column="51">getXinco_core_groups</name></name><argument_list pos:line="342" pos:column="71">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="342" pos:column="74">)</op:operator><op:operator pos:line="342" pos:column="75">)</op:operator></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="343" pos:column="9">__equalsCalc</name> <op:operator pos:line="343" pos:column="22">=</op:operator> <lit:literal type="null" pos:line="343" pos:column="24">null</lit:literal></expr>;</expr_stmt>
        <return pos:line="344" pos:column="9">return <expr><name pos:line="344" pos:column="16">_equals</name></expr>;</return>
    }</block></function>

    <decl_stmt><decl><type><specifier pos:line="347" pos:column="5">private</specifier> <name pos:line="347" pos:column="13">boolean</name></type> <name pos:line="347" pos:column="21">__hashCodeCalc</name> <init pos:line="347" pos:column="36">= <expr><lit:literal type="boolean" pos:line="347" pos:column="38">false</lit:literal></expr></init></decl>;</decl_stmt>
    <function><type><specifier pos:line="348" pos:column="5">public</specifier> <specifier pos:line="348" pos:column="12">synchronized</specifier> <name pos:line="348" pos:column="25">int</name></type> <name pos:line="348" pos:column="29">hashCode</name><parameter_list pos:line="348" pos:column="37">()</parameter_list> <block pos:line="348" pos:column="40">{
        <if pos:line="349" pos:column="9">if <condition pos:line="349" pos:column="12">(<expr><name pos:line="349" pos:column="13">__hashCodeCalc</name></expr>)</condition><then pos:line="349" pos:column="28"> <block pos:line="349" pos:column="29">{
            <return pos:line="350" pos:column="13">return <expr><lit:literal type="number" pos:line="350" pos:column="20">0</lit:literal></expr>;</return>
        }</block></then></if>
        <expr_stmt><expr><name pos:line="352" pos:column="9">__hashCodeCalc</name> <op:operator pos:line="352" pos:column="24">=</op:operator> <lit:literal type="boolean" pos:line="352" pos:column="26">true</lit:literal></expr>;</expr_stmt>
        <decl_stmt><decl><type><name pos:line="353" pos:column="9">int</name></type> <name pos:line="353" pos:column="13">_hashCode</name> <init pos:line="353" pos:column="23">= <expr><lit:literal type="number" pos:line="353" pos:column="25">1</lit:literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name pos:line="354" pos:column="9">_hashCode</name> <op:operator pos:line="354" pos:column="19">+=</op:operator> <op:operator pos:line="354" pos:column="22">(</op:operator><call><name pos:line="354" pos:column="23">isChange</name><argument_list pos:line="354" pos:column="31">()</argument_list></call> <op:operator pos:line="354" pos:column="34">?</op:operator> <name><name pos:line="354" pos:column="36">Boolean</name><op:operator pos:line="354" pos:column="43">.</op:operator><name pos:line="354" pos:column="44">TRUE</name></name> <op:operator pos:line="354" pos:column="49">:</op:operator> <name><name pos:line="354" pos:column="51">Boolean</name><op:operator pos:line="354" pos:column="58">.</op:operator><name pos:line="354" pos:column="59">FALSE</name></name><op:operator pos:line="354" pos:column="64">)</op:operator><op:operator pos:line="354" pos:column="65">.</op:operator><call><name pos:line="354" pos:column="66">hashCode</name><argument_list pos:line="354" pos:column="74">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="355" pos:column="9">_hashCode</name> <op:operator pos:line="355" pos:column="19">+=</op:operator> <call><name pos:line="355" pos:column="22">getChangerID</name><argument_list pos:line="355" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
        <if pos:line="356" pos:column="9">if <condition pos:line="356" pos:column="12">(<expr><call><name pos:line="356" pos:column="13">getEmail</name><argument_list pos:line="356" pos:column="21">()</argument_list></call> <op:operator pos:line="356" pos:column="24">!=</op:operator> <lit:literal type="null" pos:line="356" pos:column="27">null</lit:literal></expr>)</condition><then pos:line="356" pos:column="32"> <block pos:line="356" pos:column="33">{
            <expr_stmt><expr><name pos:line="357" pos:column="13">_hashCode</name> <op:operator pos:line="357" pos:column="23">+=</op:operator> <call><name pos:line="357" pos:column="26">getEmail</name><argument_list pos:line="357" pos:column="34">()</argument_list></call><op:operator pos:line="357" pos:column="36">.</op:operator><call><name pos:line="357" pos:column="37">hashCode</name><argument_list pos:line="357" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        <if pos:line="359" pos:column="9">if <condition pos:line="359" pos:column="12">(<expr><call><name pos:line="359" pos:column="13">getFirstname</name><argument_list pos:line="359" pos:column="25">()</argument_list></call> <op:operator pos:line="359" pos:column="28">!=</op:operator> <lit:literal type="null" pos:line="359" pos:column="31">null</lit:literal></expr>)</condition><then pos:line="359" pos:column="36"> <block pos:line="359" pos:column="37">{
            <expr_stmt><expr><name pos:line="360" pos:column="13">_hashCode</name> <op:operator pos:line="360" pos:column="23">+=</op:operator> <call><name pos:line="360" pos:column="26">getFirstname</name><argument_list pos:line="360" pos:column="38">()</argument_list></call><op:operator pos:line="360" pos:column="40">.</op:operator><call><name pos:line="360" pos:column="41">hashCode</name><argument_list pos:line="360" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        <expr_stmt><expr><name pos:line="362" pos:column="9">_hashCode</name> <op:operator pos:line="362" pos:column="19">+=</op:operator> <call><name pos:line="362" pos:column="22">getId</name><argument_list pos:line="362" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
        <if pos:line="363" pos:column="9">if <condition pos:line="363" pos:column="12">(<expr><call><name pos:line="363" pos:column="13">getName</name><argument_list pos:line="363" pos:column="20">()</argument_list></call> <op:operator pos:line="363" pos:column="23">!=</op:operator> <lit:literal type="null" pos:line="363" pos:column="26">null</lit:literal></expr>)</condition><then pos:line="363" pos:column="31"> <block pos:line="363" pos:column="32">{
            <expr_stmt><expr><name pos:line="364" pos:column="13">_hashCode</name> <op:operator pos:line="364" pos:column="23">+=</op:operator> <call><name pos:line="364" pos:column="26">getName</name><argument_list pos:line="364" pos:column="33">()</argument_list></call><op:operator pos:line="364" pos:column="35">.</op:operator><call><name pos:line="364" pos:column="36">hashCode</name><argument_list pos:line="364" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        <if pos:line="366" pos:column="9">if <condition pos:line="366" pos:column="12">(<expr><call><name pos:line="366" pos:column="13">getReason</name><argument_list pos:line="366" pos:column="22">()</argument_list></call> <op:operator pos:line="366" pos:column="25">!=</op:operator> <lit:literal type="null" pos:line="366" pos:column="28">null</lit:literal></expr>)</condition><then pos:line="366" pos:column="33"> <block pos:line="366" pos:column="34">{
            <expr_stmt><expr><name pos:line="367" pos:column="13">_hashCode</name> <op:operator pos:line="367" pos:column="23">+=</op:operator> <call><name pos:line="367" pos:column="26">getReason</name><argument_list pos:line="367" pos:column="35">()</argument_list></call><op:operator pos:line="367" pos:column="37">.</op:operator><call><name pos:line="367" pos:column="38">hashCode</name><argument_list pos:line="367" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        <expr_stmt><expr><name pos:line="369" pos:column="9">_hashCode</name> <op:operator pos:line="369" pos:column="19">+=</op:operator> <call><name pos:line="369" pos:column="22">getStatus_number</name><argument_list pos:line="369" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
        <if pos:line="370" pos:column="9">if <condition pos:line="370" pos:column="12">(<expr><call><name pos:line="370" pos:column="13">getUsername</name><argument_list pos:line="370" pos:column="24">()</argument_list></call> <op:operator pos:line="370" pos:column="27">!=</op:operator> <lit:literal type="null" pos:line="370" pos:column="30">null</lit:literal></expr>)</condition><then pos:line="370" pos:column="35"> <block pos:line="370" pos:column="36">{
            <expr_stmt><expr><name pos:line="371" pos:column="13">_hashCode</name> <op:operator pos:line="371" pos:column="23">+=</op:operator> <call><name pos:line="371" pos:column="26">getUsername</name><argument_list pos:line="371" pos:column="37">()</argument_list></call><op:operator pos:line="371" pos:column="39">.</op:operator><call><name pos:line="371" pos:column="40">hashCode</name><argument_list pos:line="371" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        <if pos:line="373" pos:column="9">if <condition pos:line="373" pos:column="12">(<expr><call><name pos:line="373" pos:column="13">getUserpassword</name><argument_list pos:line="373" pos:column="28">()</argument_list></call> <op:operator pos:line="373" pos:column="31">!=</op:operator> <lit:literal type="null" pos:line="373" pos:column="34">null</lit:literal></expr>)</condition><then pos:line="373" pos:column="39"> <block pos:line="373" pos:column="40">{
            <expr_stmt><expr><name pos:line="374" pos:column="13">_hashCode</name> <op:operator pos:line="374" pos:column="23">+=</op:operator> <call><name pos:line="374" pos:column="26">getUserpassword</name><argument_list pos:line="374" pos:column="41">()</argument_list></call><op:operator pos:line="374" pos:column="43">.</op:operator><call><name pos:line="374" pos:column="44">hashCode</name><argument_list pos:line="374" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        <expr_stmt><expr><name pos:line="376" pos:column="9">_hashCode</name> <op:operator pos:line="376" pos:column="19">+=</op:operator> <op:operator pos:line="376" pos:column="22">(</op:operator><call><name pos:line="376" pos:column="23">isWriteGroups</name><argument_list pos:line="376" pos:column="36">()</argument_list></call> <op:operator pos:line="376" pos:column="39">?</op:operator> <name><name pos:line="376" pos:column="41">Boolean</name><op:operator pos:line="376" pos:column="48">.</op:operator><name pos:line="376" pos:column="49">TRUE</name></name> <op:operator pos:line="376" pos:column="54">:</op:operator> <name><name pos:line="376" pos:column="56">Boolean</name><op:operator pos:line="376" pos:column="63">.</op:operator><name pos:line="376" pos:column="64">FALSE</name></name><op:operator pos:line="376" pos:column="69">)</op:operator><op:operator pos:line="376" pos:column="70">.</op:operator><call><name pos:line="376" pos:column="71">hashCode</name><argument_list pos:line="376" pos:column="79">()</argument_list></call></expr>;</expr_stmt>
        <if pos:line="377" pos:column="9">if <condition pos:line="377" pos:column="12">(<expr><call><name pos:line="377" pos:column="13">getXinco_core_groups</name><argument_list pos:line="377" pos:column="33">()</argument_list></call> <op:operator pos:line="377" pos:column="36">!=</op:operator> <lit:literal type="null" pos:line="377" pos:column="39">null</lit:literal></expr>)</condition><then pos:line="377" pos:column="44"> <block pos:line="377" pos:column="45">{
            <expr_stmt><expr><name pos:line="378" pos:column="13">_hashCode</name> <op:operator pos:line="378" pos:column="23">+=</op:operator> <call><name pos:line="378" pos:column="26">getXinco_core_groups</name><argument_list pos:line="378" pos:column="46">()</argument_list></call><op:operator pos:line="378" pos:column="48">.</op:operator><call><name pos:line="378" pos:column="49">hashCode</name><argument_list pos:line="378" pos:column="57">()</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        <expr_stmt><expr><name pos:line="380" pos:column="9">__hashCodeCalc</name> <op:operator pos:line="380" pos:column="24">=</op:operator> <lit:literal type="boolean" pos:line="380" pos:column="26">false</lit:literal></expr>;</expr_stmt>
        <return pos:line="381" pos:column="9">return <expr><name pos:line="381" pos:column="16">_hashCode</name></expr>;</return>
    }</block></function>

    <comment type="line" pos:line="384" pos:column="5">// Type metadata</comment>
    <decl_stmt><decl><type><specifier pos:line="385" pos:column="5">private</specifier> <specifier pos:line="385" pos:column="13">static</specifier> <name><name pos:line="385" pos:column="20">org</name><op:operator pos:line="385" pos:column="23">.</op:operator><name pos:line="385" pos:column="24">apache</name><op:operator pos:line="385" pos:column="30">.</op:operator><name pos:line="385" pos:column="31">axis</name><op:operator pos:line="385" pos:column="35">.</op:operator><name pos:line="385" pos:column="36">description</name><op:operator pos:line="385" pos:column="47">.</op:operator><name pos:line="385" pos:column="48">TypeDesc</name></name></type> <name pos:line="385" pos:column="57">typeDesc</name> <init pos:line="385" pos:column="66">=
        <expr><op:operator pos:line="386" pos:column="9">new</op:operator> <call><name><name pos:line="386" pos:column="13">org</name><op:operator pos:line="386" pos:column="16">.</op:operator><name pos:line="386" pos:column="17">apache</name><op:operator pos:line="386" pos:column="23">.</op:operator><name pos:line="386" pos:column="24">axis</name><op:operator pos:line="386" pos:column="28">.</op:operator><name pos:line="386" pos:column="29">description</name><op:operator pos:line="386" pos:column="40">.</op:operator><name pos:line="386" pos:column="41">TypeDesc</name></name><argument_list pos:line="386" pos:column="49">(<argument><expr><name><name pos:line="386" pos:column="50">XincoCoreUser</name><op:operator pos:line="386" pos:column="63">.</op:operator><name pos:line="386" pos:column="64">class</name></name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="386" pos:column="71">true</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr pos:line="388" pos:column="5">static <block pos:line="388" pos:column="12">{
        <expr><call><name><name pos:line="389" pos:column="9">typeDesc</name><op:operator pos:line="389" pos:column="17">.</op:operator><name pos:line="389" pos:column="18">setXmlType</name></name><argument_list pos:line="389" pos:column="28">(<argument><expr><op:operator pos:line="389" pos:column="29">new</op:operator> <call><name><name pos:line="389" pos:column="33">javax</name><op:operator pos:line="389" pos:column="38">.</op:operator><name pos:line="389" pos:column="39">xml</name><op:operator pos:line="389" pos:column="42">.</op:operator><name pos:line="389" pos:column="43">namespace</name><op:operator pos:line="389" pos:column="52">.</op:operator><name pos:line="389" pos:column="53">QName</name></name><argument_list pos:line="389" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="389" pos:column="59">"http://core.xinco.bluecubs.com"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="389" pos:column="93">"XincoCoreUser"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><name><name pos:line="390" pos:column="9">org</name><op:operator pos:line="390" pos:column="12">.</op:operator><name pos:line="390" pos:column="13">apache</name><op:operator pos:line="390" pos:column="19">.</op:operator><name pos:line="390" pos:column="20">axis</name><op:operator pos:line="390" pos:column="24">.</op:operator><name pos:line="390" pos:column="25">description</name><op:operator pos:line="390" pos:column="36">.</op:operator><name pos:line="390" pos:column="37">ElementDesc</name></name> <name pos:line="390" pos:column="49">elemField</name> <op:operator pos:line="390" pos:column="59">=</op:operator> <op:operator pos:line="390" pos:column="61">new</op:operator> <call><name><name pos:line="390" pos:column="65">org</name><op:operator pos:line="390" pos:column="68">.</op:operator><name pos:line="390" pos:column="69">apache</name><op:operator pos:line="390" pos:column="75">.</op:operator><name pos:line="390" pos:column="76">axis</name><op:operator pos:line="390" pos:column="80">.</op:operator><name pos:line="390" pos:column="81">description</name><op:operator pos:line="390" pos:column="92">.</op:operator><name pos:line="390" pos:column="93">ElementDesc</name></name><argument_list pos:line="390" pos:column="104">()</argument_list></call></expr>;
        <expr><call><name><name pos:line="391" pos:column="9">elemField</name><op:operator pos:line="391" pos:column="18">.</op:operator><name pos:line="391" pos:column="19">setFieldName</name></name><argument_list pos:line="391" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="391" pos:column="32">"change"</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="392" pos:column="9">elemField</name><op:operator pos:line="392" pos:column="18">.</op:operator><name pos:line="392" pos:column="19">setXmlName</name></name><argument_list pos:line="392" pos:column="29">(<argument><expr><op:operator pos:line="392" pos:column="30">new</op:operator> <call><name><name pos:line="392" pos:column="34">javax</name><op:operator pos:line="392" pos:column="39">.</op:operator><name pos:line="392" pos:column="40">xml</name><op:operator pos:line="392" pos:column="43">.</op:operator><name pos:line="392" pos:column="44">namespace</name><op:operator pos:line="392" pos:column="53">.</op:operator><name pos:line="392" pos:column="54">QName</name></name><argument_list pos:line="392" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="392" pos:column="60">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="392" pos:column="64">"change"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="393" pos:column="9">elemField</name><op:operator pos:line="393" pos:column="18">.</op:operator><name pos:line="393" pos:column="19">setXmlType</name></name><argument_list pos:line="393" pos:column="29">(<argument><expr><op:operator pos:line="393" pos:column="30">new</op:operator> <call><name><name pos:line="393" pos:column="34">javax</name><op:operator pos:line="393" pos:column="39">.</op:operator><name pos:line="393" pos:column="40">xml</name><op:operator pos:line="393" pos:column="43">.</op:operator><name pos:line="393" pos:column="44">namespace</name><op:operator pos:line="393" pos:column="53">.</op:operator><name pos:line="393" pos:column="54">QName</name></name><argument_list pos:line="393" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="393" pos:column="60">"http://www.w3.org/2001/XMLSchema"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="393" pos:column="96">"boolean"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="394" pos:column="9">elemField</name><op:operator pos:line="394" pos:column="18">.</op:operator><name pos:line="394" pos:column="19">setNillable</name></name><argument_list pos:line="394" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="394" pos:column="31">false</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="395" pos:column="9">typeDesc</name><op:operator pos:line="395" pos:column="17">.</op:operator><name pos:line="395" pos:column="18">addFieldDesc</name></name><argument_list pos:line="395" pos:column="30">(<argument><expr><name pos:line="395" pos:column="31">elemField</name></expr></argument>)</argument_list></call></expr>;
        <expr><name pos:line="396" pos:column="9">elemField</name> <op:operator pos:line="396" pos:column="19">=</op:operator> <op:operator pos:line="396" pos:column="21">new</op:operator> <call><name><name pos:line="396" pos:column="25">org</name><op:operator pos:line="396" pos:column="28">.</op:operator><name pos:line="396" pos:column="29">apache</name><op:operator pos:line="396" pos:column="35">.</op:operator><name pos:line="396" pos:column="36">axis</name><op:operator pos:line="396" pos:column="40">.</op:operator><name pos:line="396" pos:column="41">description</name><op:operator pos:line="396" pos:column="52">.</op:operator><name pos:line="396" pos:column="53">ElementDesc</name></name><argument_list pos:line="396" pos:column="64">()</argument_list></call></expr>;
        <expr><call><name><name pos:line="397" pos:column="9">elemField</name><op:operator pos:line="397" pos:column="18">.</op:operator><name pos:line="397" pos:column="19">setFieldName</name></name><argument_list pos:line="397" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="397" pos:column="32">"changerID"</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="398" pos:column="9">elemField</name><op:operator pos:line="398" pos:column="18">.</op:operator><name pos:line="398" pos:column="19">setXmlName</name></name><argument_list pos:line="398" pos:column="29">(<argument><expr><op:operator pos:line="398" pos:column="30">new</op:operator> <call><name><name pos:line="398" pos:column="34">javax</name><op:operator pos:line="398" pos:column="39">.</op:operator><name pos:line="398" pos:column="40">xml</name><op:operator pos:line="398" pos:column="43">.</op:operator><name pos:line="398" pos:column="44">namespace</name><op:operator pos:line="398" pos:column="53">.</op:operator><name pos:line="398" pos:column="54">QName</name></name><argument_list pos:line="398" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="398" pos:column="60">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="398" pos:column="64">"changerID"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="399" pos:column="9">elemField</name><op:operator pos:line="399" pos:column="18">.</op:operator><name pos:line="399" pos:column="19">setXmlType</name></name><argument_list pos:line="399" pos:column="29">(<argument><expr><op:operator pos:line="399" pos:column="30">new</op:operator> <call><name><name pos:line="399" pos:column="34">javax</name><op:operator pos:line="399" pos:column="39">.</op:operator><name pos:line="399" pos:column="40">xml</name><op:operator pos:line="399" pos:column="43">.</op:operator><name pos:line="399" pos:column="44">namespace</name><op:operator pos:line="399" pos:column="53">.</op:operator><name pos:line="399" pos:column="54">QName</name></name><argument_list pos:line="399" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="399" pos:column="60">"http://www.w3.org/2001/XMLSchema"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="399" pos:column="96">"int"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="400" pos:column="9">elemField</name><op:operator pos:line="400" pos:column="18">.</op:operator><name pos:line="400" pos:column="19">setNillable</name></name><argument_list pos:line="400" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="400" pos:column="31">false</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="401" pos:column="9">typeDesc</name><op:operator pos:line="401" pos:column="17">.</op:operator><name pos:line="401" pos:column="18">addFieldDesc</name></name><argument_list pos:line="401" pos:column="30">(<argument><expr><name pos:line="401" pos:column="31">elemField</name></expr></argument>)</argument_list></call></expr>;
        <expr><name pos:line="402" pos:column="9">elemField</name> <op:operator pos:line="402" pos:column="19">=</op:operator> <op:operator pos:line="402" pos:column="21">new</op:operator> <call><name><name pos:line="402" pos:column="25">org</name><op:operator pos:line="402" pos:column="28">.</op:operator><name pos:line="402" pos:column="29">apache</name><op:operator pos:line="402" pos:column="35">.</op:operator><name pos:line="402" pos:column="36">axis</name><op:operator pos:line="402" pos:column="40">.</op:operator><name pos:line="402" pos:column="41">description</name><op:operator pos:line="402" pos:column="52">.</op:operator><name pos:line="402" pos:column="53">ElementDesc</name></name><argument_list pos:line="402" pos:column="64">()</argument_list></call></expr>;
        <expr><call><name><name pos:line="403" pos:column="9">elemField</name><op:operator pos:line="403" pos:column="18">.</op:operator><name pos:line="403" pos:column="19">setFieldName</name></name><argument_list pos:line="403" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="403" pos:column="32">"email"</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="404" pos:column="9">elemField</name><op:operator pos:line="404" pos:column="18">.</op:operator><name pos:line="404" pos:column="19">setXmlName</name></name><argument_list pos:line="404" pos:column="29">(<argument><expr><op:operator pos:line="404" pos:column="30">new</op:operator> <call><name><name pos:line="404" pos:column="34">javax</name><op:operator pos:line="404" pos:column="39">.</op:operator><name pos:line="404" pos:column="40">xml</name><op:operator pos:line="404" pos:column="43">.</op:operator><name pos:line="404" pos:column="44">namespace</name><op:operator pos:line="404" pos:column="53">.</op:operator><name pos:line="404" pos:column="54">QName</name></name><argument_list pos:line="404" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="404" pos:column="60">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="404" pos:column="64">"email"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="405" pos:column="9">elemField</name><op:operator pos:line="405" pos:column="18">.</op:operator><name pos:line="405" pos:column="19">setXmlType</name></name><argument_list pos:line="405" pos:column="29">(<argument><expr><op:operator pos:line="405" pos:column="30">new</op:operator> <call><name><name pos:line="405" pos:column="34">javax</name><op:operator pos:line="405" pos:column="39">.</op:operator><name pos:line="405" pos:column="40">xml</name><op:operator pos:line="405" pos:column="43">.</op:operator><name pos:line="405" pos:column="44">namespace</name><op:operator pos:line="405" pos:column="53">.</op:operator><name pos:line="405" pos:column="54">QName</name></name><argument_list pos:line="405" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="405" pos:column="60">"http://www.w3.org/2001/XMLSchema"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="405" pos:column="96">"string"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="406" pos:column="9">elemField</name><op:operator pos:line="406" pos:column="18">.</op:operator><name pos:line="406" pos:column="19">setNillable</name></name><argument_list pos:line="406" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="406" pos:column="31">true</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="407" pos:column="9">typeDesc</name><op:operator pos:line="407" pos:column="17">.</op:operator><name pos:line="407" pos:column="18">addFieldDesc</name></name><argument_list pos:line="407" pos:column="30">(<argument><expr><name pos:line="407" pos:column="31">elemField</name></expr></argument>)</argument_list></call></expr>;
        <expr><name pos:line="408" pos:column="9">elemField</name> <op:operator pos:line="408" pos:column="19">=</op:operator> <op:operator pos:line="408" pos:column="21">new</op:operator> <call><name><name pos:line="408" pos:column="25">org</name><op:operator pos:line="408" pos:column="28">.</op:operator><name pos:line="408" pos:column="29">apache</name><op:operator pos:line="408" pos:column="35">.</op:operator><name pos:line="408" pos:column="36">axis</name><op:operator pos:line="408" pos:column="40">.</op:operator><name pos:line="408" pos:column="41">description</name><op:operator pos:line="408" pos:column="52">.</op:operator><name pos:line="408" pos:column="53">ElementDesc</name></name><argument_list pos:line="408" pos:column="64">()</argument_list></call></expr>;
        <expr><call><name><name pos:line="409" pos:column="9">elemField</name><op:operator pos:line="409" pos:column="18">.</op:operator><name pos:line="409" pos:column="19">setFieldName</name></name><argument_list pos:line="409" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="409" pos:column="32">"firstname"</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="410" pos:column="9">elemField</name><op:operator pos:line="410" pos:column="18">.</op:operator><name pos:line="410" pos:column="19">setXmlName</name></name><argument_list pos:line="410" pos:column="29">(<argument><expr><op:operator pos:line="410" pos:column="30">new</op:operator> <call><name><name pos:line="410" pos:column="34">javax</name><op:operator pos:line="410" pos:column="39">.</op:operator><name pos:line="410" pos:column="40">xml</name><op:operator pos:line="410" pos:column="43">.</op:operator><name pos:line="410" pos:column="44">namespace</name><op:operator pos:line="410" pos:column="53">.</op:operator><name pos:line="410" pos:column="54">QName</name></name><argument_list pos:line="410" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="410" pos:column="60">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="410" pos:column="64">"firstname"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="411" pos:column="9">elemField</name><op:operator pos:line="411" pos:column="18">.</op:operator><name pos:line="411" pos:column="19">setXmlType</name></name><argument_list pos:line="411" pos:column="29">(<argument><expr><op:operator pos:line="411" pos:column="30">new</op:operator> <call><name><name pos:line="411" pos:column="34">javax</name><op:operator pos:line="411" pos:column="39">.</op:operator><name pos:line="411" pos:column="40">xml</name><op:operator pos:line="411" pos:column="43">.</op:operator><name pos:line="411" pos:column="44">namespace</name><op:operator pos:line="411" pos:column="53">.</op:operator><name pos:line="411" pos:column="54">QName</name></name><argument_list pos:line="411" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="411" pos:column="60">"http://www.w3.org/2001/XMLSchema"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="411" pos:column="96">"string"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="412" pos:column="9">elemField</name><op:operator pos:line="412" pos:column="18">.</op:operator><name pos:line="412" pos:column="19">setNillable</name></name><argument_list pos:line="412" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="412" pos:column="31">true</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="413" pos:column="9">typeDesc</name><op:operator pos:line="413" pos:column="17">.</op:operator><name pos:line="413" pos:column="18">addFieldDesc</name></name><argument_list pos:line="413" pos:column="30">(<argument><expr><name pos:line="413" pos:column="31">elemField</name></expr></argument>)</argument_list></call></expr>;
        <expr><name pos:line="414" pos:column="9">elemField</name> <op:operator pos:line="414" pos:column="19">=</op:operator> <op:operator pos:line="414" pos:column="21">new</op:operator> <call><name><name pos:line="414" pos:column="25">org</name><op:operator pos:line="414" pos:column="28">.</op:operator><name pos:line="414" pos:column="29">apache</name><op:operator pos:line="414" pos:column="35">.</op:operator><name pos:line="414" pos:column="36">axis</name><op:operator pos:line="414" pos:column="40">.</op:operator><name pos:line="414" pos:column="41">description</name><op:operator pos:line="414" pos:column="52">.</op:operator><name pos:line="414" pos:column="53">ElementDesc</name></name><argument_list pos:line="414" pos:column="64">()</argument_list></call></expr>;
        <expr><call><name><name pos:line="415" pos:column="9">elemField</name><op:operator pos:line="415" pos:column="18">.</op:operator><name pos:line="415" pos:column="19">setFieldName</name></name><argument_list pos:line="415" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="415" pos:column="32">"id"</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="416" pos:column="9">elemField</name><op:operator pos:line="416" pos:column="18">.</op:operator><name pos:line="416" pos:column="19">setXmlName</name></name><argument_list pos:line="416" pos:column="29">(<argument><expr><op:operator pos:line="416" pos:column="30">new</op:operator> <call><name><name pos:line="416" pos:column="34">javax</name><op:operator pos:line="416" pos:column="39">.</op:operator><name pos:line="416" pos:column="40">xml</name><op:operator pos:line="416" pos:column="43">.</op:operator><name pos:line="416" pos:column="44">namespace</name><op:operator pos:line="416" pos:column="53">.</op:operator><name pos:line="416" pos:column="54">QName</name></name><argument_list pos:line="416" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="416" pos:column="60">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="416" pos:column="64">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="417" pos:column="9">elemField</name><op:operator pos:line="417" pos:column="18">.</op:operator><name pos:line="417" pos:column="19">setXmlType</name></name><argument_list pos:line="417" pos:column="29">(<argument><expr><op:operator pos:line="417" pos:column="30">new</op:operator> <call><name><name pos:line="417" pos:column="34">javax</name><op:operator pos:line="417" pos:column="39">.</op:operator><name pos:line="417" pos:column="40">xml</name><op:operator pos:line="417" pos:column="43">.</op:operator><name pos:line="417" pos:column="44">namespace</name><op:operator pos:line="417" pos:column="53">.</op:operator><name pos:line="417" pos:column="54">QName</name></name><argument_list pos:line="417" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="417" pos:column="60">"http://www.w3.org/2001/XMLSchema"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="417" pos:column="96">"int"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="418" pos:column="9">elemField</name><op:operator pos:line="418" pos:column="18">.</op:operator><name pos:line="418" pos:column="19">setNillable</name></name><argument_list pos:line="418" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="418" pos:column="31">false</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="419" pos:column="9">typeDesc</name><op:operator pos:line="419" pos:column="17">.</op:operator><name pos:line="419" pos:column="18">addFieldDesc</name></name><argument_list pos:line="419" pos:column="30">(<argument><expr><name pos:line="419" pos:column="31">elemField</name></expr></argument>)</argument_list></call></expr>;
        <expr><name pos:line="420" pos:column="9">elemField</name> <op:operator pos:line="420" pos:column="19">=</op:operator> <op:operator pos:line="420" pos:column="21">new</op:operator> <call><name><name pos:line="420" pos:column="25">org</name><op:operator pos:line="420" pos:column="28">.</op:operator><name pos:line="420" pos:column="29">apache</name><op:operator pos:line="420" pos:column="35">.</op:operator><name pos:line="420" pos:column="36">axis</name><op:operator pos:line="420" pos:column="40">.</op:operator><name pos:line="420" pos:column="41">description</name><op:operator pos:line="420" pos:column="52">.</op:operator><name pos:line="420" pos:column="53">ElementDesc</name></name><argument_list pos:line="420" pos:column="64">()</argument_list></call></expr>;
        <expr><call><name><name pos:line="421" pos:column="9">elemField</name><op:operator pos:line="421" pos:column="18">.</op:operator><name pos:line="421" pos:column="19">setFieldName</name></name><argument_list pos:line="421" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="421" pos:column="32">"name"</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="422" pos:column="9">elemField</name><op:operator pos:line="422" pos:column="18">.</op:operator><name pos:line="422" pos:column="19">setXmlName</name></name><argument_list pos:line="422" pos:column="29">(<argument><expr><op:operator pos:line="422" pos:column="30">new</op:operator> <call><name><name pos:line="422" pos:column="34">javax</name><op:operator pos:line="422" pos:column="39">.</op:operator><name pos:line="422" pos:column="40">xml</name><op:operator pos:line="422" pos:column="43">.</op:operator><name pos:line="422" pos:column="44">namespace</name><op:operator pos:line="422" pos:column="53">.</op:operator><name pos:line="422" pos:column="54">QName</name></name><argument_list pos:line="422" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="422" pos:column="60">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="422" pos:column="64">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="423" pos:column="9">elemField</name><op:operator pos:line="423" pos:column="18">.</op:operator><name pos:line="423" pos:column="19">setXmlType</name></name><argument_list pos:line="423" pos:column="29">(<argument><expr><op:operator pos:line="423" pos:column="30">new</op:operator> <call><name><name pos:line="423" pos:column="34">javax</name><op:operator pos:line="423" pos:column="39">.</op:operator><name pos:line="423" pos:column="40">xml</name><op:operator pos:line="423" pos:column="43">.</op:operator><name pos:line="423" pos:column="44">namespace</name><op:operator pos:line="423" pos:column="53">.</op:operator><name pos:line="423" pos:column="54">QName</name></name><argument_list pos:line="423" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="423" pos:column="60">"http://www.w3.org/2001/XMLSchema"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="423" pos:column="96">"string"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="424" pos:column="9">elemField</name><op:operator pos:line="424" pos:column="18">.</op:operator><name pos:line="424" pos:column="19">setNillable</name></name><argument_list pos:line="424" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="424" pos:column="31">true</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="425" pos:column="9">typeDesc</name><op:operator pos:line="425" pos:column="17">.</op:operator><name pos:line="425" pos:column="18">addFieldDesc</name></name><argument_list pos:line="425" pos:column="30">(<argument><expr><name pos:line="425" pos:column="31">elemField</name></expr></argument>)</argument_list></call></expr>;
        <expr><name pos:line="426" pos:column="9">elemField</name> <op:operator pos:line="426" pos:column="19">=</op:operator> <op:operator pos:line="426" pos:column="21">new</op:operator> <call><name><name pos:line="426" pos:column="25">org</name><op:operator pos:line="426" pos:column="28">.</op:operator><name pos:line="426" pos:column="29">apache</name><op:operator pos:line="426" pos:column="35">.</op:operator><name pos:line="426" pos:column="36">axis</name><op:operator pos:line="426" pos:column="40">.</op:operator><name pos:line="426" pos:column="41">description</name><op:operator pos:line="426" pos:column="52">.</op:operator><name pos:line="426" pos:column="53">ElementDesc</name></name><argument_list pos:line="426" pos:column="64">()</argument_list></call></expr>;
        <expr><call><name><name pos:line="427" pos:column="9">elemField</name><op:operator pos:line="427" pos:column="18">.</op:operator><name pos:line="427" pos:column="19">setFieldName</name></name><argument_list pos:line="427" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="427" pos:column="32">"reason"</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="428" pos:column="9">elemField</name><op:operator pos:line="428" pos:column="18">.</op:operator><name pos:line="428" pos:column="19">setXmlName</name></name><argument_list pos:line="428" pos:column="29">(<argument><expr><op:operator pos:line="428" pos:column="30">new</op:operator> <call><name><name pos:line="428" pos:column="34">javax</name><op:operator pos:line="428" pos:column="39">.</op:operator><name pos:line="428" pos:column="40">xml</name><op:operator pos:line="428" pos:column="43">.</op:operator><name pos:line="428" pos:column="44">namespace</name><op:operator pos:line="428" pos:column="53">.</op:operator><name pos:line="428" pos:column="54">QName</name></name><argument_list pos:line="428" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="428" pos:column="60">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="428" pos:column="64">"reason"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="429" pos:column="9">elemField</name><op:operator pos:line="429" pos:column="18">.</op:operator><name pos:line="429" pos:column="19">setXmlType</name></name><argument_list pos:line="429" pos:column="29">(<argument><expr><op:operator pos:line="429" pos:column="30">new</op:operator> <call><name><name pos:line="429" pos:column="34">javax</name><op:operator pos:line="429" pos:column="39">.</op:operator><name pos:line="429" pos:column="40">xml</name><op:operator pos:line="429" pos:column="43">.</op:operator><name pos:line="429" pos:column="44">namespace</name><op:operator pos:line="429" pos:column="53">.</op:operator><name pos:line="429" pos:column="54">QName</name></name><argument_list pos:line="429" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="429" pos:column="60">"http://www.w3.org/2001/XMLSchema"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="429" pos:column="96">"string"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="430" pos:column="9">elemField</name><op:operator pos:line="430" pos:column="18">.</op:operator><name pos:line="430" pos:column="19">setNillable</name></name><argument_list pos:line="430" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="430" pos:column="31">true</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="431" pos:column="9">typeDesc</name><op:operator pos:line="431" pos:column="17">.</op:operator><name pos:line="431" pos:column="18">addFieldDesc</name></name><argument_list pos:line="431" pos:column="30">(<argument><expr><name pos:line="431" pos:column="31">elemField</name></expr></argument>)</argument_list></call></expr>;
        <expr><name pos:line="432" pos:column="9">elemField</name> <op:operator pos:line="432" pos:column="19">=</op:operator> <op:operator pos:line="432" pos:column="21">new</op:operator> <call><name><name pos:line="432" pos:column="25">org</name><op:operator pos:line="432" pos:column="28">.</op:operator><name pos:line="432" pos:column="29">apache</name><op:operator pos:line="432" pos:column="35">.</op:operator><name pos:line="432" pos:column="36">axis</name><op:operator pos:line="432" pos:column="40">.</op:operator><name pos:line="432" pos:column="41">description</name><op:operator pos:line="432" pos:column="52">.</op:operator><name pos:line="432" pos:column="53">ElementDesc</name></name><argument_list pos:line="432" pos:column="64">()</argument_list></call></expr>;
        <expr><call><name><name pos:line="433" pos:column="9">elemField</name><op:operator pos:line="433" pos:column="18">.</op:operator><name pos:line="433" pos:column="19">setFieldName</name></name><argument_list pos:line="433" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="433" pos:column="32">"status_number"</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="434" pos:column="9">elemField</name><op:operator pos:line="434" pos:column="18">.</op:operator><name pos:line="434" pos:column="19">setXmlName</name></name><argument_list pos:line="434" pos:column="29">(<argument><expr><op:operator pos:line="434" pos:column="30">new</op:operator> <call><name><name pos:line="434" pos:column="34">javax</name><op:operator pos:line="434" pos:column="39">.</op:operator><name pos:line="434" pos:column="40">xml</name><op:operator pos:line="434" pos:column="43">.</op:operator><name pos:line="434" pos:column="44">namespace</name><op:operator pos:line="434" pos:column="53">.</op:operator><name pos:line="434" pos:column="54">QName</name></name><argument_list pos:line="434" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="434" pos:column="60">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="434" pos:column="64">"status_number"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="435" pos:column="9">elemField</name><op:operator pos:line="435" pos:column="18">.</op:operator><name pos:line="435" pos:column="19">setXmlType</name></name><argument_list pos:line="435" pos:column="29">(<argument><expr><op:operator pos:line="435" pos:column="30">new</op:operator> <call><name><name pos:line="435" pos:column="34">javax</name><op:operator pos:line="435" pos:column="39">.</op:operator><name pos:line="435" pos:column="40">xml</name><op:operator pos:line="435" pos:column="43">.</op:operator><name pos:line="435" pos:column="44">namespace</name><op:operator pos:line="435" pos:column="53">.</op:operator><name pos:line="435" pos:column="54">QName</name></name><argument_list pos:line="435" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="435" pos:column="60">"http://www.w3.org/2001/XMLSchema"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="435" pos:column="96">"int"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="436" pos:column="9">elemField</name><op:operator pos:line="436" pos:column="18">.</op:operator><name pos:line="436" pos:column="19">setNillable</name></name><argument_list pos:line="436" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="436" pos:column="31">false</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="437" pos:column="9">typeDesc</name><op:operator pos:line="437" pos:column="17">.</op:operator><name pos:line="437" pos:column="18">addFieldDesc</name></name><argument_list pos:line="437" pos:column="30">(<argument><expr><name pos:line="437" pos:column="31">elemField</name></expr></argument>)</argument_list></call></expr>;
        <expr><name pos:line="438" pos:column="9">elemField</name> <op:operator pos:line="438" pos:column="19">=</op:operator> <op:operator pos:line="438" pos:column="21">new</op:operator> <call><name><name pos:line="438" pos:column="25">org</name><op:operator pos:line="438" pos:column="28">.</op:operator><name pos:line="438" pos:column="29">apache</name><op:operator pos:line="438" pos:column="35">.</op:operator><name pos:line="438" pos:column="36">axis</name><op:operator pos:line="438" pos:column="40">.</op:operator><name pos:line="438" pos:column="41">description</name><op:operator pos:line="438" pos:column="52">.</op:operator><name pos:line="438" pos:column="53">ElementDesc</name></name><argument_list pos:line="438" pos:column="64">()</argument_list></call></expr>;
        <expr><call><name><name pos:line="439" pos:column="9">elemField</name><op:operator pos:line="439" pos:column="18">.</op:operator><name pos:line="439" pos:column="19">setFieldName</name></name><argument_list pos:line="439" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="439" pos:column="32">"username"</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="440" pos:column="9">elemField</name><op:operator pos:line="440" pos:column="18">.</op:operator><name pos:line="440" pos:column="19">setXmlName</name></name><argument_list pos:line="440" pos:column="29">(<argument><expr><op:operator pos:line="440" pos:column="30">new</op:operator> <call><name><name pos:line="440" pos:column="34">javax</name><op:operator pos:line="440" pos:column="39">.</op:operator><name pos:line="440" pos:column="40">xml</name><op:operator pos:line="440" pos:column="43">.</op:operator><name pos:line="440" pos:column="44">namespace</name><op:operator pos:line="440" pos:column="53">.</op:operator><name pos:line="440" pos:column="54">QName</name></name><argument_list pos:line="440" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="440" pos:column="60">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="440" pos:column="64">"username"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="441" pos:column="9">elemField</name><op:operator pos:line="441" pos:column="18">.</op:operator><name pos:line="441" pos:column="19">setXmlType</name></name><argument_list pos:line="441" pos:column="29">(<argument><expr><op:operator pos:line="441" pos:column="30">new</op:operator> <call><name><name pos:line="441" pos:column="34">javax</name><op:operator pos:line="441" pos:column="39">.</op:operator><name pos:line="441" pos:column="40">xml</name><op:operator pos:line="441" pos:column="43">.</op:operator><name pos:line="441" pos:column="44">namespace</name><op:operator pos:line="441" pos:column="53">.</op:operator><name pos:line="441" pos:column="54">QName</name></name><argument_list pos:line="441" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="441" pos:column="60">"http://www.w3.org/2001/XMLSchema"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="441" pos:column="96">"string"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="442" pos:column="9">elemField</name><op:operator pos:line="442" pos:column="18">.</op:operator><name pos:line="442" pos:column="19">setNillable</name></name><argument_list pos:line="442" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="442" pos:column="31">true</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="443" pos:column="9">typeDesc</name><op:operator pos:line="443" pos:column="17">.</op:operator><name pos:line="443" pos:column="18">addFieldDesc</name></name><argument_list pos:line="443" pos:column="30">(<argument><expr><name pos:line="443" pos:column="31">elemField</name></expr></argument>)</argument_list></call></expr>;
        <expr><name pos:line="444" pos:column="9">elemField</name> <op:operator pos:line="444" pos:column="19">=</op:operator> <op:operator pos:line="444" pos:column="21">new</op:operator> <call><name><name pos:line="444" pos:column="25">org</name><op:operator pos:line="444" pos:column="28">.</op:operator><name pos:line="444" pos:column="29">apache</name><op:operator pos:line="444" pos:column="35">.</op:operator><name pos:line="444" pos:column="36">axis</name><op:operator pos:line="444" pos:column="40">.</op:operator><name pos:line="444" pos:column="41">description</name><op:operator pos:line="444" pos:column="52">.</op:operator><name pos:line="444" pos:column="53">ElementDesc</name></name><argument_list pos:line="444" pos:column="64">()</argument_list></call></expr>;
        <expr><call><name><name pos:line="445" pos:column="9">elemField</name><op:operator pos:line="445" pos:column="18">.</op:operator><name pos:line="445" pos:column="19">setFieldName</name></name><argument_list pos:line="445" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="445" pos:column="32">"userpassword"</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="446" pos:column="9">elemField</name><op:operator pos:line="446" pos:column="18">.</op:operator><name pos:line="446" pos:column="19">setXmlName</name></name><argument_list pos:line="446" pos:column="29">(<argument><expr><op:operator pos:line="446" pos:column="30">new</op:operator> <call><name><name pos:line="446" pos:column="34">javax</name><op:operator pos:line="446" pos:column="39">.</op:operator><name pos:line="446" pos:column="40">xml</name><op:operator pos:line="446" pos:column="43">.</op:operator><name pos:line="446" pos:column="44">namespace</name><op:operator pos:line="446" pos:column="53">.</op:operator><name pos:line="446" pos:column="54">QName</name></name><argument_list pos:line="446" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="446" pos:column="60">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="446" pos:column="64">"userpassword"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="447" pos:column="9">elemField</name><op:operator pos:line="447" pos:column="18">.</op:operator><name pos:line="447" pos:column="19">setXmlType</name></name><argument_list pos:line="447" pos:column="29">(<argument><expr><op:operator pos:line="447" pos:column="30">new</op:operator> <call><name><name pos:line="447" pos:column="34">javax</name><op:operator pos:line="447" pos:column="39">.</op:operator><name pos:line="447" pos:column="40">xml</name><op:operator pos:line="447" pos:column="43">.</op:operator><name pos:line="447" pos:column="44">namespace</name><op:operator pos:line="447" pos:column="53">.</op:operator><name pos:line="447" pos:column="54">QName</name></name><argument_list pos:line="447" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="447" pos:column="60">"http://www.w3.org/2001/XMLSchema"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="447" pos:column="96">"string"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="448" pos:column="9">elemField</name><op:operator pos:line="448" pos:column="18">.</op:operator><name pos:line="448" pos:column="19">setNillable</name></name><argument_list pos:line="448" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="448" pos:column="31">true</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="449" pos:column="9">typeDesc</name><op:operator pos:line="449" pos:column="17">.</op:operator><name pos:line="449" pos:column="18">addFieldDesc</name></name><argument_list pos:line="449" pos:column="30">(<argument><expr><name pos:line="449" pos:column="31">elemField</name></expr></argument>)</argument_list></call></expr>;
        <expr><name pos:line="450" pos:column="9">elemField</name> <op:operator pos:line="450" pos:column="19">=</op:operator> <op:operator pos:line="450" pos:column="21">new</op:operator> <call><name><name pos:line="450" pos:column="25">org</name><op:operator pos:line="450" pos:column="28">.</op:operator><name pos:line="450" pos:column="29">apache</name><op:operator pos:line="450" pos:column="35">.</op:operator><name pos:line="450" pos:column="36">axis</name><op:operator pos:line="450" pos:column="40">.</op:operator><name pos:line="450" pos:column="41">description</name><op:operator pos:line="450" pos:column="52">.</op:operator><name pos:line="450" pos:column="53">ElementDesc</name></name><argument_list pos:line="450" pos:column="64">()</argument_list></call></expr>;
        <expr><call><name><name pos:line="451" pos:column="9">elemField</name><op:operator pos:line="451" pos:column="18">.</op:operator><name pos:line="451" pos:column="19">setFieldName</name></name><argument_list pos:line="451" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="451" pos:column="32">"writeGroups"</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="452" pos:column="9">elemField</name><op:operator pos:line="452" pos:column="18">.</op:operator><name pos:line="452" pos:column="19">setXmlName</name></name><argument_list pos:line="452" pos:column="29">(<argument><expr><op:operator pos:line="452" pos:column="30">new</op:operator> <call><name><name pos:line="452" pos:column="34">javax</name><op:operator pos:line="452" pos:column="39">.</op:operator><name pos:line="452" pos:column="40">xml</name><op:operator pos:line="452" pos:column="43">.</op:operator><name pos:line="452" pos:column="44">namespace</name><op:operator pos:line="452" pos:column="53">.</op:operator><name pos:line="452" pos:column="54">QName</name></name><argument_list pos:line="452" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="452" pos:column="60">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="452" pos:column="64">"writeGroups"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="453" pos:column="9">elemField</name><op:operator pos:line="453" pos:column="18">.</op:operator><name pos:line="453" pos:column="19">setXmlType</name></name><argument_list pos:line="453" pos:column="29">(<argument><expr><op:operator pos:line="453" pos:column="30">new</op:operator> <call><name><name pos:line="453" pos:column="34">javax</name><op:operator pos:line="453" pos:column="39">.</op:operator><name pos:line="453" pos:column="40">xml</name><op:operator pos:line="453" pos:column="43">.</op:operator><name pos:line="453" pos:column="44">namespace</name><op:operator pos:line="453" pos:column="53">.</op:operator><name pos:line="453" pos:column="54">QName</name></name><argument_list pos:line="453" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="453" pos:column="60">"http://www.w3.org/2001/XMLSchema"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="453" pos:column="96">"boolean"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="454" pos:column="9">elemField</name><op:operator pos:line="454" pos:column="18">.</op:operator><name pos:line="454" pos:column="19">setNillable</name></name><argument_list pos:line="454" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="454" pos:column="31">false</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="455" pos:column="9">typeDesc</name><op:operator pos:line="455" pos:column="17">.</op:operator><name pos:line="455" pos:column="18">addFieldDesc</name></name><argument_list pos:line="455" pos:column="30">(<argument><expr><name pos:line="455" pos:column="31">elemField</name></expr></argument>)</argument_list></call></expr>;
        <expr><name pos:line="456" pos:column="9">elemField</name> <op:operator pos:line="456" pos:column="19">=</op:operator> <op:operator pos:line="456" pos:column="21">new</op:operator> <call><name><name pos:line="456" pos:column="25">org</name><op:operator pos:line="456" pos:column="28">.</op:operator><name pos:line="456" pos:column="29">apache</name><op:operator pos:line="456" pos:column="35">.</op:operator><name pos:line="456" pos:column="36">axis</name><op:operator pos:line="456" pos:column="40">.</op:operator><name pos:line="456" pos:column="41">description</name><op:operator pos:line="456" pos:column="52">.</op:operator><name pos:line="456" pos:column="53">ElementDesc</name></name><argument_list pos:line="456" pos:column="64">()</argument_list></call></expr>;
        <expr><call><name><name pos:line="457" pos:column="9">elemField</name><op:operator pos:line="457" pos:column="18">.</op:operator><name pos:line="457" pos:column="19">setFieldName</name></name><argument_list pos:line="457" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="457" pos:column="32">"xinco_core_groups"</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="458" pos:column="9">elemField</name><op:operator pos:line="458" pos:column="18">.</op:operator><name pos:line="458" pos:column="19">setXmlName</name></name><argument_list pos:line="458" pos:column="29">(<argument><expr><op:operator pos:line="458" pos:column="30">new</op:operator> <call><name><name pos:line="458" pos:column="34">javax</name><op:operator pos:line="458" pos:column="39">.</op:operator><name pos:line="458" pos:column="40">xml</name><op:operator pos:line="458" pos:column="43">.</op:operator><name pos:line="458" pos:column="44">namespace</name><op:operator pos:line="458" pos:column="53">.</op:operator><name pos:line="458" pos:column="54">QName</name></name><argument_list pos:line="458" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="458" pos:column="60">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="458" pos:column="64">"xinco_core_groups"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="459" pos:column="9">elemField</name><op:operator pos:line="459" pos:column="18">.</op:operator><name pos:line="459" pos:column="19">setXmlType</name></name><argument_list pos:line="459" pos:column="29">(<argument><expr><op:operator pos:line="459" pos:column="30">new</op:operator> <call><name><name pos:line="459" pos:column="34">javax</name><op:operator pos:line="459" pos:column="39">.</op:operator><name pos:line="459" pos:column="40">xml</name><op:operator pos:line="459" pos:column="43">.</op:operator><name pos:line="459" pos:column="44">namespace</name><op:operator pos:line="459" pos:column="53">.</op:operator><name pos:line="459" pos:column="54">QName</name></name><argument_list pos:line="459" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="459" pos:column="60">"http://xml.apache.org/xml-soap"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="459" pos:column="94">"Vector"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="460" pos:column="9">elemField</name><op:operator pos:line="460" pos:column="18">.</op:operator><name pos:line="460" pos:column="19">setNillable</name></name><argument_list pos:line="460" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="460" pos:column="31">true</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="461" pos:column="9">typeDesc</name><op:operator pos:line="461" pos:column="17">.</op:operator><name pos:line="461" pos:column="18">addFieldDesc</name></name><argument_list pos:line="461" pos:column="30">(<argument><expr><name pos:line="461" pos:column="31">elemField</name></expr></argument>)</argument_list></call></expr>;
    }</block>

    <comment type="block" format="javadoc" pos:line="464" pos:column="5">/**
     * Return type metadata object
     */</comment>
    public static <name><name pos:line="467" pos:column="19">org</name><op:operator pos:line="467" pos:column="22">.</op:operator><name pos:line="467" pos:column="23">apache</name><op:operator pos:line="467" pos:column="29">.</op:operator><name pos:line="467" pos:column="30">axis</name><op:operator pos:line="467" pos:column="34">.</op:operator><name pos:line="467" pos:column="35">description</name><op:operator pos:line="467" pos:column="46">.</op:operator><name pos:line="467" pos:column="47">TypeDesc</name></name> <call><name pos:line="467" pos:column="56">getTypeDesc</name><argument_list pos:line="467" pos:column="67">()</argument_list></call> <block pos:line="467" pos:column="70">{
        <return pos:line="468" pos:column="9">return <expr><name pos:line="468" pos:column="16">typeDesc</name></expr>;</return>
    }</block></expr></expr_stmt>

    <comment type="block" format="javadoc" pos:line="471" pos:column="5">/**
     * Get Custom Serializer
     */</comment>
    <function><type><specifier pos:line="474" pos:column="5">public</specifier> <specifier pos:line="474" pos:column="12">static</specifier> <name><name pos:line="474" pos:column="19">org</name><op:operator pos:line="474" pos:column="22">.</op:operator><name pos:line="474" pos:column="23">apache</name><op:operator pos:line="474" pos:column="29">.</op:operator><name pos:line="474" pos:column="30">axis</name><op:operator pos:line="474" pos:column="34">.</op:operator><name pos:line="474" pos:column="35">encoding</name><op:operator pos:line="474" pos:column="43">.</op:operator><name pos:line="474" pos:column="44">Serializer</name></name></type> <name pos:line="474" pos:column="55">getSerializer</name><parameter_list pos:line="474" pos:column="68">(
           <param><decl><type><name><name pos:line="475" pos:column="12">java</name><op:operator pos:line="475" pos:column="16">.</op:operator><name pos:line="475" pos:column="17">lang</name><op:operator pos:line="475" pos:column="21">.</op:operator><name pos:line="475" pos:column="22">String</name></name></type> <name pos:line="475" pos:column="29">mechType</name></decl></param>, 
           <param><decl><type><name><name pos:line="476" pos:column="12">java</name><op:operator pos:line="476" pos:column="16">.</op:operator><name pos:line="476" pos:column="17">lang</name><op:operator pos:line="476" pos:column="21">.</op:operator><name pos:line="476" pos:column="22">Class</name></name></type> <name pos:line="476" pos:column="28">_javaType</name></decl></param>,  
           <param><decl><type><name><name pos:line="477" pos:column="12">javax</name><op:operator pos:line="477" pos:column="17">.</op:operator><name pos:line="477" pos:column="18">xml</name><op:operator pos:line="477" pos:column="21">.</op:operator><name pos:line="477" pos:column="22">namespace</name><op:operator pos:line="477" pos:column="31">.</op:operator><name pos:line="477" pos:column="32">QName</name></name></type> <name pos:line="477" pos:column="38">_xmlType</name></decl></param>)</parameter_list> <block pos:line="477" pos:column="48">{
        <return pos:line="478" pos:column="9">return 
          <expr><op:operator pos:line="479" pos:column="11">new</op:operator>  <call><name><name pos:line="479" pos:column="16">org</name><op:operator pos:line="479" pos:column="19">.</op:operator><name pos:line="479" pos:column="20">apache</name><op:operator pos:line="479" pos:column="26">.</op:operator><name pos:line="479" pos:column="27">axis</name><op:operator pos:line="479" pos:column="31">.</op:operator><name pos:line="479" pos:column="32">encoding</name><op:operator pos:line="479" pos:column="40">.</op:operator><name pos:line="479" pos:column="41">ser</name><op:operator pos:line="479" pos:column="44">.</op:operator><name pos:line="479" pos:column="45">BeanSerializer</name></name><argument_list pos:line="479" pos:column="59">(
            <argument><expr><name pos:line="480" pos:column="13">_javaType</name></expr></argument>, <argument><expr><name pos:line="480" pos:column="24">_xmlType</name></expr></argument>, <argument><expr><name pos:line="480" pos:column="34">typeDesc</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <comment type="block" format="javadoc" pos:line="483" pos:column="5">/**
     * Get Custom Deserializer
     */</comment>
    <function><type><specifier pos:line="486" pos:column="5">public</specifier> <specifier pos:line="486" pos:column="12">static</specifier> <name><name pos:line="486" pos:column="19">org</name><op:operator pos:line="486" pos:column="22">.</op:operator><name pos:line="486" pos:column="23">apache</name><op:operator pos:line="486" pos:column="29">.</op:operator><name pos:line="486" pos:column="30">axis</name><op:operator pos:line="486" pos:column="34">.</op:operator><name pos:line="486" pos:column="35">encoding</name><op:operator pos:line="486" pos:column="43">.</op:operator><name pos:line="486" pos:column="44">Deserializer</name></name></type> <name pos:line="486" pos:column="57">getDeserializer</name><parameter_list pos:line="486" pos:column="72">(
           <param><decl><type><name><name pos:line="487" pos:column="12">java</name><op:operator pos:line="487" pos:column="16">.</op:operator><name pos:line="487" pos:column="17">lang</name><op:operator pos:line="487" pos:column="21">.</op:operator><name pos:line="487" pos:column="22">String</name></name></type> <name pos:line="487" pos:column="29">mechType</name></decl></param>, 
           <param><decl><type><name><name pos:line="488" pos:column="12">java</name><op:operator pos:line="488" pos:column="16">.</op:operator><name pos:line="488" pos:column="17">lang</name><op:operator pos:line="488" pos:column="21">.</op:operator><name pos:line="488" pos:column="22">Class</name></name></type> <name pos:line="488" pos:column="28">_javaType</name></decl></param>,  
           <param><decl><type><name><name pos:line="489" pos:column="12">javax</name><op:operator pos:line="489" pos:column="17">.</op:operator><name pos:line="489" pos:column="18">xml</name><op:operator pos:line="489" pos:column="21">.</op:operator><name pos:line="489" pos:column="22">namespace</name><op:operator pos:line="489" pos:column="31">.</op:operator><name pos:line="489" pos:column="32">QName</name></name></type> <name pos:line="489" pos:column="38">_xmlType</name></decl></param>)</parameter_list> <block pos:line="489" pos:column="48">{
        <return pos:line="490" pos:column="9">return 
          <expr><op:operator pos:line="491" pos:column="11">new</op:operator>  <call><name><name pos:line="491" pos:column="16">org</name><op:operator pos:line="491" pos:column="19">.</op:operator><name pos:line="491" pos:column="20">apache</name><op:operator pos:line="491" pos:column="26">.</op:operator><name pos:line="491" pos:column="27">axis</name><op:operator pos:line="491" pos:column="31">.</op:operator><name pos:line="491" pos:column="32">encoding</name><op:operator pos:line="491" pos:column="40">.</op:operator><name pos:line="491" pos:column="41">ser</name><op:operator pos:line="491" pos:column="44">.</op:operator><name pos:line="491" pos:column="45">BeanDeserializer</name></name><argument_list pos:line="491" pos:column="61">(
            <argument><expr><name pos:line="492" pos:column="13">_javaType</name></expr></argument>, <argument><expr><name pos:line="492" pos:column="24">_xmlType</name></expr></argument>, <argument><expr><name pos:line="492" pos:column="34">typeDesc</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

}</block></class>
</unit>
