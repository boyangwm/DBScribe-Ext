<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\UMAS\src\com\umas\frontend\AdminUI.java" pos:tabs="8"><package pos:line="1" pos:column="1">package <name><name pos:line="1" pos:column="9">com</name><op:operator pos:line="1" pos:column="12">.</op:operator><name pos:line="1" pos:column="13">umas</name><op:operator pos:line="1" pos:column="17">.</op:operator><name pos:line="1" pos:column="18">frontend</name></name>;</package>



<comment type="block" format="javadoc" pos:line="5" pos:column="1">/****************@author Simant Purohit*********************************/</comment>

<import pos:line="7" pos:column="1">import <name><name pos:line="7" pos:column="8">java</name><op:operator pos:line="7" pos:column="12">.</op:operator><name pos:line="7" pos:column="13">awt</name><op:operator pos:line="7" pos:column="16">.</op:operator><name pos:line="7" pos:column="17">EventQueue</name></name>;</import>

<import pos:line="9" pos:column="1">import <name><name pos:line="9" pos:column="8">javax</name><op:operator pos:line="9" pos:column="13">.</op:operator><name pos:line="9" pos:column="14">swing</name><op:operator pos:line="9" pos:column="19">.</op:operator><name pos:line="9" pos:column="20">JPanel</name></name>;</import>
<import pos:line="10" pos:column="1">import <name><name pos:line="10" pos:column="8">javax</name><op:operator pos:line="10" pos:column="13">.</op:operator><name pos:line="10" pos:column="14">swing</name><op:operator pos:line="10" pos:column="19">.</op:operator><name pos:line="10" pos:column="20">border</name><op:operator pos:line="10" pos:column="26">.</op:operator><name pos:line="10" pos:column="27">EmptyBorder</name></name>;</import>
<import pos:line="11" pos:column="1">import <name><name pos:line="11" pos:column="8">javax</name><op:operator pos:line="11" pos:column="13">.</op:operator><name pos:line="11" pos:column="14">swing</name><op:operator pos:line="11" pos:column="19">.</op:operator><name pos:line="11" pos:column="20">JTabbedPane</name></name>;</import>

<import pos:line="13" pos:column="1">import <name><name pos:line="13" pos:column="8">java</name><op:operator pos:line="13" pos:column="12">.</op:operator><name pos:line="13" pos:column="13">awt</name><op:operator pos:line="13" pos:column="16">.</op:operator><name pos:line="13" pos:column="17">GridLayout</name></name>;</import>
<import pos:line="14" pos:column="1">import <name><name pos:line="14" pos:column="8">java</name><op:operator pos:line="14" pos:column="12">.</op:operator><name pos:line="14" pos:column="13">util</name><op:operator pos:line="14" pos:column="17">.</op:operator><name pos:line="14" pos:column="18">ArrayList</name></name>;</import>
<import pos:line="15" pos:column="1">import <name><name pos:line="15" pos:column="8">java</name><op:operator pos:line="15" pos:column="12">.</op:operator><name pos:line="15" pos:column="13">util</name><op:operator pos:line="15" pos:column="17">.</op:operator><name pos:line="15" pos:column="18">HashMap</name></name>;</import>
<import pos:line="16" pos:column="1">import <name><name pos:line="16" pos:column="8">java</name><op:operator pos:line="16" pos:column="12">.</op:operator><name pos:line="16" pos:column="13">util</name><op:operator pos:line="16" pos:column="17">.</op:operator><name pos:line="16" pos:column="18">LinkedHashMap</name></name>;</import>

<import pos:line="18" pos:column="1">import <name><name pos:line="18" pos:column="8">javax</name><op:operator pos:line="18" pos:column="13">.</op:operator><name pos:line="18" pos:column="14">swing</name><op:operator pos:line="18" pos:column="19">.</op:operator><name pos:line="18" pos:column="20">DefaultComboBoxModel</name></name>;</import>
<import pos:line="19" pos:column="1">import <name><name pos:line="19" pos:column="8">javax</name><op:operator pos:line="19" pos:column="13">.</op:operator><name pos:line="19" pos:column="14">swing</name><op:operator pos:line="19" pos:column="19">.</op:operator><name pos:line="19" pos:column="20">DefaultListModel</name></name>;</import>
<import pos:line="20" pos:column="1">import <name><name pos:line="20" pos:column="8">javax</name><op:operator pos:line="20" pos:column="13">.</op:operator><name pos:line="20" pos:column="14">swing</name><op:operator pos:line="20" pos:column="19">.</op:operator><name pos:line="20" pos:column="20">JDialog</name></name>;</import>
<import pos:line="21" pos:column="1">import <name><name pos:line="21" pos:column="8">javax</name><op:operator pos:line="21" pos:column="13">.</op:operator><name pos:line="21" pos:column="14">swing</name><op:operator pos:line="21" pos:column="19">.</op:operator><name pos:line="21" pos:column="20">JLabel</name></name>;</import>
<import pos:line="22" pos:column="1">import <name><name pos:line="22" pos:column="8">javax</name><op:operator pos:line="22" pos:column="13">.</op:operator><name pos:line="22" pos:column="14">swing</name><op:operator pos:line="22" pos:column="19">.</op:operator><name pos:line="22" pos:column="20">JOptionPane</name></name>;</import>
<import pos:line="23" pos:column="1">import <name><name pos:line="23" pos:column="8">javax</name><op:operator pos:line="23" pos:column="13">.</op:operator><name pos:line="23" pos:column="14">swing</name><op:operator pos:line="23" pos:column="19">.</op:operator><name pos:line="23" pos:column="20">JScrollPane</name></name>;</import>
<import pos:line="24" pos:column="1">import <name><name pos:line="24" pos:column="8">javax</name><op:operator pos:line="24" pos:column="13">.</op:operator><name pos:line="24" pos:column="14">swing</name><op:operator pos:line="24" pos:column="19">.</op:operator><name pos:line="24" pos:column="20">JTextField</name></name>;</import>
<import pos:line="25" pos:column="1">import <name><name pos:line="25" pos:column="8">javax</name><op:operator pos:line="25" pos:column="13">.</op:operator><name pos:line="25" pos:column="14">swing</name><op:operator pos:line="25" pos:column="19">.</op:operator><name pos:line="25" pos:column="20">JComboBox</name></name>;</import>
<import pos:line="26" pos:column="1">import <name><name pos:line="26" pos:column="8">javax</name><op:operator pos:line="26" pos:column="13">.</op:operator><name pos:line="26" pos:column="14">swing</name><op:operator pos:line="26" pos:column="19">.</op:operator><name pos:line="26" pos:column="20">JButton</name></name>;</import>

<import pos:line="28" pos:column="1">import <name><name pos:line="28" pos:column="8">java</name><op:operator pos:line="28" pos:column="12">.</op:operator><name pos:line="28" pos:column="13">awt</name><op:operator pos:line="28" pos:column="16">.</op:operator><name pos:line="28" pos:column="17">event</name><op:operator pos:line="28" pos:column="22">.</op:operator><name pos:line="28" pos:column="23">ActionListener</name></name>;</import>
<import pos:line="29" pos:column="1">import <name><name pos:line="29" pos:column="8">java</name><op:operator pos:line="29" pos:column="12">.</op:operator><name pos:line="29" pos:column="13">awt</name><op:operator pos:line="29" pos:column="16">.</op:operator><name pos:line="29" pos:column="17">event</name><op:operator pos:line="29" pos:column="22">.</op:operator><name pos:line="29" pos:column="23">ActionEvent</name></name>;</import>

<import pos:line="31" pos:column="1">import <name><name pos:line="31" pos:column="8">javax</name><op:operator pos:line="31" pos:column="13">.</op:operator><name pos:line="31" pos:column="14">swing</name><op:operator pos:line="31" pos:column="19">.</op:operator><name pos:line="31" pos:column="20">JList</name></name>;</import>
<import pos:line="32" pos:column="1">import <name><name pos:line="32" pos:column="8">javax</name><op:operator pos:line="32" pos:column="13">.</op:operator><name pos:line="32" pos:column="14">swing</name><op:operator pos:line="32" pos:column="19">.</op:operator><name pos:line="32" pos:column="20">JTextPane</name></name>;</import>

<import pos:line="34" pos:column="1">import <name><name pos:line="34" pos:column="8">com</name><op:operator pos:line="34" pos:column="11">.</op:operator><name pos:line="34" pos:column="12">umas</name><op:operator pos:line="34" pos:column="16">.</op:operator><name pos:line="34" pos:column="17">code</name><op:operator pos:line="34" pos:column="21">.</op:operator><name pos:line="34" pos:column="22">Admin</name></name>;</import>
<import pos:line="35" pos:column="1">import <name><name pos:line="35" pos:column="8">com</name><op:operator pos:line="35" pos:column="11">.</op:operator><name pos:line="35" pos:column="12">umas</name><op:operator pos:line="35" pos:column="16">.</op:operator><name pos:line="35" pos:column="17">code</name><op:operator pos:line="35" pos:column="21">.</op:operator><name pos:line="35" pos:column="22">Classroom</name></name>;</import>
<import pos:line="36" pos:column="1">import <name><name pos:line="36" pos:column="8">com</name><op:operator pos:line="36" pos:column="11">.</op:operator><name pos:line="36" pos:column="12">umas</name><op:operator pos:line="36" pos:column="16">.</op:operator><name pos:line="36" pos:column="17">code</name><op:operator pos:line="36" pos:column="21">.</op:operator><name pos:line="36" pos:column="22">ClassroomLocation</name></name>;</import>
<import pos:line="37" pos:column="1">import <name><name pos:line="37" pos:column="8">com</name><op:operator pos:line="37" pos:column="11">.</op:operator><name pos:line="37" pos:column="12">umas</name><op:operator pos:line="37" pos:column="16">.</op:operator><name pos:line="37" pos:column="17">code</name><op:operator pos:line="37" pos:column="21">.</op:operator><name pos:line="37" pos:column="22">Course</name></name>;</import>
<import pos:line="38" pos:column="1">import <name><name pos:line="38" pos:column="8">com</name><op:operator pos:line="38" pos:column="11">.</op:operator><name pos:line="38" pos:column="12">umas</name><op:operator pos:line="38" pos:column="16">.</op:operator><name pos:line="38" pos:column="17">code</name><op:operator pos:line="38" pos:column="21">.</op:operator><name pos:line="38" pos:column="22">CourseOffered</name></name>;</import>
<import pos:line="39" pos:column="1">import <name><name pos:line="39" pos:column="8">com</name><op:operator pos:line="39" pos:column="11">.</op:operator><name pos:line="39" pos:column="12">umas</name><op:operator pos:line="39" pos:column="16">.</op:operator><name pos:line="39" pos:column="17">code</name><op:operator pos:line="39" pos:column="21">.</op:operator><name pos:line="39" pos:column="22">CourseSchedule</name></name>;</import>
<import pos:line="40" pos:column="1">import <name><name pos:line="40" pos:column="8">com</name><op:operator pos:line="40" pos:column="11">.</op:operator><name pos:line="40" pos:column="12">umas</name><op:operator pos:line="40" pos:column="16">.</op:operator><name pos:line="40" pos:column="17">code</name><op:operator pos:line="40" pos:column="21">.</op:operator><name pos:line="40" pos:column="22">DBAnnotation</name></name>;</import>
<import pos:line="41" pos:column="1">import <name><name pos:line="41" pos:column="8">com</name><op:operator pos:line="41" pos:column="11">.</op:operator><name pos:line="41" pos:column="12">umas</name><op:operator pos:line="41" pos:column="16">.</op:operator><name pos:line="41" pos:column="17">code</name><op:operator pos:line="41" pos:column="21">.</op:operator><name pos:line="41" pos:column="22">Database</name></name>;</import>
<import pos:line="42" pos:column="1">import <name><name pos:line="42" pos:column="8">com</name><op:operator pos:line="42" pos:column="11">.</op:operator><name pos:line="42" pos:column="12">umas</name><op:operator pos:line="42" pos:column="16">.</op:operator><name pos:line="42" pos:column="17">code</name><op:operator pos:line="42" pos:column="21">.</op:operator><name pos:line="42" pos:column="22">Department</name></name>;</import>
<import pos:line="43" pos:column="1">import <name><name pos:line="43" pos:column="8">com</name><op:operator pos:line="43" pos:column="11">.</op:operator><name pos:line="43" pos:column="12">umas</name><op:operator pos:line="43" pos:column="16">.</op:operator><name pos:line="43" pos:column="17">code</name><op:operator pos:line="43" pos:column="21">.</op:operator><name pos:line="43" pos:column="22">People</name></name>;</import>
<import pos:line="44" pos:column="1">import <name><name pos:line="44" pos:column="8">com</name><op:operator pos:line="44" pos:column="11">.</op:operator><name pos:line="44" pos:column="12">umas</name><op:operator pos:line="44" pos:column="16">.</op:operator><name pos:line="44" pos:column="17">code</name><op:operator pos:line="44" pos:column="21">.</op:operator><name pos:line="44" pos:column="22">Professor</name></name>;</import>
<import pos:line="45" pos:column="1">import <name><name pos:line="45" pos:column="8">com</name><op:operator pos:line="45" pos:column="11">.</op:operator><name pos:line="45" pos:column="12">umas</name><op:operator pos:line="45" pos:column="16">.</op:operator><name pos:line="45" pos:column="17">code</name><op:operator pos:line="45" pos:column="21">.</op:operator><name pos:line="45" pos:column="22">Semester</name></name>;</import>
<import pos:line="46" pos:column="1">import <name><name pos:line="46" pos:column="8">com</name><op:operator pos:line="46" pos:column="11">.</op:operator><name pos:line="46" pos:column="12">umas</name><op:operator pos:line="46" pos:column="16">.</op:operator><name pos:line="46" pos:column="17">code</name><op:operator pos:line="46" pos:column="21">.</op:operator><name pos:line="46" pos:column="22">Student</name></name>;</import>
<import pos:line="47" pos:column="1">import <name><name pos:line="47" pos:column="8">com</name><op:operator pos:line="47" pos:column="11">.</op:operator><name pos:line="47" pos:column="12">umas</name><op:operator pos:line="47" pos:column="16">.</op:operator><name pos:line="47" pos:column="17">code</name><op:operator pos:line="47" pos:column="21">.</op:operator><name pos:line="47" pos:column="22">TA</name></name>;</import>
<import pos:line="48" pos:column="1">import <name><name pos:line="48" pos:column="8">com</name><op:operator pos:line="48" pos:column="11">.</op:operator><name pos:line="48" pos:column="12">umas</name><op:operator pos:line="48" pos:column="16">.</op:operator><name pos:line="48" pos:column="17">code</name><op:operator pos:line="48" pos:column="21">.</op:operator><name pos:line="48" pos:column="22">Timeslots</name></name>;</import>
<import pos:line="49" pos:column="1">import <name><name pos:line="49" pos:column="8">com</name><op:operator pos:line="49" pos:column="11">.</op:operator><name pos:line="49" pos:column="12">umas</name><op:operator pos:line="49" pos:column="16">.</op:operator><name pos:line="49" pos:column="17">code</name><op:operator pos:line="49" pos:column="21">.</op:operator><name pos:line="49" pos:column="22">WaitList</name></name>;</import>


<import pos:line="52" pos:column="1">import <name><name pos:line="52" pos:column="8">java</name><op:operator pos:line="52" pos:column="12">.</op:operator><name pos:line="52" pos:column="13">awt</name><op:operator pos:line="52" pos:column="16">.</op:operator><name pos:line="52" pos:column="17">Color</name></name>;</import>
<import pos:line="53" pos:column="1">import <name><name pos:line="53" pos:column="8">java</name><op:operator pos:line="53" pos:column="12">.</op:operator><name pos:line="53" pos:column="13">awt</name><op:operator pos:line="53" pos:column="16">.</op:operator><name pos:line="53" pos:column="17">Font</name></name>;</import>



<class><specifier pos:line="57" pos:column="1">public</specifier> class <name pos:line="57" pos:column="14">AdminUI</name> <super><extends pos:line="57" pos:column="22">extends <name pos:line="57" pos:column="30">JPanel</name></extends></super> <block pos:line="57" pos:column="37">{

	<decl_stmt><decl><type><specifier pos:line="59" pos:column="9">private</specifier> <specifier pos:line="59" pos:column="17">static</specifier> <name pos:line="59" pos:column="24">AdminUI</name></type> <name pos:line="59" pos:column="32">adminUI</name> <init pos:line="59" pos:column="40">= <expr><lit:literal type="null" pos:line="59" pos:column="42">null</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="60" pos:column="9">static</specifier> <name><name pos:line="60" pos:column="16">HashMap</name><argument_list pos:line="60" pos:column="23">&lt;<argument><name pos:line="60" pos:column="24">Integer</name></argument>, <argument><name pos:line="60" pos:column="33">CourseOffered</name></argument>&gt;</argument_list></name></type> <name pos:line="60" pos:column="48">coursesOffered</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="61" pos:column="9">static</specifier> <name><name pos:line="61" pos:column="16">ArrayList</name><argument_list pos:line="61" pos:column="25">&lt;<argument><name pos:line="61" pos:column="26">Department</name></argument>&gt;</argument_list></name></type> <name pos:line="61" pos:column="38">departments</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="62" pos:column="9">static</specifier> <name><name pos:line="62" pos:column="16">LinkedHashMap</name><argument_list pos:line="62" pos:column="29">&lt;<argument><name pos:line="62" pos:column="30">Integer</name></argument>,<argument><name pos:line="62" pos:column="38">Course</name></argument>&gt;</argument_list></name></type> <name pos:line="62" pos:column="46">courses</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="63" pos:column="9">static</specifier> <name><name pos:line="63" pos:column="16">ArrayList</name><argument_list pos:line="63" pos:column="25">&lt;<argument><name pos:line="63" pos:column="26">Student</name></argument>&gt;</argument_list></name></type> <name pos:line="63" pos:column="35">students</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="64" pos:column="9">static</specifier> <name><name pos:line="64" pos:column="16">ArrayList</name><argument_list pos:line="64" pos:column="25">&lt;<argument><name pos:line="64" pos:column="26">Professor</name></argument>&gt;</argument_list></name></type> <name pos:line="64" pos:column="37">professors</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="65" pos:column="9">static</specifier> <name><name pos:line="65" pos:column="16">ArrayList</name><argument_list pos:line="65" pos:column="25">&lt;<argument><name pos:line="65" pos:column="26">Admin</name></argument>&gt;</argument_list></name></type> <name pos:line="65" pos:column="33">admins</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="66" pos:column="9">static</specifier> <name><name pos:line="66" pos:column="16">ArrayList</name><argument_list pos:line="66" pos:column="25">&lt;<argument><name pos:line="66" pos:column="26">TA</name></argument>&gt;</argument_list></name></type> <name pos:line="66" pos:column="30">tas</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="67" pos:column="9">static</specifier> <name><name pos:line="67" pos:column="16">HashMap</name><argument_list pos:line="67" pos:column="23">&lt;<argument><name pos:line="67" pos:column="24">Integer</name></argument>, <argument><name pos:line="67" pos:column="33">CourseSchedule</name></argument>&gt;</argument_list></name></type> <name pos:line="67" pos:column="49">courseSchedule</name></decl>;</decl_stmt>
	
	<comment type="line" pos:line="69" pos:column="9">//Hashmaps for retrieved empty class and timeslots</comment>
	<decl_stmt><decl><type><specifier pos:line="70" pos:column="9">static</specifier> <name><name pos:line="70" pos:column="16">LinkedHashMap</name><argument_list pos:line="70" pos:column="29">&lt;<argument><name pos:line="70" pos:column="30">Classroom</name></argument>, <argument><name><name pos:line="70" pos:column="41">ArrayList</name><argument_list pos:line="70" pos:column="50">&lt;<argument><name pos:line="70" pos:column="51">Timeslots</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name pos:line="70" pos:column="63">classroomAndTimeslots</name> <init pos:line="70" pos:column="85">= <expr><op:operator pos:line="70" pos:column="87">new</op:operator> <call><name><name pos:line="70" pos:column="91">LinkedHashMap</name><argument_list pos:line="70" pos:column="104">&lt;<argument><name pos:line="70" pos:column="105">Classroom</name></argument>, <argument><name><name pos:line="70" pos:column="116">ArrayList</name><argument_list pos:line="70" pos:column="125">&lt;<argument><name pos:line="70" pos:column="126">Timeslots</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name><argument_list pos:line="70" pos:column="137">()</argument_list></call></expr></init></decl>;</decl_stmt> 
	<decl_stmt><decl><type><specifier pos:line="71" pos:column="9">private</specifier> <specifier pos:line="71" pos:column="17">static</specifier> <specifier pos:line="71" pos:column="24">final</specifier> <name pos:line="71" pos:column="30">long</name></type> <name pos:line="71" pos:column="35">serialVersionUID</name> <init pos:line="71" pos:column="52">= <expr><lit:literal type="number" pos:line="71" pos:column="54">1L</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="72" pos:column="9">private</specifier> <name pos:line="72" pos:column="17">JTextField</name></type> <name pos:line="72" pos:column="28">studentNameText</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="73" pos:column="9">private</specifier> <name pos:line="73" pos:column="17">JTextPane</name></type> <name pos:line="73" pos:column="27">courseScheduleTextPane</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="74" pos:column="9">private</specifier> <name><name pos:line="74" pos:column="17">JComboBox</name><argument_list pos:line="74" pos:column="26">&lt;<argument><name pos:line="74" pos:column="27">String</name></argument>&gt;</argument_list></name></type> <name pos:line="74" pos:column="35">departmentSelectStudent</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="75" pos:column="9">private</specifier> <name><name pos:line="75" pos:column="17">JComboBox</name><argument_list pos:line="75" pos:column="26">&lt;<argument><name pos:line="75" pos:column="27">String</name></argument>&gt;</argument_list></name></type> <name pos:line="75" pos:column="35">departmentSelectProfessor</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="76" pos:column="9">private</specifier> <name><name pos:line="76" pos:column="17">JComboBox</name><argument_list pos:line="76" pos:column="26">&lt;<argument><name pos:line="76" pos:column="27">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="76" pos:column="36">levelSelectStudent</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="77" pos:column="9">private</specifier> <name pos:line="77" pos:column="17">JTextField</name></type> <name pos:line="77" pos:column="28">professorNameText</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="78" pos:column="9">private</specifier> <name pos:line="78" pos:column="17">JTextField</name></type> <name pos:line="78" pos:column="28">txtToBeDecided</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="79" pos:column="9">private</specifier> <name pos:line="79" pos:column="17">JTextField</name></type> <name pos:line="79" pos:column="28">txtToBeDecided_1</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="80" pos:column="9">private</specifier> <name><name pos:line="80" pos:column="17">JList</name><argument_list pos:line="80" pos:column="22">&lt;<argument><name pos:line="80" pos:column="23">String</name></argument>&gt;</argument_list></name></type> <name pos:line="80" pos:column="31">courseNameList</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="81" pos:column="9">private</specifier> <name><name pos:line="81" pos:column="17">JList</name><argument_list pos:line="81" pos:column="22">&lt;<argument><name pos:line="81" pos:column="23">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="81" pos:column="32">courseOfferIDList</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="82" pos:column="9">private</specifier> <name><name pos:line="82" pos:column="17">JList</name><argument_list pos:line="82" pos:column="22">&lt;<argument><name pos:line="82" pos:column="23">String</name></argument>&gt;</argument_list></name></type> <name pos:line="82" pos:column="31">professorNameList</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="83" pos:column="9">private</specifier> <name><name pos:line="83" pos:column="17">JList</name><argument_list pos:line="83" pos:column="22">&lt;<argument><name pos:line="83" pos:column="23">String</name></argument>&gt;</argument_list></name></type> <name pos:line="83" pos:column="31">classLocationList</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="84" pos:column="9">private</specifier> <name><name pos:line="84" pos:column="17">JList</name><argument_list pos:line="84" pos:column="22">&lt;<argument><name pos:line="84" pos:column="23">String</name></argument>&gt;</argument_list></name></type> <name pos:line="84" pos:column="31">classNameList</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="85" pos:column="9">private</specifier> <name><name pos:line="85" pos:column="17">JList</name><argument_list pos:line="85" pos:column="22">&lt;<argument><name pos:line="85" pos:column="23">String</name></argument>&gt;</argument_list></name></type> <name pos:line="85" pos:column="31">classTimingList</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="86" pos:column="9">private</specifier> <name><name pos:line="86" pos:column="17">JComboBox</name><argument_list pos:line="86" pos:column="26">&lt;<argument><name pos:line="86" pos:column="27">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="86" pos:column="36">courseScheduledCombo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="87" pos:column="9">private</specifier> <name><name pos:line="87" pos:column="17">JComboBox</name><argument_list pos:line="87" pos:column="26">&lt;<argument><name pos:line="87" pos:column="27">String</name></argument>&gt;</argument_list></name></type> <name pos:line="87" pos:column="35">timingAvailableCombo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="88" pos:column="9">private</specifier> <name><name pos:line="88" pos:column="17">JComboBox</name><argument_list pos:line="88" pos:column="26">&lt;<argument><name pos:line="88" pos:column="27">String</name></argument>&gt;</argument_list></name></type> <name pos:line="88" pos:column="35">classRoomCombo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="89" pos:column="9">private</specifier> <name><name pos:line="89" pos:column="17">JComboBox</name><argument_list pos:line="89" pos:column="26">&lt;<argument><name pos:line="89" pos:column="27">String</name></argument>&gt;</argument_list></name></type> <name pos:line="89" pos:column="35">classLocationCombo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="90" pos:column="9">private</specifier> <name><name pos:line="90" pos:column="17">JComboBox</name><argument_list pos:line="90" pos:column="26">&lt;<argument><name pos:line="90" pos:column="27">String</name></argument>&gt;</argument_list></name></type> <name pos:line="90" pos:column="35">timeSlotTypeCombo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="91" pos:column="9">final</specifier> <name><name pos:line="91" pos:column="15">JComboBox</name><argument_list pos:line="91" pos:column="24">&lt;<argument><name pos:line="91" pos:column="25">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="91" pos:column="34">courseOfferIDComboBox</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="92" pos:column="9">final</specifier> <name><name pos:line="92" pos:column="15">JComboBox</name><argument_list pos:line="92" pos:column="24">&lt;<argument><name pos:line="92" pos:column="25">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="92" pos:column="34">taComboBox</name></decl>;</decl_stmt>
	
	<comment type="line" pos:line="94" pos:column="9">//variables used in offer Tab</comment>
	<decl_stmt><decl><type><specifier pos:line="95" pos:column="9">private</specifier> <specifier pos:line="95" pos:column="17">final</specifier> <name><name pos:line="95" pos:column="23">JComboBox</name><argument_list pos:line="95" pos:column="32">&lt;<argument><name pos:line="95" pos:column="33">String</name></argument>&gt;</argument_list></name></type> <name pos:line="95" pos:column="41">allDepartmentsCombo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="96" pos:column="9">private</specifier> <specifier pos:line="96" pos:column="17">final</specifier> <name><name pos:line="96" pos:column="23">JComboBox</name><argument_list pos:line="96" pos:column="32">&lt;<argument><name pos:line="96" pos:column="33">String</name></argument>&gt;</argument_list></name></type> <name pos:line="96" pos:column="41">allCoursesCombo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="97" pos:column="9">private</specifier> <specifier pos:line="97" pos:column="17">final</specifier> <name><name pos:line="97" pos:column="23">JComboBox</name><argument_list pos:line="97" pos:column="32">&lt;<argument><name pos:line="97" pos:column="33">String</name></argument>&gt;</argument_list></name></type> <name pos:line="97" pos:column="41">allProfessorCombo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="98" pos:column="9">private</specifier> <name><name pos:line="98" pos:column="17">JComboBox</name><argument_list pos:line="98" pos:column="26">&lt;<argument><name pos:line="98" pos:column="27">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="98" pos:column="36">classCapacity</name></decl>;</decl_stmt>
	
	
	<comment type="line" pos:line="101" pos:column="9">//variables used in waitlist monitor</comment>
	<decl_stmt><decl><type><specifier pos:line="102" pos:column="9">private</specifier> <name pos:line="102" pos:column="17">JScrollPane</name></type> <name pos:line="102" pos:column="29">waitListStudents</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="103" pos:column="9">private</specifier> <name pos:line="103" pos:column="17">JScrollPane</name></type> <name pos:line="103" pos:column="29">emailedStudents</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="104" pos:column="9">private</specifier> <name><name pos:line="104" pos:column="17">JComboBox</name><argument_list pos:line="104" pos:column="26">&lt;<argument><name pos:line="104" pos:column="27">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="104" pos:column="36">courseOfferSelectForWaitListCombo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="105" pos:column="9">private</specifier> <name><name pos:line="105" pos:column="17">JList</name><argument_list pos:line="105" pos:column="22">&lt;<argument><name pos:line="105" pos:column="23">String</name></argument>&gt;</argument_list></name></type> <name pos:line="105" pos:column="31">waitListStudentsJList</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="106" pos:column="9">private</specifier> <name><name pos:line="106" pos:column="17">JList</name><argument_list pos:line="106" pos:column="22">&lt;<argument><name pos:line="106" pos:column="23">String</name></argument>&gt;</argument_list></name></type> <name pos:line="106" pos:column="31">emailedStudentsJList</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="107" pos:column="9">private</specifier> <name pos:line="107" pos:column="17">JTextField</name></type> <name pos:line="107" pos:column="28">adminName</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="108" pos:column="9">private</specifier> <name><name pos:line="108" pos:column="17">JComboBox</name><argument_list pos:line="108" pos:column="26">&lt;<argument><name pos:line="108" pos:column="27">String</name></argument>&gt;</argument_list></name></type> <name pos:line="108" pos:column="35">adminDeptCombo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="109" pos:column="9">private</specifier> <name pos:line="109" pos:column="17">String</name><index pos:line="109" pos:column="23">[]</index></type> <name pos:line="109" pos:column="26">departmentNameArray</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="110" pos:column="9">private</specifier> <name pos:line="110" pos:column="17">JTextField</name></type> <name pos:line="110" pos:column="28">txtDepartmentName</name></decl>;</decl_stmt>
	
	<decl_stmt><decl><type><specifier pos:line="112" pos:column="9">private</specifier> <specifier pos:line="112" pos:column="17">static</specifier> <name pos:line="112" pos:column="24">manageCourse</name></type> <name pos:line="112" pos:column="37">manageCourseInstance</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="113" pos:column="9">private</specifier> <name pos:line="113" pos:column="17">JTextField</name></type> <name pos:line="113" pos:column="28">txtDepartmentnamenew</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="114" pos:column="9">private</specifier> <name><name pos:line="114" pos:column="17">JComboBox</name><argument_list pos:line="114" pos:column="26">&lt;<argument><name pos:line="114" pos:column="27">String</name></argument>&gt;</argument_list></name></type> <name pos:line="114" pos:column="35">updateDeptCombo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="115" pos:column="9">private</specifier> <name pos:line="115" pos:column="17">JTextPane</name></type> <name pos:line="115" pos:column="27">courseDetailsTextPane</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="116" pos:column="9">private</specifier> <name pos:line="116" pos:column="17">JTextPane</name></type> <name pos:line="116" pos:column="27">taCourseDetails</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="117" pos:column="9">private</specifier> <name pos:line="117" pos:column="17">JTextPane</name></type> <name pos:line="117" pos:column="27">taStudentDetails</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="118" pos:column="9">private</specifier> <name pos:line="118" pos:column="17">GiveBonusUI</name></type> <name pos:line="118" pos:column="29">giveBonusPanel</name></decl>;</decl_stmt>
	
	<comment type="block" format="javadoc" pos:line="120" pos:column="9">/**
	 * Launch the application.
	 */</comment>
	<function><type><specifier pos:line="123" pos:column="9">public</specifier> <specifier pos:line="123" pos:column="16">static</specifier> <name pos:line="123" pos:column="23">void</name></type> <name pos:line="123" pos:column="28">main</name><parameter_list pos:line="123" pos:column="32">(<param><decl><type><name><name pos:line="123" pos:column="33">String</name><index pos:line="123" pos:column="39">[]</index></name></type> <name pos:line="123" pos:column="42">args</name></decl></param>)</parameter_list> <block pos:line="123" pos:column="48">{
		<expr_stmt><expr><call><name><name pos:line="124" pos:column="17">EventQueue</name><op:operator pos:line="124" pos:column="27">.</op:operator><name pos:line="124" pos:column="28">invokeLater</name></name><argument_list pos:line="124" pos:column="39">(<argument><expr><op:operator pos:line="124" pos:column="40">new</op:operator> <class><super><name pos:line="124" pos:column="44">Runnable</name></super><argument_list pos:line="124" pos:column="52">()</argument_list> <block pos:line="124" pos:column="55">{
			<function><type><specifier pos:line="125" pos:column="25">public</specifier> <name pos:line="125" pos:column="32">void</name></type> <name pos:line="125" pos:column="37">run</name><parameter_list pos:line="125" pos:column="40">()</parameter_list> <block pos:line="125" pos:column="43">{
				<try pos:line="126" pos:column="33">try <block pos:line="126" pos:column="37">{
					<decl_stmt><decl><type><name pos:line="127" pos:column="41">AdminUI</name></type> <name pos:line="127" pos:column="49">frame</name> <init pos:line="127" pos:column="55">= <expr><call><name pos:line="127" pos:column="57">initializeAdminUI</name><argument_list pos:line="127" pos:column="74">(<argument><expr><op:operator pos:line="127" pos:column="75">new</op:operator> <call><name pos:line="127" pos:column="79">Admin</name><argument_list pos:line="127" pos:column="84">(<argument><expr><lit:literal type="number" pos:line="127" pos:column="85">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="128" pos:column="41">frame</name><op:operator pos:line="128" pos:column="46">.</op:operator><name pos:line="128" pos:column="47">setVisible</name></name><argument_list pos:line="128" pos:column="57">(<argument><expr><lit:literal type="boolean" pos:line="128" pos:column="58">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block> <catch pos:line="129" pos:column="35">catch <parameter_list pos:line="129" pos:column="41">(<param><decl><type><name pos:line="129" pos:column="42">Exception</name></type> <name pos:line="129" pos:column="52">e</name></decl></param>)</parameter_list> <block pos:line="129" pos:column="55">{
					<expr_stmt><expr><call><name><name pos:line="130" pos:column="41">e</name><op:operator pos:line="130" pos:column="42">.</op:operator><name pos:line="130" pos:column="43">printStackTrace</name></name><argument_list pos:line="130" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<function><type><specifier pos:line="136" pos:column="9">public</specifier> <specifier pos:line="136" pos:column="16">static</specifier> <name pos:line="136" pos:column="23">AdminUI</name></type> <name pos:line="136" pos:column="31">getInstance</name><parameter_list pos:line="136" pos:column="42">(<param><decl><type><name pos:line="136" pos:column="43">Admin</name></type> <name pos:line="136" pos:column="49">admin</name></decl></param>)</parameter_list><block pos:line="136" pos:column="55">{
		<try pos:line="137" pos:column="17">try <block pos:line="137" pos:column="21">{
			<expr_stmt><expr><name pos:line="138" pos:column="25">adminUI</name> <op:operator pos:line="138" pos:column="33">=</op:operator> <op:operator pos:line="138" pos:column="35">new</op:operator> <call><name pos:line="138" pos:column="39">AdminUI</name><argument_list pos:line="138" pos:column="46">(<argument><expr><name pos:line="138" pos:column="47">admin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block> <catch pos:line="139" pos:column="19">catch <parameter_list pos:line="139" pos:column="25">(<param><decl><type><name><name pos:line="139" pos:column="26">Department</name><op:operator pos:line="139" pos:column="36">.</op:operator><name pos:line="139" pos:column="37">DepartmentDoesNotExistException</name></name></type> <name pos:line="139" pos:column="69">e</name></decl></param>)</parameter_list> <block pos:line="139" pos:column="72">{
			<comment type="line" pos:line="140" pos:column="25">// TODO Auto-generated catch block</comment>
			<expr_stmt><expr><call><name><name pos:line="141" pos:column="25">e</name><op:operator pos:line="141" pos:column="26">.</op:operator><name pos:line="141" pos:column="27">printStackTrace</name></name><argument_list pos:line="141" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
		}</block></catch></try>
		<return pos:line="143" pos:column="17">return <expr><name pos:line="143" pos:column="24">adminUI</name></expr>;</return>
	}</block></function>
	
	<constructor><specifier pos:line="146" pos:column="9">private</specifier> <name pos:line="146" pos:column="17">AdminUI</name><parameter_list pos:line="146" pos:column="24">(<param><decl><type><name pos:line="146" pos:column="25">Admin</name></type> <name pos:line="146" pos:column="31">admin</name></decl></param>)</parameter_list> <throws pos:line="146" pos:column="38">throws <argument><expr><name><name pos:line="146" pos:column="45">Department</name><op:operator pos:line="146" pos:column="55">.</op:operator><name pos:line="146" pos:column="56">DepartmentDoesNotExistException</name></name></expr></argument></throws> <block pos:line="146" pos:column="88">{
		<expr_stmt><expr><call><name pos:line="147" pos:column="17">initializeBackgroundData</name><argument_list pos:line="147" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="148" pos:column="17">setBounds</name><argument_list pos:line="148" pos:column="26">(<argument><expr><lit:literal type="number" pos:line="148" pos:column="27">100</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="148" pos:column="32">100</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="148" pos:column="37">1024</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="148" pos:column="43">768</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="149" pos:column="17">setBorder</name><argument_list pos:line="149" pos:column="26">(<argument><expr><op:operator pos:line="149" pos:column="27">new</op:operator> <call><name pos:line="149" pos:column="31">EmptyBorder</name><argument_list pos:line="149" pos:column="42">(<argument><expr><lit:literal type="number" pos:line="149" pos:column="43">5</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="149" pos:column="46">5</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="149" pos:column="49">5</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="149" pos:column="52">5</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
		<expr_stmt><expr><name pos:line="150" pos:column="17">departments</name> <op:operator pos:line="150" pos:column="29">=</op:operator> <call><name><name pos:line="150" pos:column="31">Department</name><op:operator pos:line="150" pos:column="41">.</op:operator><name pos:line="150" pos:column="42">getAllDepartments</name></name><argument_list pos:line="150" pos:column="59">()</argument_list></call></expr>;</expr_stmt>
		
		<for pos:line="152" pos:column="17">for(<init><decl><type><name pos:line="152" pos:column="21">int</name></type> <name pos:line="152" pos:column="25">i</name><init pos:line="152" pos:column="26">=<expr><lit:literal type="number" pos:line="152" pos:column="27">0</lit:literal></expr></init></decl>;</init><condition><expr><name pos:line="152" pos:column="29">i</name><op:operator pos:line="152" pos:column="30">&lt;</op:operator><name><name pos:line="152" pos:column="31">departmentNameArray</name><op:operator pos:line="152" pos:column="50">.</op:operator><name pos:line="152" pos:column="51">length</name></name></expr>;</condition><incr><expr><name pos:line="152" pos:column="58">i</name><op:operator pos:line="152" pos:column="59">++</op:operator></expr></incr>)<block pos:line="152" pos:column="62">{
			<expr_stmt><expr><name><name pos:line="153" pos:column="25">departmentNameArray</name><index pos:line="153" pos:column="44">[<expr><name pos:line="153" pos:column="45">i</name></expr>]</index></name> <op:operator pos:line="153" pos:column="48">=</op:operator> <call><name><name pos:line="153" pos:column="50">departments</name><op:operator pos:line="153" pos:column="61">.</op:operator><name pos:line="153" pos:column="62">get</name></name><argument_list pos:line="153" pos:column="65">(<argument><expr><name pos:line="153" pos:column="66">i</name></expr></argument>)</argument_list></call><op:operator pos:line="153" pos:column="68">.</op:operator><call><name pos:line="153" pos:column="69">getDepartmentName</name><argument_list pos:line="153" pos:column="86">()</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		<expr_stmt><expr><call><name pos:line="155" pos:column="17">setLayout</name><argument_list pos:line="155" pos:column="26">(<argument><expr><lit:literal type="null" pos:line="155" pos:column="27">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="157" pos:column="17">JTabbedPane</name></type> <name pos:line="157" pos:column="29">managePeople</name> <init pos:line="157" pos:column="42">= <expr><op:operator pos:line="157" pos:column="44">new</op:operator> <call><name pos:line="157" pos:column="48">JTabbedPane</name><argument_list pos:line="157" pos:column="59">(<argument><expr><name><name pos:line="157" pos:column="60">JTabbedPane</name><op:operator pos:line="157" pos:column="71">.</op:operator><name pos:line="157" pos:column="72">TOP</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="158" pos:column="17">managePeople</name><op:operator pos:line="158" pos:column="29">.</op:operator><name pos:line="158" pos:column="30">setBounds</name></name><argument_list pos:line="158" pos:column="39">(<argument><expr><lit:literal type="number" pos:line="158" pos:column="40">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="158" pos:column="43">5</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="158" pos:column="46">923</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="158" pos:column="51">483</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="159" pos:column="17">add</name><argument_list pos:line="159" pos:column="20">(<argument><expr><name pos:line="159" pos:column="21">managePeople</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="161" pos:column="17">JTabbedPane</name></type> <name pos:line="161" pos:column="29">adminTabs</name> <init pos:line="161" pos:column="39">= <expr><op:operator pos:line="161" pos:column="41">new</op:operator> <call><name pos:line="161" pos:column="45">JTabbedPane</name><argument_list pos:line="161" pos:column="56">(<argument><expr><name><name pos:line="161" pos:column="57">JTabbedPane</name><op:operator pos:line="161" pos:column="68">.</op:operator><name pos:line="161" pos:column="69">TOP</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="162" pos:column="17">managePeople</name><op:operator pos:line="162" pos:column="29">.</op:operator><name pos:line="162" pos:column="30">addTab</name></name><argument_list pos:line="162" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="162" pos:column="37">"Manage People"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="162" pos:column="54">null</lit:literal></expr></argument>, <argument><expr><name pos:line="162" pos:column="60">adminTabs</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="162" pos:column="71">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="164" pos:column="17">JPanel</name></type> <name pos:line="164" pos:column="24">addNewStudent</name> <init pos:line="164" pos:column="38">= <expr><op:operator pos:line="164" pos:column="40">new</op:operator> <call><name pos:line="164" pos:column="44">JPanel</name><argument_list pos:line="164" pos:column="50">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="165" pos:column="17">adminTabs</name><op:operator pos:line="165" pos:column="26">.</op:operator><name pos:line="165" pos:column="27">addTab</name></name><argument_list pos:line="165" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="165" pos:column="34">"Add A Student"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="165" pos:column="51">null</lit:literal></expr></argument>, <argument><expr><name pos:line="165" pos:column="57">addNewStudent</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="165" pos:column="72">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="166" pos:column="17">addNewStudent</name><op:operator pos:line="166" pos:column="30">.</op:operator><name pos:line="166" pos:column="31">setLayout</name></name><argument_list pos:line="166" pos:column="40">(<argument><expr><op:operator pos:line="166" pos:column="41">new</op:operator> <call><name pos:line="166" pos:column="45">GridLayout</name><argument_list pos:line="166" pos:column="55">(<argument><expr><lit:literal type="number" pos:line="166" pos:column="56">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="166" pos:column="59">2</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="166" pos:column="62">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="166" pos:column="65">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="168" pos:column="17">JLabel</name></type> <name pos:line="168" pos:column="24">studentNameLabel</name> <init pos:line="168" pos:column="41">= <expr><op:operator pos:line="168" pos:column="43">new</op:operator> <call><name pos:line="168" pos:column="47">JLabel</name><argument_list pos:line="168" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="168" pos:column="54">"Enter student name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="169" pos:column="17">addNewStudent</name><op:operator pos:line="169" pos:column="30">.</op:operator><name pos:line="169" pos:column="31">add</name></name><argument_list pos:line="169" pos:column="34">(<argument><expr><name pos:line="169" pos:column="35">studentNameLabel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="171" pos:column="17">studentNameText</name> <op:operator pos:line="171" pos:column="33">=</op:operator> <op:operator pos:line="171" pos:column="35">new</op:operator> <call><name pos:line="171" pos:column="39">JTextField</name><argument_list pos:line="171" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="172" pos:column="17">addNewStudent</name><op:operator pos:line="172" pos:column="30">.</op:operator><name pos:line="172" pos:column="31">add</name></name><argument_list pos:line="172" pos:column="34">(<argument><expr><name pos:line="172" pos:column="35">studentNameText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="173" pos:column="17">studentNameText</name><op:operator pos:line="173" pos:column="32">.</op:operator><name pos:line="173" pos:column="33">setColumns</name></name><argument_list pos:line="173" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="173" pos:column="44">10</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="175" pos:column="17">JLabel</name></type> <name pos:line="175" pos:column="24">lblNewLabel_1</name> <init pos:line="175" pos:column="38">= <expr><op:operator pos:line="175" pos:column="40">new</op:operator> <call><name pos:line="175" pos:column="44">JLabel</name><argument_list pos:line="175" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="175" pos:column="51">"Select Department"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="176" pos:column="17">addNewStudent</name><op:operator pos:line="176" pos:column="30">.</op:operator><name pos:line="176" pos:column="31">add</name></name><argument_list pos:line="176" pos:column="34">(<argument><expr><name pos:line="176" pos:column="35">lblNewLabel_1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="178" pos:column="17">departmentSelectStudent</name> <op:operator pos:line="178" pos:column="41">=</op:operator> <op:operator pos:line="178" pos:column="43">new</op:operator> <call><name><name pos:line="178" pos:column="47">JComboBox</name><argument_list pos:line="178" pos:column="56">&lt;<argument><name pos:line="178" pos:column="57">String</name></argument>&gt;</argument_list></name><argument_list pos:line="178" pos:column="64">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="179" pos:column="17">departmentSelectStudent</name><op:operator pos:line="179" pos:column="40">.</op:operator><name pos:line="179" pos:column="41">setModel</name></name><argument_list pos:line="179" pos:column="49">(<argument><expr><op:operator pos:line="179" pos:column="50">new</op:operator> <call><name><name pos:line="179" pos:column="54">DefaultComboBoxModel</name><argument_list pos:line="179" pos:column="74">&lt;<argument><name pos:line="179" pos:column="75">String</name></argument>&gt;</argument_list></name><argument_list pos:line="179" pos:column="82">(<argument><expr><name pos:line="179" pos:column="83">departmentNameArray</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="180" pos:column="17">addNewStudent</name><op:operator pos:line="180" pos:column="30">.</op:operator><name pos:line="180" pos:column="31">add</name></name><argument_list pos:line="180" pos:column="34">(<argument><expr><name pos:line="180" pos:column="35">departmentSelectStudent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="182" pos:column="17">JLabel</name></type> <name pos:line="182" pos:column="24">lblNewLabel</name> <init pos:line="182" pos:column="36">= <expr><op:operator pos:line="182" pos:column="38">new</op:operator> <call><name pos:line="182" pos:column="42">JLabel</name><argument_list pos:line="182" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="182" pos:column="49">"Select Level"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="183" pos:column="17">addNewStudent</name><op:operator pos:line="183" pos:column="30">.</op:operator><name pos:line="183" pos:column="31">add</name></name><argument_list pos:line="183" pos:column="34">(<argument><expr><name pos:line="183" pos:column="35">lblNewLabel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="185" pos:column="17">levelSelectStudent</name> <op:operator pos:line="185" pos:column="36">=</op:operator> <op:operator pos:line="185" pos:column="38">new</op:operator> <call><name><name pos:line="185" pos:column="42">JComboBox</name><argument_list pos:line="185" pos:column="51">&lt;<argument><name pos:line="185" pos:column="52">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="185" pos:column="60">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="186" pos:column="17">levelSelectStudent</name><op:operator pos:line="186" pos:column="35">.</op:operator><name pos:line="186" pos:column="36">setModel</name></name><argument_list pos:line="186" pos:column="44">(<argument><expr><op:operator pos:line="186" pos:column="45">new</op:operator> <call><name><name pos:line="186" pos:column="49">DefaultComboBoxModel</name><argument_list pos:line="186" pos:column="69">&lt;<argument><name pos:line="186" pos:column="70">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="186" pos:column="78">(<argument><expr><op:operator pos:line="186" pos:column="79">new</op:operator> <name><name pos:line="186" pos:column="83">Integer</name><index pos:line="186" pos:column="90">[]</index></name> <block pos:line="186" pos:column="93">{<expr><lit:literal type="number" pos:line="186" pos:column="94">1</lit:literal></expr><op:operator pos:line="186" pos:column="95">,</op:operator> <expr><lit:literal type="number" pos:line="186" pos:column="97">2</lit:literal></expr><op:operator pos:line="186" pos:column="98">,</op:operator> <expr><lit:literal type="number" pos:line="186" pos:column="100">3</lit:literal></expr>}</block></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="187" pos:column="17">addNewStudent</name><op:operator pos:line="187" pos:column="30">.</op:operator><name pos:line="187" pos:column="31">add</name></name><argument_list pos:line="187" pos:column="34">(<argument><expr><name pos:line="187" pos:column="35">levelSelectStudent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="189" pos:column="17">JLabel</name></type> <name pos:line="189" pos:column="24">lblNewLabel_2</name> <init pos:line="189" pos:column="38">= <expr><op:operator pos:line="189" pos:column="40">new</op:operator> <call><name pos:line="189" pos:column="44">JLabel</name><argument_list pos:line="189" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="189" pos:column="51">"Confirm changes"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="190" pos:column="17">addNewStudent</name><op:operator pos:line="190" pos:column="30">.</op:operator><name pos:line="190" pos:column="31">add</name></name><argument_list pos:line="190" pos:column="34">(<argument><expr><name pos:line="190" pos:column="35">lblNewLabel_2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="192" pos:column="17">JButton</name></type> <name pos:line="192" pos:column="25">addStudentButton</name> <init pos:line="192" pos:column="42">= <expr><op:operator pos:line="192" pos:column="44">new</op:operator> <call><name pos:line="192" pos:column="48">JButton</name><argument_list pos:line="192" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="192" pos:column="56">"Add student"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="193" pos:column="17">addStudentButton</name><op:operator pos:line="193" pos:column="33">.</op:operator><name pos:line="193" pos:column="34">addActionListener</name></name><argument_list pos:line="193" pos:column="51">(<argument><expr><op:operator pos:line="193" pos:column="52">new</op:operator> <class><super><name pos:line="193" pos:column="56">ActionListener</name></super><argument_list pos:line="193" pos:column="70">()</argument_list> <block pos:line="193" pos:column="73">{
			<function><type><specifier pos:line="194" pos:column="25">public</specifier> <name pos:line="194" pos:column="32">void</name></type> <name pos:line="194" pos:column="37">actionPerformed</name><parameter_list pos:line="194" pos:column="52">(<param><decl><type><name pos:line="194" pos:column="53">ActionEvent</name></type> <name pos:line="194" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="194" pos:column="71">{
				<decl_stmt><decl><type><name pos:line="195" pos:column="33">boolean</name></type> <name pos:line="195" pos:column="41">add</name> <init pos:line="195" pos:column="45">= <expr><call><name pos:line="195" pos:column="47">addStudent</name><argument_list pos:line="195" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="196" pos:column="33">if<condition pos:line="196" pos:column="35">(<expr><name pos:line="196" pos:column="36">add</name></expr>)</condition><then><block pos:line="196" pos:column="40">{
					<expr_stmt><expr><call><name pos:line="197" pos:column="41">showMessage</name><argument_list pos:line="197" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="197" pos:column="53">"Student added successfully"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="197" pos:column="83">"Add successfull"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="198" pos:column="41">initializeEveryThing</name><argument_list pos:line="198" pos:column="61">()</argument_list></call></expr>;</expr_stmt>
				}</block></then>
				<else pos:line="200" pos:column="33">else<block pos:line="200" pos:column="37">{
					<expr_stmt><expr><call><name pos:line="201" pos:column="41">showMessage</name><argument_list pos:line="201" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="201" pos:column="53">"Student not added"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="201" pos:column="74">"Add unsuccessfull"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></else></if>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="205" pos:column="17">addNewStudent</name><op:operator pos:line="205" pos:column="30">.</op:operator><name pos:line="205" pos:column="31">add</name></name><argument_list pos:line="205" pos:column="34">(<argument><expr><name pos:line="205" pos:column="35">addStudentButton</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="207" pos:column="17">JPanel</name></type> <name pos:line="207" pos:column="24">addNewProfessor</name> <init pos:line="207" pos:column="40">= <expr><op:operator pos:line="207" pos:column="42">new</op:operator> <call><name pos:line="207" pos:column="46">JPanel</name><argument_list pos:line="207" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="208" pos:column="17">adminTabs</name><op:operator pos:line="208" pos:column="26">.</op:operator><name pos:line="208" pos:column="27">addTab</name></name><argument_list pos:line="208" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="208" pos:column="34">"Add a professor"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="208" pos:column="53">null</lit:literal></expr></argument>, <argument><expr><name pos:line="208" pos:column="59">addNewProfessor</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="208" pos:column="76">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="209" pos:column="17">addNewProfessor</name><op:operator pos:line="209" pos:column="32">.</op:operator><name pos:line="209" pos:column="33">setLayout</name></name><argument_list pos:line="209" pos:column="42">(<argument><expr><op:operator pos:line="209" pos:column="43">new</op:operator> <call><name pos:line="209" pos:column="47">GridLayout</name><argument_list pos:line="209" pos:column="57">(<argument><expr><lit:literal type="number" pos:line="209" pos:column="58">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="209" pos:column="61">2</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="209" pos:column="64">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="209" pos:column="67">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="211" pos:column="17">JLabel</name></type> <name pos:line="211" pos:column="24">lblProfessorName</name> <init pos:line="211" pos:column="41">= <expr><op:operator pos:line="211" pos:column="43">new</op:operator> <call><name pos:line="211" pos:column="47">JLabel</name><argument_list pos:line="211" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="211" pos:column="54">"Professor name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="212" pos:column="17">addNewProfessor</name><op:operator pos:line="212" pos:column="32">.</op:operator><name pos:line="212" pos:column="33">add</name></name><argument_list pos:line="212" pos:column="36">(<argument><expr><name pos:line="212" pos:column="37">lblProfessorName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="214" pos:column="17">professorNameText</name> <op:operator pos:line="214" pos:column="35">=</op:operator> <op:operator pos:line="214" pos:column="37">new</op:operator> <call><name pos:line="214" pos:column="41">JTextField</name><argument_list pos:line="214" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="215" pos:column="17">addNewProfessor</name><op:operator pos:line="215" pos:column="32">.</op:operator><name pos:line="215" pos:column="33">add</name></name><argument_list pos:line="215" pos:column="36">(<argument><expr><name pos:line="215" pos:column="37">professorNameText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="216" pos:column="17">professorNameText</name><op:operator pos:line="216" pos:column="34">.</op:operator><name pos:line="216" pos:column="35">setColumns</name></name><argument_list pos:line="216" pos:column="45">(<argument><expr><lit:literal type="number" pos:line="216" pos:column="46">10</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="218" pos:column="17">JLabel</name></type> <name pos:line="218" pos:column="24">lblSelectDepartment</name> <init pos:line="218" pos:column="44">= <expr><op:operator pos:line="218" pos:column="46">new</op:operator> <call><name pos:line="218" pos:column="50">JLabel</name><argument_list pos:line="218" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="218" pos:column="57">"Select Department"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="219" pos:column="17">addNewProfessor</name><op:operator pos:line="219" pos:column="32">.</op:operator><name pos:line="219" pos:column="33">add</name></name><argument_list pos:line="219" pos:column="36">(<argument><expr><name pos:line="219" pos:column="37">lblSelectDepartment</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="221" pos:column="17">departmentSelectProfessor</name> <op:operator pos:line="221" pos:column="43">=</op:operator> <op:operator pos:line="221" pos:column="45">new</op:operator> <call><name><name pos:line="221" pos:column="49">JComboBox</name><argument_list pos:line="221" pos:column="58">&lt;<argument><name pos:line="221" pos:column="59">String</name></argument>&gt;</argument_list></name><argument_list pos:line="221" pos:column="66">(<argument><expr><op:operator pos:line="221" pos:column="67">new</op:operator> <call><name><name pos:line="221" pos:column="71">DefaultComboBoxModel</name><argument_list pos:line="221" pos:column="91">&lt;<argument><name pos:line="221" pos:column="92">String</name></argument>&gt;</argument_list></name><argument_list pos:line="221" pos:column="99">(<argument><expr><name pos:line="221" pos:column="100">departmentNameArray</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="222" pos:column="17">addNewProfessor</name><op:operator pos:line="222" pos:column="32">.</op:operator><name pos:line="222" pos:column="33">add</name></name><argument_list pos:line="222" pos:column="36">(<argument><expr><name pos:line="222" pos:column="37">departmentSelectProfessor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="224" pos:column="17">JLabel</name></type> <name pos:line="224" pos:column="24">lblOfficeLocation</name> <init pos:line="224" pos:column="42">= <expr><op:operator pos:line="224" pos:column="44">new</op:operator> <call><name pos:line="224" pos:column="48">JLabel</name><argument_list pos:line="224" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="224" pos:column="55">"Office Location"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="225" pos:column="17">addNewProfessor</name><op:operator pos:line="225" pos:column="32">.</op:operator><name pos:line="225" pos:column="33">add</name></name><argument_list pos:line="225" pos:column="36">(<argument><expr><name pos:line="225" pos:column="37">lblOfficeLocation</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="227" pos:column="17">txtToBeDecided</name> <op:operator pos:line="227" pos:column="32">=</op:operator> <op:operator pos:line="227" pos:column="34">new</op:operator> <call><name pos:line="227" pos:column="38">JTextField</name><argument_list pos:line="227" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="228" pos:column="17">txtToBeDecided</name><op:operator pos:line="228" pos:column="31">.</op:operator><name pos:line="228" pos:column="32">setEditable</name></name><argument_list pos:line="228" pos:column="43">(<argument><expr><lit:literal type="boolean" pos:line="228" pos:column="44">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="229" pos:column="17">txtToBeDecided</name><op:operator pos:line="229" pos:column="31">.</op:operator><name pos:line="229" pos:column="32">setText</name></name><argument_list pos:line="229" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="229" pos:column="40">"To be decided later"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="230" pos:column="17">addNewProfessor</name><op:operator pos:line="230" pos:column="32">.</op:operator><name pos:line="230" pos:column="33">add</name></name><argument_list pos:line="230" pos:column="36">(<argument><expr><name pos:line="230" pos:column="37">txtToBeDecided</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="231" pos:column="17">txtToBeDecided</name><op:operator pos:line="231" pos:column="31">.</op:operator><name pos:line="231" pos:column="32">setColumns</name></name><argument_list pos:line="231" pos:column="42">(<argument><expr><lit:literal type="number" pos:line="231" pos:column="43">10</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="233" pos:column="17">JLabel</name></type> <name pos:line="233" pos:column="24">lblOfficeHours</name> <init pos:line="233" pos:column="39">= <expr><op:operator pos:line="233" pos:column="41">new</op:operator> <call><name pos:line="233" pos:column="45">JLabel</name><argument_list pos:line="233" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="233" pos:column="52">"Office Hours"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="234" pos:column="17">addNewProfessor</name><op:operator pos:line="234" pos:column="32">.</op:operator><name pos:line="234" pos:column="33">add</name></name><argument_list pos:line="234" pos:column="36">(<argument><expr><name pos:line="234" pos:column="37">lblOfficeHours</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="236" pos:column="17">txtToBeDecided_1</name> <op:operator pos:line="236" pos:column="34">=</op:operator> <op:operator pos:line="236" pos:column="36">new</op:operator> <call><name pos:line="236" pos:column="40">JTextField</name><argument_list pos:line="236" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="237" pos:column="17">txtToBeDecided_1</name><op:operator pos:line="237" pos:column="33">.</op:operator><name pos:line="237" pos:column="34">setEditable</name></name><argument_list pos:line="237" pos:column="45">(<argument><expr><lit:literal type="boolean" pos:line="237" pos:column="46">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="238" pos:column="17">txtToBeDecided_1</name><op:operator pos:line="238" pos:column="33">.</op:operator><name pos:line="238" pos:column="34">setText</name></name><argument_list pos:line="238" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="238" pos:column="42">"To be decided later"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="239" pos:column="17">addNewProfessor</name><op:operator pos:line="239" pos:column="32">.</op:operator><name pos:line="239" pos:column="33">add</name></name><argument_list pos:line="239" pos:column="36">(<argument><expr><name pos:line="239" pos:column="37">txtToBeDecided_1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="240" pos:column="17">txtToBeDecided_1</name><op:operator pos:line="240" pos:column="33">.</op:operator><name pos:line="240" pos:column="34">setColumns</name></name><argument_list pos:line="240" pos:column="44">(<argument><expr><lit:literal type="number" pos:line="240" pos:column="45">10</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="242" pos:column="17">JLabel</name></type> <name pos:line="242" pos:column="24">lblConfirm</name> <init pos:line="242" pos:column="35">= <expr><op:operator pos:line="242" pos:column="37">new</op:operator> <call><name pos:line="242" pos:column="41">JLabel</name><argument_list pos:line="242" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="242" pos:column="48">"Confirm"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="243" pos:column="17">addNewProfessor</name><op:operator pos:line="243" pos:column="32">.</op:operator><name pos:line="243" pos:column="33">add</name></name><argument_list pos:line="243" pos:column="36">(<argument><expr><name pos:line="243" pos:column="37">lblConfirm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="245" pos:column="17">JButton</name></type> <name pos:line="245" pos:column="25">addProfessorButton</name> <init pos:line="245" pos:column="44">= <expr><op:operator pos:line="245" pos:column="46">new</op:operator> <call><name pos:line="245" pos:column="50">JButton</name><argument_list pos:line="245" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="245" pos:column="58">"Add Professor"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="246" pos:column="17">addProfessorButton</name><op:operator pos:line="246" pos:column="35">.</op:operator><name pos:line="246" pos:column="36">addActionListener</name></name><argument_list pos:line="246" pos:column="53">(<argument><expr><op:operator pos:line="246" pos:column="54">new</op:operator> <class><super><name pos:line="246" pos:column="58">ActionListener</name></super><argument_list pos:line="246" pos:column="72">()</argument_list> <block pos:line="246" pos:column="75">{
			<function><type><specifier pos:line="247" pos:column="25">public</specifier> <name pos:line="247" pos:column="32">void</name></type> <name pos:line="247" pos:column="37">actionPerformed</name><parameter_list pos:line="247" pos:column="52">(<param><decl><type><name pos:line="247" pos:column="53">ActionEvent</name></type> <name pos:line="247" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="247" pos:column="71">{
				<decl_stmt><decl><type><name pos:line="248" pos:column="33">boolean</name></type> <name pos:line="248" pos:column="41">add</name> <init pos:line="248" pos:column="45">= <expr><call><name pos:line="248" pos:column="47">addProfessor</name><argument_list pos:line="248" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="249" pos:column="33">if<condition pos:line="249" pos:column="35">(<expr><name pos:line="249" pos:column="36">add</name></expr>)</condition><then><block pos:line="249" pos:column="40">{
					<expr_stmt><expr><call><name pos:line="250" pos:column="41">showMessage</name><argument_list pos:line="250" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="250" pos:column="53">"Professor added successfully"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="250" pos:column="85">"Add successfull"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="251" pos:column="41">initializeEveryThing</name><argument_list pos:line="251" pos:column="61">()</argument_list></call></expr>;</expr_stmt>
				}</block></then>
				<else pos:line="253" pos:column="33">else<block pos:line="253" pos:column="37">{
					<expr_stmt><expr><call><name pos:line="254" pos:column="41">showMessage</name><argument_list pos:line="254" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="254" pos:column="53">"Professor not added"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="254" pos:column="76">"Add unsuccessfull"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></else></if>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><name pos:line="259" pos:column="17">addNewProfessor</name><op:operator pos:line="259" pos:column="32">.</op:operator><name pos:line="259" pos:column="33">add</name></name><argument_list pos:line="259" pos:column="36">(<argument><expr><name pos:line="259" pos:column="37">addProfessorButton</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		
		<comment type="line" pos:line="262" pos:column="17">//-------------------Add a teaching assistant course-------------------//</comment>
		<decl_stmt><decl><type><name pos:line="263" pos:column="17">JPanel</name></type> <name pos:line="263" pos:column="24">addTeachingAssistant</name> <init pos:line="263" pos:column="45">= <expr><op:operator pos:line="263" pos:column="47">new</op:operator> <call><name pos:line="263" pos:column="51">JPanel</name><argument_list pos:line="263" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="264" pos:column="17">adminTabs</name><op:operator pos:line="264" pos:column="26">.</op:operator><name pos:line="264" pos:column="27">addTab</name></name><argument_list pos:line="264" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="264" pos:column="34">"Add a TA"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="264" pos:column="46">null</lit:literal></expr></argument>, <argument><expr><name pos:line="264" pos:column="52">addTeachingAssistant</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="264" pos:column="74">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="265" pos:column="17">addTeachingAssistant</name><op:operator pos:line="265" pos:column="37">.</op:operator><name pos:line="265" pos:column="38">setLayout</name></name><argument_list pos:line="265" pos:column="47">(<argument><expr><lit:literal type="null" pos:line="265" pos:column="48">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="267" pos:column="17">taComboBox</name> <op:operator pos:line="267" pos:column="28">=</op:operator> <op:operator pos:line="267" pos:column="30">new</op:operator> <call><name><name pos:line="267" pos:column="34">JComboBox</name><argument_list pos:line="267" pos:column="43">&lt;<argument><name pos:line="267" pos:column="44">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="267" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="268" pos:column="17">taComboBox</name><op:operator pos:line="268" pos:column="27">.</op:operator><name pos:line="268" pos:column="28">addActionListener</name></name><argument_list pos:line="268" pos:column="45">(<argument><expr><op:operator pos:line="268" pos:column="46">new</op:operator> <class><super><name pos:line="268" pos:column="50">ActionListener</name></super><argument_list pos:line="268" pos:column="64">()</argument_list> <block pos:line="268" pos:column="67">{
			<function><type><specifier pos:line="269" pos:column="25">public</specifier> <name pos:line="269" pos:column="32">void</name></type> <name pos:line="269" pos:column="37">actionPerformed</name><parameter_list pos:line="269" pos:column="52">(<param><decl><type><name pos:line="269" pos:column="53">ActionEvent</name></type> <name pos:line="269" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="269" pos:column="71">{
				<if pos:line="270" pos:column="33">if<condition pos:line="270" pos:column="35">(<expr><call><name><name pos:line="270" pos:column="36">taComboBox</name><op:operator pos:line="270" pos:column="46">.</op:operator><name pos:line="270" pos:column="47">getSelectedIndex</name></name><argument_list pos:line="270" pos:column="63">()</argument_list></call><op:operator pos:line="270" pos:column="65">&lt;</op:operator><lit:literal type="number" pos:line="270" pos:column="66">0</lit:literal></expr>)</condition><then><block pos:line="270" pos:column="68">{
					<expr_stmt><expr><call><name pos:line="271" pos:column="41">showMessage</name><argument_list pos:line="271" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="271" pos:column="53">"Select a valid student"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="271" pos:column="79">"Error"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then>
				
				<else pos:line="274" pos:column="33">else<block pos:line="274" pos:column="37">{
					<decl_stmt><decl><type><name pos:line="275" pos:column="41">int</name></type> <name pos:line="275" pos:column="45">UIN</name> <init pos:line="275" pos:column="49">= <expr><call><name><name pos:line="275" pos:column="51">taComboBox</name><op:operator pos:line="275" pos:column="61">.</op:operator><name pos:line="275" pos:column="62">getItemAt</name></name><argument_list pos:line="275" pos:column="71">(<argument><expr><call><name><name pos:line="275" pos:column="72">taComboBox</name><op:operator pos:line="275" pos:column="82">.</op:operator><name pos:line="275" pos:column="83">getSelectedIndex</name></name><argument_list pos:line="275" pos:column="99">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="276" pos:column="41">Student</name></type> <name pos:line="276" pos:column="49">student</name></decl>;</decl_stmt>
					<try pos:line="277" pos:column="41">try <block pos:line="277" pos:column="45">{
						<expr_stmt><expr><name pos:line="278" pos:column="49">student</name> <op:operator pos:line="278" pos:column="57">=</op:operator> <op:operator pos:line="278" pos:column="59">new</op:operator> <call><name pos:line="278" pos:column="63">Student</name><argument_list pos:line="278" pos:column="70">(<argument><expr><name pos:line="278" pos:column="71">UIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<decl_stmt><decl><type><name pos:line="279" pos:column="49">String</name></type> <name pos:line="279" pos:column="56">s</name> <init pos:line="279" pos:column="58">= <expr><lit:literal type="string" pos:line="279" pos:column="60">""</lit:literal></expr></init></decl>;</decl_stmt>
						
						<expr_stmt><expr><call><name><name pos:line="281" pos:column="49">DBAnnotation</name><op:operator pos:line="281" pos:column="61">.</op:operator><name pos:line="281" pos:column="62">annoate</name></name><argument_list pos:line="281" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="281" pos:column="70">"name"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="281" pos:column="78">"people"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="281" pos:column="88">"Name"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="281" pos:column="96">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<decl_stmt><decl><type><name pos:line="282" pos:column="49">String</name></type> <name pos:line="282" pos:column="56">name</name> <init pos:line="282" pos:column="61">= <expr><call><name><name pos:line="282" pos:column="63">student</name><op:operator pos:line="282" pos:column="70">.</op:operator><name pos:line="282" pos:column="71">getName</name></name><argument_list pos:line="282" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>
						
						<expr_stmt><expr><call><name><name pos:line="284" pos:column="49">DBAnnotation</name><op:operator pos:line="284" pos:column="61">.</op:operator><name pos:line="284" pos:column="62">annoate</name></name><argument_list pos:line="284" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="284" pos:column="70">"gpa"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="284" pos:column="77">"student"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="284" pos:column="88">"GPA"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="284" pos:column="95">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<decl_stmt><decl><type><name pos:line="285" pos:column="49">double</name></type> <name pos:line="285" pos:column="56">gpa</name> <init pos:line="285" pos:column="60">= <expr><call><name><name pos:line="285" pos:column="62">student</name><op:operator pos:line="285" pos:column="69">.</op:operator><name pos:line="285" pos:column="70">getGPA</name></name><argument_list pos:line="285" pos:column="76">()</argument_list></call></expr></init></decl>;</decl_stmt>
						
						<expr_stmt><expr><name pos:line="287" pos:column="49">s</name><op:operator pos:line="287" pos:column="50">+=</op:operator><lit:literal type="string" pos:line="287" pos:column="52">"Student Name:"</lit:literal><op:operator pos:line="287" pos:column="67">+</op:operator><name pos:line="287" pos:column="68">name</name></expr>;</expr_stmt>
						<expr_stmt><expr><name pos:line="288" pos:column="49">s</name><op:operator pos:line="288" pos:column="50">+=</op:operator><lit:literal type="string" pos:line="288" pos:column="52">"\nGPA:"</lit:literal><op:operator pos:line="288" pos:column="60">+</op:operator><name pos:line="288" pos:column="61">gpa</name></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="289" pos:column="49">taStudentDetails</name><op:operator pos:line="289" pos:column="65">.</op:operator><name pos:line="289" pos:column="66">setText</name></name><argument_list pos:line="289" pos:column="73">(<argument><expr><name pos:line="289" pos:column="74">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						
					}</block> <catch pos:line="291" pos:column="43">catch <parameter_list pos:line="291" pos:column="49">(<param><decl><type><name><name pos:line="291" pos:column="50">Student</name><op:operator pos:line="291" pos:column="57">.</op:operator><name pos:line="291" pos:column="58">PersonDoesNotExistException</name></name></type> <name pos:line="291" pos:column="86">e2</name></decl></param>)</parameter_list> <block pos:line="291" pos:column="90">{
						<expr_stmt><expr><call><name pos:line="292" pos:column="49">showMessage</name><argument_list pos:line="292" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="292" pos:column="61">"Not a student"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="292" pos:column="78">"Error"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></catch></try>
					
				}</block></else></if>
				
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name><name pos:line="299" pos:column="17">DefaultComboBoxModel</name><argument_list pos:line="299" pos:column="37">&lt;<argument><name pos:line="299" pos:column="38">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="299" pos:column="47">allStudentsModel</name> <init pos:line="299" pos:column="64">= <expr><op:operator pos:line="299" pos:column="66">new</op:operator> <call><name><name pos:line="299" pos:column="70">DefaultComboBoxModel</name><argument_list pos:line="299" pos:column="90">&lt;<argument><name pos:line="299" pos:column="91">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="299" pos:column="99">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:line="300" pos:column="17">for(<init><decl><type><name pos:line="300" pos:column="21">Student</name></type> <name pos:line="300" pos:column="29">s</name><range pos:line="300" pos:column="30">:<expr><name pos:line="300" pos:column="31">students</name></expr></range></decl></init>)<block pos:line="300" pos:column="40">{
			<expr_stmt><expr><call><name><name pos:line="301" pos:column="25">allStudentsModel</name><op:operator pos:line="301" pos:column="41">.</op:operator><name pos:line="301" pos:column="42">addElement</name></name><argument_list pos:line="301" pos:column="52">(<argument><expr><call><name><name pos:line="301" pos:column="53">s</name><op:operator pos:line="301" pos:column="54">.</op:operator><name pos:line="301" pos:column="55">getUIN</name></name><argument_list pos:line="301" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		<for pos:line="303" pos:column="17">for(<init><decl><type><name pos:line="303" pos:column="21">Student</name></type> <name pos:line="303" pos:column="29">s</name><range pos:line="303" pos:column="30">:<expr><name pos:line="303" pos:column="31">tas</name></expr></range></decl></init>)<block pos:line="303" pos:column="35">{
			<expr_stmt><expr><call><name><name pos:line="304" pos:column="25">allStudentsModel</name><op:operator pos:line="304" pos:column="41">.</op:operator><name pos:line="304" pos:column="42">addElement</name></name><argument_list pos:line="304" pos:column="52">(<argument><expr><call><name><name pos:line="304" pos:column="53">s</name><op:operator pos:line="304" pos:column="54">.</op:operator><name pos:line="304" pos:column="55">getUIN</name></name><argument_list pos:line="304" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		<expr_stmt><expr><call><name><name pos:line="306" pos:column="17">taComboBox</name><op:operator pos:line="306" pos:column="27">.</op:operator><name pos:line="306" pos:column="28">setModel</name></name><argument_list pos:line="306" pos:column="36">(<argument><expr><name pos:line="306" pos:column="37">allStudentsModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="307" pos:column="17">taComboBox</name><op:operator pos:line="307" pos:column="27">.</op:operator><name pos:line="307" pos:column="28">setBounds</name></name><argument_list pos:line="307" pos:column="37">(<argument><expr><lit:literal type="number" pos:line="307" pos:column="38">373</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="307" pos:column="43">47</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="307" pos:column="47">166</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="307" pos:column="52">20</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="308" pos:column="17">addTeachingAssistant</name><op:operator pos:line="308" pos:column="37">.</op:operator><name pos:line="308" pos:column="38">add</name></name><argument_list pos:line="308" pos:column="41">(<argument><expr><name pos:line="308" pos:column="42">taComboBox</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="310" pos:column="17">courseOfferIDComboBox</name> <op:operator pos:line="310" pos:column="39">=</op:operator> <op:operator pos:line="310" pos:column="41">new</op:operator> <call><name><name pos:line="310" pos:column="45">JComboBox</name><argument_list pos:line="310" pos:column="54">&lt;<argument><name pos:line="310" pos:column="55">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="310" pos:column="63">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="311" pos:column="17">courseOfferIDComboBox</name><op:operator pos:line="311" pos:column="38">.</op:operator><name pos:line="311" pos:column="39">addActionListener</name></name><argument_list pos:line="311" pos:column="56">(<argument><expr><op:operator pos:line="311" pos:column="57">new</op:operator> <class><super><name pos:line="311" pos:column="61">ActionListener</name></super><argument_list pos:line="311" pos:column="75">()</argument_list> <block pos:line="311" pos:column="78">{
			<function><type><specifier pos:line="312" pos:column="25">public</specifier> <name pos:line="312" pos:column="32">void</name></type> <name pos:line="312" pos:column="37">actionPerformed</name><parameter_list pos:line="312" pos:column="52">(<param><decl><type><name pos:line="312" pos:column="53">ActionEvent</name></type> <name pos:line="312" pos:column="65">e</name></decl></param>)</parameter_list> <block pos:line="312" pos:column="68">{
				<if pos:line="313" pos:column="33">if<condition pos:line="313" pos:column="35">(<expr><call><name><name pos:line="313" pos:column="36">courseOfferIDComboBox</name><op:operator pos:line="313" pos:column="57">.</op:operator><name pos:line="313" pos:column="58">getSelectedIndex</name></name><argument_list pos:line="313" pos:column="74">()</argument_list></call><op:operator pos:line="313" pos:column="76">&lt;</op:operator><lit:literal type="number" pos:line="313" pos:column="77">0</lit:literal></expr>)</condition><then><block pos:line="313" pos:column="79">{
					<expr_stmt><expr><call><name pos:line="314" pos:column="41">showMessage</name><argument_list pos:line="314" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="314" pos:column="53">"Select a valid course"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="314" pos:column="78">courseOfferIDComboBox</name><op:operator pos:line="314" pos:column="99">.</op:operator><name pos:line="314" pos:column="100">getSelectedIndex</name></name><argument_list pos:line="314" pos:column="116">()</argument_list></call><op:operator pos:line="314" pos:column="118">+</op:operator><lit:literal type="string" pos:line="314" pos:column="119">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then>
				
				<else pos:line="317" pos:column="33">else<block pos:line="317" pos:column="37">{
					<decl_stmt><decl><type><name pos:line="318" pos:column="41">int</name></type> <name pos:line="318" pos:column="45">offerID</name> <init pos:line="318" pos:column="53">= <expr><call><name><name pos:line="318" pos:column="55">courseOfferIDComboBox</name><op:operator pos:line="318" pos:column="76">.</op:operator><name pos:line="318" pos:column="77">getItemAt</name></name><argument_list pos:line="318" pos:column="86">(<argument><expr><call><name><name pos:line="318" pos:column="87">courseOfferIDComboBox</name><op:operator pos:line="318" pos:column="108">.</op:operator><name pos:line="318" pos:column="109">getSelectedIndex</name></name><argument_list pos:line="318" pos:column="125">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="319" pos:column="41">CourseOffered</name></type> <name pos:line="319" pos:column="55">co</name></decl>;</decl_stmt>
					<try pos:line="320" pos:column="41">try <block pos:line="320" pos:column="45">{
						<expr_stmt><expr><name pos:line="321" pos:column="49">co</name> <op:operator pos:line="321" pos:column="52">=</op:operator> <op:operator pos:line="321" pos:column="54">new</op:operator> <call><name pos:line="321" pos:column="58">CourseOffered</name><argument_list pos:line="321" pos:column="71">(<argument><expr><name pos:line="321" pos:column="72">offerID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<decl_stmt><decl><type><name pos:line="322" pos:column="49">String</name></type> <name pos:line="322" pos:column="56">s</name> <init pos:line="322" pos:column="58">= <expr><lit:literal type="string" pos:line="322" pos:column="60">""</lit:literal></expr></init></decl>;</decl_stmt>
						
						<expr_stmt><expr><call><name><name pos:line="324" pos:column="49">DBAnnotation</name><op:operator pos:line="324" pos:column="61">.</op:operator><name pos:line="324" pos:column="62">annoate</name></name><argument_list pos:line="324" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="324" pos:column="70">"courseName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="324" pos:column="84">"courses"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="324" pos:column="95">"CourseName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="324" pos:column="109">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<decl_stmt><decl><type><name pos:line="325" pos:column="49">String</name></type> <name pos:line="325" pos:column="56">courseName</name> <init pos:line="325" pos:column="67">= <expr><call><name><name pos:line="325" pos:column="69">co</name><op:operator pos:line="325" pos:column="71">.</op:operator><name pos:line="325" pos:column="72">getCourseName</name></name><argument_list pos:line="325" pos:column="85">()</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><name pos:line="326" pos:column="49">s</name><op:operator pos:line="326" pos:column="50">+=</op:operator><lit:literal type="string" pos:line="326" pos:column="52">"Course Name:"</lit:literal><op:operator pos:line="326" pos:column="66">+</op:operator><name pos:line="326" pos:column="67">courseName</name></expr>;</expr_stmt>
						
						<expr_stmt><expr><call><name><name pos:line="328" pos:column="49">DBAnnotation</name><op:operator pos:line="328" pos:column="61">.</op:operator><name pos:line="328" pos:column="62">annoate</name></name><argument_list pos:line="328" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="328" pos:column="70">"deptName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="328" pos:column="82">"department"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="328" pos:column="96">"DepartmentName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="328" pos:column="114">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<decl_stmt><decl><type><name pos:line="329" pos:column="49">String</name></type> <name pos:line="329" pos:column="56">deptName</name> <init pos:line="329" pos:column="65">= <expr><call><name><name pos:line="329" pos:column="67">co</name><op:operator pos:line="329" pos:column="69">.</op:operator><name pos:line="329" pos:column="70">getDepartmentName</name></name><argument_list pos:line="329" pos:column="87">()</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><name pos:line="330" pos:column="49">s</name><op:operator pos:line="330" pos:column="50">+=</op:operator><lit:literal type="string" pos:line="330" pos:column="52">"\nDepartment:"</lit:literal><op:operator pos:line="330" pos:column="67">+</op:operator><name pos:line="330" pos:column="68">deptName</name></expr>;</expr_stmt>
						
						<expr_stmt><expr><call><name><name pos:line="332" pos:column="49">DBAnnotation</name><op:operator pos:line="332" pos:column="61">.</op:operator><name pos:line="332" pos:column="62">annoate</name></name><argument_list pos:line="332" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="332" pos:column="70">"classLoc"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="332" pos:column="82">"classroom"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="332" pos:column="95">"ClassroomLocation"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="332" pos:column="116">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<decl_stmt><decl><type><name pos:line="333" pos:column="49">String</name></type> <name pos:line="333" pos:column="56">classLoc</name> <init pos:line="333" pos:column="65">= <expr><call><name><name pos:line="333" pos:column="67">co</name><op:operator pos:line="333" pos:column="69">.</op:operator><name pos:line="333" pos:column="70">getClassRoomLocation</name></name><argument_list pos:line="333" pos:column="90">()</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><name pos:line="334" pos:column="49">s</name><op:operator pos:line="334" pos:column="50">+=</op:operator><lit:literal type="string" pos:line="334" pos:column="52">"\nClassroom Location:"</lit:literal><op:operator pos:line="334" pos:column="75">+</op:operator><name pos:line="334" pos:column="76">classLoc</name></expr>;</expr_stmt>
						
						<expr_stmt><expr><call><name><name pos:line="336" pos:column="49">DBAnnotation</name><op:operator pos:line="336" pos:column="61">.</op:operator><name pos:line="336" pos:column="62">annoate</name></name><argument_list pos:line="336" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="336" pos:column="70">"className"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="336" pos:column="83">"classroom"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="336" pos:column="96">"ClassroomName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="336" pos:column="113">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<decl_stmt><decl><type><name pos:line="337" pos:column="49">String</name></type> <name pos:line="337" pos:column="56">className</name> <init pos:line="337" pos:column="66">= <expr><call><name><name pos:line="337" pos:column="68">co</name><op:operator pos:line="337" pos:column="70">.</op:operator><name pos:line="337" pos:column="71">getClassRoomName</name></name><argument_list pos:line="337" pos:column="87">()</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><name pos:line="338" pos:column="49">s</name><op:operator pos:line="338" pos:column="50">+=</op:operator><lit:literal type="string" pos:line="338" pos:column="52">"\nClasstroom Name:"</lit:literal><op:operator pos:line="338" pos:column="72">+</op:operator> <name pos:line="338" pos:column="74">className</name></expr>;</expr_stmt>
						
						<expr_stmt><expr><name pos:line="340" pos:column="49">s</name><op:operator pos:line="340" pos:column="50">+=</op:operator><lit:literal type="string" pos:line="340" pos:column="52">"\nTimings:"</lit:literal><op:operator pos:line="340" pos:column="64">+</op:operator><call><name><name pos:line="340" pos:column="65">co</name><op:operator pos:line="340" pos:column="67">.</op:operator><name pos:line="340" pos:column="68">getTiming</name></name><argument_list pos:line="340" pos:column="77">()</argument_list></call></expr>;</expr_stmt>
						
						<expr_stmt><expr><call><name><name pos:line="342" pos:column="49">DBAnnotation</name><op:operator pos:line="342" pos:column="61">.</op:operator><name pos:line="342" pos:column="62">annoate</name></name><argument_list pos:line="342" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="342" pos:column="70">"prof"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="342" pos:column="78">"people"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="342" pos:column="88">"Name"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="342" pos:column="96">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<decl_stmt><decl><type><name pos:line="343" pos:column="49">String</name></type> <name pos:line="343" pos:column="56">prof</name> <init pos:line="343" pos:column="61">= <expr><call><name><name pos:line="343" pos:column="63">co</name><op:operator pos:line="343" pos:column="65">.</op:operator><name pos:line="343" pos:column="66">getProfessorName</name></name><argument_list pos:line="343" pos:column="82">()</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><name pos:line="344" pos:column="49">s</name><op:operator pos:line="344" pos:column="50">+=</op:operator><lit:literal type="string" pos:line="344" pos:column="52">"\nTaught by professor:"</lit:literal><op:operator pos:line="344" pos:column="76">+</op:operator><name pos:line="344" pos:column="77">prof</name></expr>;</expr_stmt>
						
						<expr_stmt><expr><call><name><name pos:line="346" pos:column="49">taCourseDetails</name><op:operator pos:line="346" pos:column="64">.</op:operator><name pos:line="346" pos:column="65">setText</name></name><argument_list pos:line="346" pos:column="72">(<argument><expr><name pos:line="346" pos:column="73">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						
					}</block> <catch pos:line="348" pos:column="43">catch <parameter_list pos:line="348" pos:column="49">(<param><decl><type><name><name pos:line="348" pos:column="50">Course</name><op:operator pos:line="348" pos:column="56">.</op:operator><name pos:line="348" pos:column="57">CourseDoesNotExistException</name></name></type> <name pos:line="348" pos:column="85">e1</name></decl></param>)</parameter_list> <block pos:line="348" pos:column="89">{
						<expr_stmt><expr><call><name pos:line="349" pos:column="49">showMessage</name><argument_list pos:line="349" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="349" pos:column="61">"Select a valid course"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="349" pos:column="86">courseOfferIDComboBox</name><op:operator pos:line="349" pos:column="107">.</op:operator><name pos:line="349" pos:column="108">getSelectedIndex</name></name><argument_list pos:line="349" pos:column="124">()</argument_list></call><op:operator pos:line="349" pos:column="126">+</op:operator><lit:literal type="string" pos:line="349" pos:column="127">" "</lit:literal><op:operator pos:line="349" pos:column="130">+</op:operator><name pos:line="349" pos:column="131">offerID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></catch> <catch pos:line="350" pos:column="43">catch <parameter_list pos:line="350" pos:column="49">(<param><decl><type><name><name pos:line="350" pos:column="50">CourseOffered</name><op:operator pos:line="350" pos:column="63">.</op:operator><name pos:line="350" pos:column="64">CourseOfferingDoesNotExistException</name></name></type> <name pos:line="350" pos:column="100">e1</name></decl></param>)</parameter_list> <block pos:line="350" pos:column="104">{
						<expr_stmt><expr><call><name pos:line="351" pos:column="49">showMessage</name><argument_list pos:line="351" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="351" pos:column="61">"Select a valid course"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="351" pos:column="86">courseOfferIDComboBox</name><op:operator pos:line="351" pos:column="107">.</op:operator><name pos:line="351" pos:column="108">getSelectedIndex</name></name><argument_list pos:line="351" pos:column="124">()</argument_list></call><op:operator pos:line="351" pos:column="126">+</op:operator><lit:literal type="string" pos:line="351" pos:column="127">" "</lit:literal><op:operator pos:line="351" pos:column="130">+</op:operator><name pos:line="351" pos:column="131">offerID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></catch></try>
					
				}</block></else></if>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name><name pos:line="357" pos:column="17">DefaultComboBoxModel</name><argument_list pos:line="357" pos:column="37">&lt;<argument><name pos:line="357" pos:column="38">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="357" pos:column="47">allIDsModel</name> <init pos:line="357" pos:column="59">= <expr><op:operator pos:line="357" pos:column="61">new</op:operator> <call><name><name pos:line="357" pos:column="65">DefaultComboBoxModel</name><argument_list pos:line="357" pos:column="85">&lt;<argument><name pos:line="357" pos:column="86">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="357" pos:column="94">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:line="358" pos:column="17">for(<init><decl><type><name pos:line="358" pos:column="21">Integer</name></type> <name pos:line="358" pos:column="29">i</name><range pos:line="358" pos:column="30">:<expr><call><name><name pos:line="358" pos:column="31">coursesOffered</name><op:operator pos:line="358" pos:column="45">.</op:operator><name pos:line="358" pos:column="46">keySet</name></name><argument_list pos:line="358" pos:column="52">()</argument_list></call></expr></range></decl></init>)<block pos:line="358" pos:column="55">{
			<expr_stmt><expr><call><name><name pos:line="359" pos:column="25">allIDsModel</name><op:operator pos:line="359" pos:column="36">.</op:operator><name pos:line="359" pos:column="37">addElement</name></name><argument_list pos:line="359" pos:column="47">(<argument><expr><name pos:line="359" pos:column="48">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		<expr_stmt><expr><call><name><name pos:line="361" pos:column="17">courseOfferIDComboBox</name><op:operator pos:line="361" pos:column="38">.</op:operator><name pos:line="361" pos:column="39">setModel</name></name><argument_list pos:line="361" pos:column="47">(<argument><expr><name pos:line="361" pos:column="48">allIDsModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="362" pos:column="17">courseOfferIDComboBox</name><op:operator pos:line="362" pos:column="38">.</op:operator><name pos:line="362" pos:column="39">setBounds</name></name><argument_list pos:line="362" pos:column="48">(<argument><expr><lit:literal type="number" pos:line="362" pos:column="49">72</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="362" pos:column="53">47</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="362" pos:column="57">166</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="362" pos:column="62">20</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="363" pos:column="17">addTeachingAssistant</name><op:operator pos:line="363" pos:column="37">.</op:operator><name pos:line="363" pos:column="38">add</name></name><argument_list pos:line="363" pos:column="41">(<argument><expr><name pos:line="363" pos:column="42">courseOfferIDComboBox</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="365" pos:column="17">JButton</name></type> <name pos:line="365" pos:column="25">btnAddTa</name> <init pos:line="365" pos:column="34">= <expr><op:operator pos:line="365" pos:column="36">new</op:operator> <call><name pos:line="365" pos:column="40">JButton</name><argument_list pos:line="365" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="365" pos:column="48">"Add TA"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="366" pos:column="17">btnAddTa</name><op:operator pos:line="366" pos:column="25">.</op:operator><name pos:line="366" pos:column="26">addActionListener</name></name><argument_list pos:line="366" pos:column="43">(<argument><expr><op:operator pos:line="366" pos:column="44">new</op:operator> <class><super><name pos:line="366" pos:column="48">ActionListener</name></super><argument_list pos:line="366" pos:column="62">()</argument_list> <block pos:line="366" pos:column="65">{
			<function><type><specifier pos:line="367" pos:column="25">public</specifier> <name pos:line="367" pos:column="32">void</name></type> <name pos:line="367" pos:column="37">actionPerformed</name><parameter_list pos:line="367" pos:column="52">(<param><decl><type><name pos:line="367" pos:column="53">ActionEvent</name></type> <name pos:line="367" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="367" pos:column="71">{
				<try pos:line="368" pos:column="33">try <block pos:line="368" pos:column="37">{
					<if pos:line="369" pos:column="41">if<condition pos:line="369" pos:column="43">(<expr><call><name><name pos:line="369" pos:column="44">taComboBox</name><op:operator pos:line="369" pos:column="54">.</op:operator><name pos:line="369" pos:column="55">getSelectedIndex</name></name><argument_list pos:line="369" pos:column="71">()</argument_list></call><op:operator pos:line="369" pos:column="73">&lt;</op:operator><lit:literal type="number" pos:line="369" pos:column="74">0</lit:literal></expr>)</condition><then><block pos:line="369" pos:column="76">{
						<expr_stmt><expr><call><name pos:line="370" pos:column="49">showMessage</name><argument_list pos:line="370" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="370" pos:column="61">"Select a TA first"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="370" pos:column="82">"Error"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<return pos:line="371" pos:column="49">return;</return>
					}</block></then></if>
					
					<if pos:line="374" pos:column="41">if<condition pos:line="374" pos:column="43">(<expr><call><name><name pos:line="374" pos:column="44">courseOfferIDComboBox</name><op:operator pos:line="374" pos:column="65">.</op:operator><name pos:line="374" pos:column="66">getSelectedIndex</name></name><argument_list pos:line="374" pos:column="82">()</argument_list></call><op:operator pos:line="374" pos:column="84">&lt;</op:operator><lit:literal type="number" pos:line="374" pos:column="85">0</lit:literal></expr>)</condition><then><block pos:line="374" pos:column="87">{
						<expr_stmt><expr><call><name pos:line="375" pos:column="49">showMessage</name><argument_list pos:line="375" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="375" pos:column="61">"Select a course first"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="375" pos:column="86">"Error"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<return pos:line="376" pos:column="49">return;</return>
					}</block></then></if>
					<decl_stmt><decl><type><name pos:line="378" pos:column="41">Student</name></type> <name pos:line="378" pos:column="49">s</name> <init pos:line="378" pos:column="51">= <expr><op:operator pos:line="378" pos:column="53">new</op:operator> <call><name pos:line="378" pos:column="57">Student</name><argument_list pos:line="378" pos:column="64">(<argument><expr><op:operator pos:line="378" pos:column="65">(</op:operator><name pos:line="378" pos:column="66">Integer</name><op:operator pos:line="378" pos:column="73">)</op:operator> <call><name><name pos:line="378" pos:column="75">taComboBox</name><op:operator pos:line="378" pos:column="85">.</op:operator><name pos:line="378" pos:column="86">getSelectedItem</name></name><argument_list pos:line="378" pos:column="101">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					
					<expr_stmt><expr><call><name><name pos:line="380" pos:column="41">DBAnnotation</name><op:operator pos:line="380" pos:column="53">.</op:operator><name pos:line="380" pos:column="54">annoate</name></name><argument_list pos:line="380" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="380" pos:column="62">"UIN"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="380" pos:column="69">"student"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="380" pos:column="80">"UIN"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="380" pos:column="87">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="381" pos:column="41">int</name></type> <name pos:line="381" pos:column="45">UIN</name> <init pos:line="381" pos:column="49">= <expr><call><name><name pos:line="381" pos:column="51">s</name><op:operator pos:line="381" pos:column="52">.</op:operator><name pos:line="381" pos:column="53">getUIN</name></name><argument_list pos:line="381" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
					
					<expr_stmt><expr><call><name><name pos:line="383" pos:column="41">TA</name><op:operator pos:line="383" pos:column="43">.</op:operator><name pos:line="383" pos:column="44">addTAtoTAtable</name></name><argument_list pos:line="383" pos:column="58">(<argument><expr><name pos:line="383" pos:column="59">UIN</name></expr></argument>,	<argument><expr><op:operator pos:line="383" pos:column="65">(</op:operator><name pos:line="383" pos:column="66">Integer</name><op:operator pos:line="383" pos:column="73">)</op:operator> <call><name><name pos:line="383" pos:column="75">courseOfferIDComboBox</name><op:operator pos:line="383" pos:column="96">.</op:operator><name pos:line="383" pos:column="97">getSelectedItem</name></name><argument_list pos:line="383" pos:column="112">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="384" pos:column="41">showMessage</name><argument_list pos:line="384" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="384" pos:column="53">"Added a TA successfully"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="384" pos:column="80">"Success"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<comment type="line" pos:line="385" pos:column="41">//DepartmentAdminUI.initializeAllTabs();</comment>
					<expr_stmt><expr><call><name pos:line="386" pos:column="41">initializeEveryThing</name><argument_list pos:line="386" pos:column="61">()</argument_list></call></expr>;</expr_stmt>
					
				}</block> <catch pos:line="388" pos:column="35">catch <parameter_list pos:line="388" pos:column="41">(<param><decl><type><name><name pos:line="388" pos:column="42">TA</name><op:operator pos:line="388" pos:column="44">.</op:operator><name pos:line="388" pos:column="45">AlreadyExistsInTAException</name></name></type> <name pos:line="388" pos:column="72">e</name></decl></param>)</parameter_list> <block pos:line="388" pos:column="75">{
					<expr_stmt><expr><call><name pos:line="389" pos:column="41">showMessage</name><argument_list pos:line="389" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="389" pos:column="53">"TA already exists"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="389" pos:column="74">"Failure"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="390" pos:column="41">e</name><op:operator pos:line="390" pos:column="42">.</op:operator><name pos:line="390" pos:column="43">printStackTrace</name></name><argument_list pos:line="390" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch> <catch pos:line="391" pos:column="35">catch <parameter_list pos:line="391" pos:column="41">(<param><decl><type><name><name pos:line="391" pos:column="42">People</name><op:operator pos:line="391" pos:column="48">.</op:operator><name pos:line="391" pos:column="49">PersonDoesNotExistException</name></name></type> <name pos:line="391" pos:column="77">e</name></decl></param>)</parameter_list> <block pos:line="391" pos:column="80">{
					<comment type="line" pos:line="392" pos:column="41">// TODO Auto-generated catch block</comment>
					<expr_stmt><expr><call><name><name pos:line="393" pos:column="41">e</name><op:operator pos:line="393" pos:column="42">.</op:operator><name pos:line="393" pos:column="43">printStackTrace</name></name><argument_list pos:line="393" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="397" pos:column="17">btnAddTa</name><op:operator pos:line="397" pos:column="25">.</op:operator><name pos:line="397" pos:column="26">setBounds</name></name><argument_list pos:line="397" pos:column="35">(<argument><expr><lit:literal type="number" pos:line="397" pos:column="36">257</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="397" pos:column="41">299</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="397" pos:column="46">111</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="397" pos:column="51">63</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="398" pos:column="17">addTeachingAssistant</name><op:operator pos:line="398" pos:column="37">.</op:operator><name pos:line="398" pos:column="38">add</name></name><argument_list pos:line="398" pos:column="41">(<argument><expr><name pos:line="398" pos:column="42">btnAddTa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="400" pos:column="17">JLabel</name></type> <name pos:line="400" pos:column="24">lblSelectCourseOffering</name> <init pos:line="400" pos:column="48">= <expr><op:operator pos:line="400" pos:column="50">new</op:operator> <call><name pos:line="400" pos:column="54">JLabel</name><argument_list pos:line="400" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="400" pos:column="61">"Select Course Offering"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="401" pos:column="17">lblSelectCourseOffering</name><op:operator pos:line="401" pos:column="40">.</op:operator><name pos:line="401" pos:column="41">setBounds</name></name><argument_list pos:line="401" pos:column="50">(<argument><expr><lit:literal type="number" pos:line="401" pos:column="51">97</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="401" pos:column="55">22</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="401" pos:column="59">113</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="401" pos:column="64">14</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="402" pos:column="17">addTeachingAssistant</name><op:operator pos:line="402" pos:column="37">.</op:operator><name pos:line="402" pos:column="38">add</name></name><argument_list pos:line="402" pos:column="41">(<argument><expr><name pos:line="402" pos:column="42">lblSelectCourseOffering</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="404" pos:column="17">JLabel</name></type> <name pos:line="404" pos:column="24">lblSelectStudent</name> <init pos:line="404" pos:column="41">= <expr><op:operator pos:line="404" pos:column="43">new</op:operator> <call><name pos:line="404" pos:column="47">JLabel</name><argument_list pos:line="404" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="404" pos:column="54">"Select student"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="405" pos:column="17">lblSelectStudent</name><op:operator pos:line="405" pos:column="33">.</op:operator><name pos:line="405" pos:column="34">setBounds</name></name><argument_list pos:line="405" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="405" pos:column="44">407</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="405" pos:column="49">22</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="405" pos:column="53">111</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="405" pos:column="58">14</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="406" pos:column="17">addTeachingAssistant</name><op:operator pos:line="406" pos:column="37">.</op:operator><name pos:line="406" pos:column="38">add</name></name><argument_list pos:line="406" pos:column="41">(<argument><expr><name pos:line="406" pos:column="42">lblSelectStudent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="408" pos:column="17">taCourseDetails</name> <op:operator pos:line="408" pos:column="33">=</op:operator> <op:operator pos:line="408" pos:column="35">new</op:operator> <call><name pos:line="408" pos:column="39">JTextPane</name><argument_list pos:line="408" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="409" pos:column="17">taCourseDetails</name><op:operator pos:line="409" pos:column="32">.</op:operator><name pos:line="409" pos:column="33">setForeground</name></name><argument_list pos:line="409" pos:column="46">(<argument><expr><name><name pos:line="409" pos:column="47">Color</name><op:operator pos:line="409" pos:column="52">.</op:operator><name pos:line="409" pos:column="53">WHITE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="410" pos:column="17">taCourseDetails</name><op:operator pos:line="410" pos:column="32">.</op:operator><name pos:line="410" pos:column="33">setBackground</name></name><argument_list pos:line="410" pos:column="46">(<argument><expr><name><name pos:line="410" pos:column="47">Color</name><op:operator pos:line="410" pos:column="52">.</op:operator><name pos:line="410" pos:column="53">BLACK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="411" pos:column="17">taCourseDetails</name><op:operator pos:line="411" pos:column="32">.</op:operator><name pos:line="411" pos:column="33">setBounds</name></name><argument_list pos:line="411" pos:column="42">(<argument><expr><lit:literal type="number" pos:line="411" pos:column="43">41</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="411" pos:column="47">104</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="411" pos:column="52">223</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="411" pos:column="57">165</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="412" pos:column="17">addTeachingAssistant</name><op:operator pos:line="412" pos:column="37">.</op:operator><name pos:line="412" pos:column="38">add</name></name><argument_list pos:line="412" pos:column="41">(<argument><expr><name pos:line="412" pos:column="42">taCourseDetails</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="414" pos:column="17">taStudentDetails</name> <op:operator pos:line="414" pos:column="34">=</op:operator> <op:operator pos:line="414" pos:column="36">new</op:operator> <call><name pos:line="414" pos:column="40">JTextPane</name><argument_list pos:line="414" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="415" pos:column="17">taStudentDetails</name><op:operator pos:line="415" pos:column="33">.</op:operator><name pos:line="415" pos:column="34">setBackground</name></name><argument_list pos:line="415" pos:column="47">(<argument><expr><name><name pos:line="415" pos:column="48">Color</name><op:operator pos:line="415" pos:column="53">.</op:operator><name pos:line="415" pos:column="54">BLACK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="416" pos:column="17">taStudentDetails</name><op:operator pos:line="416" pos:column="33">.</op:operator><name pos:line="416" pos:column="34">setForeground</name></name><argument_list pos:line="416" pos:column="47">(<argument><expr><name><name pos:line="416" pos:column="48">Color</name><op:operator pos:line="416" pos:column="53">.</op:operator><name pos:line="416" pos:column="54">WHITE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="417" pos:column="17">taStudentDetails</name><op:operator pos:line="417" pos:column="33">.</op:operator><name pos:line="417" pos:column="34">setBounds</name></name><argument_list pos:line="417" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="417" pos:column="44">356</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="417" pos:column="49">104</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="417" pos:column="54">212</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="417" pos:column="59">165</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="418" pos:column="17">addTeachingAssistant</name><op:operator pos:line="418" pos:column="37">.</op:operator><name pos:line="418" pos:column="38">add</name></name><argument_list pos:line="418" pos:column="41">(<argument><expr><name pos:line="418" pos:column="42">taStudentDetails</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="420" pos:column="17">JPanel</name></type> <name pos:line="420" pos:column="24">addAdminPanel</name> <init pos:line="420" pos:column="38">= <expr><op:operator pos:line="420" pos:column="40">new</op:operator> <call><name pos:line="420" pos:column="44">JPanel</name><argument_list pos:line="420" pos:column="50">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="421" pos:column="17">adminTabs</name><op:operator pos:line="421" pos:column="26">.</op:operator><name pos:line="421" pos:column="27">addTab</name></name><argument_list pos:line="421" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="421" pos:column="34">"Add Admin"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="421" pos:column="47">null</lit:literal></expr></argument>, <argument><expr><name pos:line="421" pos:column="53">addAdminPanel</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="421" pos:column="68">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="422" pos:column="17">addAdminPanel</name><op:operator pos:line="422" pos:column="30">.</op:operator><name pos:line="422" pos:column="31">setLayout</name></name><argument_list pos:line="422" pos:column="40">(<argument><expr><op:operator pos:line="422" pos:column="41">new</op:operator> <call><name pos:line="422" pos:column="45">GridLayout</name><argument_list pos:line="422" pos:column="55">(<argument><expr><lit:literal type="number" pos:line="422" pos:column="56">5</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="422" pos:column="59">2</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="422" pos:column="62">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="422" pos:column="65">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="424" pos:column="17">JLabel</name></type> <name pos:line="424" pos:column="24">lblAdminName</name> <init pos:line="424" pos:column="37">= <expr><op:operator pos:line="424" pos:column="39">new</op:operator> <call><name pos:line="424" pos:column="43">JLabel</name><argument_list pos:line="424" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="424" pos:column="50">"Admin Name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="425" pos:column="17">addAdminPanel</name><op:operator pos:line="425" pos:column="30">.</op:operator><name pos:line="425" pos:column="31">add</name></name><argument_list pos:line="425" pos:column="34">(<argument><expr><name pos:line="425" pos:column="35">lblAdminName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="427" pos:column="17">adminName</name> <op:operator pos:line="427" pos:column="27">=</op:operator> <op:operator pos:line="427" pos:column="29">new</op:operator> <call><name pos:line="427" pos:column="33">JTextField</name><argument_list pos:line="427" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="428" pos:column="17">addAdminPanel</name><op:operator pos:line="428" pos:column="30">.</op:operator><name pos:line="428" pos:column="31">add</name></name><argument_list pos:line="428" pos:column="34">(<argument><expr><name pos:line="428" pos:column="35">adminName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="429" pos:column="17">adminName</name><op:operator pos:line="429" pos:column="26">.</op:operator><name pos:line="429" pos:column="27">setColumns</name></name><argument_list pos:line="429" pos:column="37">(<argument><expr><lit:literal type="number" pos:line="429" pos:column="38">10</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="431" pos:column="17">JLabel</name></type> <name pos:line="431" pos:column="24">lblAdminDepartment</name> <init pos:line="431" pos:column="43">= <expr><op:operator pos:line="431" pos:column="45">new</op:operator> <call><name pos:line="431" pos:column="49">JLabel</name><argument_list pos:line="431" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="431" pos:column="56">"Admin Department"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="432" pos:column="17">addAdminPanel</name><op:operator pos:line="432" pos:column="30">.</op:operator><name pos:line="432" pos:column="31">add</name></name><argument_list pos:line="432" pos:column="34">(<argument><expr><name pos:line="432" pos:column="35">lblAdminDepartment</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="434" pos:column="17">adminDeptCombo</name> <op:operator pos:line="434" pos:column="32">=</op:operator> <op:operator pos:line="434" pos:column="34">new</op:operator> <call><name><name pos:line="434" pos:column="38">JComboBox</name><argument_list pos:line="434" pos:column="47">&lt;<argument><name pos:line="434" pos:column="48">String</name></argument>&gt;</argument_list></name><argument_list pos:line="434" pos:column="55">(<argument><expr><op:operator pos:line="434" pos:column="56">new</op:operator> <call><name><name pos:line="434" pos:column="60">DefaultComboBoxModel</name><argument_list pos:line="434" pos:column="80">&lt;<argument><name pos:line="434" pos:column="81">String</name></argument>&gt;</argument_list></name><argument_list pos:line="434" pos:column="88">(<argument><expr><name pos:line="434" pos:column="89">departmentNameArray</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="435" pos:column="17">addAdminPanel</name><op:operator pos:line="435" pos:column="30">.</op:operator><name pos:line="435" pos:column="31">add</name></name><argument_list pos:line="435" pos:column="34">(<argument><expr><name pos:line="435" pos:column="35">adminDeptCombo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="437" pos:column="17">JLabel</name></type> <name pos:line="437" pos:column="24">lblOfficehours</name> <init pos:line="437" pos:column="39">= <expr><op:operator pos:line="437" pos:column="41">new</op:operator> <call><name pos:line="437" pos:column="45">JLabel</name><argument_list pos:line="437" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="437" pos:column="52">"OfficeHours"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="438" pos:column="17">addAdminPanel</name><op:operator pos:line="438" pos:column="30">.</op:operator><name pos:line="438" pos:column="31">add</name></name><argument_list pos:line="438" pos:column="34">(<argument><expr><name pos:line="438" pos:column="35">lblOfficehours</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="440" pos:column="17">JLabel</name></type> <name pos:line="440" pos:column="24">lblToBeDecided</name> <init pos:line="440" pos:column="39">= <expr><op:operator pos:line="440" pos:column="41">new</op:operator> <call><name pos:line="440" pos:column="45">JLabel</name><argument_list pos:line="440" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="440" pos:column="52">"To Be Decided"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="441" pos:column="17">addAdminPanel</name><op:operator pos:line="441" pos:column="30">.</op:operator><name pos:line="441" pos:column="31">add</name></name><argument_list pos:line="441" pos:column="34">(<argument><expr><name pos:line="441" pos:column="35">lblToBeDecided</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="443" pos:column="17">JLabel</name></type> <name pos:line="443" pos:column="24">lblOfficeLocation_1</name> <init pos:line="443" pos:column="44">= <expr><op:operator pos:line="443" pos:column="46">new</op:operator> <call><name pos:line="443" pos:column="50">JLabel</name><argument_list pos:line="443" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="443" pos:column="57">"Office Location"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="444" pos:column="17">addAdminPanel</name><op:operator pos:line="444" pos:column="30">.</op:operator><name pos:line="444" pos:column="31">add</name></name><argument_list pos:line="444" pos:column="34">(<argument><expr><name pos:line="444" pos:column="35">lblOfficeLocation_1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="446" pos:column="17">JLabel</name></type> <name pos:line="446" pos:column="24">lblToBeDecided_1</name> <init pos:line="446" pos:column="41">= <expr><op:operator pos:line="446" pos:column="43">new</op:operator> <call><name pos:line="446" pos:column="47">JLabel</name><argument_list pos:line="446" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="446" pos:column="54">"To Be Decided"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="447" pos:column="17">addAdminPanel</name><op:operator pos:line="447" pos:column="30">.</op:operator><name pos:line="447" pos:column="31">add</name></name><argument_list pos:line="447" pos:column="34">(<argument><expr><name pos:line="447" pos:column="35">lblToBeDecided_1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="449" pos:column="17">JLabel</name></type> <name pos:line="449" pos:column="24">lblConfirmChanges</name> <init pos:line="449" pos:column="42">= <expr><op:operator pos:line="449" pos:column="44">new</op:operator> <call><name pos:line="449" pos:column="48">JLabel</name><argument_list pos:line="449" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="449" pos:column="55">"Confirm Changes"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="450" pos:column="17">addAdminPanel</name><op:operator pos:line="450" pos:column="30">.</op:operator><name pos:line="450" pos:column="31">add</name></name><argument_list pos:line="450" pos:column="34">(<argument><expr><name pos:line="450" pos:column="35">lblConfirmChanges</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="452" pos:column="17">JButton</name></type> <name pos:line="452" pos:column="25">btnAddAdmin</name> <init pos:line="452" pos:column="37">= <expr><op:operator pos:line="452" pos:column="39">new</op:operator> <call><name pos:line="452" pos:column="43">JButton</name><argument_list pos:line="452" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="452" pos:column="51">"Add Admin"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="453" pos:column="17">btnAddAdmin</name><op:operator pos:line="453" pos:column="28">.</op:operator><name pos:line="453" pos:column="29">addActionListener</name></name><argument_list pos:line="453" pos:column="46">(<argument><expr><op:operator pos:line="453" pos:column="47">new</op:operator> <class><super><name pos:line="453" pos:column="51">ActionListener</name></super><argument_list pos:line="453" pos:column="65">()</argument_list> <block pos:line="453" pos:column="68">{
			<function><type><specifier pos:line="454" pos:column="25">public</specifier> <name pos:line="454" pos:column="32">void</name></type> <name pos:line="454" pos:column="37">actionPerformed</name><parameter_list pos:line="454" pos:column="52">(<param><decl><type><name pos:line="454" pos:column="53">ActionEvent</name></type> <name pos:line="454" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="454" pos:column="71">{
				<decl_stmt><decl><type><name pos:line="455" pos:column="33">boolean</name></type> <name pos:line="455" pos:column="41">flag</name> <init pos:line="455" pos:column="46">= <expr><call><name pos:line="455" pos:column="48">addAdmin</name><argument_list pos:line="455" pos:column="56">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="456" pos:column="33">if<condition pos:line="456" pos:column="35">(<expr><name pos:line="456" pos:column="36">flag</name></expr>)</condition><then><block pos:line="456" pos:column="41">{
					<expr_stmt><expr><call><name pos:line="457" pos:column="41">showMessage</name><argument_list pos:line="457" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="457" pos:column="53">"Added a adming successfully"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="457" pos:column="84">"Success"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="458" pos:column="41">Database</name><op:operator pos:line="458" pos:column="49">.</op:operator><name pos:line="458" pos:column="50">commitTransaction</name></name><argument_list pos:line="458" pos:column="67">(<argument><expr><call><name><name pos:line="458" pos:column="68">Database</name><op:operator pos:line="458" pos:column="76">.</op:operator><name pos:line="458" pos:column="77">getConnection</name></name><argument_list pos:line="458" pos:column="90">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="459" pos:column="41">initializeEveryThing</name><argument_list pos:line="459" pos:column="61">()</argument_list></call></expr>;</expr_stmt>
					
				}</block></then>
				
				<else pos:line="463" pos:column="33">else<block pos:line="463" pos:column="37">{
					<expr_stmt><expr><call><name pos:line="464" pos:column="41">showMessage</name><argument_list pos:line="464" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="464" pos:column="53">"Not added admin"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="464" pos:column="72">"Failure"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></else></if>
				
				
				
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="471" pos:column="17">addAdminPanel</name><op:operator pos:line="471" pos:column="30">.</op:operator><name pos:line="471" pos:column="31">add</name></name><argument_list pos:line="471" pos:column="34">(<argument><expr><name pos:line="471" pos:column="35">btnAddAdmin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		
		
		
		<decl_stmt><decl><type><specifier pos:line="476" pos:column="17">final</specifier> <name pos:line="476" pos:column="23">JTabbedPane</name></type> <name pos:line="476" pos:column="35">courseSchedule</name> <init pos:line="476" pos:column="50">= <expr><op:operator pos:line="476" pos:column="52">new</op:operator> <call><name pos:line="476" pos:column="56">JTabbedPane</name><argument_list pos:line="476" pos:column="67">(<argument><expr><name><name pos:line="476" pos:column="68">JTabbedPane</name><op:operator pos:line="476" pos:column="79">.</op:operator><name pos:line="476" pos:column="80">TOP</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="477" pos:column="17">managePeople</name><op:operator pos:line="477" pos:column="29">.</op:operator><name pos:line="477" pos:column="30">addTab</name></name><argument_list pos:line="477" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="477" pos:column="37">"Course Scheduling"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="477" pos:column="58">null</lit:literal></expr></argument>, <argument><expr><name pos:line="477" pos:column="64">courseSchedule</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="477" pos:column="80">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="479" pos:column="17">JPanel</name></type> <name pos:line="479" pos:column="24">currentScheduleTable</name> <init pos:line="479" pos:column="45">= <expr><op:operator pos:line="479" pos:column="47">new</op:operator> <call><name pos:line="479" pos:column="51">JPanel</name><argument_list pos:line="479" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="480" pos:column="17">currentScheduleTable</name><op:operator pos:line="480" pos:column="37">.</op:operator><name pos:line="480" pos:column="38">setSize</name></name><argument_list pos:line="480" pos:column="45">(<argument><expr><name pos:line="480" pos:column="46">HEIGHT</name></expr></argument>, <argument><expr><name pos:line="480" pos:column="54">WIDTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="481" pos:column="17">courseSchedule</name><op:operator pos:line="481" pos:column="31">.</op:operator><name pos:line="481" pos:column="32">addTab</name></name><argument_list pos:line="481" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="481" pos:column="39">"Current Schedule"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="481" pos:column="59">null</lit:literal></expr></argument>, <argument><expr><name pos:line="481" pos:column="65">currentScheduleTable</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="481" pos:column="87">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="482" pos:column="17">courseSchedule</name><op:operator pos:line="482" pos:column="31">.</op:operator><name pos:line="482" pos:column="32">setEnabledAt</name></name><argument_list pos:line="482" pos:column="44">(<argument><expr><lit:literal type="number" pos:line="482" pos:column="45">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="482" pos:column="48">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="483" pos:column="17">currentScheduleTable</name><op:operator pos:line="483" pos:column="37">.</op:operator><name pos:line="483" pos:column="38">setLayout</name></name><argument_list pos:line="483" pos:column="47">(<argument><expr><lit:literal type="null" pos:line="483" pos:column="48">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="485" pos:column="17">JLabel</name></type> <name pos:line="485" pos:column="24">lblCourseName</name> <init pos:line="485" pos:column="38">= <expr><op:operator pos:line="485" pos:column="40">new</op:operator> <call><name pos:line="485" pos:column="44">JLabel</name><argument_list pos:line="485" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="485" pos:column="51">"Course Name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="486" pos:column="17">lblCourseName</name><op:operator pos:line="486" pos:column="30">.</op:operator><name pos:line="486" pos:column="31">setBounds</name></name><argument_list pos:line="486" pos:column="40">(<argument><expr><lit:literal type="number" pos:line="486" pos:column="41">2</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="486" pos:column="44">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="486" pos:column="47">125</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="486" pos:column="52">72</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="487" pos:column="17">currentScheduleTable</name><op:operator pos:line="487" pos:column="37">.</op:operator><name pos:line="487" pos:column="38">add</name></name><argument_list pos:line="487" pos:column="41">(<argument><expr><name pos:line="487" pos:column="42">lblCourseName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="489" pos:column="17">JLabel</name></type> <name pos:line="489" pos:column="24">lblCourseOfferid</name> <init pos:line="489" pos:column="41">= <expr><op:operator pos:line="489" pos:column="43">new</op:operator> <call><name pos:line="489" pos:column="47">JLabel</name><argument_list pos:line="489" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="489" pos:column="54">"Course OfferID"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="490" pos:column="17">lblCourseOfferid</name><op:operator pos:line="490" pos:column="33">.</op:operator><name pos:line="490" pos:column="34">setBounds</name></name><argument_list pos:line="490" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="490" pos:column="44">137</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="490" pos:column="49">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="490" pos:column="52">125</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="490" pos:column="57">72</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="491" pos:column="17">currentScheduleTable</name><op:operator pos:line="491" pos:column="37">.</op:operator><name pos:line="491" pos:column="38">add</name></name><argument_list pos:line="491" pos:column="41">(<argument><expr><name pos:line="491" pos:column="42">lblCourseOfferid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="493" pos:column="17">JLabel</name></type> <name pos:line="493" pos:column="24">lblTaughtBy</name> <init pos:line="493" pos:column="36">= <expr><op:operator pos:line="493" pos:column="38">new</op:operator> <call><name pos:line="493" pos:column="42">JLabel</name><argument_list pos:line="493" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="493" pos:column="49">"Taught By"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="494" pos:column="17">lblTaughtBy</name><op:operator pos:line="494" pos:column="28">.</op:operator><name pos:line="494" pos:column="29">setBounds</name></name><argument_list pos:line="494" pos:column="38">(<argument><expr><lit:literal type="number" pos:line="494" pos:column="39">286</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="494" pos:column="44">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="494" pos:column="47">125</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="494" pos:column="52">72</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="495" pos:column="17">currentScheduleTable</name><op:operator pos:line="495" pos:column="37">.</op:operator><name pos:line="495" pos:column="38">add</name></name><argument_list pos:line="495" pos:column="41">(<argument><expr><name pos:line="495" pos:column="42">lblTaughtBy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="497" pos:column="17">JLabel</name></type> <name pos:line="497" pos:column="24">lblClassLocation</name> <init pos:line="497" pos:column="41">= <expr><op:operator pos:line="497" pos:column="43">new</op:operator> <call><name pos:line="497" pos:column="47">JLabel</name><argument_list pos:line="497" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="497" pos:column="54">"Class location"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="498" pos:column="17">lblClassLocation</name><op:operator pos:line="498" pos:column="33">.</op:operator><name pos:line="498" pos:column="34">setBounds</name></name><argument_list pos:line="498" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="498" pos:column="44">437</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="498" pos:column="49">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="498" pos:column="52">125</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="498" pos:column="57">72</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="499" pos:column="17">currentScheduleTable</name><op:operator pos:line="499" pos:column="37">.</op:operator><name pos:line="499" pos:column="38">add</name></name><argument_list pos:line="499" pos:column="41">(<argument><expr><name pos:line="499" pos:column="42">lblClassLocation</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="501" pos:column="17">JLabel</name></type> <name pos:line="501" pos:column="24">lblClassName</name> <init pos:line="501" pos:column="37">= <expr><op:operator pos:line="501" pos:column="39">new</op:operator> <call><name pos:line="501" pos:column="43">JLabel</name><argument_list pos:line="501" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="501" pos:column="50">"Class name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="502" pos:column="17">lblClassName</name><op:operator pos:line="502" pos:column="29">.</op:operator><name pos:line="502" pos:column="30">setBounds</name></name><argument_list pos:line="502" pos:column="39">(<argument><expr><lit:literal type="number" pos:line="502" pos:column="40">592</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="502" pos:column="45">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="502" pos:column="48">125</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="502" pos:column="53">72</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="503" pos:column="17">currentScheduleTable</name><op:operator pos:line="503" pos:column="37">.</op:operator><name pos:line="503" pos:column="38">add</name></name><argument_list pos:line="503" pos:column="41">(<argument><expr><name pos:line="503" pos:column="42">lblClassName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="505" pos:column="17">JLabel</name></type> <name pos:line="505" pos:column="24">lblTiming</name> <init pos:line="505" pos:column="34">= <expr><op:operator pos:line="505" pos:column="36">new</op:operator> <call><name pos:line="505" pos:column="40">JLabel</name><argument_list pos:line="505" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="505" pos:column="47">"Timing"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="506" pos:column="17">lblTiming</name><op:operator pos:line="506" pos:column="26">.</op:operator><name pos:line="506" pos:column="27">setBounds</name></name><argument_list pos:line="506" pos:column="36">(<argument><expr><lit:literal type="number" pos:line="506" pos:column="37">778</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="506" pos:column="42">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="506" pos:column="45">125</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="506" pos:column="50">72</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="507" pos:column="17">currentScheduleTable</name><op:operator pos:line="507" pos:column="37">.</op:operator><name pos:line="507" pos:column="38">add</name></name><argument_list pos:line="507" pos:column="41">(<argument><expr><name pos:line="507" pos:column="42">lblTiming</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="509" pos:column="17">JScrollPane</name></type> <name pos:line="509" pos:column="29">courseNameScrollPane</name> <init pos:line="509" pos:column="50">= <expr><op:operator pos:line="509" pos:column="52">new</op:operator> <call><name pos:line="509" pos:column="56">JScrollPane</name><argument_list pos:line="509" pos:column="67">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="510" pos:column="17">courseNameList</name>  <op:operator pos:line="510" pos:column="33">=</op:operator> <op:operator pos:line="510" pos:column="35">new</op:operator> <call><name><name pos:line="510" pos:column="39">JList</name><argument_list pos:line="510" pos:column="44">&lt;<argument><name pos:line="510" pos:column="45">String</name></argument>&gt;</argument_list></name><argument_list pos:line="510" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="511" pos:column="17">courseNameList</name><op:operator pos:line="511" pos:column="31">.</op:operator><name pos:line="511" pos:column="32">setSelectedIndex</name></name><argument_list pos:line="511" pos:column="48">(<argument><expr><lit:literal type="number" pos:line="511" pos:column="49">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="512" pos:column="17">courseNameScrollPane</name><op:operator pos:line="512" pos:column="37">.</op:operator><name pos:line="512" pos:column="38">getViewport</name></name><argument_list pos:line="512" pos:column="49">()</argument_list></call><op:operator pos:line="512" pos:column="51">.</op:operator><call><name pos:line="512" pos:column="52">setView</name><argument_list pos:line="512" pos:column="59">(<argument><expr><name pos:line="512" pos:column="60">courseNameList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="513" pos:column="17">courseNameScrollPane</name><op:operator pos:line="513" pos:column="37">.</op:operator><name pos:line="513" pos:column="38">setBounds</name></name><argument_list pos:line="513" pos:column="47">(<argument><expr><lit:literal type="number" pos:line="513" pos:column="48">2</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="513" pos:column="51">74</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="513" pos:column="55">125</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="513" pos:column="60">211</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="514" pos:column="17">currentScheduleTable</name><op:operator pos:line="514" pos:column="37">.</op:operator><name pos:line="514" pos:column="38">add</name></name><argument_list pos:line="514" pos:column="41">(<argument><expr><name pos:line="514" pos:column="42">courseNameScrollPane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="516" pos:column="17">JScrollPane</name></type> <name pos:line="516" pos:column="29">courseOfferIDScrollPane</name> <init pos:line="516" pos:column="53">= <expr><op:operator pos:line="516" pos:column="55">new</op:operator> <call><name pos:line="516" pos:column="59">JScrollPane</name><argument_list pos:line="516" pos:column="70">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="517" pos:column="17">courseOfferIDList</name> <op:operator pos:line="517" pos:column="35">=</op:operator> <op:operator pos:line="517" pos:column="37">new</op:operator> <call><name><name pos:line="517" pos:column="41">JList</name><argument_list pos:line="517" pos:column="46">&lt;<argument><name pos:line="517" pos:column="47">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="517" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="518" pos:column="17">courseOfferIDList</name><op:operator pos:line="518" pos:column="34">.</op:operator><name pos:line="518" pos:column="35">setSelectedIndex</name></name><argument_list pos:line="518" pos:column="51">(<argument><expr><lit:literal type="number" pos:line="518" pos:column="52">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="519" pos:column="17">courseOfferIDScrollPane</name><op:operator pos:line="519" pos:column="40">.</op:operator><name pos:line="519" pos:column="41">getViewport</name></name><argument_list pos:line="519" pos:column="52">()</argument_list></call><op:operator pos:line="519" pos:column="54">.</op:operator><call><name pos:line="519" pos:column="55">setView</name><argument_list pos:line="519" pos:column="62">(<argument><expr><name pos:line="519" pos:column="63">courseOfferIDList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="520" pos:column="17">courseOfferIDScrollPane</name><op:operator pos:line="520" pos:column="40">.</op:operator><name pos:line="520" pos:column="41">setBounds</name></name><argument_list pos:line="520" pos:column="50">(<argument><expr><lit:literal type="number" pos:line="520" pos:column="51">139</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="520" pos:column="56">74</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="520" pos:column="60">125</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="520" pos:column="65">211</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="521" pos:column="17">currentScheduleTable</name><op:operator pos:line="521" pos:column="37">.</op:operator><name pos:line="521" pos:column="38">add</name></name><argument_list pos:line="521" pos:column="41">(<argument><expr><name pos:line="521" pos:column="42">courseOfferIDScrollPane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="523" pos:column="17">JScrollPane</name></type> <name pos:line="523" pos:column="29">taughtByScrollPane</name> <init pos:line="523" pos:column="48">= <expr><op:operator pos:line="523" pos:column="50">new</op:operator> <call><name pos:line="523" pos:column="54">JScrollPane</name><argument_list pos:line="523" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="524" pos:column="17">professorNameList</name> <op:operator pos:line="524" pos:column="35">=</op:operator> <op:operator pos:line="524" pos:column="37">new</op:operator> <call><name><name pos:line="524" pos:column="41">JList</name><argument_list pos:line="524" pos:column="46">&lt;<argument><name pos:line="524" pos:column="47">String</name></argument>&gt;</argument_list></name><argument_list pos:line="524" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="525" pos:column="17">professorNameList</name><op:operator pos:line="525" pos:column="34">.</op:operator><name pos:line="525" pos:column="35">setSelectedIndex</name></name><argument_list pos:line="525" pos:column="51">(<argument><expr><lit:literal type="number" pos:line="525" pos:column="52">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="526" pos:column="17">taughtByScrollPane</name><op:operator pos:line="526" pos:column="35">.</op:operator><name pos:line="526" pos:column="36">getViewport</name></name><argument_list pos:line="526" pos:column="47">()</argument_list></call><op:operator pos:line="526" pos:column="49">.</op:operator><call><name pos:line="526" pos:column="50">setView</name><argument_list pos:line="526" pos:column="57">(<argument><expr><name pos:line="526" pos:column="58">professorNameList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="527" pos:column="17">taughtByScrollPane</name><op:operator pos:line="527" pos:column="35">.</op:operator><name pos:line="527" pos:column="36">setBounds</name></name><argument_list pos:line="527" pos:column="45">(<argument><expr><lit:literal type="number" pos:line="527" pos:column="46">286</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="527" pos:column="51">74</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="527" pos:column="55">125</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="527" pos:column="60">211</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="528" pos:column="17">currentScheduleTable</name><op:operator pos:line="528" pos:column="37">.</op:operator><name pos:line="528" pos:column="38">add</name></name><argument_list pos:line="528" pos:column="41">(<argument><expr><name pos:line="528" pos:column="42">taughtByScrollPane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="530" pos:column="17">JScrollPane</name></type> <name pos:line="530" pos:column="29">classLocationScrollPane</name> <init pos:line="530" pos:column="53">= <expr><op:operator pos:line="530" pos:column="55">new</op:operator> <call><name pos:line="530" pos:column="59">JScrollPane</name><argument_list pos:line="530" pos:column="70">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="531" pos:column="17">classLocationList</name> <op:operator pos:line="531" pos:column="35">=</op:operator> <op:operator pos:line="531" pos:column="37">new</op:operator> <call><name><name pos:line="531" pos:column="41">JList</name><argument_list pos:line="531" pos:column="46">&lt;<argument><name pos:line="531" pos:column="47">String</name></argument>&gt;</argument_list></name><argument_list pos:line="531" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="532" pos:column="17">classLocationList</name><op:operator pos:line="532" pos:column="34">.</op:operator><name pos:line="532" pos:column="35">setSelectedIndex</name></name><argument_list pos:line="532" pos:column="51">(<argument><expr><lit:literal type="number" pos:line="532" pos:column="52">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="533" pos:column="17">classLocationScrollPane</name><op:operator pos:line="533" pos:column="40">.</op:operator><name pos:line="533" pos:column="41">getViewport</name></name><argument_list pos:line="533" pos:column="52">()</argument_list></call><op:operator pos:line="533" pos:column="54">.</op:operator><call><name pos:line="533" pos:column="55">setView</name><argument_list pos:line="533" pos:column="62">(<argument><expr><name pos:line="533" pos:column="63">classLocationList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="534" pos:column="17">classLocationScrollPane</name><op:operator pos:line="534" pos:column="40">.</op:operator><name pos:line="534" pos:column="41">setBounds</name></name><argument_list pos:line="534" pos:column="50">(<argument><expr><lit:literal type="number" pos:line="534" pos:column="51">437</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="534" pos:column="56">74</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="534" pos:column="60">125</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="534" pos:column="65">211</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="535" pos:column="17">currentScheduleTable</name><op:operator pos:line="535" pos:column="37">.</op:operator><name pos:line="535" pos:column="38">add</name></name><argument_list pos:line="535" pos:column="41">(<argument><expr><name pos:line="535" pos:column="42">classLocationScrollPane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="537" pos:column="17">JScrollPane</name></type> <name pos:line="537" pos:column="29">classNameScrollPane</name> <init pos:line="537" pos:column="49">= <expr><op:operator pos:line="537" pos:column="51">new</op:operator> <call><name pos:line="537" pos:column="55">JScrollPane</name><argument_list pos:line="537" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="538" pos:column="17">classNameList</name> <op:operator pos:line="538" pos:column="31">=</op:operator> <op:operator pos:line="538" pos:column="33">new</op:operator> <call><name><name pos:line="538" pos:column="37">JList</name><argument_list pos:line="538" pos:column="42">&lt;<argument><name pos:line="538" pos:column="43">String</name></argument>&gt;</argument_list></name><argument_list pos:line="538" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="539" pos:column="17">classNameList</name><op:operator pos:line="539" pos:column="30">.</op:operator><name pos:line="539" pos:column="31">setSelectedIndex</name></name><argument_list pos:line="539" pos:column="47">(<argument><expr><lit:literal type="number" pos:line="539" pos:column="48">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="540" pos:column="17">classNameScrollPane</name><op:operator pos:line="540" pos:column="36">.</op:operator><name pos:line="540" pos:column="37">getViewport</name></name><argument_list pos:line="540" pos:column="48">()</argument_list></call><op:operator pos:line="540" pos:column="50">.</op:operator><call><name pos:line="540" pos:column="51">setView</name><argument_list pos:line="540" pos:column="58">(<argument><expr><name pos:line="540" pos:column="59">classNameList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="541" pos:column="17">classNameScrollPane</name><op:operator pos:line="541" pos:column="36">.</op:operator><name pos:line="541" pos:column="37">setBounds</name></name><argument_list pos:line="541" pos:column="46">(<argument><expr><lit:literal type="number" pos:line="541" pos:column="47">592</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="541" pos:column="52">74</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="541" pos:column="56">125</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="541" pos:column="61">211</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="542" pos:column="17">currentScheduleTable</name><op:operator pos:line="542" pos:column="37">.</op:operator><name pos:line="542" pos:column="38">add</name></name><argument_list pos:line="542" pos:column="41">(<argument><expr><name pos:line="542" pos:column="42">classNameScrollPane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="544" pos:column="17">JScrollPane</name></type> <name pos:line="544" pos:column="29">timingScrollPane</name> <init pos:line="544" pos:column="46">= <expr><op:operator pos:line="544" pos:column="48">new</op:operator> <call><name pos:line="544" pos:column="52">JScrollPane</name><argument_list pos:line="544" pos:column="63">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="545" pos:column="17">classTimingList</name> <op:operator pos:line="545" pos:column="33">=</op:operator> <op:operator pos:line="545" pos:column="35">new</op:operator> <call><name><name pos:line="545" pos:column="39">JList</name><argument_list pos:line="545" pos:column="44">&lt;<argument><name pos:line="545" pos:column="45">String</name></argument>&gt;</argument_list></name><argument_list pos:line="545" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="546" pos:column="17">classTimingList</name><op:operator pos:line="546" pos:column="32">.</op:operator><name pos:line="546" pos:column="33">setSelectedIndex</name></name><argument_list pos:line="546" pos:column="49">(<argument><expr><lit:literal type="number" pos:line="546" pos:column="50">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="547" pos:column="17">timingScrollPane</name><op:operator pos:line="547" pos:column="33">.</op:operator><name pos:line="547" pos:column="34">getViewport</name></name><argument_list pos:line="547" pos:column="45">()</argument_list></call><op:operator pos:line="547" pos:column="47">.</op:operator><call><name pos:line="547" pos:column="48">setView</name><argument_list pos:line="547" pos:column="55">(<argument><expr><name pos:line="547" pos:column="56">classTimingList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="548" pos:column="17">timingScrollPane</name><op:operator pos:line="548" pos:column="33">.</op:operator><name pos:line="548" pos:column="34">setBounds</name></name><argument_list pos:line="548" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="548" pos:column="44">737</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="548" pos:column="49">74</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="548" pos:column="53">166</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="548" pos:column="58">211</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="549" pos:column="17">currentScheduleTable</name><op:operator pos:line="549" pos:column="37">.</op:operator><name pos:line="549" pos:column="38">add</name></name><argument_list pos:line="549" pos:column="41">(<argument><expr><name pos:line="549" pos:column="42">timingScrollPane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><specifier pos:line="551" pos:column="17">final</specifier> <name pos:line="551" pos:column="23">JButton</name></type> <name pos:line="551" pos:column="31">btnNewButton</name> <init pos:line="551" pos:column="44">= <expr><op:operator pos:line="551" pos:column="46">new</op:operator> <call><name pos:line="551" pos:column="50">JButton</name><argument_list pos:line="551" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="551" pos:column="58">"Reschedule all courses"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="552" pos:column="17">btnNewButton</name><op:operator pos:line="552" pos:column="29">.</op:operator><name pos:line="552" pos:column="30">setBounds</name></name><argument_list pos:line="552" pos:column="39">(<argument><expr><lit:literal type="number" pos:line="552" pos:column="40">214</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="552" pos:column="45">305</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="552" pos:column="50">356</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="552" pos:column="55">41</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="553" pos:column="17">currentScheduleTable</name><op:operator pos:line="553" pos:column="37">.</op:operator><name pos:line="553" pos:column="38">add</name></name><argument_list pos:line="553" pos:column="41">(<argument><expr><name pos:line="553" pos:column="42">btnNewButton</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="554" pos:column="17">btnNewButton</name><op:operator pos:line="554" pos:column="29">.</op:operator><name pos:line="554" pos:column="30">addActionListener</name></name><argument_list pos:line="554" pos:column="47">(<argument><expr><op:operator pos:line="554" pos:column="48">new</op:operator> <class><super><name pos:line="554" pos:column="52">ActionListener</name></super><argument_list pos:line="554" pos:column="66">()</argument_list> <block pos:line="554" pos:column="69">{
			<function><type><specifier pos:line="555" pos:column="25">public</specifier> <name pos:line="555" pos:column="32">void</name></type> <name pos:line="555" pos:column="37">actionPerformed</name><parameter_list pos:line="555" pos:column="52">(<param><decl><type><name pos:line="555" pos:column="53">ActionEvent</name></type> <name pos:line="555" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="555" pos:column="71">{
				<expr_stmt><expr><call><name><name pos:line="556" pos:column="33">btnNewButton</name><op:operator pos:line="556" pos:column="45">.</op:operator><name pos:line="556" pos:column="46">setText</name></name><argument_list pos:line="556" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="556" pos:column="54">"Refreshing and rescheduling"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="557" pos:column="33">JDialog</name></type> <name pos:line="557" pos:column="41">jd</name> <init pos:line="557" pos:column="44">= <expr><op:operator pos:line="557" pos:column="46">new</op:operator> <call><name pos:line="557" pos:column="50">JDialog</name><argument_list pos:line="557" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="558" pos:column="33">jd</name><op:operator pos:line="558" pos:column="35">.</op:operator><name pos:line="558" pos:column="36">setTitle</name></name><argument_list pos:line="558" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="558" pos:column="45">"Rescheduling, please wait"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="559" pos:column="33">jd</name><op:operator pos:line="559" pos:column="35">.</op:operator><name pos:line="559" pos:column="36">setBounds</name></name><argument_list pos:line="559" pos:column="45">(<argument><expr><call><name pos:line="559" pos:column="46">getBounds</name><argument_list pos:line="559" pos:column="55">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="560" pos:column="33">jd</name><op:operator pos:line="560" pos:column="35">.</op:operator><name pos:line="560" pos:column="36">setVisible</name></name><argument_list pos:line="560" pos:column="46">(<argument><expr><lit:literal type="boolean" pos:line="560" pos:column="47">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>				
				<expr_stmt><expr><call><name><name pos:line="561" pos:column="33">courseSchedule</name><op:operator pos:line="561" pos:column="47">.</op:operator><name pos:line="561" pos:column="48">setEnabled</name></name><argument_list pos:line="561" pos:column="58">(<argument><expr><lit:literal type="boolean" pos:line="561" pos:column="59">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="562" pos:column="33">CourseSchedule</name><op:operator pos:line="562" pos:column="47">.</op:operator><name pos:line="562" pos:column="48">scheduleAllCurrentCourses</name></name><argument_list pos:line="562" pos:column="73">()</argument_list></call></expr>;</expr_stmt>
				<try pos:line="563" pos:column="33">try <block pos:line="563" pos:column="37">{
					<expr_stmt><expr><call><name><name pos:line="564" pos:column="41">Thread</name><op:operator pos:line="564" pos:column="47">.</op:operator><name pos:line="564" pos:column="48">sleep</name></name><argument_list pos:line="564" pos:column="53">(<argument><expr><lit:literal type="number" pos:line="564" pos:column="54">5000</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block> <catch pos:line="565" pos:column="35">catch <parameter_list pos:line="565" pos:column="41">(<param><decl><type><name pos:line="565" pos:column="42">InterruptedException</name></type> <name pos:line="565" pos:column="63">e</name></decl></param>)</parameter_list> <block pos:line="565" pos:column="66">{
					<comment type="line" pos:line="566" pos:column="41">// TODO Auto-generated catch block</comment>
					<expr_stmt><expr><call><name><name pos:line="567" pos:column="41">e</name><op:operator pos:line="567" pos:column="42">.</op:operator><name pos:line="567" pos:column="43">printStackTrace</name></name><argument_list pos:line="567" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
				<expr_stmt><expr><call><name pos:line="569" pos:column="33">initializeBackgroundData</name><argument_list pos:line="569" pos:column="57">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="570" pos:column="33">initializeJListsForCourseSchedule</name><argument_list pos:line="570" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
				<if pos:line="571" pos:column="33">if<condition pos:line="571" pos:column="35">(<expr><call><name><name pos:line="571" pos:column="36">courseScheduledCombo</name><op:operator pos:line="571" pos:column="56">.</op:operator><name pos:line="571" pos:column="57">getModel</name></name><argument_list pos:line="571" pos:column="65">()</argument_list></call><op:operator pos:line="571" pos:column="67">.</op:operator><call><name pos:line="571" pos:column="68">getSize</name><argument_list pos:line="571" pos:column="75">()</argument_list></call><op:operator pos:line="571" pos:column="77">&gt;</op:operator><lit:literal type="number" pos:line="571" pos:column="78">0</lit:literal></expr>)</condition><then><block pos:line="571" pos:column="80">{
					<expr_stmt><expr><call><name pos:line="572" pos:column="41">initilizeSingleRescheduleTab</name><argument_list pos:line="572" pos:column="69">(<argument><expr><op:operator pos:line="572" pos:column="70">(</op:operator><name pos:line="572" pos:column="71">Integer</name><op:operator pos:line="572" pos:column="78">)</op:operator><call><name><name pos:line="572" pos:column="79">courseScheduledCombo</name><op:operator pos:line="572" pos:column="99">.</op:operator><name pos:line="572" pos:column="100">getSelectedItem</name></name><argument_list pos:line="572" pos:column="115">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="573" pos:column="41">ClassroomLocation</name></type> <name pos:line="573" pos:column="59">l</name> <init pos:line="573" pos:column="61">= <expr><call><name><name pos:line="573" pos:column="63">ClassroomLocation</name><op:operator pos:line="573" pos:column="80">.</op:operator><name pos:line="573" pos:column="81">valueOf</name></name><argument_list pos:line="573" pos:column="88">(<argument><expr><op:operator pos:line="573" pos:column="89">(</op:operator><name pos:line="573" pos:column="90">String</name><op:operator pos:line="573" pos:column="96">)</op:operator><call><name><name pos:line="573" pos:column="97">classLocationCombo</name><op:operator pos:line="573" pos:column="115">.</op:operator><name pos:line="573" pos:column="116">getSelectedItem</name></name><argument_list pos:line="573" pos:column="131">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="574" pos:column="41">int</name></type> <name pos:line="574" pos:column="45">timeSlotType</name> <init pos:line="574" pos:column="58">= <expr><call><name><name pos:line="574" pos:column="60">timeSlotTypeCombo</name><op:operator pos:line="574" pos:column="77">.</op:operator><name pos:line="574" pos:column="78">getSelectedIndex</name></name><argument_list pos:line="574" pos:column="94">()</argument_list></call><op:operator pos:line="574" pos:column="96">+</op:operator><lit:literal type="number" pos:line="574" pos:column="97">1</lit:literal></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="575" pos:column="41">CourseOffered</name></type> <name pos:line="575" pos:column="55">co</name> <init pos:line="575" pos:column="58">= <expr><call><name><name pos:line="575" pos:column="60">coursesOffered</name><op:operator pos:line="575" pos:column="74">.</op:operator><name pos:line="575" pos:column="75">get</name></name><argument_list pos:line="575" pos:column="78">(<argument><expr><op:operator pos:line="575" pos:column="79">(</op:operator><name pos:line="575" pos:column="80">Integer</name><op:operator pos:line="575" pos:column="87">)</op:operator><call><name><name pos:line="575" pos:column="88">courseScheduledCombo</name><op:operator pos:line="575" pos:column="108">.</op:operator><name pos:line="575" pos:column="109">getSelectedItem</name></name><argument_list pos:line="575" pos:column="124">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="576" pos:column="41">int</name></type> <name pos:line="576" pos:column="45">cap</name> <init pos:line="576" pos:column="49">= <expr><call><name><name pos:line="576" pos:column="51">co</name><op:operator pos:line="576" pos:column="53">.</op:operator><name pos:line="576" pos:column="54">getTotalCapacity</name></name><argument_list pos:line="576" pos:column="70">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name pos:line="577" pos:column="41">initializeEmptyClassAndTimeSlot</name><argument_list pos:line="577" pos:column="72">(<argument><expr><name pos:line="577" pos:column="73">l</name></expr></argument>, <argument><expr><name pos:line="577" pos:column="76">timeSlotType</name></expr></argument>, <argument><expr><name pos:line="577" pos:column="90">cap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				
				<expr_stmt><expr><call><name><name pos:line="580" pos:column="33">jd</name><op:operator pos:line="580" pos:column="35">.</op:operator><name pos:line="580" pos:column="36">setVisible</name></name><argument_list pos:line="580" pos:column="46">(<argument><expr><lit:literal type="boolean" pos:line="580" pos:column="47">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="581" pos:column="33">btnNewButton</name><op:operator pos:line="581" pos:column="45">.</op:operator><name pos:line="581" pos:column="46">setEnabled</name></name><argument_list pos:line="581" pos:column="56">(<argument><expr><lit:literal type="boolean" pos:line="581" pos:column="57">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="582" pos:column="33">btnNewButton</name><op:operator pos:line="582" pos:column="45">.</op:operator><name pos:line="582" pos:column="46">setText</name></name><argument_list pos:line="582" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="582" pos:column="54">"Reschedule all courses"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="583" pos:column="33">courseSchedule</name><op:operator pos:line="583" pos:column="47">.</op:operator><name pos:line="583" pos:column="48">setEnabled</name></name><argument_list pos:line="583" pos:column="58">(<argument><expr><lit:literal type="boolean" pos:line="583" pos:column="59">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="588" pos:column="17">JPanel</name></type> <name pos:line="588" pos:column="24">rescheduleIndividual</name> <init pos:line="588" pos:column="45">= <expr><op:operator pos:line="588" pos:column="47">new</op:operator> <call><name pos:line="588" pos:column="51">JPanel</name><argument_list pos:line="588" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="589" pos:column="17">courseSchedule</name><op:operator pos:line="589" pos:column="31">.</op:operator><name pos:line="589" pos:column="32">addTab</name></name><argument_list pos:line="589" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="589" pos:column="39">"Reschedule Single Course"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="589" pos:column="67">null</lit:literal></expr></argument>, <argument><expr><name pos:line="589" pos:column="73">rescheduleIndividual</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="589" pos:column="95">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="590" pos:column="17">rescheduleIndividual</name><op:operator pos:line="590" pos:column="37">.</op:operator><name pos:line="590" pos:column="38">setLayout</name></name><argument_list pos:line="590" pos:column="47">(<argument><expr><lit:literal type="null" pos:line="590" pos:column="48">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="592" pos:column="17">courseScheduledCombo</name> <op:operator pos:line="592" pos:column="38">=</op:operator> <op:operator pos:line="592" pos:column="40">new</op:operator> <call><name><name pos:line="592" pos:column="44">JComboBox</name><argument_list pos:line="592" pos:column="53">&lt;<argument><name pos:line="592" pos:column="54">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="592" pos:column="62">()</argument_list></call></expr>;</expr_stmt>		
		<expr_stmt><expr><call><name><name pos:line="593" pos:column="17">courseScheduledCombo</name><op:operator pos:line="593" pos:column="37">.</op:operator><name pos:line="593" pos:column="38">addActionListener</name></name><argument_list pos:line="593" pos:column="55">(<argument><expr><op:operator pos:line="593" pos:column="56">new</op:operator> <class><super><name pos:line="593" pos:column="60">ActionListener</name></super><argument_list pos:line="593" pos:column="74">()</argument_list> <block pos:line="593" pos:column="77">{
			<function><type><specifier pos:line="594" pos:column="25">public</specifier> <name pos:line="594" pos:column="32">void</name></type> <name pos:line="594" pos:column="37">actionPerformed</name><parameter_list pos:line="594" pos:column="52">(<param><decl><type><name pos:line="594" pos:column="53">ActionEvent</name></type> <name pos:line="594" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="594" pos:column="71">{
				<if pos:line="595" pos:column="33">if<condition pos:line="595" pos:column="35">(<expr><call><name><name pos:line="595" pos:column="36">courseScheduledCombo</name><op:operator pos:line="595" pos:column="56">.</op:operator><name pos:line="595" pos:column="57">getModel</name></name><argument_list pos:line="595" pos:column="65">()</argument_list></call><op:operator pos:line="595" pos:column="67">.</op:operator><call><name pos:line="595" pos:column="68">getSize</name><argument_list pos:line="595" pos:column="75">()</argument_list></call><op:operator pos:line="595" pos:column="77">&gt;</op:operator><lit:literal type="number" pos:line="595" pos:column="78">0</lit:literal></expr>)</condition><then pos:line="595" pos:column="80">
					<expr_stmt><expr><call><name pos:line="596" pos:column="41">initilizeSingleRescheduleTab</name><argument_list pos:line="596" pos:column="69">(<argument><expr><op:operator pos:line="596" pos:column="70">(</op:operator><name pos:line="596" pos:column="71">Integer</name><op:operator pos:line="596" pos:column="78">)</op:operator><call><name><name pos:line="596" pos:column="79">courseScheduledCombo</name><op:operator pos:line="596" pos:column="99">.</op:operator><name pos:line="596" pos:column="100">getSelectedItem</name></name><argument_list pos:line="596" pos:column="115">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				<comment type="line" pos:line="597" pos:column="33">//Add available locations, classrooms, </comment>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="600" pos:column="17">courseScheduledCombo</name><op:operator pos:line="600" pos:column="37">.</op:operator><name pos:line="600" pos:column="38">setBounds</name></name><argument_list pos:line="600" pos:column="47">(<argument><expr><lit:literal type="number" pos:line="600" pos:column="48">30</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="600" pos:column="52">38</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="600" pos:column="56">159</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="600" pos:column="61">29</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="601" pos:column="17">rescheduleIndividual</name><op:operator pos:line="601" pos:column="37">.</op:operator><name pos:line="601" pos:column="38">add</name></name><argument_list pos:line="601" pos:column="41">(<argument><expr><name pos:line="601" pos:column="42">courseScheduledCombo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="603" pos:column="17">timeSlotTypeCombo</name> <op:operator pos:line="603" pos:column="35">=</op:operator> <op:operator pos:line="603" pos:column="37">new</op:operator> <call><name><name pos:line="603" pos:column="41">JComboBox</name><argument_list pos:line="603" pos:column="50">&lt;<argument><name pos:line="603" pos:column="51">String</name></argument>&gt;</argument_list></name><argument_list pos:line="603" pos:column="58">(<argument><expr><op:operator pos:line="603" pos:column="59">new</op:operator> <call><name><name pos:line="603" pos:column="63">DefaultComboBoxModel</name><argument_list pos:line="603" pos:column="83">&lt;<argument><name pos:line="603" pos:column="84">String</name></argument>&gt;</argument_list></name><argument_list pos:line="603" pos:column="91">(<argument><expr><op:operator pos:line="603" pos:column="92">new</op:operator> <name><name pos:line="603" pos:column="96">String</name><index pos:line="603" pos:column="102">[]</index></name> <block pos:line="603" pos:column="105">{<expr><lit:literal type="string" pos:line="603" pos:column="106">"M-W-F"</lit:literal></expr><op:operator pos:line="603" pos:column="113">,</op:operator> <expr><lit:literal type="string" pos:line="603" pos:column="115">"T-Th"</lit:literal></expr>}</block></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="604" pos:column="17">timeSlotTypeCombo</name><op:operator pos:line="604" pos:column="34">.</op:operator><name pos:line="604" pos:column="35">addActionListener</name></name><argument_list pos:line="604" pos:column="52">(<argument><expr><op:operator pos:line="604" pos:column="53">new</op:operator> <class><super><name pos:line="604" pos:column="57">ActionListener</name></super><argument_list pos:line="604" pos:column="71">()</argument_list> <block pos:line="604" pos:column="74">{
			<function><type><specifier pos:line="605" pos:column="25">public</specifier> <name pos:line="605" pos:column="32">void</name></type> <name pos:line="605" pos:column="37">actionPerformed</name><parameter_list pos:line="605" pos:column="52">(<param><decl><type><name pos:line="605" pos:column="53">ActionEvent</name></type> <name pos:line="605" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="605" pos:column="71">{
				<expr_stmt><expr><call><name><name pos:line="606" pos:column="33">classRoomCombo</name><op:operator pos:line="606" pos:column="47">.</op:operator><name pos:line="606" pos:column="48">setModel</name></name><argument_list pos:line="606" pos:column="56">(<argument><expr><op:operator pos:line="606" pos:column="57">new</op:operator> <call><name><name pos:line="606" pos:column="61">DefaultComboBoxModel</name><argument_list pos:line="606" pos:column="81">&lt;<argument><name pos:line="606" pos:column="82">String</name></argument>&gt;</argument_list></name><argument_list pos:line="606" pos:column="89">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="607" pos:column="33">timingAvailableCombo</name><op:operator pos:line="607" pos:column="53">.</op:operator><name pos:line="607" pos:column="54">setModel</name></name><argument_list pos:line="607" pos:column="62">(<argument><expr><op:operator pos:line="607" pos:column="63">new</op:operator> <call><name><name pos:line="607" pos:column="67">DefaultComboBoxModel</name><argument_list pos:line="607" pos:column="87">&lt;<argument><name pos:line="607" pos:column="88">String</name></argument>&gt;</argument_list></name><argument_list pos:line="607" pos:column="95">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="610" pos:column="17">timeSlotTypeCombo</name><op:operator pos:line="610" pos:column="34">.</op:operator><name pos:line="610" pos:column="35">setBounds</name></name><argument_list pos:line="610" pos:column="44">(<argument><expr><lit:literal type="number" pos:line="610" pos:column="45">587</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="610" pos:column="50">84</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="610" pos:column="54">164</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="610" pos:column="59">31</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="611" pos:column="17">rescheduleIndividual</name><op:operator pos:line="611" pos:column="37">.</op:operator><name pos:line="611" pos:column="38">add</name></name><argument_list pos:line="611" pos:column="41">(<argument><expr><name pos:line="611" pos:column="42">timeSlotTypeCombo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="613" pos:column="17">classLocationCombo</name> <op:operator pos:line="613" pos:column="36">=</op:operator> <op:operator pos:line="613" pos:column="38">new</op:operator> <call><name><name pos:line="613" pos:column="42">JComboBox</name><argument_list pos:line="613" pos:column="51">&lt;<argument><name pos:line="613" pos:column="52">String</name></argument>&gt;</argument_list></name><argument_list pos:line="613" pos:column="59">(<argument><expr><op:operator pos:line="613" pos:column="60">new</op:operator> <call><name><name pos:line="613" pos:column="64">DefaultComboBoxModel</name><argument_list pos:line="613" pos:column="84">&lt;<argument><name pos:line="613" pos:column="85">String</name></argument>&gt;</argument_list></name><argument_list pos:line="613" pos:column="92">(<argument><expr><call><name><name pos:line="613" pos:column="93">ClassroomLocation</name><op:operator pos:line="613" pos:column="110">.</op:operator><name pos:line="613" pos:column="111">getAllLocations</name></name><argument_list pos:line="613" pos:column="126">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="614" pos:column="17">classLocationCombo</name><op:operator pos:line="614" pos:column="35">.</op:operator><name pos:line="614" pos:column="36">addActionListener</name></name><argument_list pos:line="614" pos:column="53">(<argument><expr><op:operator pos:line="614" pos:column="54">new</op:operator> <class><super><name pos:line="614" pos:column="58">ActionListener</name></super><argument_list pos:line="614" pos:column="72">()</argument_list> <block pos:line="614" pos:column="75">{
			<function><type><specifier pos:line="615" pos:column="25">public</specifier> <name pos:line="615" pos:column="32">void</name></type> <name pos:line="615" pos:column="37">actionPerformed</name><parameter_list pos:line="615" pos:column="52">(<param><decl><type><name pos:line="615" pos:column="53">ActionEvent</name></type> <name pos:line="615" pos:column="65">e</name></decl></param>)</parameter_list> <block pos:line="615" pos:column="68">{
				<expr_stmt><expr><call><name><name pos:line="616" pos:column="33">classRoomCombo</name><op:operator pos:line="616" pos:column="47">.</op:operator><name pos:line="616" pos:column="48">setModel</name></name><argument_list pos:line="616" pos:column="56">(<argument><expr><op:operator pos:line="616" pos:column="57">new</op:operator> <call><name><name pos:line="616" pos:column="61">DefaultComboBoxModel</name><argument_list pos:line="616" pos:column="81">&lt;<argument><name pos:line="616" pos:column="82">String</name></argument>&gt;</argument_list></name><argument_list pos:line="616" pos:column="89">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="617" pos:column="33">timingAvailableCombo</name><op:operator pos:line="617" pos:column="53">.</op:operator><name pos:line="617" pos:column="54">setModel</name></name><argument_list pos:line="617" pos:column="62">(<argument><expr><op:operator pos:line="617" pos:column="63">new</op:operator> <call><name><name pos:line="617" pos:column="67">DefaultComboBoxModel</name><argument_list pos:line="617" pos:column="87">&lt;<argument><name pos:line="617" pos:column="88">String</name></argument>&gt;</argument_list></name><argument_list pos:line="617" pos:column="95">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="620" pos:column="17">classLocationCombo</name><op:operator pos:line="620" pos:column="35">.</op:operator><name pos:line="620" pos:column="36">setBounds</name></name><argument_list pos:line="620" pos:column="45">(<argument><expr><lit:literal type="number" pos:line="620" pos:column="46">587</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="620" pos:column="51">131</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="620" pos:column="56">164</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="620" pos:column="61">29</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="621" pos:column="17">rescheduleIndividual</name><op:operator pos:line="621" pos:column="37">.</op:operator><name pos:line="621" pos:column="38">add</name></name><argument_list pos:line="621" pos:column="41">(<argument><expr><name pos:line="621" pos:column="42">classLocationCombo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="623" pos:column="17">classRoomCombo</name> <op:operator pos:line="623" pos:column="32">=</op:operator> <op:operator pos:line="623" pos:column="34">new</op:operator> <call><name><name pos:line="623" pos:column="38">JComboBox</name><argument_list pos:line="623" pos:column="47">&lt;<argument><name pos:line="623" pos:column="48">String</name></argument>&gt;</argument_list></name><argument_list pos:line="623" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="624" pos:column="17">classRoomCombo</name><op:operator pos:line="624" pos:column="31">.</op:operator><name pos:line="624" pos:column="32">addActionListener</name></name><argument_list pos:line="624" pos:column="49">(<argument><expr><op:operator pos:line="624" pos:column="50">new</op:operator> <class><super><name pos:line="624" pos:column="54">ActionListener</name></super><argument_list pos:line="624" pos:column="68">()</argument_list> <block pos:line="624" pos:column="71">{
			<function><type><specifier pos:line="625" pos:column="25">public</specifier> <name pos:line="625" pos:column="32">void</name></type> <name pos:line="625" pos:column="37">actionPerformed</name><parameter_list pos:line="625" pos:column="52">(<param><decl><type><name pos:line="625" pos:column="53">ActionEvent</name></type> <name pos:line="625" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="625" pos:column="71">{
				<decl_stmt><decl><type><name pos:line="626" pos:column="33">int</name></type> <name pos:line="626" pos:column="37">index</name> <init pos:line="626" pos:column="43">= <expr><call><name><name pos:line="626" pos:column="45">classRoomCombo</name><op:operator pos:line="626" pos:column="59">.</op:operator><name pos:line="626" pos:column="60">getSelectedIndex</name></name><argument_list pos:line="626" pos:column="76">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="627" pos:column="33">int</name></type> <name pos:line="627" pos:column="37">count</name> <init pos:line="627" pos:column="43">= <expr><lit:literal type="number" pos:line="627" pos:column="45">0</lit:literal></expr></init></decl>;</decl_stmt>
				<for pos:line="628" pos:column="33">for(<init><decl><type><name pos:line="628" pos:column="37">Classroom</name></type> <name pos:line="628" pos:column="47">c</name><range pos:line="628" pos:column="48">:<expr><call><name><name pos:line="628" pos:column="49">classroomAndTimeslots</name><op:operator pos:line="628" pos:column="70">.</op:operator><name pos:line="628" pos:column="71">keySet</name></name><argument_list pos:line="628" pos:column="77">()</argument_list></call></expr></range></decl></init>)<block pos:line="628" pos:column="80">{
					<decl_stmt><decl><type><name pos:line="629" pos:column="41">Classroom</name></type> <name pos:line="629" pos:column="51">newClassroom</name> <init pos:line="629" pos:column="64">= <expr><name pos:line="629" pos:column="66">c</name></expr></init></decl>;</decl_stmt>
					<if pos:line="630" pos:column="41">if<condition pos:line="630" pos:column="43">(<expr><name pos:line="630" pos:column="44">count</name> <op:operator pos:line="630" pos:column="50">==</op:operator> <name pos:line="630" pos:column="53">index</name></expr>)</condition><then><block pos:line="630" pos:column="59">{
						<expr_stmt><expr><call><name pos:line="631" pos:column="49">initializeEmptyTimeSlotCombo</name><argument_list pos:line="631" pos:column="77">(<argument><expr><name pos:line="631" pos:column="78">newClassroom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<break pos:line="632" pos:column="49">break;</break>
					}</block></then>
					<else pos:line="634" pos:column="41">else
						<expr_stmt><expr><name pos:line="635" pos:column="49">count</name><op:operator pos:line="635" pos:column="54">++</op:operator></expr>;</expr_stmt></else></if>
				}</block></for>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="639" pos:column="17">classRoomCombo</name><op:operator pos:line="639" pos:column="31">.</op:operator><name pos:line="639" pos:column="32">setBounds</name></name><argument_list pos:line="639" pos:column="41">(<argument><expr><lit:literal type="number" pos:line="639" pos:column="42">588</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="639" pos:column="47">225</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="639" pos:column="52">164</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="639" pos:column="57">30</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="640" pos:column="17">rescheduleIndividual</name><op:operator pos:line="640" pos:column="37">.</op:operator><name pos:line="640" pos:column="38">add</name></name><argument_list pos:line="640" pos:column="41">(<argument><expr><name pos:line="640" pos:column="42">classRoomCombo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="642" pos:column="17">timingAvailableCombo</name> <op:operator pos:line="642" pos:column="38">=</op:operator> <op:operator pos:line="642" pos:column="40">new</op:operator> <call><name><name pos:line="642" pos:column="44">JComboBox</name><argument_list pos:line="642" pos:column="53">&lt;<argument><name pos:line="642" pos:column="54">String</name></argument>&gt;</argument_list></name><argument_list pos:line="642" pos:column="61">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="643" pos:column="17">timingAvailableCombo</name><op:operator pos:line="643" pos:column="37">.</op:operator><name pos:line="643" pos:column="38">setBounds</name></name><argument_list pos:line="643" pos:column="47">(<argument><expr><lit:literal type="number" pos:line="643" pos:column="48">588</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="643" pos:column="53">272</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="643" pos:column="58">164</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="643" pos:column="63">35</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="644" pos:column="17">rescheduleIndividual</name><op:operator pos:line="644" pos:column="37">.</op:operator><name pos:line="644" pos:column="38">add</name></name><argument_list pos:line="644" pos:column="41">(<argument><expr><name pos:line="644" pos:column="42">timingAvailableCombo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="646" pos:column="17">JLabel</name></type> <name pos:line="646" pos:column="24">lblType</name> <init pos:line="646" pos:column="32">= <expr><op:operator pos:line="646" pos:column="34">new</op:operator> <call><name pos:line="646" pos:column="38">JLabel</name><argument_list pos:line="646" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="646" pos:column="45">"Type"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="647" pos:column="17">lblType</name><op:operator pos:line="647" pos:column="24">.</op:operator><name pos:line="647" pos:column="25">setBounds</name></name><argument_list pos:line="647" pos:column="34">(<argument><expr><lit:literal type="number" pos:line="647" pos:column="35">520</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="647" pos:column="40">93</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="647" pos:column="44">46</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="647" pos:column="48">14</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="648" pos:column="17">rescheduleIndividual</name><op:operator pos:line="648" pos:column="37">.</op:operator><name pos:line="648" pos:column="38">add</name></name><argument_list pos:line="648" pos:column="41">(<argument><expr><name pos:line="648" pos:column="42">lblType</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="650" pos:column="17">JLabel</name></type> <name pos:line="650" pos:column="24">lblLocation</name> <init pos:line="650" pos:column="36">= <expr><op:operator pos:line="650" pos:column="38">new</op:operator> <call><name pos:line="650" pos:column="42">JLabel</name><argument_list pos:line="650" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="650" pos:column="49">"Location"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="651" pos:column="17">lblLocation</name><op:operator pos:line="651" pos:column="28">.</op:operator><name pos:line="651" pos:column="29">setBounds</name></name><argument_list pos:line="651" pos:column="38">(<argument><expr><lit:literal type="number" pos:line="651" pos:column="39">520</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="651" pos:column="44">137</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="651" pos:column="49">46</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="651" pos:column="53">14</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="652" pos:column="17">rescheduleIndividual</name><op:operator pos:line="652" pos:column="37">.</op:operator><name pos:line="652" pos:column="38">add</name></name><argument_list pos:line="652" pos:column="41">(<argument><expr><name pos:line="652" pos:column="42">lblLocation</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="654" pos:column="17">JLabel</name></type> <name pos:line="654" pos:column="24">lblClassroom</name> <init pos:line="654" pos:column="37">= <expr><op:operator pos:line="654" pos:column="39">new</op:operator> <call><name pos:line="654" pos:column="43">JLabel</name><argument_list pos:line="654" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="654" pos:column="50">"Classroom"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="655" pos:column="17">lblClassroom</name><op:operator pos:line="655" pos:column="29">.</op:operator><name pos:line="655" pos:column="30">setBounds</name></name><argument_list pos:line="655" pos:column="39">(<argument><expr><lit:literal type="number" pos:line="655" pos:column="40">520</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="655" pos:column="45">232</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="655" pos:column="50">65</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="655" pos:column="54">14</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="656" pos:column="17">rescheduleIndividual</name><op:operator pos:line="656" pos:column="37">.</op:operator><name pos:line="656" pos:column="38">add</name></name><argument_list pos:line="656" pos:column="41">(<argument><expr><name pos:line="656" pos:column="42">lblClassroom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="658" pos:column="17">JLabel</name></type> <name pos:line="658" pos:column="24">lblTimingsAvailable</name> <init pos:line="658" pos:column="44">= <expr><op:operator pos:line="658" pos:column="46">new</op:operator> <call><name pos:line="658" pos:column="50">JLabel</name><argument_list pos:line="658" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="658" pos:column="57">"Timings Available"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="659" pos:column="17">lblTimingsAvailable</name><op:operator pos:line="659" pos:column="36">.</op:operator><name pos:line="659" pos:column="37">setBounds</name></name><argument_list pos:line="659" pos:column="46">(<argument><expr><lit:literal type="number" pos:line="659" pos:column="47">499</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="659" pos:column="52">281</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="659" pos:column="57">81</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="659" pos:column="61">14</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="660" pos:column="17">rescheduleIndividual</name><op:operator pos:line="660" pos:column="37">.</op:operator><name pos:line="660" pos:column="38">add</name></name><argument_list pos:line="660" pos:column="41">(<argument><expr><name pos:line="660" pos:column="42">lblTimingsAvailable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="662" pos:column="17">courseScheduleTextPane</name> <op:operator pos:line="662" pos:column="40">=</op:operator> <op:operator pos:line="662" pos:column="42">new</op:operator> <call><name pos:line="662" pos:column="46">JTextPane</name><argument_list pos:line="662" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="663" pos:column="17">courseScheduleTextPane</name><op:operator pos:line="663" pos:column="39">.</op:operator><name pos:line="663" pos:column="40">setFont</name></name><argument_list pos:line="663" pos:column="47">(<argument><expr><op:operator pos:line="663" pos:column="48">new</op:operator> <call><name pos:line="663" pos:column="52">Font</name><argument_list pos:line="663" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="663" pos:column="57">"Times New Roman"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="663" pos:column="76">Font</name><op:operator pos:line="663" pos:column="80">.</op:operator><name pos:line="663" pos:column="81">BOLD</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="663" pos:column="87">12</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="664" pos:column="17">courseScheduleTextPane</name><op:operator pos:line="664" pos:column="39">.</op:operator><name pos:line="664" pos:column="40">setForeground</name></name><argument_list pos:line="664" pos:column="53">(<argument><expr><name><name pos:line="664" pos:column="54">Color</name><op:operator pos:line="664" pos:column="59">.</op:operator><name pos:line="664" pos:column="60">WHITE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="665" pos:column="17">courseScheduleTextPane</name><op:operator pos:line="665" pos:column="39">.</op:operator><name pos:line="665" pos:column="40">setBackground</name></name><argument_list pos:line="665" pos:column="53">(<argument><expr><name><name pos:line="665" pos:column="54">Color</name><op:operator pos:line="665" pos:column="59">.</op:operator><name pos:line="665" pos:column="60">BLACK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="666" pos:column="17">courseScheduleTextPane</name><op:operator pos:line="666" pos:column="39">.</op:operator><name pos:line="666" pos:column="40">setBounds</name></name><argument_list pos:line="666" pos:column="49">(<argument><expr><lit:literal type="number" pos:line="666" pos:column="50">30</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="666" pos:column="54">87</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="666" pos:column="58">278</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="666" pos:column="63">186</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="667" pos:column="17">rescheduleIndividual</name><op:operator pos:line="667" pos:column="37">.</op:operator><name pos:line="667" pos:column="38">add</name></name><argument_list pos:line="667" pos:column="41">(<argument><expr><name pos:line="667" pos:column="42">courseScheduleTextPane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="669" pos:column="17">JButton</name></type> <name pos:line="669" pos:column="25">btnSearchAvailable</name> <init pos:line="669" pos:column="44">= <expr><op:operator pos:line="669" pos:column="46">new</op:operator> <call><name pos:line="669" pos:column="50">JButton</name><argument_list pos:line="669" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="669" pos:column="58">"Search available"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="670" pos:column="17">btnSearchAvailable</name><op:operator pos:line="670" pos:column="35">.</op:operator><name pos:line="670" pos:column="36">addActionListener</name></name><argument_list pos:line="670" pos:column="53">(<argument><expr><op:operator pos:line="670" pos:column="54">new</op:operator> <class><super><name pos:line="670" pos:column="58">ActionListener</name></super><argument_list pos:line="670" pos:column="72">()</argument_list> <block pos:line="670" pos:column="75">{
			<function><type><specifier pos:line="671" pos:column="25">public</specifier> <name pos:line="671" pos:column="32">void</name></type> <name pos:line="671" pos:column="37">actionPerformed</name><parameter_list pos:line="671" pos:column="52">(<param><decl><type><name pos:line="671" pos:column="53">ActionEvent</name></type> <name pos:line="671" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="671" pos:column="71">{
				<if pos:line="672" pos:column="33">if<condition pos:line="672" pos:column="35">(<expr><call><name><name pos:line="672" pos:column="36">courseScheduledCombo</name><op:operator pos:line="672" pos:column="56">.</op:operator><name pos:line="672" pos:column="57">getModel</name></name><argument_list pos:line="672" pos:column="65">()</argument_list></call><op:operator pos:line="672" pos:column="67">.</op:operator><call><name pos:line="672" pos:column="68">getSize</name><argument_list pos:line="672" pos:column="75">()</argument_list></call><op:operator pos:line="672" pos:column="77">&gt;</op:operator><lit:literal type="number" pos:line="672" pos:column="78">0</lit:literal></expr>)</condition><then><block pos:line="672" pos:column="80">{
					<decl_stmt><decl><type><name pos:line="673" pos:column="41">ClassroomLocation</name></type> <name pos:line="673" pos:column="59">l</name> <init pos:line="673" pos:column="61">= <expr><call><name><name pos:line="673" pos:column="63">ClassroomLocation</name><op:operator pos:line="673" pos:column="80">.</op:operator><name pos:line="673" pos:column="81">valueOf</name></name><argument_list pos:line="673" pos:column="88">(<argument><expr><op:operator pos:line="673" pos:column="89">(</op:operator><name pos:line="673" pos:column="90">String</name><op:operator pos:line="673" pos:column="96">)</op:operator><call><name><name pos:line="673" pos:column="97">classLocationCombo</name><op:operator pos:line="673" pos:column="115">.</op:operator><name pos:line="673" pos:column="116">getSelectedItem</name></name><argument_list pos:line="673" pos:column="131">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="674" pos:column="41">int</name></type> <name pos:line="674" pos:column="45">timeSlotType</name> <init pos:line="674" pos:column="58">= <expr><call><name><name pos:line="674" pos:column="60">timeSlotTypeCombo</name><op:operator pos:line="674" pos:column="77">.</op:operator><name pos:line="674" pos:column="78">getSelectedIndex</name></name><argument_list pos:line="674" pos:column="94">()</argument_list></call><op:operator pos:line="674" pos:column="96">+</op:operator><lit:literal type="number" pos:line="674" pos:column="97">1</lit:literal></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="675" pos:column="41">CourseOffered</name></type> <name pos:line="675" pos:column="55">co</name> <init pos:line="675" pos:column="58">= <expr><call><name><name pos:line="675" pos:column="60">coursesOffered</name><op:operator pos:line="675" pos:column="74">.</op:operator><name pos:line="675" pos:column="75">get</name></name><argument_list pos:line="675" pos:column="78">(<argument><expr><op:operator pos:line="675" pos:column="79">(</op:operator><name pos:line="675" pos:column="80">Integer</name><op:operator pos:line="675" pos:column="87">)</op:operator><call><name><name pos:line="675" pos:column="88">courseScheduledCombo</name><op:operator pos:line="675" pos:column="108">.</op:operator><name pos:line="675" pos:column="109">getSelectedItem</name></name><argument_list pos:line="675" pos:column="124">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="676" pos:column="41">int</name></type> <name pos:line="676" pos:column="45">cap</name> <init pos:line="676" pos:column="49">= <expr><call><name><name pos:line="676" pos:column="51">co</name><op:operator pos:line="676" pos:column="53">.</op:operator><name pos:line="676" pos:column="54">getTotalCapacity</name></name><argument_list pos:line="676" pos:column="70">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name pos:line="677" pos:column="41">initializeEmptyClassAndTimeSlot</name><argument_list pos:line="677" pos:column="72">(<argument><expr><name pos:line="677" pos:column="73">l</name></expr></argument>, <argument><expr><name pos:line="677" pos:column="76">timeSlotType</name></expr></argument>, <argument><expr><name pos:line="677" pos:column="90">cap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then>
				
				<else pos:line="680" pos:column="33">else<block pos:line="680" pos:column="37">{
					<expr_stmt><expr><call><name pos:line="681" pos:column="41">showMessage</name><argument_list pos:line="681" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="681" pos:column="53">"No course offering selected"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="681" pos:column="84">"Error"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></else></if>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="685" pos:column="17">btnSearchAvailable</name><op:operator pos:line="685" pos:column="35">.</op:operator><name pos:line="685" pos:column="36">setBounds</name></name><argument_list pos:line="685" pos:column="45">(<argument><expr><lit:literal type="number" pos:line="685" pos:column="46">587</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="685" pos:column="51">177</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="685" pos:column="56">164</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="685" pos:column="61">32</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="686" pos:column="17">rescheduleIndividual</name><op:operator pos:line="686" pos:column="37">.</op:operator><name pos:line="686" pos:column="38">add</name></name><argument_list pos:line="686" pos:column="41">(<argument><expr><name pos:line="686" pos:column="42">btnSearchAvailable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="688" pos:column="17">JButton</name></type> <name pos:line="688" pos:column="25">btnUpdateSelectedCourse</name> <init pos:line="688" pos:column="49">= <expr><op:operator pos:line="688" pos:column="51">new</op:operator> <call><name pos:line="688" pos:column="55">JButton</name><argument_list pos:line="688" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="688" pos:column="63">"Update selected course with above selected timings"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="689" pos:column="17">btnUpdateSelectedCourse</name><op:operator pos:line="689" pos:column="40">.</op:operator><name pos:line="689" pos:column="41">addActionListener</name></name><argument_list pos:line="689" pos:column="58">(<argument><expr><op:operator pos:line="689" pos:column="59">new</op:operator> <class><super><name pos:line="689" pos:column="63">ActionListener</name></super><argument_list pos:line="689" pos:column="77">()</argument_list> <block pos:line="689" pos:column="80">{
			<function><type><specifier pos:line="690" pos:column="25">public</specifier> <name pos:line="690" pos:column="32">void</name></type> <name pos:line="690" pos:column="37">actionPerformed</name><parameter_list pos:line="690" pos:column="52">(<param><decl><type><name pos:line="690" pos:column="53">ActionEvent</name></type> <name pos:line="690" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="690" pos:column="71">{
				<if pos:line="691" pos:column="33">if<condition pos:line="691" pos:column="35">(<expr><call><name><name pos:line="691" pos:column="36">courseScheduledCombo</name><op:operator pos:line="691" pos:column="56">.</op:operator><name pos:line="691" pos:column="57">getModel</name></name><argument_list pos:line="691" pos:column="65">()</argument_list></call><op:operator pos:line="691" pos:column="67">.</op:operator><call><name pos:line="691" pos:column="68">getSize</name><argument_list pos:line="691" pos:column="75">()</argument_list></call><op:operator pos:line="691" pos:column="77">&lt;=</op:operator><lit:literal type="number" pos:line="691" pos:column="79">0</lit:literal></expr>)</condition><then><block pos:line="691" pos:column="81">{
					<expr_stmt><expr><call><name pos:line="692" pos:column="41">showMessage</name><argument_list pos:line="692" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="692" pos:column="53">"No course offering selected"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="692" pos:column="84">"Error"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="693" pos:column="41">return;</return>
				}</block></then></if>
				
				<decl_stmt><decl><type><name pos:line="696" pos:column="33">int</name></type> <name pos:line="696" pos:column="37">OfferID</name> <init pos:line="696" pos:column="45">= <expr><op:operator pos:line="696" pos:column="47">(</op:operator><name pos:line="696" pos:column="48">Integer</name><op:operator pos:line="696" pos:column="55">)</op:operator><call><name><name pos:line="696" pos:column="56">courseScheduledCombo</name><op:operator pos:line="696" pos:column="76">.</op:operator><name pos:line="696" pos:column="77">getSelectedItem</name></name><argument_list pos:line="696" pos:column="92">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="697" pos:column="33">CourseOffered</name></type> <name pos:line="697" pos:column="47">c</name> <init pos:line="697" pos:column="49">= <expr><call><name><name pos:line="697" pos:column="51">coursesOffered</name><op:operator pos:line="697" pos:column="65">.</op:operator><name pos:line="697" pos:column="66">get</name></name><argument_list pos:line="697" pos:column="69">(<argument><expr><name pos:line="697" pos:column="70">OfferID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="698" pos:column="33">Classroom</name></type> <name pos:line="698" pos:column="43">newClassroom</name> <init pos:line="698" pos:column="56">= <expr><lit:literal type="null" pos:line="698" pos:column="58">null</lit:literal></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="699" pos:column="33">Timeslots</name></type> <name pos:line="699" pos:column="43">newTimeslot</name> <init pos:line="699" pos:column="55">= <expr><lit:literal type="null" pos:line="699" pos:column="57">null</lit:literal></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="700" pos:column="33">int</name></type> <name pos:line="700" pos:column="37">count</name> <init pos:line="700" pos:column="43">= <expr><lit:literal type="number" pos:line="700" pos:column="45">0</lit:literal></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="701" pos:column="33">int</name></type> <name pos:line="701" pos:column="37">classRoomSelectedIndex</name> <init pos:line="701" pos:column="60">= <expr><call><name><name pos:line="701" pos:column="62">classRoomCombo</name><op:operator pos:line="701" pos:column="76">.</op:operator><name pos:line="701" pos:column="77">getSelectedIndex</name></name><argument_list pos:line="701" pos:column="93">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="702" pos:column="33">int</name></type> <name pos:line="702" pos:column="37">timeSlotSelectedIndex</name> <init pos:line="702" pos:column="59">= <expr><call><name><name pos:line="702" pos:column="61">timingAvailableCombo</name><op:operator pos:line="702" pos:column="81">.</op:operator><name pos:line="702" pos:column="82">getSelectedIndex</name></name><argument_list pos:line="702" pos:column="98">()</argument_list></call></expr></init></decl>;</decl_stmt>
				
				<if pos:line="704" pos:column="33">if<condition pos:line="704" pos:column="35">(<expr><name pos:line="704" pos:column="36">classRoomSelectedIndex</name> <op:operator pos:line="704" pos:column="59">&lt;</op:operator> <lit:literal type="number" pos:line="704" pos:column="61">0</lit:literal></expr>)</condition><then><block pos:line="704" pos:column="63">{
					<expr_stmt><expr><call><name pos:line="705" pos:column="41">showMessage</name><argument_list pos:line="705" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="705" pos:column="53">"Select a classroom first"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="705" pos:column="81">"Error"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="706" pos:column="41">return;</return>
				}</block></then>
				
				<else pos:line="709" pos:column="33">else <if pos:line="709" pos:column="38">if<condition pos:line="709" pos:column="40">(<expr><name pos:line="709" pos:column="41">timeSlotSelectedIndex</name> <op:operator pos:line="709" pos:column="63">&lt;</op:operator> <lit:literal type="number" pos:line="709" pos:column="65">0</lit:literal></expr>)</condition><then><block pos:line="709" pos:column="67">{
					<expr_stmt><expr><call><name pos:line="710" pos:column="41">showMessage</name><argument_list pos:line="710" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="710" pos:column="53">"Select a time slot first"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="710" pos:column="81">"Error"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="711" pos:column="41">return;</return>
				}</block></then></if></else></if>
				
				<for pos:line="714" pos:column="33">for(<init><decl><type><name pos:line="714" pos:column="37">Classroom</name></type> <name pos:line="714" pos:column="47">classroom</name><range pos:line="714" pos:column="56">:<expr><call><name><name pos:line="714" pos:column="57">classroomAndTimeslots</name><op:operator pos:line="714" pos:column="78">.</op:operator><name pos:line="714" pos:column="79">keySet</name></name><argument_list pos:line="714" pos:column="85">()</argument_list></call></expr></range></decl></init>)<block pos:line="714" pos:column="88">{
					<expr_stmt><expr><name pos:line="715" pos:column="41">newClassroom</name> <op:operator pos:line="715" pos:column="54">=</op:operator> <name pos:line="715" pos:column="56">classroom</name></expr>;</expr_stmt>
					<if pos:line="716" pos:column="41">if<condition pos:line="716" pos:column="43">(<expr><name pos:line="716" pos:column="44">count</name> <op:operator pos:line="716" pos:column="50">==</op:operator> <name pos:line="716" pos:column="53">classRoomSelectedIndex</name></expr>)</condition><then><block pos:line="716" pos:column="76">{
						<break pos:line="717" pos:column="49">break;</break>
					}</block></then>
					<else pos:line="719" pos:column="41">else
						<expr_stmt><expr><name pos:line="720" pos:column="49">count</name><op:operator pos:line="720" pos:column="54">++</op:operator></expr>;</expr_stmt></else></if>
				}</block></for>
				
				<expr_stmt><expr><name pos:line="723" pos:column="33">count</name> <op:operator pos:line="723" pos:column="39">=</op:operator> <lit:literal type="number" pos:line="723" pos:column="41">0</lit:literal></expr>;</expr_stmt>
				<for pos:line="724" pos:column="33">for(<init><decl><type><name pos:line="724" pos:column="37">Timeslots</name></type> <name pos:line="724" pos:column="47">t</name> <range pos:line="724" pos:column="49">: <expr><call><name><name pos:line="724" pos:column="51">classroomAndTimeslots</name><op:operator pos:line="724" pos:column="72">.</op:operator><name pos:line="724" pos:column="73">get</name></name><argument_list pos:line="724" pos:column="76">(<argument><expr><name pos:line="724" pos:column="77">newClassroom</name></expr></argument>)</argument_list></call></expr></range></decl></init>)<block pos:line="724" pos:column="91">{
					<expr_stmt><expr><name pos:line="725" pos:column="41">newTimeslot</name> <op:operator pos:line="725" pos:column="53">=</op:operator> <name pos:line="725" pos:column="55">t</name></expr>;</expr_stmt>
					<if pos:line="726" pos:column="41">if<condition pos:line="726" pos:column="43">(<expr><name pos:line="726" pos:column="44">count</name> <op:operator pos:line="726" pos:column="50">==</op:operator> <name pos:line="726" pos:column="53">timeSlotSelectedIndex</name></expr>)</condition><then><block pos:line="726" pos:column="75">{
						<break pos:line="727" pos:column="49">break;</break>
					}</block></then>
					<else pos:line="729" pos:column="41">else
						<expr_stmt><expr><name pos:line="730" pos:column="49">count</name><op:operator pos:line="730" pos:column="54">++</op:operator></expr>;</expr_stmt></else></if>
				}</block></for>
				
				<expr_stmt><expr><call><name pos:line="733" pos:column="33">updateCourseSchedule</name><argument_list pos:line="733" pos:column="53">(<argument><expr><name pos:line="733" pos:column="54">c</name></expr></argument>, <argument><expr><name pos:line="733" pos:column="57">newClassroom</name></expr></argument>, <argument><expr><name pos:line="733" pos:column="71">newTimeslot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="737" pos:column="17">btnUpdateSelectedCourse</name><op:operator pos:line="737" pos:column="40">.</op:operator><name pos:line="737" pos:column="41">setBounds</name></name><argument_list pos:line="737" pos:column="50">(<argument><expr><lit:literal type="number" pos:line="737" pos:column="51">371</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="737" pos:column="56">361</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="737" pos:column="61">441</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="737" pos:column="66">48</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="738" pos:column="17">rescheduleIndividual</name><op:operator pos:line="738" pos:column="37">.</op:operator><name pos:line="738" pos:column="38">add</name></name><argument_list pos:line="738" pos:column="41">(<argument><expr><name pos:line="738" pos:column="42">btnUpdateSelectedCourse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="740" pos:column="17">JLabel</name></type> <name pos:line="740" pos:column="24">lblNewLabel_5</name> <init pos:line="740" pos:column="38">= <expr><op:operator pos:line="740" pos:column="40">new</op:operator> <call><name pos:line="740" pos:column="44">JLabel</name><argument_list pos:line="740" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="740" pos:column="51">"Select course offering"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="741" pos:column="17">lblNewLabel_5</name><op:operator pos:line="741" pos:column="30">.</op:operator><name pos:line="741" pos:column="31">setFont</name></name><argument_list pos:line="741" pos:column="38">(<argument><expr><op:operator pos:line="741" pos:column="39">new</op:operator> <call><name pos:line="741" pos:column="43">Font</name><argument_list pos:line="741" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="741" pos:column="48">"Tahoma"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="741" pos:column="58">Font</name><op:operator pos:line="741" pos:column="62">.</op:operator><name pos:line="741" pos:column="63">PLAIN</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="741" pos:column="70">13</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="742" pos:column="17">lblNewLabel_5</name><op:operator pos:line="742" pos:column="30">.</op:operator><name pos:line="742" pos:column="31">setBounds</name></name><argument_list pos:line="742" pos:column="40">(<argument><expr><lit:literal type="number" pos:line="742" pos:column="41">30</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="742" pos:column="45">13</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="742" pos:column="49">165</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="742" pos:column="54">21</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="743" pos:column="17">rescheduleIndividual</name><op:operator pos:line="743" pos:column="37">.</op:operator><name pos:line="743" pos:column="38">add</name></name><argument_list pos:line="743" pos:column="41">(<argument><expr><name pos:line="743" pos:column="42">lblNewLabel_5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		
		<comment type="line" pos:line="746" pos:column="17">//--------------------------------------------------------</comment>
		<comment type="line" pos:line="747" pos:column="17">//--------------------Offer Tab Code----------------------</comment>
		<comment type="line" pos:line="748" pos:column="17">//--------------------------------------------------------</comment>
		<decl_stmt><decl><type><name pos:line="749" pos:column="17">JPanel</name></type> <name pos:line="749" pos:column="24">offerCourseTab</name> <init pos:line="749" pos:column="39">= <expr><op:operator pos:line="749" pos:column="41">new</op:operator> <call><name pos:line="749" pos:column="45">JPanel</name><argument_list pos:line="749" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="750" pos:column="17">managePeople</name><op:operator pos:line="750" pos:column="29">.</op:operator><name pos:line="750" pos:column="30">addTab</name></name><argument_list pos:line="750" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="750" pos:column="37">"Offer Courses"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="750" pos:column="54">null</lit:literal></expr></argument>, <argument><expr><name pos:line="750" pos:column="60">offerCourseTab</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="750" pos:column="76">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="751" pos:column="17">offerCourseTab</name><op:operator pos:line="751" pos:column="31">.</op:operator><name pos:line="751" pos:column="32">setLayout</name></name><argument_list pos:line="751" pos:column="41">(<argument><expr><lit:literal type="null" pos:line="751" pos:column="42">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="753" pos:column="17">allDepartmentsCombo</name> <op:operator pos:line="753" pos:column="37">=</op:operator> <op:operator pos:line="753" pos:column="39">new</op:operator> <call><name><name pos:line="753" pos:column="43">JComboBox</name><argument_list pos:line="753" pos:column="52">&lt;<argument><name pos:line="753" pos:column="53">String</name></argument>&gt;</argument_list></name><argument_list pos:line="753" pos:column="60">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="754" pos:column="17">allDepartmentsCombo</name><op:operator pos:line="754" pos:column="36">.</op:operator><name pos:line="754" pos:column="37">addActionListener</name></name><argument_list pos:line="754" pos:column="54">(<argument><expr><op:operator pos:line="754" pos:column="55">new</op:operator> <class><super><name pos:line="754" pos:column="59">ActionListener</name></super><argument_list pos:line="754" pos:column="73">()</argument_list> <block pos:line="754" pos:column="76">{
			<function><type><specifier pos:line="755" pos:column="25">public</specifier> <name pos:line="755" pos:column="32">void</name></type> <name pos:line="755" pos:column="37">actionPerformed</name><parameter_list pos:line="755" pos:column="52">(<param><decl><type><name pos:line="755" pos:column="53">ActionEvent</name></type> <name pos:line="755" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="755" pos:column="71">{
				<try pos:line="756" pos:column="33">try <block pos:line="756" pos:column="37">{
					<decl_stmt><decl><type><name pos:line="757" pos:column="41">Department</name></type> <name pos:line="757" pos:column="52">d</name><init pos:line="757" pos:column="53">= <expr><op:operator pos:line="757" pos:column="55">new</op:operator> <call><name pos:line="757" pos:column="59">Department</name><argument_list pos:line="757" pos:column="69">(<argument><expr><op:operator pos:line="757" pos:column="70">(</op:operator><name pos:line="757" pos:column="71">String</name><op:operator pos:line="757" pos:column="77">)</op:operator><call><name><name pos:line="757" pos:column="78">allDepartmentsCombo</name><op:operator pos:line="757" pos:column="97">.</op:operator><name pos:line="757" pos:column="98">getSelectedItem</name></name><argument_list pos:line="757" pos:column="113">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name><name pos:line="758" pos:column="41">ArrayList</name><argument_list pos:line="758" pos:column="50">&lt;<argument><name pos:line="758" pos:column="51">Course</name></argument>&gt;</argument_list></name></type> <name pos:line="758" pos:column="59">deptCourses</name> <init pos:line="758" pos:column="71">= <expr><call><name><name pos:line="758" pos:column="73">Course</name><op:operator pos:line="758" pos:column="79">.</op:operator><name pos:line="758" pos:column="80">getCoursesOfDepartment</name></name><argument_list pos:line="758" pos:column="102">(<argument><expr><name pos:line="758" pos:column="103">d</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name><name pos:line="759" pos:column="41">ArrayList</name><argument_list pos:line="759" pos:column="50">&lt;<argument><name pos:line="759" pos:column="51">Professor</name></argument>&gt;</argument_list></name></type> <name pos:line="759" pos:column="62">deptProfessor</name> <init pos:line="759" pos:column="76">= <expr><call><name><name pos:line="759" pos:column="78">Professor</name><op:operator pos:line="759" pos:column="87">.</op:operator><name pos:line="759" pos:column="88">getAllProfInADept</name></name><argument_list pos:line="759" pos:column="105">(<argument><expr><call><name><name pos:line="759" pos:column="106">d</name><op:operator pos:line="759" pos:column="107">.</op:operator><name pos:line="759" pos:column="108">getDepartmentID</name></name><argument_list pos:line="759" pos:column="123">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					
					<decl_stmt><decl><type><name><name pos:line="761" pos:column="41">DefaultComboBoxModel</name><argument_list pos:line="761" pos:column="61">&lt;<argument><name pos:line="761" pos:column="62">String</name></argument>&gt;</argument_list></name></type> <name pos:line="761" pos:column="70">modelCourse</name> <init pos:line="761" pos:column="82">= <expr><op:operator pos:line="761" pos:column="84">new</op:operator> <call><name><name pos:line="761" pos:column="88">DefaultComboBoxModel</name><argument_list pos:line="761" pos:column="108">&lt;<argument><name pos:line="761" pos:column="109">String</name></argument>&gt;</argument_list></name><argument_list pos:line="761" pos:column="116">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name><name pos:line="762" pos:column="41">DefaultComboBoxModel</name><argument_list pos:line="762" pos:column="61">&lt;<argument><name pos:line="762" pos:column="62">String</name></argument>&gt;</argument_list></name></type> <name pos:line="762" pos:column="70">modelProfessor</name> <init pos:line="762" pos:column="85">= <expr><op:operator pos:line="762" pos:column="87">new</op:operator> <call><name><name pos:line="762" pos:column="91">DefaultComboBoxModel</name><argument_list pos:line="762" pos:column="111">&lt;<argument><name pos:line="762" pos:column="112">String</name></argument>&gt;</argument_list></name><argument_list pos:line="762" pos:column="119">()</argument_list></call></expr></init></decl>;</decl_stmt>
					
					<if pos:line="764" pos:column="41">if<condition pos:line="764" pos:column="43">(<expr><call><name><name pos:line="764" pos:column="44">deptCourses</name><op:operator pos:line="764" pos:column="55">.</op:operator><name pos:line="764" pos:column="56">size</name></name><argument_list pos:line="764" pos:column="60">()</argument_list></call> <op:operator pos:line="764" pos:column="63">==</op:operator> <lit:literal type="number" pos:line="764" pos:column="66">0</lit:literal></expr>)</condition><then pos:line="764" pos:column="68">
						<expr_stmt><expr><call><name><name pos:line="765" pos:column="49">allCoursesCombo</name><op:operator pos:line="765" pos:column="64">.</op:operator><name pos:line="765" pos:column="65">setModel</name></name><argument_list pos:line="765" pos:column="73">(<argument><expr><name pos:line="765" pos:column="74">modelCourse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
					
					<if pos:line="767" pos:column="41">if<condition pos:line="767" pos:column="43">(<expr><call><name><name pos:line="767" pos:column="44">deptProfessor</name><op:operator pos:line="767" pos:column="57">.</op:operator><name pos:line="767" pos:column="58">size</name></name><argument_list pos:line="767" pos:column="62">()</argument_list></call> <op:operator pos:line="767" pos:column="65">==</op:operator> <lit:literal type="number" pos:line="767" pos:column="68">0</lit:literal></expr>)</condition><then pos:line="767" pos:column="70">
						<expr_stmt><expr><call><name><name pos:line="768" pos:column="49">allProfessorCombo</name><op:operator pos:line="768" pos:column="66">.</op:operator><name pos:line="768" pos:column="67">setModel</name></name><argument_list pos:line="768" pos:column="75">(<argument><expr><name pos:line="768" pos:column="76">modelProfessor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
					
					<for pos:line="770" pos:column="41">for(<init><decl><type><name pos:line="770" pos:column="45">Course</name></type> <name pos:line="770" pos:column="52">c</name><range pos:line="770" pos:column="53">:<expr><name pos:line="770" pos:column="54">deptCourses</name></expr></range></decl></init>)<block pos:line="770" pos:column="66">{
						<expr_stmt><expr><call><name><name pos:line="771" pos:column="49">modelCourse</name><op:operator pos:line="771" pos:column="60">.</op:operator><name pos:line="771" pos:column="61">addElement</name></name><argument_list pos:line="771" pos:column="71">(<argument><expr><call><name><name pos:line="771" pos:column="72">c</name><op:operator pos:line="771" pos:column="73">.</op:operator><name pos:line="771" pos:column="74">getCourseName</name></name><argument_list pos:line="771" pos:column="87">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="772" pos:column="49">allCoursesCombo</name><op:operator pos:line="772" pos:column="64">.</op:operator><name pos:line="772" pos:column="65">setModel</name></name><argument_list pos:line="772" pos:column="73">(<argument><expr><name pos:line="772" pos:column="74">modelCourse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></for>
					
					<for pos:line="775" pos:column="41">for(<init><decl><type><name pos:line="775" pos:column="45">Professor</name></type> <name pos:line="775" pos:column="55">p</name><range pos:line="775" pos:column="56">:<expr><name pos:line="775" pos:column="57">deptProfessor</name></expr></range></decl></init>)<block pos:line="775" pos:column="71">{
						<expr_stmt><expr><call><name><name pos:line="776" pos:column="49">modelProfessor</name><op:operator pos:line="776" pos:column="63">.</op:operator><name pos:line="776" pos:column="64">addElement</name></name><argument_list pos:line="776" pos:column="74">(<argument><expr><call><name><name pos:line="776" pos:column="75">p</name><op:operator pos:line="776" pos:column="76">.</op:operator><name pos:line="776" pos:column="77">getUserName</name></name><argument_list pos:line="776" pos:column="88">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="777" pos:column="49">allProfessorCombo</name><op:operator pos:line="777" pos:column="66">.</op:operator><name pos:line="777" pos:column="67">setModel</name></name><argument_list pos:line="777" pos:column="75">(<argument><expr><name pos:line="777" pos:column="76">modelProfessor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></for>
					
					
				}</block> <catch pos:line="781" pos:column="35">catch <parameter_list pos:line="781" pos:column="41">(<param><decl><type><name><name pos:line="781" pos:column="42">Department</name><op:operator pos:line="781" pos:column="52">.</op:operator><name pos:line="781" pos:column="53">DepartmentDoesNotExistException</name></name></type> <name pos:line="781" pos:column="85">e</name></decl></param>)</parameter_list> <block pos:line="781" pos:column="88">{
					<comment type="line" pos:line="782" pos:column="41">// TODO Auto-generated catch block</comment>
					<expr_stmt><expr><call><name><name pos:line="783" pos:column="41">e</name><op:operator pos:line="783" pos:column="42">.</op:operator><name pos:line="783" pos:column="43">printStackTrace</name></name><argument_list pos:line="783" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch> <catch pos:line="784" pos:column="35">catch <parameter_list pos:line="784" pos:column="41">(<param><decl><type><name><name pos:line="784" pos:column="42">Professor</name><op:operator pos:line="784" pos:column="51">.</op:operator><name pos:line="784" pos:column="52">ProfessorDoesNotExistException</name></name></type> <name pos:line="784" pos:column="83">e</name></decl></param>)</parameter_list> <block pos:line="784" pos:column="86">{
					<comment type="line" pos:line="785" pos:column="41">// TODO Auto-generated catch block</comment>
					<expr_stmt><expr><call><name><name pos:line="786" pos:column="41">e</name><op:operator pos:line="786" pos:column="42">.</op:operator><name pos:line="786" pos:column="43">printStackTrace</name></name><argument_list pos:line="786" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="790" pos:column="17">allDepartmentsCombo</name><op:operator pos:line="790" pos:column="36">.</op:operator><name pos:line="790" pos:column="37">setBounds</name></name><argument_list pos:line="790" pos:column="46">(<argument><expr><lit:literal type="number" pos:line="790" pos:column="47">27</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="790" pos:column="51">57</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="790" pos:column="55">147</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="790" pos:column="60">20</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="791" pos:column="17">offerCourseTab</name><op:operator pos:line="791" pos:column="31">.</op:operator><name pos:line="791" pos:column="32">add</name></name><argument_list pos:line="791" pos:column="35">(<argument><expr><name pos:line="791" pos:column="36">allDepartmentsCombo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="793" pos:column="17">allCoursesCombo</name> <op:operator pos:line="793" pos:column="33">=</op:operator> <op:operator pos:line="793" pos:column="35">new</op:operator> <call><name><name pos:line="793" pos:column="39">JComboBox</name><argument_list pos:line="793" pos:column="48">&lt;<argument><name pos:line="793" pos:column="49">String</name></argument>&gt;</argument_list></name><argument_list pos:line="793" pos:column="56">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="794" pos:column="17">allCoursesCombo</name><op:operator pos:line="794" pos:column="32">.</op:operator><name pos:line="794" pos:column="33">setBounds</name></name><argument_list pos:line="794" pos:column="42">(<argument><expr><lit:literal type="number" pos:line="794" pos:column="43">226</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="794" pos:column="48">57</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="794" pos:column="52">138</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="794" pos:column="57">20</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="795" pos:column="17">offerCourseTab</name><op:operator pos:line="795" pos:column="31">.</op:operator><name pos:line="795" pos:column="32">add</name></name><argument_list pos:line="795" pos:column="35">(<argument><expr><name pos:line="795" pos:column="36">allCoursesCombo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="797" pos:column="17">allProfessorCombo</name> <op:operator pos:line="797" pos:column="35">=</op:operator> <op:operator pos:line="797" pos:column="37">new</op:operator> <call><name><name pos:line="797" pos:column="41">JComboBox</name><argument_list pos:line="797" pos:column="50">&lt;<argument><name pos:line="797" pos:column="51">String</name></argument>&gt;</argument_list></name><argument_list pos:line="797" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="798" pos:column="17">allProfessorCombo</name><op:operator pos:line="798" pos:column="34">.</op:operator><name pos:line="798" pos:column="35">setBounds</name></name><argument_list pos:line="798" pos:column="44">(<argument><expr><lit:literal type="number" pos:line="798" pos:column="45">430</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="798" pos:column="50">56</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="798" pos:column="54">156</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="798" pos:column="59">20</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="799" pos:column="17">offerCourseTab</name><op:operator pos:line="799" pos:column="31">.</op:operator><name pos:line="799" pos:column="32">add</name></name><argument_list pos:line="799" pos:column="35">(<argument><expr><name pos:line="799" pos:column="36">allProfessorCombo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="801" pos:column="17">classCapacity</name> <op:operator pos:line="801" pos:column="31">=</op:operator> <op:operator pos:line="801" pos:column="33">new</op:operator> <call><name><name pos:line="801" pos:column="37">JComboBox</name><argument_list pos:line="801" pos:column="46">&lt;<argument><name pos:line="801" pos:column="47">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="801" pos:column="55">(<argument><expr><op:operator pos:line="801" pos:column="56">new</op:operator> <call><name><name pos:line="801" pos:column="60">DefaultComboBoxModel</name><argument_list pos:line="801" pos:column="80">&lt;<argument><name pos:line="801" pos:column="81">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="801" pos:column="89">(<argument><expr><op:operator pos:line="801" pos:column="90">new</op:operator> <name><name pos:line="801" pos:column="94">Integer</name><index pos:line="801" pos:column="101">[]</index></name> <block pos:line="801" pos:column="104">{<expr><lit:literal type="number" pos:line="801" pos:column="105">5</lit:literal></expr><op:operator pos:line="801" pos:column="106">,</op:operator><expr><lit:literal type="number" pos:line="801" pos:column="107">8</lit:literal></expr><op:operator pos:line="801" pos:column="108">,</op:operator><expr><lit:literal type="number" pos:line="801" pos:column="109">10</lit:literal></expr>}</block></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="802" pos:column="17">classCapacity</name><op:operator pos:line="802" pos:column="30">.</op:operator><name pos:line="802" pos:column="31">setBounds</name></name><argument_list pos:line="802" pos:column="40">(<argument><expr><lit:literal type="number" pos:line="802" pos:column="41">637</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="802" pos:column="46">56</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="802" pos:column="50">127</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="802" pos:column="55">20</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="803" pos:column="17">offerCourseTab</name><op:operator pos:line="803" pos:column="31">.</op:operator><name pos:line="803" pos:column="32">add</name></name><argument_list pos:line="803" pos:column="35">(<argument><expr><name pos:line="803" pos:column="36">classCapacity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="805" pos:column="17">JLabel</name></type> <name pos:line="805" pos:column="24">lblCourseNames</name> <init pos:line="805" pos:column="39">= <expr><op:operator pos:line="805" pos:column="41">new</op:operator> <call><name pos:line="805" pos:column="45">JLabel</name><argument_list pos:line="805" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="805" pos:column="52">"Department"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="806" pos:column="17">lblCourseNames</name><op:operator pos:line="806" pos:column="31">.</op:operator><name pos:line="806" pos:column="32">setBounds</name></name><argument_list pos:line="806" pos:column="41">(<argument><expr><lit:literal type="number" pos:line="806" pos:column="42">64</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="806" pos:column="46">33</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="806" pos:column="50">107</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="806" pos:column="55">14</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="807" pos:column="17">offerCourseTab</name><op:operator pos:line="807" pos:column="31">.</op:operator><name pos:line="807" pos:column="32">add</name></name><argument_list pos:line="807" pos:column="35">(<argument><expr><name pos:line="807" pos:column="36">lblCourseNames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="809" pos:column="17">JLabel</name></type> <name pos:line="809" pos:column="24">lblNewLabel_3</name> <init pos:line="809" pos:column="38">= <expr><op:operator pos:line="809" pos:column="40">new</op:operator> <call><name pos:line="809" pos:column="44">JLabel</name><argument_list pos:line="809" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="809" pos:column="51">"Courses"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="810" pos:column="17">lblNewLabel_3</name><op:operator pos:line="810" pos:column="30">.</op:operator><name pos:line="810" pos:column="31">setBounds</name></name><argument_list pos:line="810" pos:column="40">(<argument><expr><lit:literal type="number" pos:line="810" pos:column="41">256</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="810" pos:column="46">34</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="810" pos:column="50">97</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="810" pos:column="54">14</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="811" pos:column="17">offerCourseTab</name><op:operator pos:line="811" pos:column="31">.</op:operator><name pos:line="811" pos:column="32">add</name></name><argument_list pos:line="811" pos:column="35">(<argument><expr><name pos:line="811" pos:column="36">lblNewLabel_3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="813" pos:column="17">JLabel</name></type> <name pos:line="813" pos:column="24">lblTotalCapacity</name> <init pos:line="813" pos:column="41">= <expr><op:operator pos:line="813" pos:column="43">new</op:operator> <call><name pos:line="813" pos:column="47">JLabel</name><argument_list pos:line="813" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="813" pos:column="54">"Professor"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="814" pos:column="17">lblTotalCapacity</name><op:operator pos:line="814" pos:column="33">.</op:operator><name pos:line="814" pos:column="34">setBounds</name></name><argument_list pos:line="814" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="814" pos:column="44">462</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="814" pos:column="49">32</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="814" pos:column="53">107</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="814" pos:column="58">14</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="815" pos:column="17">offerCourseTab</name><op:operator pos:line="815" pos:column="31">.</op:operator><name pos:line="815" pos:column="32">add</name></name><argument_list pos:line="815" pos:column="35">(<argument><expr><name pos:line="815" pos:column="36">lblTotalCapacity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="817" pos:column="17">JLabel</name></type> <name pos:line="817" pos:column="24">lblTotalCapacity_1</name> <init pos:line="817" pos:column="43">= <expr><op:operator pos:line="817" pos:column="45">new</op:operator> <call><name pos:line="817" pos:column="49">JLabel</name><argument_list pos:line="817" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="817" pos:column="56">"Total Capacity"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="818" pos:column="17">lblTotalCapacity_1</name><op:operator pos:line="818" pos:column="35">.</op:operator><name pos:line="818" pos:column="36">setBounds</name></name><argument_list pos:line="818" pos:column="45">(<argument><expr><lit:literal type="number" pos:line="818" pos:column="46">636</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="818" pos:column="51">27</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="818" pos:column="55">84</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="818" pos:column="59">14</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="819" pos:column="17">offerCourseTab</name><op:operator pos:line="819" pos:column="31">.</op:operator><name pos:line="819" pos:column="32">add</name></name><argument_list pos:line="819" pos:column="35">(<argument><expr><name pos:line="819" pos:column="36">lblTotalCapacity_1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="821" pos:column="17">JButton</name></type> <name pos:line="821" pos:column="25">btnNewButton_1</name> <init pos:line="821" pos:column="40">= <expr><op:operator pos:line="821" pos:column="42">new</op:operator> <call><name pos:line="821" pos:column="46">JButton</name><argument_list pos:line="821" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="821" pos:column="54">"Offer this course"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="822" pos:column="17">btnNewButton_1</name><op:operator pos:line="822" pos:column="31">.</op:operator><name pos:line="822" pos:column="32">addActionListener</name></name><argument_list pos:line="822" pos:column="49">(<argument><expr><op:operator pos:line="822" pos:column="50">new</op:operator> <class><super><name pos:line="822" pos:column="54">ActionListener</name></super><argument_list pos:line="822" pos:column="68">()</argument_list> <block pos:line="822" pos:column="71">{
			<function><type><specifier pos:line="823" pos:column="25">public</specifier> <name pos:line="823" pos:column="32">void</name></type> <name pos:line="823" pos:column="37">actionPerformed</name><parameter_list pos:line="823" pos:column="52">(<param><decl><type><name pos:line="823" pos:column="53">ActionEvent</name></type> <name pos:line="823" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="823" pos:column="71">{
				<if pos:line="824" pos:column="33">if<condition pos:line="824" pos:column="35">(<expr><call><name><name pos:line="824" pos:column="36">allProfessorCombo</name><op:operator pos:line="824" pos:column="53">.</op:operator><name pos:line="824" pos:column="54">getModel</name></name><argument_list pos:line="824" pos:column="62">()</argument_list></call><op:operator pos:line="824" pos:column="64">.</op:operator><call><name pos:line="824" pos:column="65">getSize</name><argument_list pos:line="824" pos:column="72">()</argument_list></call><op:operator pos:line="824" pos:column="74">&lt;=</op:operator><lit:literal type="number" pos:line="824" pos:column="76">0</lit:literal></expr>)</condition><then><block pos:line="824" pos:column="78">{
					<expr_stmt><expr><call><name pos:line="825" pos:column="41">showMessage</name><argument_list pos:line="825" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="825" pos:column="53">"No professors in this department"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="825" pos:column="89">"Error"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="826" pos:column="41">return;</return>
				}</block></then></if>
				
				<if pos:line="829" pos:column="33">if<condition pos:line="829" pos:column="35">(<expr><call><name><name pos:line="829" pos:column="36">allDepartmentsCombo</name><op:operator pos:line="829" pos:column="55">.</op:operator><name pos:line="829" pos:column="56">getModel</name></name><argument_list pos:line="829" pos:column="64">()</argument_list></call><op:operator pos:line="829" pos:column="66">.</op:operator><call><name pos:line="829" pos:column="67">getSize</name><argument_list pos:line="829" pos:column="74">()</argument_list></call><op:operator pos:line="829" pos:column="76">&lt;=</op:operator><lit:literal type="number" pos:line="829" pos:column="78">0</lit:literal></expr>)</condition><then><block pos:line="829" pos:column="80">{
					<expr_stmt><expr><call><name pos:line="830" pos:column="41">showMessage</name><argument_list pos:line="830" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="830" pos:column="53">"Department does not exist"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="830" pos:column="82">"Error"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="831" pos:column="41">return;</return>
				}</block></then></if>
				
				<if pos:line="834" pos:column="33">if<condition pos:line="834" pos:column="35">(<expr><call><name><name pos:line="834" pos:column="36">allCoursesCombo</name><op:operator pos:line="834" pos:column="51">.</op:operator><name pos:line="834" pos:column="52">getModel</name></name><argument_list pos:line="834" pos:column="60">()</argument_list></call><op:operator pos:line="834" pos:column="62">.</op:operator><call><name pos:line="834" pos:column="63">getSize</name><argument_list pos:line="834" pos:column="70">()</argument_list></call><op:operator pos:line="834" pos:column="72">&lt;=</op:operator><lit:literal type="number" pos:line="834" pos:column="74">0</lit:literal></expr>)</condition><then><block pos:line="834" pos:column="76">{
					<expr_stmt><expr><call><name pos:line="835" pos:column="41">showMessage</name><argument_list pos:line="835" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="835" pos:column="53">"Course list empty"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="835" pos:column="74">"Error"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="836" pos:column="41">return;</return>
				}</block></then></if>
				
				<try pos:line="839" pos:column="33">try <block pos:line="839" pos:column="37">{
					<decl_stmt><decl><type><name pos:line="840" pos:column="41">Course</name></type> <name pos:line="840" pos:column="48">course</name> <init pos:line="840" pos:column="55">= <expr><op:operator pos:line="840" pos:column="57">new</op:operator> <call><name pos:line="840" pos:column="61">Course</name><argument_list pos:line="840" pos:column="67">(<argument><expr><op:operator pos:line="840" pos:column="68">(</op:operator><name pos:line="840" pos:column="69">String</name><op:operator pos:line="840" pos:column="75">)</op:operator><call><name><name pos:line="840" pos:column="76">allCoursesCombo</name><op:operator pos:line="840" pos:column="91">.</op:operator><name pos:line="840" pos:column="92">getSelectedItem</name></name><argument_list pos:line="840" pos:column="107">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="841" pos:column="41">Professor</name></type> <name pos:line="841" pos:column="51">professor</name> <init pos:line="841" pos:column="61">= <expr><op:operator pos:line="841" pos:column="63">new</op:operator> <call><name pos:line="841" pos:column="67">Professor</name><argument_list pos:line="841" pos:column="76">(<argument><expr><op:operator pos:line="841" pos:column="77">(</op:operator><name pos:line="841" pos:column="78">String</name><op:operator pos:line="841" pos:column="84">)</op:operator><call><name><name pos:line="841" pos:column="85">allProfessorCombo</name><op:operator pos:line="841" pos:column="102">.</op:operator><name pos:line="841" pos:column="103">getSelectedItem</name></name><argument_list pos:line="841" pos:column="118">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="842" pos:column="41">int</name></type> <name pos:line="842" pos:column="45">expectedCapacity</name> <init pos:line="842" pos:column="62">= <expr><op:operator pos:line="842" pos:column="64">(</op:operator><name pos:line="842" pos:column="65">Integer</name><op:operator pos:line="842" pos:column="72">)</op:operator><call><name><name pos:line="842" pos:column="73">classCapacity</name><op:operator pos:line="842" pos:column="86">.</op:operator><name pos:line="842" pos:column="87">getSelectedItem</name></name><argument_list pos:line="842" pos:column="102">()</argument_list></call></expr></init></decl>;</decl_stmt>	
					<try pos:line="843" pos:column="41">try <block pos:line="843" pos:column="45">{
						<decl_stmt><decl><type><name pos:line="844" pos:column="49">boolean</name></type> <name pos:line="844" pos:column="57">flag</name> <init pos:line="844" pos:column="62">= <expr><call><name><name pos:line="844" pos:column="64">CourseOffered</name><op:operator pos:line="844" pos:column="77">.</op:operator><name pos:line="844" pos:column="78">addCourseOfferingToDatabase</name></name><argument_list pos:line="844" pos:column="105">(<argument><expr><name pos:line="844" pos:column="106">course</name></expr></argument>, <argument><expr><name pos:line="844" pos:column="114">professor</name></expr></argument>, <argument><expr><name pos:line="844" pos:column="125">expectedCapacity</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<if pos:line="845" pos:column="49">if<condition pos:line="845" pos:column="51">(<expr><name pos:line="845" pos:column="52">flag</name></expr>)</condition><then pos:line="845" pos:column="57">
							<expr_stmt><expr><call><name pos:line="846" pos:column="57">showMessage</name><argument_list pos:line="846" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="846" pos:column="69">"Successfully added the new offering"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="846" pos:column="108">"Success"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
						<else pos:line="847" pos:column="49">else
							<expr_stmt><expr><call><name pos:line="848" pos:column="57">showMessage</name><argument_list pos:line="848" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="848" pos:column="69">"Error adding course offering"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="848" pos:column="101">"Failure"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
					}</block> <catch pos:line="849" pos:column="43">catch <parameter_list pos:line="849" pos:column="49">(<param><decl><type><name><name pos:line="849" pos:column="50">CourseOffered</name><op:operator pos:line="849" pos:column="63">.</op:operator><name pos:line="849" pos:column="64">CourseOfferingAlreadyExistsException</name></name></type> <name pos:line="849" pos:column="101">e</name></decl></param>)</parameter_list> <block pos:line="849" pos:column="104">{
						<expr_stmt><expr><call><name pos:line="850" pos:column="49">showMessage</name><argument_list pos:line="850" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="850" pos:column="61">"CourseOffering with same parameters already exists"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="850" pos:column="115">"Duplicate Offering"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<comment type="line" pos:line="851" pos:column="49">//e.printStackTrace();</comment>
					}</block></catch> <catch pos:line="852" pos:column="43">catch <parameter_list pos:line="852" pos:column="49">(<param><decl><type><name><name pos:line="852" pos:column="50">CourseOffered</name><op:operator pos:line="852" pos:column="63">.</op:operator><name pos:line="852" pos:column="64">CourseOfferingNotSchedulable</name></name></type> <name pos:line="852" pos:column="93">e</name></decl></param>)</parameter_list> <block pos:line="852" pos:column="96">{
						<expr_stmt><expr><call><name pos:line="853" pos:column="49">showMessage</name><argument_list pos:line="853" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="853" pos:column="61">"CourseOffering not added as there are no empty class"</lit:literal>
								<op:operator pos:line="854" pos:column="65">+</op:operator> <lit:literal type="string" pos:line="854" pos:column="67">" rooms available"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="854" pos:column="87">"Classrooms full"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<comment type="line" pos:line="855" pos:column="49">//e.printStackTrace();</comment>
					}</block></catch></try>
					
				}</block> <catch pos:line="858" pos:column="35">catch <parameter_list pos:line="858" pos:column="41">(<param><decl><type><name><name pos:line="858" pos:column="42">Course</name><op:operator pos:line="858" pos:column="48">.</op:operator><name pos:line="858" pos:column="49">CourseDoesNotExistException</name></name></type> <name pos:line="858" pos:column="77">e</name></decl></param>)</parameter_list> <block pos:line="858" pos:column="80">{
					<if pos:line="859" pos:column="41">if<condition pos:line="859" pos:column="43">(<expr><name pos:line="859" pos:column="44">e</name> <op:operator pos:line="859" pos:column="46">instanceof</op:operator> <name><name pos:line="859" pos:column="57">Course</name><op:operator pos:line="859" pos:column="63">.</op:operator><name pos:line="859" pos:column="64">CourseDoesNotExistException</name></name></expr>)</condition><then><block pos:line="859" pos:column="92">{
						<expr_stmt><expr><call><name pos:line="860" pos:column="49">showMessage</name><argument_list pos:line="860" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="860" pos:column="61">"Error Retrieving Course"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="860" pos:column="88">"Offering not added"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then>
					<else pos:line="862" pos:column="41">else<block pos:line="862" pos:column="45">{
						<expr_stmt><expr><call><name pos:line="863" pos:column="49">showMessage</name><argument_list pos:line="863" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="863" pos:column="61">"Error Retrieving Professor"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="863" pos:column="91">"Offering not added"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></else></if>
					<comment type="line" pos:line="865" pos:column="41">//e.printStackTrace();</comment>
				}</block></catch>
				
				<finally pos:line="868" pos:column="33">finally<block pos:line="868" pos:column="40">{
					<expr_stmt><expr><call><name pos:line="869" pos:column="41">initializeEveryThing</name><argument_list pos:line="869" pos:column="61">()</argument_list></call></expr>;</expr_stmt>
				}</block></finally></try>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="873" pos:column="17">btnNewButton_1</name><op:operator pos:line="873" pos:column="31">.</op:operator><name pos:line="873" pos:column="32">setBounds</name></name><argument_list pos:line="873" pos:column="41">(<argument><expr><lit:literal type="number" pos:line="873" pos:column="42">282</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="873" pos:column="47">130</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="873" pos:column="52">245</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="873" pos:column="57">59</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="874" pos:column="17">offerCourseTab</name><op:operator pos:line="874" pos:column="31">.</op:operator><name pos:line="874" pos:column="32">add</name></name><argument_list pos:line="874" pos:column="35">(<argument><expr><name pos:line="874" pos:column="36">btnNewButton_1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="876" pos:column="17">manageCourseInstance</name> <op:operator pos:line="876" pos:column="38">=</op:operator> <call><name><name pos:line="876" pos:column="40">manageCourse</name><op:operator pos:line="876" pos:column="52">.</op:operator><name pos:line="876" pos:column="53">getInstance</name></name><argument_list pos:line="876" pos:column="64">()</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="877" pos:column="17">JTabbedPane</name></type> <name pos:line="877" pos:column="29">courseManagementPane</name> <init pos:line="877" pos:column="50">= <expr><name pos:line="877" pos:column="52">manageCourseInstance</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="878" pos:column="17">managePeople</name><op:operator pos:line="878" pos:column="29">.</op:operator><name pos:line="878" pos:column="30">addTab</name></name><argument_list pos:line="878" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="878" pos:column="37">"Manage Courses"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="878" pos:column="55">null</lit:literal></expr></argument>, <argument><expr><name pos:line="878" pos:column="61">courseManagementPane</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="878" pos:column="83">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		
		<comment type="line" pos:line="881" pos:column="17">//--------------------------------------------------------</comment>
		<comment type="line" pos:line="882" pos:column="17">//--------------------Wait list monitor----------------------</comment>
		<comment type="line" pos:line="883" pos:column="17">//--------------------------------------------------------</comment>
		<decl_stmt><decl><type><name pos:line="884" pos:column="17">JPanel</name></type> <name pos:line="884" pos:column="24">waitListMonitor</name> <init pos:line="884" pos:column="40">= <expr><op:operator pos:line="884" pos:column="42">new</op:operator> <call><name pos:line="884" pos:column="46">JPanel</name><argument_list pos:line="884" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="885" pos:column="17">managePeople</name><op:operator pos:line="885" pos:column="29">.</op:operator><name pos:line="885" pos:column="30">addTab</name></name><argument_list pos:line="885" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="885" pos:column="37">"Monitor wait list"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="885" pos:column="58">null</lit:literal></expr></argument>, <argument><expr><name pos:line="885" pos:column="64">waitListMonitor</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="885" pos:column="81">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="886" pos:column="17">waitListMonitor</name><op:operator pos:line="886" pos:column="32">.</op:operator><name pos:line="886" pos:column="33">setLayout</name></name><argument_list pos:line="886" pos:column="42">(<argument><expr><lit:literal type="null" pos:line="886" pos:column="43">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="888" pos:column="17">waitListStudents</name> <op:operator pos:line="888" pos:column="34">=</op:operator> <op:operator pos:line="888" pos:column="36">new</op:operator> <call><name pos:line="888" pos:column="40">JScrollPane</name><argument_list pos:line="888" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="889" pos:column="17">waitListStudents</name><op:operator pos:line="889" pos:column="33">.</op:operator><name pos:line="889" pos:column="34">setForeground</name></name><argument_list pos:line="889" pos:column="47">(<argument><expr><name><name pos:line="889" pos:column="48">Color</name><op:operator pos:line="889" pos:column="53">.</op:operator><name pos:line="889" pos:column="54">WHITE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="890" pos:column="17">waitListStudents</name><op:operator pos:line="890" pos:column="33">.</op:operator><name pos:line="890" pos:column="34">setBackground</name></name><argument_list pos:line="890" pos:column="47">(<argument><expr><name><name pos:line="890" pos:column="48">Color</name><op:operator pos:line="890" pos:column="53">.</op:operator><name pos:line="890" pos:column="54">BLACK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="891" pos:column="17">waitListStudentsJList</name>  <op:operator pos:line="891" pos:column="40">=</op:operator> <op:operator pos:line="891" pos:column="42">new</op:operator> <call><name><name pos:line="891" pos:column="46">JList</name><argument_list pos:line="891" pos:column="51">&lt;<argument><name pos:line="891" pos:column="52">String</name></argument>&gt;</argument_list></name><argument_list pos:line="891" pos:column="59">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="892" pos:column="17">waitListStudentsJList</name><op:operator pos:line="892" pos:column="38">.</op:operator><name pos:line="892" pos:column="39">setSelectedIndex</name></name><argument_list pos:line="892" pos:column="55">(<argument><expr><lit:literal type="number" pos:line="892" pos:column="56">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="893" pos:column="17">waitListStudents</name><op:operator pos:line="893" pos:column="33">.</op:operator><name pos:line="893" pos:column="34">getViewport</name></name><argument_list pos:line="893" pos:column="45">()</argument_list></call><op:operator pos:line="893" pos:column="47">.</op:operator><call><name pos:line="893" pos:column="48">setView</name><argument_list pos:line="893" pos:column="55">(<argument><expr><name pos:line="893" pos:column="56">waitListStudentsJList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="894" pos:column="17">waitListStudents</name><op:operator pos:line="894" pos:column="33">.</op:operator><name pos:line="894" pos:column="34">setBounds</name></name><argument_list pos:line="894" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="894" pos:column="44">28</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="894" pos:column="48">83</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="894" pos:column="52">284</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="894" pos:column="57">271</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="895" pos:column="17">waitListMonitor</name><op:operator pos:line="895" pos:column="32">.</op:operator><name pos:line="895" pos:column="33">add</name></name><argument_list pos:line="895" pos:column="36">(<argument><expr><name pos:line="895" pos:column="37">waitListStudents</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="897" pos:column="17">emailedStudents</name> <op:operator pos:line="897" pos:column="33">=</op:operator> <op:operator pos:line="897" pos:column="35">new</op:operator> <call><name pos:line="897" pos:column="39">JScrollPane</name><argument_list pos:line="897" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="898" pos:column="17">emailedStudents</name><op:operator pos:line="898" pos:column="32">.</op:operator><name pos:line="898" pos:column="33">setBackground</name></name><argument_list pos:line="898" pos:column="46">(<argument><expr><name><name pos:line="898" pos:column="47">Color</name><op:operator pos:line="898" pos:column="52">.</op:operator><name pos:line="898" pos:column="53">BLACK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="899" pos:column="17">emailedStudents</name><op:operator pos:line="899" pos:column="32">.</op:operator><name pos:line="899" pos:column="33">setForeground</name></name><argument_list pos:line="899" pos:column="46">(<argument><expr><name><name pos:line="899" pos:column="47">Color</name><op:operator pos:line="899" pos:column="52">.</op:operator><name pos:line="899" pos:column="53">WHITE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="900" pos:column="17">emailedStudentsJList</name> <op:operator pos:line="900" pos:column="38">=</op:operator> <op:operator pos:line="900" pos:column="40">new</op:operator> <call><name><name pos:line="900" pos:column="44">JList</name><argument_list pos:line="900" pos:column="49">&lt;<argument><name pos:line="900" pos:column="50">String</name></argument>&gt;</argument_list></name><argument_list pos:line="900" pos:column="57">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="901" pos:column="17">emailedStudentsJList</name><op:operator pos:line="901" pos:column="37">.</op:operator><name pos:line="901" pos:column="38">setSelectedIndex</name></name><argument_list pos:line="901" pos:column="54">(<argument><expr><lit:literal type="number" pos:line="901" pos:column="55">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="902" pos:column="17">emailedStudents</name><op:operator pos:line="902" pos:column="32">.</op:operator><name pos:line="902" pos:column="33">getViewport</name></name><argument_list pos:line="902" pos:column="44">()</argument_list></call><op:operator pos:line="902" pos:column="46">.</op:operator><call><name pos:line="902" pos:column="47">setView</name><argument_list pos:line="902" pos:column="54">(<argument><expr><name pos:line="902" pos:column="55">emailedStudentsJList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="903" pos:column="17">emailedStudents</name><op:operator pos:line="903" pos:column="32">.</op:operator><name pos:line="903" pos:column="33">setBounds</name></name><argument_list pos:line="903" pos:column="42">(<argument><expr><lit:literal type="number" pos:line="903" pos:column="43">608</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="903" pos:column="48">83</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="903" pos:column="52">276</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="903" pos:column="57">271</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="904" pos:column="17">waitListMonitor</name><op:operator pos:line="904" pos:column="32">.</op:operator><name pos:line="904" pos:column="33">add</name></name><argument_list pos:line="904" pos:column="36">(<argument><expr><name pos:line="904" pos:column="37">emailedStudents</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="906" pos:column="17">courseOfferSelectForWaitListCombo</name> <op:operator pos:line="906" pos:column="51">=</op:operator> <op:operator pos:line="906" pos:column="53">new</op:operator> <call><name><name pos:line="906" pos:column="57">JComboBox</name><argument_list pos:line="906" pos:column="66">&lt;<argument><name pos:line="906" pos:column="67">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="906" pos:column="75">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="907" pos:column="17">courseOfferSelectForWaitListCombo</name><op:operator pos:line="907" pos:column="50">.</op:operator><name pos:line="907" pos:column="51">addActionListener</name></name><argument_list pos:line="907" pos:column="68">(<argument><expr><op:operator pos:line="907" pos:column="69">new</op:operator> <class><super><name pos:line="907" pos:column="73">ActionListener</name></super><argument_list pos:line="907" pos:column="87">()</argument_list> <block pos:line="907" pos:column="90">{
			<function><type><specifier pos:line="908" pos:column="25">public</specifier> <name pos:line="908" pos:column="32">void</name></type> <name pos:line="908" pos:column="37">actionPerformed</name><parameter_list pos:line="908" pos:column="52">(<param><decl><type><name pos:line="908" pos:column="53">ActionEvent</name></type> <name pos:line="908" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="908" pos:column="71">{
				<decl_stmt><decl><type><name pos:line="909" pos:column="33">int</name></type> <name pos:line="909" pos:column="37">offerID</name> <init pos:line="909" pos:column="45">= <expr><op:operator pos:line="909" pos:column="47">(</op:operator><name pos:line="909" pos:column="48">Integer</name><op:operator pos:line="909" pos:column="55">)</op:operator><call><name><name pos:line="909" pos:column="56">courseOfferSelectForWaitListCombo</name><op:operator pos:line="909" pos:column="89">.</op:operator><name pos:line="909" pos:column="90">getSelectedItem</name></name><argument_list pos:line="909" pos:column="105">()</argument_list></call></expr></init></decl>;</decl_stmt>
				
				<decl_stmt><decl><type><name><name pos:line="911" pos:column="33">DefaultListModel</name><argument_list pos:line="911" pos:column="49">&lt;<argument><name pos:line="911" pos:column="50">String</name></argument>&gt;</argument_list></name></type> <name pos:line="911" pos:column="58">waitList</name> <init pos:line="911" pos:column="67">= <expr><op:operator pos:line="911" pos:column="69">new</op:operator> <call><name><name pos:line="911" pos:column="73">DefaultListModel</name><argument_list pos:line="911" pos:column="89">&lt;<argument><name pos:line="911" pos:column="90">String</name></argument>&gt;</argument_list></name><argument_list pos:line="911" pos:column="97">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<for pos:line="912" pos:column="33">for(<init><decl><type><name pos:line="912" pos:column="37">Student</name></type> <name pos:line="912" pos:column="45">s</name><range pos:line="912" pos:column="46">:<expr><call><name><name pos:line="912" pos:column="47">WaitList</name><op:operator pos:line="912" pos:column="55">.</op:operator><name pos:line="912" pos:column="56">getStudentsOnWaitList</name></name><argument_list pos:line="912" pos:column="77">(<argument><expr><name pos:line="912" pos:column="78">offerID</name></expr></argument>)</argument_list></call></expr></range></decl></init>)<block pos:line="912" pos:column="87">{
					<expr_stmt><expr><call><name><name pos:line="913" pos:column="41">waitList</name><op:operator pos:line="913" pos:column="49">.</op:operator><name pos:line="913" pos:column="50">addElement</name></name><argument_list pos:line="913" pos:column="60">(<argument><expr><call><name><name pos:line="913" pos:column="61">s</name><op:operator pos:line="913" pos:column="62">.</op:operator><name pos:line="913" pos:column="63">getUIN</name></name><argument_list pos:line="913" pos:column="69">()</argument_list></call><op:operator pos:line="913" pos:column="71">+</op:operator><lit:literal type="string" pos:line="913" pos:column="72">"- "</lit:literal><op:operator pos:line="913" pos:column="76">+</op:operator><call><name><name pos:line="913" pos:column="77">s</name><op:operator pos:line="913" pos:column="78">.</op:operator><name pos:line="913" pos:column="79">getName</name></name><argument_list pos:line="913" pos:column="86">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></for>
				
				<expr_stmt><expr><call><name><name pos:line="916" pos:column="33">waitListStudentsJList</name><op:operator pos:line="916" pos:column="54">.</op:operator><name pos:line="916" pos:column="55">setModel</name></name><argument_list pos:line="916" pos:column="63">(<argument><expr><name pos:line="916" pos:column="64">waitList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
				<decl_stmt><decl><type><name><name pos:line="918" pos:column="33">DefaultListModel</name><argument_list pos:line="918" pos:column="49">&lt;<argument><name pos:line="918" pos:column="50">String</name></argument>&gt;</argument_list></name></type> <name pos:line="918" pos:column="58">emailedList</name> <init pos:line="918" pos:column="70">= <expr><op:operator pos:line="918" pos:column="72">new</op:operator> <call><name><name pos:line="918" pos:column="76">DefaultListModel</name><argument_list pos:line="918" pos:column="92">&lt;<argument><name pos:line="918" pos:column="93">String</name></argument>&gt;</argument_list></name><argument_list pos:line="918" pos:column="100">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<for pos:line="919" pos:column="33">for(<init><decl><type><name pos:line="919" pos:column="37">Student</name></type> <name pos:line="919" pos:column="45">s</name><range pos:line="919" pos:column="46">:<expr><call><name><name pos:line="919" pos:column="47">WaitList</name><op:operator pos:line="919" pos:column="55">.</op:operator><name pos:line="919" pos:column="56">getStudentsOnEmailList</name></name><argument_list pos:line="919" pos:column="78">(<argument><expr><name pos:line="919" pos:column="79">offerID</name></expr></argument>)</argument_list></call></expr></range></decl></init>)<block pos:line="919" pos:column="88">{
					<expr_stmt><expr><call><name><name pos:line="920" pos:column="41">emailedList</name><op:operator pos:line="920" pos:column="52">.</op:operator><name pos:line="920" pos:column="53">addElement</name></name><argument_list pos:line="920" pos:column="63">(<argument><expr><call><name><name pos:line="920" pos:column="64">s</name><op:operator pos:line="920" pos:column="65">.</op:operator><name pos:line="920" pos:column="66">getUIN</name></name><argument_list pos:line="920" pos:column="72">()</argument_list></call><op:operator pos:line="920" pos:column="74">+</op:operator><lit:literal type="string" pos:line="920" pos:column="75">"- "</lit:literal><op:operator pos:line="920" pos:column="79">+</op:operator><call><name><name pos:line="920" pos:column="80">s</name><op:operator pos:line="920" pos:column="81">.</op:operator><name pos:line="920" pos:column="82">getName</name></name><argument_list pos:line="920" pos:column="89">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></for>
				
				<expr_stmt><expr><call><name><name pos:line="923" pos:column="33">emailedStudentsJList</name><op:operator pos:line="923" pos:column="53">.</op:operator><name pos:line="923" pos:column="54">setModel</name></name><argument_list pos:line="923" pos:column="62">(<argument><expr><name pos:line="923" pos:column="63">emailedList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
				<try pos:line="925" pos:column="33">try <block pos:line="925" pos:column="37">{
					<decl_stmt><decl><type><name pos:line="926" pos:column="41">CourseOffered</name></type> <name pos:line="926" pos:column="55">co</name> <init pos:line="926" pos:column="58">= <expr><op:operator pos:line="926" pos:column="60">new</op:operator> <call><name pos:line="926" pos:column="64">CourseOffered</name><argument_list pos:line="926" pos:column="77">(<argument><expr><name pos:line="926" pos:column="78">offerID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					
					<expr_stmt><expr><call><name><name pos:line="928" pos:column="41">DBAnnotation</name><op:operator pos:line="928" pos:column="53">.</op:operator><name pos:line="928" pos:column="54">annoate</name></name><argument_list pos:line="928" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="928" pos:column="62">"courseName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="928" pos:column="76">"courses"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="928" pos:column="87">"CourseName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="928" pos:column="101">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="929" pos:column="41">String</name></type> <name pos:line="929" pos:column="48">courseName</name> <init pos:line="929" pos:column="59">= <expr><call><name><name pos:line="929" pos:column="61">co</name><op:operator pos:line="929" pos:column="63">.</op:operator><name pos:line="929" pos:column="64">getCourseName</name></name><argument_list pos:line="929" pos:column="77">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="930" pos:column="41">String</name></type> <name pos:line="930" pos:column="48">s</name><init pos:line="930" pos:column="49">=<expr><lit:literal type="string" pos:line="930" pos:column="50">"Course Name:"</lit:literal><op:operator pos:line="930" pos:column="64">+</op:operator><name pos:line="930" pos:column="65">courseName</name></expr></init></decl>;</decl_stmt>
					
					<expr_stmt><expr><call><name><name pos:line="932" pos:column="41">DBAnnotation</name><op:operator pos:line="932" pos:column="53">.</op:operator><name pos:line="932" pos:column="54">annoate</name></name><argument_list pos:line="932" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="932" pos:column="62">"deptName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="932" pos:column="74">"department"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="932" pos:column="88">"DepartmentName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="932" pos:column="106">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="933" pos:column="41">String</name></type> <name pos:line="933" pos:column="48">deptName</name> <init pos:line="933" pos:column="57">= <expr><call><name><name pos:line="933" pos:column="59">co</name><op:operator pos:line="933" pos:column="61">.</op:operator><name pos:line="933" pos:column="62">getDepartmentName</name></name><argument_list pos:line="933" pos:column="79">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><name pos:line="934" pos:column="41">s</name><op:operator pos:line="934" pos:column="42">+=</op:operator><lit:literal type="string" pos:line="934" pos:column="44">"\nDepartment:"</lit:literal><op:operator pos:line="934" pos:column="59">+</op:operator><name pos:line="934" pos:column="60">deptName</name></expr>;</expr_stmt>
					
					<expr_stmt><expr><call><name><name pos:line="936" pos:column="41">DBAnnotation</name><op:operator pos:line="936" pos:column="53">.</op:operator><name pos:line="936" pos:column="54">annoate</name></name><argument_list pos:line="936" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="936" pos:column="62">"classLoc"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="936" pos:column="74">"classroom"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="936" pos:column="87">"ClassroomLocation"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="936" pos:column="108">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="937" pos:column="41">String</name></type> <name pos:line="937" pos:column="48">classLoc</name> <init pos:line="937" pos:column="57">= <expr><call><name><name pos:line="937" pos:column="59">co</name><op:operator pos:line="937" pos:column="61">.</op:operator><name pos:line="937" pos:column="62">getClassRoomLocation</name></name><argument_list pos:line="937" pos:column="82">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><name pos:line="938" pos:column="41">s</name><op:operator pos:line="938" pos:column="42">+=</op:operator><lit:literal type="string" pos:line="938" pos:column="44">"\nClassroom Location:"</lit:literal><op:operator pos:line="938" pos:column="67">+</op:operator><name pos:line="938" pos:column="68">classLoc</name></expr>;</expr_stmt>
					
					<expr_stmt><expr><call><name><name pos:line="940" pos:column="41">DBAnnotation</name><op:operator pos:line="940" pos:column="53">.</op:operator><name pos:line="940" pos:column="54">annoate</name></name><argument_list pos:line="940" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="940" pos:column="62">"className"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="940" pos:column="75">"classroom"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="940" pos:column="88">"ClassroomName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="940" pos:column="105">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="941" pos:column="41">String</name></type> <name pos:line="941" pos:column="48">className</name> <init pos:line="941" pos:column="58">= <expr><call><name><name pos:line="941" pos:column="60">co</name><op:operator pos:line="941" pos:column="62">.</op:operator><name pos:line="941" pos:column="63">getClassRoomName</name></name><argument_list pos:line="941" pos:column="79">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><name pos:line="942" pos:column="41">s</name><op:operator pos:line="942" pos:column="42">+=</op:operator><lit:literal type="string" pos:line="942" pos:column="44">"\nClasstroom Name:"</lit:literal><op:operator pos:line="942" pos:column="64">+</op:operator> <name pos:line="942" pos:column="66">className</name></expr>;</expr_stmt>
					
					<expr_stmt><expr><name pos:line="944" pos:column="41">s</name><op:operator pos:line="944" pos:column="42">+=</op:operator><lit:literal type="string" pos:line="944" pos:column="44">"\nTimings:"</lit:literal><op:operator pos:line="944" pos:column="56">+</op:operator><call><name><name pos:line="944" pos:column="57">co</name><op:operator pos:line="944" pos:column="59">.</op:operator><name pos:line="944" pos:column="60">getTiming</name></name><argument_list pos:line="944" pos:column="69">()</argument_list></call></expr>;</expr_stmt>
					
					<expr_stmt><expr><call><name><name pos:line="946" pos:column="41">DBAnnotation</name><op:operator pos:line="946" pos:column="53">.</op:operator><name pos:line="946" pos:column="54">annoate</name></name><argument_list pos:line="946" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="946" pos:column="62">"prof"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="946" pos:column="70">"people"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="946" pos:column="80">"Name"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="946" pos:column="88">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="947" pos:column="41">String</name></type> <name pos:line="947" pos:column="48">prof</name> <init pos:line="947" pos:column="53">= <expr><call><name><name pos:line="947" pos:column="55">co</name><op:operator pos:line="947" pos:column="57">.</op:operator><name pos:line="947" pos:column="58">getProfessorName</name></name><argument_list pos:line="947" pos:column="74">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><name pos:line="948" pos:column="41">s</name><op:operator pos:line="948" pos:column="42">+=</op:operator><lit:literal type="string" pos:line="948" pos:column="44">"\nTaught by professor:"</lit:literal><op:operator pos:line="948" pos:column="68">+</op:operator><name pos:line="948" pos:column="69">prof</name></expr>;</expr_stmt>
					
					<expr_stmt><expr><call><name><name pos:line="950" pos:column="41">courseDetailsTextPane</name><op:operator pos:line="950" pos:column="62">.</op:operator><name pos:line="950" pos:column="63">setText</name></name><argument_list pos:line="950" pos:column="70">(<argument><expr><name pos:line="950" pos:column="71">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
				}</block> <catch pos:line="952" pos:column="35">catch <parameter_list pos:line="952" pos:column="41">(<param><decl><type><name><name pos:line="952" pos:column="42">Course</name><op:operator pos:line="952" pos:column="48">.</op:operator><name pos:line="952" pos:column="49">CourseDoesNotExistException</name></name></type> <name pos:line="952" pos:column="77">e</name></decl></param>)</parameter_list> <block pos:line="952" pos:column="80">{
					<comment type="line" pos:line="953" pos:column="41">// TODO Auto-generated catch block</comment>
					<expr_stmt><expr><call><name><name pos:line="954" pos:column="41">e</name><op:operator pos:line="954" pos:column="42">.</op:operator><name pos:line="954" pos:column="43">printStackTrace</name></name><argument_list pos:line="954" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch> <catch pos:line="955" pos:column="35">catch <parameter_list pos:line="955" pos:column="41">(<param><decl><type><name><name pos:line="955" pos:column="42">CourseOffered</name><op:operator pos:line="955" pos:column="55">.</op:operator><name pos:line="955" pos:column="56">CourseOfferingDoesNotExistException</name></name></type> <name pos:line="955" pos:column="92">e</name></decl></param>)</parameter_list> <block pos:line="955" pos:column="95">{
					<comment type="line" pos:line="956" pos:column="41">// TODO Auto-generated catch block</comment>
					<expr_stmt><expr><call><name><name pos:line="957" pos:column="41">e</name><op:operator pos:line="957" pos:column="42">.</op:operator><name pos:line="957" pos:column="43">printStackTrace</name></name><argument_list pos:line="957" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="961" pos:column="17">courseOfferSelectForWaitListCombo</name><op:operator pos:line="961" pos:column="50">.</op:operator><name pos:line="961" pos:column="51">setBounds</name></name><argument_list pos:line="961" pos:column="60">(<argument><expr><lit:literal type="number" pos:line="961" pos:column="61">375</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="961" pos:column="66">11</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="961" pos:column="70">133</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="961" pos:column="75">20</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="962" pos:column="17">waitListMonitor</name><op:operator pos:line="962" pos:column="32">.</op:operator><name pos:line="962" pos:column="33">add</name></name><argument_list pos:line="962" pos:column="36">(<argument><expr><name pos:line="962" pos:column="37">courseOfferSelectForWaitListCombo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="964" pos:column="17">JLabel</name></type> <name pos:line="964" pos:column="24">lblCurrentStudentsOn</name> <init pos:line="964" pos:column="45">= <expr><op:operator pos:line="964" pos:column="47">new</op:operator> <call><name pos:line="964" pos:column="51">JLabel</name><argument_list pos:line="964" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="964" pos:column="58">"Current students on waitlist"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="965" pos:column="17">lblCurrentStudentsOn</name><op:operator pos:line="965" pos:column="37">.</op:operator><name pos:line="965" pos:column="38">setBounds</name></name><argument_list pos:line="965" pos:column="47">(<argument><expr><lit:literal type="number" pos:line="965" pos:column="48">28</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="965" pos:column="52">55</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="965" pos:column="56">276</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="965" pos:column="61">17</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="966" pos:column="17">waitListMonitor</name><op:operator pos:line="966" pos:column="32">.</op:operator><name pos:line="966" pos:column="33">add</name></name><argument_list pos:line="966" pos:column="36">(<argument><expr><name pos:line="966" pos:column="37">lblCurrentStudentsOn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="968" pos:column="17">JLabel</name></type> <name pos:line="968" pos:column="24">lblStudentAllowedTo</name> <init pos:line="968" pos:column="44">= <expr><op:operator pos:line="968" pos:column="46">new</op:operator> <call><name pos:line="968" pos:column="50">JLabel</name><argument_list pos:line="968" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="968" pos:column="57">"Students who received emails to register"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="969" pos:column="17">lblStudentAllowedTo</name><op:operator pos:line="969" pos:column="36">.</op:operator><name pos:line="969" pos:column="37">setBounds</name></name><argument_list pos:line="969" pos:column="46">(<argument><expr><lit:literal type="number" pos:line="969" pos:column="47">608</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="969" pos:column="52">56</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="969" pos:column="56">276</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="969" pos:column="61">14</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="970" pos:column="17">waitListMonitor</name><op:operator pos:line="970" pos:column="32">.</op:operator><name pos:line="970" pos:column="33">add</name></name><argument_list pos:line="970" pos:column="36">(<argument><expr><name pos:line="970" pos:column="37">lblStudentAllowedTo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="972" pos:column="17">courseDetailsTextPane</name> <op:operator pos:line="972" pos:column="39">=</op:operator> <op:operator pos:line="972" pos:column="41">new</op:operator> <call><name pos:line="972" pos:column="45">JTextPane</name><argument_list pos:line="972" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="973" pos:column="17">courseDetailsTextPane</name><op:operator pos:line="973" pos:column="38">.</op:operator><name pos:line="973" pos:column="39">setFont</name></name><argument_list pos:line="973" pos:column="46">(<argument><expr><op:operator pos:line="973" pos:column="47">new</op:operator> <call><name pos:line="973" pos:column="51">Font</name><argument_list pos:line="973" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="973" pos:column="56">"Times New Roman"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="973" pos:column="75">Font</name><op:operator pos:line="973" pos:column="79">.</op:operator><name pos:line="973" pos:column="80">BOLD</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="973" pos:column="86">12</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="974" pos:column="17">courseDetailsTextPane</name><op:operator pos:line="974" pos:column="38">.</op:operator><name pos:line="974" pos:column="39">setForeground</name></name><argument_list pos:line="974" pos:column="52">(<argument><expr><name><name pos:line="974" pos:column="53">Color</name><op:operator pos:line="974" pos:column="58">.</op:operator><name pos:line="974" pos:column="59">WHITE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="975" pos:column="17">courseDetailsTextPane</name><op:operator pos:line="975" pos:column="38">.</op:operator><name pos:line="975" pos:column="39">setBackground</name></name><argument_list pos:line="975" pos:column="52">(<argument><expr><name><name pos:line="975" pos:column="53">Color</name><op:operator pos:line="975" pos:column="58">.</op:operator><name pos:line="975" pos:column="59">BLACK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="976" pos:column="17">courseDetailsTextPane</name><op:operator pos:line="976" pos:column="38">.</op:operator><name pos:line="976" pos:column="39">setBounds</name></name><argument_list pos:line="976" pos:column="48">(<argument><expr><lit:literal type="number" pos:line="976" pos:column="49">347</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="976" pos:column="54">81</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="976" pos:column="58">209</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="976" pos:column="63">154</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="977" pos:column="17">waitListMonitor</name><op:operator pos:line="977" pos:column="32">.</op:operator><name pos:line="977" pos:column="33">add</name></name><argument_list pos:line="977" pos:column="36">(<argument><expr><name pos:line="977" pos:column="37">courseDetailsTextPane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="979" pos:column="17">JTabbedPane</name></type> <name pos:line="979" pos:column="29">departmentPane</name> <init pos:line="979" pos:column="44">= <expr><op:operator pos:line="979" pos:column="46">new</op:operator> <call><name pos:line="979" pos:column="50">JTabbedPane</name><argument_list pos:line="979" pos:column="61">(<argument><expr><name><name pos:line="979" pos:column="62">JTabbedPane</name><op:operator pos:line="979" pos:column="73">.</op:operator><name pos:line="979" pos:column="74">TOP</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="980" pos:column="17">managePeople</name><op:operator pos:line="980" pos:column="29">.</op:operator><name pos:line="980" pos:column="30">addTab</name></name><argument_list pos:line="980" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="980" pos:column="37">"Manage Departments"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="980" pos:column="59">null</lit:literal></expr></argument>, <argument><expr><name pos:line="980" pos:column="65">departmentPane</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="980" pos:column="81">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="982" pos:column="17">JPanel</name></type> <name pos:line="982" pos:column="24">addDepartmentPanel</name> <init pos:line="982" pos:column="43">= <expr><op:operator pos:line="982" pos:column="45">new</op:operator> <call><name pos:line="982" pos:column="49">JPanel</name><argument_list pos:line="982" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="983" pos:column="17">departmentPane</name><op:operator pos:line="983" pos:column="31">.</op:operator><name pos:line="983" pos:column="32">addTab</name></name><argument_list pos:line="983" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="983" pos:column="39">"Add New Department"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="983" pos:column="61">null</lit:literal></expr></argument>, <argument><expr><name pos:line="983" pos:column="67">addDepartmentPanel</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="983" pos:column="87">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="984" pos:column="17">addDepartmentPanel</name><op:operator pos:line="984" pos:column="35">.</op:operator><name pos:line="984" pos:column="36">setLayout</name></name><argument_list pos:line="984" pos:column="45">(<argument><expr><op:operator pos:line="984" pos:column="46">new</op:operator> <call><name pos:line="984" pos:column="50">GridLayout</name><argument_list pos:line="984" pos:column="60">(<argument><expr><lit:literal type="number" pos:line="984" pos:column="61">2</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="984" pos:column="64">2</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="984" pos:column="67">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="984" pos:column="70">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="986" pos:column="17">JLabel</name></type> <name pos:line="986" pos:column="24">lblDepartmentName</name> <init pos:line="986" pos:column="42">= <expr><op:operator pos:line="986" pos:column="44">new</op:operator> <call><name pos:line="986" pos:column="48">JLabel</name><argument_list pos:line="986" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="986" pos:column="55">"Department Name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="987" pos:column="17">addDepartmentPanel</name><op:operator pos:line="987" pos:column="35">.</op:operator><name pos:line="987" pos:column="36">add</name></name><argument_list pos:line="987" pos:column="39">(<argument><expr><name pos:line="987" pos:column="40">lblDepartmentName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="989" pos:column="17">txtDepartmentName</name> <op:operator pos:line="989" pos:column="35">=</op:operator> <op:operator pos:line="989" pos:column="37">new</op:operator> <call><name pos:line="989" pos:column="41">JTextField</name><argument_list pos:line="989" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="990" pos:column="17">addDepartmentPanel</name><op:operator pos:line="990" pos:column="35">.</op:operator><name pos:line="990" pos:column="36">add</name></name><argument_list pos:line="990" pos:column="39">(<argument><expr><name pos:line="990" pos:column="40">txtDepartmentName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="991" pos:column="17">txtDepartmentName</name><op:operator pos:line="991" pos:column="34">.</op:operator><name pos:line="991" pos:column="35">setColumns</name></name><argument_list pos:line="991" pos:column="45">(<argument><expr><lit:literal type="number" pos:line="991" pos:column="46">10</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="993" pos:column="17">JLabel</name></type> <name pos:line="993" pos:column="24">lblConfirm_1</name> <init pos:line="993" pos:column="37">= <expr><op:operator pos:line="993" pos:column="39">new</op:operator> <call><name pos:line="993" pos:column="43">JLabel</name><argument_list pos:line="993" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="993" pos:column="50">"Confirm"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="994" pos:column="17">addDepartmentPanel</name><op:operator pos:line="994" pos:column="35">.</op:operator><name pos:line="994" pos:column="36">add</name></name><argument_list pos:line="994" pos:column="39">(<argument><expr><name pos:line="994" pos:column="40">lblConfirm_1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="996" pos:column="17">JButton</name></type> <name pos:line="996" pos:column="25">btnAddDepartment</name> <init pos:line="996" pos:column="42">= <expr><op:operator pos:line="996" pos:column="44">new</op:operator> <call><name pos:line="996" pos:column="48">JButton</name><argument_list pos:line="996" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="996" pos:column="56">"Add department"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="997" pos:column="17">btnAddDepartment</name><op:operator pos:line="997" pos:column="33">.</op:operator><name pos:line="997" pos:column="34">addActionListener</name></name><argument_list pos:line="997" pos:column="51">(<argument><expr><op:operator pos:line="997" pos:column="52">new</op:operator> <class><super><name pos:line="997" pos:column="56">ActionListener</name></super><argument_list pos:line="997" pos:column="70">()</argument_list> <block pos:line="997" pos:column="73">{
			<function><type><specifier pos:line="998" pos:column="25">public</specifier> <name pos:line="998" pos:column="32">void</name></type> <name pos:line="998" pos:column="37">actionPerformed</name><parameter_list pos:line="998" pos:column="52">(<param><decl><type><name pos:line="998" pos:column="53">ActionEvent</name></type> <name pos:line="998" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="998" pos:column="71">{
				<decl_stmt><decl><type><name pos:line="999" pos:column="33">boolean</name></type> <name pos:line="999" pos:column="41">checkName</name> <init pos:line="999" pos:column="51">= <expr><call><name pos:line="999" pos:column="53">checkStringForName</name><argument_list pos:line="999" pos:column="71">(<argument><expr><call><name><name pos:line="999" pos:column="72">txtDepartmentName</name><op:operator pos:line="999" pos:column="89">.</op:operator><name pos:line="999" pos:column="90">getText</name></name><argument_list pos:line="999" pos:column="97">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="1000" pos:column="33">if<condition pos:line="1000" pos:column="35">(<expr><op:operator pos:line="1000" pos:column="36">!</op:operator><name pos:line="1000" pos:column="37">checkName</name></expr>)</condition><then pos:line="1000" pos:column="47">
					<expr_stmt><expr><call><name pos:line="1001" pos:column="41">showMessage</name><argument_list pos:line="1001" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="1001" pos:column="53">"Department name format incorrect"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1001" pos:column="89">"Please correct the department name"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="1002" pos:column="33">else<block pos:line="1002" pos:column="37">{
					<try pos:line="1003" pos:column="41">try <block pos:line="1003" pos:column="45">{
						<expr_stmt><expr><call><name><name pos:line="1004" pos:column="49">Department</name><op:operator pos:line="1004" pos:column="59">.</op:operator><name pos:line="1004" pos:column="60">addNewDepartment</name></name><argument_list pos:line="1004" pos:column="76">(<argument><expr><call><name><name pos:line="1004" pos:column="77">txtDepartmentName</name><op:operator pos:line="1004" pos:column="94">.</op:operator><name pos:line="1004" pos:column="95">getText</name></name><argument_list pos:line="1004" pos:column="102">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name pos:line="1005" pos:column="49">initializeEveryThing</name><argument_list pos:line="1005" pos:column="69">()</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name pos:line="1006" pos:column="49">showMessage</name><argument_list pos:line="1006" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="1006" pos:column="61">"Successfully added department:"</lit:literal><op:operator pos:line="1006" pos:column="93">+</op:operator><call><name><name pos:line="1006" pos:column="94">txtDepartmentName</name><op:operator pos:line="1006" pos:column="111">.</op:operator><name pos:line="1006" pos:column="112">getText</name></name><argument_list pos:line="1006" pos:column="119">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1006" pos:column="123">"Success"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="1007" pos:column="49">txtDepartmentName</name><op:operator pos:line="1007" pos:column="66">.</op:operator><name pos:line="1007" pos:column="67">setText</name></name><argument_list pos:line="1007" pos:column="74">(<argument><expr><lit:literal type="string" pos:line="1007" pos:column="75">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block> <catch pos:line="1008" pos:column="43">catch <parameter_list pos:line="1008" pos:column="49">(<param><decl><type><name><name pos:line="1008" pos:column="50">Department</name><op:operator pos:line="1008" pos:column="60">.</op:operator><name pos:line="1008" pos:column="61">DepartmentAlreadyExistsException</name></name></type> <name pos:line="1008" pos:column="94">e</name></decl></param>)</parameter_list> <block pos:line="1008" pos:column="97">{
						<expr_stmt><expr><call><name pos:line="1009" pos:column="49">showMessage</name><argument_list pos:line="1009" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="1009" pos:column="61">"Department with same name already exists"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1009" pos:column="105">"Duplicate department"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="1010" pos:column="49">e</name><op:operator pos:line="1010" pos:column="50">.</op:operator><name pos:line="1010" pos:column="51">printStackTrace</name></name><argument_list pos:line="1010" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
					}</block></catch></try>
				}</block></else></if>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1015" pos:column="17">addDepartmentPanel</name><op:operator pos:line="1015" pos:column="35">.</op:operator><name pos:line="1015" pos:column="36">add</name></name><argument_list pos:line="1015" pos:column="39">(<argument><expr><name pos:line="1015" pos:column="40">btnAddDepartment</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="1017" pos:column="17">JPanel</name></type> <name pos:line="1017" pos:column="24">updateDepartment</name> <init pos:line="1017" pos:column="41">= <expr><op:operator pos:line="1017" pos:column="43">new</op:operator> <call><name pos:line="1017" pos:column="47">JPanel</name><argument_list pos:line="1017" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="1018" pos:column="17">departmentPane</name><op:operator pos:line="1018" pos:column="31">.</op:operator><name pos:line="1018" pos:column="32">addTab</name></name><argument_list pos:line="1018" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="1018" pos:column="39">"Update Department"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="1018" pos:column="60">null</lit:literal></expr></argument>, <argument><expr><name pos:line="1018" pos:column="66">updateDepartment</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="1018" pos:column="84">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1019" pos:column="17">updateDepartment</name><op:operator pos:line="1019" pos:column="33">.</op:operator><name pos:line="1019" pos:column="34">setLayout</name></name><argument_list pos:line="1019" pos:column="43">(<argument><expr><op:operator pos:line="1019" pos:column="44">new</op:operator> <call><name pos:line="1019" pos:column="48">GridLayout</name><argument_list pos:line="1019" pos:column="58">(<argument><expr><lit:literal type="number" pos:line="1019" pos:column="59">3</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1019" pos:column="62">2</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1019" pos:column="65">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1019" pos:column="68">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="1021" pos:column="17">JLabel</name></type> <name pos:line="1021" pos:column="24">lblSelectDepartment_1</name> <init pos:line="1021" pos:column="46">= <expr><op:operator pos:line="1021" pos:column="48">new</op:operator> <call><name pos:line="1021" pos:column="52">JLabel</name><argument_list pos:line="1021" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="1021" pos:column="59">"Select department"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="1022" pos:column="17">updateDepartment</name><op:operator pos:line="1022" pos:column="33">.</op:operator><name pos:line="1022" pos:column="34">add</name></name><argument_list pos:line="1022" pos:column="37">(<argument><expr><name pos:line="1022" pos:column="38">lblSelectDepartment_1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="1024" pos:column="17">updateDeptCombo</name> <op:operator pos:line="1024" pos:column="33">=</op:operator> <op:operator pos:line="1024" pos:column="35">new</op:operator> <call><name><name pos:line="1024" pos:column="39">JComboBox</name><argument_list pos:line="1024" pos:column="48">&lt;<argument><name pos:line="1024" pos:column="49">String</name></argument>&gt;</argument_list></name><argument_list pos:line="1024" pos:column="56">(<argument><expr><op:operator pos:line="1024" pos:column="57">new</op:operator> <call><name><name pos:line="1024" pos:column="61">DefaultComboBoxModel</name><argument_list pos:line="1024" pos:column="81">&lt;<argument><name pos:line="1024" pos:column="82">String</name></argument>&gt;</argument_list></name><argument_list pos:line="1024" pos:column="89">(<argument><expr><name pos:line="1024" pos:column="90">departmentNameArray</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1025" pos:column="17">updateDepartment</name><op:operator pos:line="1025" pos:column="33">.</op:operator><name pos:line="1025" pos:column="34">add</name></name><argument_list pos:line="1025" pos:column="37">(<argument><expr><name pos:line="1025" pos:column="38">updateDeptCombo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="1027" pos:column="17">JLabel</name></type> <name pos:line="1027" pos:column="24">lblEnterNewName</name> <init pos:line="1027" pos:column="40">= <expr><op:operator pos:line="1027" pos:column="42">new</op:operator> <call><name pos:line="1027" pos:column="46">JLabel</name><argument_list pos:line="1027" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="1027" pos:column="53">"Enter new name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="1028" pos:column="17">updateDepartment</name><op:operator pos:line="1028" pos:column="33">.</op:operator><name pos:line="1028" pos:column="34">add</name></name><argument_list pos:line="1028" pos:column="37">(<argument><expr><name pos:line="1028" pos:column="38">lblEnterNewName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="1030" pos:column="17">txtDepartmentnamenew</name> <op:operator pos:line="1030" pos:column="38">=</op:operator> <op:operator pos:line="1030" pos:column="40">new</op:operator> <call><name pos:line="1030" pos:column="44">JTextField</name><argument_list pos:line="1030" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1031" pos:column="17">updateDepartment</name><op:operator pos:line="1031" pos:column="33">.</op:operator><name pos:line="1031" pos:column="34">add</name></name><argument_list pos:line="1031" pos:column="37">(<argument><expr><name pos:line="1031" pos:column="38">txtDepartmentnamenew</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1032" pos:column="17">txtDepartmentnamenew</name><op:operator pos:line="1032" pos:column="37">.</op:operator><name pos:line="1032" pos:column="38">setColumns</name></name><argument_list pos:line="1032" pos:column="48">(<argument><expr><lit:literal type="number" pos:line="1032" pos:column="49">10</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="1034" pos:column="17">JLabel</name></type> <name pos:line="1034" pos:column="24">lblNewLabel_4</name> <init pos:line="1034" pos:column="38">= <expr><op:operator pos:line="1034" pos:column="40">new</op:operator> <call><name pos:line="1034" pos:column="44">JLabel</name><argument_list pos:line="1034" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="1034" pos:column="51">"Confirm"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="1035" pos:column="17">updateDepartment</name><op:operator pos:line="1035" pos:column="33">.</op:operator><name pos:line="1035" pos:column="34">add</name></name><argument_list pos:line="1035" pos:column="37">(<argument><expr><name pos:line="1035" pos:column="38">lblNewLabel_4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="1037" pos:column="17">JButton</name></type> <name pos:line="1037" pos:column="25">btnUpdateSelectedDepartment</name> <init pos:line="1037" pos:column="53">= <expr><op:operator pos:line="1037" pos:column="55">new</op:operator> <call><name pos:line="1037" pos:column="59">JButton</name><argument_list pos:line="1037" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="1037" pos:column="67">"Update selected department"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="1038" pos:column="17">btnUpdateSelectedDepartment</name><op:operator pos:line="1038" pos:column="44">.</op:operator><name pos:line="1038" pos:column="45">addActionListener</name></name><argument_list pos:line="1038" pos:column="62">(<argument><expr><op:operator pos:line="1038" pos:column="63">new</op:operator> <class><super><name pos:line="1038" pos:column="67">ActionListener</name></super><argument_list pos:line="1038" pos:column="81">()</argument_list> <block pos:line="1038" pos:column="84">{
			
			<function><type><annotation pos:line="1040" pos:column="25">@<name pos:line="1040" pos:column="26">Override</name></annotation>
			<specifier pos:line="1041" pos:column="25">public</specifier> <name pos:line="1041" pos:column="32">void</name></type> <name pos:line="1041" pos:column="37">actionPerformed</name><parameter_list pos:line="1041" pos:column="52">(<param><decl><type><name pos:line="1041" pos:column="53">ActionEvent</name></type> <name pos:line="1041" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="1041" pos:column="71">{
				<if pos:line="1042" pos:column="33">if<condition pos:line="1042" pos:column="35">(<expr><call><name><name pos:line="1042" pos:column="36">updateDeptCombo</name><op:operator pos:line="1042" pos:column="51">.</op:operator><name pos:line="1042" pos:column="52">getModel</name></name><argument_list pos:line="1042" pos:column="60">()</argument_list></call><op:operator pos:line="1042" pos:column="62">.</op:operator><call><name pos:line="1042" pos:column="63">getSize</name><argument_list pos:line="1042" pos:column="70">()</argument_list></call><op:operator pos:line="1042" pos:column="72">&lt;=</op:operator><lit:literal type="number" pos:line="1042" pos:column="74">0</lit:literal></expr>)</condition><then><block pos:line="1042" pos:column="76">{
					<expr_stmt><expr><call><name pos:line="1043" pos:column="41">showMessage</name><argument_list pos:line="1043" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="1043" pos:column="53">"No department selected"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1043" pos:column="79">"Error"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="1044" pos:column="41">return;</return>
				}</block></then>
				
				<else pos:line="1047" pos:column="33">else<block pos:line="1047" pos:column="37">{
					<decl_stmt><decl><type><name pos:line="1048" pos:column="41">String</name></type> <name pos:line="1048" pos:column="48">oldName</name> <init pos:line="1048" pos:column="56">= <expr><call><name><name pos:line="1048" pos:column="58">updateDeptCombo</name><op:operator pos:line="1048" pos:column="73">.</op:operator><name pos:line="1048" pos:column="74">getItemAt</name></name><argument_list pos:line="1048" pos:column="83">(<argument><expr><call><name><name pos:line="1048" pos:column="84">updateDeptCombo</name><op:operator pos:line="1048" pos:column="99">.</op:operator><name pos:line="1048" pos:column="100">getSelectedIndex</name></name><argument_list pos:line="1048" pos:column="116">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="1049" pos:column="41">Department</name></type> <name pos:line="1049" pos:column="52">d</name></decl>;</decl_stmt>
					<try pos:line="1050" pos:column="41">try <block pos:line="1050" pos:column="45">{
						<expr_stmt><expr><name pos:line="1051" pos:column="49">d</name> <op:operator pos:line="1051" pos:column="51">=</op:operator> <op:operator pos:line="1051" pos:column="53">new</op:operator> <call><name pos:line="1051" pos:column="57">Department</name><argument_list pos:line="1051" pos:column="67">(<argument><expr><name pos:line="1051" pos:column="68">oldName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<decl_stmt><decl><type><name pos:line="1052" pos:column="49">boolean</name></type> <name pos:line="1052" pos:column="57">flag</name> <init pos:line="1052" pos:column="62">= <expr><call><name pos:line="1052" pos:column="64">checkStringForName</name><argument_list pos:line="1052" pos:column="82">(<argument><expr><call><name><name pos:line="1052" pos:column="83">txtDepartmentnamenew</name><op:operator pos:line="1052" pos:column="103">.</op:operator><name pos:line="1052" pos:column="104">getText</name></name><argument_list pos:line="1052" pos:column="111">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<if pos:line="1053" pos:column="49">if<condition pos:line="1053" pos:column="51">(<expr><name pos:line="1053" pos:column="52">flag</name></expr>)</condition><then><block pos:line="1053" pos:column="57">{
							<expr_stmt><expr><call><name><name pos:line="1054" pos:column="57">d</name><op:operator pos:line="1054" pos:column="58">.</op:operator><name pos:line="1054" pos:column="59">setDepartmentName</name></name><argument_list pos:line="1054" pos:column="76">(<argument><expr><call><name><name pos:line="1054" pos:column="77">txtDepartmentnamenew</name><op:operator pos:line="1054" pos:column="97">.</op:operator><name pos:line="1054" pos:column="98">getText</name></name><argument_list pos:line="1054" pos:column="105">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<decl_stmt><decl><type><name pos:line="1055" pos:column="57">boolean</name></type> <name pos:line="1055" pos:column="65">isUpdated</name> <init pos:line="1055" pos:column="75">= <expr><call><name><name pos:line="1055" pos:column="77">d</name><op:operator pos:line="1055" pos:column="78">.</op:operator><name pos:line="1055" pos:column="79">updateDepartment</name></name><argument_list pos:line="1055" pos:column="95">()</argument_list></call></expr></init></decl>;</decl_stmt>
							<if pos:line="1056" pos:column="57">if<condition pos:line="1056" pos:column="59">(<expr><name pos:line="1056" pos:column="60">isUpdated</name></expr>)</condition><then><block pos:line="1056" pos:column="70">{
								<expr_stmt><expr><call><name pos:line="1057" pos:column="65">showMessage</name><argument_list pos:line="1057" pos:column="76">(<argument><expr><lit:literal type="string" pos:line="1057" pos:column="77">"Successfully updated department name"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1057" pos:column="117">"Success"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								<expr_stmt><expr><call><name pos:line="1058" pos:column="65">initializeEveryThing</name><argument_list pos:line="1058" pos:column="85">()</argument_list></call></expr>;</expr_stmt>
							}</block></then>
							<else pos:line="1060" pos:column="57">else<block pos:line="1060" pos:column="61">{
								<expr_stmt><expr><call><name pos:line="1061" pos:column="65">showMessage</name><argument_list pos:line="1061" pos:column="76">(<argument><expr><lit:literal type="string" pos:line="1061" pos:column="77">"Failed to update"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1061" pos:column="97">"Failure"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							}</block></else></if>
						}</block></then>
						
						<else pos:line="1065" pos:column="49">else<block pos:line="1065" pos:column="53">{
							<expr_stmt><expr><call><name pos:line="1066" pos:column="57">showMessage</name><argument_list pos:line="1066" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="1066" pos:column="69">"Please enter depratment name correctly"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1066" pos:column="111">"Error in name format"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></else></if>
						
					}</block> <catch pos:line="1069" pos:column="43">catch <parameter_list pos:line="1069" pos:column="49">(<param><decl><type><name><name pos:line="1069" pos:column="50">Department</name><op:operator pos:line="1069" pos:column="60">.</op:operator><name pos:line="1069" pos:column="61">DepartmentDoesNotExistException</name></name></type> <name pos:line="1069" pos:column="93">e</name></decl></param>)</parameter_list> <block pos:line="1069" pos:column="96">{
						<expr_stmt><expr><call><name pos:line="1070" pos:column="49">showMessage</name><argument_list pos:line="1070" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="1070" pos:column="61">"Department not found"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1070" pos:column="85">"Error"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="1071" pos:column="49">e</name><op:operator pos:line="1071" pos:column="50">.</op:operator><name pos:line="1071" pos:column="51">printStackTrace</name></name><argument_list pos:line="1071" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
					}</block></catch> <catch pos:line="1072" pos:column="43">catch <parameter_list pos:line="1072" pos:column="49">(<param><decl><type><name><name pos:line="1072" pos:column="50">Department</name><op:operator pos:line="1072" pos:column="60">.</op:operator><name pos:line="1072" pos:column="61">DepartmentAlreadyExistsException</name></name></type> <name pos:line="1072" pos:column="94">e</name></decl></param>)</parameter_list> <block pos:line="1072" pos:column="97">{
						<expr_stmt><expr><call><name pos:line="1073" pos:column="49">showMessage</name><argument_list pos:line="1073" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="1073" pos:column="61">"Department name already exists"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1073" pos:column="95">"Failure"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="1074" pos:column="49">e</name><op:operator pos:line="1074" pos:column="50">.</op:operator><name pos:line="1074" pos:column="51">printStackTrace</name></name><argument_list pos:line="1074" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
					}</block></catch></try>
				}</block></else></if>
				
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1080" pos:column="17">updateDepartment</name><op:operator pos:line="1080" pos:column="33">.</op:operator><name pos:line="1080" pos:column="34">add</name></name><argument_list pos:line="1080" pos:column="37">(<argument><expr><name pos:line="1080" pos:column="38">btnUpdateSelectedDepartment</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="1082" pos:column="17">giveBonusPanel</name> <op:operator pos:line="1082" pos:column="32">=</op:operator> <op:operator pos:line="1082" pos:column="34">new</op:operator> <call><name pos:line="1082" pos:column="38">GiveBonusUI</name><argument_list pos:line="1082" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1083" pos:column="17">managePeople</name><op:operator pos:line="1083" pos:column="29">.</op:operator><name pos:line="1083" pos:column="30">addTab</name></name><argument_list pos:line="1083" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="1083" pos:column="37">"Manage Employee pay"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="1083" pos:column="60">null</lit:literal></expr></argument>, <argument><expr><name pos:line="1083" pos:column="66">giveBonusPanel</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="1083" pos:column="82">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="1085" pos:column="17">JPanel</name></type> <name pos:line="1085" pos:column="24">logOutPanel</name> <init pos:line="1085" pos:column="36">= <expr><op:operator pos:line="1085" pos:column="38">new</op:operator> <call><name pos:line="1085" pos:column="42">LogOutUI</name><argument_list pos:line="1085" pos:column="50">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="1086" pos:column="17">managePeople</name><op:operator pos:line="1086" pos:column="29">.</op:operator><name pos:line="1086" pos:column="30">addTab</name></name><argument_list pos:line="1086" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="1086" pos:column="37">"Logout"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="1086" pos:column="47">null</lit:literal></expr></argument>, <argument><expr><name pos:line="1086" pos:column="53">logOutPanel</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="1086" pos:column="66">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1087" pos:column="17">logOutPanel</name><op:operator pos:line="1087" pos:column="28">.</op:operator><name pos:line="1087" pos:column="29">setLayout</name></name><argument_list pos:line="1087" pos:column="38">(<argument><expr><lit:literal type="null" pos:line="1087" pos:column="39">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="1089" pos:column="17">JPanel</name></type> <name pos:line="1089" pos:column="24">goToNextSemester</name> <init pos:line="1089" pos:column="41">= <expr><op:operator pos:line="1089" pos:column="43">new</op:operator> <call><name pos:line="1089" pos:column="47">JPanel</name><argument_list pos:line="1089" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="1090" pos:column="17">managePeople</name><op:operator pos:line="1090" pos:column="29">.</op:operator><name pos:line="1090" pos:column="30">addTab</name></name><argument_list pos:line="1090" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="1090" pos:column="37">"Go to next Semester"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="1090" pos:column="60">null</lit:literal></expr></argument>, <argument><expr><name pos:line="1090" pos:column="66">goToNextSemester</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="1090" pos:column="84">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1091" pos:column="17">goToNextSemester</name><op:operator pos:line="1091" pos:column="33">.</op:operator><name pos:line="1091" pos:column="34">setLayout</name></name><argument_list pos:line="1091" pos:column="43">(<argument><expr><lit:literal type="null" pos:line="1091" pos:column="44">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><specifier pos:line="1093" pos:column="17">final</specifier> <name pos:line="1093" pos:column="23">JButton</name></type> <name pos:line="1093" pos:column="31">btnInitializeNextSemester</name> <init pos:line="1093" pos:column="57">= <expr><op:operator pos:line="1093" pos:column="59">new</op:operator> <call><name pos:line="1093" pos:column="63">JButton</name><argument_list pos:line="1093" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="1093" pos:column="71">"Initialize next semester (USE WITH EXTREME CAUTION)"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="1094" pos:column="17">btnInitializeNextSemester</name><op:operator pos:line="1094" pos:column="42">.</op:operator><name pos:line="1094" pos:column="43">addActionListener</name></name><argument_list pos:line="1094" pos:column="60">(<argument><expr><op:operator pos:line="1094" pos:column="61">new</op:operator> <class><super><name pos:line="1094" pos:column="65">ActionListener</name></super><argument_list pos:line="1094" pos:column="79">()</argument_list> <block pos:line="1094" pos:column="82">{
			<function><type><specifier pos:line="1095" pos:column="25">public</specifier> <name pos:line="1095" pos:column="32">void</name></type> <name pos:line="1095" pos:column="37">actionPerformed</name><parameter_list pos:line="1095" pos:column="52">(<param><decl><type><name pos:line="1095" pos:column="53">ActionEvent</name></type> <name pos:line="1095" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="1095" pos:column="71">{
				<decl_stmt><decl><type><name pos:line="1096" pos:column="33">int</name></type> <name pos:line="1096" pos:column="37">reply</name> <init pos:line="1096" pos:column="43">= <expr><call><name><name pos:line="1096" pos:column="45">JOptionPane</name><op:operator pos:line="1096" pos:column="56">.</op:operator><name pos:line="1096" pos:column="57">showConfirmDialog</name></name><argument_list pos:line="1096" pos:column="74">(<argument><expr><name pos:line="1096" pos:column="75">btnInitializeNextSemester</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1096" pos:column="102">"Are you sure\nAll the grades of all the students will be finalized"</lit:literal>
						<op:operator pos:line="1097" pos:column="49">+</op:operator> <lit:literal type="string" pos:line="1097" pos:column="51">" and a new semester will be initialized. \nWARNING: This is an irreversible process"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="1098" pos:column="33">if<condition pos:line="1098" pos:column="35">(<expr><name pos:line="1098" pos:column="36">reply</name> <op:operator pos:line="1098" pos:column="42">==</op:operator> <lit:literal type="number" pos:line="1098" pos:column="45">0</lit:literal></expr>)</condition><then><block pos:line="1098" pos:column="47">{
					<decl_stmt><decl><type><name pos:line="1099" pos:column="41">Semester</name></type> <name pos:line="1099" pos:column="50">s</name> <init pos:line="1099" pos:column="52">= <expr><op:operator pos:line="1099" pos:column="54">new</op:operator> <call><name pos:line="1099" pos:column="58">Semester</name><argument_list pos:line="1099" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="1100" pos:column="41">s</name><op:operator pos:line="1100" pos:column="42">.</op:operator><name pos:line="1100" pos:column="43">goToNextSemester</name></name><argument_list pos:line="1100" pos:column="59">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="1101" pos:column="41">JOptionPane</name><op:operator pos:line="1101" pos:column="52">.</op:operator><name pos:line="1101" pos:column="53">showMessageDialog</name></name><argument_list pos:line="1101" pos:column="70">(<argument><expr><name pos:line="1101" pos:column="71">btnInitializeNextSemester</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1101" pos:column="98">"Successfully initializes new semester, the application will now close."</lit:literal>
							<op:operator pos:line="1102" pos:column="57">+</op:operator> <lit:literal type="string" pos:line="1102" pos:column="59">" Please restart application and login again for the changes to reflect"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="1103" pos:column="41">System</name><op:operator pos:line="1103" pos:column="47">.</op:operator><name pos:line="1103" pos:column="48">exit</name></name><argument_list pos:line="1103" pos:column="52">(<argument><expr><name pos:line="1103" pos:column="53">ABORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
				}</block></then></if>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1108" pos:column="17">btnInitializeNextSemester</name><op:operator pos:line="1108" pos:column="42">.</op:operator><name pos:line="1108" pos:column="43">setBounds</name></name><argument_list pos:line="1108" pos:column="52">(<argument><expr><lit:literal type="number" pos:line="1108" pos:column="53">195</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1108" pos:column="58">135</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1108" pos:column="63">442</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1108" pos:column="68">112</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1109" pos:column="17">goToNextSemester</name><op:operator pos:line="1109" pos:column="33">.</op:operator><name pos:line="1109" pos:column="34">add</name></name><argument_list pos:line="1109" pos:column="37">(<argument><expr><name pos:line="1109" pos:column="38">btnInitializeNextSemester</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
		
		<comment type="line" pos:line="1112" pos:column="17">//initialize data across UI</comment>
		<expr_stmt><expr><call><name pos:line="1113" pos:column="17">initializeEveryThing</name><argument_list pos:line="1113" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="1115" pos:column="17">Thread</name></type> <name pos:line="1115" pos:column="24">waitListViewRefresh</name> <init pos:line="1115" pos:column="44">= <expr><op:operator pos:line="1115" pos:column="46">new</op:operator> <call><name pos:line="1115" pos:column="50">Thread</name><argument_list pos:line="1115" pos:column="56">(<argument><expr><op:operator pos:line="1115" pos:column="57">new</op:operator> <call><name pos:line="1115" pos:column="61">MonitorWaitList</name><argument_list pos:line="1115" pos:column="76">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="1116" pos:column="17">waitListViewRefresh</name><op:operator pos:line="1116" pos:column="36">.</op:operator><name pos:line="1116" pos:column="37">start</name></name><argument_list pos:line="1116" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
		
	}</block></constructor>
	
	<function><type><specifier pos:line="1120" pos:column="9">public</specifier> <specifier pos:line="1120" pos:column="16">static</specifier> <name pos:line="1120" pos:column="23">AdminUI</name></type> <name pos:line="1120" pos:column="31">initializeAdminUI</name><parameter_list pos:line="1120" pos:column="48">(<param><decl><type><name pos:line="1120" pos:column="49">Admin</name></type> <name pos:line="1120" pos:column="55">admin</name></decl></param>)</parameter_list> <throws pos:line="1120" pos:column="62">throws <argument><expr><name><name pos:line="1120" pos:column="69">Department</name><op:operator pos:line="1120" pos:column="79">.</op:operator><name pos:line="1120" pos:column="80">DepartmentDoesNotExistException</name></name></expr></argument></throws><block pos:line="1120" pos:column="111">{
		<expr_stmt><expr><name pos:line="1121" pos:column="17">adminUI</name> <op:operator pos:line="1121" pos:column="25">=</op:operator> <op:operator pos:line="1121" pos:column="27">new</op:operator> <call><name pos:line="1121" pos:column="31">AdminUI</name><argument_list pos:line="1121" pos:column="38">(<argument><expr><name pos:line="1121" pos:column="39">admin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="1122" pos:column="17">return <expr><name pos:line="1122" pos:column="24">adminUI</name></expr>;</return> 
	}</block></function>
	
	<function><type><specifier pos:line="1125" pos:column="9">public</specifier> <specifier pos:line="1125" pos:column="16">static</specifier> <name pos:line="1125" pos:column="23">AdminUI</name></type> <name pos:line="1125" pos:column="31">getInstance</name><parameter_list pos:line="1125" pos:column="42">()</parameter_list><block pos:line="1125" pos:column="44">{
		<return pos:line="1126" pos:column="17">return <expr><name pos:line="1126" pos:column="24">adminUI</name></expr>;</return>
	}</block></function>
	
	<function><type><specifier pos:line="1129" pos:column="9">public</specifier> <name pos:line="1129" pos:column="16">void</name></type> <name pos:line="1129" pos:column="21">initializeEveryThing</name><parameter_list pos:line="1129" pos:column="41">()</parameter_list><block pos:line="1129" pos:column="43">{
		<expr_stmt><expr><call><name pos:line="1130" pos:column="17">initializeBackgroundData</name><argument_list pos:line="1130" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1131" pos:column="17">initializeJListsForCourseSchedule</name><argument_list pos:line="1131" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="1132" pos:column="17">ClassroomLocation</name></type> <name pos:line="1132" pos:column="35">l</name> <init pos:line="1132" pos:column="37">= <expr><call><name><name pos:line="1132" pos:column="39">ClassroomLocation</name><op:operator pos:line="1132" pos:column="56">.</op:operator><name pos:line="1132" pos:column="57">valueOf</name></name><argument_list pos:line="1132" pos:column="64">(<argument><expr><op:operator pos:line="1132" pos:column="65">(</op:operator><name pos:line="1132" pos:column="66">String</name><op:operator pos:line="1132" pos:column="72">)</op:operator><call><name><name pos:line="1132" pos:column="73">classLocationCombo</name><op:operator pos:line="1132" pos:column="91">.</op:operator><name pos:line="1132" pos:column="92">getSelectedItem</name></name><argument_list pos:line="1132" pos:column="107">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1133" pos:column="17">int</name></type> <name pos:line="1133" pos:column="21">timeSlotType</name> <init pos:line="1133" pos:column="34">= <expr><call><name><name pos:line="1133" pos:column="36">timeSlotTypeCombo</name><op:operator pos:line="1133" pos:column="53">.</op:operator><name pos:line="1133" pos:column="54">getSelectedIndex</name></name><argument_list pos:line="1133" pos:column="70">()</argument_list></call><op:operator pos:line="1133" pos:column="72">+</op:operator><lit:literal type="number" pos:line="1133" pos:column="73">1</lit:literal></expr></init></decl>;</decl_stmt>
		<if pos:line="1134" pos:column="17">if<condition pos:line="1134" pos:column="19">(<expr><call><name><name pos:line="1134" pos:column="20">courseScheduledCombo</name><op:operator pos:line="1134" pos:column="40">.</op:operator><name pos:line="1134" pos:column="41">getModel</name></name><argument_list pos:line="1134" pos:column="49">()</argument_list></call><op:operator pos:line="1134" pos:column="51">.</op:operator><call><name pos:line="1134" pos:column="52">getSize</name><argument_list pos:line="1134" pos:column="59">()</argument_list></call><op:operator pos:line="1134" pos:column="61">&gt;</op:operator><lit:literal type="number" pos:line="1134" pos:column="62">0</lit:literal></expr>)</condition><then><block pos:line="1134" pos:column="64">{
			<decl_stmt><decl><type><name pos:line="1135" pos:column="25">CourseOffered</name></type> <name pos:line="1135" pos:column="39">co</name> <init pos:line="1135" pos:column="42">= <expr><call><name><name pos:line="1135" pos:column="44">coursesOffered</name><op:operator pos:line="1135" pos:column="58">.</op:operator><name pos:line="1135" pos:column="59">get</name></name><argument_list pos:line="1135" pos:column="62">(<argument><expr><op:operator pos:line="1135" pos:column="63">(</op:operator><name pos:line="1135" pos:column="64">Integer</name><op:operator pos:line="1135" pos:column="71">)</op:operator><call><name><name pos:line="1135" pos:column="72">courseScheduledCombo</name><op:operator pos:line="1135" pos:column="92">.</op:operator><name pos:line="1135" pos:column="93">getSelectedItem</name></name><argument_list pos:line="1135" pos:column="108">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="1136" pos:column="25">initilizeSingleRescheduleTab</name><argument_list pos:line="1136" pos:column="53">(<argument><expr><op:operator pos:line="1136" pos:column="54">(</op:operator><name pos:line="1136" pos:column="55">Integer</name><op:operator pos:line="1136" pos:column="62">)</op:operator><call><name><name pos:line="1136" pos:column="63">courseScheduledCombo</name><op:operator pos:line="1136" pos:column="83">.</op:operator><name pos:line="1136" pos:column="84">getSelectedItem</name></name><argument_list pos:line="1136" pos:column="99">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="1137" pos:column="25">int</name></type> <name pos:line="1137" pos:column="29">cap</name> <init pos:line="1137" pos:column="33">= <expr><call><name><name pos:line="1137" pos:column="35">co</name><op:operator pos:line="1137" pos:column="37">.</op:operator><name pos:line="1137" pos:column="38">getTotalCapacity</name></name><argument_list pos:line="1137" pos:column="54">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="1138" pos:column="25">initializeEmptyClassAndTimeSlot</name><argument_list pos:line="1138" pos:column="56">(<argument><expr><name pos:line="1138" pos:column="57">l</name></expr></argument>, <argument><expr><name pos:line="1138" pos:column="60">timeSlotType</name></expr></argument>, <argument><expr><name pos:line="1138" pos:column="74">cap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		
		<expr_stmt><expr><call><name pos:line="1141" pos:column="17">initializeOfferTab</name><argument_list pos:line="1141" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1142" pos:column="17">initializeWaitListMonitor</name><argument_list pos:line="1142" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1143" pos:column="17">manageCourseInstance</name><op:operator pos:line="1143" pos:column="37">.</op:operator><name pos:line="1143" pos:column="38">initializeAll</name></name><argument_list pos:line="1143" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name><name pos:line="1145" pos:column="17">DefaultComboBoxModel</name><argument_list pos:line="1145" pos:column="37">&lt;<argument><name pos:line="1145" pos:column="38">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="1145" pos:column="47">allIDsModel</name> <init pos:line="1145" pos:column="59">= <expr><op:operator pos:line="1145" pos:column="61">new</op:operator> <call><name><name pos:line="1145" pos:column="65">DefaultComboBoxModel</name><argument_list pos:line="1145" pos:column="85">&lt;<argument><name pos:line="1145" pos:column="86">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="1145" pos:column="94">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:line="1146" pos:column="17">for(<init><decl><type><name pos:line="1146" pos:column="21">Integer</name></type> <name pos:line="1146" pos:column="29">i</name><range pos:line="1146" pos:column="30">:<expr><call><name><name pos:line="1146" pos:column="31">coursesOffered</name><op:operator pos:line="1146" pos:column="45">.</op:operator><name pos:line="1146" pos:column="46">keySet</name></name><argument_list pos:line="1146" pos:column="52">()</argument_list></call></expr></range></decl></init>)<block pos:line="1146" pos:column="55">{
			<expr_stmt><expr><call><name><name pos:line="1147" pos:column="25">allIDsModel</name><op:operator pos:line="1147" pos:column="36">.</op:operator><name pos:line="1147" pos:column="37">addElement</name></name><argument_list pos:line="1147" pos:column="47">(<argument><expr><name pos:line="1147" pos:column="48">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		<expr_stmt><expr><call><name><name pos:line="1149" pos:column="17">courseOfferIDComboBox</name><op:operator pos:line="1149" pos:column="38">.</op:operator><name pos:line="1149" pos:column="39">setModel</name></name><argument_list pos:line="1149" pos:column="47">(<argument><expr><name pos:line="1149" pos:column="48">allIDsModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name><name pos:line="1151" pos:column="17">DefaultComboBoxModel</name><argument_list pos:line="1151" pos:column="37">&lt;<argument><name pos:line="1151" pos:column="38">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="1151" pos:column="47">allStudentsModel</name> <init pos:line="1151" pos:column="64">= <expr><op:operator pos:line="1151" pos:column="66">new</op:operator> <call><name><name pos:line="1151" pos:column="70">DefaultComboBoxModel</name><argument_list pos:line="1151" pos:column="90">&lt;<argument><name pos:line="1151" pos:column="91">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="1151" pos:column="99">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:line="1152" pos:column="17">for(<init><decl><type><name pos:line="1152" pos:column="21">Student</name></type> <name pos:line="1152" pos:column="29">s</name><range pos:line="1152" pos:column="30">:<expr><name pos:line="1152" pos:column="31">students</name></expr></range></decl></init>)<block pos:line="1152" pos:column="40">{
			<expr_stmt><expr><call><name><name pos:line="1153" pos:column="25">allStudentsModel</name><op:operator pos:line="1153" pos:column="41">.</op:operator><name pos:line="1153" pos:column="42">addElement</name></name><argument_list pos:line="1153" pos:column="52">(<argument><expr><call><name><name pos:line="1153" pos:column="53">s</name><op:operator pos:line="1153" pos:column="54">.</op:operator><name pos:line="1153" pos:column="55">getUIN</name></name><argument_list pos:line="1153" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		
		<for pos:line="1156" pos:column="17">for(<init><decl><type><name pos:line="1156" pos:column="21">Student</name></type> <name pos:line="1156" pos:column="29">s</name><range pos:line="1156" pos:column="30">:<expr><name pos:line="1156" pos:column="31">tas</name></expr></range></decl></init>)<block pos:line="1156" pos:column="35">{
			<expr_stmt><expr><call><name><name pos:line="1157" pos:column="25">allStudentsModel</name><op:operator pos:line="1157" pos:column="41">.</op:operator><name pos:line="1157" pos:column="42">addElement</name></name><argument_list pos:line="1157" pos:column="52">(<argument><expr><call><name><name pos:line="1157" pos:column="53">s</name><op:operator pos:line="1157" pos:column="54">.</op:operator><name pos:line="1157" pos:column="55">getUIN</name></name><argument_list pos:line="1157" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		<expr_stmt><expr><call><name><name pos:line="1159" pos:column="17">taComboBox</name><op:operator pos:line="1159" pos:column="27">.</op:operator><name pos:line="1159" pos:column="28">setModel</name></name><argument_list pos:line="1159" pos:column="36">(<argument><expr><name pos:line="1159" pos:column="37">allStudentsModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><name pos:line="1161" pos:column="17">departmentSelectStudent</name><op:operator pos:line="1161" pos:column="40">.</op:operator><name pos:line="1161" pos:column="41">setModel</name></name><argument_list pos:line="1161" pos:column="49">(<argument><expr><op:operator pos:line="1161" pos:column="50">new</op:operator> <call><name><name pos:line="1161" pos:column="54">DefaultComboBoxModel</name><argument_list pos:line="1161" pos:column="74">&lt;<argument><name pos:line="1161" pos:column="75">String</name></argument>&gt;</argument_list></name><argument_list pos:line="1161" pos:column="82">(<argument><expr><name pos:line="1161" pos:column="83">departmentNameArray</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1162" pos:column="17">departmentSelectProfessor</name><op:operator pos:line="1162" pos:column="42">.</op:operator><name pos:line="1162" pos:column="43">setModel</name></name><argument_list pos:line="1162" pos:column="51">(<argument><expr><op:operator pos:line="1162" pos:column="52">new</op:operator> <call><name><name pos:line="1162" pos:column="56">DefaultComboBoxModel</name><argument_list pos:line="1162" pos:column="76">&lt;<argument><name pos:line="1162" pos:column="77">String</name></argument>&gt;</argument_list></name><argument_list pos:line="1162" pos:column="84">(<argument><expr><name pos:line="1162" pos:column="85">departmentNameArray</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1163" pos:column="17">updateDeptCombo</name><op:operator pos:line="1163" pos:column="32">.</op:operator><name pos:line="1163" pos:column="33">setModel</name></name><argument_list pos:line="1163" pos:column="41">(<argument><expr><op:operator pos:line="1163" pos:column="42">new</op:operator> <call><name><name pos:line="1163" pos:column="46">DefaultComboBoxModel</name><argument_list pos:line="1163" pos:column="66">&lt;<argument><name pos:line="1163" pos:column="67">String</name></argument>&gt;</argument_list></name><argument_list pos:line="1163" pos:column="74">(<argument><expr><name pos:line="1163" pos:column="75">departmentNameArray</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1164" pos:column="17">adminDeptCombo</name><op:operator pos:line="1164" pos:column="31">.</op:operator><name pos:line="1164" pos:column="32">setModel</name></name><argument_list pos:line="1164" pos:column="40">(<argument><expr><op:operator pos:line="1164" pos:column="41">new</op:operator> <call><name><name pos:line="1164" pos:column="45">DefaultComboBoxModel</name><argument_list pos:line="1164" pos:column="65">&lt;<argument><name pos:line="1164" pos:column="66">String</name></argument>&gt;</argument_list></name><argument_list pos:line="1164" pos:column="73">(<argument><expr><name pos:line="1164" pos:column="74">departmentNameArray</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
	}</block></function>
	
	<function><type><specifier pos:line="1168" pos:column="9">public</specifier> <name pos:line="1168" pos:column="16">boolean</name></type> <name pos:line="1168" pos:column="24">checkStringForName</name><parameter_list pos:line="1168" pos:column="42">(<param><decl><type><name pos:line="1168" pos:column="43">String</name></type> <name pos:line="1168" pos:column="50">s</name></decl></param>)</parameter_list><block pos:line="1168" pos:column="52">{
		<return pos:line="1169" pos:column="17">return <expr><call><name><name pos:line="1169" pos:column="24">s</name><op:operator pos:line="1169" pos:column="25">.</op:operator><name pos:line="1169" pos:column="26">matches</name></name><argument_list pos:line="1169" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="1169" pos:column="34">"[a-zA-Z]+( [a-zA-Z]+)?"</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
	}</block></function>
	
	<function><type><specifier pos:line="1172" pos:column="9">public</specifier> <name pos:line="1172" pos:column="16">void</name></type> <name pos:line="1172" pos:column="21">showMessage</name><parameter_list pos:line="1172" pos:column="32">(<param><decl><type><name pos:line="1172" pos:column="33">String</name></type> <name pos:line="1172" pos:column="40">message</name></decl></param>, <param><decl><type><name pos:line="1172" pos:column="49">String</name></type> <name pos:line="1172" pos:column="56">title</name></decl></param>)</parameter_list>
    <block pos:line="1173" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="1174" pos:column="9">JOptionPane</name><op:operator pos:line="1174" pos:column="20">.</op:operator><name pos:line="1174" pos:column="21">showMessageDialog</name></name><argument_list pos:line="1174" pos:column="38">(<argument><expr><lit:literal type="null" pos:line="1174" pos:column="39">null</lit:literal></expr></argument>, <argument><expr><name pos:line="1174" pos:column="45">message</name></expr></argument>, <argument><expr><name pos:line="1174" pos:column="54">title</name></expr></argument>, <argument><expr><name><name pos:line="1174" pos:column="61">JOptionPane</name><op:operator pos:line="1174" pos:column="72">.</op:operator><name pos:line="1174" pos:column="73">INFORMATION_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
	
	<function><type><specifier pos:line="1177" pos:column="9">public</specifier> <name pos:line="1177" pos:column="16">boolean</name></type> <name pos:line="1177" pos:column="24">addStudent</name><parameter_list pos:line="1177" pos:column="34">()</parameter_list><block pos:line="1177" pos:column="36">{
		<decl_stmt><decl><type><name pos:line="1178" pos:column="17">boolean</name></type> <name pos:line="1178" pos:column="25">isAdded</name> <init pos:line="1178" pos:column="33">= <expr><lit:literal type="boolean" pos:line="1178" pos:column="35">false</lit:literal></expr></init></decl>;</decl_stmt>
		<if pos:line="1179" pos:column="17">if<condition pos:line="1179" pos:column="19">(<expr><op:operator pos:line="1179" pos:column="20">!</op:operator><call><name pos:line="1179" pos:column="21">checkStringForName</name><argument_list pos:line="1179" pos:column="39">(<argument><expr><call><name><name pos:line="1179" pos:column="40">studentNameText</name><op:operator pos:line="1179" pos:column="55">.</op:operator><name pos:line="1179" pos:column="56">getText</name></name><argument_list pos:line="1179" pos:column="63">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then><block pos:line="1179" pos:column="67">{
			<expr_stmt><expr><call><name pos:line="1180" pos:column="25">showMessage</name><argument_list pos:line="1180" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="1180" pos:column="37">"Student name is in incorrect format"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1180" pos:column="76">"Error in student name"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1181" pos:column="25">return <expr><lit:literal type="boolean" pos:line="1181" pos:column="32">false</lit:literal></expr>;</return>
		}</block></then></if>
		<decl_stmt><decl><type><name pos:line="1183" pos:column="17">String</name></type> <name pos:line="1183" pos:column="24">departmentName</name> <init pos:line="1183" pos:column="39">= <expr><call><name><name pos:line="1183" pos:column="41">departmentSelectStudent</name><op:operator pos:line="1183" pos:column="64">.</op:operator><name pos:line="1183" pos:column="65">getItemAt</name></name><argument_list pos:line="1183" pos:column="74">(<argument><expr><call><name><name pos:line="1183" pos:column="75">departmentSelectStudent</name><op:operator pos:line="1183" pos:column="98">.</op:operator><name pos:line="1183" pos:column="99">getSelectedIndex</name></name><argument_list pos:line="1183" pos:column="115">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1184" pos:column="17">Department</name></type> <name pos:line="1184" pos:column="28">dept</name></decl>;</decl_stmt>
		<try pos:line="1185" pos:column="17">try <block pos:line="1185" pos:column="21">{
			<expr_stmt><expr><name pos:line="1186" pos:column="25">dept</name> <op:operator pos:line="1186" pos:column="30">=</op:operator> <op:operator pos:line="1186" pos:column="32">new</op:operator> <call><name pos:line="1186" pos:column="36">Department</name><argument_list pos:line="1186" pos:column="46">(<argument><expr><name pos:line="1186" pos:column="47">departmentName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="1187" pos:column="25">int</name></type> <name pos:line="1187" pos:column="29">level</name> <init pos:line="1187" pos:column="35">= <expr><call><name><name pos:line="1187" pos:column="37">levelSelectStudent</name><op:operator pos:line="1187" pos:column="55">.</op:operator><name pos:line="1187" pos:column="56">getSelectedIndex</name></name><argument_list pos:line="1187" pos:column="72">()</argument_list></call><op:operator pos:line="1187" pos:column="74">+</op:operator><lit:literal type="number" pos:line="1187" pos:column="75">1</lit:literal></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="1188" pos:column="25">isAdded</name> <op:operator pos:line="1188" pos:column="33">=</op:operator> <call><name><name pos:line="1188" pos:column="35">Student</name><op:operator pos:line="1188" pos:column="42">.</op:operator><name pos:line="1188" pos:column="43">addStudentToDb</name></name><argument_list pos:line="1188" pos:column="57">(<argument><expr><call><name><name pos:line="1188" pos:column="58">studentNameText</name><op:operator pos:line="1188" pos:column="73">.</op:operator><name pos:line="1188" pos:column="74">getText</name></name><argument_list pos:line="1188" pos:column="81">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1188" pos:column="85">dept</name></expr></argument>, <argument><expr><name pos:line="1188" pos:column="91">level</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1189" pos:column="25">return <expr><name pos:line="1189" pos:column="32">isAdded</name></expr>;</return>
		}</block> <catch pos:line="1190" pos:column="19">catch <parameter_list pos:line="1190" pos:column="25">(<param><decl><type><name><name pos:line="1190" pos:column="26">Department</name><op:operator pos:line="1190" pos:column="36">.</op:operator><name pos:line="1190" pos:column="37">DepartmentDoesNotExistException</name></name></type> <name pos:line="1190" pos:column="69">e</name></decl></param>)</parameter_list> <block pos:line="1190" pos:column="72">{
			<expr_stmt><expr><call><name pos:line="1191" pos:column="25">showMessage</name><argument_list pos:line="1191" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="1191" pos:column="37">"Department does not exist"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1191" pos:column="66">"Error in department"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1192" pos:column="25">return <expr><name pos:line="1192" pos:column="32">isAdded</name></expr>;</return>
		}</block></catch> <catch pos:line="1193" pos:column="19">catch <parameter_list pos:line="1193" pos:column="25">(<param><decl><type><name><name pos:line="1193" pos:column="26">Student</name><op:operator pos:line="1193" pos:column="33">.</op:operator><name pos:line="1193" pos:column="34">levelNotExistException</name></name></type> <name pos:line="1193" pos:column="57">e</name></decl></param>)</parameter_list> <block pos:line="1193" pos:column="60">{
			<expr_stmt><expr><call><name><name pos:line="1194" pos:column="25">e</name><op:operator pos:line="1194" pos:column="26">.</op:operator><name pos:line="1194" pos:column="27">printStackTrace</name></name><argument_list pos:line="1194" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1195" pos:column="25">return <expr><name pos:line="1195" pos:column="32">isAdded</name></expr>;</return>
		}</block></catch></try>
		
	}</block></function>
	
	<function><type><specifier pos:line="1200" pos:column="9">public</specifier> <name pos:line="1200" pos:column="16">boolean</name></type> <name pos:line="1200" pos:column="24">addProfessor</name><parameter_list pos:line="1200" pos:column="36">()</parameter_list><block pos:line="1200" pos:column="38">{
		<decl_stmt><decl><type><name pos:line="1201" pos:column="17">boolean</name></type> <name pos:line="1201" pos:column="25">isAdded</name> <init pos:line="1201" pos:column="33">= <expr><lit:literal type="boolean" pos:line="1201" pos:column="35">false</lit:literal></expr></init></decl>;</decl_stmt>
		<if pos:line="1202" pos:column="17">if<condition pos:line="1202" pos:column="19">(<expr><op:operator pos:line="1202" pos:column="20">!</op:operator><call><name pos:line="1202" pos:column="21">checkStringForName</name><argument_list pos:line="1202" pos:column="39">(<argument><expr><call><name><name pos:line="1202" pos:column="40">professorNameText</name><op:operator pos:line="1202" pos:column="57">.</op:operator><name pos:line="1202" pos:column="58">getText</name></name><argument_list pos:line="1202" pos:column="65">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then><block pos:line="1202" pos:column="69">{
			<expr_stmt><expr><call><name pos:line="1203" pos:column="25">showMessage</name><argument_list pos:line="1203" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="1203" pos:column="37">"Professor name is in incorrect format"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1203" pos:column="78">"Error in professor name"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1204" pos:column="25">return <expr><lit:literal type="boolean" pos:line="1204" pos:column="32">false</lit:literal></expr>;</return>
		}</block></then></if>
		<decl_stmt><decl><type><name pos:line="1206" pos:column="17">String</name></type> <name pos:line="1206" pos:column="24">departmentName</name> <init pos:line="1206" pos:column="39">= <expr><call><name><name pos:line="1206" pos:column="41">departmentSelectProfessor</name><op:operator pos:line="1206" pos:column="66">.</op:operator><name pos:line="1206" pos:column="67">getItemAt</name></name><argument_list pos:line="1206" pos:column="76">(<argument><expr><call><name><name pos:line="1206" pos:column="77">departmentSelectProfessor</name><op:operator pos:line="1206" pos:column="102">.</op:operator><name pos:line="1206" pos:column="103">getSelectedIndex</name></name><argument_list pos:line="1206" pos:column="119">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1207" pos:column="17">Department</name></type> <name pos:line="1207" pos:column="28">dept</name></decl>;</decl_stmt>
		<try pos:line="1208" pos:column="17">try <block pos:line="1208" pos:column="21">{
			<expr_stmt><expr><name pos:line="1209" pos:column="25">dept</name> <op:operator pos:line="1209" pos:column="30">=</op:operator> <op:operator pos:line="1209" pos:column="32">new</op:operator> <call><name pos:line="1209" pos:column="36">Department</name><argument_list pos:line="1209" pos:column="46">(<argument><expr><name pos:line="1209" pos:column="47">departmentName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1210" pos:column="25">isAdded</name> <op:operator pos:line="1210" pos:column="33">=</op:operator> <call><name><name pos:line="1210" pos:column="35">Professor</name><op:operator pos:line="1210" pos:column="44">.</op:operator><name pos:line="1210" pos:column="45">addProfToDb</name></name><argument_list pos:line="1210" pos:column="56">(<argument><expr><call><name><name pos:line="1210" pos:column="57">professorNameText</name><op:operator pos:line="1210" pos:column="74">.</op:operator><name pos:line="1210" pos:column="75">getText</name></name><argument_list pos:line="1210" pos:column="82">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1210" pos:column="86">dept</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1211" pos:column="25">return <expr><name pos:line="1211" pos:column="32">isAdded</name></expr>;</return>
		}</block> <catch pos:line="1212" pos:column="19">catch <parameter_list pos:line="1212" pos:column="25">(<param><decl><type><name><name pos:line="1212" pos:column="26">Department</name><op:operator pos:line="1212" pos:column="36">.</op:operator><name pos:line="1212" pos:column="37">DepartmentDoesNotExistException</name></name></type> <name pos:line="1212" pos:column="69">e</name></decl></param>)</parameter_list> <block pos:line="1212" pos:column="72">{
			<expr_stmt><expr><call><name pos:line="1213" pos:column="25">showMessage</name><argument_list pos:line="1213" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="1213" pos:column="37">"Department does not exist"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1213" pos:column="66">"Error in department"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1214" pos:column="25">return <expr><name pos:line="1214" pos:column="32">isAdded</name></expr>;</return>
		}</block></catch></try>
		
	}</block></function>
	
	<function><type><specifier pos:line="1219" pos:column="9">public</specifier> <name pos:line="1219" pos:column="16">boolean</name></type> <name pos:line="1219" pos:column="24">addAdmin</name><parameter_list pos:line="1219" pos:column="32">()</parameter_list><block pos:line="1219" pos:column="34">{
		<decl_stmt><decl><type><name pos:line="1220" pos:column="17">boolean</name></type> <name pos:line="1220" pos:column="25">isAdded</name> <init pos:line="1220" pos:column="33">= <expr><lit:literal type="boolean" pos:line="1220" pos:column="35">false</lit:literal></expr></init></decl>;</decl_stmt>
		<if pos:line="1221" pos:column="17">if<condition pos:line="1221" pos:column="19">(<expr><op:operator pos:line="1221" pos:column="20">!</op:operator><call><name pos:line="1221" pos:column="21">checkStringForName</name><argument_list pos:line="1221" pos:column="39">(<argument><expr><call><name><name pos:line="1221" pos:column="40">adminName</name><op:operator pos:line="1221" pos:column="49">.</op:operator><name pos:line="1221" pos:column="50">getText</name></name><argument_list pos:line="1221" pos:column="57">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then><block pos:line="1221" pos:column="61">{
			<expr_stmt><expr><call><name pos:line="1222" pos:column="25">showMessage</name><argument_list pos:line="1222" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="1222" pos:column="37">"Admin name is in incorrect format"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1222" pos:column="74">"Error in admin name"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1223" pos:column="25">return <expr><lit:literal type="boolean" pos:line="1223" pos:column="32">false</lit:literal></expr>;</return>
		}</block></then></if>
		<decl_stmt><decl><type><name pos:line="1225" pos:column="17">String</name></type> <name pos:line="1225" pos:column="24">departmentName</name> <init pos:line="1225" pos:column="39">= <expr><call><name><name pos:line="1225" pos:column="41">adminDeptCombo</name><op:operator pos:line="1225" pos:column="55">.</op:operator><name pos:line="1225" pos:column="56">getItemAt</name></name><argument_list pos:line="1225" pos:column="65">(<argument><expr><call><name><name pos:line="1225" pos:column="66">adminDeptCombo</name><op:operator pos:line="1225" pos:column="80">.</op:operator><name pos:line="1225" pos:column="81">getSelectedIndex</name></name><argument_list pos:line="1225" pos:column="97">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1226" pos:column="17">Department</name></type> <name pos:line="1226" pos:column="28">dept</name></decl>;</decl_stmt>
		<try pos:line="1227" pos:column="17">try <block pos:line="1227" pos:column="21">{
			<expr_stmt><expr><name pos:line="1228" pos:column="25">dept</name> <op:operator pos:line="1228" pos:column="30">=</op:operator> <op:operator pos:line="1228" pos:column="32">new</op:operator> <call><name pos:line="1228" pos:column="36">Department</name><argument_list pos:line="1228" pos:column="46">(<argument><expr><name pos:line="1228" pos:column="47">departmentName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1229" pos:column="25">isAdded</name> <op:operator pos:line="1229" pos:column="33">=</op:operator> <call><name><name pos:line="1229" pos:column="35">Admin</name><op:operator pos:line="1229" pos:column="40">.</op:operator><name pos:line="1229" pos:column="41">addAdmin</name></name><argument_list pos:line="1229" pos:column="49">(<argument><expr><call><name><name pos:line="1229" pos:column="50">adminName</name><op:operator pos:line="1229" pos:column="59">.</op:operator><name pos:line="1229" pos:column="60">getText</name></name><argument_list pos:line="1229" pos:column="67">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1229" pos:column="71">dept</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1230" pos:column="25">return <expr><name pos:line="1230" pos:column="32">isAdded</name></expr>;</return>
		}</block> <catch pos:line="1231" pos:column="19">catch <parameter_list pos:line="1231" pos:column="25">(<param><decl><type><name><name pos:line="1231" pos:column="26">Department</name><op:operator pos:line="1231" pos:column="36">.</op:operator><name pos:line="1231" pos:column="37">DepartmentDoesNotExistException</name></name></type> <name pos:line="1231" pos:column="69">e</name></decl></param>)</parameter_list> <block pos:line="1231" pos:column="72">{
			<expr_stmt><expr><call><name pos:line="1232" pos:column="25">showMessage</name><argument_list pos:line="1232" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="1232" pos:column="37">"Department does not exist"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1232" pos:column="66">"Error in department"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1233" pos:column="25">return <expr><name pos:line="1233" pos:column="32">isAdded</name></expr>;</return>
		}</block></catch> <catch pos:line="1234" pos:column="19">catch <parameter_list pos:line="1234" pos:column="25">(<param><decl><type><name><name pos:line="1234" pos:column="26">Admin</name><op:operator pos:line="1234" pos:column="31">.</op:operator><name pos:line="1234" pos:column="32">loginDetailsnotAdded</name></name></type> <name pos:line="1234" pos:column="53">e</name></decl></param>)</parameter_list> <block pos:line="1234" pos:column="56">{
			<return pos:line="1235" pos:column="25">return <expr><name pos:line="1235" pos:column="32">isAdded</name></expr>;</return>
		}</block></catch></try>
		
	}</block></function>

	<function><type><specifier pos:line="1240" pos:column="9">public</specifier> <name><name pos:line="1240" pos:column="16">ArrayList</name><argument_list pos:line="1240" pos:column="25">&lt;<argument><name pos:line="1240" pos:column="26">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="1240" pos:column="35">getOfferIdOfScheduledCourses</name><parameter_list pos:line="1240" pos:column="63">()</parameter_list><block pos:line="1240" pos:column="65">{
		<decl_stmt><decl><type><name><name pos:line="1241" pos:column="17">ArrayList</name><argument_list pos:line="1241" pos:column="26">&lt;<argument><name pos:line="1241" pos:column="27">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="1241" pos:column="36">offerID</name> <init pos:line="1241" pos:column="44">= <expr><op:operator pos:line="1241" pos:column="46">new</op:operator> <call><name><name pos:line="1241" pos:column="50">ArrayList</name><argument_list pos:line="1241" pos:column="59">&lt;<argument><name pos:line="1241" pos:column="60">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="1241" pos:column="68">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="1242" pos:column="17">courseSchedule</name> <op:operator pos:line="1242" pos:column="32">=</op:operator> <call><name><name pos:line="1242" pos:column="34">CourseSchedule</name><op:operator pos:line="1242" pos:column="48">.</op:operator><name pos:line="1242" pos:column="49">getHaspMapForSchedule</name></name><argument_list pos:line="1242" pos:column="70">()</argument_list></call></expr>;</expr_stmt>
		<for pos:line="1243" pos:column="17">for(<init><decl><type><name pos:line="1243" pos:column="21">Integer</name></type> <name pos:line="1243" pos:column="29">i</name><range pos:line="1243" pos:column="30">: <expr><call><name><name pos:line="1243" pos:column="32">courseSchedule</name><op:operator pos:line="1243" pos:column="46">.</op:operator><name pos:line="1243" pos:column="47">keySet</name></name><argument_list pos:line="1243" pos:column="53">()</argument_list></call></expr></range></decl></init>)<block pos:line="1243" pos:column="56">{
			<expr_stmt><expr><call><name><name pos:line="1244" pos:column="25">offerID</name><op:operator pos:line="1244" pos:column="32">.</op:operator><name pos:line="1244" pos:column="33">add</name></name><argument_list pos:line="1244" pos:column="36">(<argument><expr><name pos:line="1244" pos:column="37">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		
		<return pos:line="1247" pos:column="17">return <expr><name pos:line="1247" pos:column="24">offerID</name></expr>;</return>
		
	}</block></function>

	<function><type><specifier pos:line="1251" pos:column="9">public</specifier> <name pos:line="1251" pos:column="16">void</name></type> <name pos:line="1251" pos:column="21">initializeJListsForCourseSchedule</name><parameter_list pos:line="1251" pos:column="54">()</parameter_list><block pos:line="1251" pos:column="56">{
		<expr_stmt><expr><call><name pos:line="1252" pos:column="17">initializeBackgroundData</name><argument_list pos:line="1252" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name><name pos:line="1253" pos:column="17">ArrayList</name><argument_list pos:line="1253" pos:column="26">&lt;<argument><name pos:line="1253" pos:column="27">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="1253" pos:column="36">offerIDs</name> <init pos:line="1253" pos:column="45">= <expr><call><name pos:line="1253" pos:column="47">getOfferIdOfScheduledCourses</name><argument_list pos:line="1253" pos:column="75">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1254" pos:column="17">String</name><index pos:line="1254" pos:column="23">[]</index></type> <name pos:line="1254" pos:column="26">courseNameList</name> <init pos:line="1254" pos:column="41">= <expr><op:operator pos:line="1254" pos:column="43">new</op:operator> <name><name pos:line="1254" pos:column="47">String</name><index pos:line="1254" pos:column="53">[<expr><call><name><name pos:line="1254" pos:column="54">offerIDs</name><op:operator pos:line="1254" pos:column="62">.</op:operator><name pos:line="1254" pos:column="63">size</name></name><argument_list pos:line="1254" pos:column="67">()</argument_list></call></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1255" pos:column="17">Integer</name><index pos:line="1255" pos:column="24">[]</index></type> <name pos:line="1255" pos:column="27">courseOfferIDList</name> <init pos:line="1255" pos:column="45">= <expr><op:operator pos:line="1255" pos:column="47">new</op:operator> <name><name pos:line="1255" pos:column="51">Integer</name><index pos:line="1255" pos:column="58">[<expr><call><name><name pos:line="1255" pos:column="59">offerIDs</name><op:operator pos:line="1255" pos:column="67">.</op:operator><name pos:line="1255" pos:column="68">size</name></name><argument_list pos:line="1255" pos:column="72">()</argument_list></call></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1256" pos:column="17">String</name><index pos:line="1256" pos:column="23">[]</index></type> <name pos:line="1256" pos:column="26">profNameList</name> <init pos:line="1256" pos:column="39">= <expr><op:operator pos:line="1256" pos:column="41">new</op:operator> <name><name pos:line="1256" pos:column="45">String</name><index pos:line="1256" pos:column="51">[<expr><call><name><name pos:line="1256" pos:column="52">offerIDs</name><op:operator pos:line="1256" pos:column="60">.</op:operator><name pos:line="1256" pos:column="61">size</name></name><argument_list pos:line="1256" pos:column="65">()</argument_list></call></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1257" pos:column="17">String</name><index pos:line="1257" pos:column="23">[]</index></type> <name pos:line="1257" pos:column="26">classLocationList</name> <init pos:line="1257" pos:column="44">= <expr><op:operator pos:line="1257" pos:column="46">new</op:operator> <name><name pos:line="1257" pos:column="50">String</name><index pos:line="1257" pos:column="56">[<expr><call><name><name pos:line="1257" pos:column="57">offerIDs</name><op:operator pos:line="1257" pos:column="65">.</op:operator><name pos:line="1257" pos:column="66">size</name></name><argument_list pos:line="1257" pos:column="70">()</argument_list></call></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1258" pos:column="17">String</name><index pos:line="1258" pos:column="23">[]</index></type> <name pos:line="1258" pos:column="26">classRoomNameList</name> <init pos:line="1258" pos:column="44">= <expr><op:operator pos:line="1258" pos:column="46">new</op:operator> <name><name pos:line="1258" pos:column="50">String</name><index pos:line="1258" pos:column="56">[<expr><call><name><name pos:line="1258" pos:column="57">offerIDs</name><op:operator pos:line="1258" pos:column="65">.</op:operator><name pos:line="1258" pos:column="66">size</name></name><argument_list pos:line="1258" pos:column="70">()</argument_list></call></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1259" pos:column="17">String</name><index pos:line="1259" pos:column="23">[]</index></type> <name pos:line="1259" pos:column="26">classTimingList</name> <init pos:line="1259" pos:column="42">= <expr><op:operator pos:line="1259" pos:column="44">new</op:operator> <name><name pos:line="1259" pos:column="48">String</name><index pos:line="1259" pos:column="54">[<expr><call><name><name pos:line="1259" pos:column="55">offerIDs</name><op:operator pos:line="1259" pos:column="63">.</op:operator><name pos:line="1259" pos:column="64">size</name></name><argument_list pos:line="1259" pos:column="68">()</argument_list></call></expr>]</index></name></expr></init></decl>;</decl_stmt>
		
		<for pos:line="1261" pos:column="17">for(<init><decl><type><name pos:line="1261" pos:column="21">int</name></type> <name pos:line="1261" pos:column="25">i</name><init pos:line="1261" pos:column="26">=<expr><lit:literal type="number" pos:line="1261" pos:column="27">0</lit:literal></expr></init></decl>;</init><condition><expr><name pos:line="1261" pos:column="29">i</name><op:operator pos:line="1261" pos:column="30">&lt;</op:operator><call><name><name pos:line="1261" pos:column="31">offerIDs</name><op:operator pos:line="1261" pos:column="39">.</op:operator><name pos:line="1261" pos:column="40">size</name></name><argument_list pos:line="1261" pos:column="44">()</argument_list></call></expr>;</condition><incr><expr><name pos:line="1261" pos:column="47">i</name><op:operator pos:line="1261" pos:column="48">++</op:operator></expr></incr>)<block pos:line="1261" pos:column="51">{
			<decl_stmt><decl><type><name pos:line="1262" pos:column="25">CourseOffered</name></type> <name pos:line="1262" pos:column="39">co</name></decl>;</decl_stmt>
			<try pos:line="1263" pos:column="25">try <block pos:line="1263" pos:column="29">{
				<expr_stmt><expr><call><name><name pos:line="1264" pos:column="33">System</name><op:operator pos:line="1264" pos:column="39">.</op:operator><name pos:line="1264" pos:column="40">out</name><op:operator pos:line="1264" pos:column="43">.</op:operator><name pos:line="1264" pos:column="44">println</name></name><argument_list pos:line="1264" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="1264" pos:column="52">"OfferID:"</lit:literal><op:operator pos:line="1264" pos:column="62">+</op:operator><call><name><name pos:line="1264" pos:column="63">offerIDs</name><op:operator pos:line="1264" pos:column="71">.</op:operator><name pos:line="1264" pos:column="72">get</name></name><argument_list pos:line="1264" pos:column="75">(<argument><expr><name pos:line="1264" pos:column="76">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="1265" pos:column="33">co</name> <op:operator pos:line="1265" pos:column="36">=</op:operator> <op:operator pos:line="1265" pos:column="38">new</op:operator> <call><name pos:line="1265" pos:column="42">CourseOffered</name><argument_list pos:line="1265" pos:column="55">(<argument><expr><call><name><name pos:line="1265" pos:column="56">offerIDs</name><op:operator pos:line="1265" pos:column="64">.</op:operator><name pos:line="1265" pos:column="65">get</name></name><argument_list pos:line="1265" pos:column="68">(<argument><expr><name pos:line="1265" pos:column="69">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
				<expr_stmt><expr><call><name><name pos:line="1267" pos:column="33">DBAnnotation</name><op:operator pos:line="1267" pos:column="45">.</op:operator><name pos:line="1267" pos:column="46">annoate</name></name><argument_list pos:line="1267" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="1267" pos:column="54">"courseName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1267" pos:column="68">"courses"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1267" pos:column="79">"CourseName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1267" pos:column="93">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="1268" pos:column="33">String</name></type> <name pos:line="1268" pos:column="40">courseName</name> <init pos:line="1268" pos:column="51">= <expr><call><name><name pos:line="1268" pos:column="53">co</name><op:operator pos:line="1268" pos:column="55">.</op:operator><name pos:line="1268" pos:column="56">getCourseName</name></name><argument_list pos:line="1268" pos:column="69">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name><name pos:line="1269" pos:column="33">courseNameList</name><index pos:line="1269" pos:column="47">[<expr><name pos:line="1269" pos:column="48">i</name></expr>]</index></name> <op:operator pos:line="1269" pos:column="51">=</op:operator> <name pos:line="1269" pos:column="53">courseName</name></expr>;</expr_stmt>
				
				<expr_stmt><expr><call><name><name pos:line="1271" pos:column="33">DBAnnotation</name><op:operator pos:line="1271" pos:column="45">.</op:operator><name pos:line="1271" pos:column="46">annoate</name></name><argument_list pos:line="1271" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="1271" pos:column="54">"offerID"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1271" pos:column="65">"coursesoffered"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1271" pos:column="83">"OfferID"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1271" pos:column="94">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="1272" pos:column="33">int</name></type> <name pos:line="1272" pos:column="37">offerID</name> <init pos:line="1272" pos:column="45">= <expr><call><name><name pos:line="1272" pos:column="47">co</name><op:operator pos:line="1272" pos:column="49">.</op:operator><name pos:line="1272" pos:column="50">getOfferID</name></name><argument_list pos:line="1272" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name><name pos:line="1273" pos:column="33">courseOfferIDList</name><index pos:line="1273" pos:column="50">[<expr><name pos:line="1273" pos:column="51">i</name></expr>]</index></name> <op:operator pos:line="1273" pos:column="54">=</op:operator> <name pos:line="1273" pos:column="56">offerID</name></expr>;</expr_stmt>
				
				<expr_stmt><expr><call><name><name pos:line="1275" pos:column="33">DBAnnotation</name><op:operator pos:line="1275" pos:column="45">.</op:operator><name pos:line="1275" pos:column="46">annoate</name></name><argument_list pos:line="1275" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="1275" pos:column="54">"prof"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1275" pos:column="62">"people"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1275" pos:column="72">"Name"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1275" pos:column="80">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="1276" pos:column="33">String</name></type> <name pos:line="1276" pos:column="40">prof</name> <init pos:line="1276" pos:column="45">= <expr><call><name><name pos:line="1276" pos:column="47">co</name><op:operator pos:line="1276" pos:column="49">.</op:operator><name pos:line="1276" pos:column="50">getProfessorName</name></name><argument_list pos:line="1276" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name><name pos:line="1277" pos:column="33">profNameList</name><index pos:line="1277" pos:column="45">[<expr><name pos:line="1277" pos:column="46">i</name></expr>]</index></name> <op:operator pos:line="1277" pos:column="49">=</op:operator> <name pos:line="1277" pos:column="51">prof</name></expr>;</expr_stmt>
				
				<expr_stmt><expr><call><name><name pos:line="1279" pos:column="33">DBAnnotation</name><op:operator pos:line="1279" pos:column="45">.</op:operator><name pos:line="1279" pos:column="46">annoate</name></name><argument_list pos:line="1279" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="1279" pos:column="54">"classLoc"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1279" pos:column="66">"classroom"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1279" pos:column="79">"ClassroomLocation"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1279" pos:column="100">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="1280" pos:column="33">String</name></type> <name pos:line="1280" pos:column="40">classLoc</name> <init pos:line="1280" pos:column="49">= <expr><call><name><name pos:line="1280" pos:column="51">co</name><op:operator pos:line="1280" pos:column="53">.</op:operator><name pos:line="1280" pos:column="54">getClassRoomLocation</name></name><argument_list pos:line="1280" pos:column="74">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name><name pos:line="1281" pos:column="33">classLocationList</name><index pos:line="1281" pos:column="50">[<expr><name pos:line="1281" pos:column="51">i</name></expr>]</index></name> <op:operator pos:line="1281" pos:column="54">=</op:operator> <name pos:line="1281" pos:column="56">classLoc</name></expr>;</expr_stmt>
				
				<expr_stmt><expr><call><name><name pos:line="1283" pos:column="33">DBAnnotation</name><op:operator pos:line="1283" pos:column="45">.</op:operator><name pos:line="1283" pos:column="46">annoate</name></name><argument_list pos:line="1283" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="1283" pos:column="54">"className"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1283" pos:column="67">"classroom"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1283" pos:column="80">"ClassroomName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1283" pos:column="97">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="1284" pos:column="33">String</name></type> <name pos:line="1284" pos:column="40">className</name> <init pos:line="1284" pos:column="50">= <expr><call><name><name pos:line="1284" pos:column="52">co</name><op:operator pos:line="1284" pos:column="54">.</op:operator><name pos:line="1284" pos:column="55">getClassRoomName</name></name><argument_list pos:line="1284" pos:column="71">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name><name pos:line="1285" pos:column="33">classRoomNameList</name><index pos:line="1285" pos:column="50">[<expr><name pos:line="1285" pos:column="51">i</name></expr>]</index></name> <op:operator pos:line="1285" pos:column="54">=</op:operator> <name pos:line="1285" pos:column="56">className</name></expr>;</expr_stmt>
				
				<expr_stmt><expr><name><name pos:line="1287" pos:column="33">classTimingList</name><index pos:line="1287" pos:column="48">[<expr><name pos:line="1287" pos:column="49">i</name></expr>]</index></name> <op:operator pos:line="1287" pos:column="52">=</op:operator> <call><name><name pos:line="1287" pos:column="54">co</name><op:operator pos:line="1287" pos:column="56">.</op:operator><name pos:line="1287" pos:column="57">getTiming</name></name><argument_list pos:line="1287" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
				
			}</block> <catch pos:line="1289" pos:column="27">catch <parameter_list pos:line="1289" pos:column="33">(<param><decl><type><name><name pos:line="1289" pos:column="34">Course</name><op:operator pos:line="1289" pos:column="40">.</op:operator><name pos:line="1289" pos:column="41">CourseDoesNotExistException</name></name></type> <name pos:line="1289" pos:column="69">e</name></decl></param>)</parameter_list> <block pos:line="1289" pos:column="72">{
				<comment type="line" pos:line="1290" pos:column="33">// TODO Auto-generated catch block</comment>
				<expr_stmt><expr><call><name><name pos:line="1291" pos:column="33">e</name><op:operator pos:line="1291" pos:column="34">.</op:operator><name pos:line="1291" pos:column="35">printStackTrace</name></name><argument_list pos:line="1291" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			}</block></catch> <catch pos:line="1292" pos:column="27">catch <parameter_list pos:line="1292" pos:column="33">(<param><decl><type><name><name pos:line="1292" pos:column="34">CourseOffered</name><op:operator pos:line="1292" pos:column="47">.</op:operator><name pos:line="1292" pos:column="48">CourseOfferingDoesNotExistException</name></name></type> <name pos:line="1292" pos:column="84">e</name></decl></param>)</parameter_list> <block pos:line="1292" pos:column="87">{
				<comment type="line" pos:line="1293" pos:column="33">// TODO Auto-generated catch block</comment>
				<expr_stmt><expr><call><name><name pos:line="1294" pos:column="33">e</name><op:operator pos:line="1294" pos:column="34">.</op:operator><name pos:line="1294" pos:column="35">printStackTrace</name></name><argument_list pos:line="1294" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			}</block></catch></try>
			
			
		}</block></for>
		<comment type="line" pos:line="1299" pos:column="17">//Setting the Jlists</comment>
		<expr_stmt><expr><call><name><name pos:line="1300" pos:column="17">this</name><op:operator pos:line="1300" pos:column="21">.</op:operator><name pos:line="1300" pos:column="22">courseNameList</name><op:operator pos:line="1300" pos:column="36">.</op:operator><name pos:line="1300" pos:column="37">setListData</name></name><argument_list pos:line="1300" pos:column="48">(<argument><expr><name pos:line="1300" pos:column="49">courseNameList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1301" pos:column="17">this</name><op:operator pos:line="1301" pos:column="21">.</op:operator><name pos:line="1301" pos:column="22">courseOfferIDList</name><op:operator pos:line="1301" pos:column="39">.</op:operator><name pos:line="1301" pos:column="40">setListData</name></name><argument_list pos:line="1301" pos:column="51">(<argument><expr><name pos:line="1301" pos:column="52">courseOfferIDList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1302" pos:column="17">this</name><op:operator pos:line="1302" pos:column="21">.</op:operator><name pos:line="1302" pos:column="22">professorNameList</name><op:operator pos:line="1302" pos:column="39">.</op:operator><name pos:line="1302" pos:column="40">setListData</name></name><argument_list pos:line="1302" pos:column="51">(<argument><expr><name pos:line="1302" pos:column="52">profNameList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1303" pos:column="17">this</name><op:operator pos:line="1303" pos:column="21">.</op:operator><name pos:line="1303" pos:column="22">classLocationList</name><op:operator pos:line="1303" pos:column="39">.</op:operator><name pos:line="1303" pos:column="40">setListData</name></name><argument_list pos:line="1303" pos:column="51">(<argument><expr><name pos:line="1303" pos:column="52">classLocationList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1304" pos:column="17">this</name><op:operator pos:line="1304" pos:column="21">.</op:operator><name pos:line="1304" pos:column="22">classNameList</name><op:operator pos:line="1304" pos:column="35">.</op:operator><name pos:line="1304" pos:column="36">setListData</name></name><argument_list pos:line="1304" pos:column="47">(<argument><expr><name pos:line="1304" pos:column="48">classRoomNameList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1305" pos:column="17">this</name><op:operator pos:line="1305" pos:column="21">.</op:operator><name pos:line="1305" pos:column="22">classTimingList</name><op:operator pos:line="1305" pos:column="37">.</op:operator><name pos:line="1305" pos:column="38">setListData</name></name><argument_list pos:line="1305" pos:column="49">(<argument><expr><name pos:line="1305" pos:column="50">classTimingList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>		
		<expr_stmt><expr><call><name pos:line="1306" pos:column="17">setAllIndexTo</name><argument_list pos:line="1306" pos:column="30">(<argument><expr><lit:literal type="number" pos:line="1306" pos:column="31">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<comment type="line" pos:line="1308" pos:column="17">//setting the course select combo box</comment>
		<expr_stmt><expr><call><name><name pos:line="1309" pos:column="17">this</name><op:operator pos:line="1309" pos:column="21">.</op:operator><name pos:line="1309" pos:column="22">courseScheduledCombo</name><op:operator pos:line="1309" pos:column="42">.</op:operator><name pos:line="1309" pos:column="43">setModel</name></name><argument_list pos:line="1309" pos:column="51">(<argument><expr><op:operator pos:line="1309" pos:column="52">new</op:operator> <call><name><name pos:line="1309" pos:column="56">DefaultComboBoxModel</name><argument_list pos:line="1309" pos:column="76">&lt;<argument><name pos:line="1309" pos:column="77">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="1309" pos:column="85">(<argument><expr><name pos:line="1309" pos:column="86">courseOfferIDList</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="1310" pos:column="17">if<condition pos:line="1310" pos:column="19">(<expr><name><name pos:line="1310" pos:column="20">courseOfferIDList</name><op:operator pos:line="1310" pos:column="37">.</op:operator><name pos:line="1310" pos:column="38">length</name></name><op:operator pos:line="1310" pos:column="44">&gt;</op:operator><lit:literal type="number" pos:line="1310" pos:column="45">0</lit:literal></expr>)</condition><then pos:line="1310" pos:column="47">
			<expr_stmt><expr><call><name pos:line="1311" pos:column="25">initilizeSingleRescheduleTab</name><argument_list pos:line="1311" pos:column="53">(<argument><expr><name><name pos:line="1311" pos:column="54">courseOfferIDList</name><index pos:line="1311" pos:column="71">[<expr><lit:literal type="number" pos:line="1311" pos:column="72">0</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		
	}</block></function>

	<function><type><specifier pos:line="1315" pos:column="9">public</specifier> <name pos:line="1315" pos:column="16">void</name></type> <name pos:line="1315" pos:column="21">initilizeSingleRescheduleTab</name><parameter_list pos:line="1315" pos:column="49">(<param><decl><type><name pos:line="1315" pos:column="50">int</name></type> <name pos:line="1315" pos:column="54">offerID</name></decl></param>)</parameter_list><block pos:line="1315" pos:column="62">{
		<decl_stmt><decl><type><name pos:line="1316" pos:column="17">CourseOffered</name></type> <name pos:line="1316" pos:column="31">co</name> <init pos:line="1316" pos:column="34">= <expr><call><name><name pos:line="1316" pos:column="36">coursesOffered</name><op:operator pos:line="1316" pos:column="50">.</op:operator><name pos:line="1316" pos:column="51">get</name></name><argument_list pos:line="1316" pos:column="54">(<argument><expr><name pos:line="1316" pos:column="55">offerID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1317" pos:column="17">String</name></type> <name pos:line="1317" pos:column="24">s</name> <init pos:line="1317" pos:column="26">= <expr><lit:literal type="string" pos:line="1317" pos:column="28">""</lit:literal></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="1318" pos:column="17">DBAnnotation</name><op:operator pos:line="1318" pos:column="29">.</op:operator><name pos:line="1318" pos:column="30">annoate</name></name><argument_list pos:line="1318" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="1318" pos:column="38">"courseName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1318" pos:column="52">"courses"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1318" pos:column="63">"CourseName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1318" pos:column="77">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="1319" pos:column="17">String</name></type> <name pos:line="1319" pos:column="24">courseName</name> <init pos:line="1319" pos:column="35">= <expr><call><name><name pos:line="1319" pos:column="37">co</name><op:operator pos:line="1319" pos:column="39">.</op:operator><name pos:line="1319" pos:column="40">getCourseName</name></name><argument_list pos:line="1319" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="1320" pos:column="17">s</name><op:operator pos:line="1320" pos:column="18">+=</op:operator><lit:literal type="string" pos:line="1320" pos:column="20">"Course Name:"</lit:literal><op:operator pos:line="1320" pos:column="34">+</op:operator><name pos:line="1320" pos:column="35">courseName</name></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><name pos:line="1322" pos:column="17">DBAnnotation</name><op:operator pos:line="1322" pos:column="29">.</op:operator><name pos:line="1322" pos:column="30">annoate</name></name><argument_list pos:line="1322" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="1322" pos:column="38">"deptName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1322" pos:column="50">"department"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1322" pos:column="64">"DepartmentName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1322" pos:column="82">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="1323" pos:column="17">String</name></type> <name pos:line="1323" pos:column="24">deptName</name> <init pos:line="1323" pos:column="33">= <expr><call><name><name pos:line="1323" pos:column="35">co</name><op:operator pos:line="1323" pos:column="37">.</op:operator><name pos:line="1323" pos:column="38">getDepartmentName</name></name><argument_list pos:line="1323" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="1324" pos:column="17">s</name><op:operator pos:line="1324" pos:column="18">+=</op:operator><lit:literal type="string" pos:line="1324" pos:column="20">"\nDepartment:"</lit:literal><op:operator pos:line="1324" pos:column="35">+</op:operator><name pos:line="1324" pos:column="36">deptName</name></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><name pos:line="1326" pos:column="17">DBAnnotation</name><op:operator pos:line="1326" pos:column="29">.</op:operator><name pos:line="1326" pos:column="30">annoate</name></name><argument_list pos:line="1326" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="1326" pos:column="38">"classLoc"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1326" pos:column="50">"classroom"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1326" pos:column="63">"ClassroomLocation"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1326" pos:column="84">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="1327" pos:column="17">String</name></type> <name pos:line="1327" pos:column="24">classLoc</name> <init pos:line="1327" pos:column="33">= <expr><call><name><name pos:line="1327" pos:column="35">co</name><op:operator pos:line="1327" pos:column="37">.</op:operator><name pos:line="1327" pos:column="38">getClassRoomLocation</name></name><argument_list pos:line="1327" pos:column="58">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="1328" pos:column="17">s</name><op:operator pos:line="1328" pos:column="18">+=</op:operator><lit:literal type="string" pos:line="1328" pos:column="20">"\nClassroom Location:"</lit:literal><op:operator pos:line="1328" pos:column="43">+</op:operator><name pos:line="1328" pos:column="44">classLoc</name></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><name pos:line="1330" pos:column="17">DBAnnotation</name><op:operator pos:line="1330" pos:column="29">.</op:operator><name pos:line="1330" pos:column="30">annoate</name></name><argument_list pos:line="1330" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="1330" pos:column="38">"className"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1330" pos:column="51">"classroom"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1330" pos:column="64">"ClassroomName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1330" pos:column="81">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="1331" pos:column="17">String</name></type> <name pos:line="1331" pos:column="24">className</name> <init pos:line="1331" pos:column="34">= <expr><call><name><name pos:line="1331" pos:column="36">co</name><op:operator pos:line="1331" pos:column="38">.</op:operator><name pos:line="1331" pos:column="39">getClassRoomName</name></name><argument_list pos:line="1331" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="1332" pos:column="17">s</name><op:operator pos:line="1332" pos:column="18">+=</op:operator><lit:literal type="string" pos:line="1332" pos:column="20">"\nClasstroom Name:"</lit:literal><op:operator pos:line="1332" pos:column="40">+</op:operator> <name pos:line="1332" pos:column="42">className</name></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="1334" pos:column="17">s</name><op:operator pos:line="1334" pos:column="18">+=</op:operator><lit:literal type="string" pos:line="1334" pos:column="20">"\nTimings:"</lit:literal><op:operator pos:line="1334" pos:column="32">+</op:operator><call><name><name pos:line="1334" pos:column="33">co</name><op:operator pos:line="1334" pos:column="35">.</op:operator><name pos:line="1334" pos:column="36">getTiming</name></name><argument_list pos:line="1334" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><name pos:line="1336" pos:column="17">DBAnnotation</name><op:operator pos:line="1336" pos:column="29">.</op:operator><name pos:line="1336" pos:column="30">annoate</name></name><argument_list pos:line="1336" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="1336" pos:column="38">"prof"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1336" pos:column="46">"people"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1336" pos:column="56">"Name"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1336" pos:column="64">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="1337" pos:column="17">String</name></type> <name pos:line="1337" pos:column="24">prof</name> <init pos:line="1337" pos:column="29">= <expr><call><name><name pos:line="1337" pos:column="31">co</name><op:operator pos:line="1337" pos:column="33">.</op:operator><name pos:line="1337" pos:column="34">getProfessorName</name></name><argument_list pos:line="1337" pos:column="50">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="1338" pos:column="17">s</name><op:operator pos:line="1338" pos:column="18">+=</op:operator><lit:literal type="string" pos:line="1338" pos:column="20">"\nTaught by professor:"</lit:literal><op:operator pos:line="1338" pos:column="44">+</op:operator><name pos:line="1338" pos:column="45">prof</name></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><name pos:line="1340" pos:column="17">courseScheduleTextPane</name><op:operator pos:line="1340" pos:column="39">.</op:operator><name pos:line="1340" pos:column="40">setText</name></name><argument_list pos:line="1340" pos:column="47">(<argument><expr><name pos:line="1340" pos:column="48">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>
	
	<function><type><specifier pos:line="1343" pos:column="9">public</specifier> <name pos:line="1343" pos:column="16">void</name></type> <name pos:line="1343" pos:column="21">initializeBackgroundData</name><parameter_list pos:line="1343" pos:column="45">()</parameter_list><block pos:line="1343" pos:column="47">{
		<expr_stmt><expr><name pos:line="1344" pos:column="17">coursesOffered</name> <op:operator pos:line="1344" pos:column="32">=</op:operator> <call><name><name pos:line="1344" pos:column="34">CourseOffered</name><op:operator pos:line="1344" pos:column="47">.</op:operator><name pos:line="1344" pos:column="48">getAllOfferedIDAndCourseOffered</name></name><argument_list pos:line="1344" pos:column="79">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1345" pos:column="17">courseSchedule</name> <op:operator pos:line="1345" pos:column="32">=</op:operator> <call><name><name pos:line="1345" pos:column="34">CourseSchedule</name><op:operator pos:line="1345" pos:column="48">.</op:operator><name pos:line="1345" pos:column="49">getHaspMapForSchedule</name></name><argument_list pos:line="1345" pos:column="70">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1346" pos:column="17">departments</name> <op:operator pos:line="1346" pos:column="29">=</op:operator> <call><name><name pos:line="1346" pos:column="31">Department</name><op:operator pos:line="1346" pos:column="41">.</op:operator><name pos:line="1346" pos:column="42">getAllDepartments</name></name><argument_list pos:line="1346" pos:column="59">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1347" pos:column="17">courses</name> <op:operator pos:line="1347" pos:column="25">=</op:operator> <call><name><name pos:line="1347" pos:column="27">Course</name><op:operator pos:line="1347" pos:column="33">.</op:operator><name pos:line="1347" pos:column="34">getAllCourses</name></name><argument_list pos:line="1347" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1348" pos:column="17">students</name> <op:operator pos:line="1348" pos:column="26">=</op:operator> <call><name><name pos:line="1348" pos:column="28">Student</name><op:operator pos:line="1348" pos:column="35">.</op:operator><name pos:line="1348" pos:column="36">getAllStudents</name></name><argument_list pos:line="1348" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1349" pos:column="17">tas</name> <op:operator pos:line="1349" pos:column="21">=</op:operator> <call><name><name pos:line="1349" pos:column="23">TA</name><op:operator pos:line="1349" pos:column="25">.</op:operator><name pos:line="1349" pos:column="26">getAllTAs</name></name><argument_list pos:line="1349" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1350" pos:column="17">departmentNameArray</name> <op:operator pos:line="1350" pos:column="37">=</op:operator> <op:operator pos:line="1350" pos:column="39">new</op:operator> <name><name pos:line="1350" pos:column="43">String</name><index pos:line="1350" pos:column="49">[<expr><call><name><name pos:line="1350" pos:column="50">departments</name><op:operator pos:line="1350" pos:column="61">.</op:operator><name pos:line="1350" pos:column="62">size</name></name><argument_list pos:line="1350" pos:column="66">()</argument_list></call></expr>]</index></name></expr>;</expr_stmt>
		<for pos:line="1351" pos:column="17">for(<init><decl><type><name pos:line="1351" pos:column="21">int</name></type> <name pos:line="1351" pos:column="25">i</name><init pos:line="1351" pos:column="26">=<expr><lit:literal type="number" pos:line="1351" pos:column="27">0</lit:literal></expr></init></decl>;</init><condition><expr><name pos:line="1351" pos:column="29">i</name><op:operator pos:line="1351" pos:column="30">&lt;</op:operator><name><name pos:line="1351" pos:column="31">departmentNameArray</name><op:operator pos:line="1351" pos:column="50">.</op:operator><name pos:line="1351" pos:column="51">length</name></name></expr>;</condition><incr><expr><name pos:line="1351" pos:column="58">i</name><op:operator pos:line="1351" pos:column="59">++</op:operator></expr></incr>)<block pos:line="1351" pos:column="62">{
			<expr_stmt><expr><name><name pos:line="1352" pos:column="25">departmentNameArray</name><index pos:line="1352" pos:column="44">[<expr><name pos:line="1352" pos:column="45">i</name></expr>]</index></name> <op:operator pos:line="1352" pos:column="48">=</op:operator> <call><name><name pos:line="1352" pos:column="50">departments</name><op:operator pos:line="1352" pos:column="61">.</op:operator><name pos:line="1352" pos:column="62">get</name></name><argument_list pos:line="1352" pos:column="65">(<argument><expr><name pos:line="1352" pos:column="66">i</name></expr></argument>)</argument_list></call><op:operator pos:line="1352" pos:column="68">.</op:operator><call><name pos:line="1352" pos:column="69">getDepartmentName</name><argument_list pos:line="1352" pos:column="86">()</argument_list></call></expr>;</expr_stmt>
		}</block></for>
	}</block></function>
	
	<function><type><specifier pos:line="1356" pos:column="9">public</specifier> <name pos:line="1356" pos:column="16">void</name></type> <name pos:line="1356" pos:column="21">initializeOfferTab</name><parameter_list pos:line="1356" pos:column="39">()</parameter_list><block pos:line="1356" pos:column="41">{
		<decl_stmt><decl><type><name><name pos:line="1357" pos:column="17">DefaultComboBoxModel</name><argument_list pos:line="1357" pos:column="37">&lt;<argument><name pos:line="1357" pos:column="38">String</name></argument>&gt;</argument_list></name></type> <name pos:line="1357" pos:column="46">model</name> <init pos:line="1357" pos:column="52">= <expr><op:operator pos:line="1357" pos:column="54">new</op:operator> <call><name><name pos:line="1357" pos:column="58">DefaultComboBoxModel</name><argument_list pos:line="1357" pos:column="78">&lt;<argument><name pos:line="1357" pos:column="79">String</name></argument>&gt;</argument_list></name><argument_list pos:line="1357" pos:column="86">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:line="1358" pos:column="17">for(<init><decl><type><name pos:line="1358" pos:column="21">Department</name></type> <name pos:line="1358" pos:column="32">d</name><range pos:line="1358" pos:column="33">:<expr><name pos:line="1358" pos:column="34">departments</name></expr></range></decl></init>)<block pos:line="1358" pos:column="46">{
			<expr_stmt><expr><call><name><name pos:line="1359" pos:column="25">model</name><op:operator pos:line="1359" pos:column="30">.</op:operator><name pos:line="1359" pos:column="31">addElement</name></name><argument_list pos:line="1359" pos:column="41">(<argument><expr><call><name><name pos:line="1359" pos:column="42">d</name><op:operator pos:line="1359" pos:column="43">.</op:operator><name pos:line="1359" pos:column="44">getDepartmentName</name></name><argument_list pos:line="1359" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		<expr_stmt><expr><call><name><name pos:line="1361" pos:column="17">allDepartmentsCombo</name><op:operator pos:line="1361" pos:column="36">.</op:operator><name pos:line="1361" pos:column="37">setModel</name></name><argument_list pos:line="1361" pos:column="45">(<argument><expr><name pos:line="1361" pos:column="46">model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="1362" pos:column="17">Department</name></type> <name pos:line="1362" pos:column="28">d</name></decl>;</decl_stmt>
		<try pos:line="1363" pos:column="17">try <block pos:line="1363" pos:column="21">{
			<expr_stmt><expr><name pos:line="1364" pos:column="25">d</name> <op:operator pos:line="1364" pos:column="27">=</op:operator> <op:operator pos:line="1364" pos:column="29">new</op:operator> <call><name pos:line="1364" pos:column="33">Department</name><argument_list pos:line="1364" pos:column="43">(<argument><expr><op:operator pos:line="1364" pos:column="44">(</op:operator><name pos:line="1364" pos:column="45">String</name><op:operator pos:line="1364" pos:column="51">)</op:operator><call><name><name pos:line="1364" pos:column="52">allDepartmentsCombo</name><op:operator pos:line="1364" pos:column="71">.</op:operator><name pos:line="1364" pos:column="72">getSelectedItem</name></name><argument_list pos:line="1364" pos:column="87">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name><name pos:line="1365" pos:column="25">ArrayList</name><argument_list pos:line="1365" pos:column="34">&lt;<argument><name pos:line="1365" pos:column="35">Course</name></argument>&gt;</argument_list></name></type> <name pos:line="1365" pos:column="43">deptCourses</name> <init pos:line="1365" pos:column="55">= <expr><call><name><name pos:line="1365" pos:column="57">Course</name><op:operator pos:line="1365" pos:column="63">.</op:operator><name pos:line="1365" pos:column="64">getCoursesOfDepartment</name></name><argument_list pos:line="1365" pos:column="86">(<argument><expr><name pos:line="1365" pos:column="87">d</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="1366" pos:column="25">ArrayList</name><argument_list pos:line="1366" pos:column="34">&lt;<argument><name pos:line="1366" pos:column="35">Professor</name></argument>&gt;</argument_list></name></type> <name pos:line="1366" pos:column="46">deptProfessor</name> <init pos:line="1366" pos:column="60">= <expr><call><name><name pos:line="1366" pos:column="62">Professor</name><op:operator pos:line="1366" pos:column="71">.</op:operator><name pos:line="1366" pos:column="72">getAllProfInADept</name></name><argument_list pos:line="1366" pos:column="89">(<argument><expr><call><name><name pos:line="1366" pos:column="90">d</name><op:operator pos:line="1366" pos:column="91">.</op:operator><name pos:line="1366" pos:column="92">getDepartmentID</name></name><argument_list pos:line="1366" pos:column="107">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			
			<decl_stmt><decl><type><name><name pos:line="1368" pos:column="25">DefaultComboBoxModel</name><argument_list pos:line="1368" pos:column="45">&lt;<argument><name pos:line="1368" pos:column="46">String</name></argument>&gt;</argument_list></name></type> <name pos:line="1368" pos:column="54">modelCourse</name> <init pos:line="1368" pos:column="66">= <expr><op:operator pos:line="1368" pos:column="68">new</op:operator> <call><name><name pos:line="1368" pos:column="72">DefaultComboBoxModel</name><argument_list pos:line="1368" pos:column="92">&lt;<argument><name pos:line="1368" pos:column="93">String</name></argument>&gt;</argument_list></name><argument_list pos:line="1368" pos:column="100">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="1369" pos:column="25">DefaultComboBoxModel</name><argument_list pos:line="1369" pos:column="45">&lt;<argument><name pos:line="1369" pos:column="46">String</name></argument>&gt;</argument_list></name></type> <name pos:line="1369" pos:column="54">modelProfessor</name> <init pos:line="1369" pos:column="69">= <expr><op:operator pos:line="1369" pos:column="71">new</op:operator> <call><name><name pos:line="1369" pos:column="75">DefaultComboBoxModel</name><argument_list pos:line="1369" pos:column="95">&lt;<argument><name pos:line="1369" pos:column="96">String</name></argument>&gt;</argument_list></name><argument_list pos:line="1369" pos:column="103">()</argument_list></call></expr></init></decl>;</decl_stmt>
			
			<if pos:line="1371" pos:column="25">if<condition pos:line="1371" pos:column="27">(<expr><call><name><name pos:line="1371" pos:column="28">deptCourses</name><op:operator pos:line="1371" pos:column="39">.</op:operator><name pos:line="1371" pos:column="40">size</name></name><argument_list pos:line="1371" pos:column="44">()</argument_list></call> <op:operator pos:line="1371" pos:column="47">==</op:operator> <lit:literal type="number" pos:line="1371" pos:column="50">0</lit:literal></expr>)</condition><then pos:line="1371" pos:column="52">
				<expr_stmt><expr><call><name><name pos:line="1372" pos:column="33">allCoursesCombo</name><op:operator pos:line="1372" pos:column="48">.</op:operator><name pos:line="1372" pos:column="49">setModel</name></name><argument_list pos:line="1372" pos:column="57">(<argument><expr><name pos:line="1372" pos:column="58">modelCourse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			
			<if pos:line="1374" pos:column="25">if<condition pos:line="1374" pos:column="27">(<expr><call><name><name pos:line="1374" pos:column="28">deptProfessor</name><op:operator pos:line="1374" pos:column="41">.</op:operator><name pos:line="1374" pos:column="42">size</name></name><argument_list pos:line="1374" pos:column="46">()</argument_list></call> <op:operator pos:line="1374" pos:column="49">==</op:operator> <lit:literal type="number" pos:line="1374" pos:column="52">0</lit:literal></expr>)</condition><then pos:line="1374" pos:column="54">
				<expr_stmt><expr><call><name><name pos:line="1375" pos:column="33">allProfessorCombo</name><op:operator pos:line="1375" pos:column="50">.</op:operator><name pos:line="1375" pos:column="51">setModel</name></name><argument_list pos:line="1375" pos:column="59">(<argument><expr><name pos:line="1375" pos:column="60">modelProfessor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			
			<for pos:line="1377" pos:column="25">for(<init><decl><type><name pos:line="1377" pos:column="29">Course</name></type> <name pos:line="1377" pos:column="36">c</name><range pos:line="1377" pos:column="37">:<expr><name pos:line="1377" pos:column="38">deptCourses</name></expr></range></decl></init>)<block pos:line="1377" pos:column="50">{
				<expr_stmt><expr><call><name><name pos:line="1378" pos:column="33">modelCourse</name><op:operator pos:line="1378" pos:column="44">.</op:operator><name pos:line="1378" pos:column="45">addElement</name></name><argument_list pos:line="1378" pos:column="55">(<argument><expr><call><name><name pos:line="1378" pos:column="56">c</name><op:operator pos:line="1378" pos:column="57">.</op:operator><name pos:line="1378" pos:column="58">getCourseName</name></name><argument_list pos:line="1378" pos:column="71">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="1379" pos:column="33">allCoursesCombo</name><op:operator pos:line="1379" pos:column="48">.</op:operator><name pos:line="1379" pos:column="49">setModel</name></name><argument_list pos:line="1379" pos:column="57">(<argument><expr><name pos:line="1379" pos:column="58">modelCourse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>
			
			<for pos:line="1382" pos:column="25">for(<init><decl><type><name pos:line="1382" pos:column="29">Professor</name></type> <name pos:line="1382" pos:column="39">p</name><range pos:line="1382" pos:column="40">:<expr><name pos:line="1382" pos:column="41">deptProfessor</name></expr></range></decl></init>)<block pos:line="1382" pos:column="55">{
				<expr_stmt><expr><call><name><name pos:line="1383" pos:column="33">modelProfessor</name><op:operator pos:line="1383" pos:column="47">.</op:operator><name pos:line="1383" pos:column="48">addElement</name></name><argument_list pos:line="1383" pos:column="58">(<argument><expr><call><name><name pos:line="1383" pos:column="59">p</name><op:operator pos:line="1383" pos:column="60">.</op:operator><name pos:line="1383" pos:column="61">getUserName</name></name><argument_list pos:line="1383" pos:column="72">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="1384" pos:column="33">allProfessorCombo</name><op:operator pos:line="1384" pos:column="50">.</op:operator><name pos:line="1384" pos:column="51">setModel</name></name><argument_list pos:line="1384" pos:column="59">(<argument><expr><name pos:line="1384" pos:column="60">modelProfessor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>
			
		}</block> <catch pos:line="1387" pos:column="19">catch <parameter_list pos:line="1387" pos:column="25">(<param><decl><type><name><name pos:line="1387" pos:column="26">Department</name><op:operator pos:line="1387" pos:column="36">.</op:operator><name pos:line="1387" pos:column="37">DepartmentDoesNotExistException</name></name></type> <name pos:line="1387" pos:column="69">e</name></decl></param>)</parameter_list> <block pos:line="1387" pos:column="72">{
			<comment type="line" pos:line="1388" pos:column="25">// TODO Auto-generated catch block</comment>
			<expr_stmt><expr><call><name><name pos:line="1389" pos:column="25">e</name><op:operator pos:line="1389" pos:column="26">.</op:operator><name pos:line="1389" pos:column="27">printStackTrace</name></name><argument_list pos:line="1389" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
		}</block></catch> <catch pos:line="1390" pos:column="19">catch <parameter_list pos:line="1390" pos:column="25">(<param><decl><type><name><name pos:line="1390" pos:column="26">Professor</name><op:operator pos:line="1390" pos:column="35">.</op:operator><name pos:line="1390" pos:column="36">ProfessorDoesNotExistException</name></name></type> <name pos:line="1390" pos:column="67">e</name></decl></param>)</parameter_list> <block pos:line="1390" pos:column="70">{
			<comment type="line" pos:line="1391" pos:column="25">// TODO Auto-generated catch block</comment>
			<expr_stmt><expr><call><name><name pos:line="1392" pos:column="25">e</name><op:operator pos:line="1392" pos:column="26">.</op:operator><name pos:line="1392" pos:column="27">printStackTrace</name></name><argument_list pos:line="1392" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
		}</block></catch></try>
		
		
		
	}</block></function>

	<function><type><specifier pos:line="1399" pos:column="9">public</specifier> <name pos:line="1399" pos:column="16">void</name></type> <name pos:line="1399" pos:column="21">initializeWaitListMonitor</name><parameter_list pos:line="1399" pos:column="46">()</parameter_list><block pos:line="1399" pos:column="48">{
		<decl_stmt><decl><type><name><name pos:line="1400" pos:column="17">DefaultComboBoxModel</name><argument_list pos:line="1400" pos:column="37">&lt;<argument><name pos:line="1400" pos:column="38">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="1400" pos:column="47">model</name> <init pos:line="1400" pos:column="53">= <expr><op:operator pos:line="1400" pos:column="55">new</op:operator> <call><name><name pos:line="1400" pos:column="59">DefaultComboBoxModel</name><argument_list pos:line="1400" pos:column="79">&lt;<argument><name pos:line="1400" pos:column="80">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="1400" pos:column="88">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:line="1401" pos:column="17">for(<init><decl><type><name pos:line="1401" pos:column="21">Integer</name></type> <name pos:line="1401" pos:column="29">i</name><range pos:line="1401" pos:column="30">:<expr><call><name><name pos:line="1401" pos:column="31">coursesOffered</name><op:operator pos:line="1401" pos:column="45">.</op:operator><name pos:line="1401" pos:column="46">keySet</name></name><argument_list pos:line="1401" pos:column="52">()</argument_list></call></expr></range></decl></init>)<block pos:line="1401" pos:column="55">{
			<expr_stmt><expr><call><name><name pos:line="1402" pos:column="25">model</name><op:operator pos:line="1402" pos:column="30">.</op:operator><name pos:line="1402" pos:column="31">addElement</name></name><argument_list pos:line="1402" pos:column="41">(<argument><expr><name pos:line="1402" pos:column="42">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		<expr_stmt><expr><call><name><name pos:line="1404" pos:column="17">courseOfferSelectForWaitListCombo</name><op:operator pos:line="1404" pos:column="50">.</op:operator><name pos:line="1404" pos:column="51">setModel</name></name><argument_list pos:line="1404" pos:column="59">(<argument><expr><name pos:line="1404" pos:column="60">model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<if pos:line="1406" pos:column="17">if<condition pos:line="1406" pos:column="19">(<expr><call><name><name pos:line="1406" pos:column="20">model</name><op:operator pos:line="1406" pos:column="25">.</op:operator><name pos:line="1406" pos:column="26">getSize</name></name><argument_list pos:line="1406" pos:column="33">()</argument_list></call><op:operator pos:line="1406" pos:column="35">&gt;</op:operator><lit:literal type="number" pos:line="1406" pos:column="36">0</lit:literal></expr>)</condition><then><block pos:line="1406" pos:column="38">{
			<decl_stmt><decl><type><name pos:line="1407" pos:column="25">int</name></type> <name pos:line="1407" pos:column="29">offerID</name> <init pos:line="1407" pos:column="37">= <expr><call><name><name pos:line="1407" pos:column="39">model</name><op:operator pos:line="1407" pos:column="44">.</op:operator><name pos:line="1407" pos:column="45">getElementAt</name></name><argument_list pos:line="1407" pos:column="57">(<argument><expr><lit:literal type="number" pos:line="1407" pos:column="58">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			
			<decl_stmt><decl><type><name><name pos:line="1409" pos:column="25">DefaultListModel</name><argument_list pos:line="1409" pos:column="41">&lt;<argument><name pos:line="1409" pos:column="42">String</name></argument>&gt;</argument_list></name></type> <name pos:line="1409" pos:column="50">waitList</name> <init pos:line="1409" pos:column="59">= <expr><op:operator pos:line="1409" pos:column="61">new</op:operator> <call><name><name pos:line="1409" pos:column="65">DefaultListModel</name><argument_list pos:line="1409" pos:column="81">&lt;<argument><name pos:line="1409" pos:column="82">String</name></argument>&gt;</argument_list></name><argument_list pos:line="1409" pos:column="89">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<for pos:line="1410" pos:column="25">for(<init><decl><type><name pos:line="1410" pos:column="29">Student</name></type> <name pos:line="1410" pos:column="37">s</name><range pos:line="1410" pos:column="38">:<expr><call><name><name pos:line="1410" pos:column="39">WaitList</name><op:operator pos:line="1410" pos:column="47">.</op:operator><name pos:line="1410" pos:column="48">getStudentsOnWaitList</name></name><argument_list pos:line="1410" pos:column="69">(<argument><expr><name pos:line="1410" pos:column="70">offerID</name></expr></argument>)</argument_list></call></expr></range></decl></init>)<block pos:line="1410" pos:column="79">{
				<expr_stmt><expr><call><name><name pos:line="1411" pos:column="33">waitList</name><op:operator pos:line="1411" pos:column="41">.</op:operator><name pos:line="1411" pos:column="42">addElement</name></name><argument_list pos:line="1411" pos:column="52">(<argument><expr><call><name><name pos:line="1411" pos:column="53">s</name><op:operator pos:line="1411" pos:column="54">.</op:operator><name pos:line="1411" pos:column="55">getName</name></name><argument_list pos:line="1411" pos:column="62">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>
			
			<expr_stmt><expr><call><name><name pos:line="1414" pos:column="25">waitListStudentsJList</name><op:operator pos:line="1414" pos:column="46">.</op:operator><name pos:line="1414" pos:column="47">setModel</name></name><argument_list pos:line="1414" pos:column="55">(<argument><expr><name pos:line="1414" pos:column="56">waitList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			<decl_stmt><decl><type><name><name pos:line="1416" pos:column="25">DefaultListModel</name><argument_list pos:line="1416" pos:column="41">&lt;<argument><name pos:line="1416" pos:column="42">String</name></argument>&gt;</argument_list></name></type> <name pos:line="1416" pos:column="50">emailedList</name> <init pos:line="1416" pos:column="62">= <expr><op:operator pos:line="1416" pos:column="64">new</op:operator> <call><name><name pos:line="1416" pos:column="68">DefaultListModel</name><argument_list pos:line="1416" pos:column="84">&lt;<argument><name pos:line="1416" pos:column="85">String</name></argument>&gt;</argument_list></name><argument_list pos:line="1416" pos:column="92">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<for pos:line="1417" pos:column="25">for(<init><decl><type><name pos:line="1417" pos:column="29">Student</name></type> <name pos:line="1417" pos:column="37">s</name><range pos:line="1417" pos:column="38">:<expr><call><name><name pos:line="1417" pos:column="39">WaitList</name><op:operator pos:line="1417" pos:column="47">.</op:operator><name pos:line="1417" pos:column="48">getStudentsOnEmailList</name></name><argument_list pos:line="1417" pos:column="70">(<argument><expr><name pos:line="1417" pos:column="71">offerID</name></expr></argument>)</argument_list></call></expr></range></decl></init>)<block pos:line="1417" pos:column="80">{
				<expr_stmt><expr><call><name><name pos:line="1418" pos:column="33">emailedList</name><op:operator pos:line="1418" pos:column="44">.</op:operator><name pos:line="1418" pos:column="45">addElement</name></name><argument_list pos:line="1418" pos:column="55">(<argument><expr><call><name><name pos:line="1418" pos:column="56">s</name><op:operator pos:line="1418" pos:column="57">.</op:operator><name pos:line="1418" pos:column="58">getName</name></name><argument_list pos:line="1418" pos:column="65">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>
			
			<expr_stmt><expr><call><name><name pos:line="1421" pos:column="25">emailedStudentsJList</name><op:operator pos:line="1421" pos:column="45">.</op:operator><name pos:line="1421" pos:column="46">setModel</name></name><argument_list pos:line="1421" pos:column="54">(<argument><expr><name pos:line="1421" pos:column="55">emailedList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			<try pos:line="1423" pos:column="25">try <block pos:line="1423" pos:column="29">{
				<decl_stmt><decl><type><name pos:line="1424" pos:column="33">CourseOffered</name></type> <name pos:line="1424" pos:column="47">co</name> <init pos:line="1424" pos:column="50">= <expr><op:operator pos:line="1424" pos:column="52">new</op:operator> <call><name pos:line="1424" pos:column="56">CourseOffered</name><argument_list pos:line="1424" pos:column="69">(<argument><expr><name pos:line="1424" pos:column="70">offerID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1425" pos:column="33">String</name></type> <name pos:line="1425" pos:column="40">s</name> <init pos:line="1425" pos:column="42">= <expr><lit:literal type="string" pos:line="1425" pos:column="44">"Course name:"</lit:literal><op:operator pos:line="1425" pos:column="58">+</op:operator><call><name><name pos:line="1425" pos:column="59">co</name><op:operator pos:line="1425" pos:column="61">.</op:operator><name pos:line="1425" pos:column="62">getCourseName</name></name><argument_list pos:line="1425" pos:column="75">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name pos:line="1426" pos:column="33">s</name><op:operator pos:line="1426" pos:column="34">+=</op:operator><lit:literal type="string" pos:line="1426" pos:column="36">"\nDepartment name:"</lit:literal><op:operator pos:line="1426" pos:column="56">+</op:operator><call><name><name pos:line="1426" pos:column="57">co</name><op:operator pos:line="1426" pos:column="59">.</op:operator><name pos:line="1426" pos:column="60">getDepartmentName</name></name><argument_list pos:line="1426" pos:column="77">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="1427" pos:column="33">s</name><op:operator pos:line="1427" pos:column="34">+=</op:operator><lit:literal type="string" pos:line="1427" pos:column="36">"\nTaught by Prof. "</lit:literal><op:operator pos:line="1427" pos:column="56">+</op:operator><call><name><name pos:line="1427" pos:column="57">co</name><op:operator pos:line="1427" pos:column="59">.</op:operator><name pos:line="1427" pos:column="60">getProfessorName</name></name><argument_list pos:line="1427" pos:column="76">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="1428" pos:column="33">s</name><op:operator pos:line="1428" pos:column="34">+=</op:operator><lit:literal type="string" pos:line="1428" pos:column="36">"\nClass location and name:"</lit:literal><op:operator pos:line="1428" pos:column="64">+</op:operator><call><name><name pos:line="1428" pos:column="65">co</name><op:operator pos:line="1428" pos:column="67">.</op:operator><name pos:line="1428" pos:column="68">getClassRoomLocation</name></name><argument_list pos:line="1428" pos:column="88">()</argument_list></call><op:operator pos:line="1428" pos:column="90">+</op:operator><lit:literal type="string" pos:line="1428" pos:column="91">", "</lit:literal><op:operator pos:line="1428" pos:column="95">+</op:operator><call><name><name pos:line="1428" pos:column="96">co</name><op:operator pos:line="1428" pos:column="98">.</op:operator><name pos:line="1428" pos:column="99">getClassRoomName</name></name><argument_list pos:line="1428" pos:column="115">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="1429" pos:column="33">s</name><op:operator pos:line="1429" pos:column="34">+=</op:operator><lit:literal type="string" pos:line="1429" pos:column="36">"\nTimings:"</lit:literal><op:operator pos:line="1429" pos:column="48">+</op:operator><call><name><name pos:line="1429" pos:column="49">co</name><op:operator pos:line="1429" pos:column="51">.</op:operator><name pos:line="1429" pos:column="52">getTiming</name></name><argument_list pos:line="1429" pos:column="61">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="1430" pos:column="33">courseDetailsTextPane</name><op:operator pos:line="1430" pos:column="54">.</op:operator><name pos:line="1430" pos:column="55">setText</name></name><argument_list pos:line="1430" pos:column="62">(<argument><expr><name pos:line="1430" pos:column="63">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
			}</block> <catch pos:line="1432" pos:column="27">catch <parameter_list pos:line="1432" pos:column="33">(<param><decl><type><name><name pos:line="1432" pos:column="34">Course</name><op:operator pos:line="1432" pos:column="40">.</op:operator><name pos:line="1432" pos:column="41">CourseDoesNotExistException</name></name></type>	<name pos:line="1432" pos:column="73">e</name></decl></param>)</parameter_list> <block pos:line="1432" pos:column="76">{
				<comment type="line" pos:line="1433" pos:column="33">// TODO Auto-generated catch block</comment>
				<expr_stmt><expr><call><name><name pos:line="1434" pos:column="33">e</name><op:operator pos:line="1434" pos:column="34">.</op:operator><name pos:line="1434" pos:column="35">printStackTrace</name></name><argument_list pos:line="1434" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			}</block></catch> <catch pos:line="1435" pos:column="27">catch <parameter_list pos:line="1435" pos:column="33">(<param><decl><type><name><name pos:line="1435" pos:column="34">CourseOffered</name><op:operator pos:line="1435" pos:column="47">.</op:operator><name pos:line="1435" pos:column="48">CourseOfferingDoesNotExistException</name></name></type> <name pos:line="1435" pos:column="84">e</name></decl></param>)</parameter_list> <block pos:line="1435" pos:column="87">{
				<comment type="line" pos:line="1436" pos:column="33">// TODO Auto-generated catch block</comment>
				<expr_stmt><expr><call><name><name pos:line="1437" pos:column="33">e</name><op:operator pos:line="1437" pos:column="34">.</op:operator><name pos:line="1437" pos:column="35">printStackTrace</name></name><argument_list pos:line="1437" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			}</block></catch></try>
			
		}</block></then></if>
		
		
	}</block></function>
	<comment type="line" pos:line="1444" pos:column="9">//???write a initialize manage people tab function???</comment>
	
	<function><type><specifier pos:line="1446" pos:column="9">public</specifier> <name pos:line="1446" pos:column="16">void</name></type> <name pos:line="1446" pos:column="21">initializeEmptyClassAndTimeSlot</name><parameter_list pos:line="1446" pos:column="52">(<param><decl><type><name pos:line="1446" pos:column="53">ClassroomLocation</name></type> <name pos:line="1446" pos:column="71">location</name></decl></param>, <param><decl><type><name pos:line="1446" pos:column="81">int</name></type> <name pos:line="1446" pos:column="85">timeSlotType</name></decl></param>, <param><decl><type><name pos:line="1446" pos:column="99">int</name></type> <name pos:line="1446" pos:column="103">courseCapacity</name></decl></param>)</parameter_list><block pos:line="1446" pos:column="118">{
		<decl_stmt><decl><type><name><name pos:line="1447" pos:column="17">LinkedHashMap</name><argument_list pos:line="1447" pos:column="30">&lt;<argument><name pos:line="1447" pos:column="31">Integer</name></argument>, <argument><name pos:line="1447" pos:column="40">Classroom</name></argument>&gt;</argument_list></name></type> <name pos:line="1447" pos:column="51">emptyClassRooms</name> <init pos:line="1447" pos:column="67">= <expr><call><name><name pos:line="1447" pos:column="69">Classroom</name><op:operator pos:line="1447" pos:column="78">.</op:operator><name pos:line="1447" pos:column="79">getAllEmptyClassroom</name></name><argument_list pos:line="1447" pos:column="99">(<argument><expr><name pos:line="1447" pos:column="100">location</name></expr></argument>, <argument><expr><name pos:line="1447" pos:column="110">timeSlotType</name></expr></argument>, <argument><expr><name pos:line="1447" pos:column="124">courseCapacity</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="1448" pos:column="17">classroomAndTimeslots</name> <op:operator pos:line="1448" pos:column="39">=</op:operator> <op:operator pos:line="1448" pos:column="41">new</op:operator> <call><name><name pos:line="1448" pos:column="45">LinkedHashMap</name><argument_list pos:line="1448" pos:column="58">&lt;<argument><name pos:line="1448" pos:column="59">Classroom</name></argument>, <argument><name><name pos:line="1448" pos:column="70">ArrayList</name><argument_list pos:line="1448" pos:column="79">&lt;<argument><name pos:line="1448" pos:column="80">Timeslots</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name><argument_list pos:line="1448" pos:column="91">()</argument_list></call></expr>;</expr_stmt>		
		<decl_stmt><decl><type><name pos:line="1449" pos:column="17">String</name><index pos:line="1449" pos:column="23">[]</index></type> <name pos:line="1449" pos:column="26">classRoomStrings</name> <init pos:line="1449" pos:column="43">= <expr><op:operator pos:line="1449" pos:column="45">new</op:operator> <name><name pos:line="1449" pos:column="49">String</name><index pos:line="1449" pos:column="55">[<expr><call><name><name pos:line="1449" pos:column="56">emptyClassRooms</name><op:operator pos:line="1449" pos:column="71">.</op:operator><name pos:line="1449" pos:column="72">size</name></name><argument_list pos:line="1449" pos:column="76">()</argument_list></call></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1450" pos:column="17">int</name></type> <name pos:line="1450" pos:column="21">index</name><init pos:line="1450" pos:column="26">=<expr><lit:literal type="number" pos:line="1450" pos:column="27">0</lit:literal></expr></init></decl>;</decl_stmt>
		<for pos:line="1451" pos:column="17">for(<init><decl><type><name pos:line="1451" pos:column="21">Integer</name></type> <name pos:line="1451" pos:column="29">i</name> <range pos:line="1451" pos:column="31">: <expr><call><name><name pos:line="1451" pos:column="33">emptyClassRooms</name><op:operator pos:line="1451" pos:column="48">.</op:operator><name pos:line="1451" pos:column="49">keySet</name></name><argument_list pos:line="1451" pos:column="55">()</argument_list></call></expr></range></decl></init>)<block pos:line="1451" pos:column="58">{
			<decl_stmt><decl><type><name pos:line="1452" pos:column="25">Classroom</name></type> <name pos:line="1452" pos:column="35">cr</name> <init pos:line="1452" pos:column="38">= <expr><call><name><name pos:line="1452" pos:column="40">emptyClassRooms</name><op:operator pos:line="1452" pos:column="55">.</op:operator><name pos:line="1452" pos:column="56">get</name></name><argument_list pos:line="1452" pos:column="59">(<argument><expr><name pos:line="1452" pos:column="60">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="1453" pos:column="25">ArrayList</name><argument_list pos:line="1453" pos:column="34">&lt;<argument><name pos:line="1453" pos:column="35">Timeslots</name></argument>&gt;</argument_list></name></type> <name pos:line="1453" pos:column="46">ts</name> <init pos:line="1453" pos:column="49">= <expr><call><name><name pos:line="1453" pos:column="51">cr</name><op:operator pos:line="1453" pos:column="53">.</op:operator><name pos:line="1453" pos:column="54">findOpenSlotsForClassroom</name></name><argument_list pos:line="1453" pos:column="79">(<argument><expr><name pos:line="1453" pos:column="80">timeSlotType</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="1454" pos:column="25">classroomAndTimeslots</name><op:operator pos:line="1454" pos:column="46">.</op:operator><name pos:line="1454" pos:column="47">put</name></name><argument_list pos:line="1454" pos:column="50">(<argument><expr><name pos:line="1454" pos:column="51">cr</name></expr></argument>, <argument><expr><name pos:line="1454" pos:column="55">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="1455" pos:column="25">classRoomStrings</name><index pos:line="1455" pos:column="41">[<expr><name pos:line="1455" pos:column="42">index</name></expr>]</index></name> <op:operator pos:line="1455" pos:column="49">=</op:operator> <call><name><name pos:line="1455" pos:column="51">cr</name><op:operator pos:line="1455" pos:column="53">.</op:operator><name pos:line="1455" pos:column="54">getClassroomName</name></name><argument_list pos:line="1455" pos:column="70">()</argument_list></call><op:operator pos:line="1455" pos:column="72">.</op:operator><call><name pos:line="1455" pos:column="73">toString</name><argument_list pos:line="1455" pos:column="81">()</argument_list></call></expr>;</expr_stmt>			
			<if pos:line="1456" pos:column="25">if<condition pos:line="1456" pos:column="27">(<expr><name pos:line="1456" pos:column="28">index</name> <op:operator pos:line="1456" pos:column="34">==</op:operator> <lit:literal type="number" pos:line="1456" pos:column="37">0</lit:literal></expr>)</condition><then pos:line="1456" pos:column="39">
				<expr_stmt><expr><call><name pos:line="1457" pos:column="33">initializeEmptyTimeSlotCombo</name><argument_list pos:line="1457" pos:column="61">(<argument><expr><name pos:line="1457" pos:column="62">cr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<expr_stmt><expr><name pos:line="1458" pos:column="25">index</name><op:operator pos:line="1458" pos:column="30">++</op:operator></expr>;</expr_stmt>
		}</block></for>
		
		<expr_stmt><expr><call><name><name pos:line="1461" pos:column="17">classRoomCombo</name><op:operator pos:line="1461" pos:column="31">.</op:operator><name pos:line="1461" pos:column="32">setModel</name></name><argument_list pos:line="1461" pos:column="40">(<argument><expr><op:operator pos:line="1461" pos:column="41">new</op:operator> <call><name><name pos:line="1461" pos:column="45">DefaultComboBoxModel</name><argument_list pos:line="1461" pos:column="65">&lt;<argument><name pos:line="1461" pos:column="66">String</name></argument>&gt;</argument_list></name><argument_list pos:line="1461" pos:column="73">(<argument><expr><name pos:line="1461" pos:column="74">classRoomStrings</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<if pos:line="1463" pos:column="17">if<condition pos:line="1463" pos:column="19">(<expr><call><name><name pos:line="1463" pos:column="20">classRoomCombo</name><op:operator pos:line="1463" pos:column="34">.</op:operator><name pos:line="1463" pos:column="35">getModel</name></name><argument_list pos:line="1463" pos:column="43">()</argument_list></call><op:operator pos:line="1463" pos:column="45">.</op:operator><call><name pos:line="1463" pos:column="46">getSize</name><argument_list pos:line="1463" pos:column="53">()</argument_list></call><op:operator pos:line="1463" pos:column="55">&gt;</op:operator><lit:literal type="number" pos:line="1463" pos:column="56">0</lit:literal></expr>)</condition><then pos:line="1463" pos:column="58">
			<expr_stmt><expr><call><name><name pos:line="1464" pos:column="25">classRoomCombo</name><op:operator pos:line="1464" pos:column="39">.</op:operator><name pos:line="1464" pos:column="40">setSelectedIndex</name></name><argument_list pos:line="1464" pos:column="56">(<argument><expr><lit:literal type="number" pos:line="1464" pos:column="57">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		
		<if pos:line="1466" pos:column="17">if<condition pos:line="1466" pos:column="19">(<expr><call><name><name pos:line="1466" pos:column="20">timingAvailableCombo</name><op:operator pos:line="1466" pos:column="40">.</op:operator><name pos:line="1466" pos:column="41">getModel</name></name><argument_list pos:line="1466" pos:column="49">()</argument_list></call><op:operator pos:line="1466" pos:column="51">.</op:operator><call><name pos:line="1466" pos:column="52">getSize</name><argument_list pos:line="1466" pos:column="59">()</argument_list></call><op:operator pos:line="1466" pos:column="61">&gt;</op:operator><lit:literal type="number" pos:line="1466" pos:column="62">0</lit:literal></expr>)</condition><then pos:line="1466" pos:column="64">
			<expr_stmt><expr><call><name><name pos:line="1467" pos:column="25">timingAvailableCombo</name><op:operator pos:line="1467" pos:column="45">.</op:operator><name pos:line="1467" pos:column="46">setSelectedIndex</name></name><argument_list pos:line="1467" pos:column="62">(<argument><expr><lit:literal type="number" pos:line="1467" pos:column="63">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		
	}</block></function>
	
	<function><type><specifier pos:line="1471" pos:column="9">public</specifier> <name pos:line="1471" pos:column="16">void</name></type> <name pos:line="1471" pos:column="21">initializeEmptyTimeSlotCombo</name><parameter_list pos:line="1471" pos:column="49">(<param><decl><type><name pos:line="1471" pos:column="50">Classroom</name></type> <name pos:line="1471" pos:column="60">c</name></decl></param>)</parameter_list><block pos:line="1471" pos:column="62">{
		<decl_stmt><decl><type><name><name pos:line="1472" pos:column="17">ArrayList</name><argument_list pos:line="1472" pos:column="26">&lt;<argument><name pos:line="1472" pos:column="27">Timeslots</name></argument>&gt;</argument_list></name></type> <name pos:line="1472" pos:column="38">ts</name> <init pos:line="1472" pos:column="41">= <expr><call><name><name pos:line="1472" pos:column="43">classroomAndTimeslots</name><op:operator pos:line="1472" pos:column="64">.</op:operator><name pos:line="1472" pos:column="65">get</name></name><argument_list pos:line="1472" pos:column="68">(<argument><expr><name pos:line="1472" pos:column="69">c</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1473" pos:column="17">String</name><index pos:line="1473" pos:column="23">[]</index></type> <name pos:line="1473" pos:column="26">timeSlotsStrings</name> <init pos:line="1473" pos:column="43">= <expr><op:operator pos:line="1473" pos:column="45">new</op:operator> <name><name pos:line="1473" pos:column="49">String</name><index pos:line="1473" pos:column="55">[<expr><call><name><name pos:line="1473" pos:column="56">ts</name><op:operator pos:line="1473" pos:column="58">.</op:operator><name pos:line="1473" pos:column="59">size</name></name><argument_list pos:line="1473" pos:column="63">()</argument_list></call></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<for pos:line="1474" pos:column="17">for(<init><decl><type><name pos:line="1474" pos:column="21">int</name></type> <name pos:line="1474" pos:column="25">i</name><init pos:line="1474" pos:column="26">=<expr><lit:literal type="number" pos:line="1474" pos:column="27">0</lit:literal></expr></init></decl>;</init><condition><expr><name pos:line="1474" pos:column="29">i</name><op:operator pos:line="1474" pos:column="30">&lt;</op:operator><call><name><name pos:line="1474" pos:column="31">ts</name><op:operator pos:line="1474" pos:column="33">.</op:operator><name pos:line="1474" pos:column="34">size</name></name><argument_list pos:line="1474" pos:column="38">()</argument_list></call></expr>;</condition><incr><expr><name pos:line="1474" pos:column="41">i</name><op:operator pos:line="1474" pos:column="42">++</op:operator></expr></incr>)<block pos:line="1474" pos:column="45">{
			<expr_stmt><expr><name><name pos:line="1475" pos:column="25">timeSlotsStrings</name><index pos:line="1475" pos:column="41">[<expr><name pos:line="1475" pos:column="42">i</name></expr>]</index></name> <op:operator pos:line="1475" pos:column="45">=</op:operator> <call><name><name pos:line="1475" pos:column="47">ts</name><op:operator pos:line="1475" pos:column="49">.</op:operator><name pos:line="1475" pos:column="50">get</name></name><argument_list pos:line="1475" pos:column="53">(<argument><expr><name pos:line="1475" pos:column="54">i</name></expr></argument>)</argument_list></call><op:operator pos:line="1475" pos:column="56">.</op:operator><call><name pos:line="1475" pos:column="57">getStartHour</name><argument_list pos:line="1475" pos:column="69">()</argument_list></call><op:operator pos:line="1475" pos:column="71">+</op:operator> <lit:literal type="string" pos:line="1475" pos:column="73">"00 to "</lit:literal><op:operator pos:line="1475" pos:column="81">+</op:operator><call><name><name pos:line="1475" pos:column="82">ts</name><op:operator pos:line="1475" pos:column="84">.</op:operator><name pos:line="1475" pos:column="85">get</name></name><argument_list pos:line="1475" pos:column="88">(<argument><expr><name pos:line="1475" pos:column="89">i</name></expr></argument>)</argument_list></call><op:operator pos:line="1475" pos:column="91">.</op:operator><call><name pos:line="1475" pos:column="92">getEndHour</name><argument_list pos:line="1475" pos:column="102">()</argument_list></call><op:operator pos:line="1475" pos:column="104">+</op:operator><lit:literal type="string" pos:line="1475" pos:column="105">"00"</lit:literal></expr>;</expr_stmt>
		}</block></for>
		
		<expr_stmt><expr><call><name><name pos:line="1478" pos:column="17">timingAvailableCombo</name><op:operator pos:line="1478" pos:column="37">.</op:operator><name pos:line="1478" pos:column="38">setModel</name></name><argument_list pos:line="1478" pos:column="46">(<argument><expr><op:operator pos:line="1478" pos:column="47">new</op:operator> <call><name><name pos:line="1478" pos:column="51">DefaultComboBoxModel</name><argument_list pos:line="1478" pos:column="71">&lt;<argument><name pos:line="1478" pos:column="72">String</name></argument>&gt;</argument_list></name><argument_list pos:line="1478" pos:column="79">(<argument><expr><name pos:line="1478" pos:column="80">timeSlotsStrings</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>
	
	<function><type><specifier pos:line="1481" pos:column="9">public</specifier> <name pos:line="1481" pos:column="16">void</name></type> <name pos:line="1481" pos:column="21">updateCourseSchedule</name><parameter_list pos:line="1481" pos:column="41">(<param><decl><type><name pos:line="1481" pos:column="42">CourseOffered</name></type> <name pos:line="1481" pos:column="56">coursOffered</name></decl></param>, <param><decl><type><name pos:line="1481" pos:column="70">Classroom</name></type> <name pos:line="1481" pos:column="80">classroom</name></decl></param>, <param><decl><type><name pos:line="1481" pos:column="91">Timeslots</name></type> <name pos:line="1481" pos:column="101">timeslot</name></decl></param>)</parameter_list><block pos:line="1481" pos:column="110">{
		<try pos:line="1482" pos:column="17">try <block pos:line="1482" pos:column="21">{
			<expr_stmt><expr><call><name><name pos:line="1483" pos:column="25">CourseSchedule</name><op:operator pos:line="1483" pos:column="39">.</op:operator><name pos:line="1483" pos:column="40">updateCourseSchedule</name></name><argument_list pos:line="1483" pos:column="60">(<argument><expr><name pos:line="1483" pos:column="61">coursOffered</name></expr></argument>, <argument><expr><name pos:line="1483" pos:column="75">classroom</name></expr></argument>, <argument><expr><name pos:line="1483" pos:column="86">timeslot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="1484" pos:column="25">showMessage</name><argument_list pos:line="1484" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="1484" pos:column="37">"Updated successfully"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1484" pos:column="61">"Success"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="1485" pos:column="25">initilizeSingleRescheduleTab</name><argument_list pos:line="1485" pos:column="53">(<argument><expr><call><name><name pos:line="1485" pos:column="54">coursOffered</name><op:operator pos:line="1485" pos:column="66">.</op:operator><name pos:line="1485" pos:column="67">getOfferID</name></name><argument_list pos:line="1485" pos:column="77">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="1486" pos:column="25">initializeBackgroundData</name><argument_list pos:line="1486" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="1487" pos:column="25">initializeJListsForCourseSchedule</name><argument_list pos:line="1487" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="1488" pos:column="25">ClassroomLocation</name></type> <name pos:line="1488" pos:column="43">l</name> <init pos:line="1488" pos:column="45">= <expr><call><name><name pos:line="1488" pos:column="47">ClassroomLocation</name><op:operator pos:line="1488" pos:column="64">.</op:operator><name pos:line="1488" pos:column="65">valueOf</name></name><argument_list pos:line="1488" pos:column="72">(<argument><expr><op:operator pos:line="1488" pos:column="73">(</op:operator><name pos:line="1488" pos:column="74">String</name><op:operator pos:line="1488" pos:column="80">)</op:operator><call><name><name pos:line="1488" pos:column="81">classLocationCombo</name><op:operator pos:line="1488" pos:column="99">.</op:operator><name pos:line="1488" pos:column="100">getSelectedItem</name></name><argument_list pos:line="1488" pos:column="115">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1489" pos:column="25">int</name></type> <name pos:line="1489" pos:column="29">timeSlotType</name> <init pos:line="1489" pos:column="42">= <expr><call><name><name pos:line="1489" pos:column="44">timeSlotTypeCombo</name><op:operator pos:line="1489" pos:column="61">.</op:operator><name pos:line="1489" pos:column="62">getSelectedIndex</name></name><argument_list pos:line="1489" pos:column="78">()</argument_list></call><op:operator pos:line="1489" pos:column="80">+</op:operator><lit:literal type="number" pos:line="1489" pos:column="81">1</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1490" pos:column="25">CourseOffered</name></type> <name pos:line="1490" pos:column="39">co</name> <init pos:line="1490" pos:column="42">= <expr><call><name><name pos:line="1490" pos:column="44">coursesOffered</name><op:operator pos:line="1490" pos:column="58">.</op:operator><name pos:line="1490" pos:column="59">get</name></name><argument_list pos:line="1490" pos:column="62">(<argument><expr><op:operator pos:line="1490" pos:column="63">(</op:operator><name pos:line="1490" pos:column="64">Integer</name><op:operator pos:line="1490" pos:column="71">)</op:operator><call><name><name pos:line="1490" pos:column="72">courseScheduledCombo</name><op:operator pos:line="1490" pos:column="92">.</op:operator><name pos:line="1490" pos:column="93">getSelectedItem</name></name><argument_list pos:line="1490" pos:column="108">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1491" pos:column="25">int</name></type> <name pos:line="1491" pos:column="29">cap</name> <init pos:line="1491" pos:column="33">= <expr><call><name><name pos:line="1491" pos:column="35">co</name><op:operator pos:line="1491" pos:column="37">.</op:operator><name pos:line="1491" pos:column="38">getTotalCapacity</name></name><argument_list pos:line="1491" pos:column="54">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="1492" pos:column="25">initializeEmptyClassAndTimeSlot</name><argument_list pos:line="1492" pos:column="56">(<argument><expr><name pos:line="1492" pos:column="57">l</name></expr></argument>, <argument><expr><name pos:line="1492" pos:column="60">timeSlotType</name></expr></argument>, <argument><expr><name pos:line="1492" pos:column="74">cap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
		}</block> <catch pos:line="1494" pos:column="19">catch <parameter_list pos:line="1494" pos:column="25">(<param><decl><type><name><name pos:line="1494" pos:column="26">CourseOffered</name><op:operator pos:line="1494" pos:column="39">.</op:operator><name pos:line="1494" pos:column="40">CourseOfferingNotCurrentException</name></name></type> <name pos:line="1494" pos:column="74">e</name></decl></param>)</parameter_list> <block pos:line="1494" pos:column="77">{
			<expr_stmt><expr><call><name pos:line="1495" pos:column="25">showMessage</name><argument_list pos:line="1495" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="1495" pos:column="37">"Unable to update"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1495" pos:column="57">"Unable to update"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1496" pos:column="25">e</name><op:operator pos:line="1496" pos:column="26">.</op:operator><name pos:line="1496" pos:column="27">printStackTrace</name></name><argument_list pos:line="1496" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
		}</block></catch></try>
	}</block></function>
	
	<function><type><specifier pos:line="1500" pos:column="9">public</specifier> <name pos:line="1500" pos:column="16">void</name></type> <name pos:line="1500" pos:column="21">setAllIndexTo</name><parameter_list pos:line="1500" pos:column="34">(<param><decl><type><name pos:line="1500" pos:column="35">int</name></type> <name pos:line="1500" pos:column="39">index</name></decl></param>)</parameter_list><block pos:line="1500" pos:column="45">{
		<expr_stmt><expr><call><name><name pos:line="1501" pos:column="17">courseNameList</name><op:operator pos:line="1501" pos:column="31">.</op:operator><name pos:line="1501" pos:column="32">setSelectedIndex</name></name><argument_list pos:line="1501" pos:column="48">(<argument><expr><name pos:line="1501" pos:column="49">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1502" pos:column="17">courseOfferIDList</name><op:operator pos:line="1502" pos:column="34">.</op:operator><name pos:line="1502" pos:column="35">setSelectedIndex</name></name><argument_list pos:line="1502" pos:column="51">(<argument><expr><name pos:line="1502" pos:column="52">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1503" pos:column="17">professorNameList</name><op:operator pos:line="1503" pos:column="34">.</op:operator><name pos:line="1503" pos:column="35">setSelectedIndex</name></name><argument_list pos:line="1503" pos:column="51">(<argument><expr><name pos:line="1503" pos:column="52">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1504" pos:column="17">classLocationList</name><op:operator pos:line="1504" pos:column="34">.</op:operator><name pos:line="1504" pos:column="35">setSelectedIndex</name></name><argument_list pos:line="1504" pos:column="51">(<argument><expr><name pos:line="1504" pos:column="52">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1505" pos:column="17">classNameList</name><op:operator pos:line="1505" pos:column="30">.</op:operator><name pos:line="1505" pos:column="31">setSelectedIndex</name></name><argument_list pos:line="1505" pos:column="47">(<argument><expr><name pos:line="1505" pos:column="48">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1506" pos:column="17">classTimingList</name><op:operator pos:line="1506" pos:column="32">.</op:operator><name pos:line="1506" pos:column="33">setSelectedIndex</name></name><argument_list pos:line="1506" pos:column="49">(<argument><expr><name pos:line="1506" pos:column="50">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
	}</block></function>
	
	<comment type="line" pos:line="1510" pos:column="9">//to refresh the data show to the user periodically</comment>
	<class><specifier pos:line="1511" pos:column="9">private</specifier> class <name pos:line="1511" pos:column="23">MonitorWaitList</name> <super><implements pos:line="1511" pos:column="39">implements <name pos:line="1511" pos:column="50">Runnable</name></implements></super><block pos:line="1511" pos:column="58">{
		<function><type><annotation pos:line="1512" pos:column="17">@<name pos:line="1512" pos:column="18">Override</name></annotation>
		<specifier pos:line="1513" pos:column="17">public</specifier> <name pos:line="1513" pos:column="24">void</name></type> <name pos:line="1513" pos:column="29">run</name><parameter_list pos:line="1513" pos:column="32">()</parameter_list> <block pos:line="1513" pos:column="35">{
			<while pos:line="1514" pos:column="25">while<condition pos:line="1514" pos:column="30">(<expr><lit:literal type="boolean" pos:line="1514" pos:column="31">true</lit:literal></expr>)</condition><block pos:line="1514" pos:column="36">{
				<expr_stmt><expr><call><name><name pos:line="1515" pos:column="33">System</name><op:operator pos:line="1515" pos:column="39">.</op:operator><name pos:line="1515" pos:column="40">out</name><op:operator pos:line="1515" pos:column="43">.</op:operator><name pos:line="1515" pos:column="44">println</name></name><argument_list pos:line="1515" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="1515" pos:column="52">"Initializing the wait list monitor - Admin UI"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="1516" pos:column="33">initializeWaitListMonitor</name><argument_list pos:line="1516" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				<try pos:line="1517" pos:column="33">try <block pos:line="1517" pos:column="37">{
					<expr_stmt><expr><call><name><name pos:line="1518" pos:column="41">Thread</name><op:operator pos:line="1518" pos:column="47">.</op:operator><name pos:line="1518" pos:column="48">sleep</name></name><argument_list pos:line="1518" pos:column="53">(<argument><expr><lit:literal type="number" pos:line="1518" pos:column="54">10000</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="1519" pos:column="41">System</name><op:operator pos:line="1519" pos:column="47">.</op:operator><name pos:line="1519" pos:column="48">out</name><op:operator pos:line="1519" pos:column="51">.</op:operator><name pos:line="1519" pos:column="52">println</name></name><argument_list pos:line="1519" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="1519" pos:column="60">"Finished the wait list monitor - Admin UI"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block> <catch pos:line="1520" pos:column="35">catch <parameter_list pos:line="1520" pos:column="41">(<param><decl><type><name pos:line="1520" pos:column="42">InterruptedException</name></type> <name pos:line="1520" pos:column="63">e</name></decl></param>)</parameter_list> <block pos:line="1520" pos:column="66">{
					<comment type="line" pos:line="1521" pos:column="41">// TODO Auto-generated catch block</comment>
					<expr_stmt><expr><call><name><name pos:line="1522" pos:column="41">e</name><op:operator pos:line="1522" pos:column="42">.</op:operator><name pos:line="1522" pos:column="43">printStackTrace</name></name><argument_list pos:line="1522" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
			}</block></while>
		}</block></function>
		
	}</block></class>
}</block></class>
</unit>
