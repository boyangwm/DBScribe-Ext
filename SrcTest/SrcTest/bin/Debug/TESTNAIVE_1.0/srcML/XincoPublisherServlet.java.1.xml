<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\xinco\src\com\bluecubs\xinco\server\XincoPublisherServlet.java" pos:tabs="8"><comment type="block" format="javadoc" pos:line="1" pos:column="1">/**
 *Copyright 2009 blueCubs.com
 *
 *Licensed under the Apache License, Version 2.0 (the "License");
 *you may not use this file except in compliance with the License.
 *You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 *Unless required by applicable law or agreed to in writing, software
 *distributed under the License is distributed on an "AS IS" BASIS,
 *WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *See the License for the specific language governing permissions and
 *limitations under the License.
 *
 *************************************************************
 * This project supports the blueCubs vision of giving back
 * to the community in exchange for free software!
 * More information on: http://www.bluecubs.org
 *************************************************************
 *
 * Name:            XincoPublisherServlet
 *
 * Description:     publisher servlet
 *
 * Original Author: Alexander Manes
 * Date:            2004
 *
 * Modifications:
 *
 * Who?             When?             What?
 * -                -                 -
 *
 *************************************************************
 */</comment>
<package pos:line="36" pos:column="1">package <name><name pos:line="36" pos:column="9">com</name><op:operator pos:line="36" pos:column="12">.</op:operator><name pos:line="36" pos:column="13">bluecubs</name><op:operator pos:line="36" pos:column="21">.</op:operator><name pos:line="36" pos:column="22">xinco</name><op:operator pos:line="36" pos:column="27">.</op:operator><name pos:line="36" pos:column="28">server</name></name>;</package>

<import pos:line="38" pos:column="1">import <name><name pos:line="38" pos:column="8">com</name><op:operator pos:line="38" pos:column="11">.</op:operator><name pos:line="38" pos:column="12">bluecubs</name><op:operator pos:line="38" pos:column="20">.</op:operator><name pos:line="38" pos:column="21">xinco</name><op:operator pos:line="38" pos:column="26">.</op:operator><name pos:line="38" pos:column="27">add</name><op:operator pos:line="38" pos:column="30">.</op:operator><name pos:line="38" pos:column="31">XincoAddAttribute</name></name>;</import>
<import pos:line="39" pos:column="1">import <name><name pos:line="39" pos:column="8">com</name><op:operator pos:line="39" pos:column="11">.</op:operator><name pos:line="39" pos:column="12">bluecubs</name><op:operator pos:line="39" pos:column="20">.</op:operator><name pos:line="39" pos:column="21">xinco</name><op:operator pos:line="39" pos:column="26">.</op:operator><name pos:line="39" pos:column="27">conf</name><op:operator pos:line="39" pos:column="31">.</op:operator><name pos:line="39" pos:column="32">XincoConfigSingletonServer</name></name>;</import>
<import pos:line="40" pos:column="1">import <name><name pos:line="40" pos:column="8">java</name><op:operator pos:line="40" pos:column="12">.</op:operator><name pos:line="40" pos:column="13">io</name></name>.*;</import>
<import pos:line="41" pos:column="1">import <name><name pos:line="41" pos:column="8">java</name><op:operator pos:line="41" pos:column="12">.</op:operator><name pos:line="41" pos:column="13">sql</name><op:operator pos:line="41" pos:column="16">.</op:operator><name pos:line="41" pos:column="17">ResultSet</name></name>;</import>
<import pos:line="42" pos:column="1">import <name><name pos:line="42" pos:column="8">java</name><op:operator pos:line="42" pos:column="12">.</op:operator><name pos:line="42" pos:column="13">sql</name><op:operator pos:line="42" pos:column="16">.</op:operator><name pos:line="42" pos:column="17">Statement</name></name>;</import>
<import pos:line="43" pos:column="1">import <name><name pos:line="43" pos:column="8">javax</name><op:operator pos:line="43" pos:column="13">.</op:operator><name pos:line="43" pos:column="14">servlet</name></name>.*;</import>
<import pos:line="44" pos:column="1">import <name><name pos:line="44" pos:column="8">javax</name><op:operator pos:line="44" pos:column="13">.</op:operator><name pos:line="44" pos:column="14">servlet</name><op:operator pos:line="44" pos:column="21">.</op:operator><name pos:line="44" pos:column="22">http</name></name>.*;</import>
<import pos:line="45" pos:column="1">import <name><name pos:line="45" pos:column="8">com</name><op:operator pos:line="45" pos:column="11">.</op:operator><name pos:line="45" pos:column="12">bluecubs</name><op:operator pos:line="45" pos:column="20">.</op:operator><name pos:line="45" pos:column="21">xinco</name><op:operator pos:line="45" pos:column="26">.</op:operator><name pos:line="45" pos:column="27">core</name></name>.*;</import>
<import pos:line="46" pos:column="1">import <name><name pos:line="46" pos:column="8">com</name><op:operator pos:line="46" pos:column="11">.</op:operator><name pos:line="46" pos:column="12">bluecubs</name><op:operator pos:line="46" pos:column="20">.</op:operator><name pos:line="46" pos:column="21">xinco</name><op:operator pos:line="46" pos:column="26">.</op:operator><name pos:line="46" pos:column="27">core</name><op:operator pos:line="46" pos:column="31">.</op:operator><name pos:line="46" pos:column="32">server</name></name>.*;</import>
<import pos:line="47" pos:column="1">import <name><name pos:line="47" pos:column="8">java</name><op:operator pos:line="47" pos:column="12">.</op:operator><name pos:line="47" pos:column="13">util</name><op:operator pos:line="47" pos:column="17">.</op:operator><name pos:line="47" pos:column="18">Locale</name></name>;</import>
<import pos:line="48" pos:column="1">import <name><name pos:line="48" pos:column="8">java</name><op:operator pos:line="48" pos:column="12">.</op:operator><name pos:line="48" pos:column="13">util</name><op:operator pos:line="48" pos:column="17">.</op:operator><name pos:line="48" pos:column="18">ResourceBundle</name></name>;</import>
<import pos:line="49" pos:column="1">import <name><name pos:line="49" pos:column="8">org</name><op:operator pos:line="49" pos:column="11">.</op:operator><name pos:line="49" pos:column="12">apache</name><op:operator pos:line="49" pos:column="18">.</op:operator><name pos:line="49" pos:column="19">axis</name><op:operator pos:line="49" pos:column="23">.</op:operator><name pos:line="49" pos:column="24">encoding</name><op:operator pos:line="49" pos:column="32">.</op:operator><name pos:line="49" pos:column="33">Base64</name></name>;</import>

<class><specifier pos:line="51" pos:column="1">public</specifier> class <name pos:line="51" pos:column="14">XincoPublisherServlet</name> <super><extends pos:line="51" pos:column="36">extends <name pos:line="51" pos:column="44">HttpServlet</name></extends></super> <block pos:line="51" pos:column="56">{

    <decl_stmt><decl><type><specifier pos:line="53" pos:column="5">private</specifier> <name pos:line="53" pos:column="13">XincoDBManager</name></type> <name pos:line="53" pos:column="28">DBM</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="54" pos:column="5">private</specifier> <name pos:line="54" pos:column="13">ResourceBundle</name></type> <name pos:line="54" pos:column="28">rb</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="55" pos:column="5">private</specifier> <name pos:line="55" pos:column="13">XincoConfigSingletonServer</name></type> <name pos:line="55" pos:column="40">config</name> <init pos:line="55" pos:column="47">= <expr><call><name><name pos:line="55" pos:column="49">XincoConfigSingletonServer</name><op:operator pos:line="55" pos:column="75">.</op:operator><name pos:line="55" pos:column="76">getInstance</name></name><argument_list pos:line="55" pos:column="87">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <comment type="block" format="javadoc" pos:line="57" pos:column="5">/** Initializes the servlet.
     * @param config
     * @throws javax.servlet.ServletException
     */</comment>
    <function><type><annotation pos:line="61" pos:column="5">@<name pos:line="61" pos:column="6">Override</name></annotation>
    <specifier pos:line="62" pos:column="5">public</specifier> <name pos:line="62" pos:column="12">void</name></type> <name pos:line="62" pos:column="17">init</name><parameter_list pos:line="62" pos:column="21">(<param><decl><type><name pos:line="62" pos:column="22">ServletConfig</name></type> <name pos:line="62" pos:column="36">config</name></decl></param>)</parameter_list> <throws pos:line="62" pos:column="44">throws <argument><expr><name pos:line="62" pos:column="51">ServletException</name></expr></argument></throws> <block pos:line="62" pos:column="68">{
        <expr_stmt><expr><call><name><name pos:line="63" pos:column="9">super</name><op:operator pos:line="63" pos:column="14">.</op:operator><name pos:line="63" pos:column="15">init</name></name><argument_list pos:line="63" pos:column="19">(<argument><expr><name pos:line="63" pos:column="20">config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="block" format="javadoc" pos:line="66" pos:column="5">/** Destroys the servlet.
     */</comment>
    <function><type><annotation pos:line="68" pos:column="5">@<name pos:line="68" pos:column="6">Override</name></annotation>
    <specifier pos:line="69" pos:column="5">public</specifier> <name pos:line="69" pos:column="12">void</name></type> <name pos:line="69" pos:column="17">destroy</name><parameter_list pos:line="69" pos:column="24">()</parameter_list> <block pos:line="69" pos:column="27">{
    }</block></function>

    <comment type="block" format="javadoc" pos:line="72" pos:column="5">/** Processes requests for both HTTP &lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;POST&lt;/code&gt; methods.
     * @param request servlet request
     * @param response servlet response
     * @throws javax.servlet.ServletException
     * @throws java.io.IOException
     */</comment>
    <function><type><specifier pos:line="78" pos:column="5">protected</specifier> <specifier pos:line="78" pos:column="15">synchronized</specifier> <name pos:line="78" pos:column="28">void</name></type> <name pos:line="78" pos:column="33">processRequest</name><parameter_list pos:line="78" pos:column="47">(<param><decl><type><name pos:line="78" pos:column="48">HttpServletRequest</name></type> <name pos:line="78" pos:column="67">request</name></decl></param>, <param><decl><type><name pos:line="78" pos:column="76">HttpServletResponse</name></type> <name pos:line="78" pos:column="96">response</name></decl></param>)</parameter_list>
            <throws pos:line="79" pos:column="13">throws <argument><expr><name pos:line="79" pos:column="20">ServletException</name></expr></argument>, <argument><expr><name pos:line="79" pos:column="38">IOException</name></expr></argument></throws> <block pos:line="79" pos:column="50">{
        <decl_stmt><decl><type><name pos:line="80" pos:column="9">Locale</name></type> <name pos:line="80" pos:column="16">loc</name> <init pos:line="80" pos:column="20">= <expr><lit:literal type="null" pos:line="80" pos:column="22">null</lit:literal></expr></init></decl>;</decl_stmt>
        <try pos:line="81" pos:column="9">try <block pos:line="81" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="82" pos:column="13">String</name></type> <name pos:line="82" pos:column="20">list</name> <init pos:line="82" pos:column="25">= <expr><call><name><name pos:line="82" pos:column="27">request</name><op:operator pos:line="82" pos:column="34">.</op:operator><name pos:line="82" pos:column="35">getParameter</name></name><argument_list pos:line="82" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="82" pos:column="48">"list"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="83" pos:column="13">String</name><index pos:line="83" pos:column="19">[]</index></type> <name pos:line="83" pos:column="22">locales</name></decl>;</decl_stmt>
            <expr_stmt><expr><name pos:line="84" pos:column="13">locales</name> <op:operator pos:line="84" pos:column="21">=</op:operator> <call><name><name pos:line="84" pos:column="23">list</name><op:operator pos:line="84" pos:column="27">.</op:operator><name pos:line="84" pos:column="28">split</name></name><argument_list pos:line="84" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="84" pos:column="34">"_"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <switch pos:line="85" pos:column="13">switch <condition pos:line="85" pos:column="20">(<expr><name><name pos:line="85" pos:column="21">locales</name><op:operator pos:line="85" pos:column="28">.</op:operator><name pos:line="85" pos:column="29">length</name></name></expr>)</condition> <block pos:line="85" pos:column="37">{
                <case pos:line="86" pos:column="17">case <expr><lit:literal type="number" pos:line="86" pos:column="22">1</lit:literal></expr>:
                    <expr_stmt><expr><name pos:line="87" pos:column="21">loc</name> <op:operator pos:line="87" pos:column="25">=</op:operator> <op:operator pos:line="87" pos:column="27">new</op:operator> <call><name pos:line="87" pos:column="31">Locale</name><argument_list pos:line="87" pos:column="37">(<argument><expr><name><name pos:line="87" pos:column="38">locales</name><index pos:line="87" pos:column="45">[<expr><lit:literal type="number" pos:line="87" pos:column="46">0</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <break pos:line="88" pos:column="21">break;</break>
                </case><case pos:line="89" pos:column="17">case <expr><lit:literal type="number" pos:line="89" pos:column="22">2</lit:literal></expr>:
                    <expr_stmt><expr><name pos:line="90" pos:column="21">loc</name> <op:operator pos:line="90" pos:column="25">=</op:operator> <op:operator pos:line="90" pos:column="27">new</op:operator> <call><name pos:line="90" pos:column="31">Locale</name><argument_list pos:line="90" pos:column="37">(<argument><expr><name><name pos:line="90" pos:column="38">locales</name><index pos:line="90" pos:column="45">[<expr><lit:literal type="number" pos:line="90" pos:column="46">0</lit:literal></expr>]</index></name></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="50">locales</name><index pos:line="90" pos:column="57">[<expr><lit:literal type="number" pos:line="90" pos:column="58">1</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <break pos:line="91" pos:column="21">break;</break>
                </case><case pos:line="92" pos:column="17">case <expr><lit:literal type="number" pos:line="92" pos:column="22">3</lit:literal></expr>:
                    <expr_stmt><expr><name pos:line="93" pos:column="21">loc</name> <op:operator pos:line="93" pos:column="25">=</op:operator> <op:operator pos:line="93" pos:column="27">new</op:operator> <call><name pos:line="93" pos:column="31">Locale</name><argument_list pos:line="93" pos:column="37">(<argument><expr><name><name pos:line="93" pos:column="38">locales</name><index pos:line="93" pos:column="45">[<expr><lit:literal type="number" pos:line="93" pos:column="46">0</lit:literal></expr>]</index></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="50">locales</name><index pos:line="93" pos:column="57">[<expr><lit:literal type="number" pos:line="93" pos:column="58">1</lit:literal></expr>]</index></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="62">locales</name><index pos:line="93" pos:column="69">[<expr><lit:literal type="number" pos:line="93" pos:column="70">2</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <break pos:line="94" pos:column="21">break;</break>
                </case><default pos:line="95" pos:column="17">default:
                    <expr_stmt><expr><name pos:line="96" pos:column="21">loc</name> <op:operator pos:line="96" pos:column="25">=</op:operator> <call><name><name pos:line="96" pos:column="27">Locale</name><op:operator pos:line="96" pos:column="33">.</op:operator><name pos:line="96" pos:column="34">getDefault</name></name><argument_list pos:line="96" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
            </default>}</block></switch>
        }</block> <catch pos:line="98" pos:column="11">catch <parameter_list pos:line="98" pos:column="17">(<param><decl><type><name pos:line="98" pos:column="18">Exception</name></type> <name pos:line="98" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="98" pos:column="31">{
            <expr_stmt><expr><name pos:line="99" pos:column="13">loc</name> <op:operator pos:line="99" pos:column="17">=</op:operator> <call><name><name pos:line="99" pos:column="19">Locale</name><op:operator pos:line="99" pos:column="25">.</op:operator><name pos:line="99" pos:column="26">getDefault</name></name><argument_list pos:line="99" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
        }</block></catch></try>
        <expr_stmt><expr><name pos:line="101" pos:column="9">rb</name> <op:operator pos:line="101" pos:column="12">=</op:operator> <call><name><name pos:line="101" pos:column="14">ResourceBundle</name><op:operator pos:line="101" pos:column="28">.</op:operator><name pos:line="101" pos:column="29">getBundle</name></name><argument_list pos:line="101" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="101" pos:column="39">"com.bluecubs.xinco.messages.XincoMessages"</lit:literal></expr></argument>, <argument><expr><name pos:line="101" pos:column="84">loc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name pos:line="102" pos:column="9">int</name></type> <name pos:line="102" pos:column="13">i</name> <init pos:line="102" pos:column="15">= <expr><lit:literal type="number" pos:line="102" pos:column="17">0</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="103" pos:column="9">int</name></type> <name pos:line="103" pos:column="13">j</name> <init pos:line="103" pos:column="15">= <expr><lit:literal type="number" pos:line="103" pos:column="17">0</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="104" pos:column="9">String</name></type> <name pos:line="104" pos:column="16">request_path</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="105" pos:column="9">String</name></type> <name><name pos:line="105" pos:column="16">request_path_array</name><index pos:line="105" pos:column="34">[]</index></name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="106" pos:column="9">boolean</name></type> <name pos:line="106" pos:column="17">fileDownload</name> <init pos:line="106" pos:column="30">= <expr><lit:literal type="boolean" pos:line="106" pos:column="32">false</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="107" pos:column="9">int</name></type> <name pos:line="107" pos:column="13">core_data_id</name> <init pos:line="107" pos:column="26">= <expr><lit:literal type="number" pos:line="107" pos:column="28">0</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="108" pos:column="9">XincoCoreDataServer</name></type> <name pos:line="108" pos:column="29">xcd</name> <init pos:line="108" pos:column="33">= <expr><lit:literal type="null" pos:line="108" pos:column="35">null</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="109" pos:column="9">XincoCoreDataTypeAttribute</name></type> <name pos:line="109" pos:column="36">xcdta</name> <init pos:line="109" pos:column="42">= <expr><lit:literal type="null" pos:line="109" pos:column="44">null</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="110" pos:column="9">XincoAddAttribute</name></type> <name pos:line="110" pos:column="27">xaa</name> <init pos:line="110" pos:column="31">= <expr><lit:literal type="null" pos:line="110" pos:column="33">null</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="111" pos:column="9">boolean</name></type> <name pos:line="111" pos:column="17">printList</name> <init pos:line="111" pos:column="27">= <expr><lit:literal type="boolean" pos:line="111" pos:column="29">false</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="112" pos:column="9">boolean</name></type> <name pos:line="112" pos:column="17">browseFolder</name> <init pos:line="112" pos:column="30">= <expr><lit:literal type="boolean" pos:line="112" pos:column="32">false</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="113" pos:column="9">String</name></type> <name pos:line="113" pos:column="16">temp_url</name> <init pos:line="113" pos:column="25">= <expr><lit:literal type="string" pos:line="113" pos:column="27">""</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="114" pos:column="9">String</name></type> <name pos:line="114" pos:column="16">temp_server_url</name> <init pos:line="114" pos:column="32">= <expr><lit:literal type="string" pos:line="114" pos:column="34">""</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="115" pos:column="9">boolean</name></type> <name pos:line="115" pos:column="17">isPublic</name> <init pos:line="115" pos:column="26">= <expr><lit:literal type="boolean" pos:line="115" pos:column="28">false</lit:literal></expr></init></decl>;</decl_stmt>

        <comment type="line" pos:line="117" pos:column="9">//connect to db</comment>
        <try pos:line="118" pos:column="9">try <block pos:line="118" pos:column="13">{
            <expr_stmt><expr><name pos:line="119" pos:column="13">DBM</name> <op:operator pos:line="119" pos:column="17">=</op:operator> <op:operator pos:line="119" pos:column="19">new</op:operator> <call><name pos:line="119" pos:column="23">XincoDBManager</name><argument_list pos:line="119" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
        }</block> <catch pos:line="120" pos:column="11">catch <parameter_list pos:line="120" pos:column="17">(<param><decl><type><name pos:line="120" pos:column="18">Exception</name></type> <name pos:line="120" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="120" pos:column="31">{
            <comment type="line" pos:line="121" pos:column="13">//start output</comment>
            <expr_stmt><expr><call><name><name pos:line="122" pos:column="13">response</name><op:operator pos:line="122" pos:column="21">.</op:operator><name pos:line="122" pos:column="22">setContentType</name></name><argument_list pos:line="122" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="122" pos:column="37">"text/html"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="123" pos:column="13">PrintWriter</name></type> <name pos:line="123" pos:column="25">out</name> <init pos:line="123" pos:column="29">= <expr><call><name><name pos:line="123" pos:column="31">response</name><op:operator pos:line="123" pos:column="39">.</op:operator><name pos:line="123" pos:column="40">getWriter</name></name><argument_list pos:line="123" pos:column="49">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="124" pos:column="13">out</name><op:operator pos:line="124" pos:column="16">.</op:operator><name pos:line="124" pos:column="17">println</name></name><argument_list pos:line="124" pos:column="24">(<argument><expr><call><name><name pos:line="124" pos:column="25">e</name><op:operator pos:line="124" pos:column="26">.</op:operator><name pos:line="124" pos:column="27">toString</name></name><argument_list pos:line="124" pos:column="35">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="125" pos:column="13">return;</return>
        }</block></catch></try>
        <comment type="line" pos:line="127" pos:column="9">//get requested data</comment>
        <if pos:line="128" pos:column="9">if <condition pos:line="128" pos:column="12">(<expr><call><name><name pos:line="128" pos:column="13">request</name><op:operator pos:line="128" pos:column="20">.</op:operator><name pos:line="128" pos:column="21">getParameter</name></name><argument_list pos:line="128" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="128" pos:column="34">"MainMenu"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="128" pos:column="46">==</op:operator> <lit:literal type="null" pos:line="128" pos:column="49">null</lit:literal></expr>)</condition><then pos:line="128" pos:column="54"> <block pos:line="128" pos:column="55">{
            <expr_stmt><expr><name pos:line="129" pos:column="13">request_path</name> <op:operator pos:line="129" pos:column="26">=</op:operator> <call><name><name pos:line="129" pos:column="28">request</name><op:operator pos:line="129" pos:column="35">.</op:operator><name pos:line="129" pos:column="36">getPathInfo</name></name><argument_list pos:line="129" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
            <if pos:line="130" pos:column="13">if <condition pos:line="130" pos:column="16">(<expr><name pos:line="130" pos:column="17">request_path</name> <op:operator pos:line="130" pos:column="30">!=</op:operator> <lit:literal type="null" pos:line="130" pos:column="33">null</lit:literal></expr>)</condition><then pos:line="130" pos:column="38"> <block pos:line="130" pos:column="39">{
                <expr_stmt><expr><name pos:line="131" pos:column="17">request_path_array</name> <op:operator pos:line="131" pos:column="36">=</op:operator> <call><name><name pos:line="131" pos:column="38">request_path</name><op:operator pos:line="131" pos:column="50">.</op:operator><name pos:line="131" pos:column="51">split</name></name><argument_list pos:line="131" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="131" pos:column="57">"/"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if pos:line="132" pos:column="17">if <condition pos:line="132" pos:column="20">(<expr><op:operator pos:line="132" pos:column="21">!</op:operator><op:operator pos:line="132" pos:column="22">(</op:operator><name><name pos:line="132" pos:column="23">request_path_array</name><op:operator pos:line="132" pos:column="41">.</op:operator><name pos:line="132" pos:column="42">length</name></name> <op:operator pos:line="132" pos:column="49">&gt;</op:operator> <lit:literal type="number" pos:line="132" pos:column="51">1</lit:literal><op:operator pos:line="132" pos:column="52">)</op:operator></expr>)</condition><then pos:line="132" pos:column="54"> <block pos:line="132" pos:column="55">{
                    <expr_stmt><expr><name pos:line="133" pos:column="21">core_data_id</name> <op:operator pos:line="133" pos:column="34">=</op:operator> <lit:literal type="number" pos:line="133" pos:column="36">0</lit:literal></expr>;</expr_stmt>
                }</block></then> <else pos:line="134" pos:column="19">else <block pos:line="134" pos:column="24">{
                    <try pos:line="135" pos:column="21">try <block pos:line="135" pos:column="25">{
                        <expr_stmt><expr><name pos:line="136" pos:column="25">core_data_id</name> <op:operator pos:line="136" pos:column="38">=</op:operator> <call><name><name pos:line="136" pos:column="40">Integer</name><op:operator pos:line="136" pos:column="47">.</op:operator><name pos:line="136" pos:column="48">parseInt</name></name><argument_list pos:line="136" pos:column="56">(<argument><expr><name><name pos:line="136" pos:column="57">request_path_array</name><index pos:line="136" pos:column="75">[<expr><lit:literal type="number" pos:line="136" pos:column="76">1</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><name pos:line="137" pos:column="25">xcd</name> <op:operator pos:line="137" pos:column="29">=</op:operator> <op:operator pos:line="137" pos:column="31">new</op:operator> <call><name pos:line="137" pos:column="35">XincoCoreDataServer</name><argument_list pos:line="137" pos:column="54">(<argument><expr><name pos:line="137" pos:column="55">core_data_id</name></expr></argument>, <argument><expr><name pos:line="137" pos:column="69">DBM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><name pos:line="138" pos:column="25">isPublic</name> <op:operator pos:line="138" pos:column="34">=</op:operator> <lit:literal type="boolean" pos:line="138" pos:column="36">false</lit:literal></expr>;</expr_stmt>
                        <comment type="line" pos:line="139" pos:column="25">//check status (5 = published)</comment>
                        <if pos:line="140" pos:column="25">if <condition pos:line="140" pos:column="28">(<expr><call><name><name pos:line="140" pos:column="29">xcd</name><op:operator pos:line="140" pos:column="32">.</op:operator><name pos:line="140" pos:column="33">getStatus_number</name></name><argument_list pos:line="140" pos:column="49">()</argument_list></call> <op:operator pos:line="140" pos:column="52">==</op:operator> <lit:literal type="number" pos:line="140" pos:column="55">5</lit:literal></expr>)</condition><then pos:line="140" pos:column="57"> <block pos:line="140" pos:column="58">{
                            <expr_stmt><expr><name pos:line="141" pos:column="29">isPublic</name> <op:operator pos:line="141" pos:column="38">=</op:operator> <lit:literal type="boolean" pos:line="141" pos:column="40">true</lit:literal></expr>;</expr_stmt>
                        }</block></then> <else pos:line="142" pos:column="27">else <block pos:line="142" pos:column="32">{
                            <comment type="line" pos:line="143" pos:column="29">//check read permission for group "public"</comment>
                            <for pos:line="144" pos:column="29">for (<init><expr><name pos:line="144" pos:column="34">i</name> <op:operator pos:line="144" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="144" pos:column="38">0</lit:literal></expr>;</init> <condition><expr><name pos:line="144" pos:column="41">i</name> <op:operator pos:line="144" pos:column="43">&lt;</op:operator> <call><name><name pos:line="144" pos:column="45">xcd</name><op:operator pos:line="144" pos:column="48">.</op:operator><name pos:line="144" pos:column="49">getXinco_core_acl</name></name><argument_list pos:line="144" pos:column="66">()</argument_list></call><op:operator pos:line="144" pos:column="68">.</op:operator><call><name pos:line="144" pos:column="69">size</name><argument_list pos:line="144" pos:column="73">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="144" pos:column="77">i</name><op:operator pos:line="144" pos:column="78">++</op:operator></expr></incr>) <block pos:line="144" pos:column="82">{
                                <if pos:line="145" pos:column="33">if <condition pos:line="145" pos:column="36">(<expr><op:operator pos:line="145" pos:column="37">(</op:operator><op:operator pos:line="145" pos:column="38">(</op:operator><op:operator pos:line="145" pos:column="39">(</op:operator><name pos:line="145" pos:column="40">XincoCoreACE</name><op:operator pos:line="145" pos:column="52">)</op:operator> <call><name><name pos:line="145" pos:column="54">xcd</name><op:operator pos:line="145" pos:column="57">.</op:operator><name pos:line="145" pos:column="58">getXinco_core_acl</name></name><argument_list pos:line="145" pos:column="75">()</argument_list></call><op:operator pos:line="145" pos:column="77">.</op:operator><call><name pos:line="145" pos:column="78">elementAt</name><argument_list pos:line="145" pos:column="87">(<argument><expr><name pos:line="145" pos:column="88">i</name></expr></argument>)</argument_list></call><op:operator pos:line="145" pos:column="90">)</op:operator><op:operator pos:line="145" pos:column="91">.</op:operator><call><name pos:line="145" pos:column="92">getXinco_core_group_id</name><argument_list pos:line="145" pos:column="114">()</argument_list></call> <op:operator pos:line="145" pos:column="117">==</op:operator> <lit:literal type="number" pos:line="145" pos:column="120">3</lit:literal><op:operator pos:line="145" pos:column="121">)</op:operator>
                                        <op:operator pos:line="146" pos:column="41">&amp;&amp;</op:operator> <op:operator pos:line="146" pos:column="44">(</op:operator><op:operator pos:line="146" pos:column="45">(</op:operator><name pos:line="146" pos:column="46">XincoCoreACE</name><op:operator pos:line="146" pos:column="58">)</op:operator> <call><name><name pos:line="146" pos:column="60">xcd</name><op:operator pos:line="146" pos:column="63">.</op:operator><name pos:line="146" pos:column="64">getXinco_core_acl</name></name><argument_list pos:line="146" pos:column="81">()</argument_list></call><op:operator pos:line="146" pos:column="83">.</op:operator><call><name pos:line="146" pos:column="84">elementAt</name><argument_list pos:line="146" pos:column="93">(<argument><expr><name pos:line="146" pos:column="94">i</name></expr></argument>)</argument_list></call><op:operator pos:line="146" pos:column="96">)</op:operator><op:operator pos:line="146" pos:column="97">.</op:operator><call><name pos:line="146" pos:column="98">isRead_permission</name><argument_list pos:line="146" pos:column="115">()</argument_list></call></expr>)</condition><then pos:line="146" pos:column="118"> <block pos:line="146" pos:column="119">{
                                    <expr_stmt><expr><name pos:line="147" pos:column="37">isPublic</name> <op:operator pos:line="147" pos:column="46">=</op:operator> <lit:literal type="boolean" pos:line="147" pos:column="48">true</lit:literal></expr>;</expr_stmt>
                                    <break pos:line="148" pos:column="37">break;</break>
                                }</block></then></if>
                            }</block></for>
                        }</block></else></if>
                        <if pos:line="152" pos:column="25">if <condition pos:line="152" pos:column="28">(<expr><op:operator pos:line="152" pos:column="29">!</op:operator><name pos:line="152" pos:column="30">isPublic</name></expr>)</condition><then pos:line="152" pos:column="39"> <block pos:line="152" pos:column="40">{
                            <expr_stmt><expr><name pos:line="153" pos:column="29">core_data_id</name> <op:operator pos:line="153" pos:column="42">=</op:operator> <op:operator pos:line="153" pos:column="44">-</op:operator><lit:literal type="number" pos:line="153" pos:column="45">1</lit:literal></expr>;</expr_stmt>
                        }</block></then></if>
                    }</block> <catch pos:line="155" pos:column="23">catch <parameter_list pos:line="155" pos:column="29">(<param><decl><type><name pos:line="155" pos:column="30">Exception</name></type> <name pos:line="155" pos:column="40">e</name></decl></param>)</parameter_list> <block pos:line="155" pos:column="43">{
                        <expr_stmt><expr><name pos:line="156" pos:column="25">core_data_id</name> <op:operator pos:line="156" pos:column="38">=</op:operator> <op:operator pos:line="156" pos:column="40">-</op:operator><lit:literal type="number" pos:line="156" pos:column="41">1</lit:literal></expr>;</expr_stmt>
                    }</block></catch></try>
                }</block></else></if>
            }</block></then> <else pos:line="159" pos:column="15">else <block pos:line="159" pos:column="20">{
                <expr_stmt><expr><name pos:line="160" pos:column="17">core_data_id</name> <op:operator pos:line="160" pos:column="30">=</op:operator> <lit:literal type="number" pos:line="160" pos:column="32">0</lit:literal></expr>;</expr_stmt>
            }</block></else></if>
        }</block></then> <else pos:line="162" pos:column="11">else <block pos:line="162" pos:column="16">{
            <expr_stmt><expr><name pos:line="163" pos:column="13">core_data_id</name> <op:operator pos:line="163" pos:column="26">=</op:operator> <lit:literal type="number" pos:line="163" pos:column="28">0</lit:literal></expr>;</expr_stmt>
            <if pos:line="164" pos:column="13">if <condition pos:line="164" pos:column="16">(<expr><call><name><name pos:line="164" pos:column="17">request</name><op:operator pos:line="164" pos:column="24">.</op:operator><name pos:line="164" pos:column="25">getParameter</name></name><argument_list pos:line="164" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="164" pos:column="38">"MainMenu"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="164" pos:column="49">.</op:operator><call><name pos:line="164" pos:column="50">compareTo</name><argument_list pos:line="164" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="164" pos:column="60">"list"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="164" pos:column="68">==</op:operator> <lit:literal type="number" pos:line="164" pos:column="71">0</lit:literal></expr>)</condition><then pos:line="164" pos:column="73"> <block pos:line="164" pos:column="74">{
                <expr_stmt><expr><name pos:line="165" pos:column="17">printList</name> <op:operator pos:line="165" pos:column="27">=</op:operator> <lit:literal type="boolean" pos:line="165" pos:column="29">true</lit:literal></expr>;</expr_stmt>
            }</block></then> <else pos:line="166" pos:column="15">else <if pos:line="166" pos:column="20">if <condition pos:line="166" pos:column="23">(<expr><op:operator pos:line="166" pos:column="24">(</op:operator><call><name><name pos:line="166" pos:column="25">request</name><op:operator pos:line="166" pos:column="32">.</op:operator><name pos:line="166" pos:column="33">getParameter</name></name><argument_list pos:line="166" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="166" pos:column="46">"MainMenu"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="166" pos:column="57">.</op:operator><call><name pos:line="166" pos:column="58">compareTo</name><argument_list pos:line="166" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="166" pos:column="68">"browse"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="166" pos:column="78">==</op:operator> <lit:literal type="number" pos:line="166" pos:column="81">0</lit:literal><op:operator pos:line="166" pos:column="82">)</op:operator></expr>)</condition><then pos:line="166" pos:column="84"> <block pos:line="166" pos:column="85">{
                <expr_stmt><expr><name pos:line="167" pos:column="17">browseFolder</name> <op:operator pos:line="167" pos:column="30">=</op:operator> <lit:literal type="boolean" pos:line="167" pos:column="32">true</lit:literal></expr>;</expr_stmt>
            }</block></then></if></else></if>
        }</block></else></if>
        <comment type="line" pos:line="170" pos:column="9">//check data type</comment>
        <if pos:line="171" pos:column="9">if <condition pos:line="171" pos:column="12">(<expr><name pos:line="171" pos:column="13">core_data_id</name> <op:operator pos:line="171" pos:column="26">&gt;</op:operator> <lit:literal type="number" pos:line="171" pos:column="28">0</lit:literal></expr>)</condition><then pos:line="171" pos:column="30"> <block pos:line="171" pos:column="31">{
            <if pos:line="172" pos:column="13">if <condition pos:line="172" pos:column="16">(<expr><call><name><name pos:line="172" pos:column="17">xcd</name><op:operator pos:line="172" pos:column="20">.</op:operator><name pos:line="172" pos:column="21">getXinco_core_data_type</name></name><argument_list pos:line="172" pos:column="44">()</argument_list></call><op:operator pos:line="172" pos:column="46">.</op:operator><call><name pos:line="172" pos:column="47">getId</name><argument_list pos:line="172" pos:column="52">()</argument_list></call> <op:operator pos:line="172" pos:column="55">==</op:operator> <lit:literal type="number" pos:line="172" pos:column="58">1</lit:literal></expr>)</condition><then pos:line="172" pos:column="60"> <block pos:line="172" pos:column="61">{
                <expr_stmt><expr><name pos:line="173" pos:column="17">fileDownload</name> <op:operator pos:line="173" pos:column="30">=</op:operator> <lit:literal type="boolean" pos:line="173" pos:column="32">true</lit:literal></expr>;</expr_stmt>
            }</block></then> <else pos:line="174" pos:column="15">else <block pos:line="174" pos:column="20">{
                <expr_stmt><expr><name pos:line="175" pos:column="17">fileDownload</name> <op:operator pos:line="175" pos:column="30">=</op:operator> <lit:literal type="boolean" pos:line="175" pos:column="32">false</lit:literal></expr>;</expr_stmt>
            }</block></else></if>
        }</block></then></if>

        <comment type="line" pos:line="179" pos:column="9">//generate specific output</comment>
        <if pos:line="180" pos:column="9">if <condition pos:line="180" pos:column="12">(<expr><name pos:line="180" pos:column="13">fileDownload</name></expr>)</condition><then pos:line="180" pos:column="26"> <block pos:line="180" pos:column="27">{ <comment type="line" pos:line="180" pos:column="29">// begin FILE output</comment>
            <try pos:line="181" pos:column="13">try <block pos:line="181" pos:column="17">{
                <expr_stmt><expr><call><name><name pos:line="182" pos:column="17">response</name><op:operator pos:line="182" pos:column="25">.</op:operator><name pos:line="182" pos:column="26">setContentType</name></name><argument_list pos:line="182" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="182" pos:column="41">"unknown/unknown"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name pos:line="183" pos:column="17">OutputStream</name></type> <name pos:line="183" pos:column="30">out</name> <init pos:line="183" pos:column="34">= <expr><call><name><name pos:line="183" pos:column="36">response</name><op:operator pos:line="183" pos:column="44">.</op:operator><name pos:line="183" pos:column="45">getOutputStream</name></name><argument_list pos:line="183" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="184" pos:column="17">FileInputStream</name></type> <name pos:line="184" pos:column="33">in</name> <init pos:line="184" pos:column="36">= <expr><op:operator pos:line="184" pos:column="38">new</op:operator> <call><name pos:line="184" pos:column="42">FileInputStream</name><argument_list pos:line="184" pos:column="57">(<argument><expr><call><name><name pos:line="184" pos:column="58">XincoCoreDataServer</name><op:operator pos:line="184" pos:column="77">.</op:operator><name pos:line="184" pos:column="78">getLastMajorVersionDataPath</name></name><argument_list pos:line="184" pos:column="105">(<argument><expr><name pos:line="184" pos:column="106">core_data_id</name></expr></argument>, <argument><expr><name pos:line="184" pos:column="120">DBM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="185" pos:column="17">byte</name><index pos:line="185" pos:column="21">[]</index></type> <name pos:line="185" pos:column="24">buf</name> <init pos:line="185" pos:column="28">= <expr><op:operator pos:line="185" pos:column="30">new</op:operator> <name><name pos:line="185" pos:column="34">byte</name><index pos:line="185" pos:column="38">[<expr><lit:literal type="number" pos:line="185" pos:column="39">4096</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="186" pos:column="17">int</name></type> <name pos:line="186" pos:column="21">len</name></decl>;</decl_stmt>
                <while pos:line="187" pos:column="17">while <condition pos:line="187" pos:column="23">(<expr><op:operator pos:line="187" pos:column="24">(</op:operator><name pos:line="187" pos:column="25">len</name> <op:operator pos:line="187" pos:column="29">=</op:operator> <call><name><name pos:line="187" pos:column="31">in</name><op:operator pos:line="187" pos:column="33">.</op:operator><name pos:line="187" pos:column="34">read</name></name><argument_list pos:line="187" pos:column="38">(<argument><expr><name pos:line="187" pos:column="39">buf</name></expr></argument>)</argument_list></call><op:operator pos:line="187" pos:column="43">)</op:operator> <op:operator pos:line="187" pos:column="45">&gt;</op:operator> <lit:literal type="number" pos:line="187" pos:column="47">0</lit:literal></expr>)</condition> <block pos:line="187" pos:column="50">{
                    <expr_stmt><expr><call><name><name pos:line="188" pos:column="21">out</name><op:operator pos:line="188" pos:column="24">.</op:operator><name pos:line="188" pos:column="25">write</name></name><argument_list pos:line="188" pos:column="30">(<argument><expr><name pos:line="188" pos:column="31">buf</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="188" pos:column="36">0</lit:literal></expr></argument>, <argument><expr><name pos:line="188" pos:column="39">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></while>
                <expr_stmt><expr><call><name><name pos:line="190" pos:column="17">in</name><op:operator pos:line="190" pos:column="19">.</op:operator><name pos:line="190" pos:column="20">close</name></name><argument_list pos:line="190" pos:column="25">()</argument_list></call></expr>;</expr_stmt>
            }</block> <catch pos:line="191" pos:column="15">catch <parameter_list pos:line="191" pos:column="21">(<param><decl><type><name pos:line="191" pos:column="22">Exception</name></type> <name pos:line="191" pos:column="32">e</name></decl></param>)</parameter_list> <block pos:line="191" pos:column="35">{
                <decl_stmt><decl><type><name pos:line="192" pos:column="17">PrintWriter</name></type> <name pos:line="192" pos:column="29">out</name> <init pos:line="192" pos:column="33">= <expr><call><name><name pos:line="192" pos:column="35">response</name><op:operator pos:line="192" pos:column="43">.</op:operator><name pos:line="192" pos:column="44">getWriter</name></name><argument_list pos:line="192" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="193" pos:column="17">out</name><op:operator pos:line="193" pos:column="20">.</op:operator><name pos:line="193" pos:column="21">println</name></name><argument_list pos:line="193" pos:column="28">(<argument><expr><name pos:line="193" pos:column="29">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
            <comment type="line" pos:line="195" pos:column="13">//end FILE output</comment>

        }</block></then> <else pos:line="197" pos:column="11">else <block pos:line="197" pos:column="16">{
            <comment type="line" pos:line="198" pos:column="13">// begin HTML output</comment>

            <comment type="line" pos:line="200" pos:column="13">//start output</comment>
            <expr_stmt><expr><call><name><name pos:line="201" pos:column="13">response</name><op:operator pos:line="201" pos:column="21">.</op:operator><name pos:line="201" pos:column="22">setContentType</name></name><argument_list pos:line="201" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="201" pos:column="37">"text/html"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="202" pos:column="13">PrintWriter</name></type> <name pos:line="202" pos:column="25">out</name> <init pos:line="202" pos:column="29">= <expr><call><name><name pos:line="202" pos:column="31">response</name><op:operator pos:line="202" pos:column="39">.</op:operator><name pos:line="202" pos:column="40">getWriter</name></name><argument_list pos:line="202" pos:column="49">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:line="204" pos:column="13">//show header</comment>
            <expr_stmt><expr><call><name><name pos:line="205" pos:column="13">out</name><op:operator pos:line="205" pos:column="16">.</op:operator><name pos:line="205" pos:column="17">println</name></name><argument_list pos:line="205" pos:column="24">(<argument><expr><lit:literal type="string" pos:line="205" pos:column="25">"&lt;html&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="206" pos:column="13">out</name><op:operator pos:line="206" pos:column="16">.</op:operator><name pos:line="206" pos:column="17">println</name></name><argument_list pos:line="206" pos:column="24">(<argument><expr><lit:literal type="string" pos:line="206" pos:column="25">"&lt;head&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if pos:line="207" pos:column="13">if <condition pos:line="207" pos:column="16">(<expr><name pos:line="207" pos:column="17">core_data_id</name> <op:operator pos:line="207" pos:column="30">==</op:operator> <lit:literal type="number" pos:line="207" pos:column="33">0</lit:literal></expr>)</condition><then pos:line="207" pos:column="35"> <block pos:line="207" pos:column="36">{
                <expr_stmt><expr><call><name><name pos:line="208" pos:column="17">out</name><op:operator pos:line="208" pos:column="20">.</op:operator><name pos:line="208" pos:column="21">println</name></name><argument_list pos:line="208" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="208" pos:column="29">"&lt;title&gt;XincoPublisher&lt;/title&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="209" pos:column="17">out</name><op:operator pos:line="209" pos:column="20">.</op:operator><name pos:line="209" pos:column="21">println</name></name><argument_list pos:line="209" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="209" pos:column="29">"&lt;link rel=\"stylesheet\" href=\"xincostyle.css\" type=\"text/css\"/&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <if pos:line="211" pos:column="13">if <condition pos:line="211" pos:column="16">(<expr><name pos:line="211" pos:column="17">core_data_id</name> <op:operator pos:line="211" pos:column="30">&gt;</op:operator> <lit:literal type="number" pos:line="211" pos:column="32">0</lit:literal></expr>)</condition><then pos:line="211" pos:column="34"> <block pos:line="211" pos:column="35">{
                <expr_stmt><expr><call><name><name pos:line="212" pos:column="17">out</name><op:operator pos:line="212" pos:column="20">.</op:operator><name pos:line="212" pos:column="21">println</name></name><argument_list pos:line="212" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="212" pos:column="29">"&lt;title&gt;"</lit:literal> <op:operator pos:line="212" pos:column="39">+</op:operator> <call><name><name pos:line="212" pos:column="41">xcd</name><op:operator pos:line="212" pos:column="44">.</op:operator><name pos:line="212" pos:column="45">getDesignation</name></name><argument_list pos:line="212" pos:column="59">()</argument_list></call> <op:operator pos:line="212" pos:column="62">+</op:operator> <lit:literal type="string" pos:line="212" pos:column="64">"&lt;/title&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="213" pos:column="17">out</name><op:operator pos:line="213" pos:column="20">.</op:operator><name pos:line="213" pos:column="21">println</name></name><argument_list pos:line="213" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="213" pos:column="29">"&lt;link rel=\"stylesheet\" href=\"../../xincostyle.css\" type=\"text/css\"/&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <expr_stmt><expr><call><name><name pos:line="215" pos:column="13">out</name><op:operator pos:line="215" pos:column="16">.</op:operator><name pos:line="215" pos:column="17">println</name></name><argument_list pos:line="215" pos:column="24">(<argument><expr><lit:literal type="string" pos:line="215" pos:column="25">"&lt;link rel='shortcut icon' href='resources/images/favicon.ico' type='image/x-icon'&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="216" pos:column="13">out</name><op:operator pos:line="216" pos:column="16">.</op:operator><name pos:line="216" pos:column="17">println</name></name><argument_list pos:line="216" pos:column="24">(<argument><expr><lit:literal type="string" pos:line="216" pos:column="25">"&lt;link rel='icon' href='resources/images/favicon.ico' type='image/x-icon'&gt; "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="217" pos:column="13">out</name><op:operator pos:line="217" pos:column="16">.</op:operator><name pos:line="217" pos:column="17">println</name></name><argument_list pos:line="217" pos:column="24">(<argument><expr><lit:literal type="string" pos:line="217" pos:column="25">"&lt;/head&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="218" pos:column="13">out</name><op:operator pos:line="218" pos:column="16">.</op:operator><name pos:line="218" pos:column="17">println</name></name><argument_list pos:line="218" pos:column="24">(<argument><expr><lit:literal type="string" pos:line="218" pos:column="25">"&lt;body "</lit:literal> <op:operator pos:line="218" pos:column="34">+</op:operator> <op:operator pos:line="218" pos:column="36">(</op:operator><op:operator pos:line="218" pos:column="37">!</op:operator><call><name><name pos:line="218" pos:column="38">DBM</name><op:operator pos:line="218" pos:column="41">.</op:operator><name pos:line="218" pos:column="42">config</name><op:operator pos:line="218" pos:column="48">.</op:operator><name pos:line="218" pos:column="49">isAllowOutsideLinks</name></name><argument_list pos:line="218" pos:column="68">()</argument_list></call> <op:operator pos:line="218" pos:column="71">?</op:operator> <lit:literal type="string" pos:line="218" pos:column="73">"oncontextmenu='return false;' "</lit:literal> <op:operator pos:line="218" pos:column="106">:</op:operator> <lit:literal type="string" pos:line="218" pos:column="108">" "</lit:literal><op:operator pos:line="218" pos:column="111">)</op:operator> <op:operator pos:line="218" pos:column="113">+</op:operator> <lit:literal type="string" pos:line="218" pos:column="115">"&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="219" pos:column="13">out</name><op:operator pos:line="219" pos:column="16">.</op:operator><name pos:line="219" pos:column="17">println</name></name><argument_list pos:line="219" pos:column="24">(<argument><expr><lit:literal type="string" pos:line="219" pos:column="25">"&lt;center&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="220" pos:column="13">out</name><op:operator pos:line="220" pos:column="16">.</op:operator><name pos:line="220" pos:column="17">println</name></name><argument_list pos:line="220" pos:column="24">(<argument><expr><lit:literal type="string" pos:line="220" pos:column="25">"&lt;span class=\"text\"&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="222" pos:column="13">out</name><op:operator pos:line="222" pos:column="16">.</op:operator><name pos:line="222" pos:column="17">println</name></name><argument_list pos:line="222" pos:column="24">(<argument><expr><lit:literal type="string" pos:line="222" pos:column="25">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:line="224" pos:column="13">//show main menu</comment>
            <if pos:line="225" pos:column="13">if <condition pos:line="225" pos:column="16">(<expr><name pos:line="225" pos:column="17">core_data_id</name> <op:operator pos:line="225" pos:column="30">==</op:operator> <lit:literal type="number" pos:line="225" pos:column="33">0</lit:literal></expr>)</condition><then pos:line="225" pos:column="35"> <block pos:line="225" pos:column="36">{
                <expr_stmt><expr><call><name><name pos:line="226" pos:column="17">out</name><op:operator pos:line="226" pos:column="20">.</op:operator><name pos:line="226" pos:column="21">println</name></name><argument_list pos:line="226" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="226" pos:column="29">"&lt;br&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="227" pos:column="17">out</name><op:operator pos:line="227" pos:column="20">.</op:operator><name pos:line="227" pos:column="21">println</name></name><argument_list pos:line="227" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="227" pos:column="29">"&lt;table border=\"0\" width=\"750\" cellspacing=\"10\" cellpadding=\"0\"&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="228" pos:column="17">out</name><op:operator pos:line="228" pos:column="20">.</op:operator><name pos:line="228" pos:column="21">println</name></name><argument_list pos:line="228" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="228" pos:column="29">"&lt;tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="229" pos:column="17">out</name><op:operator pos:line="229" pos:column="20">.</op:operator><name pos:line="229" pos:column="21">println</name></name><argument_list pos:line="229" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="229" pos:column="29">"&lt;td class=\"text\" width=\"100\"&gt;&lt;img src='resources/images/blueCubsSmall.gif' border=\"0\"/&gt;&lt;/td&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="230" pos:column="17">out</name><op:operator pos:line="230" pos:column="20">.</op:operator><name pos:line="230" pos:column="21">println</name></name><argument_list pos:line="230" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="230" pos:column="29">"&lt;td class=\"bigtext\" width=\"650\"&gt;"</lit:literal> <op:operator pos:line="230" pos:column="68">+</op:operator> <call><name><name pos:line="230" pos:column="70">rb</name><op:operator pos:line="230" pos:column="72">.</op:operator><name pos:line="230" pos:column="73">getString</name></name><argument_list pos:line="230" pos:column="82">(<argument><expr><lit:literal type="string" pos:line="230" pos:column="83">"message.admin.main.publisher.label"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="230" pos:column="121">+</op:operator> <lit:literal type="string" pos:line="230" pos:column="123">"&lt;/td&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="231" pos:column="17">out</name><op:operator pos:line="231" pos:column="20">.</op:operator><name pos:line="231" pos:column="21">println</name></name><argument_list pos:line="231" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="231" pos:column="29">"&lt;/tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="232" pos:column="17">out</name><op:operator pos:line="232" pos:column="20">.</op:operator><name pos:line="232" pos:column="21">println</name></name><argument_list pos:line="232" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="232" pos:column="29">"&lt;/table&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="233" pos:column="17">out</name><op:operator pos:line="233" pos:column="20">.</op:operator><name pos:line="233" pos:column="21">println</name></name><argument_list pos:line="233" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="233" pos:column="29">"&lt;br&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="234" pos:column="17">out</name><op:operator pos:line="234" pos:column="20">.</op:operator><name pos:line="234" pos:column="21">println</name></name><argument_list pos:line="234" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="234" pos:column="29">"&lt;table border=\"0\" cellspacing=\"10\" cellpadding=\"0\"&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if pos:line="235" pos:column="17">if <condition pos:line="235" pos:column="20">(<expr><name pos:line="235" pos:column="21">printList</name></expr>)</condition><then pos:line="235" pos:column="31"> <block pos:line="235" pos:column="32">{
                    <try pos:line="236" pos:column="21">try <block pos:line="236" pos:column="25">{
                        <decl_stmt><decl><type><name pos:line="237" pos:column="25">XincoCoreDataServer</name></type> <name pos:line="237" pos:column="45">xdata_temp</name> <init pos:line="237" pos:column="56">= <expr><lit:literal type="null" pos:line="237" pos:column="58">null</lit:literal></expr></init></decl>;</decl_stmt>
                        <decl_stmt><decl><type><name pos:line="238" pos:column="25">Statement</name></type> <name pos:line="238" pos:column="35">stmt</name> <init pos:line="238" pos:column="40">= <expr><call><name><name pos:line="238" pos:column="42">DBM</name><op:operator pos:line="238" pos:column="45">.</op:operator><name pos:line="238" pos:column="46">con</name><op:operator pos:line="238" pos:column="49">.</op:operator><name pos:line="238" pos:column="50">createStatement</name></name><argument_list pos:line="238" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>
                        <comment type="line" pos:line="239" pos:column="25">//Only display data with at least one major version</comment>
                        <decl_stmt><decl><type><name pos:line="240" pos:column="25">ResultSet</name></type> <name pos:line="240" pos:column="35">rs</name> <init pos:line="240" pos:column="38">= <expr><call><name><name pos:line="240" pos:column="40">stmt</name><op:operator pos:line="240" pos:column="44">.</op:operator><name pos:line="240" pos:column="45">executeQuery</name></name><argument_list pos:line="240" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="240" pos:column="58">"SELECT DISTINCT xcd.id, xcd.designation "</lit:literal>
                                <op:operator pos:line="241" pos:column="33">+</op:operator> <lit:literal type="string" pos:line="241" pos:column="35">"FROM xinco_core_data xcd, xinco_core_ace xca, xinco_core_log xcl WHERE xcd.id=xca.xinco_core_data_id AND "</lit:literal>
                                <op:operator pos:line="242" pos:column="33">+</op:operator> <lit:literal type="string" pos:line="242" pos:column="35">"xcd.id=xcl.xinco_core_data_id AND(xcd.status_number=5 OR (xca.xinco_core_group_id=3 AND xca.read_permission=1)) "</lit:literal>
                                <op:operator pos:line="243" pos:column="33">+</op:operator> <lit:literal type="string" pos:line="243" pos:column="35">" and xcl.version_mid='0' ORDER BY xcd.designation"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                        <while pos:line="244" pos:column="25">while <condition pos:line="244" pos:column="31">(<expr><call><name><name pos:line="244" pos:column="32">rs</name><op:operator pos:line="244" pos:column="34">.</op:operator><name pos:line="244" pos:column="35">next</name></name><argument_list pos:line="244" pos:column="39">()</argument_list></call></expr>)</condition> <block pos:line="244" pos:column="43">{
                            <expr_stmt><expr><name pos:line="245" pos:column="29">xdata_temp</name> <op:operator pos:line="245" pos:column="40">=</op:operator> <op:operator pos:line="245" pos:column="42">new</op:operator> <call><name pos:line="245" pos:column="46">XincoCoreDataServer</name><argument_list pos:line="245" pos:column="65">(<argument><expr><call><name><name pos:line="245" pos:column="66">rs</name><op:operator pos:line="245" pos:column="68">.</op:operator><name pos:line="245" pos:column="69">getInt</name></name><argument_list pos:line="245" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="245" pos:column="76">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="245" pos:column="83">DBM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><name pos:line="246" pos:column="29">temp_server_url</name> <op:operator pos:line="246" pos:column="45">=</op:operator> <call><name><name pos:line="246" pos:column="47">request</name><op:operator pos:line="246" pos:column="54">.</op:operator><name pos:line="246" pos:column="55">getRequestURL</name></name><argument_list pos:line="246" pos:column="68">()</argument_list></call><op:operator pos:line="246" pos:column="70">.</op:operator><call><name pos:line="246" pos:column="71">toString</name><argument_list pos:line="246" pos:column="79">()</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><name pos:line="247" pos:column="29">temp_url</name> <op:operator pos:line="247" pos:column="38">=</op:operator> <lit:literal type="string" pos:line="247" pos:column="40">""</lit:literal></expr>;</expr_stmt>
                            <comment type="line" pos:line="248" pos:column="29">//file = 1</comment>
                            <if pos:line="249" pos:column="29">if <condition pos:line="249" pos:column="32">(<expr><call><name><name pos:line="249" pos:column="33">xdata_temp</name><op:operator pos:line="249" pos:column="43">.</op:operator><name pos:line="249" pos:column="44">getXinco_core_data_type</name></name><argument_list pos:line="249" pos:column="67">()</argument_list></call><op:operator pos:line="249" pos:column="69">.</op:operator><call><name pos:line="249" pos:column="70">getId</name><argument_list pos:line="249" pos:column="75">()</argument_list></call> <op:operator pos:line="249" pos:column="78">==</op:operator> <lit:literal type="number" pos:line="249" pos:column="81">1</lit:literal></expr>)</condition><then pos:line="249" pos:column="83"> <block pos:line="249" pos:column="84">{
                                <expr_stmt><expr><name pos:line="250" pos:column="33">temp_url</name> <op:operator pos:line="250" pos:column="42">=</op:operator> <op:operator pos:line="250" pos:column="44">(</op:operator><op:operator pos:line="250" pos:column="45">(</op:operator><name pos:line="250" pos:column="46">XincoAddAttribute</name><op:operator pos:line="250" pos:column="63">)</op:operator> <call><name><name pos:line="250" pos:column="65">xdata_temp</name><op:operator pos:line="250" pos:column="75">.</op:operator><name pos:line="250" pos:column="76">getXinco_add_attributes</name></name><argument_list pos:line="250" pos:column="99">()</argument_list></call><op:operator pos:line="250" pos:column="101">.</op:operator><call><name pos:line="250" pos:column="102">elementAt</name><argument_list pos:line="250" pos:column="111">(<argument><expr><lit:literal type="number" pos:line="250" pos:column="112">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="250" pos:column="114">)</op:operator><op:operator pos:line="250" pos:column="115">.</op:operator><call><name pos:line="250" pos:column="116">getAttrib_varchar</name><argument_list pos:line="250" pos:column="133">()</argument_list></call></expr>;</expr_stmt>
                            }</block></then> <else pos:line="251" pos:column="31">else <block pos:line="251" pos:column="36">{
                                <expr_stmt><expr><name pos:line="252" pos:column="33">temp_url</name> <op:operator pos:line="252" pos:column="42">=</op:operator> <call><name><name pos:line="252" pos:column="44">xdata_temp</name><op:operator pos:line="252" pos:column="54">.</op:operator><name pos:line="252" pos:column="55">getDesignation</name></name><argument_list pos:line="252" pos:column="69">()</argument_list></call></expr>;</expr_stmt>
                            }</block></else></if>
                            <expr_stmt><expr><call><name><name pos:line="254" pos:column="29">out</name><op:operator pos:line="254" pos:column="32">.</op:operator><name pos:line="254" pos:column="33">println</name></name><argument_list pos:line="254" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="254" pos:column="41">"&lt;tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name><name pos:line="255" pos:column="29">out</name><op:operator pos:line="255" pos:column="32">.</op:operator><name pos:line="255" pos:column="33">println</name></name><argument_list pos:line="255" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="255" pos:column="41">"&lt;td class=\"text\"&gt;"</lit:literal> <op:operator pos:line="255" pos:column="63">+</op:operator> <call><name><name pos:line="255" pos:column="65">xdata_temp</name><op:operator pos:line="255" pos:column="75">.</op:operator><name pos:line="255" pos:column="76">getDesignation</name></name><argument_list pos:line="255" pos:column="90">()</argument_list></call>
                                    <op:operator pos:line="256" pos:column="37">+</op:operator> <lit:literal type="string" pos:line="256" pos:column="39">" ("</lit:literal> <op:operator pos:line="256" pos:column="44">+</op:operator> <op:operator pos:line="256" pos:column="46">(</op:operator><call><name><name pos:line="256" pos:column="47">rb</name><op:operator pos:line="256" pos:column="49">.</op:operator><name pos:line="256" pos:column="50">containsKey</name></name><argument_list pos:line="256" pos:column="61">(<argument><expr><call><name><name pos:line="256" pos:column="62">xdata_temp</name><op:operator pos:line="256" pos:column="72">.</op:operator><name pos:line="256" pos:column="73">getXinco_core_data_type</name></name><argument_list pos:line="256" pos:column="96">()</argument_list></call><op:operator pos:line="256" pos:column="98">.</op:operator><call><name pos:line="256" pos:column="99">getDesignation</name><argument_list pos:line="256" pos:column="113">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="256" pos:column="117">?</op:operator>
                                        <call><name><name pos:line="257" pos:column="41">rb</name><op:operator pos:line="257" pos:column="43">.</op:operator><name pos:line="257" pos:column="44">getString</name></name><argument_list pos:line="257" pos:column="53">(<argument><expr><call><name><name pos:line="257" pos:column="54">xdata_temp</name><op:operator pos:line="257" pos:column="64">.</op:operator><name pos:line="257" pos:column="65">getXinco_core_data_type</name></name><argument_list pos:line="257" pos:column="88">()</argument_list></call><op:operator pos:line="257" pos:column="90">.</op:operator><call><name pos:line="257" pos:column="91">getDesignation</name><argument_list pos:line="257" pos:column="105">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="257" pos:column="109">:</op:operator>
                                        <call><name><name pos:line="258" pos:column="41">xdata_temp</name><op:operator pos:line="258" pos:column="51">.</op:operator><name pos:line="258" pos:column="52">getXinco_core_data_type</name></name><argument_list pos:line="258" pos:column="75">()</argument_list></call><op:operator pos:line="258" pos:column="77">.</op:operator><call><name pos:line="258" pos:column="78">getDesignation</name><argument_list pos:line="258" pos:column="92">()</argument_list></call><op:operator pos:line="258" pos:column="94">)</op:operator> <op:operator pos:line="258" pos:column="96">+</op:operator> <lit:literal type="string" pos:line="258" pos:column="98">" | "</lit:literal>
                                    <op:operator pos:line="259" pos:column="37">+</op:operator> <call><name><name pos:line="259" pos:column="39">xdata_temp</name><op:operator pos:line="259" pos:column="49">.</op:operator><name pos:line="259" pos:column="50">getXinco_core_language</name></name><argument_list pos:line="259" pos:column="72">()</argument_list></call><op:operator pos:line="259" pos:column="74">.</op:operator><call><name pos:line="259" pos:column="75">getSign</name><argument_list pos:line="259" pos:column="82">()</argument_list></call> <op:operator pos:line="259" pos:column="85">+</op:operator> <lit:literal type="string" pos:line="259" pos:column="87">")"</lit:literal> <op:operator pos:line="259" pos:column="91">+</op:operator> <lit:literal type="string" pos:line="259" pos:column="93">"&lt;/td&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name><name pos:line="260" pos:column="29">out</name><op:operator pos:line="260" pos:column="32">.</op:operator><name pos:line="260" pos:column="33">println</name></name><argument_list pos:line="260" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="260" pos:column="41">"&lt;td class=\"text\"&gt;&lt;a href=\""</lit:literal> <op:operator pos:line="260" pos:column="73">+</op:operator> <lit:literal type="string" pos:line="260" pos:column="75">"XincoPublisher/"</lit:literal> <op:operator pos:line="260" pos:column="93">+</op:operator> <call><name><name pos:line="260" pos:column="95">xdata_temp</name><op:operator pos:line="260" pos:column="105">.</op:operator><name pos:line="260" pos:column="106">getId</name></name><argument_list pos:line="260" pos:column="111">()</argument_list></call>
                                    <op:operator pos:line="261" pos:column="37">+</op:operator> <lit:literal type="string" pos:line="261" pos:column="39">"/"</lit:literal> <op:operator pos:line="261" pos:column="43">+</op:operator> <name pos:line="261" pos:column="45">temp_url</name> <op:operator pos:line="261" pos:column="54">+</op:operator> <lit:literal type="string" pos:line="261" pos:column="56">"?list="</lit:literal> <op:operator pos:line="261" pos:column="65">+</op:operator> <call><name><name pos:line="261" pos:column="67">request</name><op:operator pos:line="261" pos:column="74">.</op:operator><name pos:line="261" pos:column="75">getParameter</name></name><argument_list pos:line="261" pos:column="87">(<argument><expr><lit:literal type="string" pos:line="261" pos:column="88">"list"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="261" pos:column="96">+</op:operator> <lit:literal type="string" pos:line="261" pos:column="98">"\" target=\"_blank\"&gt;"</lit:literal>
                                    <op:operator pos:line="262" pos:column="37">+</op:operator> <name pos:line="262" pos:column="39">temp_server_url</name> <op:operator pos:line="262" pos:column="55">+</op:operator> <lit:literal type="string" pos:line="262" pos:column="57">"/"</lit:literal> <op:operator pos:line="262" pos:column="61">+</op:operator> <call><name><name pos:line="262" pos:column="63">xdata_temp</name><op:operator pos:line="262" pos:column="73">.</op:operator><name pos:line="262" pos:column="74">getId</name></name><argument_list pos:line="262" pos:column="79">()</argument_list></call> <op:operator pos:line="262" pos:column="82">+</op:operator> <lit:literal type="string" pos:line="262" pos:column="84">"/"</lit:literal> <op:operator pos:line="262" pos:column="88">+</op:operator> <name pos:line="262" pos:column="90">temp_url</name> <op:operator pos:line="262" pos:column="99">+</op:operator> <lit:literal type="string" pos:line="262" pos:column="101">"&lt;/a&gt;&lt;/td&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name><name pos:line="263" pos:column="29">out</name><op:operator pos:line="263" pos:column="32">.</op:operator><name pos:line="263" pos:column="33">println</name></name><argument_list pos:line="263" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="263" pos:column="41">"&lt;/tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name><name pos:line="264" pos:column="29">out</name><op:operator pos:line="264" pos:column="32">.</op:operator><name pos:line="264" pos:column="33">flush</name></name><argument_list pos:line="264" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
                        }</block></while>
                        <expr_stmt><expr><call><name><name pos:line="266" pos:column="25">stmt</name><op:operator pos:line="266" pos:column="29">.</op:operator><name pos:line="266" pos:column="30">close</name></name><argument_list pos:line="266" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
                    }</block> <catch pos:line="267" pos:column="23">catch <parameter_list pos:line="267" pos:column="29">(<param><decl><type><name pos:line="267" pos:column="30">Exception</name></type> <name pos:line="267" pos:column="40">sqle</name></decl></param>)</parameter_list> <block pos:line="267" pos:column="46">{
                        <expr_stmt><expr><call><name><name pos:line="268" pos:column="25">sqle</name><op:operator pos:line="268" pos:column="29">.</op:operator><name pos:line="268" pos:column="30">printStackTrace</name></name><argument_list pos:line="268" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
                    }</block></catch></try>
                }</block></then> <else pos:line="270" pos:column="19">else <if pos:line="270" pos:column="24">if <condition pos:line="270" pos:column="27">(<expr><name pos:line="270" pos:column="28">browseFolder</name></expr>)</condition><then pos:line="270" pos:column="41"> <block pos:line="270" pos:column="42">{
                    <try pos:line="271" pos:column="21">try <block pos:line="271" pos:column="25">{
                        <decl_stmt><decl><type><name pos:line="272" pos:column="25">XincoCoreNodeServer</name></type> <name pos:line="272" pos:column="45">xnode_temp</name> <init pos:line="272" pos:column="56">= <expr><lit:literal type="null" pos:line="272" pos:column="58">null</lit:literal></expr></init></decl>;</decl_stmt>
                        <decl_stmt><decl><type><name pos:line="273" pos:column="25">XincoCoreNodeServer</name></type> <name pos:line="273" pos:column="45">xnode_temp2</name> <init pos:line="273" pos:column="57">= <expr><lit:literal type="null" pos:line="273" pos:column="59">null</lit:literal></expr></init></decl>;</decl_stmt>
                        <decl_stmt><decl><type><name pos:line="274" pos:column="25">XincoCoreDataServer</name></type> <name pos:line="274" pos:column="45">xdata_temp</name> <init pos:line="274" pos:column="56">= <expr><lit:literal type="null" pos:line="274" pos:column="58">null</lit:literal></expr></init></decl>;</decl_stmt>
                        <decl_stmt><decl><type><name pos:line="275" pos:column="25">String</name></type> <name pos:line="275" pos:column="32">temp_path</name> <init pos:line="275" pos:column="42">= <expr><lit:literal type="null" pos:line="275" pos:column="44">null</lit:literal></expr></init></decl>;</decl_stmt>
                        <decl_stmt><decl><type><name pos:line="276" pos:column="25">String</name></type> <name pos:line="276" pos:column="32">temp_path2</name> <init pos:line="276" pos:column="43">= <expr><lit:literal type="null" pos:line="276" pos:column="45">null</lit:literal></expr></init></decl>;</decl_stmt>
                        <decl_stmt><decl><type><name pos:line="277" pos:column="25">int</name></type> <name pos:line="277" pos:column="29">temp_xcn_id</name> <init pos:line="277" pos:column="41">= <expr><lit:literal type="number" pos:line="277" pos:column="43">0</lit:literal></expr></init></decl>;</decl_stmt>

                        <if pos:line="279" pos:column="25">if <condition pos:line="279" pos:column="28">(<expr><op:operator pos:line="279" pos:column="29">!</op:operator><op:operator pos:line="279" pos:column="30">(</op:operator><call><name><name pos:line="279" pos:column="31">request</name><op:operator pos:line="279" pos:column="38">.</op:operator><name pos:line="279" pos:column="39">getParameter</name></name><argument_list pos:line="279" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="279" pos:column="52">"FolderId"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="279" pos:column="64">==</op:operator> <lit:literal type="null" pos:line="279" pos:column="67">null</lit:literal><op:operator pos:line="279" pos:column="71">)</op:operator></expr>)</condition><then pos:line="279" pos:column="73"> <block pos:line="279" pos:column="74">{
                            <expr_stmt><expr><name pos:line="280" pos:column="29">temp_xcn_id</name> <op:operator pos:line="280" pos:column="41">=</op:operator> <call><name><name pos:line="280" pos:column="43">Integer</name><op:operator pos:line="280" pos:column="50">.</op:operator><name pos:line="280" pos:column="51">parseInt</name></name><argument_list pos:line="280" pos:column="59">(<argument><expr><call><name><name pos:line="280" pos:column="60">request</name><op:operator pos:line="280" pos:column="67">.</op:operator><name pos:line="280" pos:column="68">getParameter</name></name><argument_list pos:line="280" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="280" pos:column="81">"FolderId"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><name pos:line="281" pos:column="29">xnode_temp</name> <op:operator pos:line="281" pos:column="40">=</op:operator> <op:operator pos:line="281" pos:column="42">new</op:operator> <call><name pos:line="281" pos:column="46">XincoCoreNodeServer</name><argument_list pos:line="281" pos:column="65">(<argument><expr><name pos:line="281" pos:column="66">temp_xcn_id</name></expr></argument>, <argument><expr><name pos:line="281" pos:column="79">DBM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <comment type="line" pos:line="282" pos:column="29">//check read permission for group "public"</comment>
                            <expr_stmt><expr><name pos:line="283" pos:column="29">isPublic</name> <op:operator pos:line="283" pos:column="38">=</op:operator> <lit:literal type="boolean" pos:line="283" pos:column="40">false</lit:literal></expr>;</expr_stmt>
                            <for pos:line="284" pos:column="29">for (<init><expr><name pos:line="284" pos:column="34">i</name> <op:operator pos:line="284" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="284" pos:column="38">0</lit:literal></expr>;</init> <condition><expr><name pos:line="284" pos:column="41">i</name> <op:operator pos:line="284" pos:column="43">&lt;</op:operator> <call><name><name pos:line="284" pos:column="45">xnode_temp</name><op:operator pos:line="284" pos:column="55">.</op:operator><name pos:line="284" pos:column="56">getXinco_core_acl</name></name><argument_list pos:line="284" pos:column="73">()</argument_list></call><op:operator pos:line="284" pos:column="75">.</op:operator><call><name pos:line="284" pos:column="76">size</name><argument_list pos:line="284" pos:column="80">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="284" pos:column="84">i</name><op:operator pos:line="284" pos:column="85">++</op:operator></expr></incr>) <block pos:line="284" pos:column="89">{
                                <if pos:line="285" pos:column="33">if <condition pos:line="285" pos:column="36">(<expr><op:operator pos:line="285" pos:column="37">(</op:operator><op:operator pos:line="285" pos:column="38">(</op:operator><op:operator pos:line="285" pos:column="39">(</op:operator><name pos:line="285" pos:column="40">XincoCoreACE</name><op:operator pos:line="285" pos:column="52">)</op:operator> <call><name><name pos:line="285" pos:column="54">xnode_temp</name><op:operator pos:line="285" pos:column="64">.</op:operator><name pos:line="285" pos:column="65">getXinco_core_acl</name></name><argument_list pos:line="285" pos:column="82">()</argument_list></call><op:operator pos:line="285" pos:column="84">.</op:operator><call><name pos:line="285" pos:column="85">elementAt</name><argument_list pos:line="285" pos:column="94">(<argument><expr><name pos:line="285" pos:column="95">i</name></expr></argument>)</argument_list></call><op:operator pos:line="285" pos:column="97">)</op:operator><op:operator pos:line="285" pos:column="98">.</op:operator><call><name pos:line="285" pos:column="99">getXinco_core_group_id</name><argument_list pos:line="285" pos:column="121">()</argument_list></call> <op:operator pos:line="285" pos:column="124">==</op:operator> <lit:literal type="number" pos:line="285" pos:column="127">3</lit:literal><op:operator pos:line="285" pos:column="128">)</op:operator>
                                        <op:operator pos:line="286" pos:column="41">&amp;&amp;</op:operator> <op:operator pos:line="286" pos:column="44">(</op:operator><op:operator pos:line="286" pos:column="45">(</op:operator><name pos:line="286" pos:column="46">XincoCoreACE</name><op:operator pos:line="286" pos:column="58">)</op:operator> <call><name><name pos:line="286" pos:column="60">xnode_temp</name><op:operator pos:line="286" pos:column="70">.</op:operator><name pos:line="286" pos:column="71">getXinco_core_acl</name></name><argument_list pos:line="286" pos:column="88">()</argument_list></call><op:operator pos:line="286" pos:column="90">.</op:operator><call><name pos:line="286" pos:column="91">elementAt</name><argument_list pos:line="286" pos:column="100">(<argument><expr><name pos:line="286" pos:column="101">i</name></expr></argument>)</argument_list></call><op:operator pos:line="286" pos:column="103">)</op:operator><op:operator pos:line="286" pos:column="104">.</op:operator><call><name pos:line="286" pos:column="105">isRead_permission</name><argument_list pos:line="286" pos:column="122">()</argument_list></call></expr>)</condition><then pos:line="286" pos:column="125"> <block pos:line="286" pos:column="126">{
                                    <expr_stmt><expr><name pos:line="287" pos:column="37">isPublic</name> <op:operator pos:line="287" pos:column="46">=</op:operator> <lit:literal type="boolean" pos:line="287" pos:column="48">true</lit:literal></expr>;</expr_stmt>
                                    <break pos:line="288" pos:column="37">break;</break>
                                }</block></then></if>
                            }</block></for>
                            <if pos:line="291" pos:column="29">if <condition pos:line="291" pos:column="32">(<expr><name pos:line="291" pos:column="33">isPublic</name></expr>)</condition><then pos:line="291" pos:column="42"> <block pos:line="291" pos:column="43">{
                                <expr_stmt><expr><call><name><name pos:line="292" pos:column="33">xnode_temp</name><op:operator pos:line="292" pos:column="43">.</op:operator><name pos:line="292" pos:column="44">fillXincoCoreNodes</name></name><argument_list pos:line="292" pos:column="62">(<argument><expr><name pos:line="292" pos:column="63">DBM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <expr_stmt><expr><call><name><name pos:line="293" pos:column="33">xnode_temp</name><op:operator pos:line="293" pos:column="43">.</op:operator><name pos:line="293" pos:column="44">fillXincoCoreData</name></name><argument_list pos:line="293" pos:column="61">(<argument><expr><name pos:line="293" pos:column="62">DBM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <comment type="line" pos:line="294" pos:column="33">// print current path</comment>
                                <if pos:line="295" pos:column="33">if <condition pos:line="295" pos:column="36">(<expr><op:operator pos:line="295" pos:column="37">!</op:operator><op:operator pos:line="295" pos:column="38">(</op:operator><call><name><name pos:line="295" pos:column="39">request</name><op:operator pos:line="295" pos:column="46">.</op:operator><name pos:line="295" pos:column="47">getParameter</name></name><argument_list pos:line="295" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="295" pos:column="60">"Path"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="295" pos:column="68">==</op:operator> <lit:literal type="null" pos:line="295" pos:column="71">null</lit:literal><op:operator pos:line="295" pos:column="75">)</op:operator></expr>)</condition><then pos:line="295" pos:column="77"> <block pos:line="295" pos:column="78">{
                                    <expr_stmt><expr><name pos:line="296" pos:column="37">temp_path</name> <op:operator pos:line="296" pos:column="47">=</op:operator> <call><name><name pos:line="296" pos:column="49">request</name><op:operator pos:line="296" pos:column="56">.</op:operator><name pos:line="296" pos:column="57">getParameter</name></name><argument_list pos:line="296" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="296" pos:column="70">"Path"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                    <expr_stmt><expr><name pos:line="297" pos:column="37">temp_path</name> <op:operator pos:line="297" pos:column="47">=</op:operator> <op:operator pos:line="297" pos:column="49">new</op:operator> <call><name pos:line="297" pos:column="53">String</name><argument_list pos:line="297" pos:column="59">(<argument><expr><call><name><name pos:line="297" pos:column="60">Base64</name><op:operator pos:line="297" pos:column="66">.</op:operator><name pos:line="297" pos:column="67">decode</name></name><argument_list pos:line="297" pos:column="73">(<argument><expr><name pos:line="297" pos:column="74">temp_path</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                    <expr_stmt><expr><call><name><name pos:line="298" pos:column="37">out</name><op:operator pos:line="298" pos:column="40">.</op:operator><name pos:line="298" pos:column="41">println</name></name><argument_list pos:line="298" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="298" pos:column="49">"&lt;tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                    <expr_stmt><expr><call><name><name pos:line="299" pos:column="37">out</name><op:operator pos:line="299" pos:column="40">.</op:operator><name pos:line="299" pos:column="41">println</name></name><argument_list pos:line="299" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="299" pos:column="49">"&lt;td colspan=\"2\" class=\"text\"&gt;&lt;b&gt;"</lit:literal> <op:operator pos:line="299" pos:column="88">+</op:operator> <call><name><name pos:line="299" pos:column="90">rb</name><op:operator pos:line="299" pos:column="92">.</op:operator><name pos:line="299" pos:column="93">getString</name></name><argument_list pos:line="299" pos:column="102">(<argument><expr><lit:literal type="string" pos:line="299" pos:column="103">"general.path"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="299" pos:column="119">+</op:operator> <lit:literal type="string" pos:line="299" pos:column="121">"&lt;/b&gt; "</lit:literal> <op:operator pos:line="299" pos:column="129">+</op:operator> <name pos:line="299" pos:column="131">temp_path</name> <op:operator pos:line="299" pos:column="141">+</op:operator> <lit:literal type="string" pos:line="299" pos:column="143">"&lt;/td&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                    <expr_stmt><expr><call><name><name pos:line="300" pos:column="37">out</name><op:operator pos:line="300" pos:column="40">.</op:operator><name pos:line="300" pos:column="41">println</name></name><argument_list pos:line="300" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="300" pos:column="49">"&lt;/tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                    <expr_stmt><expr><call><name><name pos:line="301" pos:column="37">out</name><op:operator pos:line="301" pos:column="40">.</op:operator><name pos:line="301" pos:column="41">println</name></name><argument_list pos:line="301" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="301" pos:column="49">"&lt;tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                    <expr_stmt><expr><call><name><name pos:line="302" pos:column="37">out</name><op:operator pos:line="302" pos:column="40">.</op:operator><name pos:line="302" pos:column="41">println</name></name><argument_list pos:line="302" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="302" pos:column="49">"&lt;td colspan=\"2\" class=\"text\"&gt;&amp;nbsp;&lt;/td&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                    <expr_stmt><expr><call><name><name pos:line="303" pos:column="37">out</name><op:operator pos:line="303" pos:column="40">.</op:operator><name pos:line="303" pos:column="41">println</name></name><argument_list pos:line="303" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="303" pos:column="49">"&lt;/tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                    <expr_stmt><expr><call><name><name pos:line="304" pos:column="37">out</name><op:operator pos:line="304" pos:column="40">.</op:operator><name pos:line="304" pos:column="41">flush</name></name><argument_list pos:line="304" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
                                }</block></then> <else pos:line="305" pos:column="35">else <block pos:line="305" pos:column="40">{
                                    <expr_stmt><expr><name pos:line="306" pos:column="37">temp_path</name> <op:operator pos:line="306" pos:column="47">=</op:operator> <lit:literal type="null" pos:line="306" pos:column="49">null</lit:literal></expr>;</expr_stmt>
                                }</block></else></if>
                                <comment type="line" pos:line="308" pos:column="33">// list public folders</comment>
                                <expr_stmt><expr><call><name><name pos:line="309" pos:column="33">out</name><op:operator pos:line="309" pos:column="36">.</op:operator><name pos:line="309" pos:column="37">println</name></name><argument_list pos:line="309" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="309" pos:column="45">"&lt;tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <expr_stmt><expr><call><name><name pos:line="310" pos:column="33">out</name><op:operator pos:line="310" pos:column="36">.</op:operator><name pos:line="310" pos:column="37">println</name></name><argument_list pos:line="310" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="310" pos:column="45">"&lt;td colspan=\"2\" class=\"text\"&gt;&lt;b&gt;"</lit:literal> <op:operator pos:line="310" pos:column="84">+</op:operator> <call><name><name pos:line="310" pos:column="86">rb</name><op:operator pos:line="310" pos:column="88">.</op:operator><name pos:line="310" pos:column="89">getString</name></name><argument_list pos:line="310" pos:column="98">(<argument><expr><lit:literal type="string" pos:line="310" pos:column="99">"message.xincopublisher.subfolders"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="310" pos:column="136">+</op:operator> <lit:literal type="string" pos:line="310" pos:column="138">"&lt;/b&gt;&lt;/td&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <expr_stmt><expr><call><name><name pos:line="311" pos:column="33">out</name><op:operator pos:line="311" pos:column="36">.</op:operator><name pos:line="311" pos:column="37">println</name></name><argument_list pos:line="311" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="311" pos:column="45">"&lt;/tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <expr_stmt><expr><call><name><name pos:line="312" pos:column="33">out</name><op:operator pos:line="312" pos:column="36">.</op:operator><name pos:line="312" pos:column="37">flush</name></name><argument_list pos:line="312" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
                                <for pos:line="313" pos:column="33">for (<init><expr><name pos:line="313" pos:column="38">i</name> <op:operator pos:line="313" pos:column="40">=</op:operator> <lit:literal type="number" pos:line="313" pos:column="42">0</lit:literal></expr>;</init> <condition><expr><name pos:line="313" pos:column="45">i</name> <op:operator pos:line="313" pos:column="47">&lt;</op:operator> <call><name><name pos:line="313" pos:column="49">xnode_temp</name><op:operator pos:line="313" pos:column="59">.</op:operator><name pos:line="313" pos:column="60">getXinco_core_nodes</name></name><argument_list pos:line="313" pos:column="79">()</argument_list></call><op:operator pos:line="313" pos:column="81">.</op:operator><call><name pos:line="313" pos:column="82">size</name><argument_list pos:line="313" pos:column="86">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="313" pos:column="90">i</name><op:operator pos:line="313" pos:column="91">++</op:operator></expr></incr>) <block pos:line="313" pos:column="95">{
                                    <expr_stmt><expr><name pos:line="314" pos:column="37">xnode_temp2</name> <op:operator pos:line="314" pos:column="49">=</op:operator> <op:operator pos:line="314" pos:column="51">new</op:operator> <call><name pos:line="314" pos:column="55">XincoCoreNodeServer</name><argument_list pos:line="314" pos:column="74">(<argument><expr><op:operator pos:line="314" pos:column="75">(</op:operator><op:operator pos:line="314" pos:column="76">(</op:operator><name pos:line="314" pos:column="77">XincoCoreNodeServer</name><op:operator pos:line="314" pos:column="96">)</op:operator> <call><name><name pos:line="314" pos:column="98">xnode_temp</name><op:operator pos:line="314" pos:column="108">.</op:operator><name pos:line="314" pos:column="109">getXinco_core_nodes</name></name><argument_list pos:line="314" pos:column="128">()</argument_list></call><op:operator pos:line="314" pos:column="130">.</op:operator><call><name pos:line="314" pos:column="131">elementAt</name><argument_list pos:line="314" pos:column="140">(<argument><expr><name pos:line="314" pos:column="141">i</name></expr></argument>)</argument_list></call><op:operator pos:line="314" pos:column="143">)</op:operator><op:operator pos:line="314" pos:column="144">.</op:operator><call><name pos:line="314" pos:column="145">getId</name><argument_list pos:line="314" pos:column="150">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="314" pos:column="154">DBM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                    <expr_stmt><expr><name pos:line="315" pos:column="37">isPublic</name> <op:operator pos:line="315" pos:column="46">=</op:operator> <lit:literal type="boolean" pos:line="315" pos:column="48">false</lit:literal></expr>;</expr_stmt>
                                    <comment type="line" pos:line="316" pos:column="37">//check read permission for group "public"</comment>
                                    <for pos:line="317" pos:column="37">for (<init><expr><name pos:line="317" pos:column="42">j</name> <op:operator pos:line="317" pos:column="44">=</op:operator> <lit:literal type="number" pos:line="317" pos:column="46">0</lit:literal></expr>;</init> <condition><expr><name pos:line="317" pos:column="49">j</name> <op:operator pos:line="317" pos:column="51">&lt;</op:operator> <call><name><name pos:line="317" pos:column="53">xnode_temp2</name><op:operator pos:line="317" pos:column="64">.</op:operator><name pos:line="317" pos:column="65">getXinco_core_acl</name></name><argument_list pos:line="317" pos:column="82">()</argument_list></call><op:operator pos:line="317" pos:column="84">.</op:operator><call><name pos:line="317" pos:column="85">size</name><argument_list pos:line="317" pos:column="89">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="317" pos:column="93">j</name><op:operator pos:line="317" pos:column="94">++</op:operator></expr></incr>) <block pos:line="317" pos:column="98">{
                                        <if pos:line="318" pos:column="41">if <condition pos:line="318" pos:column="44">(<expr><op:operator pos:line="318" pos:column="45">(</op:operator><op:operator pos:line="318" pos:column="46">(</op:operator><op:operator pos:line="318" pos:column="47">(</op:operator><name pos:line="318" pos:column="48">XincoCoreACE</name><op:operator pos:line="318" pos:column="60">)</op:operator> <call><name><name pos:line="318" pos:column="62">xnode_temp2</name><op:operator pos:line="318" pos:column="73">.</op:operator><name pos:line="318" pos:column="74">getXinco_core_acl</name></name><argument_list pos:line="318" pos:column="91">()</argument_list></call><op:operator pos:line="318" pos:column="93">.</op:operator><call><name pos:line="318" pos:column="94">elementAt</name><argument_list pos:line="318" pos:column="103">(<argument><expr><name pos:line="318" pos:column="104">j</name></expr></argument>)</argument_list></call><op:operator pos:line="318" pos:column="106">)</op:operator><op:operator pos:line="318" pos:column="107">.</op:operator><call><name pos:line="318" pos:column="108">getXinco_core_group_id</name><argument_list pos:line="318" pos:column="130">()</argument_list></call> <op:operator pos:line="318" pos:column="133">==</op:operator> <lit:literal type="number" pos:line="318" pos:column="136">3</lit:literal><op:operator pos:line="318" pos:column="137">)</op:operator> <op:operator pos:line="318" pos:column="139">&amp;&amp;</op:operator> <op:operator pos:line="318" pos:column="142">(</op:operator><op:operator pos:line="318" pos:column="143">(</op:operator><name pos:line="318" pos:column="144">XincoCoreACE</name><op:operator pos:line="318" pos:column="156">)</op:operator> <call><name><name pos:line="318" pos:column="158">xnode_temp2</name><op:operator pos:line="318" pos:column="169">.</op:operator><name pos:line="318" pos:column="170">getXinco_core_acl</name></name><argument_list pos:line="318" pos:column="187">()</argument_list></call><op:operator pos:line="318" pos:column="189">.</op:operator><call><name pos:line="318" pos:column="190">elementAt</name><argument_list pos:line="318" pos:column="199">(<argument><expr><name pos:line="318" pos:column="200">j</name></expr></argument>)</argument_list></call><op:operator pos:line="318" pos:column="202">)</op:operator><op:operator pos:line="318" pos:column="203">.</op:operator><call><name pos:line="318" pos:column="204">isRead_permission</name><argument_list pos:line="318" pos:column="221">()</argument_list></call></expr>)</condition><then pos:line="318" pos:column="224"> <block pos:line="318" pos:column="225">{
                                            <expr_stmt><expr><name pos:line="319" pos:column="45">isPublic</name> <op:operator pos:line="319" pos:column="54">=</op:operator> <lit:literal type="boolean" pos:line="319" pos:column="56">true</lit:literal></expr>;</expr_stmt>
                                            <break pos:line="320" pos:column="45">break;</break>
                                        }</block></then></if>
                                    }</block></for>
                                    <if pos:line="323" pos:column="37">if <condition pos:line="323" pos:column="40">(<expr><name pos:line="323" pos:column="41">isPublic</name></expr>)</condition><then pos:line="323" pos:column="50"> <block pos:line="323" pos:column="51">{
                                        <if pos:line="324" pos:column="41">if <condition pos:line="324" pos:column="44">(<expr><name pos:line="324" pos:column="45">temp_path</name> <op:operator pos:line="324" pos:column="55">!=</op:operator> <lit:literal type="null" pos:line="324" pos:column="58">null</lit:literal></expr>)</condition><then pos:line="324" pos:column="63"> <block pos:line="324" pos:column="64">{
                                            <expr_stmt><expr><name pos:line="325" pos:column="45">temp_path2</name> <op:operator pos:line="325" pos:column="56">=</op:operator> <name pos:line="325" pos:column="58">temp_path</name> <op:operator pos:line="325" pos:column="68">+</op:operator> <lit:literal type="string" pos:line="325" pos:column="70">" / "</lit:literal> <op:operator pos:line="325" pos:column="76">+</op:operator> <call><name><name pos:line="325" pos:column="78">xnode_temp2</name><op:operator pos:line="325" pos:column="89">.</op:operator><name pos:line="325" pos:column="90">getDesignation</name></name><argument_list pos:line="325" pos:column="104">()</argument_list></call> <op:operator pos:line="325" pos:column="107">+</op:operator> <lit:literal type="string" pos:line="325" pos:column="109">" ("</lit:literal> <op:operator pos:line="325" pos:column="114">+</op:operator> <call><name><name pos:line="325" pos:column="116">xnode_temp2</name><op:operator pos:line="325" pos:column="127">.</op:operator><name pos:line="325" pos:column="128">getXinco_core_language</name></name><argument_list pos:line="325" pos:column="150">()</argument_list></call><op:operator pos:line="325" pos:column="152">.</op:operator><call><name pos:line="325" pos:column="153">getSign</name><argument_list pos:line="325" pos:column="160">()</argument_list></call> <op:operator pos:line="325" pos:column="163">+</op:operator> <lit:literal type="string" pos:line="325" pos:column="165">")"</lit:literal></expr>;</expr_stmt>
                                            <expr_stmt><expr><name pos:line="326" pos:column="45">temp_path2</name> <op:operator pos:line="326" pos:column="56">=</op:operator> <call><name><name pos:line="326" pos:column="58">Base64</name><op:operator pos:line="326" pos:column="64">.</op:operator><name pos:line="326" pos:column="65">encode</name></name><argument_list pos:line="326" pos:column="71">(<argument><expr><call><name><name pos:line="326" pos:column="72">temp_path2</name><op:operator pos:line="326" pos:column="82">.</op:operator><name pos:line="326" pos:column="83">getBytes</name></name><argument_list pos:line="326" pos:column="91">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                            <expr_stmt><expr><name pos:line="327" pos:column="45">temp_path2</name> <op:operator pos:line="327" pos:column="56">=</op:operator> <lit:literal type="string" pos:line="327" pos:column="58">"&amp;Path="</lit:literal> <op:operator pos:line="327" pos:column="67">+</op:operator> <name pos:line="327" pos:column="69">temp_path2</name></expr>;</expr_stmt>
                                        }</block></then> <else pos:line="328" pos:column="43">else <block pos:line="328" pos:column="48">{
                                            <expr_stmt><expr><name pos:line="329" pos:column="45">temp_path2</name> <op:operator pos:line="329" pos:column="56">=</op:operator> <lit:literal type="string" pos:line="329" pos:column="58">""</lit:literal></expr>;</expr_stmt>
                                        }</block></else></if>
                                        <expr_stmt><expr><call><name><name pos:line="331" pos:column="41">out</name><op:operator pos:line="331" pos:column="44">.</op:operator><name pos:line="331" pos:column="45">println</name></name><argument_list pos:line="331" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="331" pos:column="53">"&lt;tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                        <expr_stmt><expr><call><name><name pos:line="332" pos:column="41">out</name><op:operator pos:line="332" pos:column="44">.</op:operator><name pos:line="332" pos:column="45">println</name></name><argument_list pos:line="332" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="332" pos:column="53">"&lt;td class=\"text\"&gt;&amp;nbsp;&lt;/td&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                        <expr_stmt><expr><call><name><name pos:line="333" pos:column="41">out</name><op:operator pos:line="333" pos:column="44">.</op:operator><name pos:line="333" pos:column="45">println</name></name><argument_list pos:line="333" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="333" pos:column="53">"&lt;td class=\"text\"&gt;&lt;a href=\""</lit:literal> <op:operator pos:line="333" pos:column="85">+</op:operator> <lit:literal type="string" pos:line="333" pos:column="87">"XincoPublisher?MainMenu=browse&amp;FolderId="</lit:literal>
                                                <op:operator pos:line="334" pos:column="49">+</op:operator> <call><name><name pos:line="334" pos:column="51">xnode_temp2</name><op:operator pos:line="334" pos:column="62">.</op:operator><name pos:line="334" pos:column="63">getId</name></name><argument_list pos:line="334" pos:column="68">()</argument_list></call> <op:operator pos:line="334" pos:column="71">+</op:operator> <name pos:line="334" pos:column="73">temp_path2</name> <op:operator pos:line="334" pos:column="84">+</op:operator> <lit:literal type="string" pos:line="334" pos:column="86">"&amp;list="</lit:literal> <op:operator pos:line="334" pos:column="95">+</op:operator> <call><name><name pos:line="334" pos:column="97">request</name><op:operator pos:line="334" pos:column="104">.</op:operator><name pos:line="334" pos:column="105">getParameter</name></name><argument_list pos:line="334" pos:column="117">(<argument><expr><lit:literal type="string" pos:line="334" pos:column="118">"list"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="334" pos:column="126">+</op:operator> <lit:literal type="string" pos:line="334" pos:column="128">"\"&gt;["</lit:literal>
                                                <op:operator pos:line="335" pos:column="49">+</op:operator> <call><name><name pos:line="335" pos:column="51">xnode_temp2</name><op:operator pos:line="335" pos:column="62">.</op:operator><name pos:line="335" pos:column="63">getDesignation</name></name><argument_list pos:line="335" pos:column="77">()</argument_list></call> <op:operator pos:line="335" pos:column="80">+</op:operator> <lit:literal type="string" pos:line="335" pos:column="82">" ("</lit:literal> <op:operator pos:line="335" pos:column="87">+</op:operator> <call><name><name pos:line="335" pos:column="89">xnode_temp2</name><op:operator pos:line="335" pos:column="100">.</op:operator><name pos:line="335" pos:column="101">getXinco_core_language</name></name><argument_list pos:line="335" pos:column="123">()</argument_list></call><op:operator pos:line="335" pos:column="125">.</op:operator><call><name pos:line="335" pos:column="126">getSign</name><argument_list pos:line="335" pos:column="133">()</argument_list></call> <op:operator pos:line="335" pos:column="136">+</op:operator> <lit:literal type="string" pos:line="335" pos:column="138">")"</lit:literal>
                                                <op:operator pos:line="336" pos:column="49">+</op:operator> <lit:literal type="string" pos:line="336" pos:column="51">"]&lt;/a&gt;&lt;/td&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                        <expr_stmt><expr><call><name><name pos:line="337" pos:column="41">out</name><op:operator pos:line="337" pos:column="44">.</op:operator><name pos:line="337" pos:column="45">println</name></name><argument_list pos:line="337" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="337" pos:column="53">"&lt;/tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                        <expr_stmt><expr><call><name><name pos:line="338" pos:column="41">out</name><op:operator pos:line="338" pos:column="44">.</op:operator><name pos:line="338" pos:column="45">flush</name></name><argument_list pos:line="338" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
                                    }</block></then></if>
                                }</block></for>
                                <expr_stmt><expr><call><name><name pos:line="341" pos:column="33">out</name><op:operator pos:line="341" pos:column="36">.</op:operator><name pos:line="341" pos:column="37">println</name></name><argument_list pos:line="341" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="341" pos:column="45">"&lt;tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <expr_stmt><expr><call><name><name pos:line="342" pos:column="33">out</name><op:operator pos:line="342" pos:column="36">.</op:operator><name pos:line="342" pos:column="37">println</name></name><argument_list pos:line="342" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="342" pos:column="45">"&lt;td colspan=\"2\" class=\"text\"&gt;&amp;nbsp;&lt;/td&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <expr_stmt><expr><call><name><name pos:line="343" pos:column="33">out</name><op:operator pos:line="343" pos:column="36">.</op:operator><name pos:line="343" pos:column="37">println</name></name><argument_list pos:line="343" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="343" pos:column="45">"&lt;/tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <expr_stmt><expr><call><name><name pos:line="344" pos:column="33">out</name><op:operator pos:line="344" pos:column="36">.</op:operator><name pos:line="344" pos:column="37">flush</name></name><argument_list pos:line="344" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
                                <comment type="line" pos:line="345" pos:column="33">// list public data</comment>
                                <expr_stmt><expr><call><name><name pos:line="346" pos:column="33">out</name><op:operator pos:line="346" pos:column="36">.</op:operator><name pos:line="346" pos:column="37">println</name></name><argument_list pos:line="346" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="346" pos:column="45">"&lt;tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <expr_stmt><expr><call><name><name pos:line="347" pos:column="33">out</name><op:operator pos:line="347" pos:column="36">.</op:operator><name pos:line="347" pos:column="37">println</name></name><argument_list pos:line="347" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="347" pos:column="45">"&lt;td colspan=\"2\" class=\"text\"&gt;&lt;b&gt;"</lit:literal>
                                        <op:operator pos:line="348" pos:column="41">+</op:operator> <call><name><name pos:line="348" pos:column="43">rb</name><op:operator pos:line="348" pos:column="45">.</op:operator><name pos:line="348" pos:column="46">getString</name></name><argument_list pos:line="348" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="348" pos:column="56">"message.xincopublisher.publicdata"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="348" pos:column="93">+</op:operator> <lit:literal type="string" pos:line="348" pos:column="95">"&lt;/b&gt;&lt;/td&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <expr_stmt><expr><call><name><name pos:line="349" pos:column="33">out</name><op:operator pos:line="349" pos:column="36">.</op:operator><name pos:line="349" pos:column="37">println</name></name><argument_list pos:line="349" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="349" pos:column="45">"&lt;/tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <expr_stmt><expr><call><name><name pos:line="350" pos:column="33">out</name><op:operator pos:line="350" pos:column="36">.</op:operator><name pos:line="350" pos:column="37">flush</name></name><argument_list pos:line="350" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
                                <for pos:line="351" pos:column="33">for (<init><expr><name pos:line="351" pos:column="38">i</name> <op:operator pos:line="351" pos:column="40">=</op:operator> <lit:literal type="number" pos:line="351" pos:column="42">0</lit:literal></expr>;</init> <condition><expr><name pos:line="351" pos:column="45">i</name> <op:operator pos:line="351" pos:column="47">&lt;</op:operator> <call><name><name pos:line="351" pos:column="49">xnode_temp</name><op:operator pos:line="351" pos:column="59">.</op:operator><name pos:line="351" pos:column="60">getXinco_core_data</name></name><argument_list pos:line="351" pos:column="78">()</argument_list></call><op:operator pos:line="351" pos:column="80">.</op:operator><call><name pos:line="351" pos:column="81">size</name><argument_list pos:line="351" pos:column="85">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="351" pos:column="89">i</name><op:operator pos:line="351" pos:column="90">++</op:operator></expr></incr>) <block pos:line="351" pos:column="94">{
                                    <expr_stmt><expr><name pos:line="352" pos:column="37">xdata_temp</name> <op:operator pos:line="352" pos:column="48">=</op:operator> <op:operator pos:line="352" pos:column="50">new</op:operator> <call><name pos:line="352" pos:column="54">XincoCoreDataServer</name><argument_list pos:line="352" pos:column="73">(<argument><expr><op:operator pos:line="352" pos:column="74">(</op:operator><op:operator pos:line="352" pos:column="75">(</op:operator><name pos:line="352" pos:column="76">XincoCoreDataServer</name><op:operator pos:line="352" pos:column="95">)</op:operator> <call><name><name pos:line="352" pos:column="97">xnode_temp</name><op:operator pos:line="352" pos:column="107">.</op:operator><name pos:line="352" pos:column="108">getXinco_core_data</name></name><argument_list pos:line="352" pos:column="126">()</argument_list></call><op:operator pos:line="352" pos:column="128">.</op:operator><call><name pos:line="352" pos:column="129">elementAt</name><argument_list pos:line="352" pos:column="138">(<argument><expr><name pos:line="352" pos:column="139">i</name></expr></argument>)</argument_list></call><op:operator pos:line="352" pos:column="141">)</op:operator><op:operator pos:line="352" pos:column="142">.</op:operator><call><name pos:line="352" pos:column="143">getId</name><argument_list pos:line="352" pos:column="148">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="352" pos:column="152">DBM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                    <expr_stmt><expr><name pos:line="353" pos:column="37">isPublic</name> <op:operator pos:line="353" pos:column="46">=</op:operator> <lit:literal type="boolean" pos:line="353" pos:column="48">false</lit:literal></expr>;</expr_stmt>
                                    <comment type="line" pos:line="354" pos:column="37">//check status (5 = published)</comment>
                                    <if pos:line="355" pos:column="37">if <condition pos:line="355" pos:column="40">(<expr><call><name><name pos:line="355" pos:column="41">xdata_temp</name><op:operator pos:line="355" pos:column="51">.</op:operator><name pos:line="355" pos:column="52">getStatus_number</name></name><argument_list pos:line="355" pos:column="68">()</argument_list></call> <op:operator pos:line="355" pos:column="71">==</op:operator> <lit:literal type="number" pos:line="355" pos:column="74">5</lit:literal></expr>)</condition><then pos:line="355" pos:column="76"> <block pos:line="355" pos:column="77">{
                                        <expr_stmt><expr><name pos:line="356" pos:column="41">isPublic</name> <op:operator pos:line="356" pos:column="50">=</op:operator> <lit:literal type="boolean" pos:line="356" pos:column="52">true</lit:literal></expr>;</expr_stmt>
                                    }</block></then> <else pos:line="357" pos:column="39">else <block pos:line="357" pos:column="44">{
                                        <comment type="line" pos:line="358" pos:column="41">//check read permission for group "public"</comment>
                                        <for pos:line="359" pos:column="41">for (<init><expr><name pos:line="359" pos:column="46">j</name> <op:operator pos:line="359" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="359" pos:column="50">0</lit:literal></expr>;</init> <condition><expr><name pos:line="359" pos:column="53">j</name> <op:operator pos:line="359" pos:column="55">&lt;</op:operator> <call><name><name pos:line="359" pos:column="57">xdata_temp</name><op:operator pos:line="359" pos:column="67">.</op:operator><name pos:line="359" pos:column="68">getXinco_core_acl</name></name><argument_list pos:line="359" pos:column="85">()</argument_list></call><op:operator pos:line="359" pos:column="87">.</op:operator><call><name pos:line="359" pos:column="88">size</name><argument_list pos:line="359" pos:column="92">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="359" pos:column="96">j</name><op:operator pos:line="359" pos:column="97">++</op:operator></expr></incr>) <block pos:line="359" pos:column="101">{
                                            <if pos:line="360" pos:column="45">if <condition pos:line="360" pos:column="48">(<expr><op:operator pos:line="360" pos:column="49">(</op:operator><op:operator pos:line="360" pos:column="50">(</op:operator><op:operator pos:line="360" pos:column="51">(</op:operator><name pos:line="360" pos:column="52">XincoCoreACE</name><op:operator pos:line="360" pos:column="64">)</op:operator> <call><name><name pos:line="360" pos:column="66">xdata_temp</name><op:operator pos:line="360" pos:column="76">.</op:operator><name pos:line="360" pos:column="77">getXinco_core_acl</name></name><argument_list pos:line="360" pos:column="94">()</argument_list></call><op:operator pos:line="360" pos:column="96">.</op:operator><call><name pos:line="360" pos:column="97">elementAt</name><argument_list pos:line="360" pos:column="106">(<argument><expr><name pos:line="360" pos:column="107">j</name></expr></argument>)</argument_list></call><op:operator pos:line="360" pos:column="109">)</op:operator><op:operator pos:line="360" pos:column="110">.</op:operator><call><name pos:line="360" pos:column="111">getXinco_core_group_id</name><argument_list pos:line="360" pos:column="133">()</argument_list></call> <op:operator pos:line="360" pos:column="136">==</op:operator> <lit:literal type="number" pos:line="360" pos:column="139">3</lit:literal><op:operator pos:line="360" pos:column="140">)</op:operator> <op:operator pos:line="360" pos:column="142">&amp;&amp;</op:operator> <op:operator pos:line="360" pos:column="145">(</op:operator><op:operator pos:line="360" pos:column="146">(</op:operator><name pos:line="360" pos:column="147">XincoCoreACE</name><op:operator pos:line="360" pos:column="159">)</op:operator> <call><name><name pos:line="360" pos:column="161">xdata_temp</name><op:operator pos:line="360" pos:column="171">.</op:operator><name pos:line="360" pos:column="172">getXinco_core_acl</name></name><argument_list pos:line="360" pos:column="189">()</argument_list></call><op:operator pos:line="360" pos:column="191">.</op:operator><call><name pos:line="360" pos:column="192">elementAt</name><argument_list pos:line="360" pos:column="201">(<argument><expr><name pos:line="360" pos:column="202">j</name></expr></argument>)</argument_list></call><op:operator pos:line="360" pos:column="204">)</op:operator><op:operator pos:line="360" pos:column="205">.</op:operator><call><name pos:line="360" pos:column="206">isRead_permission</name><argument_list pos:line="360" pos:column="223">()</argument_list></call></expr>)</condition><then pos:line="360" pos:column="226"> <block pos:line="360" pos:column="227">{
                                                <expr_stmt><expr><name pos:line="361" pos:column="49">isPublic</name> <op:operator pos:line="361" pos:column="58">=</op:operator> <lit:literal type="boolean" pos:line="361" pos:column="60">true</lit:literal></expr>;</expr_stmt>
                                                <break pos:line="362" pos:column="49">break;</break>
                                            }</block></then></if>
                                        }</block></for>
                                    }</block></else></if>
                                    <if pos:line="366" pos:column="37">if <condition pos:line="366" pos:column="40">(<expr><name pos:line="366" pos:column="41">isPublic</name></expr>)</condition><then pos:line="366" pos:column="50"> <block pos:line="366" pos:column="51">{
                                        <expr_stmt><expr><name pos:line="367" pos:column="41">temp_server_url</name> <op:operator pos:line="367" pos:column="57">=</op:operator> <call><name><name pos:line="367" pos:column="59">request</name><op:operator pos:line="367" pos:column="66">.</op:operator><name pos:line="367" pos:column="67">getRequestURL</name></name><argument_list pos:line="367" pos:column="80">()</argument_list></call><op:operator pos:line="367" pos:column="82">.</op:operator><call><name pos:line="367" pos:column="83">toString</name><argument_list pos:line="367" pos:column="91">()</argument_list></call></expr>;</expr_stmt>
                                        <expr_stmt><expr><name pos:line="368" pos:column="41">temp_url</name> <op:operator pos:line="368" pos:column="50">=</op:operator> <lit:literal type="string" pos:line="368" pos:column="52">""</lit:literal></expr>;</expr_stmt>
                                        <comment type="line" pos:line="369" pos:column="41">//file = 1</comment>
                                        <if pos:line="370" pos:column="41">if <condition pos:line="370" pos:column="44">(<expr><call><name><name pos:line="370" pos:column="45">xdata_temp</name><op:operator pos:line="370" pos:column="55">.</op:operator><name pos:line="370" pos:column="56">getXinco_core_data_type</name></name><argument_list pos:line="370" pos:column="79">()</argument_list></call><op:operator pos:line="370" pos:column="81">.</op:operator><call><name pos:line="370" pos:column="82">getId</name><argument_list pos:line="370" pos:column="87">()</argument_list></call> <op:operator pos:line="370" pos:column="90">==</op:operator> <lit:literal type="number" pos:line="370" pos:column="93">1</lit:literal></expr>)</condition><then pos:line="370" pos:column="95"> <block pos:line="370" pos:column="96">{
                                            <expr_stmt><expr><name pos:line="371" pos:column="45">temp_url</name> <op:operator pos:line="371" pos:column="54">=</op:operator> <op:operator pos:line="371" pos:column="56">(</op:operator><op:operator pos:line="371" pos:column="57">(</op:operator><name pos:line="371" pos:column="58">XincoAddAttribute</name><op:operator pos:line="371" pos:column="75">)</op:operator> <call><name><name pos:line="371" pos:column="77">xdata_temp</name><op:operator pos:line="371" pos:column="87">.</op:operator><name pos:line="371" pos:column="88">getXinco_add_attributes</name></name><argument_list pos:line="371" pos:column="111">()</argument_list></call><op:operator pos:line="371" pos:column="113">.</op:operator><call><name pos:line="371" pos:column="114">elementAt</name><argument_list pos:line="371" pos:column="123">(<argument><expr><lit:literal type="number" pos:line="371" pos:column="124">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="371" pos:column="126">)</op:operator><op:operator pos:line="371" pos:column="127">.</op:operator><call><name pos:line="371" pos:column="128">getAttrib_varchar</name><argument_list pos:line="371" pos:column="145">()</argument_list></call></expr>;</expr_stmt>
                                        }</block></then> <else pos:line="372" pos:column="43">else <block pos:line="372" pos:column="48">{
                                            <expr_stmt><expr><name pos:line="373" pos:column="45">temp_url</name> <op:operator pos:line="373" pos:column="54">=</op:operator> <call><name><name pos:line="373" pos:column="56">xdata_temp</name><op:operator pos:line="373" pos:column="66">.</op:operator><name pos:line="373" pos:column="67">getDesignation</name></name><argument_list pos:line="373" pos:column="81">()</argument_list></call></expr>;</expr_stmt>
                                        }</block></else></if>
                                        <expr_stmt><expr><call><name><name pos:line="375" pos:column="41">out</name><op:operator pos:line="375" pos:column="44">.</op:operator><name pos:line="375" pos:column="45">println</name></name><argument_list pos:line="375" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="375" pos:column="53">"&lt;tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                        <expr_stmt><expr><call><name><name pos:line="376" pos:column="41">out</name><op:operator pos:line="376" pos:column="44">.</op:operator><name pos:line="376" pos:column="45">println</name></name><argument_list pos:line="376" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="376" pos:column="53">"&lt;td class=\"text\"&gt;"</lit:literal> <op:operator pos:line="376" pos:column="75">+</op:operator> <call><name><name pos:line="376" pos:column="77">xdata_temp</name><op:operator pos:line="376" pos:column="87">.</op:operator><name pos:line="376" pos:column="88">getDesignation</name></name><argument_list pos:line="376" pos:column="102">()</argument_list></call> <op:operator pos:line="376" pos:column="105">+</op:operator> <lit:literal type="string" pos:line="376" pos:column="107">" ("</lit:literal> <op:operator pos:line="376" pos:column="112">+</op:operator> <call><name><name pos:line="376" pos:column="114">xdata_temp</name><op:operator pos:line="376" pos:column="124">.</op:operator><name pos:line="376" pos:column="125">getXinco_core_data_type</name></name><argument_list pos:line="376" pos:column="148">()</argument_list></call><op:operator pos:line="376" pos:column="150">.</op:operator><call><name pos:line="376" pos:column="151">getDesignation</name><argument_list pos:line="376" pos:column="165">()</argument_list></call> <op:operator pos:line="376" pos:column="168">+</op:operator> <lit:literal type="string" pos:line="376" pos:column="170">" | "</lit:literal> <op:operator pos:line="376" pos:column="176">+</op:operator> <call><name><name pos:line="376" pos:column="178">xdata_temp</name><op:operator pos:line="376" pos:column="188">.</op:operator><name pos:line="376" pos:column="189">getXinco_core_language</name></name><argument_list pos:line="376" pos:column="211">()</argument_list></call><op:operator pos:line="376" pos:column="213">.</op:operator><call><name pos:line="376" pos:column="214">getSign</name><argument_list pos:line="376" pos:column="221">()</argument_list></call> <op:operator pos:line="376" pos:column="224">+</op:operator> <lit:literal type="string" pos:line="376" pos:column="226">")"</lit:literal> <op:operator pos:line="376" pos:column="230">+</op:operator> <lit:literal type="string" pos:line="376" pos:column="232">"&lt;/td&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                        <expr_stmt><expr><call><name><name pos:line="377" pos:column="41">out</name><op:operator pos:line="377" pos:column="44">.</op:operator><name pos:line="377" pos:column="45">println</name></name><argument_list pos:line="377" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="377" pos:column="53">"&lt;td class=\"text\"&gt;&lt;a href=\""</lit:literal> <op:operator pos:line="377" pos:column="85">+</op:operator> <lit:literal type="string" pos:line="377" pos:column="87">"XincoPublisher/"</lit:literal> <op:operator pos:line="377" pos:column="105">+</op:operator> <call><name><name pos:line="377" pos:column="107">xdata_temp</name><op:operator pos:line="377" pos:column="117">.</op:operator><name pos:line="377" pos:column="118">getId</name></name><argument_list pos:line="377" pos:column="123">()</argument_list></call> <op:operator pos:line="377" pos:column="126">+</op:operator> <lit:literal type="string" pos:line="377" pos:column="128">"/"</lit:literal> <op:operator pos:line="377" pos:column="132">+</op:operator> <name pos:line="377" pos:column="134">temp_url</name> <op:operator pos:line="377" pos:column="143">+</op:operator> <lit:literal type="string" pos:line="377" pos:column="145">"?list="</lit:literal> <op:operator pos:line="377" pos:column="154">+</op:operator> <call><name><name pos:line="377" pos:column="156">request</name><op:operator pos:line="377" pos:column="163">.</op:operator><name pos:line="377" pos:column="164">getParameter</name></name><argument_list pos:line="377" pos:column="176">(<argument><expr><lit:literal type="string" pos:line="377" pos:column="177">"list"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="377" pos:column="185">+</op:operator> <lit:literal type="string" pos:line="377" pos:column="187">"\" target=\"_blank\"&gt;"</lit:literal> <op:operator pos:line="377" pos:column="211">+</op:operator> <name pos:line="377" pos:column="213">temp_server_url</name> <op:operator pos:line="377" pos:column="229">+</op:operator> <lit:literal type="string" pos:line="377" pos:column="231">"/"</lit:literal> <op:operator pos:line="377" pos:column="235">+</op:operator> <call><name><name pos:line="377" pos:column="237">xdata_temp</name><op:operator pos:line="377" pos:column="247">.</op:operator><name pos:line="377" pos:column="248">getId</name></name><argument_list pos:line="377" pos:column="253">()</argument_list></call> <op:operator pos:line="377" pos:column="256">+</op:operator> <lit:literal type="string" pos:line="377" pos:column="258">"/"</lit:literal> <op:operator pos:line="377" pos:column="262">+</op:operator> <name pos:line="377" pos:column="264">temp_url</name> <op:operator pos:line="377" pos:column="273">+</op:operator> <lit:literal type="string" pos:line="377" pos:column="275">"&lt;/a&gt;&lt;/td&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                        <expr_stmt><expr><call><name><name pos:line="378" pos:column="41">out</name><op:operator pos:line="378" pos:column="44">.</op:operator><name pos:line="378" pos:column="45">println</name></name><argument_list pos:line="378" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="378" pos:column="53">"&lt;/tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                        <expr_stmt><expr><call><name><name pos:line="379" pos:column="41">out</name><op:operator pos:line="379" pos:column="44">.</op:operator><name pos:line="379" pos:column="45">flush</name></name><argument_list pos:line="379" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
                                    }</block></then></if>
                                }</block></for>
                            }</block></then></if>
                        }</block></then></if>
                    }</block> <catch pos:line="384" pos:column="23">catch <parameter_list pos:line="384" pos:column="29">(<param><decl><type><name pos:line="384" pos:column="30">Exception</name></type> <name pos:line="384" pos:column="40">sqle</name></decl></param>)</parameter_list> <block pos:line="384" pos:column="46">{
                    }</block></catch></try>
                }</block></then> <else pos:line="386" pos:column="19">else <block pos:line="386" pos:column="24">{
                    <if pos:line="387" pos:column="21">if <condition pos:line="387" pos:column="24">(<expr><call><name><name pos:line="387" pos:column="25">config</name><op:operator pos:line="387" pos:column="31">.</op:operator><name pos:line="387" pos:column="32">isAllowPublisherList</name></name><argument_list pos:line="387" pos:column="52">()</argument_list></call></expr>)</condition><then pos:line="387" pos:column="55"> <block pos:line="387" pos:column="56">{
                        <expr_stmt><expr><call><name><name pos:line="388" pos:column="25">out</name><op:operator pos:line="388" pos:column="28">.</op:operator><name pos:line="388" pos:column="29">println</name></name><argument_list pos:line="388" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="388" pos:column="37">"&lt;tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="389" pos:column="25">out</name><op:operator pos:line="389" pos:column="28">.</op:operator><name pos:line="389" pos:column="29">println</name></name><argument_list pos:line="389" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="389" pos:column="37">"&lt;td class=\"text\" colspan=\"2\"&gt;&lt;a href=\"XincoPublisher?MainMenu=list&amp;list="</lit:literal> <op:operator pos:line="389" pos:column="117">+</op:operator> <call><name><name pos:line="389" pos:column="119">request</name><op:operator pos:line="389" pos:column="126">.</op:operator><name pos:line="389" pos:column="127">getParameter</name></name><argument_list pos:line="389" pos:column="139">(<argument><expr><lit:literal type="string" pos:line="389" pos:column="140">"list"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="389" pos:column="148">+</op:operator> <lit:literal type="string" pos:line="389" pos:column="150">"\" class=\"link\"&gt;"</lit:literal> <op:operator pos:line="389" pos:column="171">+</op:operator> <call><name><name pos:line="389" pos:column="173">rb</name><op:operator pos:line="389" pos:column="175">.</op:operator><name pos:line="389" pos:column="176">getString</name></name><argument_list pos:line="389" pos:column="185">(<argument><expr><lit:literal type="string" pos:line="389" pos:column="186">"message.xincopublisher.list"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="389" pos:column="217">+</op:operator> <lit:literal type="string" pos:line="389" pos:column="219">"&lt;/td&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="390" pos:column="25">out</name><op:operator pos:line="390" pos:column="28">.</op:operator><name pos:line="390" pos:column="29">println</name></name><argument_list pos:line="390" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="390" pos:column="37">"&lt;/tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if>
                    <expr_stmt><expr><call><name><name pos:line="392" pos:column="21">out</name><op:operator pos:line="392" pos:column="24">.</op:operator><name pos:line="392" pos:column="25">println</name></name><argument_list pos:line="392" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="392" pos:column="33">"&lt;tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="393" pos:column="21">out</name><op:operator pos:line="393" pos:column="24">.</op:operator><name pos:line="393" pos:column="25">println</name></name><argument_list pos:line="393" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="393" pos:column="33">"&lt;td class=\"text\" colspan=\"2\"&gt;&lt;a href=\"XincoPublisher?MainMenu=browse&amp;FolderId=1&amp;Path="</lit:literal> <op:operator pos:line="393" pos:column="126">+</op:operator> <op:operator pos:line="393" pos:column="128">(</op:operator><call><name><name pos:line="393" pos:column="129">Base64</name><op:operator pos:line="393" pos:column="135">.</op:operator><name pos:line="393" pos:column="136">encode</name></name><argument_list pos:line="393" pos:column="142">(<argument><expr><op:operator pos:line="393" pos:column="143">(</op:operator><op:operator pos:line="393" pos:column="144">new</op:operator> <call><name pos:line="393" pos:column="148">String</name><argument_list pos:line="393" pos:column="154">(<argument><expr><lit:literal type="string" pos:line="393" pos:column="155">"xincoRoot"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="393" pos:column="167">)</op:operator><op:operator pos:line="393" pos:column="168">.</op:operator><call><name pos:line="393" pos:column="169">getBytes</name><argument_list pos:line="393" pos:column="177">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="393" pos:column="180">)</op:operator> <op:operator pos:line="393" pos:column="182">+</op:operator> <lit:literal type="string" pos:line="393" pos:column="184">"&amp;list="</lit:literal> <op:operator pos:line="393" pos:column="193">+</op:operator> <call><name><name pos:line="393" pos:column="195">request</name><op:operator pos:line="393" pos:column="202">.</op:operator><name pos:line="393" pos:column="203">getParameter</name></name><argument_list pos:line="393" pos:column="215">(<argument><expr><lit:literal type="string" pos:line="393" pos:column="216">"list"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="393" pos:column="224">+</op:operator> <lit:literal type="string" pos:line="393" pos:column="226">"\" class=\"link\"&gt;"</lit:literal> <op:operator pos:line="393" pos:column="247">+</op:operator> <call><name><name pos:line="393" pos:column="249">rb</name><op:operator pos:line="393" pos:column="251">.</op:operator><name pos:line="393" pos:column="252">getString</name></name><argument_list pos:line="393" pos:column="261">(<argument><expr><lit:literal type="string" pos:line="393" pos:column="262">"message.xincopublisher.browse"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="393" pos:column="295">+</op:operator> <lit:literal type="string" pos:line="393" pos:column="297">"&lt;/td&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="394" pos:column="21">out</name><op:operator pos:line="394" pos:column="24">.</op:operator><name pos:line="394" pos:column="25">println</name></name><argument_list pos:line="394" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="394" pos:column="33">"&lt;/tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></else></if></else></if>
                <expr_stmt><expr><call><name><name pos:line="396" pos:column="17">out</name><op:operator pos:line="396" pos:column="20">.</op:operator><name pos:line="396" pos:column="21">println</name></name><argument_list pos:line="396" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="396" pos:column="29">"&lt;tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="397" pos:column="17">out</name><op:operator pos:line="397" pos:column="20">.</op:operator><name pos:line="397" pos:column="21">println</name></name><argument_list pos:line="397" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="397" pos:column="29">"&lt;td class=\"text\" colspan=\"2\"&gt;&amp;nbsp;&lt;br&gt;&lt;br&gt;&lt;/td&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="398" pos:column="17">out</name><op:operator pos:line="398" pos:column="20">.</op:operator><name pos:line="398" pos:column="21">println</name></name><argument_list pos:line="398" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="398" pos:column="29">"&lt;/tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="399" pos:column="17">out</name><op:operator pos:line="399" pos:column="20">.</op:operator><name pos:line="399" pos:column="21">println</name></name><argument_list pos:line="399" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="399" pos:column="29">"&lt;tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="400" pos:column="17">out</name><op:operator pos:line="400" pos:column="20">.</op:operator><name pos:line="400" pos:column="21">println</name></name><argument_list pos:line="400" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="400" pos:column="29">"&lt;td class=\"text\" colspan=\"2\"&gt;"</lit:literal> <op:operator pos:line="400" pos:column="65">+</op:operator> <call><name><name pos:line="400" pos:column="67">rb</name><op:operator pos:line="400" pos:column="69">.</op:operator><name pos:line="400" pos:column="70">getString</name></name><argument_list pos:line="400" pos:column="79">(<argument><expr><lit:literal type="string" pos:line="400" pos:column="80">"message.xincopublisher.howto"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="400" pos:column="112">+</op:operator> <lit:literal type="string" pos:line="400" pos:column="114">"&lt;/td&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="401" pos:column="17">out</name><op:operator pos:line="401" pos:column="20">.</op:operator><name pos:line="401" pos:column="21">println</name></name><argument_list pos:line="401" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="401" pos:column="29">"&lt;/tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="402" pos:column="17">out</name><op:operator pos:line="402" pos:column="20">.</op:operator><name pos:line="402" pos:column="21">println</name></name><argument_list pos:line="402" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="402" pos:column="29">"&lt;/table&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <if pos:line="404" pos:column="13">if <condition pos:line="404" pos:column="16">(<expr><name pos:line="404" pos:column="17">core_data_id</name> <op:operator pos:line="404" pos:column="30">&gt;</op:operator> <lit:literal type="number" pos:line="404" pos:column="32">0</lit:literal></expr>)</condition><then pos:line="404" pos:column="34"> <block pos:line="404" pos:column="35">{

                <expr_stmt><expr><call><name><name pos:line="406" pos:column="17">out</name><op:operator pos:line="406" pos:column="20">.</op:operator><name pos:line="406" pos:column="21">println</name></name><argument_list pos:line="406" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="406" pos:column="29">"&lt;br&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="407" pos:column="17">out</name><op:operator pos:line="407" pos:column="20">.</op:operator><name pos:line="407" pos:column="21">println</name></name><argument_list pos:line="407" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="407" pos:column="29">"&lt;table border=\"0\" cellspacing=\"10\" cellpadding=\"0\"&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="408" pos:column="17">out</name><op:operator pos:line="408" pos:column="20">.</op:operator><name pos:line="408" pos:column="21">println</name></name><argument_list pos:line="408" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="408" pos:column="29">"&lt;tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <comment type="line" pos:line="409" pos:column="17">//out.println("&lt;td class=\"text\"&gt;Designation:&lt;/td&gt;");</comment>
                <expr_stmt><expr><call><name><name pos:line="410" pos:column="17">out</name><op:operator pos:line="410" pos:column="20">.</op:operator><name pos:line="410" pos:column="21">println</name></name><argument_list pos:line="410" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="410" pos:column="29">"&lt;td class=\"bigtext\" colspan=\"2\"&gt;"</lit:literal> <op:operator pos:line="410" pos:column="68">+</op:operator> <call><name><name pos:line="410" pos:column="70">xcd</name><op:operator pos:line="410" pos:column="73">.</op:operator><name pos:line="410" pos:column="74">getDesignation</name></name><argument_list pos:line="410" pos:column="88">()</argument_list></call> <op:operator pos:line="410" pos:column="91">+</op:operator> <lit:literal type="string" pos:line="410" pos:column="93">"&lt;/td&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="411" pos:column="17">out</name><op:operator pos:line="411" pos:column="20">.</op:operator><name pos:line="411" pos:column="21">println</name></name><argument_list pos:line="411" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="411" pos:column="29">"&lt;/tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="412" pos:column="17">out</name><op:operator pos:line="412" pos:column="20">.</op:operator><name pos:line="412" pos:column="21">println</name></name><argument_list pos:line="412" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="412" pos:column="29">"&lt;tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="413" pos:column="17">out</name><op:operator pos:line="413" pos:column="20">.</op:operator><name pos:line="413" pos:column="21">println</name></name><argument_list pos:line="413" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="413" pos:column="29">"&lt;td class=\"text\" colspan=\"2\"&gt;&amp;nbsp;&lt;/td&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="414" pos:column="17">out</name><op:operator pos:line="414" pos:column="20">.</op:operator><name pos:line="414" pos:column="21">println</name></name><argument_list pos:line="414" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="414" pos:column="29">"&lt;/tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line" pos:line="416" pos:column="17">//print additional attributes</comment>
                <for pos:line="417" pos:column="17">for (<init><expr><name pos:line="417" pos:column="22">i</name> <op:operator pos:line="417" pos:column="24">=</op:operator> <lit:literal type="number" pos:line="417" pos:column="26">0</lit:literal></expr>;</init> <condition><expr><name pos:line="417" pos:column="29">i</name> <op:operator pos:line="417" pos:column="31">&lt;</op:operator> <call><name><name pos:line="417" pos:column="33">xcd</name><op:operator pos:line="417" pos:column="36">.</op:operator><name pos:line="417" pos:column="37">getXinco_add_attributes</name></name><argument_list pos:line="417" pos:column="60">()</argument_list></call><op:operator pos:line="417" pos:column="62">.</op:operator><call><name pos:line="417" pos:column="63">size</name><argument_list pos:line="417" pos:column="67">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="417" pos:column="71">i</name><op:operator pos:line="417" pos:column="72">++</op:operator></expr></incr>) <block pos:line="417" pos:column="76">{
                    <expr_stmt><expr><name pos:line="418" pos:column="21">xcdta</name> <op:operator pos:line="418" pos:column="27">=</op:operator> <op:operator pos:line="418" pos:column="29">(</op:operator><op:operator pos:line="418" pos:column="30">(</op:operator><name pos:line="418" pos:column="31">XincoCoreDataTypeAttribute</name><op:operator pos:line="418" pos:column="57">)</op:operator> <call><name><name pos:line="418" pos:column="59">xcd</name><op:operator pos:line="418" pos:column="62">.</op:operator><name pos:line="418" pos:column="63">getXinco_core_data_type</name></name><argument_list pos:line="418" pos:column="86">()</argument_list></call><op:operator pos:line="418" pos:column="88">.</op:operator><call><name pos:line="418" pos:column="89">getXinco_core_data_type_attributes</name><argument_list pos:line="418" pos:column="123">()</argument_list></call><op:operator pos:line="418" pos:column="125">.</op:operator><call><name pos:line="418" pos:column="126">elementAt</name><argument_list pos:line="418" pos:column="135">(<argument><expr><name pos:line="418" pos:column="136">i</name></expr></argument>)</argument_list></call><op:operator pos:line="418" pos:column="138">)</op:operator></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="419" pos:column="21">xaa</name> <op:operator pos:line="419" pos:column="25">=</op:operator> <op:operator pos:line="419" pos:column="27">(</op:operator><op:operator pos:line="419" pos:column="28">(</op:operator><name pos:line="419" pos:column="29">XincoAddAttribute</name><op:operator pos:line="419" pos:column="46">)</op:operator> <call><name><name pos:line="419" pos:column="48">xcd</name><op:operator pos:line="419" pos:column="51">.</op:operator><name pos:line="419" pos:column="52">getXinco_add_attributes</name></name><argument_list pos:line="419" pos:column="75">()</argument_list></call><op:operator pos:line="419" pos:column="77">.</op:operator><call><name pos:line="419" pos:column="78">elementAt</name><argument_list pos:line="419" pos:column="87">(<argument><expr><name pos:line="419" pos:column="88">i</name></expr></argument>)</argument_list></call><op:operator pos:line="419" pos:column="90">)</op:operator></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="420" pos:column="21">out</name><op:operator pos:line="420" pos:column="24">.</op:operator><name pos:line="420" pos:column="25">println</name></name><argument_list pos:line="420" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="420" pos:column="33">"&lt;tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="421" pos:column="21">out</name><op:operator pos:line="421" pos:column="24">.</op:operator><name pos:line="421" pos:column="25">println</name></name><argument_list pos:line="421" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="421" pos:column="33">"&lt;td class=\"text\" valign=\"top\"&gt;&lt;b&gt;"</lit:literal> <op:operator pos:line="421" pos:column="73">+</op:operator> <call><name><name pos:line="421" pos:column="75">xcdta</name><op:operator pos:line="421" pos:column="80">.</op:operator><name pos:line="421" pos:column="81">getDesignation</name></name><argument_list pos:line="421" pos:column="95">()</argument_list></call> <op:operator pos:line="421" pos:column="98">+</op:operator> <lit:literal type="string" pos:line="421" pos:column="100">":&lt;/b&gt;&lt;/td&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if pos:line="422" pos:column="21">if <condition pos:line="422" pos:column="24">(<expr><call><name><name pos:line="422" pos:column="25">xcdta</name><op:operator pos:line="422" pos:column="30">.</op:operator><name pos:line="422" pos:column="31">getData_type</name></name><argument_list pos:line="422" pos:column="43">()</argument_list></call><op:operator pos:line="422" pos:column="45">.</op:operator><call><name pos:line="422" pos:column="46">toLowerCase</name><argument_list pos:line="422" pos:column="57">()</argument_list></call><op:operator pos:line="422" pos:column="59">.</op:operator><call><name pos:line="422" pos:column="60">compareTo</name><argument_list pos:line="422" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="422" pos:column="70">"int"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="422" pos:column="77">==</op:operator> <lit:literal type="number" pos:line="422" pos:column="80">0</lit:literal></expr>)</condition><then pos:line="422" pos:column="82"> <block pos:line="422" pos:column="83">{
                        <expr_stmt><expr><call><name><name pos:line="423" pos:column="25">out</name><op:operator pos:line="423" pos:column="28">.</op:operator><name pos:line="423" pos:column="29">println</name></name><argument_list pos:line="423" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="423" pos:column="37">"&lt;td class=\"text\"&gt;&lt;pre&gt;"</lit:literal> <op:operator pos:line="423" pos:column="64">+</op:operator> <call><name><name pos:line="423" pos:column="66">xaa</name><op:operator pos:line="423" pos:column="69">.</op:operator><name pos:line="423" pos:column="70">getAttrib_int</name></name><argument_list pos:line="423" pos:column="83">()</argument_list></call> <op:operator pos:line="423" pos:column="86">+</op:operator> <lit:literal type="string" pos:line="423" pos:column="88">"&lt;/pre&gt;&lt;/td&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if>
                    <if pos:line="425" pos:column="21">if <condition pos:line="425" pos:column="24">(<expr><call><name><name pos:line="425" pos:column="25">xcdta</name><op:operator pos:line="425" pos:column="30">.</op:operator><name pos:line="425" pos:column="31">getData_type</name></name><argument_list pos:line="425" pos:column="43">()</argument_list></call><op:operator pos:line="425" pos:column="45">.</op:operator><call><name pos:line="425" pos:column="46">toLowerCase</name><argument_list pos:line="425" pos:column="57">()</argument_list></call><op:operator pos:line="425" pos:column="59">.</op:operator><call><name pos:line="425" pos:column="60">compareTo</name><argument_list pos:line="425" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="425" pos:column="70">"unsignedint"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="425" pos:column="85">==</op:operator> <lit:literal type="number" pos:line="425" pos:column="88">0</lit:literal></expr>)</condition><then pos:line="425" pos:column="90"> <block pos:line="425" pos:column="91">{
                        <expr_stmt><expr><call><name><name pos:line="426" pos:column="25">out</name><op:operator pos:line="426" pos:column="28">.</op:operator><name pos:line="426" pos:column="29">println</name></name><argument_list pos:line="426" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="426" pos:column="37">"&lt;td class=\"text\"&gt;&lt;pre&gt;"</lit:literal> <op:operator pos:line="426" pos:column="64">+</op:operator> <call><name><name pos:line="426" pos:column="66">xaa</name><op:operator pos:line="426" pos:column="69">.</op:operator><name pos:line="426" pos:column="70">getAttrib_unsignedint</name></name><argument_list pos:line="426" pos:column="91">()</argument_list></call> <op:operator pos:line="426" pos:column="94">+</op:operator> <lit:literal type="string" pos:line="426" pos:column="96">"&lt;/pre&gt;&lt;/td&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if>
                    <if pos:line="428" pos:column="21">if <condition pos:line="428" pos:column="24">(<expr><call><name><name pos:line="428" pos:column="25">xcdta</name><op:operator pos:line="428" pos:column="30">.</op:operator><name pos:line="428" pos:column="31">getData_type</name></name><argument_list pos:line="428" pos:column="43">()</argument_list></call><op:operator pos:line="428" pos:column="45">.</op:operator><call><name pos:line="428" pos:column="46">toLowerCase</name><argument_list pos:line="428" pos:column="57">()</argument_list></call><op:operator pos:line="428" pos:column="59">.</op:operator><call><name pos:line="428" pos:column="60">compareTo</name><argument_list pos:line="428" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="428" pos:column="70">"double"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="428" pos:column="80">==</op:operator> <lit:literal type="number" pos:line="428" pos:column="83">0</lit:literal></expr>)</condition><then pos:line="428" pos:column="85"> <block pos:line="428" pos:column="86">{
                        <expr_stmt><expr><call><name><name pos:line="429" pos:column="25">out</name><op:operator pos:line="429" pos:column="28">.</op:operator><name pos:line="429" pos:column="29">println</name></name><argument_list pos:line="429" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="429" pos:column="37">"&lt;td class=\"text\"&gt;&lt;pre&gt;"</lit:literal> <op:operator pos:line="429" pos:column="64">+</op:operator> <call><name><name pos:line="429" pos:column="66">xaa</name><op:operator pos:line="429" pos:column="69">.</op:operator><name pos:line="429" pos:column="70">getAttrib_double</name></name><argument_list pos:line="429" pos:column="86">()</argument_list></call> <op:operator pos:line="429" pos:column="89">+</op:operator> <lit:literal type="string" pos:line="429" pos:column="91">"&lt;/pre&gt;&lt;/td&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if>
                    <if pos:line="431" pos:column="21">if <condition pos:line="431" pos:column="24">(<expr><call><name><name pos:line="431" pos:column="25">xcdta</name><op:operator pos:line="431" pos:column="30">.</op:operator><name pos:line="431" pos:column="31">getData_type</name></name><argument_list pos:line="431" pos:column="43">()</argument_list></call><op:operator pos:line="431" pos:column="45">.</op:operator><call><name pos:line="431" pos:column="46">toLowerCase</name><argument_list pos:line="431" pos:column="57">()</argument_list></call><op:operator pos:line="431" pos:column="59">.</op:operator><call><name pos:line="431" pos:column="60">compareTo</name><argument_list pos:line="431" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="431" pos:column="70">"varchar"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="431" pos:column="81">==</op:operator> <lit:literal type="number" pos:line="431" pos:column="84">0</lit:literal></expr>)</condition><then pos:line="431" pos:column="86"> <block pos:line="431" pos:column="87">{
                        <expr_stmt><expr><call><name><name pos:line="432" pos:column="25">out</name><op:operator pos:line="432" pos:column="28">.</op:operator><name pos:line="432" pos:column="29">println</name></name><argument_list pos:line="432" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="432" pos:column="37">"&lt;td class=\"text\"&gt;&lt;pre&gt;"</lit:literal> <op:operator pos:line="432" pos:column="64">+</op:operator> <call><name><name pos:line="432" pos:column="66">xaa</name><op:operator pos:line="432" pos:column="69">.</op:operator><name pos:line="432" pos:column="70">getAttrib_varchar</name></name><argument_list pos:line="432" pos:column="87">()</argument_list></call> <op:operator pos:line="432" pos:column="90">+</op:operator> <lit:literal type="string" pos:line="432" pos:column="92">"&lt;/pre&gt;&lt;/td&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if>
                    <if pos:line="434" pos:column="21">if <condition pos:line="434" pos:column="24">(<expr><call><name><name pos:line="434" pos:column="25">xcdta</name><op:operator pos:line="434" pos:column="30">.</op:operator><name pos:line="434" pos:column="31">getData_type</name></name><argument_list pos:line="434" pos:column="43">()</argument_list></call><op:operator pos:line="434" pos:column="45">.</op:operator><call><name pos:line="434" pos:column="46">toLowerCase</name><argument_list pos:line="434" pos:column="57">()</argument_list></call><op:operator pos:line="434" pos:column="59">.</op:operator><call><name pos:line="434" pos:column="60">compareTo</name><argument_list pos:line="434" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="434" pos:column="70">"text"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="434" pos:column="78">==</op:operator> <lit:literal type="number" pos:line="434" pos:column="81">0</lit:literal></expr>)</condition><then pos:line="434" pos:column="83"> <block pos:line="434" pos:column="84">{
                        <expr_stmt><expr><call><name><name pos:line="435" pos:column="25">out</name><op:operator pos:line="435" pos:column="28">.</op:operator><name pos:line="435" pos:column="29">println</name></name><argument_list pos:line="435" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="435" pos:column="37">"&lt;td class=\"text\"&gt;&lt;pre&gt;"</lit:literal> <op:operator pos:line="435" pos:column="64">+</op:operator> <call><name><name pos:line="435" pos:column="66">xaa</name><op:operator pos:line="435" pos:column="69">.</op:operator><name pos:line="435" pos:column="70">getAttrib_text</name></name><argument_list pos:line="435" pos:column="84">()</argument_list></call> <op:operator pos:line="435" pos:column="87">+</op:operator> <lit:literal type="string" pos:line="435" pos:column="89">"&lt;/pre&gt;&lt;/td&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if>
                    <if pos:line="437" pos:column="21">if <condition pos:line="437" pos:column="24">(<expr><call><name><name pos:line="437" pos:column="25">xcdta</name><op:operator pos:line="437" pos:column="30">.</op:operator><name pos:line="437" pos:column="31">getData_type</name></name><argument_list pos:line="437" pos:column="43">()</argument_list></call><op:operator pos:line="437" pos:column="45">.</op:operator><call><name pos:line="437" pos:column="46">toLowerCase</name><argument_list pos:line="437" pos:column="57">()</argument_list></call><op:operator pos:line="437" pos:column="59">.</op:operator><call><name pos:line="437" pos:column="60">compareTo</name><argument_list pos:line="437" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="437" pos:column="70">"datetime"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="437" pos:column="82">==</op:operator> <lit:literal type="number" pos:line="437" pos:column="85">0</lit:literal></expr>)</condition><then pos:line="437" pos:column="87"> <block pos:line="437" pos:column="88">{
                        <expr_stmt><expr><call><name><name pos:line="438" pos:column="25">out</name><op:operator pos:line="438" pos:column="28">.</op:operator><name pos:line="438" pos:column="29">println</name></name><argument_list pos:line="438" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="438" pos:column="37">"&lt;td class=\"text\"&gt;&lt;pre&gt;"</lit:literal> <op:operator pos:line="438" pos:column="64">+</op:operator> <call><name><name pos:line="438" pos:column="66">xaa</name><op:operator pos:line="438" pos:column="69">.</op:operator><name pos:line="438" pos:column="70">getAttrib_datetime</name></name><argument_list pos:line="438" pos:column="88">()</argument_list></call> <op:operator pos:line="438" pos:column="91">+</op:operator> <lit:literal type="string" pos:line="438" pos:column="93">"&lt;/pre&gt;&lt;/td&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if>
                    <expr_stmt><expr><call><name><name pos:line="440" pos:column="21">out</name><op:operator pos:line="440" pos:column="24">.</op:operator><name pos:line="440" pos:column="25">println</name></name><argument_list pos:line="440" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="440" pos:column="33">"&lt;/tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></for>

                <expr_stmt><expr><call><name><name pos:line="443" pos:column="17">out</name><op:operator pos:line="443" pos:column="20">.</op:operator><name pos:line="443" pos:column="21">println</name></name><argument_list pos:line="443" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="443" pos:column="29">"&lt;/table&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            }</block></then></if>

            <comment type="line" pos:line="447" pos:column="13">//show footer</comment>
            <if pos:line="448" pos:column="13">if <condition pos:line="448" pos:column="16">(<expr><name pos:line="448" pos:column="17">core_data_id</name> <op:operator pos:line="448" pos:column="30">==</op:operator> <lit:literal type="number" pos:line="448" pos:column="33">0</lit:literal></expr>)</condition><then pos:line="448" pos:column="35"> <block pos:line="448" pos:column="36">{
                <expr_stmt><expr><call><name><name pos:line="449" pos:column="17">out</name><op:operator pos:line="449" pos:column="20">.</op:operator><name pos:line="449" pos:column="21">println</name></name><argument_list pos:line="449" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="449" pos:column="29">"&lt;br&gt;&lt;br&gt;&lt;br&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="450" pos:column="17">out</name><op:operator pos:line="450" pos:column="20">.</op:operator><name pos:line="450" pos:column="21">println</name></name><argument_list pos:line="450" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="450" pos:column="29">"&lt;table border=\"0\" cellspacing=\"10\" cellpadding=\"0\"&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="451" pos:column="17">out</name><op:operator pos:line="451" pos:column="20">.</op:operator><name pos:line="451" pos:column="21">println</name></name><argument_list pos:line="451" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="451" pos:column="29">"&lt;tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="452" pos:column="17">out</name><op:operator pos:line="452" pos:column="20">.</op:operator><name pos:line="452" pos:column="21">println</name></name><argument_list pos:line="452" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="452" pos:column="29">"&lt;td class=\"text\"&gt;&amp;nbsp;&lt;/td&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="453" pos:column="17">out</name><op:operator pos:line="453" pos:column="20">.</op:operator><name pos:line="453" pos:column="21">println</name></name><argument_list pos:line="453" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="453" pos:column="29">"&lt;td class=\"text\"&gt;&amp;copy; "</lit:literal> <op:operator pos:line="453" pos:column="58">+</op:operator> <call><name><name pos:line="453" pos:column="60">rb</name><op:operator pos:line="453" pos:column="62">.</op:operator><name pos:line="453" pos:column="63">getString</name></name><argument_list pos:line="453" pos:column="72">(<argument><expr><lit:literal type="string" pos:line="453" pos:column="73">"general.copyright.date"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="453" pos:column="99">+</op:operator> <lit:literal type="string" pos:line="453" pos:column="101">", "</lit:literal>
                        <op:operator pos:line="454" pos:column="25">+</op:operator> <comment type="line" pos:line="454" pos:column="27">//Avoid external links if general.setting.allowoutsidelinks is set to false</comment>
                        <comment type="line" pos:line="455" pos:column="25">//Security bug</comment>
                        <op:operator pos:line="456" pos:column="25">(</op:operator><call><name><name pos:line="456" pos:column="26">DBM</name><op:operator pos:line="456" pos:column="29">.</op:operator><name pos:line="456" pos:column="30">config</name><op:operator pos:line="456" pos:column="36">.</op:operator><name pos:line="456" pos:column="37">isAllowOutsideLinks</name></name><argument_list pos:line="456" pos:column="56">()</argument_list></call> <op:operator pos:line="456" pos:column="59">?</op:operator> <call><name><name pos:line="456" pos:column="61">rb</name><op:operator pos:line="456" pos:column="63">.</op:operator><name pos:line="456" pos:column="64">getString</name></name><argument_list pos:line="456" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="456" pos:column="74">"message.admin.main.footer"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="456" pos:column="103">:</op:operator> <lit:literal type="string" pos:line="456" pos:column="105">"blueCubs.com and xinco.org"</lit:literal><op:operator pos:line="456" pos:column="133">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="457" pos:column="17">out</name><op:operator pos:line="457" pos:column="20">.</op:operator><name pos:line="457" pos:column="21">println</name></name><argument_list pos:line="457" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="457" pos:column="29">"&lt;/tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="458" pos:column="17">out</name><op:operator pos:line="458" pos:column="20">.</op:operator><name pos:line="458" pos:column="21">println</name></name><argument_list pos:line="458" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="458" pos:column="29">"&lt;/table&gt;&lt;tr&gt;&lt;form action='menu.jsp'&gt;&lt;input type='submit' value='"</lit:literal>
                        <op:operator pos:line="459" pos:column="25">+</op:operator> <call><name><name pos:line="459" pos:column="27">rb</name><op:operator pos:line="459" pos:column="29">.</op:operator><name pos:line="459" pos:column="30">getString</name></name><argument_list pos:line="459" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="459" pos:column="40">"message.admin.main.backtomain"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="459" pos:column="73">+</op:operator> <lit:literal type="string" pos:line="459" pos:column="75">"' /&gt;"</lit:literal>
                        <op:operator pos:line="460" pos:column="25">+</op:operator> <lit:literal type="string" pos:line="460" pos:column="27">"&lt;input type='hidden' name='list' value='"</lit:literal> <op:operator pos:line="460" pos:column="70">+</op:operator> <call><name><name pos:line="460" pos:column="72">request</name><op:operator pos:line="460" pos:column="79">.</op:operator><name pos:line="460" pos:column="80">getParameter</name></name><argument_list pos:line="460" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="460" pos:column="93">"list"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="460" pos:column="101">+</op:operator> <lit:literal type="string" pos:line="460" pos:column="103">"'/&gt;&lt;/form&gt;&lt;/tr&gt;"</lit:literal>
                        <op:operator pos:line="461" pos:column="25">+</op:operator> <lit:literal type="string" pos:line="461" pos:column="27">"&lt;tr&gt;&lt;FORM&gt;&lt;INPUT TYPE='button' VALUE='"</lit:literal> <op:operator pos:line="461" pos:column="68">+</op:operator> <call><name><name pos:line="461" pos:column="70">rb</name><op:operator pos:line="461" pos:column="72">.</op:operator><name pos:line="461" pos:column="73">getString</name></name><argument_list pos:line="461" pos:column="82">(<argument><expr><lit:literal type="string" pos:line="461" pos:column="83">"message.admin.main.back"</lit:literal></expr></argument>)</argument_list></call>
                        <op:operator pos:line="462" pos:column="25">+</op:operator> <lit:literal type="string" pos:line="462" pos:column="27">"' onClick='history.go(-1);return true;'&gt;&lt;input type='hidden' name='list' value='"</lit:literal>
                        <op:operator pos:line="463" pos:column="25">+</op:operator> <call><name><name pos:line="463" pos:column="27">request</name><op:operator pos:line="463" pos:column="34">.</op:operator><name pos:line="463" pos:column="35">getParameter</name></name><argument_list pos:line="463" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="463" pos:column="48">"list"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="463" pos:column="56">+</op:operator> <lit:literal type="string" pos:line="463" pos:column="58">"'/&gt;&lt;/FORM&gt;&lt;/tr&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>

            <expr_stmt><expr><call><name><name pos:line="466" pos:column="13">out</name><op:operator pos:line="466" pos:column="16">.</op:operator><name pos:line="466" pos:column="17">println</name></name><argument_list pos:line="466" pos:column="24">(<argument><expr><lit:literal type="string" pos:line="466" pos:column="25">"&lt;/span&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="467" pos:column="13">out</name><op:operator pos:line="467" pos:column="16">.</op:operator><name pos:line="467" pos:column="17">println</name></name><argument_list pos:line="467" pos:column="24">(<argument><expr><lit:literal type="string" pos:line="467" pos:column="25">"&lt;/center&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="468" pos:column="13">out</name><op:operator pos:line="468" pos:column="16">.</op:operator><name pos:line="468" pos:column="17">println</name></name><argument_list pos:line="468" pos:column="24">(<argument><expr><lit:literal type="string" pos:line="468" pos:column="25">"&lt;/body&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="469" pos:column="13">out</name><op:operator pos:line="469" pos:column="16">.</op:operator><name pos:line="469" pos:column="17">println</name></name><argument_list pos:line="469" pos:column="24">(<argument><expr><lit:literal type="string" pos:line="469" pos:column="25">"&lt;/html&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="471" pos:column="13">out</name><op:operator pos:line="471" pos:column="16">.</op:operator><name pos:line="471" pos:column="17">close</name></name><argument_list pos:line="471" pos:column="22">()</argument_list></call></expr>;</expr_stmt>

        }</block></else></if> <comment type="line" pos:line="473" pos:column="11">//end HTML output</comment>

        <comment type="line" pos:line="475" pos:column="9">//close db connection</comment>
        <try pos:line="476" pos:column="9">try <block pos:line="476" pos:column="13">{
            <expr_stmt><expr><call><name><name pos:line="477" pos:column="13">DBM</name><op:operator pos:line="477" pos:column="16">.</op:operator><name pos:line="477" pos:column="17">con</name><op:operator pos:line="477" pos:column="20">.</op:operator><name pos:line="477" pos:column="21">close</name></name><argument_list pos:line="477" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
        }</block> <catch pos:line="478" pos:column="11">catch <parameter_list pos:line="478" pos:column="17">(<param><decl><type><name pos:line="478" pos:column="18">Exception</name></type> <name pos:line="478" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="478" pos:column="31">{
        }</block></catch></try>

    }</block></function>

    <comment type="block" format="javadoc" pos:line="483" pos:column="5">/** Handles the HTTP &lt;code&gt;GET&lt;/code&gt; method.
     * @param request servlet request
     * @param response servlet response
     * @throws javax.servlet.ServletException
     * @throws java.io.IOException
     */</comment>
    <function><type><annotation pos:line="489" pos:column="5">@<name pos:line="489" pos:column="6">Override</name></annotation>
    <specifier pos:line="490" pos:column="5">protected</specifier> <name pos:line="490" pos:column="15">void</name></type> <name pos:line="490" pos:column="20">doGet</name><parameter_list pos:line="490" pos:column="25">(<param><decl><type><name pos:line="490" pos:column="26">HttpServletRequest</name></type> <name pos:line="490" pos:column="45">request</name></decl></param>, <param><decl><type><name pos:line="490" pos:column="54">HttpServletResponse</name></type> <name pos:line="490" pos:column="74">response</name></decl></param>)</parameter_list>
            <throws pos:line="491" pos:column="13">throws <argument><expr><name pos:line="491" pos:column="20">ServletException</name></expr></argument>, <argument><expr><name pos:line="491" pos:column="38">IOException</name></expr></argument></throws> <block pos:line="491" pos:column="50">{
        <expr_stmt><expr><call><name pos:line="492" pos:column="9">processRequest</name><argument_list pos:line="492" pos:column="23">(<argument><expr><name pos:line="492" pos:column="24">request</name></expr></argument>, <argument><expr><name pos:line="492" pos:column="33">response</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="block" format="javadoc" pos:line="495" pos:column="5">/** Handles the HTTP &lt;code&gt;POST&lt;/code&gt; method.
     * @param request servlet request
     * @param response servlet response
     * @throws javax.servlet.ServletException
     * @throws java.io.IOException
     */</comment>
    <function><type><annotation pos:line="501" pos:column="5">@<name pos:line="501" pos:column="6">Override</name></annotation>
    <specifier pos:line="502" pos:column="5">protected</specifier> <name pos:line="502" pos:column="15">void</name></type> <name pos:line="502" pos:column="20">doPost</name><parameter_list pos:line="502" pos:column="26">(<param><decl><type><name pos:line="502" pos:column="27">HttpServletRequest</name></type> <name pos:line="502" pos:column="46">request</name></decl></param>, <param><decl><type><name pos:line="502" pos:column="55">HttpServletResponse</name></type> <name pos:line="502" pos:column="75">response</name></decl></param>)</parameter_list>
            <throws pos:line="503" pos:column="13">throws <argument><expr><name pos:line="503" pos:column="20">ServletException</name></expr></argument>, <argument><expr><name pos:line="503" pos:column="38">IOException</name></expr></argument></throws> <block pos:line="503" pos:column="50">{
        <expr_stmt><expr><call><name pos:line="504" pos:column="9">processRequest</name><argument_list pos:line="504" pos:column="23">(<argument><expr><name pos:line="504" pos:column="24">request</name></expr></argument>, <argument><expr><name pos:line="504" pos:column="33">response</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="block" format="javadoc" pos:line="507" pos:column="5">/** Returns a short description of the servlet.
     * @return
     */</comment>
    <function><type><annotation pos:line="510" pos:column="5">@<name pos:line="510" pos:column="6">Override</name></annotation>
    <specifier pos:line="511" pos:column="5">public</specifier> <name pos:line="511" pos:column="12">String</name></type> <name pos:line="511" pos:column="19">getServletInfo</name><parameter_list pos:line="511" pos:column="33">()</parameter_list> <block pos:line="511" pos:column="36">{
        <return pos:line="512" pos:column="9">return <expr><lit:literal type="string" pos:line="512" pos:column="16">"Servlet of xinco"</lit:literal></expr>;</return>
    }</block></function>
}</block></class>
</unit>
