<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\SE-project\testcode\RiskIt\src\com\riskIt\ui\MenuChoices.java" pos:tabs="8"><package pos:line="1" pos:column="1">package <name><name pos:line="1" pos:column="9">com</name><op:operator pos:line="1" pos:column="12">.</op:operator><name pos:line="1" pos:column="13">riskIt</name><op:operator pos:line="1" pos:column="19">.</op:operator><name pos:line="1" pos:column="20">ui</name></name>;</package>

<import pos:line="3" pos:column="1">import <name><name pos:line="3" pos:column="8">java</name><op:operator pos:line="3" pos:column="12">.</op:operator><name pos:line="3" pos:column="13">util</name><op:operator pos:line="3" pos:column="17">.</op:operator><name pos:line="3" pos:column="18">Scanner</name></name>;</import>
<import pos:line="4" pos:column="1">import <name><name pos:line="4" pos:column="8">com</name><op:operator pos:line="4" pos:column="11">.</op:operator><name pos:line="4" pos:column="12">riskIt</name><op:operator pos:line="4" pos:column="18">.</op:operator><name pos:line="4" pos:column="19">controller</name></name>.*;</import>
<import pos:line="5" pos:column="1">import <name><name pos:line="5" pos:column="8">com</name><op:operator pos:line="5" pos:column="11">.</op:operator><name pos:line="5" pos:column="12">riskIt</name><op:operator pos:line="5" pos:column="18">.</op:operator><name pos:line="5" pos:column="19">util</name><op:operator pos:line="5" pos:column="23">.</op:operator><name pos:line="5" pos:column="24">Factory</name></name>;</import>
<import pos:line="6" pos:column="1">import <name><name pos:line="6" pos:column="8">com</name><op:operator pos:line="6" pos:column="11">.</op:operator><name pos:line="6" pos:column="12">riskIt</name><op:operator pos:line="6" pos:column="18">.</op:operator><name pos:line="6" pos:column="19">util</name></name>.*;</import>

<class><specifier pos:line="8" pos:column="1">public</specifier> class <name pos:line="8" pos:column="14">MenuChoices</name>
<block pos:line="9" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="10" pos:column="9">private</specifier> <name pos:line="10" pos:column="17">UserManager</name></type> <name pos:line="10" pos:column="29">user</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="11" pos:column="9">private</specifier> <name pos:line="11" pos:column="17">AgentManager</name></type> <name pos:line="11" pos:column="30">agent</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="12" pos:column="9">private</specifier> <name pos:line="12" pos:column="17">Scanner</name></type> <name pos:line="12" pos:column="25">in</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="13" pos:column="9">private</specifier> <name pos:line="13" pos:column="17">AccessorMethods</name></type> <name pos:line="13" pos:column="33">acc</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="14" pos:column="9">private</specifier> <name pos:line="14" pos:column="17">SubMenuChoices</name></type> <name pos:line="14" pos:column="32">subMenu</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="15" pos:column="5">private</specifier> <name pos:line="15" pos:column="13">SubMenuChoices19_24</name></type> <name pos:line="15" pos:column="33">subMenu19To24</name></decl>;</decl_stmt>

	<constructor><specifier pos:line="17" pos:column="9">public</specifier> <name pos:line="17" pos:column="16">MenuChoices</name><parameter_list pos:line="17" pos:column="27">()</parameter_list>
	<block pos:line="18" pos:column="9">{
		<expr_stmt><expr><name pos:line="19" pos:column="17">user</name> <op:operator pos:line="19" pos:column="22">=</op:operator> <op:operator pos:line="19" pos:column="24">new</op:operator> <call><name pos:line="19" pos:column="28">UserManager</name><argument_list pos:line="19" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="20" pos:column="17">agent</name> <op:operator pos:line="20" pos:column="23">=</op:operator> <op:operator pos:line="20" pos:column="25">new</op:operator> <call><name pos:line="20" pos:column="29">AgentManager</name><argument_list pos:line="20" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">acc</name>  <op:operator pos:line="21" pos:column="22">=</op:operator> <op:operator pos:line="21" pos:column="24">new</op:operator> <call><name pos:line="21" pos:column="28">AccessorMethods</name><argument_list pos:line="21" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">in</name> <op:operator pos:line="22" pos:column="20">=</op:operator> <op:operator pos:line="22" pos:column="22">new</op:operator> <call><name pos:line="22" pos:column="26">Scanner</name><argument_list pos:line="22" pos:column="33">(<argument><expr><name><name pos:line="22" pos:column="34">System</name><op:operator pos:line="22" pos:column="40">.</op:operator><name pos:line="22" pos:column="41">in</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="23" pos:column="17">subMenu</name> <op:operator pos:line="23" pos:column="25">=</op:operator> <op:operator pos:line="23" pos:column="27">new</op:operator> <call><name pos:line="23" pos:column="31">SubMenuChoices</name><argument_list pos:line="23" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="24" pos:column="9">subMenu19To24</name> <op:operator pos:line="24" pos:column="23">=</op:operator> <op:operator pos:line="24" pos:column="25">new</op:operator> <call><name pos:line="24" pos:column="29">SubMenuChoices19_24</name><argument_list pos:line="24" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
	}</block></constructor>

	<comment type="block" format="javadoc" pos:line="27" pos:column="9">/**
	 * This method creates the main menu and accepts the user input.
	 * Depending on the input choice, the particular method is called.
	 */</comment>
	<function><type><specifier pos:line="31" pos:column="9">public</specifier> <name pos:line="31" pos:column="16">void</name></type> <name pos:line="31" pos:column="21">mainMenu</name><parameter_list pos:line="31" pos:column="29">()</parameter_list>
	<block pos:line="32" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="33" pos:column="17">String</name></type> <name pos:line="33" pos:column="24">getInput</name><init pos:line="33" pos:column="32">=<expr><lit:literal type="string" pos:line="33" pos:column="33">""</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="34" pos:column="17">int</name></type> <name pos:line="34" pos:column="21">choice</name> <init pos:line="34" pos:column="28">= <expr><lit:literal type="number" pos:line="34" pos:column="30">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="35" pos:column="17">int</name></type> <name pos:line="35" pos:column="21">ind</name> <init pos:line="35" pos:column="25">= <expr><lit:literal type="number" pos:line="35" pos:column="27">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="36" pos:column="17">int</name></type> <name pos:line="36" pos:column="21">occ</name> <init pos:line="36" pos:column="25">= <expr><lit:literal type="number" pos:line="36" pos:column="27">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="37" pos:column="17">String</name></type> <name pos:line="37" pos:column="24">zip</name> <init pos:line="37" pos:column="28">=<expr><lit:literal type="string" pos:line="37" pos:column="29">""</lit:literal></expr></init></decl>;</decl_stmt>

		<comment type="line" pos:line="39" pos:column="17">//print the main menu and get user choice</comment>
		<do pos:line="40" pos:column="17">do
		<block pos:line="41" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="42" pos:column="25">System</name><op:operator pos:line="42" pos:column="31">.</op:operator><name pos:line="42" pos:column="32">out</name><op:operator pos:line="42" pos:column="35">.</op:operator><name pos:line="42" pos:column="36">println</name></name><argument_list pos:line="42" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="42" pos:column="44">"\t\t MAIN MENU"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="43" pos:column="25">System</name><op:operator pos:line="43" pos:column="31">.</op:operator><name pos:line="43" pos:column="32">out</name><op:operator pos:line="43" pos:column="35">.</op:operator><name pos:line="43" pos:column="36">println</name></name><argument_list pos:line="43" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="43" pos:column="44">"01. Select a user to calculate SCORE."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="44" pos:column="25">System</name><op:operator pos:line="44" pos:column="31">.</op:operator><name pos:line="44" pos:column="32">out</name><op:operator pos:line="44" pos:column="35">.</op:operator><name pos:line="44" pos:column="36">println</name></name><argument_list pos:line="44" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="44" pos:column="44">"02. Functionality for browsing and selecting users."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="45" pos:column="25">System</name><op:operator pos:line="45" pos:column="31">.</op:operator><name pos:line="45" pos:column="32">out</name><op:operator pos:line="45" pos:column="35">.</op:operator><name pos:line="45" pos:column="36">println</name></name><argument_list pos:line="45" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="45" pos:column="44">"03. Send invitations to users."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="46" pos:column="25">System</name><op:operator pos:line="46" pos:column="31">.</op:operator><name pos:line="46" pos:column="32">out</name><op:operator pos:line="46" pos:column="35">.</op:operator><name pos:line="46" pos:column="36">println</name></name><argument_list pos:line="46" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="46" pos:column="44">"04. Create a new user."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="47" pos:column="25">System</name><op:operator pos:line="47" pos:column="31">.</op:operator><name pos:line="47" pos:column="32">out</name><op:operator pos:line="47" pos:column="35">.</op:operator><name pos:line="47" pos:column="36">println</name></name><argument_list pos:line="47" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="47" pos:column="44">"05. Browse user properties."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="48" pos:column="25">System</name><op:operator pos:line="48" pos:column="31">.</op:operator><name pos:line="48" pos:column="32">out</name><op:operator pos:line="48" pos:column="35">.</op:operator><name pos:line="48" pos:column="36">println</name></name><argument_list pos:line="48" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="48" pos:column="44">"06. Calculate unemployment rate for a given state."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="49" pos:column="25">System</name><op:operator pos:line="49" pos:column="31">.</op:operator><name pos:line="49" pos:column="32">out</name><op:operator pos:line="49" pos:column="35">.</op:operator><name pos:line="49" pos:column="36">println</name></name><argument_list pos:line="49" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="49" pos:column="44">"07. Average weekly wage for a given state based on "</lit:literal> <op:operator pos:line="49" pos:column="98">+</op:operator>
									<lit:literal type="string" pos:line="50" pos:column="73">"occupationcode or industrycode "</lit:literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="51" pos:column="25">System</name><op:operator pos:line="51" pos:column="31">.</op:operator><name pos:line="51" pos:column="32">out</name><op:operator pos:line="51" pos:column="35">.</op:operator><name pos:line="51" pos:column="36">println</name></name><argument_list pos:line="51" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="51" pos:column="44">"08. Estimate a persons income based on "</lit:literal> <op:operator pos:line="51" pos:column="88">+</op:operator>
									<lit:literal type="string" pos:line="52" pos:column="73">"his work weeks, weekly wage, and investment income."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="53" pos:column="25">System</name><op:operator pos:line="53" pos:column="31">.</op:operator><name pos:line="53" pos:column="32">out</name><op:operator pos:line="53" pos:column="35">.</op:operator><name pos:line="53" pos:column="36">println</name></name><argument_list pos:line="53" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="53" pos:column="44">"09. Calculate average income for a given state."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="54" pos:column="25">System</name><op:operator pos:line="54" pos:column="31">.</op:operator><name pos:line="54" pos:column="32">out</name><op:operator pos:line="54" pos:column="35">.</op:operator><name pos:line="54" pos:column="36">println</name></name><argument_list pos:line="54" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="54" pos:column="44">"10. Calculate average income for a given"</lit:literal>
								<op:operator pos:line="55" pos:column="65">+</op:operator> <lit:literal type="string" pos:line="55" pos:column="67">" occupation or industry category."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="56" pos:column="25">System</name><op:operator pos:line="56" pos:column="31">.</op:operator><name pos:line="56" pos:column="32">out</name><op:operator pos:line="56" pos:column="35">.</op:operator><name pos:line="56" pos:column="36">println</name></name><argument_list pos:line="56" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="56" pos:column="44">"11. Calculate average income for each race."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="57" pos:column="25">System</name><op:operator pos:line="57" pos:column="31">.</op:operator><name pos:line="57" pos:column="32">out</name><op:operator pos:line="57" pos:column="35">.</op:operator><name pos:line="57" pos:column="36">println</name></name><argument_list pos:line="57" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="57" pos:column="44">"12. Calculate average income for each education level."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="58" pos:column="25">System</name><op:operator pos:line="58" pos:column="31">.</op:operator><name pos:line="58" pos:column="32">out</name><op:operator pos:line="58" pos:column="35">.</op:operator><name pos:line="58" pos:column="36">println</name></name><argument_list pos:line="58" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="58" pos:column="44">"13. Update \'wage\' table, \'meanWeekWage\' field with "</lit:literal>
									<op:operator pos:line="59" pos:column="73">+</op:operator> <lit:literal type="string" pos:line="59" pos:column="75">"average Weekly wage for a given occupation code"</lit:literal>
									<op:operator pos:line="60" pos:column="73">+</op:operator> <lit:literal type="string" pos:line="60" pos:column="75">" and industry code."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="61" pos:column="25">System</name><op:operator pos:line="61" pos:column="31">.</op:operator><name pos:line="61" pos:column="32">out</name><op:operator pos:line="61" pos:column="35">.</op:operator><name pos:line="61" pos:column="36">println</name></name><argument_list pos:line="61" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="61" pos:column="44">"14. Update user information according various "</lit:literal>
								<op:operator pos:line="62" pos:column="65">+</op:operator> <lit:literal type="string" pos:line="62" pos:column="67">"life events, such as moving, changing, getting or "</lit:literal>
								<op:operator pos:line="63" pos:column="65">+</op:operator> <lit:literal type="string" pos:line="63" pos:column="67">"losing jobs."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="64" pos:column="25">System</name><op:operator pos:line="64" pos:column="31">.</op:operator><name pos:line="64" pos:column="32">out</name><op:operator pos:line="64" pos:column="35">.</op:operator><name pos:line="64" pos:column="36">println</name></name><argument_list pos:line="64" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="64" pos:column="44">"15. Update \'wage\' table when people change get or loose jobs"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="65" pos:column="25">System</name><op:operator pos:line="65" pos:column="31">.</op:operator><name pos:line="65" pos:column="32">out</name><op:operator pos:line="65" pos:column="35">.</op:operator><name pos:line="65" pos:column="36">println</name></name><argument_list pos:line="65" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="65" pos:column="44">"16. Update \'Industry\' and \'Occupation\' table stability value "</lit:literal>
									<op:operator pos:line="66" pos:column="73">+</op:operator> <lit:literal type="string" pos:line="66" pos:column="75">" when too many people loose or get jobs in certain area "</lit:literal>
									<op:operator pos:line="67" pos:column="73">+</op:operator> <lit:literal type="string" pos:line="67" pos:column="75">"in a short period of time"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="68" pos:column="25">System</name><op:operator pos:line="68" pos:column="31">.</op:operator><name pos:line="68" pos:column="32">out</name><op:operator pos:line="68" pos:column="35">.</op:operator><name pos:line="68" pos:column="36">println</name></name><argument_list pos:line="68" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="68" pos:column="44">"17. For given a state, list top five occupation category. "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="69" pos:column="25">System</name><op:operator pos:line="69" pos:column="31">.</op:operator><name pos:line="69" pos:column="32">out</name><op:operator pos:line="69" pos:column="35">.</op:operator><name pos:line="69" pos:column="36">println</name></name><argument_list pos:line="69" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="69" pos:column="44">"18. For given a state, list top five industry category."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="70" pos:column="25">System</name><op:operator pos:line="70" pos:column="31">.</op:operator><name pos:line="70" pos:column="32">out</name><op:operator pos:line="70" pos:column="35">.</op:operator><name pos:line="70" pos:column="36">println</name></name><argument_list pos:line="70" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="70" pos:column="44">"19. For given an occupation category or occupation code, "</lit:literal>
									<op:operator pos:line="71" pos:column="73">+</op:operator> <lit:literal type="string" pos:line="71" pos:column="75">"list the top 5 states that have the most workers"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="72" pos:column="25">System</name><op:operator pos:line="72" pos:column="31">.</op:operator><name pos:line="72" pos:column="32">out</name><op:operator pos:line="72" pos:column="35">.</op:operator><name pos:line="72" pos:column="36">println</name></name><argument_list pos:line="72" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="72" pos:column="44">"20. For given an industry category or industrial code, "</lit:literal>
									<op:operator pos:line="73" pos:column="73">+</op:operator> <lit:literal type="string" pos:line="73" pos:column="75">"list the top 5 states that have the most workers"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="74" pos:column="25">System</name><op:operator pos:line="74" pos:column="31">.</op:operator><name pos:line="74" pos:column="32">out</name><op:operator pos:line="74" pos:column="35">.</op:operator><name pos:line="74" pos:column="36">println</name></name><argument_list pos:line="74" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="74" pos:column="44">"21. Given a user record, recommend best state to work."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="75" pos:column="25">System</name><op:operator pos:line="75" pos:column="31">.</op:operator><name pos:line="75" pos:column="32">out</name><op:operator pos:line="75" pos:column="35">.</op:operator><name pos:line="75" pos:column="36">println</name></name><argument_list pos:line="75" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="75" pos:column="44">"22. Compute average education for a given occupation or industry"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="76" pos:column="25">System</name><op:operator pos:line="76" pos:column="31">.</op:operator><name pos:line="76" pos:column="32">out</name><op:operator pos:line="76" pos:column="35">.</op:operator><name pos:line="76" pos:column="36">println</name></name><argument_list pos:line="76" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="76" pos:column="44">"23. List occupations/industries with workers having highest (and lowest) education."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="77" pos:column="25">System</name><op:operator pos:line="77" pos:column="31">.</op:operator><name pos:line="77" pos:column="32">out</name><op:operator pos:line="77" pos:column="35">.</op:operator><name pos:line="77" pos:column="36">println</name></name><argument_list pos:line="77" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="77" pos:column="44">"24. Calculate the \'likeliness to move factor\' for a person."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="78" pos:column="25">System</name><op:operator pos:line="78" pos:column="31">.</op:operator><name pos:line="78" pos:column="32">out</name><op:operator pos:line="78" pos:column="35">.</op:operator><name pos:line="78" pos:column="36">println</name></name><argument_list pos:line="78" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="78" pos:column="44">"0. Exit"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="80" pos:column="25">System</name><op:operator pos:line="80" pos:column="31">.</op:operator><name pos:line="80" pos:column="32">out</name><op:operator pos:line="80" pos:column="35">.</op:operator><name pos:line="80" pos:column="36">print</name></name><argument_list pos:line="80" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="80" pos:column="42">"Enter your choice : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="81" pos:column="25">getInput</name> <op:operator pos:line="81" pos:column="34">=</op:operator> <call><name><name pos:line="81" pos:column="36">in</name><op:operator pos:line="81" pos:column="38">.</op:operator><name pos:line="81" pos:column="39">nextLine</name></name><argument_list pos:line="81" pos:column="47">()</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="83" pos:column="25">//check to see if input is right</comment>
			<expr_stmt><expr><name pos:line="84" pos:column="25">choice</name> <op:operator pos:line="84" pos:column="32">=</op:operator> <call><name><name pos:line="84" pos:column="34">acc</name><op:operator pos:line="84" pos:column="37">.</op:operator><name pos:line="84" pos:column="38">checkLetterDigit</name></name><argument_list pos:line="84" pos:column="54">(<argument><expr><name pos:line="84" pos:column="55">getInput</name></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="65">RiskItConstants</name><op:operator pos:line="84" pos:column="80">.</op:operator><name pos:line="84" pos:column="81">MAIN_INVALID</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="86" pos:column="25">//depending on the choice select the method</comment>
			<switch pos:line="87" pos:column="25">switch<condition pos:line="87" pos:column="31">(<expr><name pos:line="87" pos:column="32">choice</name></expr>)</condition>
			<block pos:line="88" pos:column="25">{
			<case pos:line="89" pos:column="25">case <expr><lit:literal type="number" pos:line="89" pos:column="30">1</lit:literal></expr>:
					<comment type="line" pos:line="90" pos:column="41">//get ssn of the customer and print the score value</comment>
					<expr_stmt><expr><call><name><name pos:line="91" pos:column="41">System</name><op:operator pos:line="91" pos:column="47">.</op:operator><name pos:line="91" pos:column="48">out</name><op:operator pos:line="91" pos:column="51">.</op:operator><name pos:line="91" pos:column="52">print</name></name><argument_list pos:line="91" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="91" pos:column="58">"Enter SSN of the customer to calculate SCORE : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="92" pos:column="41">getInput</name> <op:operator pos:line="92" pos:column="50">=</op:operator> <call><name><name pos:line="92" pos:column="52">in</name><op:operator pos:line="92" pos:column="54">.</op:operator><name pos:line="92" pos:column="55">nextLine</name></name><argument_list pos:line="92" pos:column="63">()</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="93" pos:column="41">long</name></type> <name pos:line="93" pos:column="46">userSSN</name> <init pos:line="93" pos:column="54">= <expr><call><name><name pos:line="93" pos:column="56">Integer</name><op:operator pos:line="93" pos:column="63">.</op:operator><name pos:line="93" pos:column="64">parseInt</name></name><argument_list pos:line="93" pos:column="72">(<argument><expr><name pos:line="93" pos:column="73">getInput</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="94" pos:column="41">double</name></type> <name pos:line="94" pos:column="48">score</name> <init pos:line="94" pos:column="54">= <expr><call><name><name pos:line="94" pos:column="56">agent</name><op:operator pos:line="94" pos:column="61">.</op:operator><name pos:line="94" pos:column="62">calculateScore</name></name><argument_list pos:line="94" pos:column="76">(<argument><expr><name pos:line="94" pos:column="77">userSSN</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="95" pos:column="41">System</name><op:operator pos:line="95" pos:column="47">.</op:operator><name pos:line="95" pos:column="48">out</name><op:operator pos:line="95" pos:column="51">.</op:operator><name pos:line="95" pos:column="52">println</name></name><argument_list pos:line="95" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="95" pos:column="60">"------------------------------------------"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="96" pos:column="41">System</name><op:operator pos:line="96" pos:column="47">.</op:operator><name pos:line="96" pos:column="48">out</name><op:operator pos:line="96" pos:column="51">.</op:operator><name pos:line="96" pos:column="52">println</name></name><argument_list pos:line="96" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="96" pos:column="60">"The score for customer with SSN : "</lit:literal> <op:operator pos:line="96" pos:column="97">+</op:operator> <name pos:line="96" pos:column="99">userSSN</name>
											<op:operator pos:line="97" pos:column="89">+</op:operator> <lit:literal type="string" pos:line="97" pos:column="91">" is : "</lit:literal> <op:operator pos:line="97" pos:column="100">+</op:operator> <name pos:line="97" pos:column="102">score</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="98" pos:column="41">System</name><op:operator pos:line="98" pos:column="47">.</op:operator><name pos:line="98" pos:column="48">out</name><op:operator pos:line="98" pos:column="51">.</op:operator><name pos:line="98" pos:column="52">println</name></name><argument_list pos:line="98" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="98" pos:column="60">"------------------------------------------"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break pos:line="99" pos:column="41">break;</break>
			</case><case pos:line="100" pos:column="25">case <expr><lit:literal type="number" pos:line="100" pos:column="30">2</lit:literal></expr>:
				<comment type="line" pos:line="101" pos:column="33">//call method to print UI for the user-properties</comment>
					<expr_stmt><expr><call><name><name pos:line="102" pos:column="41">subMenu</name><op:operator pos:line="102" pos:column="48">.</op:operator><name pos:line="102" pos:column="49">browseUserByChoice</name></name><argument_list pos:line="102" pos:column="67">()</argument_list></call></expr>;</expr_stmt>
					<break pos:line="103" pos:column="41">break;</break>
			</case><case pos:line="104" pos:column="25">case <expr><lit:literal type="number" pos:line="104" pos:column="30">3</lit:literal></expr>:
				<comment type="line" pos:line="105" pos:column="33">//print UI to choose either agent or customer</comment>
					<expr_stmt><expr><call><name><name pos:line="106" pos:column="41">subMenu</name><op:operator pos:line="106" pos:column="48">.</op:operator><name pos:line="106" pos:column="49">AgentAndUser</name></name><argument_list pos:line="106" pos:column="61">()</argument_list></call></expr>;</expr_stmt>
					<break pos:line="107" pos:column="41">break;</break>
			</case><case pos:line="108" pos:column="25">case <expr><lit:literal type="number" pos:line="108" pos:column="30">4</lit:literal></expr>:
				<comment type="line" pos:line="109" pos:column="33">//print UI to accept inputs to create new customer</comment>
					<expr_stmt><expr><call><name><name pos:line="110" pos:column="41">subMenu</name><op:operator pos:line="110" pos:column="48">.</op:operator><name pos:line="110" pos:column="49">inputForCreateUser</name></name><argument_list pos:line="110" pos:column="67">()</argument_list></call></expr>;</expr_stmt>
					<break pos:line="111" pos:column="41">break;</break>
			</case><case pos:line="112" pos:column="25">case <expr><lit:literal type="number" pos:line="112" pos:column="30">5</lit:literal></expr>:
				<comment type="line" pos:line="113" pos:column="33">//print UI to filter out user properties and print result</comment>
					<expr_stmt><expr><call><name><name pos:line="114" pos:column="41">subMenu</name><op:operator pos:line="114" pos:column="48">.</op:operator><name pos:line="114" pos:column="49">inputForbrowseUserProperties</name></name><argument_list pos:line="114" pos:column="77">()</argument_list></call></expr>;</expr_stmt>
					<break pos:line="115" pos:column="41">break;</break>
			</case><case pos:line="116" pos:column="25">case <expr><lit:literal type="number" pos:line="116" pos:column="30">6</lit:literal></expr>:
					<comment type="line" pos:line="117" pos:column="41">//accept name of state and store it as upper case</comment>
					<expr_stmt><expr><call><name><name pos:line="118" pos:column="41">System</name><op:operator pos:line="118" pos:column="47">.</op:operator><name pos:line="118" pos:column="48">out</name><op:operator pos:line="118" pos:column="51">.</op:operator><name pos:line="118" pos:column="52">print</name></name><argument_list pos:line="118" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="118" pos:column="58">"Enter the name of State : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="119" pos:column="41">String</name></type> <name pos:line="119" pos:column="48">stateName</name> <init pos:line="119" pos:column="58">= <expr><call><name><name pos:line="119" pos:column="60">in</name><op:operator pos:line="119" pos:column="62">.</op:operator><name pos:line="119" pos:column="63">nextLine</name></name><argument_list pos:line="119" pos:column="71">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><name pos:line="120" pos:column="41">stateName</name> <op:operator pos:line="120" pos:column="51">=</op:operator> <call><name><name pos:line="120" pos:column="53">stateName</name><op:operator pos:line="120" pos:column="62">.</op:operator><name pos:line="120" pos:column="63">toUpperCase</name></name><argument_list pos:line="120" pos:column="74">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="121" pos:column="41">System</name><op:operator pos:line="121" pos:column="47">.</op:operator><name pos:line="121" pos:column="48">out</name><op:operator pos:line="121" pos:column="51">.</op:operator><name pos:line="121" pos:column="52">println</name></name><argument_list pos:line="121" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="121" pos:column="60">"------------------------------------------"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="122" pos:column="41">user</name><op:operator pos:line="122" pos:column="45">.</op:operator><name pos:line="122" pos:column="46">calculateUnEmploymentRate</name></name><argument_list pos:line="122" pos:column="71">(<argument><expr><name pos:line="122" pos:column="72">stateName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="123" pos:column="41">System</name><op:operator pos:line="123" pos:column="47">.</op:operator><name pos:line="123" pos:column="48">out</name><op:operator pos:line="123" pos:column="51">.</op:operator><name pos:line="123" pos:column="52">println</name></name><argument_list pos:line="123" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="123" pos:column="60">"------------------------------------------"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break pos:line="124" pos:column="41">break;</break>
			</case><case pos:line="125" pos:column="25">case <expr><lit:literal type="number" pos:line="125" pos:column="30">7</lit:literal></expr>:
					<expr_stmt><expr><call><name><name pos:line="126" pos:column="41">Factory</name><op:operator pos:line="126" pos:column="48">.</op:operator><name pos:line="126" pos:column="49">getWeeklyWageForCategories</name></name><argument_list pos:line="126" pos:column="75">()</argument_list></call><op:operator pos:line="126" pos:column="77">.</op:operator><call><name pos:line="126" pos:column="78">start</name><argument_list pos:line="126" pos:column="83">()</argument_list></call></expr>;</expr_stmt>
					<break pos:line="127" pos:column="41">break;</break>
			</case><case pos:line="128" pos:column="25">case <expr><lit:literal type="number" pos:line="128" pos:column="30">8</lit:literal></expr>:
					<expr_stmt><expr><call><name><name pos:line="129" pos:column="41">Factory</name><op:operator pos:line="129" pos:column="48">.</op:operator><name pos:line="129" pos:column="49">getEstimateIncomeGUI</name></name><argument_list pos:line="129" pos:column="69">()</argument_list></call><op:operator pos:line="129" pos:column="71">.</op:operator><call><name pos:line="129" pos:column="72">start</name><argument_list pos:line="129" pos:column="77">()</argument_list></call></expr>;</expr_stmt>
					<break pos:line="130" pos:column="41">break;</break>
			</case><case pos:line="131" pos:column="25">case <expr><lit:literal type="number" pos:line="131" pos:column="30">9</lit:literal></expr>:
					<expr_stmt><expr><call><name><name pos:line="132" pos:column="41">Factory</name><op:operator pos:line="132" pos:column="48">.</op:operator><name pos:line="132" pos:column="49">getIncomeByState</name></name><argument_list pos:line="132" pos:column="65">()</argument_list></call><op:operator pos:line="132" pos:column="67">.</op:operator><call><name pos:line="132" pos:column="68">start</name><argument_list pos:line="132" pos:column="73">()</argument_list></call></expr>;</expr_stmt>
					<break pos:line="133" pos:column="41">break;</break>
			</case><case pos:line="134" pos:column="25">case <expr><lit:literal type="number" pos:line="134" pos:column="30">10</lit:literal></expr>:
					<expr_stmt><expr><call><name><name pos:line="135" pos:column="41">Factory</name><op:operator pos:line="135" pos:column="48">.</op:operator><name pos:line="135" pos:column="49">getIncomeByOccupationOrIndustryCode</name></name><argument_list pos:line="135" pos:column="84">()</argument_list></call><op:operator pos:line="135" pos:column="86">.</op:operator><call><name pos:line="135" pos:column="87">start</name><argument_list pos:line="135" pos:column="92">()</argument_list></call></expr>;</expr_stmt>
					<break pos:line="136" pos:column="41">break;</break>
			</case><case pos:line="137" pos:column="25">case <expr><lit:literal type="number" pos:line="137" pos:column="30">11</lit:literal></expr>:
					<expr_stmt><expr><call><name><name pos:line="138" pos:column="41">Factory</name><op:operator pos:line="138" pos:column="48">.</op:operator><name pos:line="138" pos:column="49">getIncomeByRace</name></name><argument_list pos:line="138" pos:column="64">()</argument_list></call><op:operator pos:line="138" pos:column="66">.</op:operator><call><name pos:line="138" pos:column="67">start</name><argument_list pos:line="138" pos:column="72">()</argument_list></call></expr>;</expr_stmt>
					<break pos:line="139" pos:column="41">break;</break>
			</case><case pos:line="140" pos:column="25">case <expr><lit:literal type="number" pos:line="140" pos:column="30">12</lit:literal></expr>:
					<expr_stmt><expr><call><name><name pos:line="141" pos:column="41">Factory</name><op:operator pos:line="141" pos:column="48">.</op:operator><name pos:line="141" pos:column="49">getIncomeByEducation</name></name><argument_list pos:line="141" pos:column="69">()</argument_list></call><op:operator pos:line="141" pos:column="71">.</op:operator><call><name pos:line="141" pos:column="72">start</name><argument_list pos:line="141" pos:column="77">()</argument_list></call></expr>;</expr_stmt>
					<break pos:line="142" pos:column="41">break;</break>
			</case><case pos:line="143" pos:column="25">case <expr><lit:literal type="number" pos:line="143" pos:column="30">13</lit:literal></expr>:
				<try pos:line="144" pos:column="33">try<block pos:line="144" pos:column="36">{
				<expr_stmt><expr><call><name><name pos:line="145" pos:column="33">System</name><op:operator pos:line="145" pos:column="39">.</op:operator><name pos:line="145" pos:column="40">out</name><op:operator pos:line="145" pos:column="43">.</op:operator><name pos:line="145" pos:column="44">print</name></name><argument_list pos:line="145" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="145" pos:column="50">"Enter industrycode "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="146" pos:column="33">getInput</name> <op:operator pos:line="146" pos:column="42">=</op:operator> <call><name><name pos:line="146" pos:column="44">in</name><op:operator pos:line="146" pos:column="46">.</op:operator><name pos:line="146" pos:column="47">nextLine</name></name><argument_list pos:line="146" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="147" pos:column="33">ind</name> <op:operator pos:line="147" pos:column="37">=</op:operator> <call><name><name pos:line="147" pos:column="39">Integer</name><op:operator pos:line="147" pos:column="46">.</op:operator><name pos:line="147" pos:column="47">parseInt</name></name><argument_list pos:line="147" pos:column="55">(<argument><expr><name pos:line="147" pos:column="56">getInput</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="148" pos:column="33">System</name><op:operator pos:line="148" pos:column="39">.</op:operator><name pos:line="148" pos:column="40">out</name><op:operator pos:line="148" pos:column="43">.</op:operator><name pos:line="148" pos:column="44">print</name></name><argument_list pos:line="148" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="148" pos:column="50">"Enter occupationcode "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="149" pos:column="33">getInput</name> <op:operator pos:line="149" pos:column="42">=</op:operator> <call><name><name pos:line="149" pos:column="44">in</name><op:operator pos:line="149" pos:column="46">.</op:operator><name pos:line="149" pos:column="47">nextLine</name></name><argument_list pos:line="149" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="150" pos:column="33">occ</name> <op:operator pos:line="150" pos:column="37">=</op:operator> <call><name><name pos:line="150" pos:column="39">Integer</name><op:operator pos:line="150" pos:column="46">.</op:operator><name pos:line="150" pos:column="47">parseInt</name></name><argument_list pos:line="150" pos:column="55">(<argument><expr><name pos:line="150" pos:column="56">getInput</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="151" pos:column="33">user</name><op:operator pos:line="151" pos:column="37">.</op:operator><name pos:line="151" pos:column="38">updatewagetable</name></name><argument_list pos:line="151" pos:column="53">(<argument><expr><name pos:line="151" pos:column="54">ind</name></expr></argument>,<argument><expr><name pos:line="151" pos:column="58">occ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block><catch pos:line="152" pos:column="34">catch<parameter_list pos:line="152" pos:column="39">(<param><decl><type><name pos:line="152" pos:column="40">NumberFormatException</name></type> <name pos:line="152" pos:column="62">e</name></decl></param>)</parameter_list><block pos:line="152" pos:column="64">{
					<expr_stmt><expr><call><name><name pos:line="153" pos:column="41">System</name><op:operator pos:line="153" pos:column="47">.</op:operator><name pos:line="153" pos:column="48">out</name><op:operator pos:line="153" pos:column="51">.</op:operator><name pos:line="153" pos:column="52">println</name></name><argument_list pos:line="153" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="153" pos:column="60">"Enter Right number"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
				<break pos:line="155" pos:column="33">break;</break>
			</case><case pos:line="156" pos:column="25">case <expr><lit:literal type="number" pos:line="156" pos:column="30">14</lit:literal></expr>:
				<try pos:line="157" pos:column="33">try<block pos:line="157" pos:column="36">{
				<expr_stmt><expr><call><name><name pos:line="158" pos:column="33">System</name><op:operator pos:line="158" pos:column="39">.</op:operator><name pos:line="158" pos:column="40">out</name><op:operator pos:line="158" pos:column="43">.</op:operator><name pos:line="158" pos:column="44">print</name></name><argument_list pos:line="158" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="158" pos:column="50">"Enter ssn number"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="159" pos:column="33">getInput</name> <op:operator pos:line="159" pos:column="42">=</op:operator> <call><name><name pos:line="159" pos:column="44">in</name><op:operator pos:line="159" pos:column="46">.</op:operator><name pos:line="159" pos:column="47">nextLine</name></name><argument_list pos:line="159" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="160" pos:column="33">userSSN</name> <op:operator pos:line="160" pos:column="41">=</op:operator> <call><name><name pos:line="160" pos:column="43">Integer</name><op:operator pos:line="160" pos:column="50">.</op:operator><name pos:line="160" pos:column="51">parseInt</name></name><argument_list pos:line="160" pos:column="59">(<argument><expr><name pos:line="160" pos:column="60">getInput</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="161" pos:column="33">System</name><op:operator pos:line="161" pos:column="39">.</op:operator><name pos:line="161" pos:column="40">out</name><op:operator pos:line="161" pos:column="43">.</op:operator><name pos:line="161" pos:column="44">print</name></name><argument_list pos:line="161" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="161" pos:column="50">"Enter industrycode "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="162" pos:column="33">getInput</name> <op:operator pos:line="162" pos:column="42">=</op:operator> <call><name><name pos:line="162" pos:column="44">in</name><op:operator pos:line="162" pos:column="46">.</op:operator><name pos:line="162" pos:column="47">nextLine</name></name><argument_list pos:line="162" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="163" pos:column="33">ind</name> <op:operator pos:line="163" pos:column="37">=</op:operator> <call><name><name pos:line="163" pos:column="39">Integer</name><op:operator pos:line="163" pos:column="46">.</op:operator><name pos:line="163" pos:column="47">parseInt</name></name><argument_list pos:line="163" pos:column="55">(<argument><expr><name pos:line="163" pos:column="56">getInput</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="164" pos:column="33">System</name><op:operator pos:line="164" pos:column="39">.</op:operator><name pos:line="164" pos:column="40">out</name><op:operator pos:line="164" pos:column="43">.</op:operator><name pos:line="164" pos:column="44">print</name></name><argument_list pos:line="164" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="164" pos:column="50">"Enter occupationcode "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="165" pos:column="33">getInput</name> <op:operator pos:line="165" pos:column="42">=</op:operator> <call><name><name pos:line="165" pos:column="44">in</name><op:operator pos:line="165" pos:column="46">.</op:operator><name pos:line="165" pos:column="47">nextLine</name></name><argument_list pos:line="165" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="166" pos:column="33">occ</name> <op:operator pos:line="166" pos:column="37">=</op:operator> <call><name><name pos:line="166" pos:column="39">Integer</name><op:operator pos:line="166" pos:column="46">.</op:operator><name pos:line="166" pos:column="47">parseInt</name></name><argument_list pos:line="166" pos:column="55">(<argument><expr><name pos:line="166" pos:column="56">getInput</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="167" pos:column="33">user</name><op:operator pos:line="167" pos:column="37">.</op:operator><name pos:line="167" pos:column="38">userinformation</name></name><argument_list pos:line="167" pos:column="53">(<argument><expr><name pos:line="167" pos:column="54">userSSN</name></expr></argument>,<argument><expr><name pos:line="167" pos:column="62">ind</name></expr></argument>,<argument><expr><name pos:line="167" pos:column="66">occ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block><catch pos:line="168" pos:column="26">catch<parameter_list pos:line="168" pos:column="31">(<param><decl><type><name pos:line="168" pos:column="32">NumberFormatException</name></type> <name pos:line="168" pos:column="54">e</name></decl></param>)</parameter_list><block pos:line="168" pos:column="56">{
				<expr_stmt><expr><call><name><name pos:line="169" pos:column="33">System</name><op:operator pos:line="169" pos:column="39">.</op:operator><name pos:line="169" pos:column="40">out</name><op:operator pos:line="169" pos:column="43">.</op:operator><name pos:line="169" pos:column="44">println</name></name><argument_list pos:line="169" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="169" pos:column="52">"Enter Right number"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></catch></try>
				<break pos:line="171" pos:column="33">break;</break>
			</case><case pos:line="172" pos:column="25">case <expr><lit:literal type="number" pos:line="172" pos:column="30">15</lit:literal></expr>:
				<try pos:line="173" pos:column="33">try<block pos:line="173" pos:column="36">{
				<expr_stmt><expr><call><name><name pos:line="174" pos:column="33">System</name><op:operator pos:line="174" pos:column="39">.</op:operator><name pos:line="174" pos:column="40">out</name><op:operator pos:line="174" pos:column="43">.</op:operator><name pos:line="174" pos:column="44">print</name></name><argument_list pos:line="174" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="174" pos:column="50">"Enter ssn number"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="175" pos:column="33">getInput</name> <op:operator pos:line="175" pos:column="42">=</op:operator> <call><name><name pos:line="175" pos:column="44">in</name><op:operator pos:line="175" pos:column="46">.</op:operator><name pos:line="175" pos:column="47">nextLine</name></name><argument_list pos:line="175" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="176" pos:column="33">userSSN</name> <op:operator pos:line="176" pos:column="41">=</op:operator> <call><name><name pos:line="176" pos:column="43">Integer</name><op:operator pos:line="176" pos:column="50">.</op:operator><name pos:line="176" pos:column="51">parseInt</name></name><argument_list pos:line="176" pos:column="59">(<argument><expr><name pos:line="176" pos:column="60">getInput</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="177" pos:column="33">System</name><op:operator pos:line="177" pos:column="39">.</op:operator><name pos:line="177" pos:column="40">out</name><op:operator pos:line="177" pos:column="43">.</op:operator><name pos:line="177" pos:column="44">print</name></name><argument_list pos:line="177" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="177" pos:column="50">"Enter industrycode "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="178" pos:column="33">getInput</name> <op:operator pos:line="178" pos:column="42">=</op:operator> <call><name><name pos:line="178" pos:column="44">in</name><op:operator pos:line="178" pos:column="46">.</op:operator><name pos:line="178" pos:column="47">nextLine</name></name><argument_list pos:line="178" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="179" pos:column="33">ind</name> <op:operator pos:line="179" pos:column="37">=</op:operator> <call><name><name pos:line="179" pos:column="39">Integer</name><op:operator pos:line="179" pos:column="46">.</op:operator><name pos:line="179" pos:column="47">parseInt</name></name><argument_list pos:line="179" pos:column="55">(<argument><expr><name pos:line="179" pos:column="56">getInput</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="180" pos:column="33">System</name><op:operator pos:line="180" pos:column="39">.</op:operator><name pos:line="180" pos:column="40">out</name><op:operator pos:line="180" pos:column="43">.</op:operator><name pos:line="180" pos:column="44">print</name></name><argument_list pos:line="180" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="180" pos:column="50">"Enter occupationcode "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="181" pos:column="33">getInput</name> <op:operator pos:line="181" pos:column="42">=</op:operator> <call><name><name pos:line="181" pos:column="44">in</name><op:operator pos:line="181" pos:column="46">.</op:operator><name pos:line="181" pos:column="47">nextLine</name></name><argument_list pos:line="181" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="182" pos:column="33">occ</name> <op:operator pos:line="182" pos:column="37">=</op:operator> <call><name><name pos:line="182" pos:column="39">Integer</name><op:operator pos:line="182" pos:column="46">.</op:operator><name pos:line="182" pos:column="47">parseInt</name></name><argument_list pos:line="182" pos:column="55">(<argument><expr><name pos:line="182" pos:column="56">getInput</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="183" pos:column="33">user</name><op:operator pos:line="183" pos:column="37">.</op:operator><name pos:line="183" pos:column="38">updatetable</name></name><argument_list pos:line="183" pos:column="49">(<argument><expr><name pos:line="183" pos:column="50">userSSN</name></expr></argument>,<argument><expr><name pos:line="183" pos:column="58">ind</name></expr></argument>,<argument><expr><name pos:line="183" pos:column="62">occ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block><catch pos:line="184" pos:column="34">catch<parameter_list pos:line="184" pos:column="39">(<param><decl><type><name pos:line="184" pos:column="40">NumberFormatException</name></type> <name pos:line="184" pos:column="62">e</name></decl></param>)</parameter_list><block pos:line="184" pos:column="64">{
					<expr_stmt><expr><call><name><name pos:line="185" pos:column="41">System</name><op:operator pos:line="185" pos:column="47">.</op:operator><name pos:line="185" pos:column="48">out</name><op:operator pos:line="185" pos:column="51">.</op:operator><name pos:line="185" pos:column="52">println</name></name><argument_list pos:line="185" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="185" pos:column="60">"Enter Right number"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
				<break pos:line="187" pos:column="33">break;</break>
			</case><case pos:line="188" pos:column="25">case <expr><lit:literal type="number" pos:line="188" pos:column="30">16</lit:literal></expr>:
				<expr_stmt><expr><call><name><name pos:line="189" pos:column="33">System</name><op:operator pos:line="189" pos:column="39">.</op:operator><name pos:line="189" pos:column="40">out</name><op:operator pos:line="189" pos:column="43">.</op:operator><name pos:line="189" pos:column="44">print</name></name><argument_list pos:line="189" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="189" pos:column="50">"Enter zip number"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="190" pos:column="33">zip</name> <op:operator pos:line="190" pos:column="37">=</op:operator> <call><name><name pos:line="190" pos:column="39">in</name><op:operator pos:line="190" pos:column="41">.</op:operator><name pos:line="190" pos:column="42">nextLine</name></name><argument_list pos:line="190" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
				<try pos:line="191" pos:column="33">try<block pos:line="191" pos:column="36">{
				<expr_stmt><expr><call><name><name pos:line="192" pos:column="33">System</name><op:operator pos:line="192" pos:column="39">.</op:operator><name pos:line="192" pos:column="40">out</name><op:operator pos:line="192" pos:column="43">.</op:operator><name pos:line="192" pos:column="44">print</name></name><argument_list pos:line="192" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="192" pos:column="50">"Enter industrycode "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="193" pos:column="33">getInput</name> <op:operator pos:line="193" pos:column="42">=</op:operator> <call><name><name pos:line="193" pos:column="44">in</name><op:operator pos:line="193" pos:column="46">.</op:operator><name pos:line="193" pos:column="47">nextLine</name></name><argument_list pos:line="193" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="194" pos:column="33">ind</name> <op:operator pos:line="194" pos:column="37">=</op:operator> <call><name><name pos:line="194" pos:column="39">Integer</name><op:operator pos:line="194" pos:column="46">.</op:operator><name pos:line="194" pos:column="47">parseInt</name></name><argument_list pos:line="194" pos:column="55">(<argument><expr><name pos:line="194" pos:column="56">getInput</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="195" pos:column="33">System</name><op:operator pos:line="195" pos:column="39">.</op:operator><name pos:line="195" pos:column="40">out</name><op:operator pos:line="195" pos:column="43">.</op:operator><name pos:line="195" pos:column="44">print</name></name><argument_list pos:line="195" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="195" pos:column="50">"Enter occupationcode "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="196" pos:column="33">getInput</name> <op:operator pos:line="196" pos:column="42">=</op:operator> <call><name><name pos:line="196" pos:column="44">in</name><op:operator pos:line="196" pos:column="46">.</op:operator><name pos:line="196" pos:column="47">nextLine</name></name><argument_list pos:line="196" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="197" pos:column="33">occ</name> <op:operator pos:line="197" pos:column="37">=</op:operator> <call><name><name pos:line="197" pos:column="39">Integer</name><op:operator pos:line="197" pos:column="46">.</op:operator><name pos:line="197" pos:column="47">parseInt</name></name><argument_list pos:line="197" pos:column="55">(<argument><expr><name pos:line="197" pos:column="56">getInput</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="198" pos:column="33">user</name><op:operator pos:line="198" pos:column="37">.</op:operator><name pos:line="198" pos:column="38">updatestability</name></name><argument_list pos:line="198" pos:column="53">(<argument><expr><name pos:line="198" pos:column="54">zip</name></expr></argument>,<argument><expr><name pos:line="198" pos:column="58">ind</name></expr></argument>,<argument><expr><name pos:line="198" pos:column="62">occ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block><catch pos:line="199" pos:column="34">catch<parameter_list pos:line="199" pos:column="39">(<param><decl><type><name pos:line="199" pos:column="40">NumberFormatException</name></type> <name pos:line="199" pos:column="62">e</name></decl></param>)</parameter_list><block pos:line="199" pos:column="64">{
					<expr_stmt><expr><call><name><name pos:line="200" pos:column="41">System</name><op:operator pos:line="200" pos:column="47">.</op:operator><name pos:line="200" pos:column="48">out</name><op:operator pos:line="200" pos:column="51">.</op:operator><name pos:line="200" pos:column="52">println</name></name><argument_list pos:line="200" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="200" pos:column="60">"Enter Right number"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
				<break pos:line="202" pos:column="33">break;</break>
			</case><case pos:line="203" pos:column="25">case <expr><lit:literal type="number" pos:line="203" pos:column="30">17</lit:literal></expr>:
				<expr_stmt><expr><call><name><name pos:line="204" pos:column="33">System</name><op:operator pos:line="204" pos:column="39">.</op:operator><name pos:line="204" pos:column="40">out</name><op:operator pos:line="204" pos:column="43">.</op:operator><name pos:line="204" pos:column="44">print</name></name><argument_list pos:line="204" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="204" pos:column="50">"Enter the name of the state"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="205" pos:column="33">String</name></type> <name pos:line="205" pos:column="40">state</name> <init pos:line="205" pos:column="46">= <expr><call><name><name pos:line="205" pos:column="48">in</name><op:operator pos:line="205" pos:column="50">.</op:operator><name pos:line="205" pos:column="51">nextLine</name></name><argument_list pos:line="205" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name pos:line="206" pos:column="33">state</name> <op:operator pos:line="206" pos:column="39">=</op:operator> <call><name><name pos:line="206" pos:column="41">state</name><op:operator pos:line="206" pos:column="46">.</op:operator><name pos:line="206" pos:column="47">toUpperCase</name></name><argument_list pos:line="206" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="207" pos:column="33">user</name><op:operator pos:line="207" pos:column="37">.</op:operator> <name pos:line="207" pos:column="39">FindTopOccupationCode</name></name><argument_list pos:line="207" pos:column="60">(<argument><expr><name pos:line="207" pos:column="61">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break pos:line="208" pos:column="33">break;</break>
			</case><case pos:line="209" pos:column="25">case <expr><lit:literal type="number" pos:line="209" pos:column="30">18</lit:literal></expr>:
				<expr_stmt><expr><call><name><name pos:line="210" pos:column="33">System</name><op:operator pos:line="210" pos:column="39">.</op:operator><name pos:line="210" pos:column="40">out</name><op:operator pos:line="210" pos:column="43">.</op:operator><name pos:line="210" pos:column="44">print</name></name><argument_list pos:line="210" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="210" pos:column="50">"Enter the name of the state"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="211" pos:column="33">String</name></type> <name pos:line="211" pos:column="40">statename</name> <init pos:line="211" pos:column="50">= <expr><call><name><name pos:line="211" pos:column="52">in</name><op:operator pos:line="211" pos:column="54">.</op:operator><name pos:line="211" pos:column="55">nextLine</name></name><argument_list pos:line="211" pos:column="63">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name pos:line="212" pos:column="33">statename</name> <op:operator pos:line="212" pos:column="43">=</op:operator> <call><name><name pos:line="212" pos:column="45">statename</name><op:operator pos:line="212" pos:column="54">.</op:operator><name pos:line="212" pos:column="55">toUpperCase</name></name><argument_list pos:line="212" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="213" pos:column="33">user</name><op:operator pos:line="213" pos:column="37">.</op:operator> <name pos:line="213" pos:column="39">FindTopIndustryCode</name></name><argument_list pos:line="213" pos:column="58">(<argument><expr><name pos:line="213" pos:column="59">statename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break pos:line="214" pos:column="33">break;</break>
			</case><case pos:line="215" pos:column="25">case <expr><lit:literal type="number" pos:line="215" pos:column="30">19</lit:literal></expr>:
				<expr_stmt><expr><call><name><name pos:line="216" pos:column="33">subMenu19To24</name><op:operator pos:line="216" pos:column="46">.</op:operator><name pos:line="216" pos:column="47">FindTopStatesMenu</name></name><argument_list pos:line="216" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="216" pos:column="65">"occupation"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                		<break pos:line="217" pos:column="33">break;</break>
			</case><case pos:line="218" pos:column="25">case <expr><lit:literal type="number" pos:line="218" pos:column="30">20</lit:literal></expr>:
				<expr_stmt><expr><call><name><name pos:line="219" pos:column="33">subMenu19To24</name><op:operator pos:line="219" pos:column="46">.</op:operator><name pos:line="219" pos:column="47">FindTopStatesMenu</name></name><argument_list pos:line="219" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="219" pos:column="65">"industry"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                		<break pos:line="220" pos:column="33">break;</break>
			</case><case pos:line="221" pos:column="25">case <expr><lit:literal type="number" pos:line="221" pos:column="30">21</lit:literal></expr>:
				<expr_stmt><expr><call><name><name pos:line="222" pos:column="33">subMenu19To24</name><op:operator pos:line="222" pos:column="46">.</op:operator><name pos:line="222" pos:column="47">RecommendBestStateToWorkMenu</name></name><argument_list pos:line="222" pos:column="75">()</argument_list></call></expr>;</expr_stmt>
                		<break pos:line="223" pos:column="33">break;</break>
			</case><case pos:line="224" pos:column="25">case <expr><lit:literal type="number" pos:line="224" pos:column="30">22</lit:literal></expr>:
				<expr_stmt><expr><call><name><name pos:line="225" pos:column="33">subMenu19To24</name><op:operator pos:line="225" pos:column="46">.</op:operator><name pos:line="225" pos:column="47">ComputeAverageEducationMenu</name></name><argument_list pos:line="225" pos:column="74">()</argument_list></call></expr>;</expr_stmt>
                		<break pos:line="226" pos:column="33">break;</break>
			</case><case pos:line="227" pos:column="25">case <expr><lit:literal type="number" pos:line="227" pos:column="30">23</lit:literal></expr>:
				<expr_stmt><expr><call><name><name pos:line="228" pos:column="33">subMenu19To24</name><op:operator pos:line="228" pos:column="46">.</op:operator><name pos:line="228" pos:column="47">FindOccIndustryWithHighestLowestEducationMenu</name></name><argument_list pos:line="228" pos:column="92">()</argument_list></call></expr>;</expr_stmt>
                		<break pos:line="229" pos:column="33">break;</break>
			</case><case pos:line="230" pos:column="25">case <expr><lit:literal type="number" pos:line="230" pos:column="30">24</lit:literal></expr>:
				<expr_stmt><expr><call><name><name pos:line="231" pos:column="33">subMenu19To24</name><op:operator pos:line="231" pos:column="46">.</op:operator><name pos:line="231" pos:column="47">CalculateLikelinessToMoveFactorMenu</name></name><argument_list pos:line="231" pos:column="82">()</argument_list></call></expr>;</expr_stmt>
                		<break pos:line="232" pos:column="33">break;</break>
			</case><case pos:line="233" pos:column="25">case <expr><lit:literal type="number" pos:line="233" pos:column="30">25</lit:literal></expr>:
				<expr_stmt><expr><call><name><name pos:line="234" pos:column="33">System</name><op:operator pos:line="234" pos:column="39">.</op:operator><name pos:line="234" pos:column="40">out</name><op:operator pos:line="234" pos:column="43">.</op:operator><name pos:line="234" pos:column="44">println</name></name><argument_list pos:line="234" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="234" pos:column="52">"Invalid input...Try again!!"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break pos:line="235" pos:column="33">break;</break>
			</case><default pos:line="236" pos:column="25">default :
					<expr_stmt><expr><call><name><name pos:line="237" pos:column="41">System</name><op:operator pos:line="237" pos:column="47">.</op:operator><name pos:line="237" pos:column="48">out</name><op:operator pos:line="237" pos:column="51">.</op:operator><name pos:line="237" pos:column="52">println</name></name><argument_list pos:line="237" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="237" pos:column="60">"Thank you, visit us again. Good Bye"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break pos:line="238" pos:column="41">break;</break>
			</default>}</block></switch>
		}</block>while<condition pos:line="240" pos:column="23">(<expr><name pos:line="240" pos:column="24">choice</name> <op:operator pos:line="240" pos:column="31">&gt;</op:operator> <lit:literal type="number" pos:line="240" pos:column="33">0</lit:literal> <op:operator pos:line="240" pos:column="35">&amp;&amp;</op:operator> <name pos:line="240" pos:column="38">choice</name> <op:operator pos:line="240" pos:column="45">&lt;</op:operator> <lit:literal type="number" pos:line="240" pos:column="47">26</lit:literal></expr>)</condition>;</do>
	}</block></function>



}</block></class>
</unit>
