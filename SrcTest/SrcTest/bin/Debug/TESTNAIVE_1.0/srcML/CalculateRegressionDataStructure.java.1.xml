<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\SE-project\testcode\RiskIt\src\com\riskIt\data\CalculateRegressionDataStructure.java" pos:tabs="8"><package pos:line="1" pos:column="1">package <name><name pos:line="1" pos:column="9">com</name><op:operator pos:line="1" pos:column="12">.</op:operator><name pos:line="1" pos:column="13">riskIt</name><op:operator pos:line="1" pos:column="19">.</op:operator><name pos:line="1" pos:column="20">data</name></name>;</package>

<comment type="block" format="javadoc" pos:line="3" pos:column="1">/**
 * CalculateRegressionDataStructure.java
 * Purpose: Data Structure used to return slop and intercept values to
 * 	EstiamteIncome class after they have been calculated by CalculateRegression
 * 	Class.
 * 
 * @author Bryan Angone
 * @version 1.0 7-12-09
 */</comment>

<class><specifier pos:line="13" pos:column="1">public</specifier> class <name pos:line="13" pos:column="14">CalculateRegressionDataStructure</name> <block pos:line="13" pos:column="47">{
	
	<decl_stmt><decl><type><specifier pos:line="15" pos:column="9">final</specifier> <name pos:line="15" pos:column="15">double</name></type> <name pos:line="15" pos:column="22">slopeAll</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="16" pos:column="9">final</specifier> <name pos:line="16" pos:column="15">double</name></type> <name pos:line="16" pos:column="22">interceptMainAll</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="17" pos:column="9">final</specifier> <name pos:line="17" pos:column="15">double</name></type> <name pos:line="17" pos:column="22">slopeMiddleTwoThirds</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="18" pos:column="9">final</specifier> <name pos:line="18" pos:column="15">double</name></type> <name pos:line="18" pos:column="22">interceptMiddleTwoThirds</name></decl>;</decl_stmt>
	
	<constructor><specifier pos:line="20" pos:column="9">public</specifier> <name pos:line="20" pos:column="16">CalculateRegressionDataStructure</name><parameter_list pos:line="20" pos:column="48">(<param><decl><type><name pos:line="20" pos:column="49">double</name></type> <name pos:line="20" pos:column="56">slopeALl</name></decl></param>, <param><decl><type><name pos:line="20" pos:column="66">double</name></type> <name pos:line="20" pos:column="73">interceptAll</name></decl></param>, <param><decl><type><name pos:line="20" pos:column="87">double</name></type> <name pos:line="20" pos:column="94">slopeMiddleTwoThirds</name></decl></param>, <param><decl><type><name pos:line="20" pos:column="116">double</name></type> <name pos:line="20" pos:column="123">interceptMiddleTwoThirds</name></decl></param>)</parameter_list><block pos:line="20" pos:column="148">{
		<expr_stmt><expr><name><name pos:line="21" pos:column="17">this</name><op:operator pos:line="21" pos:column="21">.</op:operator><name pos:line="21" pos:column="22">slopeAll</name></name> <op:operator pos:line="21" pos:column="31">=</op:operator> <name pos:line="21" pos:column="33">slopeALl</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="22" pos:column="17">this</name><op:operator pos:line="22" pos:column="21">.</op:operator><name pos:line="22" pos:column="22">interceptMainAll</name></name> <op:operator pos:line="22" pos:column="39">=</op:operator> <name pos:line="22" pos:column="41">interceptAll</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="23" pos:column="17">this</name><op:operator pos:line="23" pos:column="21">.</op:operator><name pos:line="23" pos:column="22">slopeMiddleTwoThirds</name></name> <op:operator pos:line="23" pos:column="43">=</op:operator> <name pos:line="23" pos:column="45">slopeMiddleTwoThirds</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="24" pos:column="17">this</name><op:operator pos:line="24" pos:column="21">.</op:operator><name pos:line="24" pos:column="22">interceptMiddleTwoThirds</name></name> <op:operator pos:line="24" pos:column="47">=</op:operator> <name pos:line="24" pos:column="49">interceptMiddleTwoThirds</name></expr>;</expr_stmt>
	}</block></constructor>
	
	<function><type><specifier pos:line="27" pos:column="9">public</specifier> <name pos:line="27" pos:column="16">double</name></type> <name pos:line="27" pos:column="23">getSlopeAll</name><parameter_list pos:line="27" pos:column="34">()</parameter_list><block pos:line="27" pos:column="36">{
		<return pos:line="28" pos:column="17">return <expr><name pos:line="28" pos:column="24">slopeAll</name></expr>;</return>
	}</block></function>
	
	<function><type><specifier pos:line="31" pos:column="9">public</specifier> <name pos:line="31" pos:column="16">double</name></type> <name pos:line="31" pos:column="23">getInterceptAll</name><parameter_list pos:line="31" pos:column="38">()</parameter_list><block pos:line="31" pos:column="40">{
		<return pos:line="32" pos:column="17">return <expr><name pos:line="32" pos:column="24">interceptMainAll</name></expr>;</return>
	}</block></function>
	
	<function><type><specifier pos:line="35" pos:column="9">public</specifier> <name pos:line="35" pos:column="16">double</name></type> <name pos:line="35" pos:column="23">getSlopeMiddleTwoThirds</name><parameter_list pos:line="35" pos:column="46">()</parameter_list><block pos:line="35" pos:column="48">{
		<return pos:line="36" pos:column="17">return <expr><name pos:line="36" pos:column="24">slopeMiddleTwoThirds</name></expr>;</return>
	}</block></function>
	
	<function><type><specifier pos:line="39" pos:column="9">public</specifier> <name pos:line="39" pos:column="16">double</name></type> <name pos:line="39" pos:column="23">getInterceptMiddleTwoThirds</name><parameter_list pos:line="39" pos:column="50">()</parameter_list><block pos:line="39" pos:column="52">{
		<return pos:line="40" pos:column="17">return <expr><name pos:line="40" pos:column="24">interceptMiddleTwoThirds</name></expr>;</return>
	}</block></function>
}</block></class>
</unit>
