<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\xinco\src\com\bluecubs\xinco\core\XincoVersion.java" pos:tabs="8"><comment type="block" format="javadoc" pos:line="1" pos:column="1">/**
 * XincoVersion.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.
 */</comment>
<package pos:line="7" pos:column="1">package <name><name pos:line="7" pos:column="9">com</name><op:operator pos:line="7" pos:column="12">.</op:operator><name pos:line="7" pos:column="13">bluecubs</name><op:operator pos:line="7" pos:column="21">.</op:operator><name pos:line="7" pos:column="22">xinco</name><op:operator pos:line="7" pos:column="27">.</op:operator><name pos:line="7" pos:column="28">core</name></name>;</package>

<class><specifier pos:line="9" pos:column="1">public</specifier> class <name pos:line="9" pos:column="14">XincoVersion</name> <super><implements pos:line="9" pos:column="27">implements <name><name pos:line="9" pos:column="38">java</name><op:operator pos:line="9" pos:column="42">.</op:operator><name pos:line="9" pos:column="43">io</name><op:operator pos:line="9" pos:column="45">.</op:operator><name pos:line="9" pos:column="46">Serializable</name></name></implements></super> <block pos:line="9" pos:column="59">{

    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">private</specifier> <name pos:line="11" pos:column="13">int</name></type> <name pos:line="11" pos:column="17">version_high</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">private</specifier> <name pos:line="12" pos:column="13">int</name></type> <name pos:line="12" pos:column="17">version_low</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="13" pos:column="5">private</specifier> <name pos:line="13" pos:column="13">int</name></type> <name pos:line="13" pos:column="17">version_mid</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="14" pos:column="5">private</specifier> <name><name pos:line="14" pos:column="13">java</name><op:operator pos:line="14" pos:column="17">.</op:operator><name pos:line="14" pos:column="18">lang</name><op:operator pos:line="14" pos:column="22">.</op:operator><name pos:line="14" pos:column="23">String</name></name></type> <name pos:line="14" pos:column="30">version_postfix</name></decl>;</decl_stmt>

    <constructor><specifier pos:line="16" pos:column="5">public</specifier> <name pos:line="16" pos:column="12">XincoVersion</name><parameter_list pos:line="16" pos:column="24">()</parameter_list> <block pos:line="16" pos:column="27">{
    }</block></constructor>

    <constructor><specifier pos:line="19" pos:column="5">public</specifier> <name pos:line="19" pos:column="12">XincoVersion</name><parameter_list pos:line="19" pos:column="24">(
            <param><decl><type><name pos:line="20" pos:column="13">int</name></type> <name pos:line="20" pos:column="17">version_high</name></decl></param>,
            <param><decl><type><name pos:line="21" pos:column="13">int</name></type> <name pos:line="21" pos:column="17">version_low</name></decl></param>,
            <param><decl><type><name pos:line="22" pos:column="13">int</name></type> <name pos:line="22" pos:column="17">version_mid</name></decl></param>,
            <param><decl><type><name><name pos:line="23" pos:column="13">java</name><op:operator pos:line="23" pos:column="17">.</op:operator><name pos:line="23" pos:column="18">lang</name><op:operator pos:line="23" pos:column="22">.</op:operator><name pos:line="23" pos:column="23">String</name></name></type> <name pos:line="23" pos:column="30">version_postfix</name></decl></param>)</parameter_list> <block pos:line="23" pos:column="47">{
        <expr_stmt><expr><name><name pos:line="24" pos:column="9">this</name><op:operator pos:line="24" pos:column="13">.</op:operator><name pos:line="24" pos:column="14">version_high</name></name> <op:operator pos:line="24" pos:column="27">=</op:operator> <name pos:line="24" pos:column="29">version_high</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">this</name><op:operator pos:line="25" pos:column="13">.</op:operator><name pos:line="25" pos:column="14">version_low</name></name> <op:operator pos:line="25" pos:column="26">=</op:operator> <name pos:line="25" pos:column="28">version_low</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="26" pos:column="9">this</name><op:operator pos:line="26" pos:column="13">.</op:operator><name pos:line="26" pos:column="14">version_mid</name></name> <op:operator pos:line="26" pos:column="26">=</op:operator> <name pos:line="26" pos:column="28">version_mid</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">this</name><op:operator pos:line="27" pos:column="13">.</op:operator><name pos:line="27" pos:column="14">version_postfix</name></name> <op:operator pos:line="27" pos:column="30">=</op:operator> <name pos:line="27" pos:column="32">version_postfix</name></expr>;</expr_stmt>
    }</block></constructor>

    <comment type="block" format="javadoc" pos:line="30" pos:column="5">/**
     * Gets the version_high value for this XincoVersion.
     * 
     * @return version_high
     */</comment>
    <function><type><specifier pos:line="35" pos:column="5">public</specifier> <name pos:line="35" pos:column="12">int</name></type> <name pos:line="35" pos:column="16">getVersion_high</name><parameter_list pos:line="35" pos:column="31">()</parameter_list> <block pos:line="35" pos:column="34">{
        <return pos:line="36" pos:column="9">return <expr><name pos:line="36" pos:column="16">version_high</name></expr>;</return>
    }</block></function>

    <comment type="block" format="javadoc" pos:line="39" pos:column="5">/**
     * Sets the version_high value for this XincoVersion.
     * 
     * @param version_high
     */</comment>
    <function><type><specifier pos:line="44" pos:column="5">public</specifier> <name pos:line="44" pos:column="12">void</name></type> <name pos:line="44" pos:column="17">setVersion_high</name><parameter_list pos:line="44" pos:column="32">(<param><decl><type><name pos:line="44" pos:column="33">int</name></type> <name pos:line="44" pos:column="37">version_high</name></decl></param>)</parameter_list> <block pos:line="44" pos:column="51">{
        <expr_stmt><expr><name><name pos:line="45" pos:column="9">this</name><op:operator pos:line="45" pos:column="13">.</op:operator><name pos:line="45" pos:column="14">version_high</name></name> <op:operator pos:line="45" pos:column="27">=</op:operator> <name pos:line="45" pos:column="29">version_high</name></expr>;</expr_stmt>
    }</block></function>

    <comment type="block" format="javadoc" pos:line="48" pos:column="5">/**
     * Gets the version_low value for this XincoVersion.
     * 
     * @return version_low
     */</comment>
    <function><type><specifier pos:line="53" pos:column="5">public</specifier> <name pos:line="53" pos:column="12">int</name></type> <name pos:line="53" pos:column="16">getVersion_low</name><parameter_list pos:line="53" pos:column="30">()</parameter_list> <block pos:line="53" pos:column="33">{
        <return pos:line="54" pos:column="9">return <expr><name pos:line="54" pos:column="16">version_low</name></expr>;</return>
    }</block></function>

    <comment type="block" format="javadoc" pos:line="57" pos:column="5">/**
     * Sets the version_low value for this XincoVersion.
     * 
     * @param version_low
     */</comment>
    <function><type><specifier pos:line="62" pos:column="5">public</specifier> <name pos:line="62" pos:column="12">void</name></type> <name pos:line="62" pos:column="17">setVersion_low</name><parameter_list pos:line="62" pos:column="31">(<param><decl><type><name pos:line="62" pos:column="32">int</name></type> <name pos:line="62" pos:column="36">version_low</name></decl></param>)</parameter_list> <block pos:line="62" pos:column="49">{
        <expr_stmt><expr><name><name pos:line="63" pos:column="9">this</name><op:operator pos:line="63" pos:column="13">.</op:operator><name pos:line="63" pos:column="14">version_low</name></name> <op:operator pos:line="63" pos:column="26">=</op:operator> <name pos:line="63" pos:column="28">version_low</name></expr>;</expr_stmt>
    }</block></function>

    <comment type="block" format="javadoc" pos:line="66" pos:column="5">/**
     * Gets the version_mid value for this XincoVersion.
     * 
     * @return version_mid
     */</comment>
    <function><type><specifier pos:line="71" pos:column="5">public</specifier> <name pos:line="71" pos:column="12">int</name></type> <name pos:line="71" pos:column="16">getVersion_mid</name><parameter_list pos:line="71" pos:column="30">()</parameter_list> <block pos:line="71" pos:column="33">{
        <return pos:line="72" pos:column="9">return <expr><name pos:line="72" pos:column="16">version_mid</name></expr>;</return>
    }</block></function>

    <comment type="block" format="javadoc" pos:line="75" pos:column="5">/**
     * Sets the version_mid value for this XincoVersion.
     * 
     * @param version_mid
     */</comment>
    <function><type><specifier pos:line="80" pos:column="5">public</specifier> <name pos:line="80" pos:column="12">void</name></type> <name pos:line="80" pos:column="17">setVersion_mid</name><parameter_list pos:line="80" pos:column="31">(<param><decl><type><name pos:line="80" pos:column="32">int</name></type> <name pos:line="80" pos:column="36">version_mid</name></decl></param>)</parameter_list> <block pos:line="80" pos:column="49">{
        <expr_stmt><expr><name><name pos:line="81" pos:column="9">this</name><op:operator pos:line="81" pos:column="13">.</op:operator><name pos:line="81" pos:column="14">version_mid</name></name> <op:operator pos:line="81" pos:column="26">=</op:operator> <name pos:line="81" pos:column="28">version_mid</name></expr>;</expr_stmt>
    }</block></function>

    <comment type="block" format="javadoc" pos:line="84" pos:column="5">/**
     * Gets the version_postfix value for this XincoVersion.
     * 
     * @return version_postfix
     */</comment>
    <function><type><specifier pos:line="89" pos:column="5">public</specifier> <name><name pos:line="89" pos:column="12">java</name><op:operator pos:line="89" pos:column="16">.</op:operator><name pos:line="89" pos:column="17">lang</name><op:operator pos:line="89" pos:column="21">.</op:operator><name pos:line="89" pos:column="22">String</name></name></type> <name pos:line="89" pos:column="29">getVersion_postfix</name><parameter_list pos:line="89" pos:column="47">()</parameter_list> <block pos:line="89" pos:column="50">{
        <return pos:line="90" pos:column="9">return <expr><name pos:line="90" pos:column="16">version_postfix</name></expr>;</return>
    }</block></function>

    <comment type="block" format="javadoc" pos:line="93" pos:column="5">/**
     * Sets the version_postfix value for this XincoVersion.
     * 
     * @param version_postfix
     */</comment>
    <function><type><specifier pos:line="98" pos:column="5">public</specifier> <name pos:line="98" pos:column="12">void</name></type> <name pos:line="98" pos:column="17">setVersion_postfix</name><parameter_list pos:line="98" pos:column="35">(<param><decl><type><name><name pos:line="98" pos:column="36">java</name><op:operator pos:line="98" pos:column="40">.</op:operator><name pos:line="98" pos:column="41">lang</name><op:operator pos:line="98" pos:column="45">.</op:operator><name pos:line="98" pos:column="46">String</name></name></type> <name pos:line="98" pos:column="53">version_postfix</name></decl></param>)</parameter_list> <block pos:line="98" pos:column="70">{
        <expr_stmt><expr><name><name pos:line="99" pos:column="9">this</name><op:operator pos:line="99" pos:column="13">.</op:operator><name pos:line="99" pos:column="14">version_postfix</name></name> <op:operator pos:line="99" pos:column="30">=</op:operator> <name pos:line="99" pos:column="32">version_postfix</name></expr>;</expr_stmt>
    }</block></function>
    <decl_stmt><decl><type><specifier pos:line="101" pos:column="5">private</specifier> <name><name pos:line="101" pos:column="13">java</name><op:operator pos:line="101" pos:column="17">.</op:operator><name pos:line="101" pos:column="18">lang</name><op:operator pos:line="101" pos:column="22">.</op:operator><name pos:line="101" pos:column="23">Object</name></name></type> <name pos:line="101" pos:column="30">__equalsCalc</name> <init pos:line="101" pos:column="43">= <expr><lit:literal type="null" pos:line="101" pos:column="45">null</lit:literal></expr></init></decl>;</decl_stmt>

    <function><type><annotation pos:line="103" pos:column="5">@<name pos:line="103" pos:column="6">Override</name></annotation>
    <specifier pos:line="104" pos:column="5">public</specifier> <specifier pos:line="104" pos:column="12">synchronized</specifier> <name pos:line="104" pos:column="25">boolean</name></type> <name pos:line="104" pos:column="33">equals</name><parameter_list pos:line="104" pos:column="39">(<param><decl><type><name><name pos:line="104" pos:column="40">java</name><op:operator pos:line="104" pos:column="44">.</op:operator><name pos:line="104" pos:column="45">lang</name><op:operator pos:line="104" pos:column="49">.</op:operator><name pos:line="104" pos:column="50">Object</name></name></type> <name pos:line="104" pos:column="57">obj</name></decl></param>)</parameter_list> <block pos:line="104" pos:column="62">{
        <if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><op:operator pos:line="105" pos:column="13">!</op:operator><op:operator pos:line="105" pos:column="14">(</op:operator><name pos:line="105" pos:column="15">obj</name> <op:operator pos:line="105" pos:column="19">instanceof</op:operator> <name pos:line="105" pos:column="30">XincoVersion</name><op:operator pos:line="105" pos:column="42">)</op:operator></expr>)</condition><then pos:line="105" pos:column="44"> <block pos:line="105" pos:column="45">{
            <return pos:line="106" pos:column="13">return <expr><lit:literal type="boolean" pos:line="106" pos:column="20">false</lit:literal></expr>;</return>
        }</block></then></if>
        <decl_stmt><decl><type><name pos:line="108" pos:column="9">XincoVersion</name></type> <name pos:line="108" pos:column="22">other</name> <init pos:line="108" pos:column="28">= <expr><op:operator pos:line="108" pos:column="30">(</op:operator><name pos:line="108" pos:column="31">XincoVersion</name><op:operator pos:line="108" pos:column="43">)</op:operator> <name pos:line="108" pos:column="45">obj</name></expr></init></decl>;</decl_stmt>
        <if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">(<expr><name pos:line="109" pos:column="13">obj</name> <op:operator pos:line="109" pos:column="17">==</op:operator> <lit:literal type="null" pos:line="109" pos:column="20">null</lit:literal></expr>)</condition><then pos:line="109" pos:column="25"> <block pos:line="109" pos:column="26">{
            <return pos:line="110" pos:column="13">return <expr><lit:literal type="boolean" pos:line="110" pos:column="20">false</lit:literal></expr>;</return>
        }</block></then></if>
        <if pos:line="112" pos:column="9">if <condition pos:line="112" pos:column="12">(<expr><name pos:line="112" pos:column="13">this</name> <op:operator pos:line="112" pos:column="18">==</op:operator> <name pos:line="112" pos:column="21">obj</name></expr>)</condition><then pos:line="112" pos:column="25"> <block pos:line="112" pos:column="26">{
            <return pos:line="113" pos:column="13">return <expr><lit:literal type="boolean" pos:line="113" pos:column="20">true</lit:literal></expr>;</return>
        }</block></then></if>
        <if pos:line="115" pos:column="9">if <condition pos:line="115" pos:column="12">(<expr><name pos:line="115" pos:column="13">__equalsCalc</name> <op:operator pos:line="115" pos:column="26">!=</op:operator> <lit:literal type="null" pos:line="115" pos:column="29">null</lit:literal></expr>)</condition><then pos:line="115" pos:column="34"> <block pos:line="115" pos:column="35">{
            <return pos:line="116" pos:column="13">return <expr><op:operator pos:line="116" pos:column="20">(</op:operator><name pos:line="116" pos:column="21">__equalsCalc</name> <op:operator pos:line="116" pos:column="34">==</op:operator> <name pos:line="116" pos:column="37">obj</name><op:operator pos:line="116" pos:column="40">)</op:operator></expr>;</return>
        }</block></then></if>
        <expr_stmt><expr><name pos:line="118" pos:column="9">__equalsCalc</name> <op:operator pos:line="118" pos:column="22">=</op:operator> <name pos:line="118" pos:column="24">obj</name></expr>;</expr_stmt>
        <decl_stmt><decl><type><name pos:line="119" pos:column="9">boolean</name></type> <name pos:line="119" pos:column="17">_equals</name></decl>;</decl_stmt>
        <expr_stmt><expr><name pos:line="120" pos:column="9">_equals</name> <op:operator pos:line="120" pos:column="17">=</op:operator> <lit:literal type="boolean" pos:line="120" pos:column="19">true</lit:literal> <op:operator pos:line="120" pos:column="24">&amp;&amp;</op:operator>
                <name><name pos:line="121" pos:column="17">this</name><op:operator pos:line="121" pos:column="21">.</op:operator><name pos:line="121" pos:column="22">version_high</name></name> <op:operator pos:line="121" pos:column="35">==</op:operator> <call><name><name pos:line="121" pos:column="38">other</name><op:operator pos:line="121" pos:column="43">.</op:operator><name pos:line="121" pos:column="44">getVersion_high</name></name><argument_list pos:line="121" pos:column="59">()</argument_list></call> <op:operator pos:line="121" pos:column="62">&amp;&amp;</op:operator>
                <name><name pos:line="122" pos:column="17">this</name><op:operator pos:line="122" pos:column="21">.</op:operator><name pos:line="122" pos:column="22">version_low</name></name> <op:operator pos:line="122" pos:column="34">==</op:operator> <call><name><name pos:line="122" pos:column="37">other</name><op:operator pos:line="122" pos:column="42">.</op:operator><name pos:line="122" pos:column="43">getVersion_low</name></name><argument_list pos:line="122" pos:column="57">()</argument_list></call> <op:operator pos:line="122" pos:column="60">&amp;&amp;</op:operator>
                <name><name pos:line="123" pos:column="17">this</name><op:operator pos:line="123" pos:column="21">.</op:operator><name pos:line="123" pos:column="22">version_mid</name></name> <op:operator pos:line="123" pos:column="34">==</op:operator> <call><name><name pos:line="123" pos:column="37">other</name><op:operator pos:line="123" pos:column="42">.</op:operator><name pos:line="123" pos:column="43">getVersion_mid</name></name><argument_list pos:line="123" pos:column="57">()</argument_list></call> <op:operator pos:line="123" pos:column="60">&amp;&amp;</op:operator>
                <op:operator pos:line="124" pos:column="17">(</op:operator><op:operator pos:line="124" pos:column="18">(</op:operator><name><name pos:line="124" pos:column="19">this</name><op:operator pos:line="124" pos:column="23">.</op:operator><name pos:line="124" pos:column="24">version_postfix</name></name> <op:operator pos:line="124" pos:column="40">==</op:operator> <lit:literal type="null" pos:line="124" pos:column="43">null</lit:literal> <op:operator pos:line="124" pos:column="48">&amp;&amp;</op:operator> <call><name><name pos:line="124" pos:column="51">other</name><op:operator pos:line="124" pos:column="56">.</op:operator><name pos:line="124" pos:column="57">getVersion_postfix</name></name><argument_list pos:line="124" pos:column="75">()</argument_list></call> <op:operator pos:line="124" pos:column="78">==</op:operator> <lit:literal type="null" pos:line="124" pos:column="81">null</lit:literal><op:operator pos:line="124" pos:column="85">)</op:operator> <op:operator pos:line="124" pos:column="87">||</op:operator>
                <op:operator pos:line="125" pos:column="17">(</op:operator><name><name pos:line="125" pos:column="18">this</name><op:operator pos:line="125" pos:column="22">.</op:operator><name pos:line="125" pos:column="23">version_postfix</name></name> <op:operator pos:line="125" pos:column="39">!=</op:operator> <lit:literal type="null" pos:line="125" pos:column="42">null</lit:literal> <op:operator pos:line="125" pos:column="47">&amp;&amp;</op:operator>
                <call><name><name pos:line="126" pos:column="17">this</name><op:operator pos:line="126" pos:column="21">.</op:operator><name pos:line="126" pos:column="22">version_postfix</name><op:operator pos:line="126" pos:column="37">.</op:operator><name pos:line="126" pos:column="38">equals</name></name><argument_list pos:line="126" pos:column="44">(<argument><expr><call><name><name pos:line="126" pos:column="45">other</name><op:operator pos:line="126" pos:column="50">.</op:operator><name pos:line="126" pos:column="51">getVersion_postfix</name></name><argument_list pos:line="126" pos:column="69">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="126" pos:column="72">)</op:operator><op:operator pos:line="126" pos:column="73">)</op:operator></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="127" pos:column="9">__equalsCalc</name> <op:operator pos:line="127" pos:column="22">=</op:operator> <lit:literal type="null" pos:line="127" pos:column="24">null</lit:literal></expr>;</expr_stmt>
        <return pos:line="128" pos:column="9">return <expr><name pos:line="128" pos:column="16">_equals</name></expr>;</return>
    }</block></function>
    <decl_stmt><decl><type><specifier pos:line="130" pos:column="5">private</specifier> <name pos:line="130" pos:column="13">boolean</name></type> <name pos:line="130" pos:column="21">__hashCodeCalc</name> <init pos:line="130" pos:column="36">= <expr><lit:literal type="boolean" pos:line="130" pos:column="38">false</lit:literal></expr></init></decl>;</decl_stmt>

    <function><type><annotation pos:line="132" pos:column="5">@<name pos:line="132" pos:column="6">Override</name></annotation>
    <specifier pos:line="133" pos:column="5">public</specifier> <specifier pos:line="133" pos:column="12">synchronized</specifier> <name pos:line="133" pos:column="25">int</name></type> <name pos:line="133" pos:column="29">hashCode</name><parameter_list pos:line="133" pos:column="37">()</parameter_list> <block pos:line="133" pos:column="40">{
        <if pos:line="134" pos:column="9">if <condition pos:line="134" pos:column="12">(<expr><name pos:line="134" pos:column="13">__hashCodeCalc</name></expr>)</condition><then pos:line="134" pos:column="28"> <block pos:line="134" pos:column="29">{
            <return pos:line="135" pos:column="13">return <expr><lit:literal type="number" pos:line="135" pos:column="20">0</lit:literal></expr>;</return>
        }</block></then></if>
        <expr_stmt><expr><name pos:line="137" pos:column="9">__hashCodeCalc</name> <op:operator pos:line="137" pos:column="24">=</op:operator> <lit:literal type="boolean" pos:line="137" pos:column="26">true</lit:literal></expr>;</expr_stmt>
        <decl_stmt><decl><type><name pos:line="138" pos:column="9">int</name></type> <name pos:line="138" pos:column="13">_hashCode</name> <init pos:line="138" pos:column="23">= <expr><lit:literal type="number" pos:line="138" pos:column="25">1</lit:literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name pos:line="139" pos:column="9">_hashCode</name> <op:operator pos:line="139" pos:column="19">+=</op:operator> <call><name pos:line="139" pos:column="22">getVersion_high</name><argument_list pos:line="139" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="140" pos:column="9">_hashCode</name> <op:operator pos:line="140" pos:column="19">+=</op:operator> <call><name pos:line="140" pos:column="22">getVersion_low</name><argument_list pos:line="140" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="141" pos:column="9">_hashCode</name> <op:operator pos:line="141" pos:column="19">+=</op:operator> <call><name pos:line="141" pos:column="22">getVersion_mid</name><argument_list pos:line="141" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
        <if pos:line="142" pos:column="9">if <condition pos:line="142" pos:column="12">(<expr><call><name pos:line="142" pos:column="13">getVersion_postfix</name><argument_list pos:line="142" pos:column="31">()</argument_list></call> <op:operator pos:line="142" pos:column="34">!=</op:operator> <lit:literal type="null" pos:line="142" pos:column="37">null</lit:literal></expr>)</condition><then pos:line="142" pos:column="42"> <block pos:line="142" pos:column="43">{
            <expr_stmt><expr><name pos:line="143" pos:column="13">_hashCode</name> <op:operator pos:line="143" pos:column="23">+=</op:operator> <call><name pos:line="143" pos:column="26">getVersion_postfix</name><argument_list pos:line="143" pos:column="44">()</argument_list></call><op:operator pos:line="143" pos:column="46">.</op:operator><call><name pos:line="143" pos:column="47">hashCode</name><argument_list pos:line="143" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        <expr_stmt><expr><name pos:line="145" pos:column="9">__hashCodeCalc</name> <op:operator pos:line="145" pos:column="24">=</op:operator> <lit:literal type="boolean" pos:line="145" pos:column="26">false</lit:literal></expr>;</expr_stmt>
        <return pos:line="146" pos:column="9">return <expr><name pos:line="146" pos:column="16">_hashCode</name></expr>;</return>
    }</block></function>
    <comment type="line" pos:line="148" pos:column="5">// Type metadata</comment>
    <decl_stmt><decl><type><specifier pos:line="149" pos:column="5">private</specifier> <specifier pos:line="149" pos:column="13">static</specifier> <name><name pos:line="149" pos:column="20">org</name><op:operator pos:line="149" pos:column="23">.</op:operator><name pos:line="149" pos:column="24">apache</name><op:operator pos:line="149" pos:column="30">.</op:operator><name pos:line="149" pos:column="31">axis</name><op:operator pos:line="149" pos:column="35">.</op:operator><name pos:line="149" pos:column="36">description</name><op:operator pos:line="149" pos:column="47">.</op:operator><name pos:line="149" pos:column="48">TypeDesc</name></name></type> <name pos:line="149" pos:column="57">typeDesc</name> <init pos:line="149" pos:column="66">=
            <expr><op:operator pos:line="150" pos:column="13">new</op:operator> <call><name><name pos:line="150" pos:column="17">org</name><op:operator pos:line="150" pos:column="20">.</op:operator><name pos:line="150" pos:column="21">apache</name><op:operator pos:line="150" pos:column="27">.</op:operator><name pos:line="150" pos:column="28">axis</name><op:operator pos:line="150" pos:column="32">.</op:operator><name pos:line="150" pos:column="33">description</name><op:operator pos:line="150" pos:column="44">.</op:operator><name pos:line="150" pos:column="45">TypeDesc</name></name><argument_list pos:line="150" pos:column="53">(<argument><expr><name><name pos:line="150" pos:column="54">XincoVersion</name><op:operator pos:line="150" pos:column="66">.</op:operator><name pos:line="150" pos:column="67">class</name></name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="150" pos:column="74">true</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr pos:line="152" pos:column="5">static <block pos:line="152" pos:column="12">{
        <expr><call><name><name pos:line="153" pos:column="9">typeDesc</name><op:operator pos:line="153" pos:column="17">.</op:operator><name pos:line="153" pos:column="18">setXmlType</name></name><argument_list pos:line="153" pos:column="28">(<argument><expr><op:operator pos:line="153" pos:column="29">new</op:operator> <call><name><name pos:line="153" pos:column="33">javax</name><op:operator pos:line="153" pos:column="38">.</op:operator><name pos:line="153" pos:column="39">xml</name><op:operator pos:line="153" pos:column="42">.</op:operator><name pos:line="153" pos:column="43">namespace</name><op:operator pos:line="153" pos:column="52">.</op:operator><name pos:line="153" pos:column="53">QName</name></name><argument_list pos:line="153" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="153" pos:column="59">"http://core.xinco.bluecubs.com"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="153" pos:column="93">"XincoVersion"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><name><name pos:line="154" pos:column="9">org</name><op:operator pos:line="154" pos:column="12">.</op:operator><name pos:line="154" pos:column="13">apache</name><op:operator pos:line="154" pos:column="19">.</op:operator><name pos:line="154" pos:column="20">axis</name><op:operator pos:line="154" pos:column="24">.</op:operator><name pos:line="154" pos:column="25">description</name><op:operator pos:line="154" pos:column="36">.</op:operator><name pos:line="154" pos:column="37">ElementDesc</name></name> <name pos:line="154" pos:column="49">elemField</name> <op:operator pos:line="154" pos:column="59">=</op:operator> <op:operator pos:line="154" pos:column="61">new</op:operator> <call><name><name pos:line="154" pos:column="65">org</name><op:operator pos:line="154" pos:column="68">.</op:operator><name pos:line="154" pos:column="69">apache</name><op:operator pos:line="154" pos:column="75">.</op:operator><name pos:line="154" pos:column="76">axis</name><op:operator pos:line="154" pos:column="80">.</op:operator><name pos:line="154" pos:column="81">description</name><op:operator pos:line="154" pos:column="92">.</op:operator><name pos:line="154" pos:column="93">ElementDesc</name></name><argument_list pos:line="154" pos:column="104">()</argument_list></call></expr>;
        <expr><call><name><name pos:line="155" pos:column="9">elemField</name><op:operator pos:line="155" pos:column="18">.</op:operator><name pos:line="155" pos:column="19">setFieldName</name></name><argument_list pos:line="155" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="155" pos:column="32">"version_high"</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="156" pos:column="9">elemField</name><op:operator pos:line="156" pos:column="18">.</op:operator><name pos:line="156" pos:column="19">setXmlName</name></name><argument_list pos:line="156" pos:column="29">(<argument><expr><op:operator pos:line="156" pos:column="30">new</op:operator> <call><name><name pos:line="156" pos:column="34">javax</name><op:operator pos:line="156" pos:column="39">.</op:operator><name pos:line="156" pos:column="40">xml</name><op:operator pos:line="156" pos:column="43">.</op:operator><name pos:line="156" pos:column="44">namespace</name><op:operator pos:line="156" pos:column="53">.</op:operator><name pos:line="156" pos:column="54">QName</name></name><argument_list pos:line="156" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="156" pos:column="60">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="156" pos:column="64">"version_high"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="157" pos:column="9">elemField</name><op:operator pos:line="157" pos:column="18">.</op:operator><name pos:line="157" pos:column="19">setXmlType</name></name><argument_list pos:line="157" pos:column="29">(<argument><expr><op:operator pos:line="157" pos:column="30">new</op:operator> <call><name><name pos:line="157" pos:column="34">javax</name><op:operator pos:line="157" pos:column="39">.</op:operator><name pos:line="157" pos:column="40">xml</name><op:operator pos:line="157" pos:column="43">.</op:operator><name pos:line="157" pos:column="44">namespace</name><op:operator pos:line="157" pos:column="53">.</op:operator><name pos:line="157" pos:column="54">QName</name></name><argument_list pos:line="157" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="157" pos:column="60">"http://www.w3.org/2001/XMLSchema"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="157" pos:column="96">"int"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="158" pos:column="9">elemField</name><op:operator pos:line="158" pos:column="18">.</op:operator><name pos:line="158" pos:column="19">setNillable</name></name><argument_list pos:line="158" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="158" pos:column="31">false</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="159" pos:column="9">typeDesc</name><op:operator pos:line="159" pos:column="17">.</op:operator><name pos:line="159" pos:column="18">addFieldDesc</name></name><argument_list pos:line="159" pos:column="30">(<argument><expr><name pos:line="159" pos:column="31">elemField</name></expr></argument>)</argument_list></call></expr>;
        <expr><name pos:line="160" pos:column="9">elemField</name> <op:operator pos:line="160" pos:column="19">=</op:operator> <op:operator pos:line="160" pos:column="21">new</op:operator> <call><name><name pos:line="160" pos:column="25">org</name><op:operator pos:line="160" pos:column="28">.</op:operator><name pos:line="160" pos:column="29">apache</name><op:operator pos:line="160" pos:column="35">.</op:operator><name pos:line="160" pos:column="36">axis</name><op:operator pos:line="160" pos:column="40">.</op:operator><name pos:line="160" pos:column="41">description</name><op:operator pos:line="160" pos:column="52">.</op:operator><name pos:line="160" pos:column="53">ElementDesc</name></name><argument_list pos:line="160" pos:column="64">()</argument_list></call></expr>;
        <expr><call><name><name pos:line="161" pos:column="9">elemField</name><op:operator pos:line="161" pos:column="18">.</op:operator><name pos:line="161" pos:column="19">setFieldName</name></name><argument_list pos:line="161" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="161" pos:column="32">"version_low"</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="162" pos:column="9">elemField</name><op:operator pos:line="162" pos:column="18">.</op:operator><name pos:line="162" pos:column="19">setXmlName</name></name><argument_list pos:line="162" pos:column="29">(<argument><expr><op:operator pos:line="162" pos:column="30">new</op:operator> <call><name><name pos:line="162" pos:column="34">javax</name><op:operator pos:line="162" pos:column="39">.</op:operator><name pos:line="162" pos:column="40">xml</name><op:operator pos:line="162" pos:column="43">.</op:operator><name pos:line="162" pos:column="44">namespace</name><op:operator pos:line="162" pos:column="53">.</op:operator><name pos:line="162" pos:column="54">QName</name></name><argument_list pos:line="162" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="162" pos:column="60">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="162" pos:column="64">"version_low"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="163" pos:column="9">elemField</name><op:operator pos:line="163" pos:column="18">.</op:operator><name pos:line="163" pos:column="19">setXmlType</name></name><argument_list pos:line="163" pos:column="29">(<argument><expr><op:operator pos:line="163" pos:column="30">new</op:operator> <call><name><name pos:line="163" pos:column="34">javax</name><op:operator pos:line="163" pos:column="39">.</op:operator><name pos:line="163" pos:column="40">xml</name><op:operator pos:line="163" pos:column="43">.</op:operator><name pos:line="163" pos:column="44">namespace</name><op:operator pos:line="163" pos:column="53">.</op:operator><name pos:line="163" pos:column="54">QName</name></name><argument_list pos:line="163" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="163" pos:column="60">"http://www.w3.org/2001/XMLSchema"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="163" pos:column="96">"int"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="164" pos:column="9">elemField</name><op:operator pos:line="164" pos:column="18">.</op:operator><name pos:line="164" pos:column="19">setNillable</name></name><argument_list pos:line="164" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="164" pos:column="31">false</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="165" pos:column="9">typeDesc</name><op:operator pos:line="165" pos:column="17">.</op:operator><name pos:line="165" pos:column="18">addFieldDesc</name></name><argument_list pos:line="165" pos:column="30">(<argument><expr><name pos:line="165" pos:column="31">elemField</name></expr></argument>)</argument_list></call></expr>;
        <expr><name pos:line="166" pos:column="9">elemField</name> <op:operator pos:line="166" pos:column="19">=</op:operator> <op:operator pos:line="166" pos:column="21">new</op:operator> <call><name><name pos:line="166" pos:column="25">org</name><op:operator pos:line="166" pos:column="28">.</op:operator><name pos:line="166" pos:column="29">apache</name><op:operator pos:line="166" pos:column="35">.</op:operator><name pos:line="166" pos:column="36">axis</name><op:operator pos:line="166" pos:column="40">.</op:operator><name pos:line="166" pos:column="41">description</name><op:operator pos:line="166" pos:column="52">.</op:operator><name pos:line="166" pos:column="53">ElementDesc</name></name><argument_list pos:line="166" pos:column="64">()</argument_list></call></expr>;
        <expr><call><name><name pos:line="167" pos:column="9">elemField</name><op:operator pos:line="167" pos:column="18">.</op:operator><name pos:line="167" pos:column="19">setFieldName</name></name><argument_list pos:line="167" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="167" pos:column="32">"version_mid"</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="168" pos:column="9">elemField</name><op:operator pos:line="168" pos:column="18">.</op:operator><name pos:line="168" pos:column="19">setXmlName</name></name><argument_list pos:line="168" pos:column="29">(<argument><expr><op:operator pos:line="168" pos:column="30">new</op:operator> <call><name><name pos:line="168" pos:column="34">javax</name><op:operator pos:line="168" pos:column="39">.</op:operator><name pos:line="168" pos:column="40">xml</name><op:operator pos:line="168" pos:column="43">.</op:operator><name pos:line="168" pos:column="44">namespace</name><op:operator pos:line="168" pos:column="53">.</op:operator><name pos:line="168" pos:column="54">QName</name></name><argument_list pos:line="168" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="168" pos:column="60">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="168" pos:column="64">"version_mid"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="169" pos:column="9">elemField</name><op:operator pos:line="169" pos:column="18">.</op:operator><name pos:line="169" pos:column="19">setXmlType</name></name><argument_list pos:line="169" pos:column="29">(<argument><expr><op:operator pos:line="169" pos:column="30">new</op:operator> <call><name><name pos:line="169" pos:column="34">javax</name><op:operator pos:line="169" pos:column="39">.</op:operator><name pos:line="169" pos:column="40">xml</name><op:operator pos:line="169" pos:column="43">.</op:operator><name pos:line="169" pos:column="44">namespace</name><op:operator pos:line="169" pos:column="53">.</op:operator><name pos:line="169" pos:column="54">QName</name></name><argument_list pos:line="169" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="169" pos:column="60">"http://www.w3.org/2001/XMLSchema"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="169" pos:column="96">"int"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="170" pos:column="9">elemField</name><op:operator pos:line="170" pos:column="18">.</op:operator><name pos:line="170" pos:column="19">setNillable</name></name><argument_list pos:line="170" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="170" pos:column="31">false</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="171" pos:column="9">typeDesc</name><op:operator pos:line="171" pos:column="17">.</op:operator><name pos:line="171" pos:column="18">addFieldDesc</name></name><argument_list pos:line="171" pos:column="30">(<argument><expr><name pos:line="171" pos:column="31">elemField</name></expr></argument>)</argument_list></call></expr>;
        <expr><name pos:line="172" pos:column="9">elemField</name> <op:operator pos:line="172" pos:column="19">=</op:operator> <op:operator pos:line="172" pos:column="21">new</op:operator> <call><name><name pos:line="172" pos:column="25">org</name><op:operator pos:line="172" pos:column="28">.</op:operator><name pos:line="172" pos:column="29">apache</name><op:operator pos:line="172" pos:column="35">.</op:operator><name pos:line="172" pos:column="36">axis</name><op:operator pos:line="172" pos:column="40">.</op:operator><name pos:line="172" pos:column="41">description</name><op:operator pos:line="172" pos:column="52">.</op:operator><name pos:line="172" pos:column="53">ElementDesc</name></name><argument_list pos:line="172" pos:column="64">()</argument_list></call></expr>;
        <expr><call><name><name pos:line="173" pos:column="9">elemField</name><op:operator pos:line="173" pos:column="18">.</op:operator><name pos:line="173" pos:column="19">setFieldName</name></name><argument_list pos:line="173" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="173" pos:column="32">"version_postfix"</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="174" pos:column="9">elemField</name><op:operator pos:line="174" pos:column="18">.</op:operator><name pos:line="174" pos:column="19">setXmlName</name></name><argument_list pos:line="174" pos:column="29">(<argument><expr><op:operator pos:line="174" pos:column="30">new</op:operator> <call><name><name pos:line="174" pos:column="34">javax</name><op:operator pos:line="174" pos:column="39">.</op:operator><name pos:line="174" pos:column="40">xml</name><op:operator pos:line="174" pos:column="43">.</op:operator><name pos:line="174" pos:column="44">namespace</name><op:operator pos:line="174" pos:column="53">.</op:operator><name pos:line="174" pos:column="54">QName</name></name><argument_list pos:line="174" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="174" pos:column="60">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="174" pos:column="64">"version_postfix"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="175" pos:column="9">elemField</name><op:operator pos:line="175" pos:column="18">.</op:operator><name pos:line="175" pos:column="19">setXmlType</name></name><argument_list pos:line="175" pos:column="29">(<argument><expr><op:operator pos:line="175" pos:column="30">new</op:operator> <call><name><name pos:line="175" pos:column="34">javax</name><op:operator pos:line="175" pos:column="39">.</op:operator><name pos:line="175" pos:column="40">xml</name><op:operator pos:line="175" pos:column="43">.</op:operator><name pos:line="175" pos:column="44">namespace</name><op:operator pos:line="175" pos:column="53">.</op:operator><name pos:line="175" pos:column="54">QName</name></name><argument_list pos:line="175" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="175" pos:column="60">"http://www.w3.org/2001/XMLSchema"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="175" pos:column="96">"string"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="176" pos:column="9">elemField</name><op:operator pos:line="176" pos:column="18">.</op:operator><name pos:line="176" pos:column="19">setNillable</name></name><argument_list pos:line="176" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="176" pos:column="31">true</lit:literal></expr></argument>)</argument_list></call></expr>;
        <expr><call><name><name pos:line="177" pos:column="9">typeDesc</name><op:operator pos:line="177" pos:column="17">.</op:operator><name pos:line="177" pos:column="18">addFieldDesc</name></name><argument_list pos:line="177" pos:column="30">(<argument><expr><name pos:line="177" pos:column="31">elemField</name></expr></argument>)</argument_list></call></expr>;
    }</block>

    <comment type="block" format="javadoc" pos:line="180" pos:column="5">/**
     * Return type metadata object
     * @return
     */</comment>
    public static <name><name pos:line="184" pos:column="19">org</name><op:operator pos:line="184" pos:column="22">.</op:operator><name pos:line="184" pos:column="23">apache</name><op:operator pos:line="184" pos:column="29">.</op:operator><name pos:line="184" pos:column="30">axis</name><op:operator pos:line="184" pos:column="34">.</op:operator><name pos:line="184" pos:column="35">description</name><op:operator pos:line="184" pos:column="46">.</op:operator><name pos:line="184" pos:column="47">TypeDesc</name></name> <call><name pos:line="184" pos:column="56">getTypeDesc</name><argument_list pos:line="184" pos:column="67">()</argument_list></call> <block pos:line="184" pos:column="70">{
        <return pos:line="185" pos:column="9">return <expr><name pos:line="185" pos:column="16">typeDesc</name></expr>;</return>
    }</block></expr></expr_stmt>

    <comment type="block" format="javadoc" pos:line="188" pos:column="5">/**
     * Get Custom Serializer
     * @param mechType 
     * @param _javaType 
     * @param _xmlType 
     * @return
     */</comment>
    <function><type><specifier pos:line="195" pos:column="5">public</specifier> <specifier pos:line="195" pos:column="12">static</specifier> <name><name pos:line="195" pos:column="19">org</name><op:operator pos:line="195" pos:column="22">.</op:operator><name pos:line="195" pos:column="23">apache</name><op:operator pos:line="195" pos:column="29">.</op:operator><name pos:line="195" pos:column="30">axis</name><op:operator pos:line="195" pos:column="34">.</op:operator><name pos:line="195" pos:column="35">encoding</name><op:operator pos:line="195" pos:column="43">.</op:operator><name pos:line="195" pos:column="44">Serializer</name></name></type> <name pos:line="195" pos:column="55">getSerializer</name><parameter_list pos:line="195" pos:column="68">(
            <param><decl><type><name><name pos:line="196" pos:column="13">java</name><op:operator pos:line="196" pos:column="17">.</op:operator><name pos:line="196" pos:column="18">lang</name><op:operator pos:line="196" pos:column="22">.</op:operator><name pos:line="196" pos:column="23">String</name></name></type> <name pos:line="196" pos:column="30">mechType</name></decl></param>,
            <param><decl><type><name><name pos:line="197" pos:column="13">java</name><op:operator pos:line="197" pos:column="17">.</op:operator><name pos:line="197" pos:column="18">lang</name><op:operator pos:line="197" pos:column="22">.</op:operator><name pos:line="197" pos:column="23">Class</name></name></type> <name pos:line="197" pos:column="29">_javaType</name></decl></param>,
            <param><decl><type><name><name pos:line="198" pos:column="13">javax</name><op:operator pos:line="198" pos:column="18">.</op:operator><name pos:line="198" pos:column="19">xml</name><op:operator pos:line="198" pos:column="22">.</op:operator><name pos:line="198" pos:column="23">namespace</name><op:operator pos:line="198" pos:column="32">.</op:operator><name pos:line="198" pos:column="33">QName</name></name></type> <name pos:line="198" pos:column="39">_xmlType</name></decl></param>)</parameter_list> <block pos:line="198" pos:column="49">{
        <return pos:line="199" pos:column="9">return <expr><op:operator pos:line="199" pos:column="16">new</op:operator> <call><name><name pos:line="199" pos:column="20">org</name><op:operator pos:line="199" pos:column="23">.</op:operator><name pos:line="199" pos:column="24">apache</name><op:operator pos:line="199" pos:column="30">.</op:operator><name pos:line="199" pos:column="31">axis</name><op:operator pos:line="199" pos:column="35">.</op:operator><name pos:line="199" pos:column="36">encoding</name><op:operator pos:line="199" pos:column="44">.</op:operator><name pos:line="199" pos:column="45">ser</name><op:operator pos:line="199" pos:column="48">.</op:operator><name pos:line="199" pos:column="49">BeanSerializer</name></name><argument_list pos:line="199" pos:column="63">(
                <argument><expr><name pos:line="200" pos:column="17">_javaType</name></expr></argument>, <argument><expr><name pos:line="200" pos:column="28">_xmlType</name></expr></argument>, <argument><expr><name pos:line="200" pos:column="38">typeDesc</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <comment type="block" format="javadoc" pos:line="203" pos:column="5">/**
     * Get Custom Deserializer
     * @param mechType 
     * @param _javaType 
     * @param _xmlType 
     * @return
     */</comment>
    <function><type><specifier pos:line="210" pos:column="5">public</specifier> <specifier pos:line="210" pos:column="12">static</specifier> <name><name pos:line="210" pos:column="19">org</name><op:operator pos:line="210" pos:column="22">.</op:operator><name pos:line="210" pos:column="23">apache</name><op:operator pos:line="210" pos:column="29">.</op:operator><name pos:line="210" pos:column="30">axis</name><op:operator pos:line="210" pos:column="34">.</op:operator><name pos:line="210" pos:column="35">encoding</name><op:operator pos:line="210" pos:column="43">.</op:operator><name pos:line="210" pos:column="44">Deserializer</name></name></type> <name pos:line="210" pos:column="57">getDeserializer</name><parameter_list pos:line="210" pos:column="72">(
            <param><decl><type><name><name pos:line="211" pos:column="13">java</name><op:operator pos:line="211" pos:column="17">.</op:operator><name pos:line="211" pos:column="18">lang</name><op:operator pos:line="211" pos:column="22">.</op:operator><name pos:line="211" pos:column="23">String</name></name></type> <name pos:line="211" pos:column="30">mechType</name></decl></param>,
            <param><decl><type><name><name pos:line="212" pos:column="13">java</name><op:operator pos:line="212" pos:column="17">.</op:operator><name pos:line="212" pos:column="18">lang</name><op:operator pos:line="212" pos:column="22">.</op:operator><name pos:line="212" pos:column="23">Class</name></name></type> <name pos:line="212" pos:column="29">_javaType</name></decl></param>,
            <param><decl><type><name><name pos:line="213" pos:column="13">javax</name><op:operator pos:line="213" pos:column="18">.</op:operator><name pos:line="213" pos:column="19">xml</name><op:operator pos:line="213" pos:column="22">.</op:operator><name pos:line="213" pos:column="23">namespace</name><op:operator pos:line="213" pos:column="32">.</op:operator><name pos:line="213" pos:column="33">QName</name></name></type> <name pos:line="213" pos:column="39">_xmlType</name></decl></param>)</parameter_list> <block pos:line="213" pos:column="49">{
        <return pos:line="214" pos:column="9">return <expr><op:operator pos:line="214" pos:column="16">new</op:operator> <call><name><name pos:line="214" pos:column="20">org</name><op:operator pos:line="214" pos:column="23">.</op:operator><name pos:line="214" pos:column="24">apache</name><op:operator pos:line="214" pos:column="30">.</op:operator><name pos:line="214" pos:column="31">axis</name><op:operator pos:line="214" pos:column="35">.</op:operator><name pos:line="214" pos:column="36">encoding</name><op:operator pos:line="214" pos:column="44">.</op:operator><name pos:line="214" pos:column="45">ser</name><op:operator pos:line="214" pos:column="48">.</op:operator><name pos:line="214" pos:column="49">BeanDeserializer</name></name><argument_list pos:line="214" pos:column="65">(
                <argument><expr><name pos:line="215" pos:column="17">_javaType</name></expr></argument>, <argument><expr><name pos:line="215" pos:column="28">_xmlType</name></expr></argument>, <argument><expr><name pos:line="215" pos:column="38">typeDesc</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>
}</block></class>
</unit>
