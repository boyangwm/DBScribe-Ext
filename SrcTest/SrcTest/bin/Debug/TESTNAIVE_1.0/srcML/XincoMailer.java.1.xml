<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\xinco\src\com\bluecubs\xinco\core\server\email\XincoMailer.java" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/*
Some SMTP servers require a username and password authentication before you
can use their Server for Sending mail. This is most common with couple
of ISP's who provide SMTP Address to Send Mail.
 
This Program gives any example on how to do SMTP Authentication
(User and Password verification)
 
This is a free source code and is provided as it is without any warranties and
it can be used in any your code for free.
 
Author : Sudhir Ancha
 */</comment>
<package pos:line="14" pos:column="1">package <name><name pos:line="14" pos:column="9">com</name><op:operator pos:line="14" pos:column="12">.</op:operator><name pos:line="14" pos:column="13">bluecubs</name><op:operator pos:line="14" pos:column="21">.</op:operator><name pos:line="14" pos:column="22">xinco</name><op:operator pos:line="14" pos:column="27">.</op:operator><name pos:line="14" pos:column="28">core</name><op:operator pos:line="14" pos:column="32">.</op:operator><name pos:line="14" pos:column="33">server</name><op:operator pos:line="14" pos:column="39">.</op:operator><name pos:line="14" pos:column="40">email</name></name>;</package>

<import pos:line="16" pos:column="1">import <name><name pos:line="16" pos:column="8">com</name><op:operator pos:line="16" pos:column="11">.</op:operator><name pos:line="16" pos:column="12">bluecubs</name><op:operator pos:line="16" pos:column="20">.</op:operator><name pos:line="16" pos:column="21">xinco</name><op:operator pos:line="16" pos:column="26">.</op:operator><name pos:line="16" pos:column="27">core</name><op:operator pos:line="16" pos:column="31">.</op:operator><name pos:line="16" pos:column="32">server</name><op:operator pos:line="16" pos:column="38">.</op:operator><name pos:line="16" pos:column="39">XincoDBManager</name></name>;</import>
<import pos:line="17" pos:column="1">import <name><name pos:line="17" pos:column="8">javax</name><op:operator pos:line="17" pos:column="13">.</op:operator><name pos:line="17" pos:column="14">mail</name></name>.*;</import>
<import pos:line="18" pos:column="1">import <name><name pos:line="18" pos:column="8">javax</name><op:operator pos:line="18" pos:column="13">.</op:operator><name pos:line="18" pos:column="14">mail</name><op:operator pos:line="18" pos:column="18">.</op:operator><name pos:line="18" pos:column="19">internet</name></name>.*;</import>
<import pos:line="19" pos:column="1">import <name><name pos:line="19" pos:column="8">java</name><op:operator pos:line="19" pos:column="12">.</op:operator><name pos:line="19" pos:column="13">util</name></name>.*;</import>

<class><specifier pos:line="21" pos:column="1">public</specifier> class <name pos:line="21" pos:column="14">XincoMailer</name> <block pos:line="21" pos:column="26">{
    <decl_stmt><decl><type><specifier pos:line="22" pos:column="5">private</specifier> <name pos:line="22" pos:column="13">XincoDBManager</name></type> <name pos:line="22" pos:column="28">DBM</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="23" pos:column="5">private</specifier> <name pos:line="23" pos:column="13">String</name></type> <name pos:line="23" pos:column="20">SMTP_HOST_NAME</name> <init pos:line="23" pos:column="35">= <expr><lit:literal type="string" pos:line="23" pos:column="37">"smtp.bluecubs.com"</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="24" pos:column="5">private</specifier> <name pos:line="24" pos:column="13">String</name></type> <name pos:line="24" pos:column="20">SMTP_AUTH_USER</name> <init pos:line="24" pos:column="35">= <expr><lit:literal type="string" pos:line="24" pos:column="37">"myuser@bluecubs.com"</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="25" pos:column="5">private</specifier> <name pos:line="25" pos:column="13">String</name></type> <name pos:line="25" pos:column="20">SMTP_AUTH_PWD</name>  <init pos:line="25" pos:column="35">= <expr><lit:literal type="string" pos:line="25" pos:column="37">"mypsswd"</lit:literal></expr></init></decl>;</decl_stmt>
    
    <decl_stmt><decl><type><specifier pos:line="27" pos:column="5">private</specifier> <specifier pos:line="27" pos:column="13">static</specifier> <specifier pos:line="27" pos:column="20">final</specifier> <name pos:line="27" pos:column="26">String</name></type> <name pos:line="27" pos:column="33">emailMsgTxt</name>      <init pos:line="27" pos:column="50">= <expr><lit:literal type="string" pos:line="27" pos:column="52">"Online Order Confirmation Message. Also include the Tracking Number."</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="28" pos:column="5">private</specifier> <specifier pos:line="28" pos:column="13">static</specifier> <specifier pos:line="28" pos:column="20">final</specifier> <name pos:line="28" pos:column="26">String</name></type> <name pos:line="28" pos:column="33">emailSubjectTxt</name>  <init pos:line="28" pos:column="50">= <expr><lit:literal type="string" pos:line="28" pos:column="52">"Order Confirmation Subject"</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="29" pos:column="5">private</specifier> <specifier pos:line="29" pos:column="13">static</specifier> <specifier pos:line="29" pos:column="20">final</specifier> <name pos:line="29" pos:column="26">String</name></type> <name pos:line="29" pos:column="33">emailFromAddress</name> <init pos:line="29" pos:column="50">= <expr><lit:literal type="string" pos:line="29" pos:column="52">"sudhir@javacommerce.com"</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="30" pos:column="5">private</specifier> <specifier pos:line="30" pos:column="13">static</specifier> <specifier pos:line="30" pos:column="20">final</specifier> <name pos:line="30" pos:column="26">String</name></type> <name pos:line="30" pos:column="33">port</name> <init pos:line="30" pos:column="38">= <expr><lit:literal type="string" pos:line="30" pos:column="40">"25"</lit:literal></expr></init></decl>;</decl_stmt>
    
    <comment type="line" pos:line="32" pos:column="5">// Add List of Email address to who email needs to be sent to</comment>
    <decl_stmt><decl><type><specifier pos:line="33" pos:column="5">private</specifier> <specifier pos:line="33" pos:column="13">static</specifier> <specifier pos:line="33" pos:column="20">final</specifier> <name pos:line="33" pos:column="26">String</name><index pos:line="33" pos:column="32">[]</index></type> <name pos:line="33" pos:column="35">emailList</name> <init pos:line="33" pos:column="45">= <expr><block pos:line="33" pos:column="47">{<expr><lit:literal type="string" pos:line="33" pos:column="48">"javier_ortiz@baxter.com"</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
    
    <function><type><specifier pos:line="35" pos:column="5">public</specifier> <specifier pos:line="35" pos:column="12">static</specifier> <name pos:line="35" pos:column="19">void</name></type> <name pos:line="35" pos:column="24">main</name><parameter_list pos:line="35" pos:column="28">(<param><decl><type><name pos:line="35" pos:column="29">String</name></type> <name><name pos:line="35" pos:column="36">args</name><index pos:line="35" pos:column="40">[]</index></name></decl></param>)</parameter_list> <throws pos:line="35" pos:column="44">throws <argument><expr><name pos:line="35" pos:column="51">Exception</name></expr></argument></throws> <block pos:line="35" pos:column="61">{
        <decl_stmt><decl><type><name pos:line="36" pos:column="9">XincoMailer</name></type> <name pos:line="36" pos:column="21">Xmailer</name> <init pos:line="36" pos:column="29">= <expr><op:operator pos:line="36" pos:column="31">new</op:operator> <call><name pos:line="36" pos:column="35">XincoMailer</name><argument_list pos:line="36" pos:column="46">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="37" pos:column="9">Xmailer</name><op:operator pos:line="37" pos:column="16">.</op:operator><name pos:line="37" pos:column="17">postMail</name></name><argument_list pos:line="37" pos:column="25">( <argument><expr><name pos:line="37" pos:column="27">emailList</name></expr></argument>, <argument><expr><name pos:line="37" pos:column="38">emailSubjectTxt</name></expr></argument>, <argument><expr><name pos:line="37" pos:column="55">emailMsgTxt</name></expr></argument>, <argument><expr><name pos:line="37" pos:column="68">emailFromAddress</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="line" pos:line="38" pos:column="9">//System.out.println("Sucessfully Sent mail to All Users");</comment>
    }</block></function>
    
    <function><type><specifier pos:line="41" pos:column="5">public</specifier> <name pos:line="41" pos:column="12">void</name></type> <name pos:line="41" pos:column="17">setHost</name><parameter_list pos:line="41" pos:column="24">(<param><decl><type><name pos:line="41" pos:column="25">String</name></type> <name pos:line="41" pos:column="32">host</name></decl></param>)</parameter_list><block pos:line="41" pos:column="37">{
        <expr_stmt><expr><name><name pos:line="42" pos:column="9">this</name><op:operator pos:line="42" pos:column="13">.</op:operator><name pos:line="42" pos:column="14">SMTP_HOST_NAME</name></name><op:operator pos:line="42" pos:column="28">=</op:operator><name pos:line="42" pos:column="29">host</name></expr>;</expr_stmt>
    }</block></function>
    
    <function><type><specifier pos:line="45" pos:column="5">public</specifier> <name pos:line="45" pos:column="12">void</name></type> <name pos:line="45" pos:column="17">setAuthenticationUser</name><parameter_list pos:line="45" pos:column="38">(<param><decl><type><name pos:line="45" pos:column="39">String</name></type> <name pos:line="45" pos:column="46">user</name></decl></param>)</parameter_list><block pos:line="45" pos:column="51">{
        <expr_stmt><expr><name><name pos:line="46" pos:column="9">this</name><op:operator pos:line="46" pos:column="13">.</op:operator><name pos:line="46" pos:column="14">SMTP_AUTH_USER</name></name><op:operator pos:line="46" pos:column="28">=</op:operator><name pos:line="46" pos:column="29">user</name></expr>;</expr_stmt>
    }</block></function>
    
    <function><type><specifier pos:line="49" pos:column="5">public</specifier> <name pos:line="49" pos:column="12">void</name></type> <name pos:line="49" pos:column="17">setAuthenticationPassword</name><parameter_list pos:line="49" pos:column="42">(<param><decl><type><name pos:line="49" pos:column="43">String</name></type> <name pos:line="49" pos:column="50">pass</name></decl></param>)</parameter_list><block pos:line="49" pos:column="55">{
        <expr_stmt><expr><name><name pos:line="50" pos:column="9">this</name><op:operator pos:line="50" pos:column="13">.</op:operator><name pos:line="50" pos:column="14">SMTP_AUTH_PWD</name></name><op:operator pos:line="50" pos:column="27">=</op:operator><name pos:line="50" pos:column="28">pass</name></expr>;</expr_stmt>
    }</block></function>
    
    <function><type><specifier pos:line="53" pos:column="5">public</specifier> <name pos:line="53" pos:column="12">void</name></type> <name pos:line="53" pos:column="17">postMail</name><parameter_list pos:line="53" pos:column="25">( <param><decl><type><name pos:line="53" pos:column="27">String</name></type> <name><name pos:line="53" pos:column="34">recipients</name><index pos:line="53" pos:column="44">[ ]</index></name></decl></param>, <param><decl><type><name pos:line="53" pos:column="49">String</name></type> <name pos:line="53" pos:column="56">subject</name></decl></param>,
            <param><decl><type><name pos:line="54" pos:column="13">String</name></type> <name pos:line="54" pos:column="20">message</name></decl></param> , <param><decl><type><name pos:line="54" pos:column="30">String</name></type> <name pos:line="54" pos:column="37">from</name></decl></param>)</parameter_list> <throws pos:line="54" pos:column="43">throws <argument><expr><name pos:line="54" pos:column="50">MessagingException</name></expr></argument></throws> <block pos:line="54" pos:column="69">{
        <decl_stmt><decl><type><name pos:line="55" pos:column="9">boolean</name></type> <name pos:line="55" pos:column="17">debug</name> <init pos:line="55" pos:column="23">= <expr><lit:literal type="boolean" pos:line="55" pos:column="25">false</lit:literal></expr></init></decl>;</decl_stmt>
        
        <comment type="line" pos:line="57" pos:column="9">//Set the host smtp address and related properties</comment>
        <decl_stmt><decl><type><name pos:line="58" pos:column="9">Properties</name></type> <name pos:line="58" pos:column="20">props</name> <init pos:line="58" pos:column="26">= <expr><op:operator pos:line="58" pos:column="28">new</op:operator> <call><name pos:line="58" pos:column="32">Properties</name><argument_list pos:line="58" pos:column="42">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="59" pos:column="9">props</name><op:operator pos:line="59" pos:column="14">.</op:operator><name pos:line="59" pos:column="15">put</name></name><argument_list pos:line="59" pos:column="18">(<argument><expr><lit:literal type="string" pos:line="59" pos:column="19">"mail.smtp.host"</lit:literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="37">SMTP_HOST_NAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="60" pos:column="9">props</name><op:operator pos:line="60" pos:column="14">.</op:operator><name pos:line="60" pos:column="15">put</name></name><argument_list pos:line="60" pos:column="18">(<argument><expr><lit:literal type="string" pos:line="60" pos:column="19">"mail.smtp.auth"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="60" pos:column="37">"true"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="61" pos:column="9">props</name><op:operator pos:line="61" pos:column="14">.</op:operator><name pos:line="61" pos:column="15">put</name></name><argument_list pos:line="61" pos:column="18">(<argument><expr><lit:literal type="string" pos:line="61" pos:column="19">"mail.smtp.port"</lit:literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="37">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="62" pos:column="9">props</name><op:operator pos:line="62" pos:column="14">.</op:operator><name pos:line="62" pos:column="15">put</name></name><argument_list pos:line="62" pos:column="18">(<argument><expr><lit:literal type="string" pos:line="62" pos:column="19">"mail.smtp.starttls.enable"</lit:literal></expr></argument>,<argument><expr><lit:literal type="string" pos:line="62" pos:column="47">"true"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="63" pos:column="9">props</name><op:operator pos:line="63" pos:column="14">.</op:operator><name pos:line="63" pos:column="15">put</name></name><argument_list pos:line="63" pos:column="18">(<argument><expr><lit:literal type="string" pos:line="63" pos:column="19">"mail.smtp.auth "</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="63" pos:column="38">"true "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        
        <decl_stmt><decl><type><name pos:line="65" pos:column="9">Authenticator</name></type> <name pos:line="65" pos:column="23">auth</name> <init pos:line="65" pos:column="28">= <expr><op:operator pos:line="65" pos:column="30">new</op:operator> <call><name pos:line="65" pos:column="34">SMTPAuthenticator</name><argument_list pos:line="65" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="66" pos:column="9">Session</name></type> <name pos:line="66" pos:column="17">session</name> <init pos:line="66" pos:column="25">= <expr><call><name><name pos:line="66" pos:column="27">Session</name><op:operator pos:line="66" pos:column="34">.</op:operator><name pos:line="66" pos:column="35">getDefaultInstance</name></name><argument_list pos:line="66" pos:column="53">(<argument><expr><name pos:line="66" pos:column="54">props</name></expr></argument>, <argument><expr><name pos:line="66" pos:column="61">auth</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        
        <expr_stmt><expr><call><name><name pos:line="68" pos:column="9">session</name><op:operator pos:line="68" pos:column="16">.</op:operator><name pos:line="68" pos:column="17">setDebug</name></name><argument_list pos:line="68" pos:column="25">(<argument><expr><name pos:line="68" pos:column="26">debug</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        
        <comment type="line" pos:line="70" pos:column="9">// create a message</comment>
        <decl_stmt><decl><type><name pos:line="71" pos:column="9">Message</name></type> <name pos:line="71" pos:column="17">msg</name> <init pos:line="71" pos:column="21">= <expr><op:operator pos:line="71" pos:column="23">new</op:operator> <call><name pos:line="71" pos:column="27">MimeMessage</name><argument_list pos:line="71" pos:column="38">(<argument><expr><name pos:line="71" pos:column="39">session</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        
        <comment type="line" pos:line="73" pos:column="9">// set the from and to address</comment>
        <decl_stmt><decl><type><name pos:line="74" pos:column="9">InternetAddress</name></type> <name pos:line="74" pos:column="25">addressFrom</name> <init pos:line="74" pos:column="37">= <expr><op:operator pos:line="74" pos:column="39">new</op:operator> <call><name pos:line="74" pos:column="43">InternetAddress</name><argument_list pos:line="74" pos:column="58">(<argument><expr><name pos:line="74" pos:column="59">from</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="75" pos:column="9">msg</name><op:operator pos:line="75" pos:column="12">.</op:operator><name pos:line="75" pos:column="13">setFrom</name></name><argument_list pos:line="75" pos:column="20">(<argument><expr><name pos:line="75" pos:column="21">addressFrom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        
        <decl_stmt><decl><type><name pos:line="77" pos:column="9">InternetAddress</name><index pos:line="77" pos:column="24">[]</index></type> <name pos:line="77" pos:column="27">addressTo</name> <init pos:line="77" pos:column="37">= <expr><op:operator pos:line="77" pos:column="39">new</op:operator> <name><name pos:line="77" pos:column="43">InternetAddress</name><index pos:line="77" pos:column="58">[<expr><name><name pos:line="77" pos:column="59">recipients</name><op:operator pos:line="77" pos:column="69">.</op:operator><name pos:line="77" pos:column="70">length</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <for pos:line="78" pos:column="9">for (<init><decl><type><name pos:line="78" pos:column="14">int</name></type> <name pos:line="78" pos:column="18">i</name> <init pos:line="78" pos:column="20">= <expr><lit:literal type="number" pos:line="78" pos:column="22">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="78" pos:column="25">i</name> <op:operator pos:line="78" pos:column="27">&lt;</op:operator> <name><name pos:line="78" pos:column="29">recipients</name><op:operator pos:line="78" pos:column="39">.</op:operator><name pos:line="78" pos:column="40">length</name></name></expr>;</condition> <incr><expr><name pos:line="78" pos:column="48">i</name><op:operator pos:line="78" pos:column="49">++</op:operator></expr></incr>) <block pos:line="78" pos:column="53">{
            <expr_stmt><expr><name><name pos:line="79" pos:column="13">addressTo</name><index pos:line="79" pos:column="22">[<expr><name pos:line="79" pos:column="23">i</name></expr>]</index></name> <op:operator pos:line="79" pos:column="26">=</op:operator> <op:operator pos:line="79" pos:column="28">new</op:operator> <call><name pos:line="79" pos:column="32">InternetAddress</name><argument_list pos:line="79" pos:column="47">(<argument><expr><name><name pos:line="79" pos:column="48">recipients</name><index pos:line="79" pos:column="58">[<expr><name pos:line="79" pos:column="59">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></for>
        <expr_stmt><expr><call><name><name pos:line="81" pos:column="9">msg</name><op:operator pos:line="81" pos:column="12">.</op:operator><name pos:line="81" pos:column="13">setRecipients</name></name><argument_list pos:line="81" pos:column="26">(<argument><expr><name><name pos:line="81" pos:column="27">Message</name><op:operator pos:line="81" pos:column="34">.</op:operator><name pos:line="81" pos:column="35">RecipientType</name><op:operator pos:line="81" pos:column="48">.</op:operator><name pos:line="81" pos:column="49">TO</name></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="53">addressTo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        
        
        <comment type="line" pos:line="84" pos:column="9">// Setting the Subject and Content Type</comment>
        <expr_stmt><expr><call><name><name pos:line="85" pos:column="9">msg</name><op:operator pos:line="85" pos:column="12">.</op:operator><name pos:line="85" pos:column="13">setSubject</name></name><argument_list pos:line="85" pos:column="23">(<argument><expr><name pos:line="85" pos:column="24">subject</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="86" pos:column="9">msg</name><op:operator pos:line="86" pos:column="12">.</op:operator><name pos:line="86" pos:column="13">setContent</name></name><argument_list pos:line="86" pos:column="23">(<argument><expr><name pos:line="86" pos:column="24">message</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="86" pos:column="33">"text/plain"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="87" pos:column="9">Transport</name><op:operator pos:line="87" pos:column="18">.</op:operator><name pos:line="87" pos:column="19">send</name></name><argument_list pos:line="87" pos:column="23">(<argument><expr><name pos:line="87" pos:column="24">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    
    
    <comment type="block" format="javadoc" pos:line="91" pos:column="5">/**
     * SimpleAuthenticator is used to do simple authentication
     * when the SMTP server requires it.
     */</comment>
    <class><specifier pos:line="95" pos:column="5">private</specifier> class <name pos:line="95" pos:column="19">SMTPAuthenticator</name> <super><extends pos:line="95" pos:column="37">extends <name><name pos:line="95" pos:column="45">javax</name><op:operator pos:line="95" pos:column="50">.</op:operator><name pos:line="95" pos:column="51">mail</name><op:operator pos:line="95" pos:column="55">.</op:operator><name pos:line="95" pos:column="56">Authenticator</name></name></extends></super> <block pos:line="95" pos:column="70">{
        
        <function><type><annotation pos:line="97" pos:column="9">@<name pos:line="97" pos:column="10">Override</name></annotation>
        <specifier pos:line="98" pos:column="9">public</specifier> <name pos:line="98" pos:column="16">PasswordAuthentication</name></type> <name pos:line="98" pos:column="39">getPasswordAuthentication</name><parameter_list pos:line="98" pos:column="64">()</parameter_list> <block pos:line="98" pos:column="67">{
            <decl_stmt><decl><type><name pos:line="99" pos:column="13">String</name></type> <name pos:line="99" pos:column="20">username</name> <init pos:line="99" pos:column="29">= <expr><name pos:line="99" pos:column="31">SMTP_AUTH_USER</name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="100" pos:column="13">String</name></type> <name pos:line="100" pos:column="20">password</name> <init pos:line="100" pos:column="29">= <expr><name pos:line="100" pos:column="31">SMTP_AUTH_PWD</name></expr></init></decl>;</decl_stmt>
            <return pos:line="101" pos:column="13">return <expr><op:operator pos:line="101" pos:column="20">new</op:operator> <call><name pos:line="101" pos:column="24">PasswordAuthentication</name><argument_list pos:line="101" pos:column="46">(<argument><expr><name pos:line="101" pos:column="47">username</name></expr></argument>, <argument><expr><name pos:line="101" pos:column="57">password</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>
    
}</block></class>



</unit>
