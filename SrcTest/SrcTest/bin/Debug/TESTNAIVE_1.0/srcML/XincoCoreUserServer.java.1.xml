<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\xinco\src\com\bluecubs\xinco\core\server\XincoCoreUserServer.java" pos:tabs="8"><comment type="block" format="javadoc" pos:line="1" pos:column="1">/**
 *Copyright 2009 blueCubs.com
 *
 *Licensed under the Apache License, Version 2.0 (the "License");
 *you may not use this file except in compliance with the License.
 *You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 *Unless required by applicable law or agreed to in writing, software
 *distributed under the License is distributed on an "AS IS" BASIS,
 *WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *See the License for the specific language governing permissions and
 *limitations under the License.
 *
 *************************************************************
 * This project supports the blueCubs vision of giving back
 * to the community in exchange for free software!
 * More information on: http://www.bluecubs.org
 *************************************************************
 *
 * Name:            XincoCoreUserServer
 *
 * Description:     user
 *
 * Original Author: Alexander Manes
 * Date:            2004
 *
 * Modifications:
 *
 * Who?             When?             What?
 * Javier A. Ortiz 09/20/2006         Related changes made to XincoCoreUser (new fields) in the following methods:
 *                                    write2DB, XincoCoreUserServer, XincoCoreUserServer (x 2), getXincoCoreUsers
 * Javier A. Ortiz 11/06/2006         Moved the logic of locking an account due to login attempts from the XincoAdminServlet
 * Alexander Manes 11/12/2006         Moved the new user features to core class
 * Javier A. Ortiz 11/20/2006         Undo previous changes and corrected a bug that increased twice 
 *                                    the attempts in the DB when wrong password was used
 * Javier A. Ortiz 01/08/2007         
 *************************************************************
 */</comment>
<package pos:line="41" pos:column="1">package <name><name pos:line="41" pos:column="9">com</name><op:operator pos:line="41" pos:column="12">.</op:operator><name pos:line="41" pos:column="13">bluecubs</name><op:operator pos:line="41" pos:column="21">.</op:operator><name pos:line="41" pos:column="22">xinco</name><op:operator pos:line="41" pos:column="27">.</op:operator><name pos:line="41" pos:column="28">core</name><op:operator pos:line="41" pos:column="32">.</op:operator><name pos:line="41" pos:column="33">server</name></name>;</package>

<import pos:line="43" pos:column="1">import <name><name pos:line="43" pos:column="8">java</name><op:operator pos:line="43" pos:column="12">.</op:operator><name pos:line="43" pos:column="13">sql</name></name>.*;</import>
<import pos:line="44" pos:column="1">import <name><name pos:line="44" pos:column="8">java</name><op:operator pos:line="44" pos:column="12">.</op:operator><name pos:line="44" pos:column="13">util</name><op:operator pos:line="44" pos:column="17">.</op:operator><name pos:line="44" pos:column="18">Vector</name></name>;</import>

<import pos:line="46" pos:column="1">import <name><name pos:line="46" pos:column="8">com</name><op:operator pos:line="46" pos:column="11">.</op:operator><name pos:line="46" pos:column="12">bluecubs</name><op:operator pos:line="46" pos:column="20">.</op:operator><name pos:line="46" pos:column="21">xinco</name><op:operator pos:line="46" pos:column="26">.</op:operator><name pos:line="46" pos:column="27">core</name></name>.*;</import>
<import pos:line="47" pos:column="1">import <name><name pos:line="47" pos:column="8">com</name><op:operator pos:line="47" pos:column="11">.</op:operator><name pos:line="47" pos:column="12">bluecubs</name><op:operator pos:line="47" pos:column="20">.</op:operator><name pos:line="47" pos:column="21">xinco</name><op:operator pos:line="47" pos:column="26">.</op:operator><name pos:line="47" pos:column="27">tools</name><op:operator pos:line="47" pos:column="32">.</op:operator><name pos:line="47" pos:column="33">MD5</name></name>;</import>
<import pos:line="48" pos:column="1">import <name><name pos:line="48" pos:column="8">java</name><op:operator pos:line="48" pos:column="12">.</op:operator><name pos:line="48" pos:column="13">util</name><op:operator pos:line="48" pos:column="17">.</op:operator><name pos:line="48" pos:column="18">Calendar</name></name>;</import>
<import pos:line="49" pos:column="1">import <name><name pos:line="49" pos:column="8">java</name><op:operator pos:line="49" pos:column="12">.</op:operator><name pos:line="49" pos:column="13">util</name><op:operator pos:line="49" pos:column="17">.</op:operator><name pos:line="49" pos:column="18">GregorianCalendar</name></name>;</import>
<import pos:line="50" pos:column="1">import <name><name pos:line="50" pos:column="8">java</name><op:operator pos:line="50" pos:column="12">.</op:operator><name pos:line="50" pos:column="13">util</name><op:operator pos:line="50" pos:column="17">.</op:operator><name pos:line="50" pos:column="18">ResourceBundle</name></name>;</import>

<comment type="line" pos:line="52" pos:column="1">//Status list (in DB)</comment>
<import pos:line="53" pos:column="1">import <name><name pos:line="53" pos:column="8">java</name><op:operator pos:line="53" pos:column="12">.</op:operator><name pos:line="53" pos:column="13">util</name><op:operator pos:line="53" pos:column="17">.</op:operator><name pos:line="53" pos:column="18">logging</name><op:operator pos:line="53" pos:column="25">.</op:operator><name pos:line="53" pos:column="26">Level</name></name>;</import>
<import pos:line="54" pos:column="1">import <name><name pos:line="54" pos:column="8">java</name><op:operator pos:line="54" pos:column="12">.</op:operator><name pos:line="54" pos:column="13">util</name><op:operator pos:line="54" pos:column="17">.</op:operator><name pos:line="54" pos:column="18">logging</name><op:operator pos:line="54" pos:column="25">.</op:operator><name pos:line="54" pos:column="26">Logger</name></name>;</import>
<comment type="line" pos:line="55" pos:column="1">//1 = unlocked</comment>
<comment type="line" pos:line="56" pos:column="1">//2 = locked</comment>
<comment type="line" pos:line="57" pos:column="1">//3 = aged password</comment>
<comment type="line" pos:line="58" pos:column="1">//Temporary statuses</comment>
<comment type="line" pos:line="59" pos:column="1">//-1 = aged password modified, ready to turn unlocked</comment>
<class><specifier pos:line="60" pos:column="1">public</specifier> class <name pos:line="60" pos:column="14">XincoCoreUserServer</name> <super><extends pos:line="60" pos:column="34">extends <name pos:line="60" pos:column="42">XincoCoreUser</name></extends></super> <block pos:line="60" pos:column="56">{

    <decl_stmt><decl><type><specifier pos:line="62" pos:column="5">private</specifier> <name pos:line="62" pos:column="13">String</name></type> <name pos:line="62" pos:column="20">sql</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="63" pos:column="5">private</specifier> <name pos:line="63" pos:column="13">boolean</name></type> <name pos:line="63" pos:column="21">hashPassword</name> <init pos:line="63" pos:column="34">= <expr><lit:literal type="boolean" pos:line="63" pos:column="36">true</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="64" pos:column="5">private</specifier> <name pos:line="64" pos:column="13">boolean</name></type> <name pos:line="64" pos:column="21">increaseAttempts</name> <init pos:line="64" pos:column="38">= <expr><lit:literal type="boolean" pos:line="64" pos:column="40">false</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="65" pos:column="5">private</specifier> <name pos:line="65" pos:column="13">ResourceBundle</name></type> <name pos:line="65" pos:column="28">xerb</name> <init pos:line="65" pos:column="33">= <expr><call><name><name pos:line="65" pos:column="35">ResourceBundle</name><op:operator pos:line="65" pos:column="49">.</op:operator><name pos:line="65" pos:column="50">getBundle</name></name><argument_list pos:line="65" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="65" pos:column="60">"com.bluecubs.xinco.messages.XincoMessages"</lit:literal></expr></argument>)</argument_list></call></expr></init><op:operator pos:line="65" pos:column="104">,</op:operator>  <name pos:line="65" pos:column="107">settings</name> <init pos:line="65" pos:column="116">= <expr><call><name><name pos:line="65" pos:column="118">ResourceBundle</name><op:operator pos:line="65" pos:column="132">.</op:operator><name pos:line="65" pos:column="133">getBundle</name></name><argument_list pos:line="65" pos:column="142">(<argument><expr><lit:literal type="string" pos:line="65" pos:column="143">"com.bluecubs.xinco.settings.settings"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="66" pos:column="5">private</specifier> <name><name pos:line="66" pos:column="13">java</name><op:operator pos:line="66" pos:column="17">.</op:operator><name pos:line="66" pos:column="18">sql</name><op:operator pos:line="66" pos:column="21">.</op:operator><name pos:line="66" pos:column="22">Timestamp</name></name></type> <name pos:line="66" pos:column="32">lastModified</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="67" pos:column="5">private</specifier> <name pos:line="67" pos:column="13">int</name></type> <name pos:line="67" pos:column="17">attempts</name></decl>;</decl_stmt>

    <function><type><annotation pos:line="69" pos:column="5">@<name pos:line="69" pos:column="6">SuppressWarnings</name><argument_list pos:line="69" pos:column="22">(<argument><expr><lit:literal type="string" pos:line="69" pos:column="23">"unchecked"</lit:literal></expr></argument>)</argument_list></annotation>
    <specifier pos:line="70" pos:column="5">private</specifier> <name pos:line="70" pos:column="13">void</name></type> <name pos:line="70" pos:column="18">fillXincoCoreGroups</name><parameter_list pos:line="70" pos:column="37">(<param><decl><type><name pos:line="70" pos:column="38">XincoDBManager</name></type> <name pos:line="70" pos:column="53">DBM</name></decl></param>)</parameter_list> <throws pos:line="70" pos:column="58">throws <argument><expr><name pos:line="70" pos:column="65">XincoException</name></expr></argument></throws> <block pos:line="70" pos:column="80">{
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">setXinco_core_groups</name><argument_list pos:line="71" pos:column="29">(<argument><expr><op:operator pos:line="71" pos:column="30">new</op:operator> <call><name pos:line="71" pos:column="34">Vector</name><argument_list pos:line="71" pos:column="40">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <try pos:line="72" pos:column="9">try <block pos:line="72" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="73" pos:column="13">Statement</name></type> <name pos:line="73" pos:column="23">stmt</name> <init pos:line="73" pos:column="28">= <expr><call><name><name pos:line="73" pos:column="30">DBM</name><op:operator pos:line="73" pos:column="33">.</op:operator><name pos:line="73" pos:column="34">con</name><op:operator pos:line="73" pos:column="37">.</op:operator><name pos:line="73" pos:column="38">createStatement</name></name><argument_list pos:line="73" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="74" pos:column="13">ResultSet</name></type> <name pos:line="74" pos:column="23">rs</name> <init pos:line="74" pos:column="26">= <expr><call><name><name pos:line="74" pos:column="28">stmt</name><op:operator pos:line="74" pos:column="32">.</op:operator><name pos:line="74" pos:column="33">executeQuery</name></name><argument_list pos:line="74" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="74" pos:column="46">"SELECT * FROM xinco_core_user_has_xinco_core_group WHERE xinco_core_user_id="</lit:literal> <op:operator pos:line="74" pos:column="125">+</op:operator> <call><name pos:line="74" pos:column="127">getId</name><argument_list pos:line="74" pos:column="132">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <while pos:line="75" pos:column="13">while <condition pos:line="75" pos:column="19">(<expr><call><name><name pos:line="75" pos:column="20">rs</name><op:operator pos:line="75" pos:column="22">.</op:operator><name pos:line="75" pos:column="23">next</name></name><argument_list pos:line="75" pos:column="27">()</argument_list></call></expr>)</condition> <block pos:line="75" pos:column="31">{
                <expr_stmt><expr><call><name pos:line="76" pos:column="17">getXinco_core_groups</name><argument_list pos:line="76" pos:column="37">()</argument_list></call><op:operator pos:line="76" pos:column="39">.</op:operator><call><name pos:line="76" pos:column="40">addElement</name><argument_list pos:line="76" pos:column="50">(<argument><expr><op:operator pos:line="76" pos:column="51">new</op:operator> <call><name pos:line="76" pos:column="55">XincoCoreGroupServer</name><argument_list pos:line="76" pos:column="75">(<argument><expr><call><name><name pos:line="76" pos:column="76">rs</name><op:operator pos:line="76" pos:column="78">.</op:operator><name pos:line="76" pos:column="79">getInt</name></name><argument_list pos:line="76" pos:column="85">(<argument><expr><lit:literal type="string" pos:line="76" pos:column="86">"xinco_core_group_id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="76" pos:column="110">DBM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></while>
            <expr_stmt><expr><call><name><name pos:line="78" pos:column="13">stmt</name><op:operator pos:line="78" pos:column="17">.</op:operator><name pos:line="78" pos:column="18">close</name></name><argument_list pos:line="78" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
        }</block> <catch pos:line="79" pos:column="11">catch <parameter_list pos:line="79" pos:column="17">(<param><decl><type><name pos:line="79" pos:column="18">Exception</name></type> <name pos:line="79" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="79" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="80" pos:column="13">getXinco_core_groups</name><argument_list pos:line="80" pos:column="33">()</argument_list></call><op:operator pos:line="80" pos:column="35">.</op:operator><call><name pos:line="80" pos:column="36">removeAllElements</name><argument_list pos:line="80" pos:column="53">()</argument_list></call></expr>;</expr_stmt>
            <throw pos:line="81" pos:column="13">throw <expr><op:operator pos:line="81" pos:column="19">new</op:operator> <call><name pos:line="81" pos:column="23">XincoException</name><argument_list pos:line="81" pos:column="37">()</argument_list></call></expr>;</throw>
        }</block></catch></try>
    }</block></function>

    <function><type><specifier pos:line="85" pos:column="5">private</specifier> <name pos:line="85" pos:column="13">void</name></type> <name pos:line="85" pos:column="18">writeXincoCoreGroups</name><parameter_list pos:line="85" pos:column="38">(<param><decl><type><name pos:line="85" pos:column="39">XincoDBManager</name></type> <name pos:line="85" pos:column="54">DBM</name></decl></param>)</parameter_list> <throws pos:line="85" pos:column="59">throws <argument><expr><name pos:line="85" pos:column="66">XincoException</name></expr></argument></throws> <block pos:line="85" pos:column="81">{
        <decl_stmt><decl><type><name pos:line="86" pos:column="9">Statement</name></type> <name pos:line="86" pos:column="19">stmt</name></decl>;</decl_stmt>
        <expr_stmt><expr><name pos:line="87" pos:column="9">sql</name> <op:operator pos:line="87" pos:column="13">=</op:operator> <lit:literal type="null" pos:line="87" pos:column="15">null</lit:literal></expr>;</expr_stmt>
        <decl_stmt><decl><type><name pos:line="88" pos:column="9">int</name></type> <name pos:line="88" pos:column="13">i</name> <init pos:line="88" pos:column="15">= <expr><op:operator pos:line="88" pos:column="17">-</op:operator><lit:literal type="number" pos:line="88" pos:column="18">1</lit:literal></expr></init></decl>;</decl_stmt>
        <try pos:line="89" pos:column="9">try <block pos:line="89" pos:column="13">{
            <expr_stmt><expr><name pos:line="90" pos:column="13">stmt</name> <op:operator pos:line="90" pos:column="18">=</op:operator> <call><name><name pos:line="90" pos:column="20">DBM</name><op:operator pos:line="90" pos:column="23">.</op:operator><name pos:line="90" pos:column="24">con</name><op:operator pos:line="90" pos:column="27">.</op:operator><name pos:line="90" pos:column="28">createStatement</name></name><argument_list pos:line="90" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="91" pos:column="13">stmt</name><op:operator pos:line="91" pos:column="17">.</op:operator><name pos:line="91" pos:column="18">executeUpdate</name></name><argument_list pos:line="91" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="91" pos:column="32">"DELETE FROM xinco_core_user_has_xinco_core_group WHERE xinco_core_user_id="</lit:literal> <op:operator pos:line="91" pos:column="109">+</op:operator> <call><name pos:line="91" pos:column="111">getId</name><argument_list pos:line="91" pos:column="116">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="92" pos:column="13">stmt</name><op:operator pos:line="92" pos:column="17">.</op:operator><name pos:line="92" pos:column="18">close</name></name><argument_list pos:line="92" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
            <for pos:line="93" pos:column="13">for (<init><expr><name pos:line="93" pos:column="18">i</name> <op:operator pos:line="93" pos:column="20">=</op:operator> <lit:literal type="number" pos:line="93" pos:column="22">0</lit:literal></expr>;</init> <condition><expr><name pos:line="93" pos:column="25">i</name> <op:operator pos:line="93" pos:column="27">&lt;</op:operator> <call><name pos:line="93" pos:column="29">getXinco_core_groups</name><argument_list pos:line="93" pos:column="49">()</argument_list></call><op:operator pos:line="93" pos:column="51">.</op:operator><call><name pos:line="93" pos:column="52">size</name><argument_list pos:line="93" pos:column="56">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="93" pos:column="60">i</name><op:operator pos:line="93" pos:column="61">++</op:operator></expr></incr>) <block pos:line="93" pos:column="65">{
                <expr_stmt><expr><name pos:line="94" pos:column="17">stmt</name> <op:operator pos:line="94" pos:column="22">=</op:operator> <call><name><name pos:line="94" pos:column="24">DBM</name><op:operator pos:line="94" pos:column="27">.</op:operator><name pos:line="94" pos:column="28">con</name><op:operator pos:line="94" pos:column="31">.</op:operator><name pos:line="94" pos:column="32">createStatement</name></name><argument_list pos:line="94" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="95" pos:column="17">sql</name> <op:operator pos:line="95" pos:column="21">=</op:operator> <lit:literal type="string" pos:line="95" pos:column="23">"INSERT INTO xinco_core_user_has_xinco_core_group VALUES ("</lit:literal> <op:operator pos:line="95" pos:column="83">+</op:operator> <call><name pos:line="95" pos:column="85">getId</name><argument_list pos:line="95" pos:column="90">()</argument_list></call> <op:operator pos:line="95" pos:column="93">+</op:operator>
                        <lit:literal type="string" pos:line="96" pos:column="25">", "</lit:literal> <op:operator pos:line="96" pos:column="30">+</op:operator> <op:operator pos:line="96" pos:column="32">(</op:operator><op:operator pos:line="96" pos:column="33">(</op:operator><name pos:line="96" pos:column="34">XincoCoreGroupServer</name><op:operator pos:line="96" pos:column="54">)</op:operator> <call><name pos:line="96" pos:column="56">getXinco_core_groups</name><argument_list pos:line="96" pos:column="76">()</argument_list></call><op:operator pos:line="96" pos:column="78">.</op:operator><call><name pos:line="96" pos:column="79">elementAt</name><argument_list pos:line="96" pos:column="88">(<argument><expr><name pos:line="96" pos:column="89">i</name></expr></argument>)</argument_list></call><op:operator pos:line="96" pos:column="91">)</op:operator><op:operator pos:line="96" pos:column="92">.</op:operator><call><name pos:line="96" pos:column="93">getId</name><argument_list pos:line="96" pos:column="98">()</argument_list></call> <op:operator pos:line="96" pos:column="101">+</op:operator>
                        <lit:literal type="string" pos:line="97" pos:column="25">", "</lit:literal> <op:operator pos:line="97" pos:column="30">+</op:operator> <lit:literal type="number" pos:line="97" pos:column="32">1</lit:literal> <op:operator pos:line="97" pos:column="34">+</op:operator> <lit:literal type="string" pos:line="97" pos:column="36">")"</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="98" pos:column="17">stmt</name><op:operator pos:line="98" pos:column="21">.</op:operator><name pos:line="98" pos:column="22">executeUpdate</name></name><argument_list pos:line="98" pos:column="35">(<argument><expr><name pos:line="98" pos:column="36">sql</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="99" pos:column="17">stmt</name><op:operator pos:line="99" pos:column="21">.</op:operator><name pos:line="99" pos:column="22">close</name></name><argument_list pos:line="99" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
            }</block></for>
        }</block> <catch pos:line="101" pos:column="11">catch <parameter_list pos:line="101" pos:column="17">(<param><decl><type><name pos:line="101" pos:column="18">Exception</name></type> <name pos:line="101" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="101" pos:column="31">{
            <throw pos:line="102" pos:column="13">throw <expr><op:operator pos:line="102" pos:column="19">new</op:operator> <call><name pos:line="102" pos:column="23">XincoException</name><argument_list pos:line="102" pos:column="37">()</argument_list></call></expr>;</throw>
        }</block></catch></try>
    }</block></function>

    <comment type="line" pos:line="106" pos:column="5">//create user object and login</comment>
    <constructor><specifier pos:line="107" pos:column="5">public</specifier> <name pos:line="107" pos:column="12">XincoCoreUserServer</name><parameter_list pos:line="107" pos:column="31">(<param><decl><type><name pos:line="107" pos:column="32">String</name></type> <name pos:line="107" pos:column="39">attrUN</name></decl></param>, <param><decl><type><name pos:line="107" pos:column="47">String</name></type> <name pos:line="107" pos:column="54">attrUPW</name></decl></param>, <param><decl><type><name pos:line="107" pos:column="63">XincoDBManager</name></type> <name pos:line="107" pos:column="78">DBM</name></decl></param>)</parameter_list> <throws pos:line="107" pos:column="83">throws <argument><expr><name pos:line="107" pos:column="90">XincoException</name></expr></argument></throws> <block pos:line="107" pos:column="105">{
        <decl_stmt><decl><type><name pos:line="108" pos:column="9">Statement</name></type> <name pos:line="108" pos:column="19">stmt</name> <init pos:line="108" pos:column="24">= <expr><lit:literal type="null" pos:line="108" pos:column="26">null</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="109" pos:column="9">ResultSet</name></type> <name pos:line="109" pos:column="19">rs</name> <init pos:line="109" pos:column="22">= <expr><lit:literal type="null" pos:line="109" pos:column="24">null</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="110" pos:column="9">GregorianCalendar</name></type> <name pos:line="110" pos:column="27">cal</name> <init pos:line="110" pos:column="31">= <expr><lit:literal type="null" pos:line="110" pos:column="33">null</lit:literal></expr></init></decl>;</decl_stmt>
        <try pos:line="111" pos:column="9">try <block pos:line="111" pos:column="13">{
            <expr_stmt><expr><name pos:line="112" pos:column="13">stmt</name> <op:operator pos:line="112" pos:column="18">=</op:operator> <call><name><name pos:line="112" pos:column="20">DBM</name><op:operator pos:line="112" pos:column="23">.</op:operator><name pos:line="112" pos:column="24">con</name><op:operator pos:line="112" pos:column="27">.</op:operator><name pos:line="112" pos:column="28">createStatement</name></name><argument_list pos:line="112" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="113" pos:column="13">sql</name> <op:operator pos:line="113" pos:column="17">=</op:operator> <lit:literal type="string" pos:line="113" pos:column="19">"SELECT * FROM xinco_core_user WHERE username='"</lit:literal> <op:operator pos:line="113" pos:column="68">+</op:operator>
                    <name pos:line="114" pos:column="21">attrUN</name> <op:operator pos:line="114" pos:column="28">+</op:operator> <lit:literal type="string" pos:line="114" pos:column="30">"' AND userpassword=MD5('"</lit:literal> <op:operator pos:line="114" pos:column="57">+</op:operator> <name pos:line="114" pos:column="59">attrUPW</name> <op:operator pos:line="114" pos:column="67">+</op:operator> <lit:literal type="string" pos:line="114" pos:column="69">"') AND status_number &lt;&gt; 2"</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="115" pos:column="13">rs</name> <op:operator pos:line="115" pos:column="16">=</op:operator> <call><name><name pos:line="115" pos:column="18">stmt</name><op:operator pos:line="115" pos:column="22">.</op:operator><name pos:line="115" pos:column="23">executeQuery</name></name><argument_list pos:line="115" pos:column="35">(<argument><expr><name pos:line="115" pos:column="36">sql</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="line" pos:line="116" pos:column="13">//throw exception if no result found</comment>
            <decl_stmt><decl><type><name pos:line="117" pos:column="13">int</name></type> <name pos:line="117" pos:column="17">RowCount</name> <init pos:line="117" pos:column="26">= <expr><lit:literal type="number" pos:line="117" pos:column="28">0</lit:literal></expr></init></decl>;</decl_stmt>
            <while pos:line="118" pos:column="13">while <condition pos:line="118" pos:column="19">(<expr><call><name><name pos:line="118" pos:column="20">rs</name><op:operator pos:line="118" pos:column="22">.</op:operator><name pos:line="118" pos:column="23">next</name></name><argument_list pos:line="118" pos:column="27">()</argument_list></call></expr>)</condition> <block pos:line="118" pos:column="31">{
                <expr_stmt><expr><name pos:line="119" pos:column="17">RowCount</name><op:operator pos:line="119" pos:column="25">++</op:operator></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="120" pos:column="17">setId</name><argument_list pos:line="120" pos:column="22">(<argument><expr><call><name><name pos:line="120" pos:column="23">rs</name><op:operator pos:line="120" pos:column="25">.</op:operator><name pos:line="120" pos:column="26">getInt</name></name><argument_list pos:line="120" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="120" pos:column="33">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="121" pos:column="17">setUsername</name><argument_list pos:line="121" pos:column="28">(<argument><expr><call><name><name pos:line="121" pos:column="29">rs</name><op:operator pos:line="121" pos:column="31">.</op:operator><name pos:line="121" pos:column="32">getString</name></name><argument_list pos:line="121" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="121" pos:column="42">"username"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <comment type="line" pos:line="122" pos:column="17">//previously hashing the already hashed password</comment>
                <expr_stmt><expr><name pos:line="123" pos:column="17">hashPassword</name> <op:operator pos:line="123" pos:column="30">=</op:operator> <lit:literal type="boolean" pos:line="123" pos:column="32">true</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="124" pos:column="17">setUserpassword</name><argument_list pos:line="124" pos:column="32">(<argument><expr><name pos:line="124" pos:column="33">attrUPW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="125" pos:column="17">setName</name><argument_list pos:line="125" pos:column="24">(<argument><expr><call><name><name pos:line="125" pos:column="25">rs</name><op:operator pos:line="125" pos:column="27">.</op:operator><name pos:line="125" pos:column="28">getString</name></name><argument_list pos:line="125" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="125" pos:column="38">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="126" pos:column="17">setFirstname</name><argument_list pos:line="126" pos:column="29">(<argument><expr><call><name><name pos:line="126" pos:column="30">rs</name><op:operator pos:line="126" pos:column="32">.</op:operator><name pos:line="126" pos:column="33">getString</name></name><argument_list pos:line="126" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="126" pos:column="43">"firstname"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="127" pos:column="17">setEmail</name><argument_list pos:line="127" pos:column="25">(<argument><expr><call><name><name pos:line="127" pos:column="26">rs</name><op:operator pos:line="127" pos:column="28">.</op:operator><name pos:line="127" pos:column="29">getString</name></name><argument_list pos:line="127" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="127" pos:column="39">"email"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name pos:line="128" pos:column="17">int</name></type> <name pos:line="128" pos:column="21">status</name> <init pos:line="128" pos:column="28">= <expr><lit:literal type="number" pos:line="128" pos:column="30">0</lit:literal></expr></init></decl>;</decl_stmt>
                <if pos:line="129" pos:column="17">if <condition pos:line="129" pos:column="20">(<expr><call><name><name pos:line="129" pos:column="21">rs</name><op:operator pos:line="129" pos:column="23">.</op:operator><name pos:line="129" pos:column="24">getInt</name></name><argument_list pos:line="129" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="129" pos:column="31">"status_number"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="129" pos:column="48">!=</op:operator> <lit:literal type="number" pos:line="129" pos:column="51">2</lit:literal></expr>)</condition><then pos:line="129" pos:column="53"> <block pos:line="129" pos:column="54">{
                    <decl_stmt><decl><type><name pos:line="130" pos:column="21">Calendar</name></type> <name pos:line="130" pos:column="30">cal2</name> <init pos:line="130" pos:column="35">= <expr><call><name><name pos:line="130" pos:column="37">GregorianCalendar</name><op:operator pos:line="130" pos:column="54">.</op:operator><name pos:line="130" pos:column="55">getInstance</name></name><argument_list pos:line="130" pos:column="66">()</argument_list></call></expr></init><op:operator pos:line="130" pos:column="68">,</op:operator> <name pos:line="130" pos:column="70">now</name> <init pos:line="130" pos:column="74">= <expr><call><name><name pos:line="130" pos:column="76">GregorianCalendar</name><op:operator pos:line="130" pos:column="93">.</op:operator><name pos:line="130" pos:column="94">getInstance</name></name><argument_list pos:line="130" pos:column="105">()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name><name pos:line="131" pos:column="21">cal2</name><op:operator pos:line="131" pos:column="25">.</op:operator><name pos:line="131" pos:column="26">setTime</name></name><argument_list pos:line="131" pos:column="33">(<argument><expr><call><name><name pos:line="131" pos:column="34">rs</name><op:operator pos:line="131" pos:column="36">.</op:operator><name pos:line="131" pos:column="37">getTimestamp</name></name><argument_list pos:line="131" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="131" pos:column="50">"last_modified"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <decl_stmt><decl><type><name pos:line="132" pos:column="21">long</name></type> <name pos:line="132" pos:column="26">diffMillis</name> <init pos:line="132" pos:column="37">= <expr><call><name><name pos:line="132" pos:column="39">now</name><op:operator pos:line="132" pos:column="42">.</op:operator><name pos:line="132" pos:column="43">getTimeInMillis</name></name><argument_list pos:line="132" pos:column="58">()</argument_list></call> <op:operator pos:line="132" pos:column="61">-</op:operator> <call><name><name pos:line="132" pos:column="63">cal2</name><op:operator pos:line="132" pos:column="67">.</op:operator><name pos:line="132" pos:column="68">getTimeInMillis</name></name><argument_list pos:line="132" pos:column="83">()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="133" pos:column="21">long</name></type> <name pos:line="133" pos:column="26">diffDays</name> <init pos:line="133" pos:column="35">= <expr><name pos:line="133" pos:column="37">diffMillis</name> <op:operator pos:line="133" pos:column="48">/</op:operator> <op:operator pos:line="133" pos:column="50">(</op:operator><lit:literal type="number" pos:line="133" pos:column="51">24</lit:literal> <op:operator pos:line="133" pos:column="54">*</op:operator> <lit:literal type="number" pos:line="133" pos:column="56">60</lit:literal> <op:operator pos:line="133" pos:column="59">*</op:operator> <lit:literal type="number" pos:line="133" pos:column="61">60</lit:literal> <op:operator pos:line="133" pos:column="64">*</op:operator> <lit:literal type="number" pos:line="133" pos:column="66">1000</lit:literal><op:operator pos:line="133" pos:column="70">)</op:operator></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="134" pos:column="21">long</name></type> <name pos:line="134" pos:column="26">age</name> <init pos:line="134" pos:column="30">= <expr><call><name><name pos:line="134" pos:column="32">Long</name><op:operator pos:line="134" pos:column="36">.</op:operator><name pos:line="134" pos:column="37">parseLong</name></name><argument_list pos:line="134" pos:column="46">(<argument><expr><call><name><name pos:line="134" pos:column="47">settings</name><op:operator pos:line="134" pos:column="55">.</op:operator><name pos:line="134" pos:column="56">getString</name></name><argument_list pos:line="134" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="134" pos:column="66">"password.aging"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <if pos:line="135" pos:column="21">if <condition pos:line="135" pos:column="24">(<expr><name pos:line="135" pos:column="25">diffDays</name> <op:operator pos:line="135" pos:column="34">&gt;=</op:operator> <name pos:line="135" pos:column="37">age</name></expr>)</condition><then pos:line="135" pos:column="41"> <block pos:line="135" pos:column="42">{
                        <expr_stmt><expr><name pos:line="136" pos:column="25">status</name> <op:operator pos:line="136" pos:column="32">=</op:operator> <lit:literal type="number" pos:line="136" pos:column="34">3</lit:literal></expr>;</expr_stmt>
                    <comment type="line" pos:line="137" pos:column="21">//System.out.println("Password must be changed!");</comment>
                    }</block></then> <else pos:line="138" pos:column="23">else <block pos:line="138" pos:column="28">{
                        <expr_stmt><expr><name pos:line="139" pos:column="25">status</name> <op:operator pos:line="139" pos:column="32">=</op:operator> <lit:literal type="number" pos:line="139" pos:column="34">1</lit:literal></expr>;</expr_stmt>
                    }</block></else></if>
                    <expr_stmt><expr><call><name pos:line="141" pos:column="21">setAttempts</name><argument_list pos:line="141" pos:column="32">(<argument><expr><lit:literal type="number" pos:line="141" pos:column="33">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then> <else pos:line="142" pos:column="19">else <block pos:line="142" pos:column="24">{
                    <expr_stmt><expr><call><name pos:line="143" pos:column="21">setAttempts</name><argument_list pos:line="143" pos:column="32">(<argument><expr><call><name><name pos:line="143" pos:column="33">rs</name><op:operator pos:line="143" pos:column="35">.</op:operator><name pos:line="143" pos:column="36">getInt</name></name><argument_list pos:line="143" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="143" pos:column="43">"attempts"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></else></if>
                <expr_stmt><expr><call><name pos:line="145" pos:column="17">setStatus_number</name><argument_list pos:line="145" pos:column="33">(<argument><expr><name pos:line="145" pos:column="34">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="146" pos:column="17">setLastModified</name><argument_list pos:line="146" pos:column="32">(<argument><expr><call><name><name pos:line="146" pos:column="33">rs</name><op:operator pos:line="146" pos:column="35">.</op:operator><name pos:line="146" pos:column="36">getTimestamp</name></name><argument_list pos:line="146" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="146" pos:column="49">"last_modified"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="147" pos:column="17">write2DB</name><argument_list pos:line="147" pos:column="25">(<argument><expr><name pos:line="147" pos:column="26">DBM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></while>
            <if pos:line="149" pos:column="13">if <condition pos:line="149" pos:column="16">(<expr><name pos:line="149" pos:column="17">RowCount</name> <op:operator pos:line="149" pos:column="26">&lt;</op:operator> <lit:literal type="number" pos:line="149" pos:column="28">1</lit:literal></expr>)</condition><then pos:line="149" pos:column="30"> <block pos:line="149" pos:column="31">{
                <expr_stmt><expr><name pos:line="150" pos:column="17">sql</name> <op:operator pos:line="150" pos:column="21">=</op:operator> <lit:literal type="string" pos:line="150" pos:column="23">"SELECT * FROM xinco_core_user WHERE username='"</lit:literal> <op:operator pos:line="150" pos:column="72">+</op:operator>
                        <name pos:line="151" pos:column="25">attrUN</name> <op:operator pos:line="151" pos:column="32">+</op:operator> <lit:literal type="string" pos:line="151" pos:column="34">"'"</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="152" pos:column="17">rs</name> <op:operator pos:line="152" pos:column="20">=</op:operator> <call><name><name pos:line="152" pos:column="22">stmt</name><op:operator pos:line="152" pos:column="26">.</op:operator><name pos:line="152" pos:column="27">executeQuery</name></name><argument_list pos:line="152" pos:column="39">(<argument><expr><name pos:line="152" pos:column="40">sql</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <comment type="line" pos:line="153" pos:column="17">//The username is valid but wrong password. Increase the login attempts.</comment>
                <if pos:line="154" pos:column="17">if <condition pos:line="154" pos:column="20">(<expr><call><name><name pos:line="154" pos:column="21">rs</name><op:operator pos:line="154" pos:column="23">.</op:operator><name pos:line="154" pos:column="24">next</name></name><argument_list pos:line="154" pos:column="28">()</argument_list></call></expr>)</condition><then pos:line="154" pos:column="31"> <block pos:line="154" pos:column="32">{
                    <expr_stmt><expr><name pos:line="155" pos:column="21">increaseAttempts</name> <op:operator pos:line="155" pos:column="38">=</op:operator> <lit:literal type="boolean" pos:line="155" pos:column="40">true</lit:literal></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name pos:line="156" pos:column="21">setAttempts</name><argument_list pos:line="156" pos:column="32">(<argument><expr><call><name><name pos:line="156" pos:column="33">rs</name><op:operator pos:line="156" pos:column="35">.</op:operator><name pos:line="156" pos:column="36">getInt</name></name><argument_list pos:line="156" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="156" pos:column="43">"attempts"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <throw pos:line="158" pos:column="17">throw <expr><op:operator pos:line="158" pos:column="23">new</op:operator> <call><name pos:line="158" pos:column="27">XincoException</name><argument_list pos:line="158" pos:column="41">()</argument_list></call></expr>;</throw>
            }</block></then></if>
            <expr_stmt><expr><call><name><name pos:line="160" pos:column="13">stmt</name><op:operator pos:line="160" pos:column="17">.</op:operator><name pos:line="160" pos:column="18">close</name></name><argument_list pos:line="160" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="161" pos:column="13">fillXincoCoreGroups</name><argument_list pos:line="161" pos:column="32">(<argument><expr><name pos:line="161" pos:column="33">DBM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block> <catch pos:line="162" pos:column="11">catch <parameter_list pos:line="162" pos:column="17">(<param><decl><type><name pos:line="162" pos:column="18">Exception</name></type> <name pos:line="162" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="162" pos:column="31">{
            <if pos:line="163" pos:column="13">if <condition pos:line="163" pos:column="16">(<expr><call><name pos:line="163" pos:column="17">getXinco_core_groups</name><argument_list pos:line="163" pos:column="37">()</argument_list></call> <op:operator pos:line="163" pos:column="40">!=</op:operator> <lit:literal type="null" pos:line="163" pos:column="43">null</lit:literal></expr>)</condition><then pos:line="163" pos:column="48"> <block pos:line="163" pos:column="49">{
                <expr_stmt><expr><call><name pos:line="164" pos:column="17">getXinco_core_groups</name><argument_list pos:line="164" pos:column="37">()</argument_list></call><op:operator pos:line="164" pos:column="39">.</op:operator><call><name pos:line="164" pos:column="40">removeAllElements</name><argument_list pos:line="164" pos:column="57">()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <try pos:line="166" pos:column="13">try <block pos:line="166" pos:column="17">{
                <decl_stmt><decl><type><name pos:line="167" pos:column="17">XincoDBManager</name></type> <name pos:line="167" pos:column="32">dbm</name> <init pos:line="167" pos:column="36">= <expr><lit:literal type="null" pos:line="167" pos:column="38">null</lit:literal></expr></init></decl>;</decl_stmt>
                <try pos:line="168" pos:column="17">try <block pos:line="168" pos:column="21">{
                    <expr_stmt><expr><name pos:line="169" pos:column="21">dbm</name> <op:operator pos:line="169" pos:column="25">=</op:operator> <op:operator pos:line="169" pos:column="27">new</op:operator> <call><name pos:line="169" pos:column="31">XincoDBManager</name><argument_list pos:line="169" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
                }</block> <catch pos:line="170" pos:column="19">catch <parameter_list pos:line="170" pos:column="25">(<param><decl><type><name pos:line="170" pos:column="26">Exception</name></type> <name pos:line="170" pos:column="36">ex</name></decl></param>)</parameter_list> <block pos:line="170" pos:column="40">{
                    <expr_stmt><expr><call><name><name pos:line="171" pos:column="21">ex</name><op:operator pos:line="171" pos:column="23">.</op:operator><name pos:line="171" pos:column="24">printStackTrace</name></name><argument_list pos:line="171" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
                }</block></catch></try>
                <expr_stmt><expr><name pos:line="173" pos:column="17">sql</name> <op:operator pos:line="173" pos:column="21">=</op:operator> <lit:literal type="string" pos:line="173" pos:column="23">"SELECT * FROM xinco_core_user WHERE username='"</lit:literal> <op:operator pos:line="173" pos:column="72">+</op:operator>
                        <name pos:line="174" pos:column="25">attrUN</name> <op:operator pos:line="174" pos:column="32">+</op:operator> <lit:literal type="string" pos:line="174" pos:column="34">"' AND status_number &lt;&gt; 2"</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="175" pos:column="17">stmt</name> <op:operator pos:line="175" pos:column="22">=</op:operator> <call><name><name pos:line="175" pos:column="24">DBM</name><op:operator pos:line="175" pos:column="27">.</op:operator><name pos:line="175" pos:column="28">con</name><op:operator pos:line="175" pos:column="31">.</op:operator><name pos:line="175" pos:column="32">createStatement</name></name><argument_list pos:line="175" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="176" pos:column="17">rs</name> <op:operator pos:line="176" pos:column="20">=</op:operator> <call><name><name pos:line="176" pos:column="22">stmt</name><op:operator pos:line="176" pos:column="26">.</op:operator><name pos:line="176" pos:column="27">executeQuery</name></name><argument_list pos:line="176" pos:column="39">(<argument><expr><name pos:line="176" pos:column="40">sql</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <comment type="line" pos:line="177" pos:column="17">//increase number of attempts</comment>
                <if pos:line="178" pos:column="17">if <condition pos:line="178" pos:column="20">(<expr><call><name><name pos:line="178" pos:column="21">rs</name><op:operator pos:line="178" pos:column="23">.</op:operator><name pos:line="178" pos:column="24">next</name></name><argument_list pos:line="178" pos:column="28">()</argument_list></call></expr>)</condition><then pos:line="178" pos:column="31"> <block pos:line="178" pos:column="32">{
                    <expr_stmt><expr><call><name pos:line="179" pos:column="21">setId</name><argument_list pos:line="179" pos:column="26">(<argument><expr><call><name><name pos:line="179" pos:column="27">rs</name><op:operator pos:line="179" pos:column="29">.</op:operator><name pos:line="179" pos:column="30">getInt</name></name><argument_list pos:line="179" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="179" pos:column="37">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name pos:line="180" pos:column="21">setUsername</name><argument_list pos:line="180" pos:column="32">(<argument><expr><call><name><name pos:line="180" pos:column="33">rs</name><op:operator pos:line="180" pos:column="35">.</op:operator><name pos:line="180" pos:column="36">getString</name></name><argument_list pos:line="180" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="180" pos:column="46">"username"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <comment type="line" pos:line="181" pos:column="21">//Don't rehash the pasword!</comment>
                    <expr_stmt><expr><name pos:line="182" pos:column="21">hashPassword</name> <op:operator pos:line="182" pos:column="34">=</op:operator> <lit:literal type="boolean" pos:line="182" pos:column="36">false</lit:literal></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name pos:line="183" pos:column="21">setUserpassword</name><argument_list pos:line="183" pos:column="36">(<argument><expr><call><name><name pos:line="183" pos:column="37">rs</name><op:operator pos:line="183" pos:column="39">.</op:operator><name pos:line="183" pos:column="40">getString</name></name><argument_list pos:line="183" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="183" pos:column="50">"userpassword"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name pos:line="184" pos:column="21">setName</name><argument_list pos:line="184" pos:column="28">(<argument><expr><call><name><name pos:line="184" pos:column="29">rs</name><op:operator pos:line="184" pos:column="31">.</op:operator><name pos:line="184" pos:column="32">getString</name></name><argument_list pos:line="184" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="184" pos:column="42">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name pos:line="185" pos:column="21">setFirstname</name><argument_list pos:line="185" pos:column="33">(<argument><expr><call><name><name pos:line="185" pos:column="34">rs</name><op:operator pos:line="185" pos:column="36">.</op:operator><name pos:line="185" pos:column="37">getString</name></name><argument_list pos:line="185" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="185" pos:column="47">"firstname"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name pos:line="186" pos:column="21">setEmail</name><argument_list pos:line="186" pos:column="29">(<argument><expr><call><name><name pos:line="186" pos:column="30">rs</name><op:operator pos:line="186" pos:column="32">.</op:operator><name pos:line="186" pos:column="33">getString</name></name><argument_list pos:line="186" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="186" pos:column="43">"email"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name pos:line="187" pos:column="21">setStatus_number</name><argument_list pos:line="187" pos:column="37">(<argument><expr><call><name><name pos:line="187" pos:column="38">rs</name><op:operator pos:line="187" pos:column="40">.</op:operator><name pos:line="187" pos:column="41">getInt</name></name><argument_list pos:line="187" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="187" pos:column="48">"status_number"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <comment type="line" pos:line="188" pos:column="21">//Increase attempts after a unsuccessfull login.</comment>
                    <expr_stmt><expr><call><name pos:line="189" pos:column="21">setIncreaseAttempts</name><argument_list pos:line="189" pos:column="40">(<argument><expr><lit:literal type="boolean" pos:line="189" pos:column="41">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name pos:line="190" pos:column="21">setLastModified</name><argument_list pos:line="190" pos:column="36">(<argument><expr><call><name><name pos:line="190" pos:column="37">rs</name><op:operator pos:line="190" pos:column="39">.</op:operator><name pos:line="190" pos:column="40">getTimestamp</name></name><argument_list pos:line="190" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="190" pos:column="53">"last_modified"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name pos:line="191" pos:column="21">setChange</name><argument_list pos:line="191" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="191" pos:column="31">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name pos:line="192" pos:column="21">write2DB</name><argument_list pos:line="192" pos:column="29">(<argument><expr><name pos:line="192" pos:column="30">dbm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block> <catch pos:line="194" pos:column="15">catch <parameter_list pos:line="194" pos:column="21">(<param><decl><type><name pos:line="194" pos:column="22">XincoException</name></type> <name pos:line="194" pos:column="37">ex</name></decl></param>)</parameter_list> <block pos:line="194" pos:column="41">{
                <expr_stmt><expr><call><name><name pos:line="195" pos:column="17">ex</name><op:operator pos:line="195" pos:column="19">.</op:operator><name pos:line="195" pos:column="20">printStackTrace</name></name><argument_list pos:line="195" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
            }</block></catch> <catch pos:line="196" pos:column="15">catch <parameter_list pos:line="196" pos:column="21">(<param><decl><type><name pos:line="196" pos:column="22">SQLException</name></type> <name pos:line="196" pos:column="35">ex</name></decl></param>)</parameter_list> <block pos:line="196" pos:column="39">{
                <expr_stmt><expr><call><name><name pos:line="197" pos:column="17">ex</name><op:operator pos:line="197" pos:column="19">.</op:operator><name pos:line="197" pos:column="20">printStackTrace</name></name><argument_list pos:line="197" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
            <expr_stmt><expr><call><name><name pos:line="199" pos:column="13">e</name><op:operator pos:line="199" pos:column="14">.</op:operator><name pos:line="199" pos:column="15">printStackTrace</name></name><argument_list pos:line="199" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
            <throw pos:line="200" pos:column="13">throw <expr><op:operator pos:line="200" pos:column="19">new</op:operator> <call><name pos:line="200" pos:column="23">XincoException</name><argument_list pos:line="200" pos:column="37">()</argument_list></call></expr>;</throw>
        }</block></catch></try>
    }</block></constructor>

<comment type="line" pos:line="204" pos:column="1">//create user object for data structures</comment>
    <constructor><specifier pos:line="205" pos:column="5">public</specifier> <name pos:line="205" pos:column="12">XincoCoreUserServer</name><parameter_list pos:line="205" pos:column="31">(<param><decl><type><name pos:line="205" pos:column="32">int</name></type> <name pos:line="205" pos:column="36">attrID</name></decl></param>, <param><decl><type><name pos:line="205" pos:column="44">XincoDBManager</name></type> <name pos:line="205" pos:column="59">DBM</name></decl></param>)</parameter_list> <throws pos:line="205" pos:column="64">throws <argument><expr><name pos:line="205" pos:column="71">XincoException</name></expr></argument></throws> <block pos:line="205" pos:column="86">{
        <decl_stmt><decl><type><name pos:line="206" pos:column="9">GregorianCalendar</name></type> <name pos:line="206" pos:column="27">cal</name> <init pos:line="206" pos:column="31">= <expr><lit:literal type="null" pos:line="206" pos:column="33">null</lit:literal></expr></init></decl>;</decl_stmt>
        <try pos:line="207" pos:column="9">try <block pos:line="207" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="208" pos:column="13">Statement</name></type> <name pos:line="208" pos:column="23">stmt</name> <init pos:line="208" pos:column="28">= <expr><call><name><name pos:line="208" pos:column="30">DBM</name><op:operator pos:line="208" pos:column="33">.</op:operator><name pos:line="208" pos:column="34">con</name><op:operator pos:line="208" pos:column="37">.</op:operator><name pos:line="208" pos:column="38">createStatement</name></name><argument_list pos:line="208" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="209" pos:column="13">ResultSet</name></type> <name pos:line="209" pos:column="23">rs</name> <init pos:line="209" pos:column="26">= <expr><call><name><name pos:line="209" pos:column="28">stmt</name><op:operator pos:line="209" pos:column="32">.</op:operator><name pos:line="209" pos:column="33">executeQuery</name></name><argument_list pos:line="209" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="209" pos:column="46">"SELECT * FROM xinco_core_user WHERE id="</lit:literal> <op:operator pos:line="209" pos:column="88">+</op:operator> <name pos:line="209" pos:column="90">attrID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <comment type="line" pos:line="210" pos:column="13">//throw exception if no result found</comment>
            <decl_stmt><decl><type><name pos:line="211" pos:column="13">int</name></type> <name pos:line="211" pos:column="17">RowCount</name> <init pos:line="211" pos:column="26">= <expr><lit:literal type="number" pos:line="211" pos:column="28">0</lit:literal></expr></init></decl>;</decl_stmt>
            <while pos:line="212" pos:column="13">while <condition pos:line="212" pos:column="19">(<expr><call><name><name pos:line="212" pos:column="20">rs</name><op:operator pos:line="212" pos:column="22">.</op:operator><name pos:line="212" pos:column="23">next</name></name><argument_list pos:line="212" pos:column="27">()</argument_list></call></expr>)</condition> <block pos:line="212" pos:column="31">{
                <expr_stmt><expr><name pos:line="213" pos:column="17">RowCount</name><op:operator pos:line="213" pos:column="25">++</op:operator></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="214" pos:column="17">setId</name><argument_list pos:line="214" pos:column="22">(<argument><expr><call><name><name pos:line="214" pos:column="23">rs</name><op:operator pos:line="214" pos:column="25">.</op:operator><name pos:line="214" pos:column="26">getInt</name></name><argument_list pos:line="214" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="214" pos:column="33">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="215" pos:column="17">setUsername</name><argument_list pos:line="215" pos:column="28">(<argument><expr><call><name><name pos:line="215" pos:column="29">rs</name><op:operator pos:line="215" pos:column="31">.</op:operator><name pos:line="215" pos:column="32">getString</name></name><argument_list pos:line="215" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="215" pos:column="42">"username"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="216" pos:column="17">setUserpassword</name><argument_list pos:line="216" pos:column="32">(<argument><expr><call><name><name pos:line="216" pos:column="33">rs</name><op:operator pos:line="216" pos:column="35">.</op:operator><name pos:line="216" pos:column="36">getString</name></name><argument_list pos:line="216" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="216" pos:column="46">"userpassword"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="217" pos:column="17">setName</name><argument_list pos:line="217" pos:column="24">(<argument><expr><call><name><name pos:line="217" pos:column="25">rs</name><op:operator pos:line="217" pos:column="27">.</op:operator><name pos:line="217" pos:column="28">getString</name></name><argument_list pos:line="217" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="217" pos:column="38">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="218" pos:column="17">setFirstname</name><argument_list pos:line="218" pos:column="29">(<argument><expr><call><name><name pos:line="218" pos:column="30">rs</name><op:operator pos:line="218" pos:column="32">.</op:operator><name pos:line="218" pos:column="33">getString</name></name><argument_list pos:line="218" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="218" pos:column="43">"firstname"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="219" pos:column="17">setEmail</name><argument_list pos:line="219" pos:column="25">(<argument><expr><call><name><name pos:line="219" pos:column="26">rs</name><op:operator pos:line="219" pos:column="28">.</op:operator><name pos:line="219" pos:column="29">getString</name></name><argument_list pos:line="219" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="219" pos:column="39">"email"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="220" pos:column="17">setStatus_number</name><argument_list pos:line="220" pos:column="33">(<argument><expr><call><name><name pos:line="220" pos:column="34">rs</name><op:operator pos:line="220" pos:column="36">.</op:operator><name pos:line="220" pos:column="37">getInt</name></name><argument_list pos:line="220" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="220" pos:column="44">"status_number"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="221" pos:column="17">setAttempts</name><argument_list pos:line="221" pos:column="28">(<argument><expr><call><name><name pos:line="221" pos:column="29">rs</name><op:operator pos:line="221" pos:column="31">.</op:operator><name pos:line="221" pos:column="32">getInt</name></name><argument_list pos:line="221" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="221" pos:column="39">"attempts"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="222" pos:column="17">setLastModified</name><argument_list pos:line="222" pos:column="32">(<argument><expr><call><name><name pos:line="222" pos:column="33">rs</name><op:operator pos:line="222" pos:column="35">.</op:operator><name pos:line="222" pos:column="36">getTimestamp</name></name><argument_list pos:line="222" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="222" pos:column="49">"last_modified"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></while>
            <if pos:line="224" pos:column="13">if <condition pos:line="224" pos:column="16">(<expr><name pos:line="224" pos:column="17">RowCount</name> <op:operator pos:line="224" pos:column="26">&lt;</op:operator> <lit:literal type="number" pos:line="224" pos:column="28">1</lit:literal></expr>)</condition><then pos:line="224" pos:column="30"> <block pos:line="224" pos:column="31">{
                <throw pos:line="225" pos:column="17">throw <expr><op:operator pos:line="225" pos:column="23">new</op:operator> <call><name pos:line="225" pos:column="27">XincoException</name><argument_list pos:line="225" pos:column="41">()</argument_list></call></expr>;</throw>
            }</block></then></if>
            <expr_stmt><expr><call><name><name pos:line="227" pos:column="13">stmt</name><op:operator pos:line="227" pos:column="17">.</op:operator><name pos:line="227" pos:column="18">close</name></name><argument_list pos:line="227" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="228" pos:column="13">fillXincoCoreGroups</name><argument_list pos:line="228" pos:column="32">(<argument><expr><name pos:line="228" pos:column="33">DBM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block> <catch pos:line="229" pos:column="11">catch <parameter_list pos:line="229" pos:column="17">(<param><decl><type><name pos:line="229" pos:column="18">Exception</name></type> <name pos:line="229" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="229" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="230" pos:column="13">getXinco_core_groups</name><argument_list pos:line="230" pos:column="33">()</argument_list></call><op:operator pos:line="230" pos:column="35">.</op:operator><call><name pos:line="230" pos:column="36">removeAllElements</name><argument_list pos:line="230" pos:column="53">()</argument_list></call></expr>;</expr_stmt>
            <throw pos:line="231" pos:column="13">throw <expr><op:operator pos:line="231" pos:column="19">new</op:operator> <call><name pos:line="231" pos:column="23">XincoException</name><argument_list pos:line="231" pos:column="37">()</argument_list></call></expr>;</throw>
        }</block></catch></try>
    }</block></constructor>

<comment type="line" pos:line="235" pos:column="1">//create user object</comment>
    <constructor><specifier pos:line="236" pos:column="5">public</specifier> <name pos:line="236" pos:column="12">XincoCoreUserServer</name><parameter_list pos:line="236" pos:column="31">(<param><decl><type><name pos:line="236" pos:column="32">int</name></type> <name pos:line="236" pos:column="36">attrID</name></decl></param>, <param><decl><type><name pos:line="236" pos:column="44">String</name></type> <name pos:line="236" pos:column="51">attrUN</name></decl></param>, <param><decl><type><name pos:line="236" pos:column="59">String</name></type> <name pos:line="236" pos:column="66">attrUPW</name></decl></param>, <param><decl><type><name pos:line="236" pos:column="75">String</name></type> <name pos:line="236" pos:column="82">attrN</name></decl></param>,
            <param><decl><type><name pos:line="237" pos:column="13">String</name></type> <name pos:line="237" pos:column="20">attrFN</name></decl></param>, <param><decl><type><name pos:line="237" pos:column="28">String</name></type> <name pos:line="237" pos:column="35">attrE</name></decl></param>, <param><decl><type><name pos:line="237" pos:column="42">int</name></type> <name pos:line="237" pos:column="46">attrSN</name></decl></param>, <param><decl><type><name pos:line="237" pos:column="54">int</name></type> <name pos:line="237" pos:column="58">attrAN</name></decl></param>, <param><decl><type><name><name pos:line="237" pos:column="66">java</name><op:operator pos:line="237" pos:column="70">.</op:operator><name pos:line="237" pos:column="71">sql</name><op:operator pos:line="237" pos:column="74">.</op:operator><name pos:line="237" pos:column="75">Timestamp</name></name></type> <name pos:line="237" pos:column="85">attrTS</name></decl></param>,
            <param><decl><type><name pos:line="238" pos:column="13">XincoDBManager</name></type> <name pos:line="238" pos:column="28">DBM</name></decl></param>)</parameter_list> <throws pos:line="238" pos:column="33">throws <argument><expr><name pos:line="238" pos:column="40">XincoException</name></expr></argument></throws> <block pos:line="238" pos:column="55">{
        <try pos:line="239" pos:column="9">try <block pos:line="239" pos:column="13">{
            <expr_stmt><expr><call><name pos:line="240" pos:column="13">setId</name><argument_list pos:line="240" pos:column="18">(<argument><expr><name pos:line="240" pos:column="19">attrID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="241" pos:column="13">setUsername</name><argument_list pos:line="241" pos:column="24">(<argument><expr><name pos:line="241" pos:column="25">attrUN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="242" pos:column="13">setUserpassword</name><argument_list pos:line="242" pos:column="28">(<argument><expr><name pos:line="242" pos:column="29">attrUPW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="243" pos:column="13">setName</name><argument_list pos:line="243" pos:column="20">(<argument><expr><name pos:line="243" pos:column="21">attrN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="244" pos:column="13">setFirstname</name><argument_list pos:line="244" pos:column="25">(<argument><expr><name pos:line="244" pos:column="26">attrFN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="245" pos:column="13">setEmail</name><argument_list pos:line="245" pos:column="21">(<argument><expr><name pos:line="245" pos:column="22">attrE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="246" pos:column="13">setStatus_number</name><argument_list pos:line="246" pos:column="29">(<argument><expr><name pos:line="246" pos:column="30">attrSN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="247" pos:column="13">setAttempts</name><argument_list pos:line="247" pos:column="24">(<argument><expr><name pos:line="247" pos:column="25">attrAN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="248" pos:column="13">setLastModified</name><argument_list pos:line="248" pos:column="28">(<argument><expr><name pos:line="248" pos:column="29">attrTS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="249" pos:column="13">fillXincoCoreGroups</name><argument_list pos:line="249" pos:column="32">(<argument><expr><name pos:line="249" pos:column="33">DBM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block> <catch pos:line="250" pos:column="11">catch <parameter_list pos:line="250" pos:column="17">(<param><decl><type><name pos:line="250" pos:column="18">Exception</name></type> <name pos:line="250" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="250" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="251" pos:column="13">getXinco_core_groups</name><argument_list pos:line="251" pos:column="33">()</argument_list></call><op:operator pos:line="251" pos:column="35">.</op:operator><call><name pos:line="251" pos:column="36">removeAllElements</name><argument_list pos:line="251" pos:column="53">()</argument_list></call></expr>;</expr_stmt>
            <throw pos:line="252" pos:column="13">throw <expr><op:operator pos:line="252" pos:column="19">new</op:operator> <call><name pos:line="252" pos:column="23">XincoException</name><argument_list pos:line="252" pos:column="37">()</argument_list></call></expr>;</throw>
        }</block></catch></try>
    }</block></constructor>

    <comment type="block" format="javadoc" pos:line="256" pos:column="5">/**
     * Gets the attempts value for this XincoCoreUser.
     *
     * @return attempts
     */</comment>
    <function><type><specifier pos:line="261" pos:column="5">public</specifier> <name pos:line="261" pos:column="12">int</name></type> <name pos:line="261" pos:column="16">getAttempts</name><parameter_list pos:line="261" pos:column="27">()</parameter_list> <block pos:line="261" pos:column="30">{
        <return pos:line="262" pos:column="9">return <expr><name pos:line="262" pos:column="16">attempts</name></expr>;</return>
    }</block></function>

    <comment type="block" format="javadoc" pos:line="265" pos:column="5">/**
     * Sets the attempts value for this XincoCoreUser.
     *
     * @param attempts
     */</comment>
    <function><type><specifier pos:line="270" pos:column="5">public</specifier> <name pos:line="270" pos:column="12">void</name></type> <name pos:line="270" pos:column="17">setAttempts</name><parameter_list pos:line="270" pos:column="28">(<param><decl><type><name pos:line="270" pos:column="29">int</name></type> <name pos:line="270" pos:column="33">attempts</name></decl></param>)</parameter_list> <block pos:line="270" pos:column="43">{
        <expr_stmt><expr><name><name pos:line="271" pos:column="9">this</name><op:operator pos:line="271" pos:column="13">.</op:operator><name pos:line="271" pos:column="14">attempts</name></name> <op:operator pos:line="271" pos:column="23">=</op:operator> <name pos:line="271" pos:column="25">attempts</name></expr>;</expr_stmt>
    }</block></function>

    <comment type="block" format="javadoc" pos:line="274" pos:column="5">/**
     * Sets the lastModified value for this XincoCoreUser.
     *
     * @param lastModified
     */</comment>
    <function><type><specifier pos:line="279" pos:column="5">public</specifier> <name pos:line="279" pos:column="12">void</name></type> <name pos:line="279" pos:column="17">setLastModified</name><parameter_list pos:line="279" pos:column="32">(<param><decl><type><name><name pos:line="279" pos:column="33">java</name><op:operator pos:line="279" pos:column="37">.</op:operator><name pos:line="279" pos:column="38">sql</name><op:operator pos:line="279" pos:column="41">.</op:operator><name pos:line="279" pos:column="42">Timestamp</name></name></type> <name pos:line="279" pos:column="52">lastModified</name></decl></param>)</parameter_list> <block pos:line="279" pos:column="66">{
        <expr_stmt><expr><name><name pos:line="280" pos:column="9">this</name><op:operator pos:line="280" pos:column="13">.</op:operator><name pos:line="280" pos:column="14">lastModified</name></name> <op:operator pos:line="280" pos:column="27">=</op:operator> <name pos:line="280" pos:column="29">lastModified</name></expr>;</expr_stmt>
    }</block></function>

    <comment type="block" format="javadoc" pos:line="283" pos:column="5">/**
     * Gets the lastModified value for this XincoCoreUser.
     *
     * @return lastModified
     */</comment>
    <function><type><specifier pos:line="288" pos:column="5">public</specifier> <name><name pos:line="288" pos:column="12">java</name><op:operator pos:line="288" pos:column="16">.</op:operator><name pos:line="288" pos:column="17">lang</name><op:operator pos:line="288" pos:column="21">.</op:operator><name pos:line="288" pos:column="22">Object</name></name></type> <name pos:line="288" pos:column="29">getLastModified</name><parameter_list pos:line="288" pos:column="44">()</parameter_list> <block pos:line="288" pos:column="47">{
        <return pos:line="289" pos:column="9">return <expr><name pos:line="289" pos:column="16">lastModified</name></expr>;</return>
    }</block></function>

    <comment type="line" pos:line="292" pos:column="5">//write to db</comment>
    <function><type><specifier pos:line="293" pos:column="5">public</specifier> <name pos:line="293" pos:column="12">int</name></type> <name pos:line="293" pos:column="16">write2DB</name><parameter_list pos:line="293" pos:column="24">(<param><decl><type><name pos:line="293" pos:column="25">XincoDBManager</name></type> <name pos:line="293" pos:column="40">DBM</name></decl></param>)</parameter_list> <throws pos:line="293" pos:column="45">throws <argument><expr><name pos:line="293" pos:column="52">XincoException</name></expr></argument></throws> <block pos:line="293" pos:column="67">{
        <expr_stmt><expr><name pos:line="294" pos:column="9">sql</name> <op:operator pos:line="294" pos:column="13">=</op:operator> <lit:literal type="string" pos:line="294" pos:column="15">""</lit:literal></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="295" pos:column="9">xerb</name> <op:operator pos:line="295" pos:column="14">=</op:operator> <call><name><name pos:line="295" pos:column="16">ResourceBundle</name><op:operator pos:line="295" pos:column="30">.</op:operator><name pos:line="295" pos:column="31">getBundle</name></name><argument_list pos:line="295" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="295" pos:column="41">"com.bluecubs.xinco.messages.XincoMessages"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name pos:line="296" pos:column="9">Timestamp</name></type> <name pos:line="296" pos:column="19">ts</name> <init pos:line="296" pos:column="22">= <expr><lit:literal type="null" pos:line="296" pos:column="24">null</lit:literal></expr></init></decl>;</decl_stmt>
        <try pos:line="297" pos:column="9">try <block pos:line="297" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="298" pos:column="13">Statement</name></type> <name pos:line="298" pos:column="23">stmt</name></decl>;</decl_stmt>
            <if pos:line="299" pos:column="13">if <condition pos:line="299" pos:column="16">(<expr><call><name pos:line="299" pos:column="17">getStatus_number</name><argument_list pos:line="299" pos:column="33">()</argument_list></call> <op:operator pos:line="299" pos:column="36">==</op:operator> <lit:literal type="number" pos:line="299" pos:column="39">4</lit:literal></expr>)</condition><then pos:line="299" pos:column="41"> <block pos:line="299" pos:column="42">{
                <comment type="line" pos:line="300" pos:column="17">//Changed from aged out to password changed. Clear status</comment>
                <expr_stmt><expr><call><name pos:line="301" pos:column="17">setStatus_number</name><argument_list pos:line="301" pos:column="33">(<argument><expr><lit:literal type="number" pos:line="301" pos:column="34">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="302" pos:column="17">setAttempts</name><argument_list pos:line="302" pos:column="28">(<argument><expr><lit:literal type="number" pos:line="302" pos:column="29">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="303" pos:column="17">setChange</name><argument_list pos:line="303" pos:column="26">(<argument><expr><lit:literal type="boolean" pos:line="303" pos:column="27">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="304" pos:column="17">setReason</name><argument_list pos:line="304" pos:column="26">(<argument><expr><lit:literal type="string" pos:line="304" pos:column="27">"audit.user.account.aged"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="305" pos:column="17">ts</name> <op:operator pos:line="305" pos:column="20">=</op:operator> <op:operator pos:line="305" pos:column="22">new</op:operator> <call><name pos:line="305" pos:column="26">Timestamp</name><argument_list pos:line="305" pos:column="35">(<argument><expr><call><name><name pos:line="305" pos:column="36">System</name><op:operator pos:line="305" pos:column="42">.</op:operator><name pos:line="305" pos:column="43">currentTimeMillis</name></name><argument_list pos:line="305" pos:column="60">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <comment type="line" pos:line="307" pos:column="13">//Increase login attempts</comment>
            <if pos:line="308" pos:column="13">if <condition pos:line="308" pos:column="16">(<expr><name pos:line="308" pos:column="17">increaseAttempts</name></expr>)</condition><then pos:line="308" pos:column="34"> <block pos:line="308" pos:column="35">{
                <expr_stmt><expr><call><name pos:line="309" pos:column="17">setAttempts</name><argument_list pos:line="309" pos:column="28">(<argument><expr><call><name pos:line="309" pos:column="29">getAttempts</name><argument_list pos:line="309" pos:column="40">()</argument_list></call> <op:operator pos:line="309" pos:column="43">+</op:operator> <lit:literal type="number" pos:line="309" pos:column="45">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="310" pos:column="17">increaseAttempts</name> <op:operator pos:line="310" pos:column="34">=</op:operator> <lit:literal type="boolean" pos:line="310" pos:column="36">false</lit:literal></expr>;</expr_stmt>
            }</block></then></if>
            <comment type="line" pos:line="312" pos:column="13">//Lock account if needed. Can't lock main admin.</comment>
            <if pos:line="313" pos:column="13">if <condition pos:line="313" pos:column="16">(<expr><call><name pos:line="313" pos:column="17">getAttempts</name><argument_list pos:line="313" pos:column="28">()</argument_list></call> <op:operator pos:line="313" pos:column="31">&gt;</op:operator> <call><name><name pos:line="313" pos:column="33">Integer</name><op:operator pos:line="313" pos:column="40">.</op:operator><name pos:line="313" pos:column="41">parseInt</name></name><argument_list pos:line="313" pos:column="49">(<argument><expr><call><name><name pos:line="313" pos:column="50">settings</name><op:operator pos:line="313" pos:column="58">.</op:operator><name pos:line="313" pos:column="59">getString</name></name><argument_list pos:line="313" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="313" pos:column="69">"password.attempts"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="313" pos:column="91">&amp;&amp;</op:operator>
                    <call><name pos:line="314" pos:column="21">getId</name><argument_list pos:line="314" pos:column="26">()</argument_list></call> <op:operator pos:line="314" pos:column="29">&gt;</op:operator> <lit:literal type="number" pos:line="314" pos:column="31">1</lit:literal></expr>)</condition><then pos:line="314" pos:column="33"> <block pos:line="314" pos:column="34">{
                <expr_stmt><expr><call><name pos:line="315" pos:column="17">setStatus_number</name><argument_list pos:line="315" pos:column="33">(<argument><expr><lit:literal type="number" pos:line="315" pos:column="34">2</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <if pos:line="317" pos:column="13">if <condition pos:line="317" pos:column="16">(<expr><call><name pos:line="317" pos:column="17">getId</name><argument_list pos:line="317" pos:column="22">()</argument_list></call> <op:operator pos:line="317" pos:column="25">&gt;</op:operator> <lit:literal type="number" pos:line="317" pos:column="27">0</lit:literal></expr>)</condition><then pos:line="317" pos:column="29"> <block pos:line="317" pos:column="30">{
                <expr_stmt><expr><name pos:line="318" pos:column="17">stmt</name> <op:operator pos:line="318" pos:column="22">=</op:operator> <call><name><name pos:line="318" pos:column="24">DBM</name><op:operator pos:line="318" pos:column="27">.</op:operator><name pos:line="318" pos:column="28">con</name><op:operator pos:line="318" pos:column="31">.</op:operator><name pos:line="318" pos:column="32">createStatement</name></name><argument_list pos:line="318" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
                <if pos:line="319" pos:column="17">if <condition pos:line="319" pos:column="20">(<expr><call><name pos:line="319" pos:column="21">isChange</name><argument_list pos:line="319" pos:column="29">()</argument_list></call></expr>)</condition><then pos:line="319" pos:column="32"> <block pos:line="319" pos:column="33">{
                    <decl_stmt><decl><type><name pos:line="320" pos:column="21">XincoCoreAuditServer</name></type> <name pos:line="320" pos:column="42">audit</name> <init pos:line="320" pos:column="48">= <expr><op:operator pos:line="320" pos:column="50">new</op:operator> <call><name pos:line="320" pos:column="54">XincoCoreAuditServer</name><argument_list pos:line="320" pos:column="74">()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name><name pos:line="321" pos:column="21">audit</name><op:operator pos:line="321" pos:column="26">.</op:operator><name pos:line="321" pos:column="27">updateAuditTrail</name></name><argument_list pos:line="321" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="321" pos:column="44">"xinco_core_user"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="321" pos:column="63">new</op:operator> <name><name pos:line="321" pos:column="67">String</name><index pos:line="321" pos:column="73">[]</index></name><block pos:line="321" pos:column="75">{<expr><lit:literal type="string" pos:line="321" pos:column="76">"id ="</lit:literal> <op:operator pos:line="321" pos:column="83">+</op:operator> <call><name pos:line="321" pos:column="85">getId</name><argument_list pos:line="321" pos:column="90">()</argument_list></call></expr>}</block></expr></argument>,
                            <argument><expr><name pos:line="322" pos:column="29">DBM</name></expr></argument>, <argument><expr><call><name pos:line="322" pos:column="34">getReason</name><argument_list pos:line="322" pos:column="43">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="322" pos:column="47">getId</name><argument_list pos:line="322" pos:column="52">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="323" pos:column="21">ts</name> <op:operator pos:line="323" pos:column="24">=</op:operator> <op:operator pos:line="323" pos:column="26">new</op:operator> <call><name pos:line="323" pos:column="30">Timestamp</name><argument_list pos:line="323" pos:column="39">(<argument><expr><call><name><name pos:line="323" pos:column="40">System</name><op:operator pos:line="323" pos:column="46">.</op:operator><name pos:line="323" pos:column="47">currentTimeMillis</name></name><argument_list pos:line="323" pos:column="64">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name pos:line="324" pos:column="21">setLastModified</name><argument_list pos:line="324" pos:column="36">(<argument><expr><name pos:line="324" pos:column="37">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name pos:line="325" pos:column="21">setChange</name><argument_list pos:line="325" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="325" pos:column="31">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then> <else pos:line="326" pos:column="19">else <block pos:line="326" pos:column="24">{
                    <expr_stmt><expr><name pos:line="327" pos:column="21">ts</name> <op:operator pos:line="327" pos:column="24">=</op:operator> <op:operator pos:line="327" pos:column="26">(</op:operator><name pos:line="327" pos:column="27">Timestamp</name><op:operator pos:line="327" pos:column="36">)</op:operator> <call><name pos:line="327" pos:column="38">getLastModified</name><argument_list pos:line="327" pos:column="53">()</argument_list></call></expr>;</expr_stmt>
                }</block></else></if>
                <expr_stmt><expr><call><name pos:line="329" pos:column="17">setLastModified</name><argument_list pos:line="329" pos:column="32">(<argument><expr><name pos:line="329" pos:column="33">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <comment type="line" pos:line="330" pos:column="17">//Sometimes password got re-hashed</comment>
                <decl_stmt><decl><type><name pos:line="331" pos:column="17">String</name></type> <name pos:line="331" pos:column="24">password</name> <init pos:line="331" pos:column="33">= <expr><lit:literal type="string" pos:line="331" pos:column="35">""</lit:literal></expr></init></decl>;</decl_stmt>
                <if pos:line="332" pos:column="17">if <condition pos:line="332" pos:column="20">(<expr><name pos:line="332" pos:column="21">hashPassword</name></expr>)</condition><then pos:line="332" pos:column="34"> <block pos:line="332" pos:column="35">{
                    <expr_stmt><expr><name pos:line="333" pos:column="21">password</name> <op:operator pos:line="333" pos:column="30">=</op:operator> <lit:literal type="string" pos:line="333" pos:column="32">"userpassword=MD5('"</lit:literal> <op:operator pos:line="333" pos:column="53">+</op:operator>
                            <call><name pos:line="334" pos:column="29">getUserpassword</name><argument_list pos:line="334" pos:column="44">()</argument_list></call><op:operator pos:line="334" pos:column="46">.</op:operator><call><name pos:line="334" pos:column="47">replaceAll</name><argument_list pos:line="334" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="334" pos:column="58">"'"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="334" pos:column="63">"\\\\'"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="334" pos:column="72">+</op:operator> <lit:literal type="string" pos:line="334" pos:column="74">"')"</lit:literal></expr>;</expr_stmt>
                }</block></then> <else pos:line="335" pos:column="19">else <block pos:line="335" pos:column="24">{
                    <expr_stmt><expr><name pos:line="336" pos:column="21">password</name> <op:operator pos:line="336" pos:column="30">=</op:operator> <lit:literal type="string" pos:line="336" pos:column="32">"userpassword='"</lit:literal> <op:operator pos:line="336" pos:column="49">+</op:operator>
                            <call><name pos:line="337" pos:column="29">getUserpassword</name><argument_list pos:line="337" pos:column="44">()</argument_list></call><op:operator pos:line="337" pos:column="46">.</op:operator><call><name pos:line="337" pos:column="47">replaceAll</name><argument_list pos:line="337" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="337" pos:column="58">"'"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="337" pos:column="63">"\\\\'"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="337" pos:column="72">+</op:operator> <lit:literal type="string" pos:line="337" pos:column="74">"'"</lit:literal></expr>;</expr_stmt>
                }</block></else></if>
                <expr_stmt><expr><call><name><name pos:line="339" pos:column="17">stmt</name><op:operator pos:line="339" pos:column="21">.</op:operator><name pos:line="339" pos:column="22">executeUpdate</name></name><argument_list pos:line="339" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="339" pos:column="36">"UPDATE xinco_core_user SET username='"</lit:literal> <op:operator pos:line="339" pos:column="76">+</op:operator>
                        <call><name pos:line="340" pos:column="25">getUsername</name><argument_list pos:line="340" pos:column="36">()</argument_list></call><op:operator pos:line="340" pos:column="38">.</op:operator><call><name pos:line="340" pos:column="39">replaceAll</name><argument_list pos:line="340" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="340" pos:column="50">"'"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="340" pos:column="55">"\\\\'"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="340" pos:column="64">+</op:operator> <lit:literal type="string" pos:line="340" pos:column="66">"', "</lit:literal> <op:operator pos:line="340" pos:column="72">+</op:operator> <name pos:line="340" pos:column="74">password</name> <op:operator pos:line="340" pos:column="83">+</op:operator> <lit:literal type="string" pos:line="340" pos:column="85">", name='"</lit:literal> <op:operator pos:line="340" pos:column="96">+</op:operator>
                        <call><name pos:line="341" pos:column="25">getName</name><argument_list pos:line="341" pos:column="32">()</argument_list></call><op:operator pos:line="341" pos:column="34">.</op:operator><call><name pos:line="341" pos:column="35">replaceAll</name><argument_list pos:line="341" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="341" pos:column="46">"'"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="341" pos:column="51">"\\\\'"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="341" pos:column="60">+</op:operator> <lit:literal type="string" pos:line="341" pos:column="62">"', firstname='"</lit:literal> <op:operator pos:line="341" pos:column="79">+</op:operator>
                        <call><name pos:line="342" pos:column="25">getFirstname</name><argument_list pos:line="342" pos:column="37">()</argument_list></call><op:operator pos:line="342" pos:column="39">.</op:operator><call><name pos:line="342" pos:column="40">replaceAll</name><argument_list pos:line="342" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="342" pos:column="51">"'"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="342" pos:column="56">"\\\\'"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="342" pos:column="65">+</op:operator> <lit:literal type="string" pos:line="342" pos:column="67">"', email='"</lit:literal> <op:operator pos:line="342" pos:column="80">+</op:operator>
                        <call><name pos:line="343" pos:column="25">getEmail</name><argument_list pos:line="343" pos:column="33">()</argument_list></call><op:operator pos:line="343" pos:column="35">.</op:operator><call><name pos:line="343" pos:column="36">replaceAll</name><argument_list pos:line="343" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="343" pos:column="47">"'"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="343" pos:column="52">"\\\\'"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="343" pos:column="61">+</op:operator> <lit:literal type="string" pos:line="343" pos:column="63">"', status_number="</lit:literal> <op:operator pos:line="343" pos:column="83">+</op:operator>
                        <call><name pos:line="344" pos:column="25">getStatus_number</name><argument_list pos:line="344" pos:column="41">()</argument_list></call> <op:operator pos:line="344" pos:column="44">+</op:operator> <lit:literal type="string" pos:line="344" pos:column="46">", attempts="</lit:literal> <op:operator pos:line="344" pos:column="60">+</op:operator> <call><name pos:line="344" pos:column="62">getAttempts</name><argument_list pos:line="344" pos:column="73">()</argument_list></call> <op:operator pos:line="344" pos:column="76">+</op:operator>
                        <lit:literal type="string" pos:line="345" pos:column="25">", last_modified='"</lit:literal> <op:operator pos:line="345" pos:column="45">+</op:operator> <call><name pos:line="345" pos:column="47">getLastModified</name><argument_list pos:line="345" pos:column="62">()</argument_list></call> <op:operator pos:line="345" pos:column="65">+</op:operator> <lit:literal type="string" pos:line="345" pos:column="67">"'"</lit:literal> <op:operator pos:line="345" pos:column="71">+</op:operator>
                        <lit:literal type="string" pos:line="346" pos:column="25">" WHERE id="</lit:literal> <op:operator pos:line="346" pos:column="38">+</op:operator> <call><name pos:line="346" pos:column="40">getId</name><argument_list pos:line="346" pos:column="45">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="347" pos:column="17">stmt</name><op:operator pos:line="347" pos:column="21">.</op:operator><name pos:line="347" pos:column="22">close</name></name><argument_list pos:line="347" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
            }</block></then> <else pos:line="348" pos:column="15">else <block pos:line="348" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="349" pos:column="17">setId</name><argument_list pos:line="349" pos:column="22">(<argument><expr><call><name><name pos:line="349" pos:column="23">DBM</name><op:operator pos:line="349" pos:column="26">.</op:operator><name pos:line="349" pos:column="27">getNewID</name></name><argument_list pos:line="349" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="349" pos:column="36">"xinco_core_user"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="350" pos:column="17">ts</name> <op:operator pos:line="350" pos:column="20">=</op:operator> <op:operator pos:line="350" pos:column="22">new</op:operator> <call><name pos:line="350" pos:column="26">Timestamp</name><argument_list pos:line="350" pos:column="35">(<argument><expr><call><name><name pos:line="350" pos:column="36">System</name><op:operator pos:line="350" pos:column="42">.</op:operator><name pos:line="350" pos:column="43">currentTimeMillis</name></name><argument_list pos:line="350" pos:column="60">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="351" pos:column="17">stmt</name> <op:operator pos:line="351" pos:column="22">=</op:operator> <call><name><name pos:line="351" pos:column="24">DBM</name><op:operator pos:line="351" pos:column="27">.</op:operator><name pos:line="351" pos:column="28">con</name><op:operator pos:line="351" pos:column="31">.</op:operator><name pos:line="351" pos:column="32">createStatement</name></name><argument_list pos:line="351" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="352" pos:column="17">sql</name> <op:operator pos:line="352" pos:column="21">=</op:operator> <lit:literal type="string" pos:line="352" pos:column="23">"INSERT INTO xinco_core_user VALUES ("</lit:literal> <op:operator pos:line="352" pos:column="62">+</op:operator> <call><name pos:line="352" pos:column="64">getId</name><argument_list pos:line="352" pos:column="69">()</argument_list></call> <op:operator pos:line="352" pos:column="72">+</op:operator>
                        <lit:literal type="string" pos:line="353" pos:column="25">", '"</lit:literal> <op:operator pos:line="353" pos:column="31">+</op:operator> <call><name pos:line="353" pos:column="33">getUsername</name><argument_list pos:line="353" pos:column="44">()</argument_list></call><op:operator pos:line="353" pos:column="46">.</op:operator><call><name pos:line="353" pos:column="47">replaceAll</name><argument_list pos:line="353" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="353" pos:column="58">"'"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="353" pos:column="63">"\\\\'"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="353" pos:column="72">+</op:operator>
                        <lit:literal type="string" pos:line="354" pos:column="25">"', MD5('"</lit:literal> <op:operator pos:line="354" pos:column="36">+</op:operator> <call><name pos:line="354" pos:column="38">getUserpassword</name><argument_list pos:line="354" pos:column="53">()</argument_list></call><op:operator pos:line="354" pos:column="55">.</op:operator><call><name pos:line="354" pos:column="56">replaceAll</name><argument_list pos:line="354" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="354" pos:column="67">"'"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="354" pos:column="72">"\\\\'"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="354" pos:column="81">+</op:operator>
                        <lit:literal type="string" pos:line="355" pos:column="25">"'), '"</lit:literal> <op:operator pos:line="355" pos:column="33">+</op:operator> <call><name pos:line="355" pos:column="35">getName</name><argument_list pos:line="355" pos:column="42">()</argument_list></call><op:operator pos:line="355" pos:column="44">.</op:operator><call><name pos:line="355" pos:column="45">replaceAll</name><argument_list pos:line="355" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="355" pos:column="56">"'"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="355" pos:column="61">"\\\\'"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="355" pos:column="70">+</op:operator> <lit:literal type="string" pos:line="355" pos:column="72">"', '"</lit:literal> <op:operator pos:line="355" pos:column="79">+</op:operator>
                        <call><name pos:line="356" pos:column="25">getFirstname</name><argument_list pos:line="356" pos:column="37">()</argument_list></call><op:operator pos:line="356" pos:column="39">.</op:operator><call><name pos:line="356" pos:column="40">replaceAll</name><argument_list pos:line="356" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="356" pos:column="51">"'"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="356" pos:column="56">"\\\\'"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="356" pos:column="65">+</op:operator> <lit:literal type="string" pos:line="356" pos:column="67">"', '"</lit:literal> <op:operator pos:line="356" pos:column="74">+</op:operator>
                        <call><name pos:line="357" pos:column="25">getEmail</name><argument_list pos:line="357" pos:column="33">()</argument_list></call><op:operator pos:line="357" pos:column="35">.</op:operator><call><name pos:line="357" pos:column="36">replaceAll</name><argument_list pos:line="357" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="357" pos:column="47">"'"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="357" pos:column="52">"\\\\'"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="357" pos:column="61">+</op:operator> <lit:literal type="string" pos:line="357" pos:column="63">"', "</lit:literal> <op:operator pos:line="357" pos:column="69">+</op:operator>
                        <call><name pos:line="358" pos:column="25">getStatus_number</name><argument_list pos:line="358" pos:column="41">()</argument_list></call> <op:operator pos:line="358" pos:column="44">+</op:operator> <lit:literal type="string" pos:line="358" pos:column="46">", "</lit:literal> <op:operator pos:line="358" pos:column="51">+</op:operator> <call><name pos:line="358" pos:column="53">getAttempts</name><argument_list pos:line="358" pos:column="64">()</argument_list></call> <op:operator pos:line="358" pos:column="67">+</op:operator> <lit:literal type="string" pos:line="358" pos:column="69">", '"</lit:literal> <op:operator pos:line="358" pos:column="75">+</op:operator> <call><name><name pos:line="358" pos:column="77">ts</name><op:operator pos:line="358" pos:column="79">.</op:operator><name pos:line="358" pos:column="80">toString</name></name><argument_list pos:line="358" pos:column="88">()</argument_list></call> <op:operator pos:line="358" pos:column="91">+</op:operator> <lit:literal type="string" pos:line="358" pos:column="93">"')"</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="359" pos:column="17">stmt</name><op:operator pos:line="359" pos:column="21">.</op:operator><name pos:line="359" pos:column="22">executeUpdate</name></name><argument_list pos:line="359" pos:column="35">(<argument><expr><name pos:line="359" pos:column="36">sql</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="360" pos:column="17">stmt</name><op:operator pos:line="360" pos:column="21">.</op:operator><name pos:line="360" pos:column="22">close</name></name><argument_list pos:line="360" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
            <if pos:line="362" pos:column="13">if <condition pos:line="362" pos:column="16">(<expr><call><name pos:line="362" pos:column="17">isWriteGroups</name><argument_list pos:line="362" pos:column="30">()</argument_list></call></expr>)</condition><then pos:line="362" pos:column="33"> <block pos:line="362" pos:column="34">{
                <expr_stmt><expr><call><name pos:line="363" pos:column="17">writeXincoCoreGroups</name><argument_list pos:line="363" pos:column="37">(<argument><expr><name pos:line="363" pos:column="38">DBM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <expr_stmt><expr><call><name><name pos:line="365" pos:column="13">DBM</name><op:operator pos:line="365" pos:column="16">.</op:operator><name pos:line="365" pos:column="17">con</name><op:operator pos:line="365" pos:column="20">.</op:operator><name pos:line="365" pos:column="21">commit</name></name><argument_list pos:line="365" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
        }</block> <catch pos:line="366" pos:column="11">catch <parameter_list pos:line="366" pos:column="17">(<param><decl><type><name pos:line="366" pos:column="18">Exception</name></type> <name pos:line="366" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="366" pos:column="31">{
            <try pos:line="367" pos:column="13">try <block pos:line="367" pos:column="17">{
                <expr_stmt><expr><call><name><name pos:line="368" pos:column="17">DBM</name><op:operator pos:line="368" pos:column="20">.</op:operator><name pos:line="368" pos:column="21">con</name><op:operator pos:line="368" pos:column="24">.</op:operator><name pos:line="368" pos:column="25">rollback</name></name><argument_list pos:line="368" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
            }</block> <catch pos:line="369" pos:column="15">catch <parameter_list pos:line="369" pos:column="21">(<param><decl><type><name pos:line="369" pos:column="22">Exception</name></type> <name pos:line="369" pos:column="32">erollback</name></decl></param>)</parameter_list> <block pos:line="369" pos:column="43">{
            }</block></catch></try>
            <expr_stmt><expr><call><name><name pos:line="371" pos:column="13">e</name><op:operator pos:line="371" pos:column="14">.</op:operator><name pos:line="371" pos:column="15">printStackTrace</name></name><argument_list pos:line="371" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
            <throw pos:line="372" pos:column="13">throw <expr><op:operator pos:line="372" pos:column="19">new</op:operator> <call><name pos:line="372" pos:column="23">XincoException</name><argument_list pos:line="372" pos:column="37">()</argument_list></call></expr>;</throw>
        }</block></catch></try>
        <expr_stmt><expr><call><name pos:line="374" pos:column="9">setChange</name><argument_list pos:line="374" pos:column="18">(<argument><expr><lit:literal type="boolean" pos:line="374" pos:column="19">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="375" pos:column="9">setWriteGroups</name><argument_list pos:line="375" pos:column="23">(<argument><expr><lit:literal type="boolean" pos:line="375" pos:column="24">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="376" pos:column="9">setReason</name><argument_list pos:line="376" pos:column="18">(<argument><expr><lit:literal type="string" pos:line="376" pos:column="19">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:line="377" pos:column="9">return <expr><call><name pos:line="377" pos:column="16">getId</name><argument_list pos:line="377" pos:column="21">()</argument_list></call></expr>;</return>
    }</block></function>

<comment type="line" pos:line="380" pos:column="1">//create complete list of users</comment>
    <function><type><specifier pos:line="381" pos:column="5">public</specifier> <specifier pos:line="381" pos:column="12">static</specifier> <name pos:line="381" pos:column="19">Vector</name></type> <name pos:line="381" pos:column="26">getXincoCoreUsers</name><parameter_list pos:line="381" pos:column="43">(<param><decl><type><name pos:line="381" pos:column="44">XincoDBManager</name></type> <name pos:line="381" pos:column="59">DBM</name></decl></param>)</parameter_list> <block pos:line="381" pos:column="64">{
        <decl_stmt><decl><type><name pos:line="382" pos:column="9">Vector</name></type> <name pos:line="382" pos:column="16">coreUsers</name> <init pos:line="382" pos:column="26">= <expr><op:operator pos:line="382" pos:column="28">new</op:operator> <call><name pos:line="382" pos:column="32">Vector</name><argument_list pos:line="382" pos:column="38">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="383" pos:column="9">GregorianCalendar</name></type> <name pos:line="383" pos:column="27">cal</name> <init pos:line="383" pos:column="31">= <expr><lit:literal type="null" pos:line="383" pos:column="33">null</lit:literal></expr></init></decl>;</decl_stmt>
        <try pos:line="384" pos:column="9">try <block pos:line="384" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="385" pos:column="13">Statement</name></type> <name pos:line="385" pos:column="23">stmt</name> <init pos:line="385" pos:column="28">= <expr><call><name><name pos:line="385" pos:column="30">DBM</name><op:operator pos:line="385" pos:column="33">.</op:operator><name pos:line="385" pos:column="34">con</name><op:operator pos:line="385" pos:column="37">.</op:operator><name pos:line="385" pos:column="38">createStatement</name></name><argument_list pos:line="385" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="386" pos:column="13">ResultSet</name></type> <name pos:line="386" pos:column="23">rs</name> <init pos:line="386" pos:column="26">= <expr><call><name><name pos:line="386" pos:column="28">stmt</name><op:operator pos:line="386" pos:column="32">.</op:operator><name pos:line="386" pos:column="33">executeQuery</name></name><argument_list pos:line="386" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="386" pos:column="46">"SELECT * FROM xinco_core_user ORDER BY username"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <while pos:line="387" pos:column="13">while <condition pos:line="387" pos:column="19">(<expr><call><name><name pos:line="387" pos:column="20">rs</name><op:operator pos:line="387" pos:column="22">.</op:operator><name pos:line="387" pos:column="23">next</name></name><argument_list pos:line="387" pos:column="27">()</argument_list></call></expr>)</condition> <block pos:line="387" pos:column="31">{
                <expr_stmt><expr><call><name><name pos:line="388" pos:column="17">coreUsers</name><op:operator pos:line="388" pos:column="26">.</op:operator><name pos:line="388" pos:column="27">addElement</name></name><argument_list pos:line="388" pos:column="37">(<argument><expr><op:operator pos:line="388" pos:column="38">new</op:operator> <call><name pos:line="388" pos:column="42">XincoCoreUserServer</name><argument_list pos:line="388" pos:column="61">(<argument><expr><call><name><name pos:line="388" pos:column="62">rs</name><op:operator pos:line="388" pos:column="64">.</op:operator><name pos:line="388" pos:column="65">getInt</name></name><argument_list pos:line="388" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="388" pos:column="72">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
                        <argument><expr><call><name><name pos:line="389" pos:column="25">rs</name><op:operator pos:line="389" pos:column="27">.</op:operator><name pos:line="389" pos:column="28">getString</name></name><argument_list pos:line="389" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="389" pos:column="38">"username"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="389" pos:column="51">rs</name><op:operator pos:line="389" pos:column="53">.</op:operator><name pos:line="389" pos:column="54">getString</name></name><argument_list pos:line="389" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="389" pos:column="64">"userpassword"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
                        <argument><expr><call><name><name pos:line="390" pos:column="25">rs</name><op:operator pos:line="390" pos:column="27">.</op:operator><name pos:line="390" pos:column="28">getString</name></name><argument_list pos:line="390" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="390" pos:column="38">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="390" pos:column="47">rs</name><op:operator pos:line="390" pos:column="49">.</op:operator><name pos:line="390" pos:column="50">getString</name></name><argument_list pos:line="390" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="390" pos:column="60">"firstname"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
                        <argument><expr><call><name><name pos:line="391" pos:column="25">rs</name><op:operator pos:line="391" pos:column="27">.</op:operator><name pos:line="391" pos:column="28">getString</name></name><argument_list pos:line="391" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="391" pos:column="38">"email"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="391" pos:column="48">rs</name><op:operator pos:line="391" pos:column="50">.</op:operator><name pos:line="391" pos:column="51">getInt</name></name><argument_list pos:line="391" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="391" pos:column="58">"status_number"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
                        <argument><expr><call><name><name pos:line="392" pos:column="25">rs</name><op:operator pos:line="392" pos:column="27">.</op:operator><name pos:line="392" pos:column="28">getInt</name></name><argument_list pos:line="392" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="392" pos:column="35">"attempts"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="392" pos:column="48">rs</name><op:operator pos:line="392" pos:column="50">.</op:operator><name pos:line="392" pos:column="51">getTimestamp</name></name><argument_list pos:line="392" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="392" pos:column="64">"last_modified"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="392" pos:column="82">DBM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></while>
            <expr_stmt><expr><call><name><name pos:line="394" pos:column="13">stmt</name><op:operator pos:line="394" pos:column="17">.</op:operator><name pos:line="394" pos:column="18">close</name></name><argument_list pos:line="394" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
        }</block> <catch pos:line="395" pos:column="11">catch <parameter_list pos:line="395" pos:column="17">(<param><decl><type><name pos:line="395" pos:column="18">Exception</name></type> <name pos:line="395" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="395" pos:column="31">{
            <expr_stmt><expr><call><name><name pos:line="396" pos:column="13">coreUsers</name><op:operator pos:line="396" pos:column="22">.</op:operator><name pos:line="396" pos:column="23">removeAllElements</name></name><argument_list pos:line="396" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
        }</block></catch></try>
        <return pos:line="398" pos:column="9">return <expr><name pos:line="398" pos:column="16">coreUsers</name></expr>;</return>
    }</block></function>

    <function><type><specifier pos:line="401" pos:column="5">public</specifier> <name pos:line="401" pos:column="12">boolean</name></type> <name pos:line="401" pos:column="20">isHashPassword</name><parameter_list pos:line="401" pos:column="34">()</parameter_list> <block pos:line="401" pos:column="37">{
        <return pos:line="402" pos:column="9">return <expr><name pos:line="402" pos:column="16">hashPassword</name></expr>;</return>
    }</block></function>

    <function><type><specifier pos:line="405" pos:column="5">public</specifier> <name pos:line="405" pos:column="12">void</name></type> <name pos:line="405" pos:column="17">setHashPassword</name><parameter_list pos:line="405" pos:column="32">(<param><decl><type><name pos:line="405" pos:column="33">boolean</name></type> <name pos:line="405" pos:column="41">hashPassword</name></decl></param>)</parameter_list> <block pos:line="405" pos:column="55">{
        <expr_stmt><expr><name><name pos:line="406" pos:column="9">this</name><op:operator pos:line="406" pos:column="13">.</op:operator><name pos:line="406" pos:column="14">hashPassword</name></name> <op:operator pos:line="406" pos:column="27">=</op:operator> <name pos:line="406" pos:column="29">hashPassword</name></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier pos:line="409" pos:column="5">public</specifier> <name pos:line="409" pos:column="12">boolean</name></type> <name pos:line="409" pos:column="20">isIncreaseAttempts</name><parameter_list pos:line="409" pos:column="38">()</parameter_list> <block pos:line="409" pos:column="41">{
        <return pos:line="410" pos:column="9">return <expr><name pos:line="410" pos:column="16">increaseAttempts</name></expr>;</return>
    }</block></function>

    <function><type><specifier pos:line="413" pos:column="5">public</specifier> <name pos:line="413" pos:column="12">void</name></type> <name pos:line="413" pos:column="17">setIncreaseAttempts</name><parameter_list pos:line="413" pos:column="36">(<param><decl><type><name pos:line="413" pos:column="37">boolean</name></type> <name pos:line="413" pos:column="45">increaseAttempts</name></decl></param>)</parameter_list> <block pos:line="413" pos:column="63">{
        <expr_stmt><expr><name><name pos:line="414" pos:column="9">this</name><op:operator pos:line="414" pos:column="13">.</op:operator><name pos:line="414" pos:column="14">increaseAttempts</name></name> <op:operator pos:line="414" pos:column="31">=</op:operator> <name pos:line="414" pos:column="33">increaseAttempts</name></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier pos:line="417" pos:column="5">public</specifier> <name pos:line="417" pos:column="12">boolean</name></type> <name pos:line="417" pos:column="20">isPasswordUsable</name><parameter_list pos:line="417" pos:column="36">(<param><decl><type><name pos:line="417" pos:column="37">String</name></type> <name pos:line="417" pos:column="44">newPass</name></decl></param>)</parameter_list> <block pos:line="417" pos:column="53">{
        <decl_stmt><decl><type><name pos:line="418" pos:column="9">ResultSet</name></type> <name pos:line="418" pos:column="19">rs</name> <init pos:line="418" pos:column="22">= <expr><lit:literal type="null" pos:line="418" pos:column="24">null</lit:literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name pos:line="419" pos:column="9">sql</name> <op:operator pos:line="419" pos:column="13">=</op:operator> <lit:literal type="null" pos:line="419" pos:column="15">null</lit:literal></expr>;</expr_stmt>
        <decl_stmt><decl><type><name pos:line="420" pos:column="9">int</name></type> <name pos:line="420" pos:column="13">id</name> <init pos:line="420" pos:column="16">= <expr><lit:literal type="number" pos:line="420" pos:column="18">0</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="421" pos:column="9">boolean</name></type> <name pos:line="421" pos:column="17">passwordIsUsable</name> <init pos:line="421" pos:column="34">= <expr><lit:literal type="boolean" pos:line="421" pos:column="36">false</lit:literal></expr></init></decl>;</decl_stmt>
        <try pos:line="422" pos:column="9">try <block pos:line="422" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="423" pos:column="13">XincoDBManager</name></type> <name pos:line="423" pos:column="28">DBM</name> <init pos:line="423" pos:column="32">= <expr><lit:literal type="null" pos:line="423" pos:column="34">null</lit:literal></expr></init></decl>;</decl_stmt>
            <try pos:line="424" pos:column="13">try <block pos:line="424" pos:column="17">{
                <expr_stmt><expr><name pos:line="425" pos:column="17">DBM</name> <op:operator pos:line="425" pos:column="21">=</op:operator> <op:operator pos:line="425" pos:column="23">new</op:operator> <call><name pos:line="425" pos:column="27">XincoDBManager</name><argument_list pos:line="425" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
            }</block> <catch pos:line="426" pos:column="15">catch <parameter_list pos:line="426" pos:column="21">(<param><decl><type><name pos:line="426" pos:column="22">Exception</name></type> <name pos:line="426" pos:column="32">ex</name></decl></param>)</parameter_list> <block pos:line="426" pos:column="36">{
                <expr_stmt><expr><call><name><name pos:line="427" pos:column="17">ex</name><op:operator pos:line="427" pos:column="19">.</op:operator><name pos:line="427" pos:column="20">printStackTrace</name></name><argument_list pos:line="427" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
            }</block></catch></try>
            <decl_stmt><decl><type><name pos:line="429" pos:column="13">Statement</name></type> <name pos:line="429" pos:column="23">stmt</name> <init pos:line="429" pos:column="28">= <expr><call><name><name pos:line="429" pos:column="30">DBM</name><op:operator pos:line="429" pos:column="33">.</op:operator><name pos:line="429" pos:column="34">con</name><op:operator pos:line="429" pos:column="37">.</op:operator><name pos:line="429" pos:column="38">createStatement</name></name><argument_list pos:line="429" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <comment type="block" pos:line="430" pos:column="13">/*Bug fix: The password was only verified against past passwords not current password.
             *The current passwords is not usable after the first change when it was added to the
             *audit trail table.
             */</comment>
            <comment type="line" pos:line="434" pos:column="13">//Now check if password is not the same as the current password</comment>
            <expr_stmt><expr><name pos:line="435" pos:column="13">sql</name> <op:operator pos:line="435" pos:column="17">=</op:operator> <lit:literal type="string" pos:line="435" pos:column="19">"select p.id from Xinco_Core_User p where p.id="</lit:literal> <op:operator pos:line="435" pos:column="68">+</op:operator>
                    <call><name pos:line="436" pos:column="21">getId</name><argument_list pos:line="436" pos:column="26">()</argument_list></call> <op:operator pos:line="436" pos:column="29">+</op:operator> <lit:literal type="string" pos:line="436" pos:column="31">" and p.userpassword='"</lit:literal> <op:operator pos:line="436" pos:column="55">+</op:operator> <call><name><name pos:line="436" pos:column="57">MD5</name><op:operator pos:line="436" pos:column="60">.</op:operator><name pos:line="436" pos:column="61">encrypt</name></name><argument_list pos:line="436" pos:column="68">(<argument><expr><name pos:line="436" pos:column="69">newPass</name></expr></argument>)</argument_list></call> <op:operator pos:line="436" pos:column="78">+</op:operator> <lit:literal type="string" pos:line="436" pos:column="80">"'"</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="437" pos:column="13">rs</name> <op:operator pos:line="437" pos:column="16">=</op:operator> <call><name><name pos:line="437" pos:column="18">stmt</name><op:operator pos:line="437" pos:column="22">.</op:operator><name pos:line="437" pos:column="23">executeQuery</name></name><argument_list pos:line="437" pos:column="35">(<argument><expr><name pos:line="437" pos:column="36">sql</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if pos:line="438" pos:column="13">if <condition pos:line="438" pos:column="16">(<expr><call><name><name pos:line="438" pos:column="17">rs</name><op:operator pos:line="438" pos:column="19">.</op:operator><name pos:line="438" pos:column="20">next</name></name><argument_list pos:line="438" pos:column="24">()</argument_list></call></expr>)</condition><then pos:line="438" pos:column="27"> <block pos:line="438" pos:column="28">{
                <return pos:line="439" pos:column="17">return <expr><lit:literal type="boolean" pos:line="439" pos:column="24">false</lit:literal></expr>;</return>
            }</block></then></if>
            <comment type="line" pos:line="441" pos:column="13">//Here we'll catch if the password have been used in the unusable period</comment>
            <expr_stmt><expr><name pos:line="442" pos:column="13">sql</name> <op:operator pos:line="442" pos:column="17">=</op:operator> <lit:literal type="string" pos:line="442" pos:column="19">"select id from xinco_core_user where username='"</lit:literal> <op:operator pos:line="442" pos:column="69">+</op:operator> <call><name pos:line="442" pos:column="71">getUsername</name><argument_list pos:line="442" pos:column="82">()</argument_list></call> <op:operator pos:line="442" pos:column="85">+</op:operator> <lit:literal type="string" pos:line="442" pos:column="87">"'"</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="443" pos:column="13">rs</name> <op:operator pos:line="443" pos:column="16">=</op:operator> <call><name><name pos:line="443" pos:column="18">stmt</name><op:operator pos:line="443" pos:column="22">.</op:operator><name pos:line="443" pos:column="23">executeQuery</name></name><argument_list pos:line="443" pos:column="35">(<argument><expr><name pos:line="443" pos:column="36">sql</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="444" pos:column="13">rs</name><op:operator pos:line="444" pos:column="15">.</op:operator><name pos:line="444" pos:column="16">next</name></name><argument_list pos:line="444" pos:column="20">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="445" pos:column="13">id</name> <op:operator pos:line="445" pos:column="16">=</op:operator> <call><name><name pos:line="445" pos:column="18">rs</name><op:operator pos:line="445" pos:column="20">.</op:operator><name pos:line="445" pos:column="21">getInt</name></name><argument_list pos:line="445" pos:column="27">(<argument><expr><lit:literal type="number" pos:line="445" pos:column="28">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="446" pos:column="13">rs</name> <op:operator pos:line="446" pos:column="16">=</op:operator> <call><name><name pos:line="446" pos:column="18">stmt</name><op:operator pos:line="446" pos:column="22">.</op:operator><name pos:line="446" pos:column="23">executeQuery</name></name><argument_list pos:line="446" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="446" pos:column="36">"select userpassword from xinco_core_user_t where id="</lit:literal> <op:operator pos:line="446" pos:column="91">+</op:operator>
                    <name pos:line="447" pos:column="21">id</name> <op:operator pos:line="447" pos:column="24">+</op:operator> <lit:literal type="string" pos:line="447" pos:column="26">" and DATEDIFF(NOW(),last_modified) &lt;= "</lit:literal> <op:operator pos:line="447" pos:column="67">+</op:operator>
                    <call><name><name pos:line="448" pos:column="21">settings</name><op:operator pos:line="448" pos:column="29">.</op:operator><name pos:line="448" pos:column="30">getString</name></name><argument_list pos:line="448" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="448" pos:column="40">"password.unusable_period"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="448" pos:column="68">+</op:operator> <lit:literal type="string" pos:line="448" pos:column="70">" and MD5('"</lit:literal> <op:operator pos:line="448" pos:column="83">+</op:operator>
                    <name pos:line="449" pos:column="21">newPass</name> <op:operator pos:line="449" pos:column="29">+</op:operator> <lit:literal type="string" pos:line="449" pos:column="31">"') = userpassword"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="450" pos:column="13">rs</name><op:operator pos:line="450" pos:column="15">.</op:operator><name pos:line="450" pos:column="16">next</name></name><argument_list pos:line="450" pos:column="20">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="451" pos:column="13">rs</name><op:operator pos:line="451" pos:column="15">.</op:operator><name pos:line="451" pos:column="16">getString</name></name><argument_list pos:line="451" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="451" pos:column="26">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="line" pos:line="452" pos:column="9">//---------------------------</comment>
        }</block> <catch pos:line="453" pos:column="11">catch <parameter_list pos:line="453" pos:column="17">(<param><decl><type><name pos:line="453" pos:column="18">XincoException</name></type> <name pos:line="453" pos:column="33">ex</name></decl></param>)</parameter_list> <block pos:line="453" pos:column="37">{
            <expr_stmt><expr><call><name><name pos:line="454" pos:column="13">Logger</name><op:operator pos:line="454" pos:column="19">.</op:operator><name pos:line="454" pos:column="20">getLogger</name></name><argument_list pos:line="454" pos:column="29">(<argument><expr><call><name><name pos:line="454" pos:column="30">XincoCoreUserServer</name><op:operator pos:line="454" pos:column="49">.</op:operator><name><name pos:line="454" pos:column="50">class</name><op:operator pos:line="454" pos:column="55">.</op:operator><name pos:line="454" pos:column="56">getName</name></name></name><argument_list pos:line="454" pos:column="63">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="454" pos:column="66">.</op:operator><call><name pos:line="454" pos:column="67">log</name><argument_list pos:line="454" pos:column="70">(<argument><expr><name><name pos:line="454" pos:column="71">Level</name><op:operator pos:line="454" pos:column="76">.</op:operator><name pos:line="454" pos:column="77">SEVERE</name></name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="454" pos:column="85">null</lit:literal></expr></argument>, <argument><expr><name pos:line="454" pos:column="91">ex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></catch> <catch pos:line="455" pos:column="11">catch <parameter_list pos:line="455" pos:column="17">(<param><decl><type><name pos:line="455" pos:column="18">SQLException</name></type> <name pos:line="455" pos:column="31">ex</name></decl></param>)</parameter_list> <block pos:line="455" pos:column="35">{
            <expr_stmt><expr><name pos:line="456" pos:column="13">passwordIsUsable</name> <op:operator pos:line="456" pos:column="30">=</op:operator> <lit:literal type="boolean" pos:line="456" pos:column="32">true</lit:literal></expr>;</expr_stmt>
        }</block></catch></try>
        <return pos:line="458" pos:column="9">return <expr><name pos:line="458" pos:column="16">passwordIsUsable</name></expr>;</return>
    }</block></function>
}</block></class>
</unit>
