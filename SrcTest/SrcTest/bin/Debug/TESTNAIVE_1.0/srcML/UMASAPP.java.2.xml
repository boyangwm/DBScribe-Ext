<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\UMAS\src\com\umas\frontend\UMASAPP.java" pos:tabs="8"><package pos:line="1" pos:column="1">package <name><name pos:line="1" pos:column="9">com</name><op:operator pos:line="1" pos:column="12">.</op:operator><name pos:line="1" pos:column="13">umas</name><op:operator pos:line="1" pos:column="17">.</op:operator><name pos:line="1" pos:column="18">frontend</name></name>;</package>


<comment type="block" format="javadoc" pos:line="4" pos:column="1">/****************@author Simant Purohit*********************************/</comment>

<import pos:line="6" pos:column="1">import <name><name pos:line="6" pos:column="8">java</name><op:operator pos:line="6" pos:column="12">.</op:operator><name pos:line="6" pos:column="13">awt</name><op:operator pos:line="6" pos:column="16">.</op:operator><name pos:line="6" pos:column="17">EventQueue</name></name>;</import>

<import pos:line="8" pos:column="1">import <name><name pos:line="8" pos:column="8">javax</name><op:operator pos:line="8" pos:column="13">.</op:operator><name pos:line="8" pos:column="14">swing</name><op:operator pos:line="8" pos:column="19">.</op:operator><name pos:line="8" pos:column="20">JFrame</name></name>;</import>
<import pos:line="9" pos:column="1">import <name><name pos:line="9" pos:column="8">javax</name><op:operator pos:line="9" pos:column="13">.</op:operator><name pos:line="9" pos:column="14">swing</name><op:operator pos:line="9" pos:column="19">.</op:operator><name pos:line="9" pos:column="20">JOptionPane</name></name>;</import>
<import pos:line="10" pos:column="1">import <name><name pos:line="10" pos:column="8">javax</name><op:operator pos:line="10" pos:column="13">.</op:operator><name pos:line="10" pos:column="14">swing</name><op:operator pos:line="10" pos:column="19">.</op:operator><name pos:line="10" pos:column="20">JPanel</name></name>;</import>

<import pos:line="12" pos:column="1">import <name><name pos:line="12" pos:column="8">com</name><op:operator pos:line="12" pos:column="11">.</op:operator><name pos:line="12" pos:column="12">umas</name><op:operator pos:line="12" pos:column="16">.</op:operator><name pos:line="12" pos:column="17">code</name><op:operator pos:line="12" pos:column="21">.</op:operator><name pos:line="12" pos:column="22">Admin</name></name>;</import>
<import pos:line="13" pos:column="1">import <name><name pos:line="13" pos:column="8">com</name><op:operator pos:line="13" pos:column="11">.</op:operator><name pos:line="13" pos:column="12">umas</name><op:operator pos:line="13" pos:column="16">.</op:operator><name pos:line="13" pos:column="17">code</name><op:operator pos:line="13" pos:column="21">.</op:operator><name pos:line="13" pos:column="22">Department</name></name>;</import>
<import pos:line="14" pos:column="1">import <name><name pos:line="14" pos:column="8">com</name><op:operator pos:line="14" pos:column="11">.</op:operator><name pos:line="14" pos:column="12">umas</name><op:operator pos:line="14" pos:column="16">.</op:operator><name pos:line="14" pos:column="17">code</name><op:operator pos:line="14" pos:column="21">.</op:operator><name pos:line="14" pos:column="22">People</name></name>;</import>
<import pos:line="15" pos:column="1">import <name><name pos:line="15" pos:column="8">com</name><op:operator pos:line="15" pos:column="11">.</op:operator><name pos:line="15" pos:column="12">umas</name><op:operator pos:line="15" pos:column="16">.</op:operator><name pos:line="15" pos:column="17">code</name><op:operator pos:line="15" pos:column="21">.</op:operator><name pos:line="15" pos:column="22">Professor</name></name>;</import>
<import pos:line="16" pos:column="1">import <name><name pos:line="16" pos:column="8">com</name><op:operator pos:line="16" pos:column="11">.</op:operator><name pos:line="16" pos:column="12">umas</name><op:operator pos:line="16" pos:column="16">.</op:operator><name pos:line="16" pos:column="17">code</name><op:operator pos:line="16" pos:column="21">.</op:operator><name pos:line="16" pos:column="22">Semester</name></name>;</import>
<import pos:line="17" pos:column="1">import <name><name pos:line="17" pos:column="8">com</name><op:operator pos:line="17" pos:column="11">.</op:operator><name pos:line="17" pos:column="12">umas</name><op:operator pos:line="17" pos:column="16">.</op:operator><name pos:line="17" pos:column="17">code</name><op:operator pos:line="17" pos:column="21">.</op:operator><name pos:line="17" pos:column="22">Student</name></name>;</import>
<import pos:line="18" pos:column="1">import <name><name pos:line="18" pos:column="8">com</name><op:operator pos:line="18" pos:column="11">.</op:operator><name pos:line="18" pos:column="12">umas</name><op:operator pos:line="18" pos:column="16">.</op:operator><name pos:line="18" pos:column="17">code</name><op:operator pos:line="18" pos:column="21">.</op:operator><name pos:line="18" pos:column="22">TA</name></name>;</import>
<import pos:line="19" pos:column="1">import <name><name pos:line="19" pos:column="8">com</name><op:operator pos:line="19" pos:column="11">.</op:operator><name pos:line="19" pos:column="12">umas</name><op:operator pos:line="19" pos:column="16">.</op:operator><name pos:line="19" pos:column="17">code</name><op:operator pos:line="19" pos:column="21">.</op:operator><name pos:line="19" pos:column="22">TAListScanner</name></name>;</import>
<import pos:line="20" pos:column="1">import <name><name pos:line="20" pos:column="8">com</name><op:operator pos:line="20" pos:column="11">.</op:operator><name pos:line="20" pos:column="12">umas</name><op:operator pos:line="20" pos:column="16">.</op:operator><name pos:line="20" pos:column="17">code</name><op:operator pos:line="20" pos:column="21">.</op:operator><name pos:line="20" pos:column="22">WaitList</name></name>;</import>
<import pos:line="21" pos:column="1">import <name><name pos:line="21" pos:column="8">com</name><op:operator pos:line="21" pos:column="11">.</op:operator><name pos:line="21" pos:column="12">umas</name><op:operator pos:line="21" pos:column="16">.</op:operator><name pos:line="21" pos:column="17">code</name><op:operator pos:line="21" pos:column="21">.</op:operator><name pos:line="21" pos:column="22">Department</name><op:operator pos:line="21" pos:column="32">.</op:operator><name pos:line="21" pos:column="33">DepartmentDoesNotExistException</name></name>;</import>
<import pos:line="22" pos:column="1">import <name><name pos:line="22" pos:column="8">com</name><op:operator pos:line="22" pos:column="11">.</op:operator><name pos:line="22" pos:column="12">umas</name><op:operator pos:line="22" pos:column="16">.</op:operator><name pos:line="22" pos:column="17">code</name><op:operator pos:line="22" pos:column="21">.</op:operator><name pos:line="22" pos:column="22">People</name><op:operator pos:line="22" pos:column="28">.</op:operator><name pos:line="22" pos:column="29">PersonDoesNotExistException</name></name>;</import>
<import pos:line="23" pos:column="1">import <name><name pos:line="23" pos:column="8">com</name><op:operator pos:line="23" pos:column="11">.</op:operator><name pos:line="23" pos:column="12">umas</name><op:operator pos:line="23" pos:column="16">.</op:operator><name pos:line="23" pos:column="17">code</name><op:operator pos:line="23" pos:column="21">.</op:operator><name pos:line="23" pos:column="22">Student</name><op:operator pos:line="23" pos:column="29">.</op:operator><name pos:line="23" pos:column="30">AccessDeniedException</name></name>;</import>

<import pos:line="25" pos:column="1">import <name><name pos:line="25" pos:column="8">java</name><op:operator pos:line="25" pos:column="12">.</op:operator><name pos:line="25" pos:column="13">awt</name><op:operator pos:line="25" pos:column="16">.</op:operator><name pos:line="25" pos:column="17">BorderLayout</name></name>;</import>
<import pos:line="26" pos:column="1">import <name><name pos:line="26" pos:column="8">java</name><op:operator pos:line="26" pos:column="12">.</op:operator><name pos:line="26" pos:column="13">util</name><op:operator pos:line="26" pos:column="17">.</op:operator><name pos:line="26" pos:column="18">ArrayList</name></name>;</import>
<import pos:line="27" pos:column="1">import <name><name pos:line="27" pos:column="8">java</name><op:operator pos:line="27" pos:column="12">.</op:operator><name pos:line="27" pos:column="13">util</name><op:operator pos:line="27" pos:column="17">.</op:operator><name pos:line="27" pos:column="18">Timer</name></name>;</import>
<import pos:line="28" pos:column="1">import <name><name pos:line="28" pos:column="8">java</name><op:operator pos:line="28" pos:column="12">.</op:operator><name pos:line="28" pos:column="13">util</name><op:operator pos:line="28" pos:column="17">.</op:operator><name pos:line="28" pos:column="18">TimerTask</name></name>;</import>


<class><specifier pos:line="31" pos:column="1">public</specifier> class <name pos:line="31" pos:column="14">UMASAPP</name> <block pos:line="31" pos:column="22">{

	<decl_stmt><decl><type><specifier pos:line="33" pos:column="9">private</specifier> <specifier pos:line="33" pos:column="17">static</specifier> <name pos:line="33" pos:column="24">JFrame</name></type> <name pos:line="33" pos:column="31">frame</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="34" pos:column="9">private</specifier> <specifier pos:line="34" pos:column="17">static</specifier> <name pos:line="34" pos:column="24">String</name></type> <name pos:line="34" pos:column="31">userName</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="35" pos:column="9">private</specifier> <specifier pos:line="35" pos:column="17">static</specifier> <name pos:line="35" pos:column="24">boolean</name></type> <name pos:line="35" pos:column="32">loggedIn</name> <init pos:line="35" pos:column="41">= <expr><lit:literal type="boolean" pos:line="35" pos:column="43">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="36" pos:column="9">private</specifier> <specifier pos:line="36" pos:column="17">static</specifier> <name pos:line="36" pos:column="24">int</name></type> <name pos:line="36" pos:column="28">loggedInUIN</name><init pos:line="36" pos:column="39">= <expr><op:operator pos:line="36" pos:column="41">-</op:operator><lit:literal type="number" pos:line="36" pos:column="42">1</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="37" pos:column="9">private</specifier> <specifier pos:line="37" pos:column="17">static</specifier> <name pos:line="37" pos:column="24">int</name></type> <name pos:line="37" pos:column="28">loggedInPersonPosition</name> <init pos:line="37" pos:column="51">= <expr><op:operator pos:line="37" pos:column="53">-</op:operator><lit:literal type="number" pos:line="37" pos:column="54">1</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="38" pos:column="9">private</specifier> <specifier pos:line="38" pos:column="17">static</specifier> <name pos:line="38" pos:column="24">LoginUI</name></type> <name pos:line="38" pos:column="32">loginui</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="39" pos:column="9">private</specifier> <specifier pos:line="39" pos:column="17">static</specifier> <name pos:line="39" pos:column="24">JPanel</name></type> <name pos:line="39" pos:column="31">panel</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="40" pos:column="9">private</specifier> <specifier pos:line="40" pos:column="17">static</specifier> <name pos:line="40" pos:column="24">Semester</name></type> <name pos:line="40" pos:column="33">semester</name> <init pos:line="40" pos:column="42">= <expr><op:operator pos:line="40" pos:column="44">new</op:operator> <call><name pos:line="40" pos:column="48">Semester</name><argument_list pos:line="40" pos:column="56">()</argument_list></call></expr></init></decl>;</decl_stmt>
	
	<comment type="block" format="javadoc" pos:line="42" pos:column="9">/**
	 * Launch the application.
	 */</comment>
	<function><type><specifier pos:line="45" pos:column="9">public</specifier> <specifier pos:line="45" pos:column="16">static</specifier> <name pos:line="45" pos:column="23">void</name></type> <name pos:line="45" pos:column="28">main</name><parameter_list pos:line="45" pos:column="32">(<param><decl><type><name><name pos:line="45" pos:column="33">String</name><index pos:line="45" pos:column="39">[]</index></name></type> <name pos:line="45" pos:column="42">args</name></decl></param>)</parameter_list> <block pos:line="45" pos:column="48">{
		<expr_stmt><expr><call><name><name pos:line="46" pos:column="17">EventQueue</name><op:operator pos:line="46" pos:column="27">.</op:operator><name pos:line="46" pos:column="28">invokeLater</name></name><argument_list pos:line="46" pos:column="39">(<argument><expr><op:operator pos:line="46" pos:column="40">new</op:operator> <class><super><name pos:line="46" pos:column="44">Runnable</name></super><argument_list pos:line="46" pos:column="52">()</argument_list> <block pos:line="46" pos:column="55">{
			<function><type><specifier pos:line="47" pos:column="25">public</specifier> <name pos:line="47" pos:column="32">void</name></type> <name pos:line="47" pos:column="37">run</name><parameter_list pos:line="47" pos:column="40">()</parameter_list> <block pos:line="47" pos:column="43">{
				<try pos:line="48" pos:column="33">try <block pos:line="48" pos:column="37">{
					<decl_stmt><decl><type><name pos:line="49" pos:column="41">UMASAPP</name></type> <name pos:line="49" pos:column="49">window</name> <init pos:line="49" pos:column="56">= <expr><op:operator pos:line="49" pos:column="58">new</op:operator> <call><name pos:line="49" pos:column="62">UMASAPP</name><argument_list pos:line="49" pos:column="69">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="50" pos:column="41">window</name><op:operator pos:line="50" pos:column="47">.</op:operator><name pos:line="50" pos:column="48">frame</name><op:operator pos:line="50" pos:column="53">.</op:operator><name pos:line="50" pos:column="54">setVisible</name></name><argument_list pos:line="50" pos:column="64">(<argument><expr><lit:literal type="boolean" pos:line="50" pos:column="65">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block> <catch pos:line="51" pos:column="35">catch <parameter_list pos:line="51" pos:column="41">(<param><decl><type><name pos:line="51" pos:column="42">Exception</name></type> <name pos:line="51" pos:column="52">e</name></decl></param>)</parameter_list> <block pos:line="51" pos:column="55">{
					<expr_stmt><expr><call><name><name pos:line="52" pos:column="41">e</name><op:operator pos:line="52" pos:column="42">.</op:operator><name pos:line="52" pos:column="43">printStackTrace</name></name><argument_list pos:line="52" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<comment type="block" format="javadoc" pos:line="58" pos:column="9">/**
	 * Create the application.
	 */</comment>
	<constructor><specifier pos:line="61" pos:column="9">public</specifier> <name pos:line="61" pos:column="16">UMASAPP</name><parameter_list pos:line="61" pos:column="23">()</parameter_list> <block pos:line="61" pos:column="26">{
		<expr_stmt><expr><name pos:line="62" pos:column="17">frame</name> <op:operator pos:line="62" pos:column="23">=</op:operator> <op:operator pos:line="62" pos:column="25">new</op:operator> <call><name pos:line="62" pos:column="29">JFrame</name><argument_list pos:line="62" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="63" pos:column="17">initialize</name><argument_list pos:line="63" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
	}</block></constructor>

	<comment type="block" format="javadoc" pos:line="66" pos:column="9">/**
	 * Initialize the contents of the frame.
	 */</comment>
	<function><type><specifier pos:line="69" pos:column="9">private</specifier> <name pos:line="69" pos:column="17">void</name></type> <name pos:line="69" pos:column="22">initialize</name><parameter_list pos:line="69" pos:column="32">()</parameter_list> <block pos:line="69" pos:column="35">{
		<comment type="line" pos:line="70" pos:column="17">//frame = new JFrame();</comment>
		<expr_stmt><expr><call><name><name pos:line="71" pos:column="17">frame</name><op:operator pos:line="71" pos:column="22">.</op:operator><name pos:line="71" pos:column="23">setBounds</name></name><argument_list pos:line="71" pos:column="32">(<argument><expr><lit:literal type="number" pos:line="71" pos:column="33">100</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="71" pos:column="38">100</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="71" pos:column="43">500</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="71" pos:column="48">300</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="72" pos:column="17">frame</name><op:operator pos:line="72" pos:column="22">.</op:operator><name pos:line="72" pos:column="23">setDefaultCloseOperation</name></name><argument_list pos:line="72" pos:column="47">(<argument><expr><name><name pos:line="72" pos:column="48">JFrame</name><op:operator pos:line="72" pos:column="54">.</op:operator><name pos:line="72" pos:column="55">EXIT_ON_CLOSE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="73" pos:column="17">frame</name><op:operator pos:line="73" pos:column="22">.</op:operator><name pos:line="73" pos:column="23">setTitle</name></name><argument_list pos:line="73" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="73" pos:column="32">"UMAS Login"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="74" pos:column="17">loginui</name> <op:operator pos:line="74" pos:column="25">=</op:operator> <op:operator pos:line="74" pos:column="27">new</op:operator> <call><name pos:line="74" pos:column="31">LoginUI</name><argument_list pos:line="74" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="75" pos:column="17">JPanel</name></type> <name pos:line="75" pos:column="24">loginPanel</name> <init pos:line="75" pos:column="35">= <expr><name pos:line="75" pos:column="37">loginui</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="76" pos:column="17">frame</name><op:operator pos:line="76" pos:column="22">.</op:operator><name pos:line="76" pos:column="23">getContentPane</name></name><argument_list pos:line="76" pos:column="37">()</argument_list></call><op:operator pos:line="76" pos:column="39">.</op:operator><call><name pos:line="76" pos:column="40">add</name><argument_list pos:line="76" pos:column="43">(<argument><expr><name pos:line="76" pos:column="44">loginPanel</name></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="56">BorderLayout</name><op:operator pos:line="76" pos:column="68">.</op:operator><name pos:line="76" pos:column="69">CENTER</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="78" pos:column="17">Thread</name></type> <name pos:line="78" pos:column="24">taListMonitor</name> <init pos:line="78" pos:column="38">= <expr><op:operator pos:line="78" pos:column="40">new</op:operator> <call><name pos:line="78" pos:column="44">Thread</name><argument_list pos:line="78" pos:column="50">(<argument><expr><op:operator pos:line="78" pos:column="51">new</op:operator> <call><name pos:line="78" pos:column="55">TAListScanner</name><argument_list pos:line="78" pos:column="68">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="79" pos:column="17">taListMonitor</name><op:operator pos:line="79" pos:column="30">.</op:operator><name pos:line="79" pos:column="31">start</name></name><argument_list pos:line="79" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
		
<comment type="line" pos:line="81" pos:column="1">//		Thread waitListMonitor = new Thread(new WaitListScan());</comment>
<comment type="line" pos:line="82" pos:column="1">//		waitListMonitor.start();</comment>
<comment type="line" pos:line="83" pos:column="1">//		waitListMonitor.setPriority(Thread.MIN_PRIORITY);</comment>
		
		<decl_stmt><decl><type><name pos:line="85" pos:column="17">Timer</name></type> <name pos:line="85" pos:column="23">timer</name> <init pos:line="85" pos:column="29">= <expr><op:operator pos:line="85" pos:column="31">new</op:operator> <call><name pos:line="85" pos:column="35">Timer</name><argument_list pos:line="85" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="86" pos:column="17">timer</name><op:operator pos:line="86" pos:column="22">.</op:operator><name pos:line="86" pos:column="23">scheduleAtFixedRate</name></name><argument_list pos:line="86" pos:column="42">(<argument><expr><op:operator pos:line="86" pos:column="43">new</op:operator> <class><super><name pos:line="86" pos:column="47">TimerTask</name></super><argument_list pos:line="86" pos:column="56">()</argument_list> <block pos:line="86" pos:column="59">{
			
			<function><type><annotation pos:line="88" pos:column="25">@<name pos:line="88" pos:column="26">Override</name></annotation>
			<specifier pos:line="89" pos:column="25">public</specifier> <name pos:line="89" pos:column="32">void</name></type> <name pos:line="89" pos:column="37">run</name><parameter_list pos:line="89" pos:column="40">()</parameter_list> <block pos:line="89" pos:column="43">{
				<expr_stmt><expr><call><name><name pos:line="90" pos:column="33">System</name><op:operator pos:line="90" pos:column="39">.</op:operator><name pos:line="90" pos:column="40">out</name><op:operator pos:line="90" pos:column="43">.</op:operator><name pos:line="90" pos:column="44">println</name></name><argument_list pos:line="90" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="90" pos:column="52">"Starting a new scan"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="91" pos:column="33">WaitList</name><op:operator pos:line="91" pos:column="41">.</op:operator><name pos:line="91" pos:column="42">scanWaitList</name></name><argument_list pos:line="91" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="92" pos:column="33">System</name><op:operator pos:line="92" pos:column="39">.</op:operator><name pos:line="92" pos:column="40">out</name><op:operator pos:line="92" pos:column="43">.</op:operator><name pos:line="92" pos:column="44">println</name></name><argument_list pos:line="92" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="92" pos:column="52">"Scanning cycle complete"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
			}</block></function>
		}</block></class></expr></argument>, <argument><expr><lit:literal type="number" pos:line="95" pos:column="20">100</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="95" pos:column="25">10000</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	}</block></function>
	
	<function><type><specifier pos:line="99" pos:column="9">public</specifier> <specifier pos:line="99" pos:column="16">static</specifier> <name pos:line="99" pos:column="23">void</name></type> <name pos:line="99" pos:column="28">initializeLoggedInUser</name><parameter_list pos:line="99" pos:column="50">(<param><decl><type><name pos:line="99" pos:column="51">String</name></type> <name pos:line="99" pos:column="58">username</name></decl></param>, <param><decl><type><name pos:line="99" pos:column="68">boolean</name></type> <name pos:line="99" pos:column="76">isLoggedIn</name></decl></param>)</parameter_list><block pos:line="99" pos:column="87">{
		<expr_stmt><expr><name><name pos:line="100" pos:column="17">UMASAPP</name><op:operator pos:line="100" pos:column="24">.</op:operator><name pos:line="100" pos:column="25">userName</name></name> <op:operator pos:line="100" pos:column="34">=</op:operator> <name pos:line="100" pos:column="36">username</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="101" pos:column="17">UMASAPP</name><op:operator pos:line="101" pos:column="24">.</op:operator><name pos:line="101" pos:column="25">loggedIn</name></name> <op:operator pos:line="101" pos:column="34">=</op:operator> <name pos:line="101" pos:column="36">isLoggedIn</name></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="102" pos:column="17">People</name></type> <name pos:line="102" pos:column="24">loggedInPerson</name> <init pos:line="102" pos:column="39">= <expr><op:operator pos:line="102" pos:column="41">new</op:operator> <call><name pos:line="102" pos:column="45">People</name><argument_list pos:line="102" pos:column="51">(<argument><expr><name><name pos:line="102" pos:column="52">UMASAPP</name><op:operator pos:line="102" pos:column="59">.</op:operator><name pos:line="102" pos:column="60">userName</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="103" pos:column="17">UMASAPP</name><op:operator pos:line="103" pos:column="24">.</op:operator><name pos:line="103" pos:column="25">loggedInUIN</name></name> <op:operator pos:line="103" pos:column="37">=</op:operator> <call><name><name pos:line="103" pos:column="39">loggedInPerson</name><op:operator pos:line="103" pos:column="53">.</op:operator><name pos:line="103" pos:column="54">getUIN</name></name><argument_list pos:line="103" pos:column="60">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="104" pos:column="17">UMASAPP</name><op:operator pos:line="104" pos:column="24">.</op:operator><name pos:line="104" pos:column="25">loggedInPersonPosition</name></name> <op:operator pos:line="104" pos:column="48">=</op:operator> <call><name><name pos:line="104" pos:column="50">loggedInPerson</name><op:operator pos:line="104" pos:column="64">.</op:operator><name pos:line="104" pos:column="65">getPositionID</name></name><argument_list pos:line="104" pos:column="78">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="105" pos:column="17">initializeNewUser</name><argument_list pos:line="105" pos:column="34">(<argument><expr><name pos:line="105" pos:column="35">loggedInUIN</name></expr></argument>, <argument><expr><name pos:line="105" pos:column="48">loggedInPersonPosition</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>		
	}</block></function>
	
	<function><type><specifier pos:line="108" pos:column="9">private</specifier> <specifier pos:line="108" pos:column="17">static</specifier> <name pos:line="108" pos:column="24">void</name></type> <name pos:line="108" pos:column="29">initializeNewUser</name><parameter_list pos:line="108" pos:column="46">(<param><decl><type><name pos:line="108" pos:column="47">int</name></type> <name pos:line="108" pos:column="51">UIN</name></decl></param>, <param><decl><type><name pos:line="108" pos:column="56">int</name></type> <name pos:line="108" pos:column="60">positionID</name></decl></param>)</parameter_list><block pos:line="108" pos:column="71">{
		<if pos:line="109" pos:column="17">if<condition pos:line="109" pos:column="19">(<expr><name pos:line="109" pos:column="20">positionID</name> <op:operator pos:line="109" pos:column="31">==</op:operator> <lit:literal type="number" pos:line="109" pos:column="34">1</lit:literal></expr>)</condition><then><block pos:line="109" pos:column="36">{
			<expr_stmt><expr><call><name><name pos:line="110" pos:column="25">JOptionPane</name><op:operator pos:line="110" pos:column="36">.</op:operator><name pos:line="110" pos:column="37">showMessageDialog</name></name><argument_list pos:line="110" pos:column="54">(<argument><expr><lit:literal type="null" pos:line="110" pos:column="55">null</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="110" pos:column="61">"Admin logged in"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="111" pos:column="25">frame</name><op:operator pos:line="111" pos:column="30">.</op:operator><name pos:line="111" pos:column="31">remove</name></name><argument_list pos:line="111" pos:column="37">(<argument><expr><name pos:line="111" pos:column="38">loginui</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="112" pos:column="25">frame</name><op:operator pos:line="112" pos:column="30">.</op:operator><name pos:line="112" pos:column="31">revalidate</name></name><argument_list pos:line="112" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="113" pos:column="25">frame</name><op:operator pos:line="113" pos:column="30">.</op:operator><name pos:line="113" pos:column="31">repaint</name></name><argument_list pos:line="113" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
			<try pos:line="114" pos:column="25">try <block pos:line="114" pos:column="29">{
				<decl_stmt><decl><type><name pos:line="115" pos:column="33">Admin</name></type> <name pos:line="115" pos:column="39">admin</name> <init pos:line="115" pos:column="45">= <expr><op:operator pos:line="115" pos:column="47">new</op:operator> <call><name pos:line="115" pos:column="51">Admin</name><argument_list pos:line="115" pos:column="56">(<argument><expr><name pos:line="115" pos:column="57">UIN</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="116" pos:column="33">Department</name></type> <name pos:line="116" pos:column="44">d</name> <init pos:line="116" pos:column="46">= <expr><op:operator pos:line="116" pos:column="48">new</op:operator> <call><name pos:line="116" pos:column="52">Department</name><argument_list pos:line="116" pos:column="62">(<argument><expr><call><name><name pos:line="116" pos:column="63">admin</name><op:operator pos:line="116" pos:column="68">.</op:operator><name pos:line="116" pos:column="69">getDeptID</name></name><argument_list pos:line="116" pos:column="78">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name pos:line="117" pos:column="33">panel</name> <op:operator pos:line="117" pos:column="39">=</op:operator> <call><name><name pos:line="117" pos:column="41">DepartmentAdminUI</name><op:operator pos:line="117" pos:column="58">.</op:operator><name pos:line="117" pos:column="59">getInstance</name></name><argument_list pos:line="117" pos:column="70">(<argument><expr><name pos:line="117" pos:column="71">admin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="118" pos:column="33">frame</name><op:operator pos:line="118" pos:column="38">.</op:operator><name pos:line="118" pos:column="39">setBounds</name></name><argument_list pos:line="118" pos:column="48">(<argument><expr><lit:literal type="number" pos:line="118" pos:column="49">50</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="118" pos:column="53">50</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="118" pos:column="57">1024</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="118" pos:column="63">600</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="119" pos:column="33">frame</name><op:operator pos:line="119" pos:column="38">.</op:operator><name pos:line="119" pos:column="39">add</name></name><argument_list pos:line="119" pos:column="42">(<argument><expr><name pos:line="119" pos:column="43">panel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="120" pos:column="33">frame</name><op:operator pos:line="120" pos:column="38">.</op:operator><name pos:line="120" pos:column="39">setTitle</name></name><argument_list pos:line="120" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="120" pos:column="48">"UMAS "</lit:literal><op:operator pos:line="120" pos:column="55">+</op:operator><call><name><name pos:line="120" pos:column="56">d</name><op:operator pos:line="120" pos:column="57">.</op:operator><name pos:line="120" pos:column="58">getDepartmentName</name></name><argument_list pos:line="120" pos:column="75">()</argument_list></call><op:operator pos:line="120" pos:column="77">+</op:operator><lit:literal type="string" pos:line="120" pos:column="78">" Administrator: "</lit:literal><op:operator pos:line="120" pos:column="96">+</op:operator><call><name><name pos:line="120" pos:column="97">admin</name><op:operator pos:line="120" pos:column="102">.</op:operator><name pos:line="120" pos:column="103">getName</name></name><argument_list pos:line="120" pos:column="110">()</argument_list></call><op:operator pos:line="120" pos:column="112">+</op:operator><lit:literal type="string" pos:line="120" pos:column="113">",    "</lit:literal><op:operator pos:line="120" pos:column="120">+</op:operator><call><name><name pos:line="120" pos:column="121">semester</name><op:operator pos:line="120" pos:column="129">.</op:operator><name pos:line="120" pos:column="130">toString</name></name><argument_list pos:line="120" pos:column="138">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="121" pos:column="33">frame</name><op:operator pos:line="121" pos:column="38">.</op:operator><name pos:line="121" pos:column="39">revalidate</name></name><argument_list pos:line="121" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="122" pos:column="33">frame</name><op:operator pos:line="122" pos:column="38">.</op:operator><name pos:line="122" pos:column="39">repaint</name></name><argument_list pos:line="122" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
				
			}</block> <catch pos:line="124" pos:column="27">catch <parameter_list pos:line="124" pos:column="33">(<param><decl><type><name><name pos:line="124" pos:column="34">Department</name><op:operator pos:line="124" pos:column="44">.</op:operator><name pos:line="124" pos:column="45">DepartmentDoesNotExistException</name></name></type> <name pos:line="124" pos:column="77">e</name></decl></param>)</parameter_list> <block pos:line="124" pos:column="80">{
				<comment type="line" pos:line="125" pos:column="33">// TODO Auto-generated catch block</comment>
				<expr_stmt><expr><call><name><name pos:line="126" pos:column="33">e</name><op:operator pos:line="126" pos:column="34">.</op:operator><name pos:line="126" pos:column="35">printStackTrace</name></name><argument_list pos:line="126" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			}</block></catch> <catch pos:line="127" pos:column="27">catch <parameter_list pos:line="127" pos:column="33">(<param><decl><type><name><name pos:line="127" pos:column="34">People</name><op:operator pos:line="127" pos:column="40">.</op:operator><name pos:line="127" pos:column="41">PersonDoesNotExistException</name></name></type> <name pos:line="127" pos:column="69">e</name></decl></param>)</parameter_list> <block pos:line="127" pos:column="72">{
				<comment type="line" pos:line="128" pos:column="33">// TODO Auto-generated catch block</comment>
				<expr_stmt><expr><call><name><name pos:line="129" pos:column="33">e</name><op:operator pos:line="129" pos:column="34">.</op:operator><name pos:line="129" pos:column="35">printStackTrace</name></name><argument_list pos:line="129" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			}</block></catch></try>
			
		}</block></then>
		
		<else pos:line="134" pos:column="17">else <if pos:line="134" pos:column="22">if<condition pos:line="134" pos:column="24">(<expr><name pos:line="134" pos:column="25">positionID</name> <op:operator pos:line="134" pos:column="36">==</op:operator> <lit:literal type="number" pos:line="134" pos:column="39">2</lit:literal></expr>)</condition><then><block pos:line="134" pos:column="41">{
			<expr_stmt><expr><call><name><name pos:line="135" pos:column="25">JOptionPane</name><op:operator pos:line="135" pos:column="36">.</op:operator><name pos:line="135" pos:column="37">showMessageDialog</name></name><argument_list pos:line="135" pos:column="54">(<argument><expr><lit:literal type="null" pos:line="135" pos:column="55">null</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="135" pos:column="61">"Professor logged in"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="136" pos:column="25">frame</name><op:operator pos:line="136" pos:column="30">.</op:operator><name pos:line="136" pos:column="31">remove</name></name><argument_list pos:line="136" pos:column="37">(<argument><expr><name pos:line="136" pos:column="38">loginui</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="137" pos:column="25">frame</name><op:operator pos:line="137" pos:column="30">.</op:operator><name pos:line="137" pos:column="31">revalidate</name></name><argument_list pos:line="137" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="138" pos:column="25">frame</name><op:operator pos:line="138" pos:column="30">.</op:operator><name pos:line="138" pos:column="31">repaint</name></name><argument_list pos:line="138" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
			<try pos:line="139" pos:column="25">try <block pos:line="139" pos:column="29">{
				<decl_stmt><decl><type><name pos:line="140" pos:column="33">Professor</name></type> <name pos:line="140" pos:column="43">prof</name> <init pos:line="140" pos:column="48">= <expr><op:operator pos:line="140" pos:column="50">new</op:operator> <call><name pos:line="140" pos:column="54">Professor</name><argument_list pos:line="140" pos:column="63">(<argument><expr><name pos:line="140" pos:column="64">UIN</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="141" pos:column="33">Department</name></type> <name pos:line="141" pos:column="44">d</name> <init pos:line="141" pos:column="46">= <expr><op:operator pos:line="141" pos:column="48">new</op:operator> <call><name pos:line="141" pos:column="52">Department</name><argument_list pos:line="141" pos:column="62">(<argument><expr><call><name><name pos:line="141" pos:column="63">prof</name><op:operator pos:line="141" pos:column="67">.</op:operator><name pos:line="141" pos:column="68">getDeptID</name></name><argument_list pos:line="141" pos:column="77">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name pos:line="142" pos:column="33">panel</name> <op:operator pos:line="142" pos:column="39">=</op:operator> <call><name><name pos:line="142" pos:column="41">ProfessorMainUI</name><op:operator pos:line="142" pos:column="56">.</op:operator><name pos:line="142" pos:column="57">getInstance</name></name><argument_list pos:line="142" pos:column="68">(<argument><expr><name pos:line="142" pos:column="69">prof</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="143" pos:column="33">frame</name><op:operator pos:line="143" pos:column="38">.</op:operator><name pos:line="143" pos:column="39">setBounds</name></name><argument_list pos:line="143" pos:column="48">(<argument><expr><lit:literal type="number" pos:line="143" pos:column="49">50</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="143" pos:column="53">50</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="143" pos:column="57">1024</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="143" pos:column="63">600</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="144" pos:column="33">frame</name><op:operator pos:line="144" pos:column="38">.</op:operator><name pos:line="144" pos:column="39">add</name></name><argument_list pos:line="144" pos:column="42">(<argument><expr><name pos:line="144" pos:column="43">panel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="145" pos:column="33">frame</name><op:operator pos:line="145" pos:column="38">.</op:operator><name pos:line="145" pos:column="39">setTitle</name></name><argument_list pos:line="145" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="145" pos:column="48">"UMAS "</lit:literal><op:operator pos:line="145" pos:column="55">+</op:operator><call><name><name pos:line="145" pos:column="56">d</name><op:operator pos:line="145" pos:column="57">.</op:operator><name pos:line="145" pos:column="58">getDepartmentName</name></name><argument_list pos:line="145" pos:column="75">()</argument_list></call><op:operator pos:line="145" pos:column="77">+</op:operator><lit:literal type="string" pos:line="145" pos:column="78">" Professor: "</lit:literal><op:operator pos:line="145" pos:column="92">+</op:operator><call><name><name pos:line="145" pos:column="93">prof</name><op:operator pos:line="145" pos:column="97">.</op:operator><name pos:line="145" pos:column="98">getName</name></name><argument_list pos:line="145" pos:column="105">()</argument_list></call><op:operator pos:line="145" pos:column="107">+</op:operator><lit:literal type="string" pos:line="145" pos:column="108">",    "</lit:literal><op:operator pos:line="145" pos:column="115">+</op:operator><call><name><name pos:line="145" pos:column="116">semester</name><op:operator pos:line="145" pos:column="124">.</op:operator><name pos:line="145" pos:column="125">toString</name></name><argument_list pos:line="145" pos:column="133">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="146" pos:column="33">frame</name><op:operator pos:line="146" pos:column="38">.</op:operator><name pos:line="146" pos:column="39">revalidate</name></name><argument_list pos:line="146" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="147" pos:column="33">frame</name><op:operator pos:line="147" pos:column="38">.</op:operator><name pos:line="147" pos:column="39">repaint</name></name><argument_list pos:line="147" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
				
			}</block> <catch pos:line="149" pos:column="27">catch <parameter_list pos:line="149" pos:column="33">(<param><decl><type><name><name pos:line="149" pos:column="34">Department</name><op:operator pos:line="149" pos:column="44">.</op:operator><name pos:line="149" pos:column="45">DepartmentDoesNotExistException</name></name></type> <name pos:line="149" pos:column="77">e</name></decl></param>)</parameter_list> <block pos:line="149" pos:column="80">{
				<comment type="line" pos:line="150" pos:column="33">// TODO Auto-generated catch block</comment>
				<expr_stmt><expr><call><name><name pos:line="151" pos:column="33">e</name><op:operator pos:line="151" pos:column="34">.</op:operator><name pos:line="151" pos:column="35">printStackTrace</name></name><argument_list pos:line="151" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			}</block></catch> <catch pos:line="152" pos:column="27">catch <parameter_list pos:line="152" pos:column="33">(<param><decl><type><name><name pos:line="152" pos:column="34">Student</name><op:operator pos:line="152" pos:column="41">.</op:operator><name pos:line="152" pos:column="42">AccessDeniedException</name></name></type> <name pos:line="152" pos:column="64">e</name></decl></param>)</parameter_list> <block pos:line="152" pos:column="67">{
				<comment type="line" pos:line="153" pos:column="33">// TODO Auto-generated catch block</comment>
				<expr_stmt><expr><call><name><name pos:line="154" pos:column="33">e</name><op:operator pos:line="154" pos:column="34">.</op:operator><name pos:line="154" pos:column="35">printStackTrace</name></name><argument_list pos:line="154" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			}</block></catch> <catch pos:line="155" pos:column="27">catch <parameter_list pos:line="155" pos:column="33">(<param><decl><type><name><name pos:line="155" pos:column="34">People</name><op:operator pos:line="155" pos:column="40">.</op:operator><name pos:line="155" pos:column="41">PersonDoesNotExistException</name></name></type> <name pos:line="155" pos:column="69">e</name></decl></param>)</parameter_list> <block pos:line="155" pos:column="72">{
				<comment type="line" pos:line="156" pos:column="33">// TODO Auto-generated catch block</comment>
				<expr_stmt><expr><call><name><name pos:line="157" pos:column="33">e</name><op:operator pos:line="157" pos:column="34">.</op:operator><name pos:line="157" pos:column="35">printStackTrace</name></name><argument_list pos:line="157" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			}</block></catch></try>
		}</block></then>
		
		<else pos:line="161" pos:column="17">else <if pos:line="161" pos:column="22">if<condition pos:line="161" pos:column="24">(<expr><name pos:line="161" pos:column="25">positionID</name> <op:operator pos:line="161" pos:column="36">==</op:operator> <lit:literal type="number" pos:line="161" pos:column="39">3</lit:literal></expr>)</condition><then><block pos:line="161" pos:column="41">{
			<decl_stmt><decl><type><name><name pos:line="162" pos:column="25">ArrayList</name><argument_list pos:line="162" pos:column="34">&lt;<argument><name pos:line="162" pos:column="35">Student</name></argument>&gt;</argument_list></name></type> <name pos:line="162" pos:column="44">students</name> <init pos:line="162" pos:column="53">= <expr><call><name><name pos:line="162" pos:column="55">Student</name><op:operator pos:line="162" pos:column="62">.</op:operator><name pos:line="162" pos:column="63">getAllStudents</name></name><argument_list pos:line="162" pos:column="77">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<for pos:line="163" pos:column="25">for(<init><decl><type><name pos:line="163" pos:column="29">Student</name></type> <name pos:line="163" pos:column="37">s</name> <range pos:line="163" pos:column="39">:<expr><name pos:line="163" pos:column="40">students</name></expr></range></decl></init>)<block pos:line="163" pos:column="49">{
				<expr_stmt><expr><call><name><name pos:line="164" pos:column="33">Student</name><op:operator pos:line="164" pos:column="40">.</op:operator><name pos:line="164" pos:column="41">calculateGPA</name></name><argument_list pos:line="164" pos:column="53">(<argument><expr><call><name><name pos:line="164" pos:column="54">s</name><op:operator pos:line="164" pos:column="55">.</op:operator><name pos:line="164" pos:column="56">getUIN</name></name><argument_list pos:line="164" pos:column="62">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>
			<expr_stmt><expr><call><name><name pos:line="166" pos:column="25">JOptionPane</name><op:operator pos:line="166" pos:column="36">.</op:operator><name pos:line="166" pos:column="37">showMessageDialog</name></name><argument_list pos:line="166" pos:column="54">(<argument><expr><lit:literal type="null" pos:line="166" pos:column="55">null</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="166" pos:column="61">"Student logged in"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="167" pos:column="25">frame</name><op:operator pos:line="167" pos:column="30">.</op:operator><name pos:line="167" pos:column="31">remove</name></name><argument_list pos:line="167" pos:column="37">(<argument><expr><name pos:line="167" pos:column="38">loginui</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="168" pos:column="25">frame</name><op:operator pos:line="168" pos:column="30">.</op:operator><name pos:line="168" pos:column="31">revalidate</name></name><argument_list pos:line="168" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="169" pos:column="25">frame</name><op:operator pos:line="169" pos:column="30">.</op:operator><name pos:line="169" pos:column="31">repaint</name></name><argument_list pos:line="169" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
			
			<try pos:line="171" pos:column="25">try <block pos:line="171" pos:column="29">{
				<decl_stmt><decl><type><name pos:line="172" pos:column="33">Student</name></type> <name pos:line="172" pos:column="41">newStudent</name> <init pos:line="172" pos:column="52">= <expr><op:operator pos:line="172" pos:column="54">new</op:operator> <call><name pos:line="172" pos:column="58">Student</name><argument_list pos:line="172" pos:column="65">(<argument><expr><name pos:line="172" pos:column="66">UIN</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="173" pos:column="33">Department</name></type> <name pos:line="173" pos:column="44">d</name> <init pos:line="173" pos:column="46">= <expr><op:operator pos:line="173" pos:column="48">new</op:operator> <call><name pos:line="173" pos:column="52">Department</name><argument_list pos:line="173" pos:column="62">(<argument><expr><call><name><name pos:line="173" pos:column="63">newStudent</name><op:operator pos:line="173" pos:column="73">.</op:operator><name pos:line="173" pos:column="74">getDeptID</name></name><argument_list pos:line="173" pos:column="83">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name pos:line="174" pos:column="33">panel</name> <op:operator pos:line="174" pos:column="39">=</op:operator> <call><name><name pos:line="174" pos:column="41">StudentMainUI</name><op:operator pos:line="174" pos:column="54">.</op:operator><name pos:line="174" pos:column="55">getInstance</name></name><argument_list pos:line="174" pos:column="66">(<argument><expr><name pos:line="174" pos:column="67">newStudent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="175" pos:column="33">frame</name><op:operator pos:line="175" pos:column="38">.</op:operator><name pos:line="175" pos:column="39">setBounds</name></name><argument_list pos:line="175" pos:column="48">(<argument><expr><lit:literal type="number" pos:line="175" pos:column="49">50</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="175" pos:column="53">50</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="175" pos:column="57">1024</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="175" pos:column="63">600</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="176" pos:column="33">frame</name><op:operator pos:line="176" pos:column="38">.</op:operator><name pos:line="176" pos:column="39">add</name></name><argument_list pos:line="176" pos:column="42">(<argument><expr><name pos:line="176" pos:column="43">panel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="177" pos:column="33">frame</name><op:operator pos:line="177" pos:column="38">.</op:operator><name pos:line="177" pos:column="39">setTitle</name></name><argument_list pos:line="177" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="177" pos:column="48">"UMAS "</lit:literal><op:operator pos:line="177" pos:column="55">+</op:operator><call><name><name pos:line="177" pos:column="56">d</name><op:operator pos:line="177" pos:column="57">.</op:operator><name pos:line="177" pos:column="58">getDepartmentName</name></name><argument_list pos:line="177" pos:column="75">()</argument_list></call><op:operator pos:line="177" pos:column="77">+</op:operator><lit:literal type="string" pos:line="177" pos:column="78">" Student: "</lit:literal><op:operator pos:line="177" pos:column="90">+</op:operator><call><name><name pos:line="177" pos:column="91">newStudent</name><op:operator pos:line="177" pos:column="101">.</op:operator><name pos:line="177" pos:column="102">getName</name></name><argument_list pos:line="177" pos:column="109">()</argument_list></call><op:operator pos:line="177" pos:column="111">+</op:operator><lit:literal type="string" pos:line="177" pos:column="112">",    "</lit:literal><op:operator pos:line="177" pos:column="119">+</op:operator><call><name><name pos:line="177" pos:column="120">semester</name><op:operator pos:line="177" pos:column="128">.</op:operator><name pos:line="177" pos:column="129">toString</name></name><argument_list pos:line="177" pos:column="137">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="178" pos:column="33">frame</name><op:operator pos:line="178" pos:column="38">.</op:operator><name pos:line="178" pos:column="39">revalidate</name></name><argument_list pos:line="178" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="179" pos:column="33">frame</name><op:operator pos:line="179" pos:column="38">.</op:operator><name pos:line="179" pos:column="39">repaint</name></name><argument_list pos:line="179" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
				
			}</block> <catch pos:line="181" pos:column="27">catch <parameter_list pos:line="181" pos:column="33">(<param><decl><type><name><name pos:line="181" pos:column="34">Department</name><op:operator pos:line="181" pos:column="44">.</op:operator><name pos:line="181" pos:column="45">DepartmentDoesNotExistException</name></name></type> <name pos:line="181" pos:column="77">e</name></decl></param>)</parameter_list> <block pos:line="181" pos:column="80">{
				<comment type="line" pos:line="182" pos:column="33">// TODO Auto-generated catch block</comment>
				<expr_stmt><expr><call><name><name pos:line="183" pos:column="33">e</name><op:operator pos:line="183" pos:column="34">.</op:operator><name pos:line="183" pos:column="35">printStackTrace</name></name><argument_list pos:line="183" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			}</block></catch> <catch pos:line="184" pos:column="27">catch <parameter_list pos:line="184" pos:column="33">(<param><decl><type><name><name pos:line="184" pos:column="34">People</name><op:operator pos:line="184" pos:column="40">.</op:operator><name pos:line="184" pos:column="41">PersonDoesNotExistException</name></name></type> <name pos:line="184" pos:column="69">e</name></decl></param>)</parameter_list> <block pos:line="184" pos:column="72">{
				<comment type="line" pos:line="185" pos:column="33">// TODO Auto-generated catch block</comment>
				<expr_stmt><expr><call><name><name pos:line="186" pos:column="33">e</name><op:operator pos:line="186" pos:column="34">.</op:operator><name pos:line="186" pos:column="35">printStackTrace</name></name><argument_list pos:line="186" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			}</block></catch></try>
			
		}</block></then>
		
		<else pos:line="191" pos:column="17">else <if pos:line="191" pos:column="22">if<condition pos:line="191" pos:column="24">(<expr><name pos:line="191" pos:column="25">positionID</name> <op:operator pos:line="191" pos:column="36">==</op:operator> <lit:literal type="number" pos:line="191" pos:column="39">4</lit:literal></expr>)</condition><then><block pos:line="191" pos:column="41">{
			<decl_stmt><decl><type><name><name pos:line="192" pos:column="25">ArrayList</name><argument_list pos:line="192" pos:column="34">&lt;<argument><name pos:line="192" pos:column="35">Student</name></argument>&gt;</argument_list></name></type> <name pos:line="192" pos:column="44">students</name> <init pos:line="192" pos:column="53">= <expr><call><name><name pos:line="192" pos:column="55">Student</name><op:operator pos:line="192" pos:column="62">.</op:operator><name pos:line="192" pos:column="63">getAllStudents</name></name><argument_list pos:line="192" pos:column="77">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<for pos:line="193" pos:column="25">for(<init><decl><type><name pos:line="193" pos:column="29">Student</name></type> <name pos:line="193" pos:column="37">s</name> <range pos:line="193" pos:column="39">:<expr><name pos:line="193" pos:column="40">students</name></expr></range></decl></init>)<block pos:line="193" pos:column="49">{
				<expr_stmt><expr><call><name><name pos:line="194" pos:column="33">Student</name><op:operator pos:line="194" pos:column="40">.</op:operator><name pos:line="194" pos:column="41">calculateGPA</name></name><argument_list pos:line="194" pos:column="53">(<argument><expr><call><name><name pos:line="194" pos:column="54">s</name><op:operator pos:line="194" pos:column="55">.</op:operator><name pos:line="194" pos:column="56">getUIN</name></name><argument_list pos:line="194" pos:column="62">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>
			
			<decl_stmt><decl><type><name><name pos:line="197" pos:column="25">ArrayList</name><argument_list pos:line="197" pos:column="34">&lt;<argument><name pos:line="197" pos:column="35">TA</name></argument>&gt;</argument_list></name></type> <name pos:line="197" pos:column="39">tas</name> <init pos:line="197" pos:column="43">= <expr><call><name><name pos:line="197" pos:column="45">TA</name><op:operator pos:line="197" pos:column="47">.</op:operator><name pos:line="197" pos:column="48">getAllTAs</name></name><argument_list pos:line="197" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<for pos:line="198" pos:column="25">for(<init><decl><type><name pos:line="198" pos:column="29">TA</name></type> <name pos:line="198" pos:column="32">ta</name><range pos:line="198" pos:column="34">: <expr><name pos:line="198" pos:column="36">tas</name></expr></range></decl></init>)<block pos:line="198" pos:column="40">{
				<expr_stmt><expr><call><name><name pos:line="199" pos:column="33">TA</name><op:operator pos:line="199" pos:column="35">.</op:operator><name pos:line="199" pos:column="36">calculateGPA</name></name><argument_list pos:line="199" pos:column="48">(<argument><expr><call><name><name pos:line="199" pos:column="49">ta</name><op:operator pos:line="199" pos:column="51">.</op:operator><name pos:line="199" pos:column="52">getUIN</name></name><argument_list pos:line="199" pos:column="58">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>
			<expr_stmt><expr><call><name><name pos:line="201" pos:column="25">JOptionPane</name><op:operator pos:line="201" pos:column="36">.</op:operator><name pos:line="201" pos:column="37">showMessageDialog</name></name><argument_list pos:line="201" pos:column="54">(<argument><expr><lit:literal type="null" pos:line="201" pos:column="55">null</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="201" pos:column="61">"TA logged in"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="202" pos:column="25">frame</name><op:operator pos:line="202" pos:column="30">.</op:operator><name pos:line="202" pos:column="31">remove</name></name><argument_list pos:line="202" pos:column="37">(<argument><expr><name pos:line="202" pos:column="38">loginui</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="203" pos:column="25">frame</name><op:operator pos:line="203" pos:column="30">.</op:operator><name pos:line="203" pos:column="31">revalidate</name></name><argument_list pos:line="203" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="204" pos:column="25">frame</name><op:operator pos:line="204" pos:column="30">.</op:operator><name pos:line="204" pos:column="31">repaint</name></name><argument_list pos:line="204" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
			<try pos:line="205" pos:column="25">try <block pos:line="205" pos:column="29">{
				<decl_stmt><decl><type><name pos:line="206" pos:column="33">TA</name></type> <name pos:line="206" pos:column="36">ta</name> <init pos:line="206" pos:column="39">= <expr><op:operator pos:line="206" pos:column="41">new</op:operator> <call><name pos:line="206" pos:column="45">TA</name><argument_list pos:line="206" pos:column="47">(<argument><expr><name pos:line="206" pos:column="48">UIN</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="207" pos:column="33">Department</name></type> <name pos:line="207" pos:column="44">d</name> <init pos:line="207" pos:column="46">= <expr><op:operator pos:line="207" pos:column="48">new</op:operator> <call><name pos:line="207" pos:column="52">Department</name><argument_list pos:line="207" pos:column="62">(<argument><expr><call><name><name pos:line="207" pos:column="63">ta</name><op:operator pos:line="207" pos:column="65">.</op:operator><name pos:line="207" pos:column="66">getDeptID</name></name><argument_list pos:line="207" pos:column="75">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name pos:line="208" pos:column="33">panel</name> <op:operator pos:line="208" pos:column="39">=</op:operator> <call><name><name pos:line="208" pos:column="41">TaUI</name><op:operator pos:line="208" pos:column="45">.</op:operator><name pos:line="208" pos:column="46">getInstance</name></name><argument_list pos:line="208" pos:column="57">(<argument><expr><name pos:line="208" pos:column="58">ta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="209" pos:column="33">frame</name><op:operator pos:line="209" pos:column="38">.</op:operator><name pos:line="209" pos:column="39">setBounds</name></name><argument_list pos:line="209" pos:column="48">(<argument><expr><lit:literal type="number" pos:line="209" pos:column="49">50</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="209" pos:column="53">50</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="209" pos:column="57">1024</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="209" pos:column="63">600</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="210" pos:column="33">frame</name><op:operator pos:line="210" pos:column="38">.</op:operator><name pos:line="210" pos:column="39">add</name></name><argument_list pos:line="210" pos:column="42">(<argument><expr><name pos:line="210" pos:column="43">panel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="211" pos:column="33">frame</name><op:operator pos:line="211" pos:column="38">.</op:operator><name pos:line="211" pos:column="39">setTitle</name></name><argument_list pos:line="211" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="211" pos:column="48">"UMAS "</lit:literal><op:operator pos:line="211" pos:column="55">+</op:operator><call><name><name pos:line="211" pos:column="56">d</name><op:operator pos:line="211" pos:column="57">.</op:operator><name pos:line="211" pos:column="58">getDepartmentName</name></name><argument_list pos:line="211" pos:column="75">()</argument_list></call><op:operator pos:line="211" pos:column="77">+</op:operator><lit:literal type="string" pos:line="211" pos:column="78">" TA: "</lit:literal><op:operator pos:line="211" pos:column="85">+</op:operator><call><name><name pos:line="211" pos:column="86">ta</name><op:operator pos:line="211" pos:column="88">.</op:operator><name pos:line="211" pos:column="89">getName</name></name><argument_list pos:line="211" pos:column="96">()</argument_list></call><op:operator pos:line="211" pos:column="98">+</op:operator><lit:literal type="string" pos:line="211" pos:column="99">",    "</lit:literal><op:operator pos:line="211" pos:column="106">+</op:operator><call><name><name pos:line="211" pos:column="107">semester</name><op:operator pos:line="211" pos:column="115">.</op:operator><name pos:line="211" pos:column="116">toString</name></name><argument_list pos:line="211" pos:column="124">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="212" pos:column="33">frame</name><op:operator pos:line="212" pos:column="38">.</op:operator><name pos:line="212" pos:column="39">revalidate</name></name><argument_list pos:line="212" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="213" pos:column="33">frame</name><op:operator pos:line="213" pos:column="38">.</op:operator><name pos:line="213" pos:column="39">repaint</name></name><argument_list pos:line="213" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
				
			}</block> <catch pos:line="215" pos:column="27">catch <parameter_list pos:line="215" pos:column="33">(<param><decl><type><name><name pos:line="215" pos:column="34">Department</name><op:operator pos:line="215" pos:column="44">.</op:operator><name pos:line="215" pos:column="45">DepartmentDoesNotExistException</name></name></type> <name pos:line="215" pos:column="77">e</name></decl></param>)</parameter_list> <block pos:line="215" pos:column="80">{
				<comment type="line" pos:line="216" pos:column="33">// TODO Auto-generated catch block</comment>
				<expr_stmt><expr><call><name><name pos:line="217" pos:column="33">e</name><op:operator pos:line="217" pos:column="34">.</op:operator><name pos:line="217" pos:column="35">printStackTrace</name></name><argument_list pos:line="217" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			}</block></catch> <catch pos:line="218" pos:column="27">catch <parameter_list pos:line="218" pos:column="33">(<param><decl><type><name><name pos:line="218" pos:column="34">People</name><op:operator pos:line="218" pos:column="40">.</op:operator><name pos:line="218" pos:column="41">PersonDoesNotExistException</name></name></type> <name pos:line="218" pos:column="69">e</name></decl></param>)</parameter_list> <block pos:line="218" pos:column="72">{
				<comment type="line" pos:line="219" pos:column="33">// TODO Auto-generated catch block</comment>
				<expr_stmt><expr><call><name><name pos:line="220" pos:column="33">e</name><op:operator pos:line="220" pos:column="34">.</op:operator><name pos:line="220" pos:column="35">printStackTrace</name></name><argument_list pos:line="220" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			}</block></catch></try>
		}</block></then>
		
		<else pos:line="224" pos:column="17">else <if pos:line="224" pos:column="22">if<condition pos:line="224" pos:column="24">(<expr><name pos:line="224" pos:column="25">positionID</name> <op:operator pos:line="224" pos:column="36">==</op:operator> <lit:literal type="number" pos:line="224" pos:column="39">5</lit:literal></expr>)</condition><then><block pos:line="224" pos:column="41">{
			<expr_stmt><expr><call><name><name pos:line="225" pos:column="25">JOptionPane</name><op:operator pos:line="225" pos:column="36">.</op:operator><name pos:line="225" pos:column="37">showMessageDialog</name></name><argument_list pos:line="225" pos:column="54">(<argument><expr><lit:literal type="null" pos:line="225" pos:column="55">null</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="225" pos:column="61">"Super admin logged in"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="226" pos:column="25">frame</name><op:operator pos:line="226" pos:column="30">.</op:operator><name pos:line="226" pos:column="31">remove</name></name><argument_list pos:line="226" pos:column="37">(<argument><expr><name pos:line="226" pos:column="38">loginui</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="227" pos:column="25">frame</name><op:operator pos:line="227" pos:column="30">.</op:operator><name pos:line="227" pos:column="31">revalidate</name></name><argument_list pos:line="227" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="228" pos:column="25">frame</name><op:operator pos:line="228" pos:column="30">.</op:operator><name pos:line="228" pos:column="31">repaint</name></name><argument_list pos:line="228" pos:column="38">()</argument_list></call></expr>;</expr_stmt>						
			<try pos:line="229" pos:column="25">try <block pos:line="229" pos:column="29">{
				<decl_stmt><decl><type><name pos:line="230" pos:column="33">Admin</name></type> <name pos:line="230" pos:column="39">admin</name> <init pos:line="230" pos:column="45">= <expr><op:operator pos:line="230" pos:column="47">new</op:operator> <call><name pos:line="230" pos:column="51">Admin</name><argument_list pos:line="230" pos:column="56">(<argument><expr><name pos:line="230" pos:column="57">UIN</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="231" pos:column="33">Department</name></type> <name pos:line="231" pos:column="44">d</name> <init pos:line="231" pos:column="46">= <expr><op:operator pos:line="231" pos:column="48">new</op:operator> <call><name pos:line="231" pos:column="52">Department</name><argument_list pos:line="231" pos:column="62">(<argument><expr><call><name><name pos:line="231" pos:column="63">admin</name><op:operator pos:line="231" pos:column="68">.</op:operator><name pos:line="231" pos:column="69">getDeptID</name></name><argument_list pos:line="231" pos:column="78">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name pos:line="232" pos:column="33">panel</name> <op:operator pos:line="232" pos:column="39">=</op:operator> <call><name><name pos:line="232" pos:column="41">AdminUI</name><op:operator pos:line="232" pos:column="48">.</op:operator><name pos:line="232" pos:column="49">getInstance</name></name><argument_list pos:line="232" pos:column="60">(<argument><expr><name pos:line="232" pos:column="61">admin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="233" pos:column="33">frame</name><op:operator pos:line="233" pos:column="38">.</op:operator><name pos:line="233" pos:column="39">setBounds</name></name><argument_list pos:line="233" pos:column="48">(<argument><expr><lit:literal type="number" pos:line="233" pos:column="49">50</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="233" pos:column="53">50</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="233" pos:column="57">1024</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="233" pos:column="63">600</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="234" pos:column="33">frame</name><op:operator pos:line="234" pos:column="38">.</op:operator><name pos:line="234" pos:column="39">add</name></name><argument_list pos:line="234" pos:column="42">(<argument><expr><name pos:line="234" pos:column="43">panel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="235" pos:column="33">frame</name><op:operator pos:line="235" pos:column="38">.</op:operator><name pos:line="235" pos:column="39">setTitle</name></name><argument_list pos:line="235" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="235" pos:column="48">"UMAS SUPER ADMIN :"</lit:literal><op:operator pos:line="235" pos:column="68">+</op:operator><call><name><name pos:line="235" pos:column="69">admin</name><op:operator pos:line="235" pos:column="74">.</op:operator><name pos:line="235" pos:column="75">getName</name></name><argument_list pos:line="235" pos:column="82">()</argument_list></call><op:operator pos:line="235" pos:column="84">+</op:operator><lit:literal type="string" pos:line="235" pos:column="85">",    "</lit:literal><op:operator pos:line="235" pos:column="92">+</op:operator><call><name><name pos:line="235" pos:column="93">semester</name><op:operator pos:line="235" pos:column="101">.</op:operator><name pos:line="235" pos:column="102">toString</name></name><argument_list pos:line="235" pos:column="110">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="236" pos:column="33">frame</name><op:operator pos:line="236" pos:column="38">.</op:operator><name pos:line="236" pos:column="39">revalidate</name></name><argument_list pos:line="236" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="237" pos:column="33">frame</name><op:operator pos:line="237" pos:column="38">.</op:operator><name pos:line="237" pos:column="39">repaint</name></name><argument_list pos:line="237" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
				
			}</block> <catch pos:line="239" pos:column="27">catch <parameter_list pos:line="239" pos:column="33">(<param><decl><type><name><name pos:line="239" pos:column="34">Department</name><op:operator pos:line="239" pos:column="44">.</op:operator><name pos:line="239" pos:column="45">DepartmentDoesNotExistException</name></name></type> <name pos:line="239" pos:column="77">e</name></decl></param>)</parameter_list> <block pos:line="239" pos:column="80">{
				<comment type="line" pos:line="240" pos:column="33">// TODO Auto-generated catch block</comment>
				<expr_stmt><expr><call><name><name pos:line="241" pos:column="33">e</name><op:operator pos:line="241" pos:column="34">.</op:operator><name pos:line="241" pos:column="35">printStackTrace</name></name><argument_list pos:line="241" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			}</block></catch> <catch pos:line="242" pos:column="27">catch <parameter_list pos:line="242" pos:column="33">(<param><decl><type><name><name pos:line="242" pos:column="34">People</name><op:operator pos:line="242" pos:column="40">.</op:operator><name pos:line="242" pos:column="41">PersonDoesNotExistException</name></name></type> <name pos:line="242" pos:column="69">e</name></decl></param>)</parameter_list> <block pos:line="242" pos:column="72">{
				<comment type="line" pos:line="243" pos:column="33">// TODO Auto-generated catch block</comment>
				<expr_stmt><expr><call><name><name pos:line="244" pos:column="33">e</name><op:operator pos:line="244" pos:column="34">.</op:operator><name pos:line="244" pos:column="35">printStackTrace</name></name><argument_list pos:line="244" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			}</block></catch></try>
		}</block></then></if></else></if></else></if></else></if></else></if>
	}</block></function>

	<function><type><specifier pos:line="249" pos:column="9">public</specifier> <specifier pos:line="249" pos:column="16">static</specifier> <name pos:line="249" pos:column="23">void</name></type> <name pos:line="249" pos:column="28">logOutUser</name><parameter_list pos:line="249" pos:column="38">()</parameter_list><block pos:line="249" pos:column="40">{
		<expr_stmt><expr><call><name><name pos:line="250" pos:column="17">frame</name><op:operator pos:line="250" pos:column="22">.</op:operator><name pos:line="250" pos:column="23">remove</name></name><argument_list pos:line="250" pos:column="29">(<argument><expr><name pos:line="250" pos:column="30">panel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="251" pos:column="17">frame</name><op:operator pos:line="251" pos:column="22">.</op:operator><name pos:line="251" pos:column="23">revalidate</name></name><argument_list pos:line="251" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="252" pos:column="17">frame</name><op:operator pos:line="252" pos:column="22">.</op:operator><name pos:line="252" pos:column="23">repaint</name></name><argument_list pos:line="252" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="253" pos:column="17">panel</name> <op:operator pos:line="253" pos:column="23">=</op:operator> <op:operator pos:line="253" pos:column="25">new</op:operator> <call><name pos:line="253" pos:column="29">LoginUI</name><argument_list pos:line="253" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="254" pos:column="17">frame</name><op:operator pos:line="254" pos:column="22">.</op:operator><name pos:line="254" pos:column="23">add</name></name><argument_list pos:line="254" pos:column="26">(<argument><expr><name pos:line="254" pos:column="27">loginui</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="255" pos:column="17">frame</name><op:operator pos:line="255" pos:column="22">.</op:operator><name pos:line="255" pos:column="23">setTitle</name></name><argument_list pos:line="255" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="255" pos:column="32">"UMAS Login"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="256" pos:column="17">frame</name><op:operator pos:line="256" pos:column="22">.</op:operator><name pos:line="256" pos:column="23">setBounds</name></name><argument_list pos:line="256" pos:column="32">(<argument><expr><lit:literal type="number" pos:line="256" pos:column="33">100</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="256" pos:column="38">100</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="256" pos:column="43">500</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="256" pos:column="48">300</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="257" pos:column="17">frame</name><op:operator pos:line="257" pos:column="22">.</op:operator><name pos:line="257" pos:column="23">revalidate</name></name><argument_list pos:line="257" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="258" pos:column="17">frame</name><op:operator pos:line="258" pos:column="22">.</op:operator><name pos:line="258" pos:column="23">repaint</name></name><argument_list pos:line="258" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
		
	}</block></function>
}</block></class>
</unit>
