<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\xinco\src\com\bluecubs\xinco\index\XincoDocument.java" pos:tabs="8"><comment type="block" format="javadoc" pos:line="1" pos:column="1">/**
 *Copyright 2009 blueCubs.com
 *
 *Licensed under the Apache License, Version 2.0 (the "License");
 *you may not use this file except in compliance with the License.
 *You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 *Unless required by applicable law or agreed to in writing, software
 *distributed under the License is distributed on an "AS IS" BASIS,
 *WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *See the License for the specific language governing permissions and
 *limitations under the License.
 *
 *************************************************************
 * This project supports the blueCubs vision of giving back
 * to the community in exchange for free software!
 * More information on: http://www.bluecubs.org
 *************************************************************
 *
 * Name:            XincoDocument
 *
 * Description:     convert XincoCoreData to Lucene Documents 
 *
 * Original Author: Alexander Manes
 * Date:            2004/10/31
 *
 * Modifications:
 * 
 * Who?             When?             What?
 * -                -                 -
 *
 *************************************************************
 */</comment>

<package pos:line="37" pos:column="1">package <name><name pos:line="37" pos:column="9">com</name><op:operator pos:line="37" pos:column="12">.</op:operator><name pos:line="37" pos:column="13">bluecubs</name><op:operator pos:line="37" pos:column="21">.</op:operator><name pos:line="37" pos:column="22">xinco</name><op:operator pos:line="37" pos:column="27">.</op:operator><name pos:line="37" pos:column="28">index</name></name>;</package>

<import pos:line="39" pos:column="1">import <name><name pos:line="39" pos:column="8">java</name><op:operator pos:line="39" pos:column="12">.</op:operator><name pos:line="39" pos:column="13">io</name><op:operator pos:line="39" pos:column="15">.</op:operator><name pos:line="39" pos:column="16">File</name></name>;</import>
<import pos:line="40" pos:column="1">import <name><name pos:line="40" pos:column="8">java</name><op:operator pos:line="40" pos:column="12">.</op:operator><name pos:line="40" pos:column="13">io</name><op:operator pos:line="40" pos:column="15">.</op:operator><name pos:line="40" pos:column="16">Reader</name></name>;</import>
<import pos:line="41" pos:column="1">import <name><name pos:line="41" pos:column="8">java</name><op:operator pos:line="41" pos:column="12">.</op:operator><name pos:line="41" pos:column="13">io</name><op:operator pos:line="41" pos:column="15">.</op:operator><name pos:line="41" pos:column="16">FileInputStream</name></name>;</import>
<import pos:line="42" pos:column="1">import <name><name pos:line="42" pos:column="8">org</name><op:operator pos:line="42" pos:column="11">.</op:operator><name pos:line="42" pos:column="12">apache</name><op:operator pos:line="42" pos:column="18">.</op:operator><name pos:line="42" pos:column="19">lucene</name><op:operator pos:line="42" pos:column="25">.</op:operator><name pos:line="42" pos:column="26">document</name><op:operator pos:line="42" pos:column="34">.</op:operator><name pos:line="42" pos:column="35">Document</name></name>;</import>
<import pos:line="43" pos:column="1">import <name><name pos:line="43" pos:column="8">org</name><op:operator pos:line="43" pos:column="11">.</op:operator><name pos:line="43" pos:column="12">apache</name><op:operator pos:line="43" pos:column="18">.</op:operator><name pos:line="43" pos:column="19">lucene</name><op:operator pos:line="43" pos:column="25">.</op:operator><name pos:line="43" pos:column="26">document</name><op:operator pos:line="43" pos:column="34">.</op:operator><name pos:line="43" pos:column="35">Field</name></name>;</import>
<import pos:line="44" pos:column="1">import <name><name pos:line="44" pos:column="8">com</name><op:operator pos:line="44" pos:column="11">.</op:operator><name pos:line="44" pos:column="12">bluecubs</name><op:operator pos:line="44" pos:column="20">.</op:operator><name pos:line="44" pos:column="21">xinco</name><op:operator pos:line="44" pos:column="26">.</op:operator><name pos:line="44" pos:column="27">core</name></name>.*;</import>
<import pos:line="45" pos:column="1">import <name><name pos:line="45" pos:column="8">com</name><op:operator pos:line="45" pos:column="11">.</op:operator><name pos:line="45" pos:column="12">bluecubs</name><op:operator pos:line="45" pos:column="20">.</op:operator><name pos:line="45" pos:column="21">xinco</name><op:operator pos:line="45" pos:column="26">.</op:operator><name pos:line="45" pos:column="27">add</name></name>.*;</import>
<import pos:line="46" pos:column="1">import <name><name pos:line="46" pos:column="8">com</name><op:operator pos:line="46" pos:column="11">.</op:operator><name pos:line="46" pos:column="12">bluecubs</name><op:operator pos:line="46" pos:column="20">.</op:operator><name pos:line="46" pos:column="21">xinco</name><op:operator pos:line="46" pos:column="26">.</op:operator><name pos:line="46" pos:column="27">core</name><op:operator pos:line="46" pos:column="31">.</op:operator><name pos:line="46" pos:column="32">server</name></name>.*;</import>
<import pos:line="47" pos:column="1">import <name><name pos:line="47" pos:column="8">com</name><op:operator pos:line="47" pos:column="11">.</op:operator><name pos:line="47" pos:column="12">bluecubs</name><op:operator pos:line="47" pos:column="20">.</op:operator><name pos:line="47" pos:column="21">xinco</name><op:operator pos:line="47" pos:column="26">.</op:operator><name pos:line="47" pos:column="27">index</name><op:operator pos:line="47" pos:column="32">.</op:operator><name pos:line="47" pos:column="33">filetypes</name></name>.*;</import>

<comment type="block" format="javadoc" pos:line="49" pos:column="1">/** A utility for making Lucene Documents from a File. */</comment>

<class><specifier pos:line="51" pos:column="1">public</specifier> class <name pos:line="51" pos:column="14">XincoDocument</name> <block pos:line="51" pos:column="28">{

	<function><type><specifier pos:line="53" pos:column="9">public</specifier> <specifier pos:line="53" pos:column="16">static</specifier> <name pos:line="53" pos:column="23">Document</name></type> <name pos:line="53" pos:column="32">getXincoDocument</name><parameter_list pos:line="53" pos:column="48">(<param><decl><type><name pos:line="53" pos:column="49">XincoCoreData</name></type> <name pos:line="53" pos:column="63">d</name></decl></param>, <param><decl><type><name pos:line="53" pos:column="66">boolean</name></type> <name pos:line="53" pos:column="74">index_content</name></decl></param>, <param><decl><type><name pos:line="53" pos:column="89">XincoDBManager</name></type> <name pos:line="53" pos:column="104">dbm</name></decl></param>)</parameter_list> <throws pos:line="53" pos:column="109">throws <argument><expr><name><name pos:line="53" pos:column="116">java</name><op:operator pos:line="53" pos:column="120">.</op:operator><name pos:line="53" pos:column="121">io</name><op:operator pos:line="53" pos:column="123">.</op:operator><name pos:line="53" pos:column="124">FileNotFoundException</name></name></expr></argument></throws> <block pos:line="53" pos:column="146">{
	 
		<decl_stmt><decl><type><name pos:line="55" pos:column="17">int</name></type> <name pos:line="55" pos:column="21">i</name></decl><op:operator pos:line="55" pos:column="22">,</op:operator> <decl><type ref="prev"/><name pos:line="55" pos:column="24">j</name></decl><op:operator pos:line="55" pos:column="25">,</op:operator> <decl><type ref="prev"/><name pos:line="55" pos:column="27">l</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="56" pos:column="17">int</name></type> <name pos:line="56" pos:column="21">i2</name></decl><op:operator pos:line="56" pos:column="23">,</op:operator> <decl><type ref="prev"/><name pos:line="56" pos:column="25">j2</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="57" pos:column="17">short</name></type> <name pos:line="57" pos:column="23">k</name></decl><op:operator pos:line="57" pos:column="24">,</op:operator> <decl><type ref="prev"/><name pos:line="57" pos:column="26">k2</name></decl>;</decl_stmt> 
		<decl_stmt><decl><type><name pos:line="58" pos:column="17">FileInputStream</name></type> <name pos:line="58" pos:column="33">is</name> <init pos:line="58" pos:column="36">= <expr><lit:literal type="null" pos:line="58" pos:column="38">null</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="59" pos:column="17">Document</name></type> <name pos:line="59" pos:column="26">doc</name> <init pos:line="59" pos:column="30">= <expr><lit:literal type="null" pos:line="59" pos:column="32">null</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="60" pos:column="17">Document</name></type> <name pos:line="60" pos:column="26">temp_doc</name> <init pos:line="60" pos:column="35">= <expr><lit:literal type="null" pos:line="60" pos:column="37">null</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="61" pos:column="17">int</name></type> <name pos:line="61" pos:column="21">file_type</name> <init pos:line="61" pos:column="31">= <expr><lit:literal type="number" pos:line="61" pos:column="33">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="62" pos:column="17">int</name></type> <name pos:line="62" pos:column="21">file_ext_index</name> <init pos:line="62" pos:column="36">= <expr><lit:literal type="number" pos:line="62" pos:column="38">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="63" pos:column="17">String</name></type> <name pos:line="63" pos:column="24">file_ext</name> <init pos:line="63" pos:column="33">= <expr><lit:literal type="string" pos:line="63" pos:column="35">""</lit:literal></expr></init></decl>;</decl_stmt>
		
		<expr_stmt><expr><name pos:line="65" pos:column="17">doc</name> <op:operator pos:line="65" pos:column="21">=</op:operator> <op:operator pos:line="65" pos:column="23">new</op:operator> <call><name pos:line="65" pos:column="27">Document</name><argument_list pos:line="65" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
		
		<comment type="line" pos:line="67" pos:column="17">//add XincoCoreData information</comment>
		<expr_stmt><expr><call><name><name pos:line="68" pos:column="17">doc</name><op:operator pos:line="68" pos:column="20">.</op:operator><name pos:line="68" pos:column="21">add</name></name><argument_list pos:line="68" pos:column="24">(<argument><expr><op:operator pos:line="68" pos:column="25">new</op:operator> <call><name pos:line="68" pos:column="29">Field</name><argument_list pos:line="68" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="68" pos:column="35">"id"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="68" pos:column="41">(</op:operator><op:operator pos:line="68" pos:column="42">new</op:operator> <call><name pos:line="68" pos:column="46">Integer</name><argument_list pos:line="68" pos:column="53">(<argument><expr><call><name><name pos:line="68" pos:column="54">d</name><op:operator pos:line="68" pos:column="55">.</op:operator><name pos:line="68" pos:column="56">getId</name></name><argument_list pos:line="68" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="68" pos:column="64">)</op:operator><op:operator pos:line="68" pos:column="65">.</op:operator><call><name pos:line="68" pos:column="66">toString</name><argument_list pos:line="68" pos:column="74">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="68" pos:column="78">true</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="68" pos:column="84">true</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="68" pos:column="90">false</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="69" pos:column="17">doc</name><op:operator pos:line="69" pos:column="20">.</op:operator><name pos:line="69" pos:column="21">add</name></name><argument_list pos:line="69" pos:column="24">(<argument><expr><call><name><name pos:line="69" pos:column="25">Field</name><op:operator pos:line="69" pos:column="30">.</op:operator><name pos:line="69" pos:column="31">Text</name></name><argument_list pos:line="69" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="69" pos:column="36">"designation"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="69" pos:column="51">d</name><op:operator pos:line="69" pos:column="52">.</op:operator><name pos:line="69" pos:column="53">getDesignation</name></name><argument_list pos:line="69" pos:column="67">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="70" pos:column="17">doc</name><op:operator pos:line="70" pos:column="20">.</op:operator><name pos:line="70" pos:column="21">add</name></name><argument_list pos:line="70" pos:column="24">(<argument><expr><op:operator pos:line="70" pos:column="25">new</op:operator> <call><name pos:line="70" pos:column="29">Field</name><argument_list pos:line="70" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="70" pos:column="35">"language"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="70" pos:column="47">(</op:operator><op:operator pos:line="70" pos:column="48">new</op:operator> <call><name pos:line="70" pos:column="52">Integer</name><argument_list pos:line="70" pos:column="59">(<argument><expr><call><name><name pos:line="70" pos:column="60">d</name><op:operator pos:line="70" pos:column="61">.</op:operator><name pos:line="70" pos:column="62">getXinco_core_language</name></name><argument_list pos:line="70" pos:column="84">()</argument_list></call><op:operator pos:line="70" pos:column="86">.</op:operator><call><name pos:line="70" pos:column="87">getId</name><argument_list pos:line="70" pos:column="92">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="70" pos:column="95">)</op:operator><op:operator pos:line="70" pos:column="96">.</op:operator><call><name pos:line="70" pos:column="97">toString</name><argument_list pos:line="70" pos:column="105">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="70" pos:column="109">true</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="70" pos:column="115">true</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="70" pos:column="121">false</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<comment type="line" pos:line="72" pos:column="17">//add content of file</comment>
		<if pos:line="73" pos:column="17">if <condition pos:line="73" pos:column="20">(<expr><name pos:line="73" pos:column="21">index_content</name></expr>)</condition><then pos:line="73" pos:column="35"> <block pos:line="73" pos:column="36">{
			<if pos:line="74" pos:column="25">if <condition pos:line="74" pos:column="28">(<expr><op:operator pos:line="74" pos:column="29">(</op:operator><call><name><name pos:line="74" pos:column="30">d</name><op:operator pos:line="74" pos:column="31">.</op:operator><name pos:line="74" pos:column="32">getXinco_core_data_type</name></name><argument_list pos:line="74" pos:column="55">()</argument_list></call><op:operator pos:line="74" pos:column="57">.</op:operator><call><name pos:line="74" pos:column="58">getId</name><argument_list pos:line="74" pos:column="63">()</argument_list></call> <op:operator pos:line="74" pos:column="66">==</op:operator> <lit:literal type="number" pos:line="74" pos:column="69">1</lit:literal><op:operator pos:line="74" pos:column="70">)</op:operator> <op:operator pos:line="74" pos:column="72">&amp;&amp;</op:operator> <op:operator pos:line="74" pos:column="75">(</op:operator><call><name><name pos:line="74" pos:column="76">d</name><op:operator pos:line="74" pos:column="77">.</op:operator><name pos:line="74" pos:column="78">getStatus_number</name></name><argument_list pos:line="74" pos:column="94">()</argument_list></call> <op:operator pos:line="74" pos:column="97">!=</op:operator> <lit:literal type="number" pos:line="74" pos:column="100">3</lit:literal><op:operator pos:line="74" pos:column="101">)</op:operator></expr>)</condition><then pos:line="74" pos:column="103"> <block pos:line="74" pos:column="104">{ <comment type="line" pos:line="74" pos:column="106">//process non-archived file</comment>
				<comment type="line" pos:line="75" pos:column="33">//extract file extension from file name</comment>
				<expr_stmt><expr><name pos:line="76" pos:column="33">file_ext_index</name> <op:operator pos:line="76" pos:column="48">=</op:operator><op:operator pos:line="76" pos:column="49">(</op:operator><op:operator pos:line="76" pos:column="50">(</op:operator><name pos:line="76" pos:column="51">XincoAddAttribute</name><op:operator pos:line="76" pos:column="68">)</op:operator><call><name><name pos:line="76" pos:column="69">d</name><op:operator pos:line="76" pos:column="70">.</op:operator><name pos:line="76" pos:column="71">getXinco_add_attributes</name></name><argument_list pos:line="76" pos:column="94">()</argument_list></call><op:operator pos:line="76" pos:column="96">.</op:operator><call><name pos:line="76" pos:column="97">elementAt</name><argument_list pos:line="76" pos:column="106">(<argument><expr><lit:literal type="number" pos:line="76" pos:column="107">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="76" pos:column="109">)</op:operator><op:operator pos:line="76" pos:column="110">.</op:operator><call><name pos:line="76" pos:column="111">getAttrib_varchar</name><argument_list pos:line="76" pos:column="128">()</argument_list></call><op:operator pos:line="76" pos:column="130">.</op:operator><call><name pos:line="76" pos:column="131">lastIndexOf</name><argument_list pos:line="76" pos:column="142">(<argument><expr><lit:literal type="string" pos:line="76" pos:column="143">"."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<if pos:line="77" pos:column="33">if <condition pos:line="77" pos:column="36">(<expr><name pos:line="77" pos:column="37">file_ext_index</name> <op:operator pos:line="77" pos:column="52">==</op:operator> <op:operator pos:line="77" pos:column="55">-</op:operator><lit:literal type="number" pos:line="77" pos:column="56">1</lit:literal></expr>)</condition><then pos:line="77" pos:column="58"> <block pos:line="77" pos:column="59">{
					<expr_stmt><expr><name pos:line="78" pos:column="41">file_ext</name> <op:operator pos:line="78" pos:column="50">=</op:operator> <lit:literal type="string" pos:line="78" pos:column="52">""</lit:literal></expr>;</expr_stmt>
				}</block></then> <else pos:line="79" pos:column="35">else <block pos:line="79" pos:column="40">{
					<if pos:line="80" pos:column="41">if <condition pos:line="80" pos:column="44">(<expr><name pos:line="80" pos:column="45">file_ext_index</name> <op:operator pos:line="80" pos:column="60">&gt;=</op:operator> <op:operator pos:line="80" pos:column="63">(</op:operator><op:operator pos:line="80" pos:column="64">(</op:operator><name pos:line="80" pos:column="65">XincoAddAttribute</name><op:operator pos:line="80" pos:column="82">)</op:operator><call><name><name pos:line="80" pos:column="83">d</name><op:operator pos:line="80" pos:column="84">.</op:operator><name pos:line="80" pos:column="85">getXinco_add_attributes</name></name><argument_list pos:line="80" pos:column="108">()</argument_list></call><op:operator pos:line="80" pos:column="110">.</op:operator><call><name pos:line="80" pos:column="111">elementAt</name><argument_list pos:line="80" pos:column="120">(<argument><expr><lit:literal type="number" pos:line="80" pos:column="121">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="80" pos:column="123">)</op:operator><op:operator pos:line="80" pos:column="124">.</op:operator><call><name pos:line="80" pos:column="125">getAttrib_varchar</name><argument_list pos:line="80" pos:column="142">()</argument_list></call><op:operator pos:line="80" pos:column="144">.</op:operator><call><name pos:line="80" pos:column="145">length</name><argument_list pos:line="80" pos:column="151">()</argument_list></call> <op:operator pos:line="80" pos:column="154">-</op:operator> <lit:literal type="number" pos:line="80" pos:column="156">1</lit:literal></expr>)</condition><then pos:line="80" pos:column="158"> <block pos:line="80" pos:column="159">{
						<expr_stmt><expr><name pos:line="81" pos:column="49">file_ext</name> <op:operator pos:line="81" pos:column="58">=</op:operator> <lit:literal type="string" pos:line="81" pos:column="60">""</lit:literal></expr>;</expr_stmt>
					}</block></then> <else pos:line="82" pos:column="43">else <block pos:line="82" pos:column="48">{
						<expr_stmt><expr><name pos:line="83" pos:column="49">file_ext</name> <op:operator pos:line="83" pos:column="58">=</op:operator> <op:operator pos:line="83" pos:column="60">(</op:operator><op:operator pos:line="83" pos:column="61">(</op:operator><name pos:line="83" pos:column="62">XincoAddAttribute</name><op:operator pos:line="83" pos:column="79">)</op:operator><call><name><name pos:line="83" pos:column="80">d</name><op:operator pos:line="83" pos:column="81">.</op:operator><name pos:line="83" pos:column="82">getXinco_add_attributes</name></name><argument_list pos:line="83" pos:column="105">()</argument_list></call><op:operator pos:line="83" pos:column="107">.</op:operator><call><name pos:line="83" pos:column="108">elementAt</name><argument_list pos:line="83" pos:column="117">(<argument><expr><lit:literal type="number" pos:line="83" pos:column="118">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="83" pos:column="120">)</op:operator><op:operator pos:line="83" pos:column="121">.</op:operator><call><name pos:line="83" pos:column="122">getAttrib_varchar</name><argument_list pos:line="83" pos:column="139">()</argument_list></call><op:operator pos:line="83" pos:column="141">.</op:operator><call><name pos:line="83" pos:column="142">substring</name><argument_list pos:line="83" pos:column="151">(<argument><expr><name pos:line="83" pos:column="152">file_ext_index</name> <op:operator pos:line="83" pos:column="167">+</op:operator> <lit:literal type="number" pos:line="83" pos:column="169">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></else></if>
				}</block></else></if>
				<comment type="line" pos:line="86" pos:column="33">//check which indexer to use for file extension</comment>
				<expr_stmt><expr><name pos:line="87" pos:column="33">file_type</name> <op:operator pos:line="87" pos:column="43">=</op:operator> <lit:literal type="number" pos:line="87" pos:column="45">0</lit:literal></expr>;</expr_stmt> <comment type="line" pos:line="87" pos:column="48">// default: index as TEXT</comment>
				<for pos:line="88" pos:column="33">for (<init><expr><name pos:line="88" pos:column="38">l</name><op:operator pos:line="88" pos:column="39">=</op:operator><lit:literal type="number" pos:line="88" pos:column="40">0</lit:literal></expr>;</init><condition><expr><name pos:line="88" pos:column="42">l</name><op:operator pos:line="88" pos:column="43">&lt;</op:operator><name><name pos:line="88" pos:column="44">dbm</name><op:operator pos:line="88" pos:column="47">.</op:operator><name pos:line="88" pos:column="48">config</name><op:operator pos:line="88" pos:column="54">.</op:operator><name pos:line="88" pos:column="55">FileIndexerCount</name></name></expr>;</condition><incr><expr><name pos:line="88" pos:column="72">l</name><op:operator pos:line="88" pos:column="73">++</op:operator></expr></incr>) <block pos:line="88" pos:column="77">{
					<for pos:line="89" pos:column="41">for (<init><expr><name pos:line="89" pos:column="46">i</name><op:operator pos:line="89" pos:column="47">=</op:operator><lit:literal type="number" pos:line="89" pos:column="48">0</lit:literal></expr>;</init><condition><expr><name pos:line="89" pos:column="50">i</name><op:operator pos:line="89" pos:column="51">&lt;</op:operator><op:operator pos:line="89" pos:column="52">(</op:operator><op:operator pos:line="89" pos:column="53">(</op:operator><name><name pos:line="89" pos:column="54">String</name><index pos:line="89" pos:column="60">[]</index></name><op:operator pos:line="89" pos:column="62">)</op:operator><call><name><name pos:line="89" pos:column="63">dbm</name><op:operator pos:line="89" pos:column="66">.</op:operator><name pos:line="89" pos:column="67">config</name><op:operator pos:line="89" pos:column="73">.</op:operator><name pos:line="89" pos:column="74">IndexFileTypesExt</name><op:operator pos:line="89" pos:column="91">.</op:operator><name pos:line="89" pos:column="92">elementAt</name></name><argument_list pos:line="89" pos:column="101">(<argument><expr><name pos:line="89" pos:column="102">l</name></expr></argument>)</argument_list></call><op:operator pos:line="89" pos:column="104">)</op:operator><op:operator pos:line="89" pos:column="105">.</op:operator><name pos:line="89" pos:column="106">length</name></expr>;</condition><incr><expr><name pos:line="89" pos:column="113">i</name><op:operator pos:line="89" pos:column="114">++</op:operator></expr></incr>) <block pos:line="89" pos:column="118">{
						<if pos:line="90" pos:column="49">if <condition pos:line="90" pos:column="52">(<expr><op:operator pos:line="90" pos:column="53">(</op:operator><op:operator pos:line="90" pos:column="54">(</op:operator><name><name pos:line="90" pos:column="55">String</name><index pos:line="90" pos:column="61">[]</index></name><op:operator pos:line="90" pos:column="63">)</op:operator><call><name><name pos:line="90" pos:column="64">dbm</name><op:operator pos:line="90" pos:column="67">.</op:operator><name pos:line="90" pos:column="68">config</name><op:operator pos:line="90" pos:column="74">.</op:operator><name pos:line="90" pos:column="75">IndexFileTypesExt</name><op:operator pos:line="90" pos:column="92">.</op:operator><name pos:line="90" pos:column="93">elementAt</name></name><argument_list pos:line="90" pos:column="102">(<argument><expr><name pos:line="90" pos:column="103">l</name></expr></argument>)</argument_list></call><op:operator pos:line="90" pos:column="105">)</op:operator><index pos:line="90" pos:column="106">[<expr><name pos:line="90" pos:column="107">i</name></expr>]</index><op:operator pos:line="90" pos:column="109">.</op:operator><call><name pos:line="90" pos:column="110">compareTo</name><argument_list pos:line="90" pos:column="119">(<argument><expr><name pos:line="90" pos:column="120">file_ext</name></expr></argument>)</argument_list></call> <op:operator pos:line="90" pos:column="130">==</op:operator> <lit:literal type="number" pos:line="90" pos:column="133">0</lit:literal></expr>)</condition><then pos:line="90" pos:column="135"> <block pos:line="90" pos:column="136">{
							<expr_stmt><expr><name pos:line="91" pos:column="57">file_type</name> <op:operator pos:line="91" pos:column="67">=</op:operator> <name pos:line="91" pos:column="69">l</name><op:operator pos:line="91" pos:column="70">+</op:operator><lit:literal type="number" pos:line="91" pos:column="71">1</lit:literal></expr>;</expr_stmt> <comment type="line" pos:line="91" pos:column="74">// file-type specific indexing</comment>
							<break pos:line="92" pos:column="57">break;</break>
						}</block></then></if>
					}</block></for>
					<if pos:line="95" pos:column="41">if <condition pos:line="95" pos:column="44">(<expr><name pos:line="95" pos:column="45">file_type</name> <op:operator pos:line="95" pos:column="55">&gt;</op:operator> <lit:literal type="number" pos:line="95" pos:column="57">0</lit:literal></expr>)</condition><then pos:line="95" pos:column="59"> <block pos:line="95" pos:column="60">{
						<break pos:line="96" pos:column="49">break;</break>
					}</block></then></if>
				}</block></for>
				<if pos:line="99" pos:column="33">if <condition pos:line="99" pos:column="36">(<expr><name pos:line="99" pos:column="37">file_type</name> <op:operator pos:line="99" pos:column="47">==</op:operator> <lit:literal type="number" pos:line="99" pos:column="50">0</lit:literal></expr>)</condition><then pos:line="99" pos:column="52"> <block pos:line="99" pos:column="53">{
					<for pos:line="100" pos:column="41">for (<init><expr><name pos:line="100" pos:column="46">i</name><op:operator pos:line="100" pos:column="47">=</op:operator><lit:literal type="number" pos:line="100" pos:column="48">0</lit:literal></expr>;</init><condition><expr><name pos:line="100" pos:column="50">i</name><op:operator pos:line="100" pos:column="51">&lt;</op:operator><name><name pos:line="100" pos:column="52">dbm</name><op:operator pos:line="100" pos:column="55">.</op:operator><name pos:line="100" pos:column="56">config</name><op:operator pos:line="100" pos:column="62">.</op:operator><name pos:line="100" pos:column="63">IndexNoIndex</name><op:operator pos:line="100" pos:column="75">.</op:operator><name pos:line="100" pos:column="76">length</name></name></expr>;</condition><incr><expr><name pos:line="100" pos:column="83">i</name><op:operator pos:line="100" pos:column="84">++</op:operator></expr></incr>) <block pos:line="100" pos:column="88">{
						<if pos:line="101" pos:column="49">if <condition pos:line="101" pos:column="52">(<expr><name><name pos:line="101" pos:column="53">dbm</name><op:operator pos:line="101" pos:column="56">.</op:operator><name pos:line="101" pos:column="57">config</name><op:operator pos:line="101" pos:column="63">.</op:operator><name pos:line="101" pos:column="64">IndexNoIndex</name><index pos:line="101" pos:column="76">[<expr><name pos:line="101" pos:column="77">i</name></expr>]</index></name><op:operator pos:line="101" pos:column="79">.</op:operator><call><name pos:line="101" pos:column="80">compareTo</name><argument_list pos:line="101" pos:column="89">(<argument><expr><name pos:line="101" pos:column="90">file_ext</name></expr></argument>)</argument_list></call> <op:operator pos:line="101" pos:column="100">==</op:operator> <lit:literal type="number" pos:line="101" pos:column="103">0</lit:literal></expr>)</condition><then pos:line="101" pos:column="105"> <block pos:line="101" pos:column="106">{
							<expr_stmt><expr><name pos:line="102" pos:column="57">file_type</name> <op:operator pos:line="102" pos:column="67">=</op:operator> <op:operator pos:line="102" pos:column="69">-</op:operator><lit:literal type="number" pos:line="102" pos:column="70">1</lit:literal></expr>;</expr_stmt> <comment type="line" pos:line="102" pos:column="73">// NO indexing</comment>
							<break pos:line="103" pos:column="57">break;</break>
						}</block></then></if>
					}</block></for>
				}</block></then></if>
				<comment type="line" pos:line="107" pos:column="33">// call actual indexing classes</comment>
				<decl_stmt><decl><type><name pos:line="108" pos:column="33">XincoIndexFileType</name></type> <name pos:line="108" pos:column="52">xift</name> <init pos:line="108" pos:column="57">= <expr><lit:literal type="null" pos:line="108" pos:column="59">null</lit:literal></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="109" pos:column="33">Reader</name></type> <name pos:line="109" pos:column="40">ContentReader</name> <init pos:line="109" pos:column="54">= <expr><lit:literal type="null" pos:line="109" pos:column="56">null</lit:literal></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="110" pos:column="33">String</name></type> <name pos:line="110" pos:column="40">ContentString</name> <init pos:line="110" pos:column="54">= <expr><lit:literal type="null" pos:line="110" pos:column="56">null</lit:literal></expr></init></decl>;</decl_stmt>
				<if pos:line="111" pos:column="33">if <condition pos:line="111" pos:column="36">(<expr><name pos:line="111" pos:column="37">file_type</name> <op:operator pos:line="111" pos:column="47">==</op:operator> <lit:literal type="number" pos:line="111" pos:column="50">0</lit:literal></expr>)</condition><then pos:line="111" pos:column="52"> <block pos:line="111" pos:column="53">{
					<comment type="line" pos:line="112" pos:column="41">// index as TEXT</comment>
					<expr_stmt><expr><name pos:line="113" pos:column="41">xift</name> <op:operator pos:line="113" pos:column="46">=</op:operator> <op:operator pos:line="113" pos:column="48">new</op:operator> <call><name pos:line="113" pos:column="52">XincoIndexText</name><argument_list pos:line="113" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="114" pos:column="41">doc</name><op:operator pos:line="114" pos:column="44">.</op:operator><name pos:line="114" pos:column="45">add</name></name><argument_list pos:line="114" pos:column="48">(<argument><expr><call><name><name pos:line="114" pos:column="49">Field</name><op:operator pos:line="114" pos:column="54">.</op:operator><name pos:line="114" pos:column="55">Text</name></name><argument_list pos:line="114" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="114" pos:column="60">"file"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="114" pos:column="68">xift</name><op:operator pos:line="114" pos:column="72">.</op:operator><name pos:line="114" pos:column="73">getFileContentReader</name></name><argument_list pos:line="114" pos:column="93">(<argument><expr><op:operator pos:line="114" pos:column="94">new</op:operator> <call><name pos:line="114" pos:column="98">File</name><argument_list pos:line="114" pos:column="102">(<argument><expr><call><name><name pos:line="114" pos:column="103">XincoCoreDataServer</name><op:operator pos:line="114" pos:column="122">.</op:operator><name pos:line="114" pos:column="123">getXincoCoreDataPath</name></name><argument_list pos:line="114" pos:column="143">(<argument><expr><name><name pos:line="114" pos:column="144">dbm</name><op:operator pos:line="114" pos:column="147">.</op:operator><name pos:line="114" pos:column="148">config</name><op:operator pos:line="114" pos:column="154">.</op:operator><name pos:line="114" pos:column="155">FileRepositoryPath</name></name></expr></argument>, <argument><expr><call><name><name pos:line="114" pos:column="175">d</name><op:operator pos:line="114" pos:column="176">.</op:operator><name pos:line="114" pos:column="177">getId</name></name><argument_list pos:line="114" pos:column="182">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="114" pos:column="186">""</lit:literal> <op:operator pos:line="114" pos:column="189">+</op:operator> <call><name><name pos:line="114" pos:column="191">d</name><op:operator pos:line="114" pos:column="192">.</op:operator><name pos:line="114" pos:column="193">getId</name></name><argument_list pos:line="114" pos:column="198">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then> <else pos:line="115" pos:column="35">else <if pos:line="115" pos:column="40">if <condition pos:line="115" pos:column="43">(<expr><name pos:line="115" pos:column="44">file_type</name> <op:operator pos:line="115" pos:column="54">&gt;</op:operator> <lit:literal type="number" pos:line="115" pos:column="56">0</lit:literal></expr>)</condition><then pos:line="115" pos:column="58"> <block pos:line="115" pos:column="59">{
					<comment type="line" pos:line="116" pos:column="41">// file-type specific indexing</comment>
					<try pos:line="117" pos:column="41">try <block pos:line="117" pos:column="45">{
						<expr_stmt><expr><name pos:line="118" pos:column="49">xift</name> <op:operator pos:line="118" pos:column="54">=</op:operator> <op:operator pos:line="118" pos:column="56">(</op:operator><name pos:line="118" pos:column="57">XincoIndexFileType</name><op:operator pos:line="118" pos:column="75">)</op:operator><call><name><name pos:line="118" pos:column="76">Class</name><op:operator pos:line="118" pos:column="81">.</op:operator><name pos:line="118" pos:column="82">forName</name></name><argument_list pos:line="118" pos:column="89">(<argument><expr><op:operator pos:line="118" pos:column="90">(</op:operator><name pos:line="118" pos:column="91">String</name><op:operator pos:line="118" pos:column="97">)</op:operator><call><name><name pos:line="118" pos:column="98">dbm</name><op:operator pos:line="118" pos:column="101">.</op:operator><name pos:line="118" pos:column="102">config</name><op:operator pos:line="118" pos:column="108">.</op:operator><name pos:line="118" pos:column="109">IndexFileTypesClass</name><op:operator pos:line="118" pos:column="128">.</op:operator><name pos:line="118" pos:column="129">elementAt</name></name><argument_list pos:line="118" pos:column="138">(<argument><expr><name pos:line="118" pos:column="139">file_type</name><op:operator pos:line="118" pos:column="148">-</op:operator><lit:literal type="number" pos:line="118" pos:column="149">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="118" pos:column="152">.</op:operator><call><name pos:line="118" pos:column="153">newInstance</name><argument_list pos:line="118" pos:column="164">()</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name pos:line="119" pos:column="49">ContentReader</name> <op:operator pos:line="119" pos:column="63">=</op:operator> <call><name><name pos:line="119" pos:column="65">xift</name><op:operator pos:line="119" pos:column="69">.</op:operator><name pos:line="119" pos:column="70">getFileContentReader</name></name><argument_list pos:line="119" pos:column="90">(<argument><expr><op:operator pos:line="119" pos:column="91">new</op:operator> <call><name pos:line="119" pos:column="95">File</name><argument_list pos:line="119" pos:column="99">(<argument><expr><call><name><name pos:line="119" pos:column="100">XincoCoreDataServer</name><op:operator pos:line="119" pos:column="119">.</op:operator><name pos:line="119" pos:column="120">getXincoCoreDataPath</name></name><argument_list pos:line="119" pos:column="140">(<argument><expr><name><name pos:line="119" pos:column="141">dbm</name><op:operator pos:line="119" pos:column="144">.</op:operator><name pos:line="119" pos:column="145">config</name><op:operator pos:line="119" pos:column="151">.</op:operator><name pos:line="119" pos:column="152">FileRepositoryPath</name></name></expr></argument>, <argument><expr><call><name><name pos:line="119" pos:column="172">d</name><op:operator pos:line="119" pos:column="173">.</op:operator><name pos:line="119" pos:column="174">getId</name></name><argument_list pos:line="119" pos:column="179">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="119" pos:column="183">""</lit:literal> <op:operator pos:line="119" pos:column="186">+</op:operator> <call><name><name pos:line="119" pos:column="188">d</name><op:operator pos:line="119" pos:column="189">.</op:operator><name pos:line="119" pos:column="190">getId</name></name><argument_list pos:line="119" pos:column="195">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<if pos:line="120" pos:column="49">if <condition pos:line="120" pos:column="52">(<expr><name pos:line="120" pos:column="53">ContentReader</name> <op:operator pos:line="120" pos:column="67">!=</op:operator> <lit:literal type="null" pos:line="120" pos:column="70">null</lit:literal></expr>)</condition><then pos:line="120" pos:column="75"> <block pos:line="120" pos:column="76">{
							<expr_stmt><expr><call><name><name pos:line="121" pos:column="57">doc</name><op:operator pos:line="121" pos:column="60">.</op:operator><name pos:line="121" pos:column="61">add</name></name><argument_list pos:line="121" pos:column="64">(<argument><expr><call><name><name pos:line="121" pos:column="65">Field</name><op:operator pos:line="121" pos:column="70">.</op:operator><name pos:line="121" pos:column="71">Text</name></name><argument_list pos:line="121" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="121" pos:column="76">"file"</lit:literal></expr></argument>, <argument><expr><name pos:line="121" pos:column="84">ContentReader</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></then> <else pos:line="122" pos:column="51">else <block pos:line="122" pos:column="56">{
							<expr_stmt><expr><name pos:line="123" pos:column="57">ContentString</name> <op:operator pos:line="123" pos:column="71">=</op:operator> <call><name><name pos:line="123" pos:column="73">xift</name><op:operator pos:line="123" pos:column="77">.</op:operator><name pos:line="123" pos:column="78">getFileContentString</name></name><argument_list pos:line="123" pos:column="98">(<argument><expr><op:operator pos:line="123" pos:column="99">new</op:operator> <call><name pos:line="123" pos:column="103">File</name><argument_list pos:line="123" pos:column="107">(<argument><expr><call><name><name pos:line="123" pos:column="108">XincoCoreDataServer</name><op:operator pos:line="123" pos:column="127">.</op:operator><name pos:line="123" pos:column="128">getXincoCoreDataPath</name></name><argument_list pos:line="123" pos:column="148">(<argument><expr><name><name pos:line="123" pos:column="149">dbm</name><op:operator pos:line="123" pos:column="152">.</op:operator><name pos:line="123" pos:column="153">config</name><op:operator pos:line="123" pos:column="159">.</op:operator><name pos:line="123" pos:column="160">FileRepositoryPath</name></name></expr></argument>, <argument><expr><call><name><name pos:line="123" pos:column="180">d</name><op:operator pos:line="123" pos:column="181">.</op:operator><name pos:line="123" pos:column="182">getId</name></name><argument_list pos:line="123" pos:column="187">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="123" pos:column="191">""</lit:literal> <op:operator pos:line="123" pos:column="194">+</op:operator> <call><name><name pos:line="123" pos:column="196">d</name><op:operator pos:line="123" pos:column="197">.</op:operator><name pos:line="123" pos:column="198">getId</name></name><argument_list pos:line="123" pos:column="203">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<if pos:line="124" pos:column="57">if <condition pos:line="124" pos:column="60">(<expr><name pos:line="124" pos:column="61">ContentString</name> <op:operator pos:line="124" pos:column="75">!=</op:operator> <lit:literal type="null" pos:line="124" pos:column="78">null</lit:literal></expr>)</condition><then pos:line="124" pos:column="83"> <block pos:line="124" pos:column="84">{
								<expr_stmt><expr><call><name><name pos:line="125" pos:column="65">doc</name><op:operator pos:line="125" pos:column="68">.</op:operator><name pos:line="125" pos:column="69">add</name></name><argument_list pos:line="125" pos:column="72">(<argument><expr><call><name><name pos:line="125" pos:column="73">Field</name><op:operator pos:line="125" pos:column="78">.</op:operator><name pos:line="125" pos:column="79">Text</name></name><argument_list pos:line="125" pos:column="83">(<argument><expr><lit:literal type="string" pos:line="125" pos:column="84">"file"</lit:literal></expr></argument>, <argument><expr><name pos:line="125" pos:column="92">ContentString</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							}</block></then></if>
						}</block></else></if>
					}</block> <catch pos:line="128" pos:column="43">catch <parameter_list pos:line="128" pos:column="49">(<param><decl><type><name pos:line="128" pos:column="50">Exception</name></type> <name pos:line="128" pos:column="60">ie</name></decl></param>)</parameter_list> <block pos:line="128" pos:column="64">{
					}</block></catch></try>
				}</block></then></if></else></if>
				
			}</block></then></if>
		}</block></then></if>
		
		<comment type="line" pos:line="135" pos:column="17">//add attributes</comment>
		<for pos:line="136" pos:column="17">for (<init><expr><name pos:line="136" pos:column="22">i</name><op:operator pos:line="136" pos:column="23">=</op:operator><lit:literal type="number" pos:line="136" pos:column="24">0</lit:literal></expr>;</init><condition><expr><name pos:line="136" pos:column="26">i</name><op:operator pos:line="136" pos:column="27">&lt;</op:operator><call><name><name pos:line="136" pos:column="28">d</name><op:operator pos:line="136" pos:column="29">.</op:operator><name pos:line="136" pos:column="30">getXinco_add_attributes</name></name><argument_list pos:line="136" pos:column="53">()</argument_list></call><op:operator pos:line="136" pos:column="55">.</op:operator><call><name pos:line="136" pos:column="56">size</name><argument_list pos:line="136" pos:column="60">()</argument_list></call></expr>;</condition><incr><expr><name pos:line="136" pos:column="63">i</name><op:operator pos:line="136" pos:column="64">++</op:operator></expr></incr>) <block pos:line="136" pos:column="68">{
			<if pos:line="137" pos:column="25">if <condition pos:line="137" pos:column="28">(<expr><op:operator pos:line="137" pos:column="29">(</op:operator><op:operator pos:line="137" pos:column="30">(</op:operator><name pos:line="137" pos:column="31">XincoCoreDataTypeAttribute</name><op:operator pos:line="137" pos:column="57">)</op:operator><call><name><name pos:line="137" pos:column="58">d</name><op:operator pos:line="137" pos:column="59">.</op:operator><name pos:line="137" pos:column="60">getXinco_core_data_type</name></name><argument_list pos:line="137" pos:column="83">()</argument_list></call><op:operator pos:line="137" pos:column="85">.</op:operator><call><name pos:line="137" pos:column="86">getXinco_core_data_type_attributes</name><argument_list pos:line="137" pos:column="120">()</argument_list></call><op:operator pos:line="137" pos:column="122">.</op:operator><call><name pos:line="137" pos:column="123">elementAt</name><argument_list pos:line="137" pos:column="132">(<argument><expr><name pos:line="137" pos:column="133">i</name></expr></argument>)</argument_list></call><op:operator pos:line="137" pos:column="135">)</op:operator><op:operator pos:line="137" pos:column="136">.</op:operator><call><name pos:line="137" pos:column="137">getData_type</name><argument_list pos:line="137" pos:column="149">()</argument_list></call><op:operator pos:line="137" pos:column="151">.</op:operator><call><name pos:line="137" pos:column="152">toLowerCase</name><argument_list pos:line="137" pos:column="163">()</argument_list></call><op:operator pos:line="137" pos:column="165">.</op:operator><call><name pos:line="137" pos:column="166">compareTo</name><argument_list pos:line="137" pos:column="175">(<argument><expr><lit:literal type="string" pos:line="137" pos:column="176">"int"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="137" pos:column="183">==</op:operator> <lit:literal type="number" pos:line="137" pos:column="186">0</lit:literal></expr>)</condition><then pos:line="137" pos:column="188"> <block pos:line="137" pos:column="189">{
				<expr_stmt><expr><call><name><name pos:line="138" pos:column="33">doc</name><op:operator pos:line="138" pos:column="36">.</op:operator><name pos:line="138" pos:column="37">add</name></name><argument_list pos:line="138" pos:column="40">(<argument><expr><call><name><name pos:line="138" pos:column="41">Field</name><op:operator pos:line="138" pos:column="46">.</op:operator><name pos:line="138" pos:column="47">Text</name></name><argument_list pos:line="138" pos:column="51">(<argument><expr><op:operator pos:line="138" pos:column="52">(</op:operator><op:operator pos:line="138" pos:column="53">(</op:operator><name pos:line="138" pos:column="54">XincoCoreDataTypeAttribute</name><op:operator pos:line="138" pos:column="80">)</op:operator><call><name><name pos:line="138" pos:column="81">d</name><op:operator pos:line="138" pos:column="82">.</op:operator><name pos:line="138" pos:column="83">getXinco_core_data_type</name></name><argument_list pos:line="138" pos:column="106">()</argument_list></call><op:operator pos:line="138" pos:column="108">.</op:operator><call><name pos:line="138" pos:column="109">getXinco_core_data_type_attributes</name><argument_list pos:line="138" pos:column="143">()</argument_list></call><op:operator pos:line="138" pos:column="145">.</op:operator><call><name pos:line="138" pos:column="146">elementAt</name><argument_list pos:line="138" pos:column="155">(<argument><expr><name pos:line="138" pos:column="156">i</name></expr></argument>)</argument_list></call><op:operator pos:line="138" pos:column="158">)</op:operator><op:operator pos:line="138" pos:column="159">.</op:operator><call><name pos:line="138" pos:column="160">getDesignation</name><argument_list pos:line="138" pos:column="174">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="138" pos:column="178">""</lit:literal> <op:operator pos:line="138" pos:column="181">+</op:operator> <op:operator pos:line="138" pos:column="183">(</op:operator><op:operator pos:line="138" pos:column="184">(</op:operator><name pos:line="138" pos:column="185">XincoAddAttribute</name><op:operator pos:line="138" pos:column="202">)</op:operator><call><name><name pos:line="138" pos:column="203">d</name><op:operator pos:line="138" pos:column="204">.</op:operator><name pos:line="138" pos:column="205">getXinco_add_attributes</name></name><argument_list pos:line="138" pos:column="228">()</argument_list></call><op:operator pos:line="138" pos:column="230">.</op:operator><call><name pos:line="138" pos:column="231">elementAt</name><argument_list pos:line="138" pos:column="240">(<argument><expr><name pos:line="138" pos:column="241">i</name></expr></argument>)</argument_list></call><op:operator pos:line="138" pos:column="243">)</op:operator><op:operator pos:line="138" pos:column="244">.</op:operator><call><name pos:line="138" pos:column="245">getAttrib_int</name><argument_list pos:line="138" pos:column="258">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<if pos:line="140" pos:column="25">if <condition pos:line="140" pos:column="28">(<expr><op:operator pos:line="140" pos:column="29">(</op:operator><op:operator pos:line="140" pos:column="30">(</op:operator><name pos:line="140" pos:column="31">XincoCoreDataTypeAttribute</name><op:operator pos:line="140" pos:column="57">)</op:operator><call><name><name pos:line="140" pos:column="58">d</name><op:operator pos:line="140" pos:column="59">.</op:operator><name pos:line="140" pos:column="60">getXinco_core_data_type</name></name><argument_list pos:line="140" pos:column="83">()</argument_list></call><op:operator pos:line="140" pos:column="85">.</op:operator><call><name pos:line="140" pos:column="86">getXinco_core_data_type_attributes</name><argument_list pos:line="140" pos:column="120">()</argument_list></call><op:operator pos:line="140" pos:column="122">.</op:operator><call><name pos:line="140" pos:column="123">elementAt</name><argument_list pos:line="140" pos:column="132">(<argument><expr><name pos:line="140" pos:column="133">i</name></expr></argument>)</argument_list></call><op:operator pos:line="140" pos:column="135">)</op:operator><op:operator pos:line="140" pos:column="136">.</op:operator><call><name pos:line="140" pos:column="137">getData_type</name><argument_list pos:line="140" pos:column="149">()</argument_list></call><op:operator pos:line="140" pos:column="151">.</op:operator><call><name pos:line="140" pos:column="152">toLowerCase</name><argument_list pos:line="140" pos:column="163">()</argument_list></call><op:operator pos:line="140" pos:column="165">.</op:operator><call><name pos:line="140" pos:column="166">compareTo</name><argument_list pos:line="140" pos:column="175">(<argument><expr><lit:literal type="string" pos:line="140" pos:column="176">"unsignedint"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="140" pos:column="191">==</op:operator> <lit:literal type="number" pos:line="140" pos:column="194">0</lit:literal></expr>)</condition><then pos:line="140" pos:column="196"> <block pos:line="140" pos:column="197">{
				<expr_stmt><expr><call><name><name pos:line="141" pos:column="33">doc</name><op:operator pos:line="141" pos:column="36">.</op:operator><name pos:line="141" pos:column="37">add</name></name><argument_list pos:line="141" pos:column="40">(<argument><expr><call><name><name pos:line="141" pos:column="41">Field</name><op:operator pos:line="141" pos:column="46">.</op:operator><name pos:line="141" pos:column="47">Text</name></name><argument_list pos:line="141" pos:column="51">(<argument><expr><op:operator pos:line="141" pos:column="52">(</op:operator><op:operator pos:line="141" pos:column="53">(</op:operator><name pos:line="141" pos:column="54">XincoCoreDataTypeAttribute</name><op:operator pos:line="141" pos:column="80">)</op:operator><call><name><name pos:line="141" pos:column="81">d</name><op:operator pos:line="141" pos:column="82">.</op:operator><name pos:line="141" pos:column="83">getXinco_core_data_type</name></name><argument_list pos:line="141" pos:column="106">()</argument_list></call><op:operator pos:line="141" pos:column="108">.</op:operator><call><name pos:line="141" pos:column="109">getXinco_core_data_type_attributes</name><argument_list pos:line="141" pos:column="143">()</argument_list></call><op:operator pos:line="141" pos:column="145">.</op:operator><call><name pos:line="141" pos:column="146">elementAt</name><argument_list pos:line="141" pos:column="155">(<argument><expr><name pos:line="141" pos:column="156">i</name></expr></argument>)</argument_list></call><op:operator pos:line="141" pos:column="158">)</op:operator><op:operator pos:line="141" pos:column="159">.</op:operator><call><name pos:line="141" pos:column="160">getDesignation</name><argument_list pos:line="141" pos:column="174">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="141" pos:column="178">""</lit:literal> <op:operator pos:line="141" pos:column="181">+</op:operator> <op:operator pos:line="141" pos:column="183">(</op:operator><op:operator pos:line="141" pos:column="184">(</op:operator><name pos:line="141" pos:column="185">XincoAddAttribute</name><op:operator pos:line="141" pos:column="202">)</op:operator><call><name><name pos:line="141" pos:column="203">d</name><op:operator pos:line="141" pos:column="204">.</op:operator><name pos:line="141" pos:column="205">getXinco_add_attributes</name></name><argument_list pos:line="141" pos:column="228">()</argument_list></call><op:operator pos:line="141" pos:column="230">.</op:operator><call><name pos:line="141" pos:column="231">elementAt</name><argument_list pos:line="141" pos:column="240">(<argument><expr><name pos:line="141" pos:column="241">i</name></expr></argument>)</argument_list></call><op:operator pos:line="141" pos:column="243">)</op:operator><op:operator pos:line="141" pos:column="244">.</op:operator><call><name pos:line="141" pos:column="245">getAttrib_unsignedint</name><argument_list pos:line="141" pos:column="266">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<if pos:line="143" pos:column="25">if <condition pos:line="143" pos:column="28">(<expr><op:operator pos:line="143" pos:column="29">(</op:operator><op:operator pos:line="143" pos:column="30">(</op:operator><name pos:line="143" pos:column="31">XincoCoreDataTypeAttribute</name><op:operator pos:line="143" pos:column="57">)</op:operator><call><name><name pos:line="143" pos:column="58">d</name><op:operator pos:line="143" pos:column="59">.</op:operator><name pos:line="143" pos:column="60">getXinco_core_data_type</name></name><argument_list pos:line="143" pos:column="83">()</argument_list></call><op:operator pos:line="143" pos:column="85">.</op:operator><call><name pos:line="143" pos:column="86">getXinco_core_data_type_attributes</name><argument_list pos:line="143" pos:column="120">()</argument_list></call><op:operator pos:line="143" pos:column="122">.</op:operator><call><name pos:line="143" pos:column="123">elementAt</name><argument_list pos:line="143" pos:column="132">(<argument><expr><name pos:line="143" pos:column="133">i</name></expr></argument>)</argument_list></call><op:operator pos:line="143" pos:column="135">)</op:operator><op:operator pos:line="143" pos:column="136">.</op:operator><call><name pos:line="143" pos:column="137">getData_type</name><argument_list pos:line="143" pos:column="149">()</argument_list></call><op:operator pos:line="143" pos:column="151">.</op:operator><call><name pos:line="143" pos:column="152">toLowerCase</name><argument_list pos:line="143" pos:column="163">()</argument_list></call><op:operator pos:line="143" pos:column="165">.</op:operator><call><name pos:line="143" pos:column="166">compareTo</name><argument_list pos:line="143" pos:column="175">(<argument><expr><lit:literal type="string" pos:line="143" pos:column="176">"double"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="143" pos:column="186">==</op:operator> <lit:literal type="number" pos:line="143" pos:column="189">0</lit:literal></expr>)</condition><then pos:line="143" pos:column="191"> <block pos:line="143" pos:column="192">{
				<expr_stmt><expr><call><name><name pos:line="144" pos:column="33">doc</name><op:operator pos:line="144" pos:column="36">.</op:operator><name pos:line="144" pos:column="37">add</name></name><argument_list pos:line="144" pos:column="40">(<argument><expr><call><name><name pos:line="144" pos:column="41">Field</name><op:operator pos:line="144" pos:column="46">.</op:operator><name pos:line="144" pos:column="47">Text</name></name><argument_list pos:line="144" pos:column="51">(<argument><expr><op:operator pos:line="144" pos:column="52">(</op:operator><op:operator pos:line="144" pos:column="53">(</op:operator><name pos:line="144" pos:column="54">XincoCoreDataTypeAttribute</name><op:operator pos:line="144" pos:column="80">)</op:operator><call><name><name pos:line="144" pos:column="81">d</name><op:operator pos:line="144" pos:column="82">.</op:operator><name pos:line="144" pos:column="83">getXinco_core_data_type</name></name><argument_list pos:line="144" pos:column="106">()</argument_list></call><op:operator pos:line="144" pos:column="108">.</op:operator><call><name pos:line="144" pos:column="109">getXinco_core_data_type_attributes</name><argument_list pos:line="144" pos:column="143">()</argument_list></call><op:operator pos:line="144" pos:column="145">.</op:operator><call><name pos:line="144" pos:column="146">elementAt</name><argument_list pos:line="144" pos:column="155">(<argument><expr><name pos:line="144" pos:column="156">i</name></expr></argument>)</argument_list></call><op:operator pos:line="144" pos:column="158">)</op:operator><op:operator pos:line="144" pos:column="159">.</op:operator><call><name pos:line="144" pos:column="160">getDesignation</name><argument_list pos:line="144" pos:column="174">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="144" pos:column="178">""</lit:literal> <op:operator pos:line="144" pos:column="181">+</op:operator> <op:operator pos:line="144" pos:column="183">(</op:operator><op:operator pos:line="144" pos:column="184">(</op:operator><name pos:line="144" pos:column="185">XincoAddAttribute</name><op:operator pos:line="144" pos:column="202">)</op:operator><call><name><name pos:line="144" pos:column="203">d</name><op:operator pos:line="144" pos:column="204">.</op:operator><name pos:line="144" pos:column="205">getXinco_add_attributes</name></name><argument_list pos:line="144" pos:column="228">()</argument_list></call><op:operator pos:line="144" pos:column="230">.</op:operator><call><name pos:line="144" pos:column="231">elementAt</name><argument_list pos:line="144" pos:column="240">(<argument><expr><name pos:line="144" pos:column="241">i</name></expr></argument>)</argument_list></call><op:operator pos:line="144" pos:column="243">)</op:operator><op:operator pos:line="144" pos:column="244">.</op:operator><call><name pos:line="144" pos:column="245">getAttrib_double</name><argument_list pos:line="144" pos:column="261">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<if pos:line="146" pos:column="25">if <condition pos:line="146" pos:column="28">(<expr><op:operator pos:line="146" pos:column="29">(</op:operator><op:operator pos:line="146" pos:column="30">(</op:operator><name pos:line="146" pos:column="31">XincoCoreDataTypeAttribute</name><op:operator pos:line="146" pos:column="57">)</op:operator><call><name><name pos:line="146" pos:column="58">d</name><op:operator pos:line="146" pos:column="59">.</op:operator><name pos:line="146" pos:column="60">getXinco_core_data_type</name></name><argument_list pos:line="146" pos:column="83">()</argument_list></call><op:operator pos:line="146" pos:column="85">.</op:operator><call><name pos:line="146" pos:column="86">getXinco_core_data_type_attributes</name><argument_list pos:line="146" pos:column="120">()</argument_list></call><op:operator pos:line="146" pos:column="122">.</op:operator><call><name pos:line="146" pos:column="123">elementAt</name><argument_list pos:line="146" pos:column="132">(<argument><expr><name pos:line="146" pos:column="133">i</name></expr></argument>)</argument_list></call><op:operator pos:line="146" pos:column="135">)</op:operator><op:operator pos:line="146" pos:column="136">.</op:operator><call><name pos:line="146" pos:column="137">getData_type</name><argument_list pos:line="146" pos:column="149">()</argument_list></call><op:operator pos:line="146" pos:column="151">.</op:operator><call><name pos:line="146" pos:column="152">toLowerCase</name><argument_list pos:line="146" pos:column="163">()</argument_list></call><op:operator pos:line="146" pos:column="165">.</op:operator><call><name pos:line="146" pos:column="166">compareTo</name><argument_list pos:line="146" pos:column="175">(<argument><expr><lit:literal type="string" pos:line="146" pos:column="176">"varchar"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="146" pos:column="187">==</op:operator> <lit:literal type="number" pos:line="146" pos:column="190">0</lit:literal></expr>)</condition><then pos:line="146" pos:column="192"> <block pos:line="146" pos:column="193">{
				<expr_stmt><expr><call><name><name pos:line="147" pos:column="33">doc</name><op:operator pos:line="147" pos:column="36">.</op:operator><name pos:line="147" pos:column="37">add</name></name><argument_list pos:line="147" pos:column="40">(<argument><expr><call><name><name pos:line="147" pos:column="41">Field</name><op:operator pos:line="147" pos:column="46">.</op:operator><name pos:line="147" pos:column="47">Text</name></name><argument_list pos:line="147" pos:column="51">(<argument><expr><op:operator pos:line="147" pos:column="52">(</op:operator><op:operator pos:line="147" pos:column="53">(</op:operator><name pos:line="147" pos:column="54">XincoCoreDataTypeAttribute</name><op:operator pos:line="147" pos:column="80">)</op:operator><call><name><name pos:line="147" pos:column="81">d</name><op:operator pos:line="147" pos:column="82">.</op:operator><name pos:line="147" pos:column="83">getXinco_core_data_type</name></name><argument_list pos:line="147" pos:column="106">()</argument_list></call><op:operator pos:line="147" pos:column="108">.</op:operator><call><name pos:line="147" pos:column="109">getXinco_core_data_type_attributes</name><argument_list pos:line="147" pos:column="143">()</argument_list></call><op:operator pos:line="147" pos:column="145">.</op:operator><call><name pos:line="147" pos:column="146">elementAt</name><argument_list pos:line="147" pos:column="155">(<argument><expr><name pos:line="147" pos:column="156">i</name></expr></argument>)</argument_list></call><op:operator pos:line="147" pos:column="158">)</op:operator><op:operator pos:line="147" pos:column="159">.</op:operator><call><name pos:line="147" pos:column="160">getDesignation</name><argument_list pos:line="147" pos:column="174">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="147" pos:column="178">(</op:operator><op:operator pos:line="147" pos:column="179">(</op:operator><name pos:line="147" pos:column="180">XincoAddAttribute</name><op:operator pos:line="147" pos:column="197">)</op:operator><call><name><name pos:line="147" pos:column="198">d</name><op:operator pos:line="147" pos:column="199">.</op:operator><name pos:line="147" pos:column="200">getXinco_add_attributes</name></name><argument_list pos:line="147" pos:column="223">()</argument_list></call><op:operator pos:line="147" pos:column="225">.</op:operator><call><name pos:line="147" pos:column="226">elementAt</name><argument_list pos:line="147" pos:column="235">(<argument><expr><name pos:line="147" pos:column="236">i</name></expr></argument>)</argument_list></call><op:operator pos:line="147" pos:column="238">)</op:operator><op:operator pos:line="147" pos:column="239">.</op:operator><call><name pos:line="147" pos:column="240">getAttrib_varchar</name><argument_list pos:line="147" pos:column="257">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<if pos:line="149" pos:column="25">if <condition pos:line="149" pos:column="28">(<expr><op:operator pos:line="149" pos:column="29">(</op:operator><op:operator pos:line="149" pos:column="30">(</op:operator><name pos:line="149" pos:column="31">XincoCoreDataTypeAttribute</name><op:operator pos:line="149" pos:column="57">)</op:operator><call><name><name pos:line="149" pos:column="58">d</name><op:operator pos:line="149" pos:column="59">.</op:operator><name pos:line="149" pos:column="60">getXinco_core_data_type</name></name><argument_list pos:line="149" pos:column="83">()</argument_list></call><op:operator pos:line="149" pos:column="85">.</op:operator><call><name pos:line="149" pos:column="86">getXinco_core_data_type_attributes</name><argument_list pos:line="149" pos:column="120">()</argument_list></call><op:operator pos:line="149" pos:column="122">.</op:operator><call><name pos:line="149" pos:column="123">elementAt</name><argument_list pos:line="149" pos:column="132">(<argument><expr><name pos:line="149" pos:column="133">i</name></expr></argument>)</argument_list></call><op:operator pos:line="149" pos:column="135">)</op:operator><op:operator pos:line="149" pos:column="136">.</op:operator><call><name pos:line="149" pos:column="137">getData_type</name><argument_list pos:line="149" pos:column="149">()</argument_list></call><op:operator pos:line="149" pos:column="151">.</op:operator><call><name pos:line="149" pos:column="152">toLowerCase</name><argument_list pos:line="149" pos:column="163">()</argument_list></call><op:operator pos:line="149" pos:column="165">.</op:operator><call><name pos:line="149" pos:column="166">compareTo</name><argument_list pos:line="149" pos:column="175">(<argument><expr><lit:literal type="string" pos:line="149" pos:column="176">"text"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="149" pos:column="184">==</op:operator> <lit:literal type="number" pos:line="149" pos:column="187">0</lit:literal></expr>)</condition><then pos:line="149" pos:column="189"> <block pos:line="149" pos:column="190">{
				<expr_stmt><expr><call><name><name pos:line="150" pos:column="33">doc</name><op:operator pos:line="150" pos:column="36">.</op:operator><name pos:line="150" pos:column="37">add</name></name><argument_list pos:line="150" pos:column="40">(<argument><expr><call><name><name pos:line="150" pos:column="41">Field</name><op:operator pos:line="150" pos:column="46">.</op:operator><name pos:line="150" pos:column="47">Text</name></name><argument_list pos:line="150" pos:column="51">(<argument><expr><op:operator pos:line="150" pos:column="52">(</op:operator><op:operator pos:line="150" pos:column="53">(</op:operator><name pos:line="150" pos:column="54">XincoCoreDataTypeAttribute</name><op:operator pos:line="150" pos:column="80">)</op:operator><call><name><name pos:line="150" pos:column="81">d</name><op:operator pos:line="150" pos:column="82">.</op:operator><name pos:line="150" pos:column="83">getXinco_core_data_type</name></name><argument_list pos:line="150" pos:column="106">()</argument_list></call><op:operator pos:line="150" pos:column="108">.</op:operator><call><name pos:line="150" pos:column="109">getXinco_core_data_type_attributes</name><argument_list pos:line="150" pos:column="143">()</argument_list></call><op:operator pos:line="150" pos:column="145">.</op:operator><call><name pos:line="150" pos:column="146">elementAt</name><argument_list pos:line="150" pos:column="155">(<argument><expr><name pos:line="150" pos:column="156">i</name></expr></argument>)</argument_list></call><op:operator pos:line="150" pos:column="158">)</op:operator><op:operator pos:line="150" pos:column="159">.</op:operator><call><name pos:line="150" pos:column="160">getDesignation</name><argument_list pos:line="150" pos:column="174">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="150" pos:column="178">(</op:operator><op:operator pos:line="150" pos:column="179">(</op:operator><name pos:line="150" pos:column="180">XincoAddAttribute</name><op:operator pos:line="150" pos:column="197">)</op:operator><call><name><name pos:line="150" pos:column="198">d</name><op:operator pos:line="150" pos:column="199">.</op:operator><name pos:line="150" pos:column="200">getXinco_add_attributes</name></name><argument_list pos:line="150" pos:column="223">()</argument_list></call><op:operator pos:line="150" pos:column="225">.</op:operator><call><name pos:line="150" pos:column="226">elementAt</name><argument_list pos:line="150" pos:column="235">(<argument><expr><name pos:line="150" pos:column="236">i</name></expr></argument>)</argument_list></call><op:operator pos:line="150" pos:column="238">)</op:operator><op:operator pos:line="150" pos:column="239">.</op:operator><call><name pos:line="150" pos:column="240">getAttrib_text</name><argument_list pos:line="150" pos:column="254">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<if pos:line="152" pos:column="25">if <condition pos:line="152" pos:column="28">(<expr><op:operator pos:line="152" pos:column="29">(</op:operator><op:operator pos:line="152" pos:column="30">(</op:operator><name pos:line="152" pos:column="31">XincoCoreDataTypeAttribute</name><op:operator pos:line="152" pos:column="57">)</op:operator><call><name><name pos:line="152" pos:column="58">d</name><op:operator pos:line="152" pos:column="59">.</op:operator><name pos:line="152" pos:column="60">getXinco_core_data_type</name></name><argument_list pos:line="152" pos:column="83">()</argument_list></call><op:operator pos:line="152" pos:column="85">.</op:operator><call><name pos:line="152" pos:column="86">getXinco_core_data_type_attributes</name><argument_list pos:line="152" pos:column="120">()</argument_list></call><op:operator pos:line="152" pos:column="122">.</op:operator><call><name pos:line="152" pos:column="123">elementAt</name><argument_list pos:line="152" pos:column="132">(<argument><expr><name pos:line="152" pos:column="133">i</name></expr></argument>)</argument_list></call><op:operator pos:line="152" pos:column="135">)</op:operator><op:operator pos:line="152" pos:column="136">.</op:operator><call><name pos:line="152" pos:column="137">getData_type</name><argument_list pos:line="152" pos:column="149">()</argument_list></call><op:operator pos:line="152" pos:column="151">.</op:operator><call><name pos:line="152" pos:column="152">toLowerCase</name><argument_list pos:line="152" pos:column="163">()</argument_list></call><op:operator pos:line="152" pos:column="165">.</op:operator><call><name pos:line="152" pos:column="166">compareTo</name><argument_list pos:line="152" pos:column="175">(<argument><expr><lit:literal type="string" pos:line="152" pos:column="176">"datetime"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="152" pos:column="188">==</op:operator> <lit:literal type="number" pos:line="152" pos:column="191">0</lit:literal></expr>)</condition><then pos:line="152" pos:column="193"> <block pos:line="152" pos:column="194">{
				<expr_stmt><expr><call><name><name pos:line="153" pos:column="33">doc</name><op:operator pos:line="153" pos:column="36">.</op:operator><name pos:line="153" pos:column="37">add</name></name><argument_list pos:line="153" pos:column="40">(<argument><expr><call><name><name pos:line="153" pos:column="41">Field</name><op:operator pos:line="153" pos:column="46">.</op:operator><name pos:line="153" pos:column="47">Text</name></name><argument_list pos:line="153" pos:column="51">(<argument><expr><op:operator pos:line="153" pos:column="52">(</op:operator><op:operator pos:line="153" pos:column="53">(</op:operator><name pos:line="153" pos:column="54">XincoCoreDataTypeAttribute</name><op:operator pos:line="153" pos:column="80">)</op:operator><call><name><name pos:line="153" pos:column="81">d</name><op:operator pos:line="153" pos:column="82">.</op:operator><name pos:line="153" pos:column="83">getXinco_core_data_type</name></name><argument_list pos:line="153" pos:column="106">()</argument_list></call><op:operator pos:line="153" pos:column="108">.</op:operator><call><name pos:line="153" pos:column="109">getXinco_core_data_type_attributes</name><argument_list pos:line="153" pos:column="143">()</argument_list></call><op:operator pos:line="153" pos:column="145">.</op:operator><call><name pos:line="153" pos:column="146">elementAt</name><argument_list pos:line="153" pos:column="155">(<argument><expr><name pos:line="153" pos:column="156">i</name></expr></argument>)</argument_list></call><op:operator pos:line="153" pos:column="158">)</op:operator><op:operator pos:line="153" pos:column="159">.</op:operator><call><name pos:line="153" pos:column="160">getDesignation</name><argument_list pos:line="153" pos:column="174">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="153" pos:column="178">""</lit:literal> <op:operator pos:line="153" pos:column="181">+</op:operator> <op:operator pos:line="153" pos:column="183">(</op:operator><op:operator pos:line="153" pos:column="184">(</op:operator><name pos:line="153" pos:column="185">XincoAddAttribute</name><op:operator pos:line="153" pos:column="202">)</op:operator><call><name><name pos:line="153" pos:column="203">d</name><op:operator pos:line="153" pos:column="204">.</op:operator><name pos:line="153" pos:column="205">getXinco_add_attributes</name></name><argument_list pos:line="153" pos:column="228">()</argument_list></call><op:operator pos:line="153" pos:column="230">.</op:operator><call><name pos:line="153" pos:column="231">elementAt</name><argument_list pos:line="153" pos:column="240">(<argument><expr><name pos:line="153" pos:column="241">i</name></expr></argument>)</argument_list></call><op:operator pos:line="153" pos:column="243">)</op:operator><op:operator pos:line="153" pos:column="244">.</op:operator><call><name pos:line="153" pos:column="245">getAttrib_datetime</name><argument_list pos:line="153" pos:column="263">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></for>
		
		<return pos:line="157" pos:column="17">return <expr><name pos:line="157" pos:column="24">doc</name></expr>;</return>
	}</block></function>

	<constructor><specifier pos:line="160" pos:column="9">private</specifier> <name pos:line="160" pos:column="17">XincoDocument</name><parameter_list pos:line="160" pos:column="30">()</parameter_list> <block pos:line="160" pos:column="33">{}</block></constructor>
}</block></class>
</unit>
