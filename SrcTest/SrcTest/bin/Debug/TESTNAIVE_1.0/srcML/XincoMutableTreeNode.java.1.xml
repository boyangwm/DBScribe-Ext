<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\xinco\src\com\bluecubs\xinco\client\object\XincoMutableTreeNode.java" pos:tabs="8"><comment type="block" format="javadoc" pos:line="1" pos:column="1">/**
 *Copyright 2004 blueCubs.com
 *
 *Licensed under the Apache License, Version 2.0 (the "License");
 *you may not use this file except in compliance with the License.
 *You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 *Unless required by applicable law or agreed to in writing, software
 *distributed under the License is distributed on an "AS IS" BASIS,
 *WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *See the License for the specific language governing permissions and
 *limitations under the License.
 *
 *************************************************************
 * This project supports the blueCubs vision of giving back
 * to the community in exchange for free software!
 * More information on: http://www.bluecubs.org
 *************************************************************
 *
 * Name:            XincoMutableTreeNode
 *
 * Description:     tree node on client side
 *
 * Original Author: Alexander Manes
 * Date:            2004
 *
 * Modifications:
 *
 * Who?             When?             What?
 * -                -                 -
 *
 *************************************************************
 */</comment>
<package pos:line="36" pos:column="1">package <name><name pos:line="36" pos:column="9">com</name><op:operator pos:line="36" pos:column="12">.</op:operator><name pos:line="36" pos:column="13">bluecubs</name><op:operator pos:line="36" pos:column="21">.</op:operator><name pos:line="36" pos:column="22">xinco</name><op:operator pos:line="36" pos:column="27">.</op:operator><name pos:line="36" pos:column="28">client</name><op:operator pos:line="36" pos:column="34">.</op:operator><name pos:line="36" pos:column="35">object</name></name>;</package>

<import pos:line="38" pos:column="1">import <name><name pos:line="38" pos:column="8">com</name><op:operator pos:line="38" pos:column="11">.</op:operator><name pos:line="38" pos:column="12">bluecubs</name><op:operator pos:line="38" pos:column="20">.</op:operator><name pos:line="38" pos:column="21">xinco</name><op:operator pos:line="38" pos:column="26">.</op:operator><name pos:line="38" pos:column="27">client</name><op:operator pos:line="38" pos:column="33">.</op:operator><name pos:line="38" pos:column="34">XincoExplorer</name></name>;</import>
<import pos:line="39" pos:column="1">import <name><name pos:line="39" pos:column="8">com</name><op:operator pos:line="39" pos:column="11">.</op:operator><name pos:line="39" pos:column="12">bluecubs</name><op:operator pos:line="39" pos:column="20">.</op:operator><name pos:line="39" pos:column="21">xinco</name><op:operator pos:line="39" pos:column="26">.</op:operator><name pos:line="39" pos:column="27">core</name><op:operator pos:line="39" pos:column="31">.</op:operator><name pos:line="39" pos:column="32">XincoCoreData</name></name>;</import>
<import pos:line="40" pos:column="1">import <name><name pos:line="40" pos:column="8">com</name><op:operator pos:line="40" pos:column="11">.</op:operator><name pos:line="40" pos:column="12">bluecubs</name><op:operator pos:line="40" pos:column="20">.</op:operator><name pos:line="40" pos:column="21">xinco</name><op:operator pos:line="40" pos:column="26">.</op:operator><name pos:line="40" pos:column="27">core</name><op:operator pos:line="40" pos:column="31">.</op:operator><name pos:line="40" pos:column="32">XincoCoreNode</name></name>;</import>
<import pos:line="41" pos:column="1">import <name><name pos:line="41" pos:column="8">javax</name><op:operator pos:line="41" pos:column="13">.</op:operator><name pos:line="41" pos:column="14">swing</name><op:operator pos:line="41" pos:column="19">.</op:operator><name pos:line="41" pos:column="20">tree</name><op:operator pos:line="41" pos:column="24">.</op:operator><name pos:line="41" pos:column="25">DefaultMutableTreeNode</name></name>;</import>

<comment type="block" format="javadoc" pos:line="43" pos:column="1">/**
 *
 * @author Alexander Manes
 */</comment>
<class><specifier pos:line="47" pos:column="1">public</specifier> class <name pos:line="47" pos:column="14">XincoMutableTreeNode</name> <super><extends pos:line="47" pos:column="35">extends <name pos:line="47" pos:column="43">DefaultMutableTreeNode</name></extends></super> <block pos:line="47" pos:column="66">{

    <decl_stmt><decl><type><specifier pos:line="49" pos:column="5">private</specifier> <name pos:line="49" pos:column="13">XincoExplorer</name></type> <name pos:line="49" pos:column="27">explorer</name></decl>;</decl_stmt>

    <comment type="block" format="javadoc" pos:line="51" pos:column="5">/**
     * Constructor
     * @param o
     * @param e
     */</comment>
    <constructor><specifier pos:line="56" pos:column="5">public</specifier> <name pos:line="56" pos:column="12">XincoMutableTreeNode</name><parameter_list pos:line="56" pos:column="32">(<param><decl><type><name pos:line="56" pos:column="33">Object</name></type> <name pos:line="56" pos:column="40">o</name></decl></param>, <param><decl><type><name pos:line="56" pos:column="43">XincoExplorer</name></type> <name pos:line="56" pos:column="57">e</name></decl></param>)</parameter_list> <block pos:line="56" pos:column="60">{
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">super</name><argument_list pos:line="57" pos:column="14">(<argument><expr><name pos:line="57" pos:column="15">o</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="58" pos:column="9">explorer</name> <op:operator pos:line="58" pos:column="18">=</op:operator> <name pos:line="58" pos:column="20">e</name></expr>;</expr_stmt>
    }</block></constructor>

    <function><type><annotation pos:line="61" pos:column="5">@<name pos:line="61" pos:column="6">Override</name></annotation>
    <specifier pos:line="62" pos:column="5">public</specifier> <name pos:line="62" pos:column="12">String</name></type> <name pos:line="62" pos:column="19">toString</name><parameter_list pos:line="62" pos:column="27">()</parameter_list> <block pos:line="62" pos:column="30">{
        <decl_stmt><decl><type><name pos:line="63" pos:column="9">String</name></type> <name pos:line="63" pos:column="16">s</name> <init pos:line="63" pos:column="18">= <expr><lit:literal type="null" pos:line="63" pos:column="20">null</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="64" pos:column="9">String</name></type> <name pos:line="64" pos:column="16">status</name> <init pos:line="64" pos:column="23">= <expr><lit:literal type="null" pos:line="64" pos:column="25">null</lit:literal></expr></init></decl>;</decl_stmt>
        <if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><call><name pos:line="65" pos:column="13">getUserObject</name><argument_list pos:line="65" pos:column="26">()</argument_list></call> <op:operator pos:line="65" pos:column="29">!=</op:operator> <lit:literal type="null" pos:line="65" pos:column="32">null</lit:literal></expr>)</condition><then pos:line="65" pos:column="37"> <block pos:line="65" pos:column="38">{
            <if pos:line="66" pos:column="13">if <condition pos:line="66" pos:column="16">(<expr><call><name pos:line="66" pos:column="17">getUserObject</name><argument_list pos:line="66" pos:column="30">()</argument_list></call><op:operator pos:line="66" pos:column="32">.</op:operator><call><name pos:line="66" pos:column="33">getClass</name><argument_list pos:line="66" pos:column="41">()</argument_list></call> <op:operator pos:line="66" pos:column="44">==</op:operator> <name><name pos:line="66" pos:column="47">XincoCoreNode</name><op:operator pos:line="66" pos:column="60">.</op:operator><name pos:line="66" pos:column="61">class</name></name></expr>)</condition><then pos:line="66" pos:column="67"> <block pos:line="66" pos:column="68">{
                <expr_stmt><expr><name pos:line="67" pos:column="17">s</name> <op:operator pos:line="67" pos:column="19">=</op:operator> <op:operator pos:line="67" pos:column="21">(</op:operator><op:operator pos:line="67" pos:column="22">(</op:operator><name pos:line="67" pos:column="23">XincoCoreNode</name><op:operator pos:line="67" pos:column="36">)</op:operator> <call><name pos:line="67" pos:column="38">getUserObject</name><argument_list pos:line="67" pos:column="51">()</argument_list></call><op:operator pos:line="67" pos:column="53">)</op:operator><op:operator pos:line="67" pos:column="54">.</op:operator><call><name pos:line="67" pos:column="55">getDesignation</name><argument_list pos:line="67" pos:column="69">()</argument_list></call></expr>;</expr_stmt>
                <if pos:line="68" pos:column="17">if <condition pos:line="68" pos:column="20">(<expr><name pos:line="68" pos:column="21">s</name> <op:operator pos:line="68" pos:column="23">==</op:operator> <lit:literal type="null" pos:line="68" pos:column="26">null</lit:literal></expr>)</condition><then pos:line="68" pos:column="31"> <block pos:line="68" pos:column="32">{
                    <expr_stmt><expr><name pos:line="69" pos:column="21">s</name> <op:operator pos:line="69" pos:column="23">=</op:operator> <call><name><name pos:line="69" pos:column="25">super</name><op:operator pos:line="69" pos:column="30">.</op:operator><name pos:line="69" pos:column="31">toString</name></name><argument_list pos:line="69" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <expr_stmt><expr><name pos:line="71" pos:column="17">status</name> <op:operator pos:line="71" pos:column="24">=</op:operator> <op:operator pos:line="71" pos:column="26">new</op:operator> <call><name pos:line="71" pos:column="30">String</name><argument_list pos:line="71" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="71" pos:column="37">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if pos:line="72" pos:column="17">if <condition pos:line="72" pos:column="20">(<expr><op:operator pos:line="72" pos:column="21">(</op:operator><op:operator pos:line="72" pos:column="22">(</op:operator><name pos:line="72" pos:column="23">XincoCoreNode</name><op:operator pos:line="72" pos:column="36">)</op:operator> <call><name pos:line="72" pos:column="38">getUserObject</name><argument_list pos:line="72" pos:column="51">()</argument_list></call><op:operator pos:line="72" pos:column="53">)</op:operator><op:operator pos:line="72" pos:column="54">.</op:operator><call><name pos:line="72" pos:column="55">getStatus_number</name><argument_list pos:line="72" pos:column="71">()</argument_list></call> <op:operator pos:line="72" pos:column="74">==</op:operator> <lit:literal type="number" pos:line="72" pos:column="77">2</lit:literal></expr>)</condition><then pos:line="72" pos:column="79"> <block pos:line="72" pos:column="80">{
                    <expr_stmt><expr><name pos:line="73" pos:column="21">status</name> <op:operator pos:line="73" pos:column="28">=</op:operator> <op:operator pos:line="73" pos:column="30">new</op:operator> <call><name pos:line="73" pos:column="34">String</name><argument_list pos:line="73" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="73" pos:column="41">" | -"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <if pos:line="75" pos:column="17">if <condition pos:line="75" pos:column="20">(<expr><op:operator pos:line="75" pos:column="21">(</op:operator><op:operator pos:line="75" pos:column="22">(</op:operator><name pos:line="75" pos:column="23">XincoCoreNode</name><op:operator pos:line="75" pos:column="36">)</op:operator> <call><name pos:line="75" pos:column="38">getUserObject</name><argument_list pos:line="75" pos:column="51">()</argument_list></call><op:operator pos:line="75" pos:column="53">)</op:operator><op:operator pos:line="75" pos:column="54">.</op:operator><call><name pos:line="75" pos:column="55">getStatus_number</name><argument_list pos:line="75" pos:column="71">()</argument_list></call> <op:operator pos:line="75" pos:column="74">==</op:operator> <lit:literal type="number" pos:line="75" pos:column="77">3</lit:literal></expr>)</condition><then pos:line="75" pos:column="79"> <block pos:line="75" pos:column="80">{
                    <expr_stmt><expr><name pos:line="76" pos:column="21">status</name> <op:operator pos:line="76" pos:column="28">=</op:operator> <op:operator pos:line="76" pos:column="30">new</op:operator> <call><name pos:line="76" pos:column="34">String</name><argument_list pos:line="76" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="76" pos:column="41">" | -&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <return pos:line="78" pos:column="17">return <expr><lit:literal type="string" pos:line="78" pos:column="24">""</lit:literal> <op:operator pos:line="78" pos:column="27">+</op:operator> <name pos:line="78" pos:column="29">s</name> <op:operator pos:line="78" pos:column="31">+</op:operator> <lit:literal type="string" pos:line="78" pos:column="33">" ("</lit:literal> <op:operator pos:line="78" pos:column="38">+</op:operator> <op:operator pos:line="78" pos:column="40">(</op:operator><op:operator pos:line="78" pos:column="41">(</op:operator><name pos:line="78" pos:column="42">XincoCoreNode</name><op:operator pos:line="78" pos:column="55">)</op:operator> <call><name pos:line="78" pos:column="57">getUserObject</name><argument_list pos:line="78" pos:column="70">()</argument_list></call><op:operator pos:line="78" pos:column="72">)</op:operator><op:operator pos:line="78" pos:column="73">.</op:operator><call><name pos:line="78" pos:column="74">getXinco_core_language</name><argument_list pos:line="78" pos:column="96">()</argument_list></call><op:operator pos:line="78" pos:column="98">.</op:operator><call><name pos:line="78" pos:column="99">getSign</name><argument_list pos:line="78" pos:column="106">()</argument_list></call> <op:operator pos:line="78" pos:column="109">+</op:operator> <name pos:line="78" pos:column="111">status</name> <op:operator pos:line="78" pos:column="118">+</op:operator> <lit:literal type="string" pos:line="78" pos:column="120">")"</lit:literal></expr>;</return>
            }</block></then></if>
            <if pos:line="80" pos:column="13">if <condition pos:line="80" pos:column="16">(<expr><call><name pos:line="80" pos:column="17">getUserObject</name><argument_list pos:line="80" pos:column="30">()</argument_list></call><op:operator pos:line="80" pos:column="32">.</op:operator><call><name pos:line="80" pos:column="33">getClass</name><argument_list pos:line="80" pos:column="41">()</argument_list></call> <op:operator pos:line="80" pos:column="44">==</op:operator> <name><name pos:line="80" pos:column="47">XincoCoreData</name><op:operator pos:line="80" pos:column="60">.</op:operator><name pos:line="80" pos:column="61">class</name></name></expr>)</condition><then pos:line="80" pos:column="67"> <block pos:line="80" pos:column="68">{
                <expr_stmt><expr><name pos:line="81" pos:column="17">s</name> <op:operator pos:line="81" pos:column="19">=</op:operator> <op:operator pos:line="81" pos:column="21">(</op:operator><op:operator pos:line="81" pos:column="22">(</op:operator><name pos:line="81" pos:column="23">XincoCoreData</name><op:operator pos:line="81" pos:column="36">)</op:operator> <call><name pos:line="81" pos:column="38">getUserObject</name><argument_list pos:line="81" pos:column="51">()</argument_list></call><op:operator pos:line="81" pos:column="53">)</op:operator><op:operator pos:line="81" pos:column="54">.</op:operator><call><name pos:line="81" pos:column="55">getDesignation</name><argument_list pos:line="81" pos:column="69">()</argument_list></call></expr>;</expr_stmt>
                <if pos:line="82" pos:column="17">if <condition pos:line="82" pos:column="20">(<expr><name pos:line="82" pos:column="21">s</name> <op:operator pos:line="82" pos:column="23">==</op:operator> <lit:literal type="null" pos:line="82" pos:column="26">null</lit:literal></expr>)</condition><then pos:line="82" pos:column="31"> <block pos:line="82" pos:column="32">{
                    <expr_stmt><expr><name pos:line="83" pos:column="21">s</name> <op:operator pos:line="83" pos:column="23">=</op:operator> <call><name><name pos:line="83" pos:column="25">super</name><op:operator pos:line="83" pos:column="30">.</op:operator><name pos:line="83" pos:column="31">toString</name></name><argument_list pos:line="83" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <expr_stmt><expr><name pos:line="85" pos:column="17">status</name> <op:operator pos:line="85" pos:column="24">=</op:operator> <op:operator pos:line="85" pos:column="26">new</op:operator> <call><name pos:line="85" pos:column="30">String</name><argument_list pos:line="85" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="85" pos:column="37">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if pos:line="86" pos:column="17">if <condition pos:line="86" pos:column="20">(<expr><op:operator pos:line="86" pos:column="21">(</op:operator><op:operator pos:line="86" pos:column="22">(</op:operator><name pos:line="86" pos:column="23">XincoCoreData</name><op:operator pos:line="86" pos:column="36">)</op:operator> <call><name pos:line="86" pos:column="38">getUserObject</name><argument_list pos:line="86" pos:column="51">()</argument_list></call><op:operator pos:line="86" pos:column="53">)</op:operator><op:operator pos:line="86" pos:column="54">.</op:operator><call><name pos:line="86" pos:column="55">getStatus_number</name><argument_list pos:line="86" pos:column="71">()</argument_list></call> <op:operator pos:line="86" pos:column="74">==</op:operator> <lit:literal type="number" pos:line="86" pos:column="77">2</lit:literal></expr>)</condition><then pos:line="86" pos:column="79"> <block pos:line="86" pos:column="80">{
                    <expr_stmt><expr><name pos:line="87" pos:column="21">status</name> <op:operator pos:line="87" pos:column="28">=</op:operator> <op:operator pos:line="87" pos:column="30">new</op:operator> <call><name pos:line="87" pos:column="34">String</name><argument_list pos:line="87" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="87" pos:column="41">" | -"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <if pos:line="89" pos:column="17">if <condition pos:line="89" pos:column="20">(<expr><op:operator pos:line="89" pos:column="21">(</op:operator><op:operator pos:line="89" pos:column="22">(</op:operator><name pos:line="89" pos:column="23">XincoCoreData</name><op:operator pos:line="89" pos:column="36">)</op:operator> <call><name pos:line="89" pos:column="38">getUserObject</name><argument_list pos:line="89" pos:column="51">()</argument_list></call><op:operator pos:line="89" pos:column="53">)</op:operator><op:operator pos:line="89" pos:column="54">.</op:operator><call><name pos:line="89" pos:column="55">getStatus_number</name><argument_list pos:line="89" pos:column="71">()</argument_list></call> <op:operator pos:line="89" pos:column="74">==</op:operator> <lit:literal type="number" pos:line="89" pos:column="77">3</lit:literal></expr>)</condition><then pos:line="89" pos:column="79"> <block pos:line="89" pos:column="80">{
                    <expr_stmt><expr><name pos:line="90" pos:column="21">status</name> <op:operator pos:line="90" pos:column="28">=</op:operator> <op:operator pos:line="90" pos:column="30">new</op:operator> <call><name pos:line="90" pos:column="34">String</name><argument_list pos:line="90" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="90" pos:column="41">" | -&gt;"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <if pos:line="92" pos:column="17">if <condition pos:line="92" pos:column="20">(<expr><op:operator pos:line="92" pos:column="21">(</op:operator><op:operator pos:line="92" pos:column="22">(</op:operator><name pos:line="92" pos:column="23">XincoCoreData</name><op:operator pos:line="92" pos:column="36">)</op:operator> <call><name pos:line="92" pos:column="38">getUserObject</name><argument_list pos:line="92" pos:column="51">()</argument_list></call><op:operator pos:line="92" pos:column="53">)</op:operator><op:operator pos:line="92" pos:column="54">.</op:operator><call><name pos:line="92" pos:column="55">getStatus_number</name><argument_list pos:line="92" pos:column="71">()</argument_list></call> <op:operator pos:line="92" pos:column="74">==</op:operator> <lit:literal type="number" pos:line="92" pos:column="77">4</lit:literal></expr>)</condition><then pos:line="92" pos:column="79"> <block pos:line="92" pos:column="80">{
                    <expr_stmt><expr><name pos:line="93" pos:column="21">status</name> <op:operator pos:line="93" pos:column="28">=</op:operator> <op:operator pos:line="93" pos:column="30">new</op:operator> <call><name pos:line="93" pos:column="34">String</name><argument_list pos:line="93" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="93" pos:column="41">" | X"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <if pos:line="95" pos:column="17">if <condition pos:line="95" pos:column="20">(<expr><op:operator pos:line="95" pos:column="21">(</op:operator><op:operator pos:line="95" pos:column="22">(</op:operator><name pos:line="95" pos:column="23">XincoCoreData</name><op:operator pos:line="95" pos:column="36">)</op:operator> <call><name pos:line="95" pos:column="38">getUserObject</name><argument_list pos:line="95" pos:column="51">()</argument_list></call><op:operator pos:line="95" pos:column="53">)</op:operator><op:operator pos:line="95" pos:column="54">.</op:operator><call><name pos:line="95" pos:column="55">getStatus_number</name><argument_list pos:line="95" pos:column="71">()</argument_list></call> <op:operator pos:line="95" pos:column="74">==</op:operator> <lit:literal type="number" pos:line="95" pos:column="77">5</lit:literal></expr>)</condition><then pos:line="95" pos:column="79"> <block pos:line="95" pos:column="80">{
                    <expr_stmt><expr><name pos:line="96" pos:column="21">status</name> <op:operator pos:line="96" pos:column="28">=</op:operator> <op:operator pos:line="96" pos:column="30">new</op:operator> <call><name pos:line="96" pos:column="34">String</name><argument_list pos:line="96" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="96" pos:column="41">" | WWW"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <return pos:line="98" pos:column="17">return <expr><lit:literal type="string" pos:line="98" pos:column="24">""</lit:literal> <op:operator pos:line="98" pos:column="27">+</op:operator> <name pos:line="98" pos:column="29">s</name> <op:operator pos:line="98" pos:column="31">+</op:operator> <lit:literal type="string" pos:line="98" pos:column="33">" ("</lit:literal> <op:operator pos:line="98" pos:column="38">+</op:operator> <call><name><name pos:line="98" pos:column="40">explorer</name><op:operator pos:line="98" pos:column="48">.</op:operator><name pos:line="98" pos:column="49">getResourceBundle</name></name><argument_list pos:line="98" pos:column="66">()</argument_list></call><op:operator pos:line="98" pos:column="68">.</op:operator><call><name pos:line="98" pos:column="69">getString</name><argument_list pos:line="98" pos:column="78">(<argument><expr><op:operator pos:line="98" pos:column="79">(</op:operator><op:operator pos:line="98" pos:column="80">(</op:operator><name pos:line="98" pos:column="81">XincoCoreData</name><op:operator pos:line="98" pos:column="94">)</op:operator> <call><name pos:line="98" pos:column="96">getUserObject</name><argument_list pos:line="98" pos:column="109">()</argument_list></call><op:operator pos:line="98" pos:column="111">)</op:operator><op:operator pos:line="98" pos:column="112">.</op:operator><call><name pos:line="98" pos:column="113">getXinco_core_data_type</name><argument_list pos:line="98" pos:column="136">()</argument_list></call><op:operator pos:line="98" pos:column="138">.</op:operator><call><name pos:line="98" pos:column="139">getDesignation</name><argument_list pos:line="98" pos:column="153">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="98" pos:column="157">+</op:operator>
                        <lit:literal type="string" pos:line="99" pos:column="25">" | "</lit:literal> <op:operator pos:line="99" pos:column="31">+</op:operator> <op:operator pos:line="99" pos:column="33">(</op:operator><op:operator pos:line="99" pos:column="34">(</op:operator><name pos:line="99" pos:column="35">XincoCoreData</name><op:operator pos:line="99" pos:column="48">)</op:operator> <call><name pos:line="99" pos:column="50">getUserObject</name><argument_list pos:line="99" pos:column="63">()</argument_list></call><op:operator pos:line="99" pos:column="65">)</op:operator><op:operator pos:line="99" pos:column="66">.</op:operator><call><name pos:line="99" pos:column="67">getXinco_core_language</name><argument_list pos:line="99" pos:column="89">()</argument_list></call><op:operator pos:line="99" pos:column="91">.</op:operator><call><name pos:line="99" pos:column="92">getSign</name><argument_list pos:line="99" pos:column="99">()</argument_list></call> <op:operator pos:line="99" pos:column="102">+</op:operator> <name pos:line="99" pos:column="104">status</name> <op:operator pos:line="99" pos:column="111">+</op:operator> <lit:literal type="string" pos:line="99" pos:column="113">")"</lit:literal></expr>;</return>
            }</block></then></if>
        }</block></then></if>
        <return pos:line="102" pos:column="9">return <expr><call><name><name pos:line="102" pos:column="16">super</name><op:operator pos:line="102" pos:column="21">.</op:operator><name pos:line="102" pos:column="22">toString</name></name><argument_list pos:line="102" pos:column="30">()</argument_list></call></expr>;</return>
    }</block></function>
}</block></class>
</unit>
