<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\xinco\src\com\bluecubs\xinco\index\filetypes\XincoIndexMicrosoftPowerpoint.java" pos:tabs="8"><comment type="block" format="javadoc" pos:line="1" pos:column="1">/**
*Copyright 2005 blueCubs.com
*
*Licensed under the Apache License, Version 2.0 (the "License");
*you may not use this file except in compliance with the License.
*You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
*Unless required by applicable law or agreed to in writing, software
*distributed under the License is distributed on an "AS IS" BASIS,
*WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*See the License for the specific language governing permissions and
*limitations under the License.
*
*************************************************************
* This project supports the blueCubs vision of giving back
* to the community in exchange for free software!
* More information on: http://www.bluecubs.org
*************************************************************
*
* Name:            XincoIndexMicrosoftPowerpoint
*
* Description:     indexing Microsoft Powerpoint files 
*
* Original Author: Alexander Manes
* Date:            2005/02/06
*
* Modifications:
* 
* Who?             When?             What?
* -                -                 -
*
*************************************************************
*/</comment>

<package pos:line="37" pos:column="1">package <name><name pos:line="37" pos:column="9">com</name><op:operator pos:line="37" pos:column="12">.</op:operator><name pos:line="37" pos:column="13">bluecubs</name><op:operator pos:line="37" pos:column="21">.</op:operator><name pos:line="37" pos:column="22">xinco</name><op:operator pos:line="37" pos:column="27">.</op:operator><name pos:line="37" pos:column="28">index</name><op:operator pos:line="37" pos:column="33">.</op:operator><name pos:line="37" pos:column="34">filetypes</name></name>;</package>

<import pos:line="39" pos:column="1">import <name><name pos:line="39" pos:column="8">java</name><op:operator pos:line="39" pos:column="12">.</op:operator><name pos:line="39" pos:column="13">io</name><op:operator pos:line="39" pos:column="15">.</op:operator><name pos:line="39" pos:column="16">FileInputStream</name></name>;</import>
<import pos:line="40" pos:column="1">import <name><name pos:line="40" pos:column="8">java</name><op:operator pos:line="40" pos:column="12">.</op:operator><name pos:line="40" pos:column="13">io</name><op:operator pos:line="40" pos:column="15">.</op:operator><name pos:line="40" pos:column="16">InputStreamReader</name></name>;</import>
<import pos:line="41" pos:column="1">import <name><name pos:line="41" pos:column="8">java</name><op:operator pos:line="41" pos:column="12">.</op:operator><name pos:line="41" pos:column="13">io</name><op:operator pos:line="41" pos:column="15">.</op:operator><name pos:line="41" pos:column="16">Reader</name></name>;</import>
<import pos:line="42" pos:column="1">import <name><name pos:line="42" pos:column="8">java</name><op:operator pos:line="42" pos:column="12">.</op:operator><name pos:line="42" pos:column="13">io</name><op:operator pos:line="42" pos:column="15">.</op:operator><name pos:line="42" pos:column="16">File</name></name>;</import>
<import pos:line="43" pos:column="1">import <name><name pos:line="43" pos:column="8">java</name><op:operator pos:line="43" pos:column="12">.</op:operator><name pos:line="43" pos:column="13">io</name><op:operator pos:line="43" pos:column="15">.</op:operator><name pos:line="43" pos:column="16">BufferedReader</name></name>;</import>

<import pos:line="45" pos:column="1">import <name><name pos:line="45" pos:column="8">org</name><op:operator pos:line="45" pos:column="11">.</op:operator><name pos:line="45" pos:column="12">apache</name><op:operator pos:line="45" pos:column="18">.</op:operator><name pos:line="45" pos:column="19">poi</name><op:operator pos:line="45" pos:column="22">.</op:operator><name pos:line="45" pos:column="23">hpsf</name><op:operator pos:line="45" pos:column="27">.</op:operator><name pos:line="45" pos:column="28">PropertySet</name></name>;</import>
<import pos:line="46" pos:column="1">import <name><name pos:line="46" pos:column="8">org</name><op:operator pos:line="46" pos:column="11">.</op:operator><name pos:line="46" pos:column="12">apache</name><op:operator pos:line="46" pos:column="18">.</op:operator><name pos:line="46" pos:column="19">poi</name><op:operator pos:line="46" pos:column="22">.</op:operator><name pos:line="46" pos:column="23">poifs</name><op:operator pos:line="46" pos:column="28">.</op:operator><name pos:line="46" pos:column="29">eventfilesystem</name><op:operator pos:line="46" pos:column="44">.</op:operator><name pos:line="46" pos:column="45">POIFSReader</name></name>;</import>
<import pos:line="47" pos:column="1">import <name><name pos:line="47" pos:column="8">org</name><op:operator pos:line="47" pos:column="11">.</op:operator><name pos:line="47" pos:column="12">apache</name><op:operator pos:line="47" pos:column="18">.</op:operator><name pos:line="47" pos:column="19">poi</name><op:operator pos:line="47" pos:column="22">.</op:operator><name pos:line="47" pos:column="23">poifs</name><op:operator pos:line="47" pos:column="28">.</op:operator><name pos:line="47" pos:column="29">eventfilesystem</name><op:operator pos:line="47" pos:column="44">.</op:operator><name pos:line="47" pos:column="45">POIFSReaderEvent</name></name>;</import>
<import pos:line="48" pos:column="1">import <name><name pos:line="48" pos:column="8">org</name><op:operator pos:line="48" pos:column="11">.</op:operator><name pos:line="48" pos:column="12">apache</name><op:operator pos:line="48" pos:column="18">.</op:operator><name pos:line="48" pos:column="19">poi</name><op:operator pos:line="48" pos:column="22">.</op:operator><name pos:line="48" pos:column="23">poifs</name><op:operator pos:line="48" pos:column="28">.</op:operator><name pos:line="48" pos:column="29">eventfilesystem</name><op:operator pos:line="48" pos:column="44">.</op:operator><name pos:line="48" pos:column="45">POIFSReaderListener</name></name>;</import>
<import pos:line="49" pos:column="1">import <name><name pos:line="49" pos:column="8">org</name><op:operator pos:line="49" pos:column="11">.</op:operator><name pos:line="49" pos:column="12">apache</name><op:operator pos:line="49" pos:column="18">.</op:operator><name pos:line="49" pos:column="19">poi</name><op:operator pos:line="49" pos:column="22">.</op:operator><name pos:line="49" pos:column="23">poifs</name><op:operator pos:line="49" pos:column="28">.</op:operator><name pos:line="49" pos:column="29">filesystem</name><op:operator pos:line="49" pos:column="39">.</op:operator><name pos:line="49" pos:column="40">DocumentInputStream</name></name>;</import>

<class><specifier pos:line="51" pos:column="1">public</specifier> class <name pos:line="51" pos:column="14">XincoIndexMicrosoftPowerpoint</name> <super><implements pos:line="51" pos:column="44">implements <name pos:line="51" pos:column="55">XincoIndexFileType</name></implements></super> <block pos:line="51" pos:column="74">{

	<constructor><specifier pos:line="53" pos:column="9">public</specifier> <name pos:line="53" pos:column="16">XincoIndexMicrosoftPowerpoint</name><parameter_list pos:line="53" pos:column="45">()</parameter_list> <block pos:line="53" pos:column="48">{
		<expr_stmt><expr><call><name pos:line="54" pos:column="17">super</name><argument_list pos:line="54" pos:column="22">()</argument_list></call></expr>;</expr_stmt>
	}</block></constructor>

	<function><type><specifier pos:line="57" pos:column="9">public</specifier> <name pos:line="57" pos:column="16">Reader</name></type> <name pos:line="57" pos:column="23">getFileContentReader</name><parameter_list pos:line="57" pos:column="43">(<param><decl><type><name pos:line="57" pos:column="44">File</name></type> <name pos:line="57" pos:column="49">f</name></decl></param>)</parameter_list> <block pos:line="57" pos:column="52">{
		<decl_stmt><decl><type><name pos:line="58" pos:column="17">Reader</name></type> <name pos:line="58" pos:column="24">reader</name> <init pos:line="58" pos:column="31">= <expr><lit:literal type="null" pos:line="58" pos:column="33">null</lit:literal></expr></init></decl>;</decl_stmt>
		<return pos:line="59" pos:column="17">return <expr><name pos:line="59" pos:column="24">reader</name></expr>;</return>
	}</block></function>

	<function><type><specifier pos:line="62" pos:column="9">public</specifier> <name pos:line="62" pos:column="16">String</name></type> <name pos:line="62" pos:column="23">getFileContentString</name><parameter_list pos:line="62" pos:column="43">(<param><decl><type><name pos:line="62" pos:column="44">File</name></type> <name pos:line="62" pos:column="49">f</name></decl></param>)</parameter_list> <block pos:line="62" pos:column="52">{
        <decl_stmt><decl><type><name pos:line="63" pos:column="9">String</name></type> <name pos:line="63" pos:column="16">text</name> <init pos:line="63" pos:column="21">= <expr><lit:literal type="null" pos:line="63" pos:column="23">null</lit:literal></expr></init></decl>;</decl_stmt>
		<try pos:line="64" pos:column="17">try <block pos:line="64" pos:column="21">{
			<decl_stmt><decl><type><name pos:line="65" pos:column="25">POIFSReader</name></type> <name pos:line="65" pos:column="37">r</name> <init pos:line="65" pos:column="39">= <expr><op:operator pos:line="65" pos:column="41">new</op:operator> <call><name pos:line="65" pos:column="45">POIFSReader</name><argument_list pos:line="65" pos:column="56">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="66" pos:column="25">XincoIndexMicrosoftPowerpointPOIFSReaderListener</name></type> <name pos:line="66" pos:column="74">ximpprl</name> <init pos:line="66" pos:column="82">= <expr><op:operator pos:line="66" pos:column="84">new</op:operator> <call><name pos:line="66" pos:column="88">XincoIndexMicrosoftPowerpointPOIFSReaderListener</name><argument_list pos:line="66" pos:column="136">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="67" pos:column="25">r</name><op:operator pos:line="67" pos:column="26">.</op:operator><name pos:line="67" pos:column="27">registerListener</name></name><argument_list pos:line="67" pos:column="43">(<argument><expr><name pos:line="67" pos:column="44">ximpprl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	        <expr_stmt><expr><call><name><name pos:line="68" pos:column="17">r</name><op:operator pos:line="68" pos:column="18">.</op:operator><name pos:line="68" pos:column="19">read</name></name><argument_list pos:line="68" pos:column="23">(<argument><expr><op:operator pos:line="68" pos:column="24">new</op:operator> <call><name pos:line="68" pos:column="28">FileInputStream</name><argument_list pos:line="68" pos:column="43">(<argument><expr><name pos:line="68" pos:column="44">f</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	        <expr_stmt><expr><name pos:line="69" pos:column="17">text</name> <op:operator pos:line="69" pos:column="22">=</op:operator> <call><name><name pos:line="69" pos:column="24">ximpprl</name><op:operator pos:line="69" pos:column="31">.</op:operator><name pos:line="69" pos:column="32">getEventText</name></name><argument_list pos:line="69" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
		}</block> <catch pos:line="70" pos:column="19">catch <parameter_list pos:line="70" pos:column="25">(<param><decl><type><name pos:line="70" pos:column="26">Exception</name></type> <name pos:line="70" pos:column="36">e</name></decl></param>)</parameter_list> <block pos:line="70" pos:column="39">{
			<expr_stmt><expr><name pos:line="71" pos:column="25">text</name> <op:operator pos:line="71" pos:column="30">=</op:operator> <lit:literal type="null" pos:line="71" pos:column="32">null</lit:literal></expr>;</expr_stmt>
		}</block></catch></try>
		<return pos:line="73" pos:column="17">return <expr><name pos:line="73" pos:column="24">text</name></expr>;</return>
	}</block></function>

	<class><specifier pos:line="76" pos:column="9">static</specifier> class <name pos:line="76" pos:column="22">XincoIndexMicrosoftPowerpointPOIFSReaderListener</name> <super><implements pos:line="76" pos:column="71">implements <name pos:line="76" pos:column="82">POIFSReaderListener</name></implements></super> <block pos:line="76" pos:column="102">{

		<decl_stmt><decl><type><name pos:line="78" pos:column="17">String</name></type> <name pos:line="78" pos:column="24">EventText</name> <init pos:line="78" pos:column="34">= <expr><lit:literal type="string" pos:line="78" pos:column="36">""</lit:literal></expr></init></decl>;</decl_stmt>
		
		<function><type><specifier pos:line="80" pos:column="17">public</specifier> <name pos:line="80" pos:column="24">String</name></type> <name pos:line="80" pos:column="31">getEventText</name><parameter_list pos:line="80" pos:column="43">()</parameter_list> <block pos:line="80" pos:column="46">{
			<return pos:line="81" pos:column="25">return <expr><name pos:line="81" pos:column="32">EventText</name></expr>;</return>
		}</block></function>
		
		<function><type><specifier pos:line="84" pos:column="17">public</specifier> <name pos:line="84" pos:column="24">void</name></type> <name pos:line="84" pos:column="29">processPOIFSReaderEvent</name><parameter_list pos:line="84" pos:column="52">(<param><decl><type><name pos:line="84" pos:column="53">POIFSReaderEvent</name></type> <name pos:line="84" pos:column="70">event</name></decl></param>)</parameter_list> <block pos:line="84" pos:column="77">{
			<decl_stmt><decl><type><name pos:line="85" pos:column="25">PropertySet</name></type> <name pos:line="85" pos:column="37">ps</name> <init pos:line="85" pos:column="40">= <expr><lit:literal type="null" pos:line="85" pos:column="42">null</lit:literal></expr></init></decl>;</decl_stmt>
			<try pos:line="86" pos:column="25">try <block pos:line="86" pos:column="29">{
				<decl_stmt><decl><type><name pos:line="87" pos:column="33">DocumentInputStream</name></type> <name pos:line="87" pos:column="53">dis</name> <init pos:line="87" pos:column="57">= <expr><lit:literal type="null" pos:line="87" pos:column="59">null</lit:literal></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name pos:line="88" pos:column="33">dis</name> <op:operator pos:line="88" pos:column="37">=</op:operator> <call><name><name pos:line="88" pos:column="39">event</name><op:operator pos:line="88" pos:column="44">.</op:operator><name pos:line="88" pos:column="45">getStream</name></name><argument_list pos:line="88" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="89" pos:column="33">Reader</name></type> <name pos:line="89" pos:column="40">EventReader</name> <init pos:line="89" pos:column="52">= <expr><op:operator pos:line="89" pos:column="54">new</op:operator> <call><name pos:line="89" pos:column="58">BufferedReader</name><argument_list pos:line="89" pos:column="72">(<argument><expr><op:operator pos:line="89" pos:column="73">new</op:operator> <call><name pos:line="89" pos:column="77">InputStreamReader</name><argument_list pos:line="89" pos:column="94">(<argument><expr><name pos:line="89" pos:column="95">dis</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="90" pos:column="33">int</name></type> <name pos:line="90" pos:column="37">l</name> <init pos:line="90" pos:column="39">= <expr><lit:literal type="number" pos:line="90" pos:column="41">0</lit:literal></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="91" pos:column="33">char</name></type> <name><name pos:line="91" pos:column="38">ca</name><index pos:line="91" pos:column="40">[]</index></name> <init pos:line="91" pos:column="43">= <expr><op:operator pos:line="91" pos:column="45">new</op:operator> <name><name pos:line="91" pos:column="49">char</name><index pos:line="91" pos:column="53">[<expr><lit:literal type="number" pos:line="91" pos:column="54">1024</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
				<while pos:line="92" pos:column="33">while <condition pos:line="92" pos:column="39">(<expr><lit:literal type="boolean" pos:line="92" pos:column="40">true</lit:literal></expr>)</condition> <block pos:line="92" pos:column="46">{
					<expr_stmt><expr><name pos:line="93" pos:column="41">l</name> <op:operator pos:line="93" pos:column="43">=</op:operator> <call><name><name pos:line="93" pos:column="45">EventReader</name><op:operator pos:line="93" pos:column="56">.</op:operator><name pos:line="93" pos:column="57">read</name></name><argument_list pos:line="93" pos:column="61">(<argument><expr><name pos:line="93" pos:column="62">ca</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="93" pos:column="66">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="93" pos:column="69">1024</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<if pos:line="94" pos:column="41">if <condition pos:line="94" pos:column="44">(<expr><op:operator pos:line="94" pos:column="45">!</op:operator><op:operator pos:line="94" pos:column="46">(</op:operator><name pos:line="94" pos:column="47">l</name><op:operator pos:line="94" pos:column="48">&gt;</op:operator><lit:literal type="number" pos:line="94" pos:column="49">0</lit:literal><op:operator pos:line="94" pos:column="50">)</op:operator></expr>)</condition><then pos:line="94" pos:column="52"> <block pos:line="94" pos:column="53">{
						<break pos:line="95" pos:column="49">break;</break>
					}</block></then></if>
					<expr_stmt><expr><name pos:line="97" pos:column="41">EventText</name> <op:operator pos:line="97" pos:column="51">=</op:operator> <name pos:line="97" pos:column="53">EventText</name> <op:operator pos:line="97" pos:column="63">+</op:operator> <call><name><name pos:line="97" pos:column="65">String</name><op:operator pos:line="97" pos:column="71">.</op:operator><name pos:line="97" pos:column="72">copyValueOf</name></name><argument_list pos:line="97" pos:column="83">(<argument><expr><name pos:line="97" pos:column="84">ca</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="97" pos:column="88">0</lit:literal></expr></argument> , <argument><expr><name pos:line="97" pos:column="92">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></while>
			}</block> <catch pos:line="99" pos:column="27">catch <parameter_list pos:line="99" pos:column="33">(<param><decl><type><name pos:line="99" pos:column="34">Exception</name></type> <name pos:line="99" pos:column="44">ex</name></decl></param>)</parameter_list> <block pos:line="99" pos:column="48">{
				<expr_stmt><expr><name pos:line="100" pos:column="33">EventText</name> <op:operator pos:line="100" pos:column="43">=</op:operator> <lit:literal type="string" pos:line="100" pos:column="45">""</lit:literal></expr>;</expr_stmt>
			}</block></catch></try>
		}</block></function>
	}</block></class>
}</block></class>
</unit>
