<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\UMAS\src\com\umas\frontend\ManageDeptPeople.java" pos:tabs="8"><package pos:line="1" pos:column="1">package <name><name pos:line="1" pos:column="9">com</name><op:operator pos:line="1" pos:column="12">.</op:operator><name pos:line="1" pos:column="13">umas</name><op:operator pos:line="1" pos:column="17">.</op:operator><name pos:line="1" pos:column="18">frontend</name></name>;</package>



<comment type="block" format="javadoc" pos:line="5" pos:column="1">/****************@author Simant Purohit*********************************/</comment>

<import pos:line="7" pos:column="1">import <name><name pos:line="7" pos:column="8">java</name><op:operator pos:line="7" pos:column="12">.</op:operator><name pos:line="7" pos:column="13">awt</name><op:operator pos:line="7" pos:column="16">.</op:operator><name pos:line="7" pos:column="17">GridLayout</name></name>;</import>
<import pos:line="8" pos:column="1">import <name><name pos:line="8" pos:column="8">java</name><op:operator pos:line="8" pos:column="12">.</op:operator><name pos:line="8" pos:column="13">awt</name><op:operator pos:line="8" pos:column="16">.</op:operator><name pos:line="8" pos:column="17">event</name><op:operator pos:line="8" pos:column="22">.</op:operator><name pos:line="8" pos:column="23">ActionEvent</name></name>;</import>
<import pos:line="9" pos:column="1">import <name><name pos:line="9" pos:column="8">java</name><op:operator pos:line="9" pos:column="12">.</op:operator><name pos:line="9" pos:column="13">awt</name><op:operator pos:line="9" pos:column="16">.</op:operator><name pos:line="9" pos:column="17">event</name><op:operator pos:line="9" pos:column="22">.</op:operator><name pos:line="9" pos:column="23">ActionListener</name></name>;</import>
<import pos:line="10" pos:column="1">import <name><name pos:line="10" pos:column="8">java</name><op:operator pos:line="10" pos:column="12">.</op:operator><name pos:line="10" pos:column="13">util</name><op:operator pos:line="10" pos:column="17">.</op:operator><name pos:line="10" pos:column="18">ArrayList</name></name>;</import>

<import pos:line="12" pos:column="1">import <name><name pos:line="12" pos:column="8">javax</name><op:operator pos:line="12" pos:column="13">.</op:operator><name pos:line="12" pos:column="14">swing</name><op:operator pos:line="12" pos:column="19">.</op:operator><name pos:line="12" pos:column="20">DefaultComboBoxModel</name></name>;</import>
<import pos:line="13" pos:column="1">import <name><name pos:line="13" pos:column="8">javax</name><op:operator pos:line="13" pos:column="13">.</op:operator><name pos:line="13" pos:column="14">swing</name><op:operator pos:line="13" pos:column="19">.</op:operator><name pos:line="13" pos:column="20">JButton</name></name>;</import>
<import pos:line="14" pos:column="1">import <name><name pos:line="14" pos:column="8">javax</name><op:operator pos:line="14" pos:column="13">.</op:operator><name pos:line="14" pos:column="14">swing</name><op:operator pos:line="14" pos:column="19">.</op:operator><name pos:line="14" pos:column="20">JComboBox</name></name>;</import>
<import pos:line="15" pos:column="1">import <name><name pos:line="15" pos:column="8">javax</name><op:operator pos:line="15" pos:column="13">.</op:operator><name pos:line="15" pos:column="14">swing</name><op:operator pos:line="15" pos:column="19">.</op:operator><name pos:line="15" pos:column="20">JLabel</name></name>;</import>
<import pos:line="16" pos:column="1">import <name><name pos:line="16" pos:column="8">javax</name><op:operator pos:line="16" pos:column="13">.</op:operator><name pos:line="16" pos:column="14">swing</name><op:operator pos:line="16" pos:column="19">.</op:operator><name pos:line="16" pos:column="20">JOptionPane</name></name>;</import>
<import pos:line="17" pos:column="1">import <name><name pos:line="17" pos:column="8">javax</name><op:operator pos:line="17" pos:column="13">.</op:operator><name pos:line="17" pos:column="14">swing</name><op:operator pos:line="17" pos:column="19">.</op:operator><name pos:line="17" pos:column="20">JPanel</name></name>;</import>
<import pos:line="18" pos:column="1">import <name><name pos:line="18" pos:column="8">javax</name><op:operator pos:line="18" pos:column="13">.</op:operator><name pos:line="18" pos:column="14">swing</name><op:operator pos:line="18" pos:column="19">.</op:operator><name pos:line="18" pos:column="20">JTabbedPane</name></name>;</import>
<import pos:line="19" pos:column="1">import <name><name pos:line="19" pos:column="8">javax</name><op:operator pos:line="19" pos:column="13">.</op:operator><name pos:line="19" pos:column="14">swing</name><op:operator pos:line="19" pos:column="19">.</op:operator><name pos:line="19" pos:column="20">JTextField</name></name>;</import>
<import pos:line="20" pos:column="1">import <name><name pos:line="20" pos:column="8">javax</name><op:operator pos:line="20" pos:column="13">.</op:operator><name pos:line="20" pos:column="14">swing</name><op:operator pos:line="20" pos:column="19">.</op:operator><name pos:line="20" pos:column="20">JTextArea</name></name>;</import>

<import pos:line="22" pos:column="1">import <name><name pos:line="22" pos:column="8">com</name><op:operator pos:line="22" pos:column="11">.</op:operator><name pos:line="22" pos:column="12">umas</name><op:operator pos:line="22" pos:column="16">.</op:operator><name pos:line="22" pos:column="17">code</name><op:operator pos:line="22" pos:column="21">.</op:operator><name pos:line="22" pos:column="22">Admin</name></name>;</import>
<import pos:line="23" pos:column="1">import <name><name pos:line="23" pos:column="8">com</name><op:operator pos:line="23" pos:column="11">.</op:operator><name pos:line="23" pos:column="12">umas</name><op:operator pos:line="23" pos:column="16">.</op:operator><name pos:line="23" pos:column="17">code</name><op:operator pos:line="23" pos:column="21">.</op:operator><name pos:line="23" pos:column="22">Course</name></name>;</import>
<import pos:line="24" pos:column="1">import <name><name pos:line="24" pos:column="8">com</name><op:operator pos:line="24" pos:column="11">.</op:operator><name pos:line="24" pos:column="12">umas</name><op:operator pos:line="24" pos:column="16">.</op:operator><name pos:line="24" pos:column="17">code</name><op:operator pos:line="24" pos:column="21">.</op:operator><name pos:line="24" pos:column="22">CourseOffered</name></name>;</import>
<import pos:line="25" pos:column="1">import <name><name pos:line="25" pos:column="8">com</name><op:operator pos:line="25" pos:column="11">.</op:operator><name pos:line="25" pos:column="12">umas</name><op:operator pos:line="25" pos:column="16">.</op:operator><name pos:line="25" pos:column="17">code</name><op:operator pos:line="25" pos:column="21">.</op:operator><name pos:line="25" pos:column="22">CourseSchedule</name></name>;</import>
<import pos:line="26" pos:column="1">import <name><name pos:line="26" pos:column="8">com</name><op:operator pos:line="26" pos:column="11">.</op:operator><name pos:line="26" pos:column="12">umas</name><op:operator pos:line="26" pos:column="16">.</op:operator><name pos:line="26" pos:column="17">code</name><op:operator pos:line="26" pos:column="21">.</op:operator><name pos:line="26" pos:column="22">DBAnnotation</name></name>;</import>
<import pos:line="27" pos:column="1">import <name><name pos:line="27" pos:column="8">com</name><op:operator pos:line="27" pos:column="11">.</op:operator><name pos:line="27" pos:column="12">umas</name><op:operator pos:line="27" pos:column="16">.</op:operator><name pos:line="27" pos:column="17">code</name><op:operator pos:line="27" pos:column="21">.</op:operator><name pos:line="27" pos:column="22">Department</name></name>;</import>
<import pos:line="28" pos:column="1">import <name><name pos:line="28" pos:column="8">com</name><op:operator pos:line="28" pos:column="11">.</op:operator><name pos:line="28" pos:column="12">umas</name><op:operator pos:line="28" pos:column="16">.</op:operator><name pos:line="28" pos:column="17">code</name><op:operator pos:line="28" pos:column="21">.</op:operator><name pos:line="28" pos:column="22">People</name></name>;</import>
<import pos:line="29" pos:column="1">import <name><name pos:line="29" pos:column="8">com</name><op:operator pos:line="29" pos:column="11">.</op:operator><name pos:line="29" pos:column="12">umas</name><op:operator pos:line="29" pos:column="16">.</op:operator><name pos:line="29" pos:column="17">code</name><op:operator pos:line="29" pos:column="21">.</op:operator><name pos:line="29" pos:column="22">Professor</name></name>;</import>
<import pos:line="30" pos:column="1">import <name><name pos:line="30" pos:column="8">com</name><op:operator pos:line="30" pos:column="11">.</op:operator><name pos:line="30" pos:column="12">umas</name><op:operator pos:line="30" pos:column="16">.</op:operator><name pos:line="30" pos:column="17">code</name><op:operator pos:line="30" pos:column="21">.</op:operator><name pos:line="30" pos:column="22">Student</name></name>;</import>
<import pos:line="31" pos:column="1">import <name><name pos:line="31" pos:column="8">com</name><op:operator pos:line="31" pos:column="11">.</op:operator><name pos:line="31" pos:column="12">umas</name><op:operator pos:line="31" pos:column="16">.</op:operator><name pos:line="31" pos:column="17">code</name><op:operator pos:line="31" pos:column="21">.</op:operator><name pos:line="31" pos:column="22">TA</name></name>;</import>
<import pos:line="32" pos:column="1">import <name><name pos:line="32" pos:column="8">com</name><op:operator pos:line="32" pos:column="11">.</op:operator><name pos:line="32" pos:column="12">umas</name><op:operator pos:line="32" pos:column="16">.</op:operator><name pos:line="32" pos:column="17">code</name><op:operator pos:line="32" pos:column="21">.</op:operator><name pos:line="32" pos:column="22">Course</name><op:operator pos:line="32" pos:column="28">.</op:operator><name pos:line="32" pos:column="29">CourseDoesNotExistException</name></name>;</import>
<import pos:line="33" pos:column="1">import <name><name pos:line="33" pos:column="8">com</name><op:operator pos:line="33" pos:column="11">.</op:operator><name pos:line="33" pos:column="12">umas</name><op:operator pos:line="33" pos:column="16">.</op:operator><name pos:line="33" pos:column="17">code</name><op:operator pos:line="33" pos:column="21">.</op:operator><name pos:line="33" pos:column="22">CourseOffered</name><op:operator pos:line="33" pos:column="35">.</op:operator><name pos:line="33" pos:column="36">CourseOfferingDoesNotExistException</name></name>;</import>
<import pos:line="34" pos:column="1">import <name><name pos:line="34" pos:column="8">com</name><op:operator pos:line="34" pos:column="11">.</op:operator><name pos:line="34" pos:column="12">umas</name><op:operator pos:line="34" pos:column="16">.</op:operator><name pos:line="34" pos:column="17">code</name><op:operator pos:line="34" pos:column="21">.</op:operator><name pos:line="34" pos:column="22">Department</name><op:operator pos:line="34" pos:column="32">.</op:operator><name pos:line="34" pos:column="33">DepartmentDoesNotExistException</name></name>;</import>
<import pos:line="35" pos:column="1">import <name><name pos:line="35" pos:column="8">com</name><op:operator pos:line="35" pos:column="11">.</op:operator><name pos:line="35" pos:column="12">umas</name><op:operator pos:line="35" pos:column="16">.</op:operator><name pos:line="35" pos:column="17">code</name><op:operator pos:line="35" pos:column="21">.</op:operator><name pos:line="35" pos:column="22">People</name><op:operator pos:line="35" pos:column="28">.</op:operator><name pos:line="35" pos:column="29">PersonDoesNotExistException</name></name>;</import>
<import pos:line="36" pos:column="1">import <name><name pos:line="36" pos:column="8">com</name><op:operator pos:line="36" pos:column="11">.</op:operator><name pos:line="36" pos:column="12">umas</name><op:operator pos:line="36" pos:column="16">.</op:operator><name pos:line="36" pos:column="17">code</name><op:operator pos:line="36" pos:column="21">.</op:operator><name pos:line="36" pos:column="22">Student</name><op:operator pos:line="36" pos:column="29">.</op:operator><name pos:line="36" pos:column="30">levelNotExistException</name></name>;</import>
<import pos:line="37" pos:column="1">import <name><name pos:line="37" pos:column="8">com</name><op:operator pos:line="37" pos:column="11">.</op:operator><name pos:line="37" pos:column="12">umas</name><op:operator pos:line="37" pos:column="16">.</op:operator><name pos:line="37" pos:column="17">code</name><op:operator pos:line="37" pos:column="21">.</op:operator><name pos:line="37" pos:column="22">TA</name><op:operator pos:line="37" pos:column="24">.</op:operator><name pos:line="37" pos:column="25">AlreadyExistsInTAException</name></name>;</import>


<class><specifier pos:line="40" pos:column="1">public</specifier> class <name pos:line="40" pos:column="14">ManageDeptPeople</name> <super><extends pos:line="40" pos:column="31">extends <name pos:line="40" pos:column="39">JPanel</name></extends></super> <block pos:line="40" pos:column="46">{

	<decl_stmt><decl><type><specifier pos:line="42" pos:column="9">private</specifier> <specifier pos:line="42" pos:column="17">static</specifier> <specifier pos:line="42" pos:column="24">final</specifier> <name pos:line="42" pos:column="30">long</name></type> <name pos:line="42" pos:column="35">serialVersionUID</name> <init pos:line="42" pos:column="52">= <expr><lit:literal type="number" pos:line="42" pos:column="54">1L</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="43" pos:column="9">private</specifier> <name pos:line="43" pos:column="17">Admin</name></type> <name pos:line="43" pos:column="23">admin</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="44" pos:column="9">private</specifier> <name pos:line="44" pos:column="17">Department</name></type> <name pos:line="44" pos:column="28">adminDepartment</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="45" pos:column="9">private</specifier> <specifier pos:line="45" pos:column="17">static</specifier> <name pos:line="45" pos:column="24">ManageDeptPeople</name></type> <name pos:line="45" pos:column="41">managePeople</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><specifier pos:line="47" pos:column="9">private</specifier> <name pos:line="47" pos:column="17">JTextField</name></type> <name pos:line="47" pos:column="28">studentNameText</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="48" pos:column="9">private</specifier> <name><name pos:line="48" pos:column="17">JComboBox</name><argument_list pos:line="48" pos:column="26">&lt;<argument><name pos:line="48" pos:column="27">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="48" pos:column="36">levelSelectStudent</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="49" pos:column="9">private</specifier> <name pos:line="49" pos:column="17">JTextField</name></type> <name pos:line="49" pos:column="28">professorNameText</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="50" pos:column="9">private</specifier> <name pos:line="50" pos:column="17">JTextField</name></type> <name pos:line="50" pos:column="28">txtToBeDecided</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="51" pos:column="9">private</specifier> <name pos:line="51" pos:column="17">JTextField</name></type> <name pos:line="51" pos:column="28">txtToBeDecided_1</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="52" pos:column="9">private</specifier> <name><name pos:line="52" pos:column="17">ArrayList</name><argument_list pos:line="52" pos:column="26">&lt;<argument><name pos:line="52" pos:column="27">Student</name></argument>&gt;</argument_list></name></type> <name pos:line="52" pos:column="36">students</name> <init pos:line="52" pos:column="45">= <expr><op:operator pos:line="52" pos:column="47">new</op:operator> <call><name><name pos:line="52" pos:column="51">ArrayList</name><argument_list pos:line="52" pos:column="60">&lt;<argument><name pos:line="52" pos:column="61">Student</name></argument>&gt;</argument_list></name><argument_list pos:line="52" pos:column="69">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="53" pos:column="9">private</specifier> <name><name pos:line="53" pos:column="17">ArrayList</name><argument_list pos:line="53" pos:column="26">&lt;<argument><name pos:line="53" pos:column="27">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="53" pos:column="36">courseOffered</name> <init pos:line="53" pos:column="50">= <expr><op:operator pos:line="53" pos:column="52">new</op:operator> <call><name><name pos:line="53" pos:column="56">ArrayList</name><argument_list pos:line="53" pos:column="65">&lt;<argument><name pos:line="53" pos:column="66">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="53" pos:column="74">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="54" pos:column="9">private</specifier> <name><name pos:line="54" pos:column="17">JComboBox</name><argument_list pos:line="54" pos:column="26">&lt;<argument><name pos:line="54" pos:column="27">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="54" pos:column="36">taComboBox</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="55" pos:column="9">private</specifier> <name><name pos:line="55" pos:column="17">JComboBox</name><argument_list pos:line="55" pos:column="26">&lt;<argument><name pos:line="55" pos:column="27">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="55" pos:column="36">courseOfferIDComboBox</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="56" pos:column="9">private</specifier> <name pos:line="56" pos:column="17">JTextArea</name></type> <name pos:line="56" pos:column="27">txtrStudentDetails</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="57" pos:column="9">private</specifier> <name pos:line="57" pos:column="17">JTextArea</name></type> <name pos:line="57" pos:column="27">txtrCourseDetails</name></decl>;</decl_stmt>

	<function><type><specifier pos:line="59" pos:column="9">public</specifier> <specifier pos:line="59" pos:column="16">static</specifier> <name pos:line="59" pos:column="23">ManageDeptPeople</name></type> <name pos:line="59" pos:column="40">getInstance</name><parameter_list pos:line="59" pos:column="51">(<param><decl><type><name pos:line="59" pos:column="52">Admin</name></type> <name pos:line="59" pos:column="58">a</name></decl></param>)</parameter_list> <block pos:line="59" pos:column="61">{
		<try pos:line="60" pos:column="17">try <block pos:line="60" pos:column="21">{
			<expr_stmt><expr><name pos:line="61" pos:column="25">managePeople</name> <op:operator pos:line="61" pos:column="38">=</op:operator> <op:operator pos:line="61" pos:column="40">new</op:operator> <call><name pos:line="61" pos:column="44">ManageDeptPeople</name><argument_list pos:line="61" pos:column="60">(<argument><expr><name pos:line="61" pos:column="61">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block> <catch pos:line="62" pos:column="19">catch <parameter_list pos:line="62" pos:column="25">(<param><decl><type><name><name pos:line="62" pos:column="26">Department</name><op:operator pos:line="62" pos:column="36">.</op:operator><name pos:line="62" pos:column="37">DepartmentDoesNotExistException</name></name></type> <name pos:line="62" pos:column="69">e</name></decl></param>)</parameter_list> <block pos:line="62" pos:column="72">{
			<expr_stmt><expr><call><name><name pos:line="63" pos:column="25">e</name><op:operator pos:line="63" pos:column="26">.</op:operator><name pos:line="63" pos:column="27">printStackTrace</name></name><argument_list pos:line="63" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
		}</block></catch></try>
		<return pos:line="65" pos:column="17">return <expr><name pos:line="65" pos:column="24">managePeople</name></expr>;</return>
	}</block></function>

	<constructor><specifier pos:line="68" pos:column="9">private</specifier> <name pos:line="68" pos:column="17">ManageDeptPeople</name><parameter_list pos:line="68" pos:column="33">(<param><decl><type><name pos:line="68" pos:column="34">Admin</name></type> <name pos:line="68" pos:column="40">a</name></decl></param>)</parameter_list>
			<throws pos:line="69" pos:column="25">throws <argument><expr><name><name pos:line="69" pos:column="32">Department</name><op:operator pos:line="69" pos:column="42">.</op:operator><name pos:line="69" pos:column="43">DepartmentDoesNotExistException</name></name></expr></argument></throws> <block pos:line="69" pos:column="75">{
		<expr_stmt><expr><name pos:line="70" pos:column="17">admin</name> <op:operator pos:line="70" pos:column="23">=</op:operator> <name pos:line="70" pos:column="25">a</name></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><name pos:line="72" pos:column="17">DBAnnotation</name><op:operator pos:line="72" pos:column="29">.</op:operator><name pos:line="72" pos:column="30">annoate</name></name><argument_list pos:line="72" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="72" pos:column="38">"deptID"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="72" pos:column="48">"People"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="72" pos:column="58">"DepartmentID"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="72" pos:column="74">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="73" pos:column="17">int</name></type> <name pos:line="73" pos:column="21">deptID</name> <init pos:line="73" pos:column="28">= <expr><call><name><name pos:line="73" pos:column="30">admin</name><op:operator pos:line="73" pos:column="35">.</op:operator><name pos:line="73" pos:column="36">getDeptID</name></name><argument_list pos:line="73" pos:column="45">()</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<expr_stmt><expr><name pos:line="75" pos:column="17">adminDepartment</name> <op:operator pos:line="75" pos:column="33">=</op:operator> <op:operator pos:line="75" pos:column="35">new</op:operator> <call><name pos:line="75" pos:column="39">Department</name><argument_list pos:line="75" pos:column="49">(<argument><expr><name pos:line="75" pos:column="50">deptID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="76" pos:column="17">setLayout</name><argument_list pos:line="76" pos:column="26">(<argument><expr><lit:literal type="null" pos:line="76" pos:column="27">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="78" pos:column="17">JTabbedPane</name></type> <name pos:line="78" pos:column="29">adminTabs</name> <init pos:line="78" pos:column="39">= <expr><op:operator pos:line="78" pos:column="41">new</op:operator> <call><name pos:line="78" pos:column="45">JTabbedPane</name><argument_list pos:line="78" pos:column="56">(<argument><expr><name><name pos:line="78" pos:column="57">JTabbedPane</name><op:operator pos:line="78" pos:column="68">.</op:operator><name pos:line="78" pos:column="69">TOP</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="79" pos:column="17">adminTabs</name><op:operator pos:line="79" pos:column="26">.</op:operator><name pos:line="79" pos:column="27">setBounds</name></name><argument_list pos:line="79" pos:column="36">(<argument><expr><lit:literal type="number" pos:line="79" pos:column="37">5</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="79" pos:column="40">5</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="79" pos:column="43">700</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="79" pos:column="48">500</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="80" pos:column="17">add</name><argument_list pos:line="80" pos:column="20">(<argument><expr><name pos:line="80" pos:column="21">adminTabs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="81" pos:column="17">setBounds</name><argument_list pos:line="81" pos:column="26">(<argument><expr><lit:literal type="number" pos:line="81" pos:column="27">10</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="81" pos:column="31">10</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="81" pos:column="35">800</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="81" pos:column="40">600</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="83" pos:column="17">JPanel</name></type> <name pos:line="83" pos:column="24">addNewStudent</name> <init pos:line="83" pos:column="38">= <expr><op:operator pos:line="83" pos:column="40">new</op:operator> <call><name pos:line="83" pos:column="44">JPanel</name><argument_list pos:line="83" pos:column="50">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="84" pos:column="17">addNewStudent</name><op:operator pos:line="84" pos:column="30">.</op:operator><name pos:line="84" pos:column="31">setLayout</name></name><argument_list pos:line="84" pos:column="40">(<argument><expr><op:operator pos:line="84" pos:column="41">new</op:operator> <call><name pos:line="84" pos:column="45">GridLayout</name><argument_list pos:line="84" pos:column="55">(<argument><expr><lit:literal type="number" pos:line="84" pos:column="56">4</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="84" pos:column="59">2</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="84" pos:column="62">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="84" pos:column="65">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="85" pos:column="17">adminTabs</name><op:operator pos:line="85" pos:column="26">.</op:operator><name pos:line="85" pos:column="27">addTab</name></name><argument_list pos:line="85" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="85" pos:column="34">"Add A Student"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="85" pos:column="51">null</lit:literal></expr></argument>, <argument><expr><name pos:line="85" pos:column="57">addNewStudent</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="85" pos:column="72">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="87" pos:column="17">JLabel</name></type> <name pos:line="87" pos:column="24">studentNameLabel</name> <init pos:line="87" pos:column="41">= <expr><op:operator pos:line="87" pos:column="43">new</op:operator> <call><name pos:line="87" pos:column="47">JLabel</name><argument_list pos:line="87" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="87" pos:column="54">"Enter student name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="88" pos:column="17">addNewStudent</name><op:operator pos:line="88" pos:column="30">.</op:operator><name pos:line="88" pos:column="31">add</name></name><argument_list pos:line="88" pos:column="34">(<argument><expr><name pos:line="88" pos:column="35">studentNameLabel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><name pos:line="90" pos:column="17">studentNameText</name> <op:operator pos:line="90" pos:column="33">=</op:operator> <op:operator pos:line="90" pos:column="35">new</op:operator> <call><name pos:line="90" pos:column="39">JTextField</name><argument_list pos:line="90" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="91" pos:column="17">addNewStudent</name><op:operator pos:line="91" pos:column="30">.</op:operator><name pos:line="91" pos:column="31">add</name></name><argument_list pos:line="91" pos:column="34">(<argument><expr><name pos:line="91" pos:column="35">studentNameText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="92" pos:column="17">studentNameText</name><op:operator pos:line="92" pos:column="32">.</op:operator><name pos:line="92" pos:column="33">setColumns</name></name><argument_list pos:line="92" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="92" pos:column="44">10</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="94" pos:column="17">JLabel</name></type> <name pos:line="94" pos:column="24">lblNewLabel_1</name> <init pos:line="94" pos:column="38">= <expr><op:operator pos:line="94" pos:column="40">new</op:operator> <call><name pos:line="94" pos:column="44">JLabel</name><argument_list pos:line="94" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="94" pos:column="51">"Select Department"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="95" pos:column="17">addNewStudent</name><op:operator pos:line="95" pos:column="30">.</op:operator><name pos:line="95" pos:column="31">add</name></name><argument_list pos:line="95" pos:column="34">(<argument><expr><name pos:line="95" pos:column="35">lblNewLabel_1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="97" pos:column="17">JLabel</name></type> <name pos:line="97" pos:column="24">lblDepartmentName</name> <init pos:line="97" pos:column="42">= <expr><op:operator pos:line="97" pos:column="44">new</op:operator> <call><name pos:line="97" pos:column="48">JLabel</name><argument_list pos:line="97" pos:column="54">(
				<argument><expr><call><name><name pos:line="98" pos:column="33">adminDepartment</name><op:operator pos:line="98" pos:column="48">.</op:operator><name pos:line="98" pos:column="49">getDepartmentName</name></name><argument_list pos:line="98" pos:column="66">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="99" pos:column="17">addNewStudent</name><op:operator pos:line="99" pos:column="30">.</op:operator><name pos:line="99" pos:column="31">add</name></name><argument_list pos:line="99" pos:column="34">(<argument><expr><name pos:line="99" pos:column="35">lblDepartmentName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="101" pos:column="17">JLabel</name></type> <name pos:line="101" pos:column="24">lblNewLabel</name> <init pos:line="101" pos:column="36">= <expr><op:operator pos:line="101" pos:column="38">new</op:operator> <call><name pos:line="101" pos:column="42">JLabel</name><argument_list pos:line="101" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="101" pos:column="49">"Select Level"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="102" pos:column="17">addNewStudent</name><op:operator pos:line="102" pos:column="30">.</op:operator><name pos:line="102" pos:column="31">add</name></name><argument_list pos:line="102" pos:column="34">(<argument><expr><name pos:line="102" pos:column="35">lblNewLabel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><name pos:line="104" pos:column="17">levelSelectStudent</name> <op:operator pos:line="104" pos:column="36">=</op:operator> <op:operator pos:line="104" pos:column="38">new</op:operator> <call><name><name pos:line="104" pos:column="42">JComboBox</name><argument_list pos:line="104" pos:column="51">&lt;<argument><name pos:line="104" pos:column="52">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="104" pos:column="60">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="105" pos:column="17">levelSelectStudent</name><op:operator pos:line="105" pos:column="35">.</op:operator><name pos:line="105" pos:column="36">setModel</name></name><argument_list pos:line="105" pos:column="44">(<argument><expr><op:operator pos:line="105" pos:column="45">new</op:operator> <call><name><name pos:line="105" pos:column="49">DefaultComboBoxModel</name><argument_list pos:line="105" pos:column="69">&lt;<argument><name pos:line="105" pos:column="70">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="105" pos:column="78">(
				<argument><expr><op:operator pos:line="106" pos:column="33">new</op:operator> <name><name pos:line="106" pos:column="37">Integer</name><index pos:line="106" pos:column="44">[]</index></name> <block pos:line="106" pos:column="47">{ <expr><lit:literal type="number" pos:line="106" pos:column="49">1</lit:literal></expr><op:operator pos:line="106" pos:column="50">,</op:operator> <expr><lit:literal type="number" pos:line="106" pos:column="52">2</lit:literal></expr><op:operator pos:line="106" pos:column="53">,</op:operator> <expr><lit:literal type="number" pos:line="106" pos:column="55">3</lit:literal></expr> }</block></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="107" pos:column="17">addNewStudent</name><op:operator pos:line="107" pos:column="30">.</op:operator><name pos:line="107" pos:column="31">add</name></name><argument_list pos:line="107" pos:column="34">(<argument><expr><name pos:line="107" pos:column="35">levelSelectStudent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="109" pos:column="17">JLabel</name></type> <name pos:line="109" pos:column="24">lblNewLabel_2</name> <init pos:line="109" pos:column="38">= <expr><op:operator pos:line="109" pos:column="40">new</op:operator> <call><name pos:line="109" pos:column="44">JLabel</name><argument_list pos:line="109" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="109" pos:column="51">"Confirm changes"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="110" pos:column="17">addNewStudent</name><op:operator pos:line="110" pos:column="30">.</op:operator><name pos:line="110" pos:column="31">add</name></name><argument_list pos:line="110" pos:column="34">(<argument><expr><name pos:line="110" pos:column="35">lblNewLabel_2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="112" pos:column="17">JButton</name></type> <name pos:line="112" pos:column="25">addStudentButton</name> <init pos:line="112" pos:column="42">= <expr><op:operator pos:line="112" pos:column="44">new</op:operator> <call><name pos:line="112" pos:column="48">JButton</name><argument_list pos:line="112" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="112" pos:column="56">"Add student"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="113" pos:column="17">addStudentButton</name><op:operator pos:line="113" pos:column="33">.</op:operator><name pos:line="113" pos:column="34">addActionListener</name></name><argument_list pos:line="113" pos:column="51">(<argument><expr><op:operator pos:line="113" pos:column="52">new</op:operator> <class><super><name pos:line="113" pos:column="56">ActionListener</name></super><argument_list pos:line="113" pos:column="70">()</argument_list> <block pos:line="113" pos:column="73">{
			<function><type><specifier pos:line="114" pos:column="25">public</specifier> <name pos:line="114" pos:column="32">void</name></type> <name pos:line="114" pos:column="37">actionPerformed</name><parameter_list pos:line="114" pos:column="52">(<param><decl><type><name pos:line="114" pos:column="53">ActionEvent</name></type> <name pos:line="114" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="114" pos:column="71">{
				<decl_stmt><decl><type><name pos:line="115" pos:column="33">boolean</name></type> <name pos:line="115" pos:column="41">add</name> <init pos:line="115" pos:column="45">= <expr><call><name pos:line="115" pos:column="47">addStudent</name><argument_list pos:line="115" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="116" pos:column="33">if <condition pos:line="116" pos:column="36">(<expr><name pos:line="116" pos:column="37">add</name></expr>)</condition><then pos:line="116" pos:column="41"> <block pos:line="116" pos:column="42">{
					<expr_stmt><expr><call><name pos:line="117" pos:column="41">showMessage</name><argument_list pos:line="117" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="117" pos:column="53">"Student added successfully"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="117" pos:column="83">"Add successfull"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="118" pos:column="41">DepartmentAdminUI</name><op:operator pos:line="118" pos:column="58">.</op:operator><name pos:line="118" pos:column="59">initializeAllTabs</name></name><argument_list pos:line="118" pos:column="76">()</argument_list></call></expr>;</expr_stmt>
				}</block></then> <else pos:line="119" pos:column="35">else <block pos:line="119" pos:column="40">{
					<expr_stmt><expr><call><name pos:line="120" pos:column="41">showMessage</name><argument_list pos:line="120" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="120" pos:column="53">"Student not added"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="120" pos:column="74">"Add unsuccessfull"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></else></if>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="124" pos:column="17">addNewStudent</name><op:operator pos:line="124" pos:column="30">.</op:operator><name pos:line="124" pos:column="31">add</name></name><argument_list pos:line="124" pos:column="34">(<argument><expr><name pos:line="124" pos:column="35">addStudentButton</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="126" pos:column="17">JPanel</name></type> <name pos:line="126" pos:column="24">addNewProfessor</name> <init pos:line="126" pos:column="40">= <expr><op:operator pos:line="126" pos:column="42">new</op:operator> <call><name pos:line="126" pos:column="46">JPanel</name><argument_list pos:line="126" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="127" pos:column="17">adminTabs</name><op:operator pos:line="127" pos:column="26">.</op:operator><name pos:line="127" pos:column="27">addTab</name></name><argument_list pos:line="127" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="127" pos:column="34">"Add a professor"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="127" pos:column="53">null</lit:literal></expr></argument>, <argument><expr><name pos:line="127" pos:column="59">addNewProfessor</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="127" pos:column="76">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="128" pos:column="17">addNewProfessor</name><op:operator pos:line="128" pos:column="32">.</op:operator><name pos:line="128" pos:column="33">setLayout</name></name><argument_list pos:line="128" pos:column="42">(<argument><expr><op:operator pos:line="128" pos:column="43">new</op:operator> <call><name pos:line="128" pos:column="47">GridLayout</name><argument_list pos:line="128" pos:column="57">(<argument><expr><lit:literal type="number" pos:line="128" pos:column="58">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="128" pos:column="61">2</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="128" pos:column="64">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="128" pos:column="67">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="130" pos:column="17">JLabel</name></type> <name pos:line="130" pos:column="24">lblProfessorName</name> <init pos:line="130" pos:column="41">= <expr><op:operator pos:line="130" pos:column="43">new</op:operator> <call><name pos:line="130" pos:column="47">JLabel</name><argument_list pos:line="130" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="130" pos:column="54">"Professor name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="131" pos:column="17">addNewProfessor</name><op:operator pos:line="131" pos:column="32">.</op:operator><name pos:line="131" pos:column="33">add</name></name><argument_list pos:line="131" pos:column="36">(<argument><expr><name pos:line="131" pos:column="37">lblProfessorName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><name pos:line="133" pos:column="17">professorNameText</name> <op:operator pos:line="133" pos:column="35">=</op:operator> <op:operator pos:line="133" pos:column="37">new</op:operator> <call><name pos:line="133" pos:column="41">JTextField</name><argument_list pos:line="133" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="134" pos:column="17">addNewProfessor</name><op:operator pos:line="134" pos:column="32">.</op:operator><name pos:line="134" pos:column="33">add</name></name><argument_list pos:line="134" pos:column="36">(<argument><expr><name pos:line="134" pos:column="37">professorNameText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="135" pos:column="17">professorNameText</name><op:operator pos:line="135" pos:column="34">.</op:operator><name pos:line="135" pos:column="35">setColumns</name></name><argument_list pos:line="135" pos:column="45">(<argument><expr><lit:literal type="number" pos:line="135" pos:column="46">10</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="137" pos:column="17">JLabel</name></type> <name pos:line="137" pos:column="24">lblSelectDepartment</name> <init pos:line="137" pos:column="44">= <expr><op:operator pos:line="137" pos:column="46">new</op:operator> <call><name pos:line="137" pos:column="50">JLabel</name><argument_list pos:line="137" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="137" pos:column="57">"Select Department"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="138" pos:column="17">addNewProfessor</name><op:operator pos:line="138" pos:column="32">.</op:operator><name pos:line="138" pos:column="33">add</name></name><argument_list pos:line="138" pos:column="36">(<argument><expr><name pos:line="138" pos:column="37">lblSelectDepartment</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="140" pos:column="17">JLabel</name></type> <name pos:line="140" pos:column="24">lblDepartmentName_1</name> <init pos:line="140" pos:column="44">= <expr><op:operator pos:line="140" pos:column="46">new</op:operator> <call><name pos:line="140" pos:column="50">JLabel</name><argument_list pos:line="140" pos:column="56">(
				<argument><expr><call><name><name pos:line="141" pos:column="33">adminDepartment</name><op:operator pos:line="141" pos:column="48">.</op:operator><name pos:line="141" pos:column="49">getDepartmentName</name></name><argument_list pos:line="141" pos:column="66">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="142" pos:column="17">addNewProfessor</name><op:operator pos:line="142" pos:column="32">.</op:operator><name pos:line="142" pos:column="33">add</name></name><argument_list pos:line="142" pos:column="36">(<argument><expr><name pos:line="142" pos:column="37">lblDepartmentName_1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="144" pos:column="17">JLabel</name></type> <name pos:line="144" pos:column="24">lblOfficeLocation</name> <init pos:line="144" pos:column="42">= <expr><op:operator pos:line="144" pos:column="44">new</op:operator> <call><name pos:line="144" pos:column="48">JLabel</name><argument_list pos:line="144" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="144" pos:column="55">"Office Location"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="145" pos:column="17">addNewProfessor</name><op:operator pos:line="145" pos:column="32">.</op:operator><name pos:line="145" pos:column="33">add</name></name><argument_list pos:line="145" pos:column="36">(<argument><expr><name pos:line="145" pos:column="37">lblOfficeLocation</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><name pos:line="147" pos:column="17">txtToBeDecided</name> <op:operator pos:line="147" pos:column="32">=</op:operator> <op:operator pos:line="147" pos:column="34">new</op:operator> <call><name pos:line="147" pos:column="38">JTextField</name><argument_list pos:line="147" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="148" pos:column="17">txtToBeDecided</name><op:operator pos:line="148" pos:column="31">.</op:operator><name pos:line="148" pos:column="32">setEditable</name></name><argument_list pos:line="148" pos:column="43">(<argument><expr><lit:literal type="boolean" pos:line="148" pos:column="44">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="149" pos:column="17">txtToBeDecided</name><op:operator pos:line="149" pos:column="31">.</op:operator><name pos:line="149" pos:column="32">setText</name></name><argument_list pos:line="149" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="149" pos:column="40">"To be decided later"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="150" pos:column="17">addNewProfessor</name><op:operator pos:line="150" pos:column="32">.</op:operator><name pos:line="150" pos:column="33">add</name></name><argument_list pos:line="150" pos:column="36">(<argument><expr><name pos:line="150" pos:column="37">txtToBeDecided</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="151" pos:column="17">txtToBeDecided</name><op:operator pos:line="151" pos:column="31">.</op:operator><name pos:line="151" pos:column="32">setColumns</name></name><argument_list pos:line="151" pos:column="42">(<argument><expr><lit:literal type="number" pos:line="151" pos:column="43">10</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="153" pos:column="17">JLabel</name></type> <name pos:line="153" pos:column="24">lblOfficeHours</name> <init pos:line="153" pos:column="39">= <expr><op:operator pos:line="153" pos:column="41">new</op:operator> <call><name pos:line="153" pos:column="45">JLabel</name><argument_list pos:line="153" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="153" pos:column="52">"Office Hours"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="154" pos:column="17">addNewProfessor</name><op:operator pos:line="154" pos:column="32">.</op:operator><name pos:line="154" pos:column="33">add</name></name><argument_list pos:line="154" pos:column="36">(<argument><expr><name pos:line="154" pos:column="37">lblOfficeHours</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><name pos:line="156" pos:column="17">txtToBeDecided_1</name> <op:operator pos:line="156" pos:column="34">=</op:operator> <op:operator pos:line="156" pos:column="36">new</op:operator> <call><name pos:line="156" pos:column="40">JTextField</name><argument_list pos:line="156" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="157" pos:column="17">txtToBeDecided_1</name><op:operator pos:line="157" pos:column="33">.</op:operator><name pos:line="157" pos:column="34">setEditable</name></name><argument_list pos:line="157" pos:column="45">(<argument><expr><lit:literal type="boolean" pos:line="157" pos:column="46">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="158" pos:column="17">txtToBeDecided_1</name><op:operator pos:line="158" pos:column="33">.</op:operator><name pos:line="158" pos:column="34">setText</name></name><argument_list pos:line="158" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="158" pos:column="42">"To be decided later"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="159" pos:column="17">addNewProfessor</name><op:operator pos:line="159" pos:column="32">.</op:operator><name pos:line="159" pos:column="33">add</name></name><argument_list pos:line="159" pos:column="36">(<argument><expr><name pos:line="159" pos:column="37">txtToBeDecided_1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="160" pos:column="17">txtToBeDecided_1</name><op:operator pos:line="160" pos:column="33">.</op:operator><name pos:line="160" pos:column="34">setColumns</name></name><argument_list pos:line="160" pos:column="44">(<argument><expr><lit:literal type="number" pos:line="160" pos:column="45">10</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="162" pos:column="17">JLabel</name></type> <name pos:line="162" pos:column="24">lblConfirm</name> <init pos:line="162" pos:column="35">= <expr><op:operator pos:line="162" pos:column="37">new</op:operator> <call><name pos:line="162" pos:column="41">JLabel</name><argument_list pos:line="162" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="162" pos:column="48">"Confirm"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="163" pos:column="17">addNewProfessor</name><op:operator pos:line="163" pos:column="32">.</op:operator><name pos:line="163" pos:column="33">add</name></name><argument_list pos:line="163" pos:column="36">(<argument><expr><name pos:line="163" pos:column="37">lblConfirm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="165" pos:column="17">JButton</name></type> <name pos:line="165" pos:column="25">addProfessorButton</name> <init pos:line="165" pos:column="44">= <expr><op:operator pos:line="165" pos:column="46">new</op:operator> <call><name pos:line="165" pos:column="50">JButton</name><argument_list pos:line="165" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="165" pos:column="58">"Add Professor"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="166" pos:column="17">addProfessorButton</name><op:operator pos:line="166" pos:column="35">.</op:operator><name pos:line="166" pos:column="36">addActionListener</name></name><argument_list pos:line="166" pos:column="53">(<argument><expr><op:operator pos:line="166" pos:column="54">new</op:operator> <class><super><name pos:line="166" pos:column="58">ActionListener</name></super><argument_list pos:line="166" pos:column="72">()</argument_list> <block pos:line="166" pos:column="75">{
			<function><type><specifier pos:line="167" pos:column="25">public</specifier> <name pos:line="167" pos:column="32">void</name></type> <name pos:line="167" pos:column="37">actionPerformed</name><parameter_list pos:line="167" pos:column="52">(<param><decl><type><name pos:line="167" pos:column="53">ActionEvent</name></type> <name pos:line="167" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="167" pos:column="71">{
				<decl_stmt><decl><type><name pos:line="168" pos:column="33">boolean</name></type> <name pos:line="168" pos:column="41">add</name> <init pos:line="168" pos:column="45">= <expr><call><name pos:line="168" pos:column="47">addProfessor</name><argument_list pos:line="168" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="169" pos:column="33">if <condition pos:line="169" pos:column="36">(<expr><name pos:line="169" pos:column="37">add</name></expr>)</condition><then pos:line="169" pos:column="41"> <block pos:line="169" pos:column="42">{
					<expr_stmt><expr><call><name pos:line="170" pos:column="41">showMessage</name><argument_list pos:line="170" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="170" pos:column="53">"Professor added successfully"</lit:literal></expr></argument>,
							<argument><expr><lit:literal type="string" pos:line="171" pos:column="57">"Add successfull"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="172" pos:column="41">DepartmentAdminUI</name><op:operator pos:line="172" pos:column="58">.</op:operator><name pos:line="172" pos:column="59">initializeAllTabs</name></name><argument_list pos:line="172" pos:column="76">()</argument_list></call></expr>;</expr_stmt>
				}</block></then> <else pos:line="173" pos:column="35">else <block pos:line="173" pos:column="40">{
					<expr_stmt><expr><call><name pos:line="174" pos:column="41">showMessage</name><argument_list pos:line="174" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="174" pos:column="53">"Professor not added"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="174" pos:column="76">"Add unsuccessfull"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></else></if>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="178" pos:column="17">addNewProfessor</name><op:operator pos:line="178" pos:column="32">.</op:operator><name pos:line="178" pos:column="33">add</name></name><argument_list pos:line="178" pos:column="36">(<argument><expr><name pos:line="178" pos:column="37">addProfessorButton</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="180" pos:column="17">// -------------------Add a teaching assistant</comment>
		<comment type="line" pos:line="181" pos:column="17">// course-------------------//</comment>
		<decl_stmt><decl><type><name pos:line="182" pos:column="17">JPanel</name></type> <name pos:line="182" pos:column="24">addTeachingAssistant</name> <init pos:line="182" pos:column="45">= <expr><op:operator pos:line="182" pos:column="47">new</op:operator> <call><name pos:line="182" pos:column="51">JPanel</name><argument_list pos:line="182" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="183" pos:column="17">adminTabs</name><op:operator pos:line="183" pos:column="26">.</op:operator><name pos:line="183" pos:column="27">addTab</name></name><argument_list pos:line="183" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="183" pos:column="34">"Add a TA"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="183" pos:column="46">null</lit:literal></expr></argument>, <argument><expr><name pos:line="183" pos:column="52">addTeachingAssistant</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="183" pos:column="74">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="184" pos:column="17">addTeachingAssistant</name><op:operator pos:line="184" pos:column="37">.</op:operator><name pos:line="184" pos:column="38">setLayout</name></name><argument_list pos:line="184" pos:column="47">(<argument><expr><lit:literal type="null" pos:line="184" pos:column="48">null</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><name pos:line="186" pos:column="17">taComboBox</name> <op:operator pos:line="186" pos:column="28">=</op:operator> <op:operator pos:line="186" pos:column="30">new</op:operator> <call><name><name pos:line="186" pos:column="34">JComboBox</name><argument_list pos:line="186" pos:column="43">&lt;<argument><name pos:line="186" pos:column="44">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="186" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="187" pos:column="17">taComboBox</name><op:operator pos:line="187" pos:column="27">.</op:operator><name pos:line="187" pos:column="28">addActionListener</name></name><argument_list pos:line="187" pos:column="45">(<argument><expr><op:operator pos:line="187" pos:column="46">new</op:operator> <class><super><name pos:line="187" pos:column="50">ActionListener</name></super><argument_list pos:line="187" pos:column="64">()</argument_list> <block pos:line="187" pos:column="67">{
			<function><type><specifier pos:line="188" pos:column="25">public</specifier> <name pos:line="188" pos:column="32">void</name></type> <name pos:line="188" pos:column="37">actionPerformed</name><parameter_list pos:line="188" pos:column="52">(<param><decl><type><name pos:line="188" pos:column="53">ActionEvent</name></type> <name pos:line="188" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="188" pos:column="71">{
				<decl_stmt><decl><type><name pos:line="189" pos:column="33">Student</name></type> <name pos:line="189" pos:column="41">s</name></decl>;</decl_stmt>
				<try pos:line="190" pos:column="33">try <block pos:line="190" pos:column="37">{
					<expr_stmt><expr><name pos:line="191" pos:column="41">s</name> <op:operator pos:line="191" pos:column="43">=</op:operator> <op:operator pos:line="191" pos:column="45">new</op:operator> <call><name pos:line="191" pos:column="49">Student</name><argument_list pos:line="191" pos:column="56">(<argument><expr><call><name><name pos:line="191" pos:column="57">taComboBox</name><op:operator pos:line="191" pos:column="67">.</op:operator><name pos:line="191" pos:column="68">getItemAt</name></name><argument_list pos:line="191" pos:column="77">(<argument><expr><call><name><name pos:line="191" pos:column="78">taComboBox</name><op:operator pos:line="191" pos:column="88">.</op:operator><name pos:line="191" pos:column="89">getSelectedIndex</name></name><argument_list pos:line="191" pos:column="105">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
					<expr_stmt><expr><call><name><name pos:line="193" pos:column="41">DBAnnotation</name><op:operator pos:line="193" pos:column="53">.</op:operator><name pos:line="193" pos:column="54">annoate</name></name><argument_list pos:line="193" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="193" pos:column="62">"name"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="193" pos:column="70">"People"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="193" pos:column="80">"Name"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="193" pos:column="88">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="194" pos:column="41">String</name></type> <name pos:line="194" pos:column="48">name</name> <init pos:line="194" pos:column="53">= <expr><call><name><name pos:line="194" pos:column="55">s</name><op:operator pos:line="194" pos:column="56">.</op:operator><name pos:line="194" pos:column="57">getName</name></name><argument_list pos:line="194" pos:column="64">()</argument_list></call></expr></init></decl>;</decl_stmt>
					
					<expr_stmt><expr><call><name><name pos:line="196" pos:column="41">DBAnnotation</name><op:operator pos:line="196" pos:column="53">.</op:operator><name pos:line="196" pos:column="54">annoate</name></name><argument_list pos:line="196" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="196" pos:column="62">"gpa"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="196" pos:column="69">"student"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="196" pos:column="80">"GPA"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="196" pos:column="87">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="197" pos:column="41">double</name></type> <name pos:line="197" pos:column="48">gpa</name> <init pos:line="197" pos:column="52">= <expr><call><name><name pos:line="197" pos:column="54">s</name><op:operator pos:line="197" pos:column="55">.</op:operator><name pos:line="197" pos:column="56">getGPA</name></name><argument_list pos:line="197" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
					
					<decl_stmt><decl><type><name pos:line="199" pos:column="41">String</name></type> <name pos:line="199" pos:column="48">details</name> <init pos:line="199" pos:column="56">= <expr><lit:literal type="string" pos:line="199" pos:column="58">"Name: "</lit:literal><op:operator pos:line="199" pos:column="66">+</op:operator><name pos:line="199" pos:column="67">name</name></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><name pos:line="200" pos:column="41">details</name><op:operator pos:line="200" pos:column="48">+=</op:operator> <lit:literal type="string" pos:line="200" pos:column="51">"\nGPA: "</lit:literal><op:operator pos:line="200" pos:column="60">+</op:operator><name pos:line="200" pos:column="61">gpa</name></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="201" pos:column="41">txtrStudentDetails</name><op:operator pos:line="201" pos:column="59">.</op:operator><name pos:line="201" pos:column="60">setText</name></name><argument_list pos:line="201" pos:column="67">(<argument><expr><name pos:line="201" pos:column="68">details</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block> <catch pos:line="202" pos:column="35">catch <parameter_list pos:line="202" pos:column="41">(<param><decl><type><name><name pos:line="202" pos:column="42">People</name><op:operator pos:line="202" pos:column="48">.</op:operator><name pos:line="202" pos:column="49">PersonDoesNotExistException</name></name></type> <name pos:line="202" pos:column="77">e</name></decl></param>)</parameter_list> <block pos:line="202" pos:column="80">{
					<comment type="line" pos:line="203" pos:column="41">// TODO Auto-generated catch block</comment>
					<expr_stmt><expr><call><name><name pos:line="204" pos:column="41">e</name><op:operator pos:line="204" pos:column="42">.</op:operator><name pos:line="204" pos:column="43">printStackTrace</name></name><argument_list pos:line="204" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><name pos:line="209" pos:column="17">taComboBox</name><op:operator pos:line="209" pos:column="27">.</op:operator><name pos:line="209" pos:column="28">setBounds</name></name><argument_list pos:line="209" pos:column="37">(<argument><expr><lit:literal type="number" pos:line="209" pos:column="38">79</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="209" pos:column="42">47</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="209" pos:column="46">162</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="209" pos:column="51">20</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="210" pos:column="17">addTeachingAssistant</name><op:operator pos:line="210" pos:column="37">.</op:operator><name pos:line="210" pos:column="38">add</name></name><argument_list pos:line="210" pos:column="41">(<argument><expr><name pos:line="210" pos:column="42">taComboBox</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><name pos:line="212" pos:column="17">courseOfferIDComboBox</name> <op:operator pos:line="212" pos:column="39">=</op:operator> <op:operator pos:line="212" pos:column="41">new</op:operator> <call><name><name pos:line="212" pos:column="45">JComboBox</name><argument_list pos:line="212" pos:column="54">&lt;<argument><name pos:line="212" pos:column="55">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="212" pos:column="63">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="213" pos:column="17">courseOfferIDComboBox</name><op:operator pos:line="213" pos:column="38">.</op:operator><name pos:line="213" pos:column="39">addActionListener</name></name><argument_list pos:line="213" pos:column="56">(<argument><expr><op:operator pos:line="213" pos:column="57">new</op:operator> <class><super><name pos:line="213" pos:column="61">ActionListener</name></super><argument_list pos:line="213" pos:column="75">()</argument_list> <block pos:line="213" pos:column="78">{
			<function><type><specifier pos:line="214" pos:column="25">public</specifier> <name pos:line="214" pos:column="32">void</name></type> <name pos:line="214" pos:column="37">actionPerformed</name><parameter_list pos:line="214" pos:column="52">(<param><decl><type><name pos:line="214" pos:column="53">ActionEvent</name></type> <name pos:line="214" pos:column="65">e</name></decl></param>)</parameter_list> <block pos:line="214" pos:column="68">{
				<decl_stmt><decl><type><name pos:line="215" pos:column="33">CourseOffered</name></type> <name pos:line="215" pos:column="47">c</name></decl>;</decl_stmt>
				<try pos:line="216" pos:column="33">try <block pos:line="216" pos:column="37">{
					<expr_stmt><expr><name pos:line="217" pos:column="41">c</name> <op:operator pos:line="217" pos:column="43">=</op:operator> <op:operator pos:line="217" pos:column="45">new</op:operator> <call><name pos:line="217" pos:column="49">CourseOffered</name><argument_list pos:line="217" pos:column="62">(<argument><expr><call><name><name pos:line="217" pos:column="63">courseOfferIDComboBox</name><op:operator pos:line="217" pos:column="84">.</op:operator><name pos:line="217" pos:column="85">getItemAt</name></name><argument_list pos:line="217" pos:column="94">(<argument><expr><call><name><name pos:line="217" pos:column="95">courseOfferIDComboBox</name><op:operator pos:line="217" pos:column="116">.</op:operator><name pos:line="217" pos:column="117">getSelectedIndex</name></name><argument_list pos:line="217" pos:column="133">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
					<expr_stmt><expr><call><name><name pos:line="219" pos:column="41">DBAnnotation</name><op:operator pos:line="219" pos:column="53">.</op:operator><name pos:line="219" pos:column="54">annoate</name></name><argument_list pos:line="219" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="219" pos:column="62">"cName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="219" pos:column="71">"courses"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="219" pos:column="82">"CourseName"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="219" pos:column="96">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="220" pos:column="41">String</name></type> <name pos:line="220" pos:column="48">cName</name> <init pos:line="220" pos:column="54">= <expr><call><name><name pos:line="220" pos:column="56">c</name><op:operator pos:line="220" pos:column="57">.</op:operator><name pos:line="220" pos:column="58">getCourseName</name></name><argument_list pos:line="220" pos:column="71">()</argument_list></call></expr></init></decl>;</decl_stmt>
					
					<expr_stmt><expr><call><name><name pos:line="222" pos:column="41">DBAnnotation</name><op:operator pos:line="222" pos:column="53">.</op:operator><name pos:line="222" pos:column="54">annoate</name></name><argument_list pos:line="222" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="222" pos:column="62">"prof"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="222" pos:column="70">"people"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="222" pos:column="80">"Name"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="222" pos:column="88">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="223" pos:column="41">String</name></type> <name pos:line="223" pos:column="48">prof</name> <init pos:line="223" pos:column="53">= <expr><call><name><name pos:line="223" pos:column="55">c</name><op:operator pos:line="223" pos:column="56">.</op:operator><name pos:line="223" pos:column="57">getProfessorName</name></name><argument_list pos:line="223" pos:column="73">()</argument_list></call></expr></init></decl>;</decl_stmt>
					
					<decl_stmt><decl><type><name pos:line="225" pos:column="41">String</name></type> <name pos:line="225" pos:column="48">details</name> <init pos:line="225" pos:column="56">= <expr><lit:literal type="string" pos:line="225" pos:column="58">"Course Name: "</lit:literal><op:operator pos:line="225" pos:column="73">+</op:operator><name pos:line="225" pos:column="74">cName</name></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><name pos:line="226" pos:column="41">details</name> <op:operator pos:line="226" pos:column="49">+=</op:operator> <lit:literal type="string" pos:line="226" pos:column="52">"\nProfessor: "</lit:literal><op:operator pos:line="226" pos:column="67">+</op:operator><name pos:line="226" pos:column="68">prof</name></expr>;</expr_stmt>
					
					<expr_stmt><expr><call><name><name pos:line="228" pos:column="41">txtrCourseDetails</name><op:operator pos:line="228" pos:column="58">.</op:operator><name pos:line="228" pos:column="59">setText</name></name><argument_list pos:line="228" pos:column="66">(<argument><expr><name pos:line="228" pos:column="67">details</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block> <catch pos:line="229" pos:column="35">catch <parameter_list pos:line="229" pos:column="41">(<param><decl><type><name><name pos:line="229" pos:column="42">Course</name><op:operator pos:line="229" pos:column="48">.</op:operator><name pos:line="229" pos:column="49">CourseDoesNotExistException</name></name></type> <name pos:line="229" pos:column="77">e1</name></decl></param>)</parameter_list> <block pos:line="229" pos:column="81">{
					<comment type="line" pos:line="230" pos:column="41">// TODO Auto-generated catch block</comment>
					<expr_stmt><expr><call><name><name pos:line="231" pos:column="41">e1</name><op:operator pos:line="231" pos:column="43">.</op:operator><name pos:line="231" pos:column="44">printStackTrace</name></name><argument_list pos:line="231" pos:column="59">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch> <catch pos:line="232" pos:column="35">catch <parameter_list pos:line="232" pos:column="41">(<param><decl><type><name><name pos:line="232" pos:column="42">CourseOffered</name><op:operator pos:line="232" pos:column="55">.</op:operator><name pos:line="232" pos:column="56">CourseOfferingDoesNotExistException</name></name></type> <name pos:line="232" pos:column="92">e1</name></decl></param>)</parameter_list> <block pos:line="232" pos:column="96">{
					<comment type="line" pos:line="233" pos:column="41">// TODO Auto-generated catch block</comment>
					<expr_stmt><expr><call><name><name pos:line="234" pos:column="41">e1</name><op:operator pos:line="234" pos:column="43">.</op:operator><name pos:line="234" pos:column="44">printStackTrace</name></name><argument_list pos:line="234" pos:column="59">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="238" pos:column="17">courseOfferIDComboBox</name><op:operator pos:line="238" pos:column="38">.</op:operator><name pos:line="238" pos:column="39">setBounds</name></name><argument_list pos:line="238" pos:column="48">(<argument><expr><lit:literal type="number" pos:line="238" pos:column="49">416</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="238" pos:column="54">47</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="238" pos:column="58">162</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="238" pos:column="63">20</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="239" pos:column="17">addTeachingAssistant</name><op:operator pos:line="239" pos:column="37">.</op:operator><name pos:line="239" pos:column="38">add</name></name><argument_list pos:line="239" pos:column="41">(<argument><expr><name pos:line="239" pos:column="42">courseOfferIDComboBox</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="241" pos:column="17">JButton</name></type> <name pos:line="241" pos:column="25">btnAddTa</name> <init pos:line="241" pos:column="34">= <expr><op:operator pos:line="241" pos:column="36">new</op:operator> <call><name pos:line="241" pos:column="40">JButton</name><argument_list pos:line="241" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="241" pos:column="48">"Add TA"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="242" pos:column="17">btnAddTa</name><op:operator pos:line="242" pos:column="25">.</op:operator><name pos:line="242" pos:column="26">addActionListener</name></name><argument_list pos:line="242" pos:column="43">(<argument><expr><op:operator pos:line="242" pos:column="44">new</op:operator> <class><super><name pos:line="242" pos:column="48">ActionListener</name></super><argument_list pos:line="242" pos:column="62">()</argument_list> <block pos:line="242" pos:column="65">{
			<function><type><specifier pos:line="243" pos:column="25">public</specifier> <name pos:line="243" pos:column="32">void</name></type> <name pos:line="243" pos:column="37">actionPerformed</name><parameter_list pos:line="243" pos:column="52">(<param><decl><type><name pos:line="243" pos:column="53">ActionEvent</name></type> <name pos:line="243" pos:column="65">arg0</name></decl></param>)</parameter_list> <block pos:line="243" pos:column="71">{
				<if pos:line="244" pos:column="33">if<condition pos:line="244" pos:column="35">(<expr><call><name><name pos:line="244" pos:column="36">taComboBox</name><op:operator pos:line="244" pos:column="46">.</op:operator><name pos:line="244" pos:column="47">getSelectedIndex</name></name><argument_list pos:line="244" pos:column="63">()</argument_list></call><op:operator pos:line="244" pos:column="65">&lt;</op:operator><lit:literal type="number" pos:line="244" pos:column="66">0</lit:literal></expr>)</condition><then><block pos:line="244" pos:column="68">{
					<expr_stmt><expr><call><name pos:line="245" pos:column="41">showMessage</name><argument_list pos:line="245" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="245" pos:column="53">"Please select a student first"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="245" pos:column="86">"Error"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="246" pos:column="41">return;</return>
				}</block></then></if>
				
				<if pos:line="249" pos:column="33">if<condition pos:line="249" pos:column="35">(<expr><call><name><name pos:line="249" pos:column="36">courseOfferIDComboBox</name><op:operator pos:line="249" pos:column="57">.</op:operator><name pos:line="249" pos:column="58">getSelectedIndex</name></name><argument_list pos:line="249" pos:column="74">()</argument_list></call><op:operator pos:line="249" pos:column="76">&lt;</op:operator><lit:literal type="number" pos:line="249" pos:column="77">0</lit:literal></expr>)</condition><then><block pos:line="249" pos:column="79">{
					<expr_stmt><expr><call><name pos:line="250" pos:column="41">showMessage</name><argument_list pos:line="250" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="250" pos:column="53">"Select a course first"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="250" pos:column="78">"Error"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="251" pos:column="41">return;</return>
				}</block></then></if>
				
				<try pos:line="254" pos:column="33">try <block pos:line="254" pos:column="37">{
					<decl_stmt><decl><type><name pos:line="255" pos:column="41">Student</name></type> <name pos:line="255" pos:column="49">s</name> <init pos:line="255" pos:column="51">= <expr><op:operator pos:line="255" pos:column="53">new</op:operator> <call><name pos:line="255" pos:column="57">Student</name><argument_list pos:line="255" pos:column="64">(<argument><expr><op:operator pos:line="255" pos:column="65">(</op:operator><name pos:line="255" pos:column="66">Integer</name><op:operator pos:line="255" pos:column="73">)</op:operator> <call><name><name pos:line="255" pos:column="75">taComboBox</name><op:operator pos:line="255" pos:column="85">.</op:operator><name pos:line="255" pos:column="86">getSelectedItem</name></name><argument_list pos:line="255" pos:column="101">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					
					<expr_stmt><expr><call><name><name pos:line="257" pos:column="41">DBAnnotation</name><op:operator pos:line="257" pos:column="53">.</op:operator><name pos:line="257" pos:column="54">annoate</name></name><argument_list pos:line="257" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="257" pos:column="62">"uin"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="257" pos:column="69">"student"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="257" pos:column="80">"UIN"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="257" pos:column="87">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="258" pos:column="41">int</name></type> <name pos:line="258" pos:column="45">uin</name> <init pos:line="258" pos:column="49">= <expr><call><name><name pos:line="258" pos:column="51">s</name><op:operator pos:line="258" pos:column="52">.</op:operator><name pos:line="258" pos:column="53">getUIN</name></name><argument_list pos:line="258" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="259" pos:column="41">TA</name><op:operator pos:line="259" pos:column="43">.</op:operator><name pos:line="259" pos:column="44">addTAtoTAtable</name></name><argument_list pos:line="259" pos:column="58">(<argument><expr><name pos:line="259" pos:column="59">uin</name></expr></argument>,	<argument><expr><op:operator pos:line="259" pos:column="65">(</op:operator><name pos:line="259" pos:column="66">Integer</name><op:operator pos:line="259" pos:column="73">)</op:operator> <call><name><name pos:line="259" pos:column="75">courseOfferIDComboBox</name><op:operator pos:line="259" pos:column="96">.</op:operator><name pos:line="259" pos:column="97">getSelectedItem</name></name><argument_list pos:line="259" pos:column="112">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="260" pos:column="41">showMessage</name><argument_list pos:line="260" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="260" pos:column="53">"Added a TA successfully"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="260" pos:column="80">"Success"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="261" pos:column="41">DepartmentAdminUI</name><op:operator pos:line="261" pos:column="58">.</op:operator><name pos:line="261" pos:column="59">initializeAllTabs</name></name><argument_list pos:line="261" pos:column="76">()</argument_list></call></expr>;</expr_stmt>
					
				}</block> <catch pos:line="263" pos:column="35">catch <parameter_list pos:line="263" pos:column="41">(<param><decl><type><name><name pos:line="263" pos:column="42">TA</name><op:operator pos:line="263" pos:column="44">.</op:operator><name pos:line="263" pos:column="45">AlreadyExistsInTAException</name></name></type> <name pos:line="263" pos:column="72">e</name></decl></param>)</parameter_list> <block pos:line="263" pos:column="75">{
					<expr_stmt><expr><call><name pos:line="264" pos:column="41">showMessage</name><argument_list pos:line="264" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="264" pos:column="53">"TA already exists"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="264" pos:column="74">"Failure"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="265" pos:column="41">e</name><op:operator pos:line="265" pos:column="42">.</op:operator><name pos:line="265" pos:column="43">printStackTrace</name></name><argument_list pos:line="265" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch> <catch pos:line="266" pos:column="35">catch <parameter_list pos:line="266" pos:column="41">(<param><decl><type><name><name pos:line="266" pos:column="42">People</name><op:operator pos:line="266" pos:column="48">.</op:operator><name pos:line="266" pos:column="49">PersonDoesNotExistException</name></name></type> <name pos:line="266" pos:column="77">e</name></decl></param>)</parameter_list> <block pos:line="266" pos:column="80">{
					<comment type="line" pos:line="267" pos:column="41">// TODO Auto-generated catch block</comment>
					<expr_stmt><expr><call><name><name pos:line="268" pos:column="41">e</name><op:operator pos:line="268" pos:column="42">.</op:operator><name pos:line="268" pos:column="43">printStackTrace</name></name><argument_list pos:line="268" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
			}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="272" pos:column="17">btnAddTa</name><op:operator pos:line="272" pos:column="25">.</op:operator><name pos:line="272" pos:column="26">setBounds</name></name><argument_list pos:line="272" pos:column="35">(<argument><expr><lit:literal type="number" pos:line="272" pos:column="36">261</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="272" pos:column="41">283</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="272" pos:column="46">136</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="272" pos:column="51">40</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="273" pos:column="17">addTeachingAssistant</name><op:operator pos:line="273" pos:column="37">.</op:operator><name pos:line="273" pos:column="38">add</name></name><argument_list pos:line="273" pos:column="41">(<argument><expr><name pos:line="273" pos:column="42">btnAddTa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="275" pos:column="17">txtrStudentDetails</name> <op:operator pos:line="275" pos:column="36">=</op:operator> <op:operator pos:line="275" pos:column="38">new</op:operator> <call><name pos:line="275" pos:column="42">JTextArea</name><argument_list pos:line="275" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="276" pos:column="17">txtrStudentDetails</name><op:operator pos:line="276" pos:column="35">.</op:operator><name pos:line="276" pos:column="36">setEditable</name></name><argument_list pos:line="276" pos:column="47">(<argument><expr><lit:literal type="boolean" pos:line="276" pos:column="48">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="277" pos:column="17">txtrStudentDetails</name><op:operator pos:line="277" pos:column="35">.</op:operator><name pos:line="277" pos:column="36">setText</name></name><argument_list pos:line="277" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="277" pos:column="44">"Student Details"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="278" pos:column="17">txtrStudentDetails</name><op:operator pos:line="278" pos:column="35">.</op:operator><name pos:line="278" pos:column="36">setBounds</name></name><argument_list pos:line="278" pos:column="45">(<argument><expr><lit:literal type="number" pos:line="278" pos:column="46">79</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="278" pos:column="50">87</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="278" pos:column="54">162</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="278" pos:column="59">149</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="279" pos:column="17">addTeachingAssistant</name><op:operator pos:line="279" pos:column="37">.</op:operator><name pos:line="279" pos:column="38">add</name></name><argument_list pos:line="279" pos:column="41">(<argument><expr><name pos:line="279" pos:column="42">txtrStudentDetails</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="281" pos:column="17">JLabel</name></type> <name pos:line="281" pos:column="24">lblSelectStudent</name> <init pos:line="281" pos:column="41">= <expr><op:operator pos:line="281" pos:column="43">new</op:operator> <call><name pos:line="281" pos:column="47">JLabel</name><argument_list pos:line="281" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="281" pos:column="54">"Select student"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="282" pos:column="17">lblSelectStudent</name><op:operator pos:line="282" pos:column="33">.</op:operator><name pos:line="282" pos:column="34">setBounds</name></name><argument_list pos:line="282" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="282" pos:column="44">129</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="282" pos:column="49">22</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="282" pos:column="53">130</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="282" pos:column="58">14</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="283" pos:column="17">addTeachingAssistant</name><op:operator pos:line="283" pos:column="37">.</op:operator><name pos:line="283" pos:column="38">add</name></name><argument_list pos:line="283" pos:column="41">(<argument><expr><name pos:line="283" pos:column="42">lblSelectStudent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="285" pos:column="17">JLabel</name></type> <name pos:line="285" pos:column="24">lblSelectCourse</name> <init pos:line="285" pos:column="40">= <expr><op:operator pos:line="285" pos:column="42">new</op:operator> <call><name pos:line="285" pos:column="46">JLabel</name><argument_list pos:line="285" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="285" pos:column="53">"Select Course"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="286" pos:column="17">lblSelectCourse</name><op:operator pos:line="286" pos:column="32">.</op:operator><name pos:line="286" pos:column="33">setBounds</name></name><argument_list pos:line="286" pos:column="42">(<argument><expr><lit:literal type="number" pos:line="286" pos:column="43">448</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="286" pos:column="48">22</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="286" pos:column="52">111</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="286" pos:column="57">14</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="287" pos:column="17">addTeachingAssistant</name><op:operator pos:line="287" pos:column="37">.</op:operator><name pos:line="287" pos:column="38">add</name></name><argument_list pos:line="287" pos:column="41">(<argument><expr><name pos:line="287" pos:column="42">lblSelectCourse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="289" pos:column="17">txtrCourseDetails</name> <op:operator pos:line="289" pos:column="35">=</op:operator> <op:operator pos:line="289" pos:column="37">new</op:operator> <call><name pos:line="289" pos:column="41">JTextArea</name><argument_list pos:line="289" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="290" pos:column="17">txtrCourseDetails</name><op:operator pos:line="290" pos:column="34">.</op:operator><name pos:line="290" pos:column="35">setText</name></name><argument_list pos:line="290" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="290" pos:column="43">"Course Details"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="291" pos:column="17">txtrCourseDetails</name><op:operator pos:line="291" pos:column="34">.</op:operator><name pos:line="291" pos:column="35">setBounds</name></name><argument_list pos:line="291" pos:column="44">(<argument><expr><lit:literal type="number" pos:line="291" pos:column="45">416</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="291" pos:column="50">87</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="291" pos:column="54">162</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="291" pos:column="59">149</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="292" pos:column="17">addTeachingAssistant</name><op:operator pos:line="292" pos:column="37">.</op:operator><name pos:line="292" pos:column="38">add</name></name><argument_list pos:line="292" pos:column="41">(<argument><expr><name pos:line="292" pos:column="42">txtrCourseDetails</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name pos:line="294" pos:column="17">initializeValues</name><argument_list pos:line="294" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
	}</block></constructor>

	<function><type><specifier pos:line="297" pos:column="9">public</specifier> <name pos:line="297" pos:column="16">boolean</name></type> <name pos:line="297" pos:column="24">checkStringForName</name><parameter_list pos:line="297" pos:column="42">(<param><decl><type><name pos:line="297" pos:column="43">String</name></type> <name pos:line="297" pos:column="50">s</name></decl></param>)</parameter_list> <block pos:line="297" pos:column="53">{
		<return pos:line="298" pos:column="17">return <expr><call><name><name pos:line="298" pos:column="24">s</name><op:operator pos:line="298" pos:column="25">.</op:operator><name pos:line="298" pos:column="26">matches</name></name><argument_list pos:line="298" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="298" pos:column="34">"[a-zA-Z]+( [a-zA-Z]+)?"</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
	}</block></function>

	<function><type><specifier pos:line="301" pos:column="9">public</specifier> <name pos:line="301" pos:column="16">void</name></type> <name pos:line="301" pos:column="21">showMessage</name><parameter_list pos:line="301" pos:column="32">(<param><decl><type><name pos:line="301" pos:column="33">String</name></type> <name pos:line="301" pos:column="40">message</name></decl></param>, <param><decl><type><name pos:line="301" pos:column="49">String</name></type> <name pos:line="301" pos:column="56">title</name></decl></param>)</parameter_list> <block pos:line="301" pos:column="63">{
		<expr_stmt><expr><call><name><name pos:line="302" pos:column="17">JOptionPane</name><op:operator pos:line="302" pos:column="28">.</op:operator><name pos:line="302" pos:column="29">showMessageDialog</name></name><argument_list pos:line="302" pos:column="46">(<argument><expr><lit:literal type="null" pos:line="302" pos:column="47">null</lit:literal></expr></argument>, <argument><expr><name pos:line="302" pos:column="53">message</name></expr></argument>, <argument><expr><name pos:line="302" pos:column="62">title</name></expr></argument>,
				<argument><expr><name><name pos:line="303" pos:column="33">JOptionPane</name><op:operator pos:line="303" pos:column="44">.</op:operator><name pos:line="303" pos:column="45">INFORMATION_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<function><type><specifier pos:line="306" pos:column="9">public</specifier> <name pos:line="306" pos:column="16">boolean</name></type> <name pos:line="306" pos:column="24">addStudent</name><parameter_list pos:line="306" pos:column="34">()</parameter_list> <block pos:line="306" pos:column="37">{
		<decl_stmt><decl><type><name pos:line="307" pos:column="17">boolean</name></type> <name pos:line="307" pos:column="25">isAdded</name> <init pos:line="307" pos:column="33">= <expr><lit:literal type="boolean" pos:line="307" pos:column="35">false</lit:literal></expr></init></decl>;</decl_stmt>
		<if pos:line="308" pos:column="17">if <condition pos:line="308" pos:column="20">(<expr><op:operator pos:line="308" pos:column="21">!</op:operator><call><name pos:line="308" pos:column="22">checkStringForName</name><argument_list pos:line="308" pos:column="40">(<argument><expr><call><name><name pos:line="308" pos:column="41">studentNameText</name><op:operator pos:line="308" pos:column="56">.</op:operator><name pos:line="308" pos:column="57">getText</name></name><argument_list pos:line="308" pos:column="64">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="308" pos:column="68"> <block pos:line="308" pos:column="69">{
			<expr_stmt><expr><call><name pos:line="309" pos:column="25">showMessage</name><argument_list pos:line="309" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="309" pos:column="37">"Student name is in incorrect format"</lit:literal></expr></argument>,
					<argument><expr><lit:literal type="string" pos:line="310" pos:column="41">"Error in student name"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="311" pos:column="25">return <expr><lit:literal type="boolean" pos:line="311" pos:column="32">false</lit:literal></expr>;</return>
		}</block></then></if>
		<decl_stmt><decl><type><name pos:line="313" pos:column="17">Department</name></type> <name pos:line="313" pos:column="28">dept</name></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="314" pos:column="17">dept</name> <op:operator pos:line="314" pos:column="22">=</op:operator> <name pos:line="314" pos:column="24">adminDepartment</name></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="315" pos:column="17">int</name></type> <name pos:line="315" pos:column="21">level</name> <init pos:line="315" pos:column="27">= <expr><call><name><name pos:line="315" pos:column="29">levelSelectStudent</name><op:operator pos:line="315" pos:column="47">.</op:operator><name pos:line="315" pos:column="48">getSelectedIndex</name></name><argument_list pos:line="315" pos:column="64">()</argument_list></call> <op:operator pos:line="315" pos:column="67">+</op:operator> <lit:literal type="number" pos:line="315" pos:column="69">1</lit:literal></expr></init></decl>;</decl_stmt>
		<try pos:line="316" pos:column="17">try <block pos:line="316" pos:column="21">{
			<expr_stmt><expr><name pos:line="317" pos:column="25">isAdded</name> <op:operator pos:line="317" pos:column="33">=</op:operator> <call><name><name pos:line="317" pos:column="35">Student</name>
					<op:operator pos:line="318" pos:column="41">.</op:operator><name pos:line="318" pos:column="42">addStudentToDb</name></name><argument_list pos:line="318" pos:column="56">(<argument><expr><call><name><name pos:line="318" pos:column="57">studentNameText</name><op:operator pos:line="318" pos:column="72">.</op:operator><name pos:line="318" pos:column="73">getText</name></name><argument_list pos:line="318" pos:column="80">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="318" pos:column="84">dept</name></expr></argument>, <argument><expr><name pos:line="318" pos:column="90">level</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block> <catch pos:line="319" pos:column="19">catch <parameter_list pos:line="319" pos:column="25">(<param><decl><type><name><name pos:line="319" pos:column="26">Student</name><op:operator pos:line="319" pos:column="33">.</op:operator><name pos:line="319" pos:column="34">levelNotExistException</name></name></type> <name pos:line="319" pos:column="57">e</name></decl></param>)</parameter_list> <block pos:line="319" pos:column="60">{
			<comment type="line" pos:line="320" pos:column="25">// TODO Auto-generated catch block</comment>
			<expr_stmt><expr><call><name><name pos:line="321" pos:column="25">e</name><op:operator pos:line="321" pos:column="26">.</op:operator><name pos:line="321" pos:column="27">printStackTrace</name></name><argument_list pos:line="321" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
		}</block></catch></try>

		<return pos:line="324" pos:column="17">return <expr><name pos:line="324" pos:column="24">isAdded</name></expr>;</return>
	}</block></function>

	<function><type><specifier pos:line="327" pos:column="9">public</specifier> <name pos:line="327" pos:column="16">boolean</name></type> <name pos:line="327" pos:column="24">addProfessor</name><parameter_list pos:line="327" pos:column="36">()</parameter_list> <block pos:line="327" pos:column="39">{
		<decl_stmt><decl><type><name pos:line="328" pos:column="17">boolean</name></type> <name pos:line="328" pos:column="25">isAdded</name> <init pos:line="328" pos:column="33">= <expr><lit:literal type="boolean" pos:line="328" pos:column="35">false</lit:literal></expr></init></decl>;</decl_stmt>
		<if pos:line="329" pos:column="17">if <condition pos:line="329" pos:column="20">(<expr><op:operator pos:line="329" pos:column="21">!</op:operator><call><name pos:line="329" pos:column="22">checkStringForName</name><argument_list pos:line="329" pos:column="40">(<argument><expr><call><name><name pos:line="329" pos:column="41">professorNameText</name><op:operator pos:line="329" pos:column="58">.</op:operator><name pos:line="329" pos:column="59">getText</name></name><argument_list pos:line="329" pos:column="66">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="329" pos:column="70"> <block pos:line="329" pos:column="71">{
			<expr_stmt><expr><call><name pos:line="330" pos:column="25">showMessage</name><argument_list pos:line="330" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="330" pos:column="37">"Professor name is in incorrect format"</lit:literal></expr></argument>,
					<argument><expr><lit:literal type="string" pos:line="331" pos:column="41">"Error in professor name"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="332" pos:column="25">return <expr><lit:literal type="boolean" pos:line="332" pos:column="32">false</lit:literal></expr>;</return>
		}</block></then></if>
		<decl_stmt><decl><type><name pos:line="334" pos:column="17">Department</name></type> <name pos:line="334" pos:column="28">dept</name></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="335" pos:column="17">dept</name> <op:operator pos:line="335" pos:column="22">=</op:operator> <name pos:line="335" pos:column="24">adminDepartment</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="336" pos:column="17">isAdded</name> <op:operator pos:line="336" pos:column="25">=</op:operator> <call><name><name pos:line="336" pos:column="27">Professor</name><op:operator pos:line="336" pos:column="36">.</op:operator><name pos:line="336" pos:column="37">addProfToDb</name></name><argument_list pos:line="336" pos:column="48">(<argument><expr><call><name><name pos:line="336" pos:column="49">professorNameText</name><op:operator pos:line="336" pos:column="66">.</op:operator><name pos:line="336" pos:column="67">getText</name></name><argument_list pos:line="336" pos:column="74">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="336" pos:column="78">dept</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="337" pos:column="17">return <expr><name pos:line="337" pos:column="24">isAdded</name></expr>;</return>

	}</block></function>

	<function><type><specifier pos:line="341" pos:column="9">public</specifier> <name pos:line="341" pos:column="16">void</name></type> <name pos:line="341" pos:column="21">initializeValues</name><parameter_list pos:line="341" pos:column="37">()</parameter_list> <block pos:line="341" pos:column="40">{

		<decl_stmt><decl><type><name><name pos:line="343" pos:column="17">ArrayList</name><argument_list pos:line="343" pos:column="26">&lt;<argument><name pos:line="343" pos:column="27">Student</name></argument>&gt;</argument_list></name></type> <name pos:line="343" pos:column="36">allStudents</name> <init pos:line="343" pos:column="48">= <expr><call><name><name pos:line="343" pos:column="50">Student</name><op:operator pos:line="343" pos:column="57">.</op:operator><name pos:line="343" pos:column="58">getAllStudents</name></name><argument_list pos:line="343" pos:column="72">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="344" pos:column="17">students</name> <op:operator pos:line="344" pos:column="26">=</op:operator> <op:operator pos:line="344" pos:column="28">new</op:operator> <call><name><name pos:line="344" pos:column="32">ArrayList</name><argument_list pos:line="344" pos:column="41">&lt;<argument><name pos:line="344" pos:column="42">Student</name></argument>&gt;</argument_list></name><argument_list pos:line="344" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
		<for pos:line="345" pos:column="17">for (<init><decl><type><name pos:line="345" pos:column="22">Student</name></type> <name pos:line="345" pos:column="30">s</name> <range pos:line="345" pos:column="32">: <expr><name pos:line="345" pos:column="34">allStudents</name></expr></range></decl></init>) <block pos:line="345" pos:column="47">{
			
			<expr_stmt><expr><call><name><name pos:line="347" pos:column="25">DBAnnotation</name><op:operator pos:line="347" pos:column="37">.</op:operator><name pos:line="347" pos:column="38">annoate</name></name><argument_list pos:line="347" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="347" pos:column="46">"sDeptID"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="347" pos:column="57">"people"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="347" pos:column="67">"DepartmentID"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="347" pos:column="83">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="348" pos:column="25">int</name></type> <name pos:line="348" pos:column="29">sDeptID</name> <init pos:line="348" pos:column="37">= <expr><call><name><name pos:line="348" pos:column="39">s</name><op:operator pos:line="348" pos:column="40">.</op:operator><name pos:line="348" pos:column="41">getDeptID</name></name><argument_list pos:line="348" pos:column="50">()</argument_list></call></expr></init></decl>;</decl_stmt>
			
			<expr_stmt><expr><call><name><name pos:line="350" pos:column="25">DBAnnotation</name><op:operator pos:line="350" pos:column="37">.</op:operator><name pos:line="350" pos:column="38">annoate</name></name><argument_list pos:line="350" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="350" pos:column="46">"aDeptID"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="350" pos:column="57">"people"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="350" pos:column="67">"DepartmentID"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="350" pos:column="83">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="351" pos:column="25">int</name></type> <name pos:line="351" pos:column="29">aDeptID</name> <init pos:line="351" pos:column="37">= <expr><call><name><name pos:line="351" pos:column="39">adminDepartment</name><op:operator pos:line="351" pos:column="54">.</op:operator><name pos:line="351" pos:column="55">getDepartmentID</name></name><argument_list pos:line="351" pos:column="70">()</argument_list></call></expr></init></decl>;</decl_stmt>
			
			<if pos:line="353" pos:column="25">if <condition pos:line="353" pos:column="28">(<expr><name pos:line="353" pos:column="29">sDeptID</name> <op:operator pos:line="353" pos:column="37">==</op:operator> <name pos:line="353" pos:column="40">aDeptID</name></expr>)</condition><then pos:line="353" pos:column="48"> <block pos:line="353" pos:column="49">{
				<expr_stmt><expr><call><name><name pos:line="354" pos:column="33">students</name><op:operator pos:line="354" pos:column="41">.</op:operator><name pos:line="354" pos:column="42">add</name></name><argument_list pos:line="354" pos:column="45">(<argument><expr><name pos:line="354" pos:column="46">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></for>
		
		<decl_stmt><decl><type><name><name pos:line="358" pos:column="17">DefaultComboBoxModel</name><argument_list pos:line="358" pos:column="37">&lt;<argument><name pos:line="358" pos:column="38">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="358" pos:column="47">allStudentsModel</name> <init pos:line="358" pos:column="64">= <expr><op:operator pos:line="358" pos:column="66">new</op:operator> <call><name><name pos:line="358" pos:column="70">DefaultComboBoxModel</name><argument_list pos:line="358" pos:column="90">&lt;<argument><name pos:line="358" pos:column="91">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="358" pos:column="99">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:line="359" pos:column="17">for (<init><decl><type><name pos:line="359" pos:column="22">Student</name></type> <name pos:line="359" pos:column="30">s</name> <range pos:line="359" pos:column="32">: <expr><name pos:line="359" pos:column="34">students</name></expr></range></decl></init>) <block pos:line="359" pos:column="44">{
			<expr_stmt><expr><call><name><name pos:line="360" pos:column="25">allStudentsModel</name><op:operator pos:line="360" pos:column="41">.</op:operator><name pos:line="360" pos:column="42">addElement</name></name><argument_list pos:line="360" pos:column="52">(<argument><expr><call><name><name pos:line="360" pos:column="53">s</name><op:operator pos:line="360" pos:column="54">.</op:operator><name pos:line="360" pos:column="55">getUIN</name></name><argument_list pos:line="360" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		
		<decl_stmt><decl><type><name><name pos:line="363" pos:column="17">ArrayList</name><argument_list pos:line="363" pos:column="26">&lt;<argument><name pos:line="363" pos:column="27">TA</name></argument>&gt;</argument_list></name></type> <name pos:line="363" pos:column="31">tas</name> <init pos:line="363" pos:column="35">= <expr><call><name><name pos:line="363" pos:column="37">TA</name><op:operator pos:line="363" pos:column="39">.</op:operator><name pos:line="363" pos:column="40">getAllTAs</name></name><argument_list pos:line="363" pos:column="49">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:line="364" pos:column="17">for (<init><decl><type><name pos:line="364" pos:column="22">Student</name></type> <name pos:line="364" pos:column="30">s</name> <range pos:line="364" pos:column="32">: <expr><name pos:line="364" pos:column="34">tas</name></expr></range></decl></init>) <block pos:line="364" pos:column="39">{
			<expr_stmt><expr><call><name><name pos:line="365" pos:column="25">allStudentsModel</name><op:operator pos:line="365" pos:column="41">.</op:operator><name pos:line="365" pos:column="42">addElement</name></name><argument_list pos:line="365" pos:column="52">(<argument><expr><call><name><name pos:line="365" pos:column="53">s</name><op:operator pos:line="365" pos:column="54">.</op:operator><name pos:line="365" pos:column="55">getUIN</name></name><argument_list pos:line="365" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		<expr_stmt><expr><call><name><name pos:line="367" pos:column="17">taComboBox</name><op:operator pos:line="367" pos:column="27">.</op:operator><name pos:line="367" pos:column="28">setModel</name></name><argument_list pos:line="367" pos:column="36">(<argument><expr><name pos:line="367" pos:column="37">allStudentsModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<if pos:line="369" pos:column="17">if<condition pos:line="369" pos:column="19">(<expr><call><name><name pos:line="369" pos:column="20">allStudentsModel</name><op:operator pos:line="369" pos:column="36">.</op:operator><name pos:line="369" pos:column="37">getSize</name></name><argument_list pos:line="369" pos:column="44">()</argument_list></call><op:operator pos:line="369" pos:column="46">&gt;</op:operator><lit:literal type="number" pos:line="369" pos:column="47">0</lit:literal></expr>)</condition><then pos:line="369" pos:column="49">
			<expr_stmt><expr><call><name><name pos:line="370" pos:column="25">taComboBox</name><op:operator pos:line="370" pos:column="35">.</op:operator><name pos:line="370" pos:column="36">setSelectedIndex</name></name><argument_list pos:line="370" pos:column="52">(<argument><expr><lit:literal type="number" pos:line="370" pos:column="53">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

		<decl_stmt><decl><type><name><name pos:line="372" pos:column="17">ArrayList</name><argument_list pos:line="372" pos:column="26">&lt;<argument><name pos:line="372" pos:column="27">CourseSchedule</name></argument>&gt;</argument_list></name></type> <name pos:line="372" pos:column="43">allCoursesScheduled</name> <init pos:line="372" pos:column="63">= <expr><call><name><name pos:line="372" pos:column="65">CourseSchedule</name><op:operator pos:line="372" pos:column="79">.</op:operator><name pos:line="372" pos:column="80">getAllScheduledCourses</name></name><argument_list pos:line="372" pos:column="102">(<argument><expr><name pos:line="372" pos:column="103">adminDepartment</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="373" pos:column="17">courseOffered</name> <op:operator pos:line="373" pos:column="31">=</op:operator> <op:operator pos:line="373" pos:column="33">new</op:operator> <call><name><name pos:line="373" pos:column="37">ArrayList</name><argument_list pos:line="373" pos:column="46">&lt;<argument><name pos:line="373" pos:column="47">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="373" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
		<for pos:line="374" pos:column="17">for (<init><decl><type><name pos:line="374" pos:column="22">CourseSchedule</name></type> <name pos:line="374" pos:column="37">cs</name> <range pos:line="374" pos:column="40">: <expr><name pos:line="374" pos:column="42">allCoursesScheduled</name></expr></range></decl></init>) <block pos:line="374" pos:column="63">{
			<expr_stmt><expr><call><name><name pos:line="375" pos:column="25">DBAnnotation</name><op:operator pos:line="375" pos:column="37">.</op:operator><name pos:line="375" pos:column="38">annoate</name></name><argument_list pos:line="375" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="375" pos:column="46">"offerID"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="375" pos:column="57">"courseschedule"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="375" pos:column="75">"OfferID"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="375" pos:column="86">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="376" pos:column="25">int</name></type> <name pos:line="376" pos:column="29">offerID</name> <init pos:line="376" pos:column="37">= <expr><call><name><name pos:line="376" pos:column="39">cs</name><op:operator pos:line="376" pos:column="41">.</op:operator><name pos:line="376" pos:column="42">getOfferID</name></name><argument_list pos:line="376" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="377" pos:column="25">courseOffered</name><op:operator pos:line="377" pos:column="38">.</op:operator><name pos:line="377" pos:column="39">add</name></name><argument_list pos:line="377" pos:column="42">(<argument><expr><name pos:line="377" pos:column="43">offerID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		
		<decl_stmt><decl><type><name><name pos:line="380" pos:column="17">DefaultComboBoxModel</name><argument_list pos:line="380" pos:column="37">&lt;<argument><name pos:line="380" pos:column="38">Integer</name></argument>&gt;</argument_list></name></type> <name pos:line="380" pos:column="47">allIDsModel</name> <init pos:line="380" pos:column="59">= <expr><op:operator pos:line="380" pos:column="61">new</op:operator> <call><name><name pos:line="380" pos:column="65">DefaultComboBoxModel</name><argument_list pos:line="380" pos:column="85">&lt;<argument><name pos:line="380" pos:column="86">Integer</name></argument>&gt;</argument_list></name><argument_list pos:line="380" pos:column="94">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:line="381" pos:column="17">for (<init><decl><type><name pos:line="381" pos:column="22">Integer</name></type> <name pos:line="381" pos:column="30">i</name> <range pos:line="381" pos:column="32">: <expr><name pos:line="381" pos:column="34">courseOffered</name></expr></range></decl></init>) <block pos:line="381" pos:column="49">{
			<expr_stmt><expr><call><name><name pos:line="382" pos:column="25">allIDsModel</name><op:operator pos:line="382" pos:column="36">.</op:operator><name pos:line="382" pos:column="37">addElement</name></name><argument_list pos:line="382" pos:column="47">(<argument><expr><name pos:line="382" pos:column="48">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		<expr_stmt><expr><call><name><name pos:line="384" pos:column="17">courseOfferIDComboBox</name><op:operator pos:line="384" pos:column="38">.</op:operator><name pos:line="384" pos:column="39">setModel</name></name><argument_list pos:line="384" pos:column="47">(<argument><expr><name pos:line="384" pos:column="48">allIDsModel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="385" pos:column="17">if<condition pos:line="385" pos:column="19">(<expr><call><name><name pos:line="385" pos:column="20">allIDsModel</name><op:operator pos:line="385" pos:column="31">.</op:operator><name pos:line="385" pos:column="32">getSize</name></name><argument_list pos:line="385" pos:column="39">()</argument_list></call><op:operator pos:line="385" pos:column="41">&gt;</op:operator><lit:literal type="number" pos:line="385" pos:column="42">0</lit:literal></expr>)</condition><then pos:line="385" pos:column="44">
			<expr_stmt><expr><call><name><name pos:line="386" pos:column="25">courseOfferIDComboBox</name><op:operator pos:line="386" pos:column="46">.</op:operator><name pos:line="386" pos:column="47">setSelectedIndex</name></name><argument_list pos:line="386" pos:column="63">(<argument><expr><lit:literal type="number" pos:line="386" pos:column="64">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	}</block></function>
}</block></class>
</unit>
