<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\xinco\src\com\bluecubs\xinco\conf\XincoConfigSingletonServer.java" pos:tabs="8"><comment type="block" format="javadoc" pos:line="1" pos:column="1">/**
 *Copyright 2009 blueCubs.com
 *
 *Licensed under the Apache License, Version 2.0 (the "License");
 *you may not use this file except in compliance with the License.
 *You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 *Unless required by applicable law or agreed to in writing, software
 *distributed under the License is distributed on an "AS IS" BASIS,
 *WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *See the License for the specific language governing permissions and
 *limitations under the License.
 *
 *************************************************************
 * This project supports the blueCubs vision of giving back
 * to the community in exchange for free software!
 * More information on: http://www.bluecubs.org
 *************************************************************
 *
 * Name:            XincoConfigSingletonServer
 *
 * Description:     configuration class on server side 
 *
 * Original Author: Alexander Manes
 * Date:            2004
 *
 * Modifications:
 * 
 * Who?             When?             What?
 * -                -                 -
 *
 *************************************************************
 */</comment>
<package pos:line="36" pos:column="1">package <name><name pos:line="36" pos:column="9">com</name><op:operator pos:line="36" pos:column="12">.</op:operator><name pos:line="36" pos:column="13">bluecubs</name><op:operator pos:line="36" pos:column="21">.</op:operator><name pos:line="36" pos:column="22">xinco</name><op:operator pos:line="36" pos:column="27">.</op:operator><name pos:line="36" pos:column="28">conf</name></name>;</package>

<import pos:line="38" pos:column="1">import <name><name pos:line="38" pos:column="8">javax</name><op:operator pos:line="38" pos:column="13">.</op:operator><name pos:line="38" pos:column="14">naming</name><op:operator pos:line="38" pos:column="20">.</op:operator><name pos:line="38" pos:column="21">InitialContext</name></name>;</import>
<import pos:line="39" pos:column="1">import <name><name pos:line="39" pos:column="8">java</name><op:operator pos:line="39" pos:column="12">.</op:operator><name pos:line="39" pos:column="13">util</name><op:operator pos:line="39" pos:column="17">.</op:operator><name pos:line="39" pos:column="18">Vector</name></name>;</import>

<comment type="block" format="javadoc" pos:line="41" pos:column="1">/**
 * This class handles the server configuration of xinco.
 * Edit values in context.xml
 */</comment>
<class><specifier pos:line="45" pos:column="1">public</specifier> class <name pos:line="45" pos:column="14">XincoConfigSingletonServer</name> <block pos:line="45" pos:column="41">{

    <decl_stmt><decl><type><specifier pos:line="47" pos:column="5">public</specifier> <name pos:line="47" pos:column="12">String</name></type> <name pos:line="47" pos:column="19">FileRepositoryPath</name> <init pos:line="47" pos:column="38">= <expr><lit:literal type="null" pos:line="47" pos:column="40">null</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="48" pos:column="5">public</specifier> <name pos:line="48" pos:column="12">String</name></type> <name pos:line="48" pos:column="19">FileIndexPath</name> <init pos:line="48" pos:column="33">= <expr><lit:literal type="null" pos:line="48" pos:column="35">null</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="49" pos:column="5">public</specifier> <name pos:line="49" pos:column="12">String</name></type> <name pos:line="49" pos:column="19">FileArchivePath</name> <init pos:line="49" pos:column="35">= <expr><lit:literal type="null" pos:line="49" pos:column="37">null</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="50" pos:column="5">public</specifier> <name pos:line="50" pos:column="12">long</name></type> <name pos:line="50" pos:column="17">FileArchivePeriod</name> <init pos:line="50" pos:column="35">= <expr><lit:literal type="number" pos:line="50" pos:column="37">0</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="51" pos:column="5">private</specifier> <name pos:line="51" pos:column="13">long</name></type> <name pos:line="51" pos:column="18">FileIndexOptimizerPeriod</name> <init pos:line="51" pos:column="43">= <expr><lit:literal type="number" pos:line="51" pos:column="45">0</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="52" pos:column="5">public</specifier> <name pos:line="52" pos:column="12">int</name></type> <name pos:line="52" pos:column="16">FileIndexerCount</name> <init pos:line="52" pos:column="33">= <expr><lit:literal type="number" pos:line="52" pos:column="35">0</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="53" pos:column="5">public</specifier> <name pos:line="53" pos:column="12">Vector</name></type> <name pos:line="53" pos:column="19">IndexFileTypesClass</name> <init pos:line="53" pos:column="39">= <expr><lit:literal type="null" pos:line="53" pos:column="41">null</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="54" pos:column="5">public</specifier> <name pos:line="54" pos:column="12">Vector</name></type> <name pos:line="54" pos:column="19">IndexFileTypesExt</name> <init pos:line="54" pos:column="37">= <expr><lit:literal type="null" pos:line="54" pos:column="39">null</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="55" pos:column="5">public</specifier> <name pos:line="55" pos:column="12">String</name><index pos:line="55" pos:column="18">[]</index></type> <name pos:line="55" pos:column="21">IndexNoIndex</name> <init pos:line="55" pos:column="34">= <expr><lit:literal type="null" pos:line="55" pos:column="36">null</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="56" pos:column="5">public</specifier> <name pos:line="56" pos:column="12">String</name></type> <name pos:line="56" pos:column="19">JNDIDB</name> <init pos:line="56" pos:column="26">= <expr><lit:literal type="null" pos:line="56" pos:column="28">null</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="57" pos:column="5">public</specifier> <name pos:line="57" pos:column="12">int</name></type> <name pos:line="57" pos:column="16">MaxSearchResult</name> <init pos:line="57" pos:column="32">= <expr><lit:literal type="number" pos:line="57" pos:column="34">0</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="58" pos:column="5">private</specifier> <name pos:line="58" pos:column="13">boolean</name></type> <name pos:line="58" pos:column="21">allowOutsideLinks</name> <init pos:line="58" pos:column="39">= <expr><lit:literal type="boolean" pos:line="58" pos:column="41">true</lit:literal></expr></init><op:operator pos:line="58" pos:column="45">,</op:operator>  <name pos:line="58" pos:column="48">allowPublisherList</name> <init pos:line="58" pos:column="67">= <expr><lit:literal type="boolean" pos:line="58" pos:column="69">true</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="59" pos:column="5">private</specifier> <specifier pos:line="59" pos:column="13">static</specifier> <name pos:line="59" pos:column="20">XincoConfigSingletonServer</name></type> <name pos:line="59" pos:column="47">instance</name> <init pos:line="59" pos:column="56">= <expr><lit:literal type="null" pos:line="59" pos:column="58">null</lit:literal></expr></init></decl>;</decl_stmt>

    <function><type><specifier pos:line="61" pos:column="5">public</specifier> <specifier pos:line="61" pos:column="12">static</specifier> <name pos:line="61" pos:column="19">XincoConfigSingletonServer</name></type> <name pos:line="61" pos:column="46">getInstance</name><parameter_list pos:line="61" pos:column="57">()</parameter_list> <block pos:line="61" pos:column="60">{
        <if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><name pos:line="62" pos:column="13">instance</name> <op:operator pos:line="62" pos:column="22">==</op:operator> <lit:literal type="null" pos:line="62" pos:column="25">null</lit:literal></expr>)</condition><then pos:line="62" pos:column="30"> <block pos:line="62" pos:column="31">{
            <expr_stmt><expr><name pos:line="63" pos:column="13">instance</name> <op:operator pos:line="63" pos:column="22">=</op:operator> <op:operator pos:line="63" pos:column="24">new</op:operator> <call><name pos:line="63" pos:column="28">XincoConfigSingletonServer</name><argument_list pos:line="63" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        <return pos:line="65" pos:column="9">return <expr><name pos:line="65" pos:column="16">instance</name></expr>;</return>
    }</block></function>

    <comment type="line" pos:line="68" pos:column="5">//private constructor to avoid instance generation with new-operator!</comment>
    <constructor><annotation pos:line="69" pos:column="5">@<name pos:line="69" pos:column="6">SuppressWarnings</name><argument_list pos:line="69" pos:column="22">(<argument><expr><lit:literal type="string" pos:line="69" pos:column="23">"unchecked"</lit:literal></expr></argument>)</argument_list></annotation>
    <specifier pos:line="70" pos:column="5">private</specifier> <name pos:line="70" pos:column="13">XincoConfigSingletonServer</name><parameter_list pos:line="70" pos:column="39">()</parameter_list> <block pos:line="70" pos:column="42">{
        <try pos:line="71" pos:column="9">try <block pos:line="71" pos:column="13">{
            <expr_stmt><expr><name pos:line="72" pos:column="13">FileRepositoryPath</name> <op:operator pos:line="72" pos:column="32">=</op:operator> <call pos:line="72" pos:column="34">(<name pos:line="72" pos:column="35">String</name>) <argument_list pos:line="72" pos:column="43">(<argument><expr><op:operator pos:line="72" pos:column="44">new</op:operator> <call><name pos:line="72" pos:column="48">InitialContext</name><argument_list pos:line="72" pos:column="62">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="72" pos:column="65">.</op:operator><call><name pos:line="72" pos:column="66">lookup</name><argument_list pos:line="72" pos:column="72">(<argument><expr><lit:literal type="string" pos:line="72" pos:column="73">"java:comp/env/xinco/FileRepositoryPath"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if pos:line="73" pos:column="13">if <condition pos:line="73" pos:column="16">(<expr><op:operator pos:line="73" pos:column="17">!</op:operator><op:operator pos:line="73" pos:column="18">(</op:operator><call><name><name pos:line="73" pos:column="19">FileRepositoryPath</name><op:operator pos:line="73" pos:column="37">.</op:operator><name pos:line="73" pos:column="38">substring</name></name><argument_list pos:line="73" pos:column="47">(<argument><expr><call><name><name pos:line="73" pos:column="48">FileRepositoryPath</name><op:operator pos:line="73" pos:column="66">.</op:operator><name pos:line="73" pos:column="67">length</name></name><argument_list pos:line="73" pos:column="73">()</argument_list></call> <op:operator pos:line="73" pos:column="76">-</op:operator> <lit:literal type="number" pos:line="73" pos:column="78">1</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="73" pos:column="80">.</op:operator><call><name pos:line="73" pos:column="81">equals</name><argument_list pos:line="73" pos:column="87">(<argument><expr><call><name><name pos:line="73" pos:column="88">System</name><op:operator pos:line="73" pos:column="94">.</op:operator><name pos:line="73" pos:column="95">getProperty</name></name><argument_list pos:line="73" pos:column="106">(<argument><expr><lit:literal type="string" pos:line="73" pos:column="107">"file.separator"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="73" pos:column="125">)</op:operator></expr>)</condition><then pos:line="73" pos:column="127"> <block pos:line="73" pos:column="128">{
                <expr_stmt><expr><name pos:line="74" pos:column="17">FileRepositoryPath</name> <op:operator pos:line="74" pos:column="36">=</op:operator> <name pos:line="74" pos:column="38">FileRepositoryPath</name> <op:operator pos:line="74" pos:column="57">+</op:operator> <call><name><name pos:line="74" pos:column="59">System</name><op:operator pos:line="74" pos:column="65">.</op:operator><name pos:line="74" pos:column="66">getProperty</name></name><argument_list pos:line="74" pos:column="77">(<argument><expr><lit:literal type="string" pos:line="74" pos:column="78">"file.separator"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <comment type="line" pos:line="76" pos:column="13">//optional: FileIndexPath</comment>
            <try pos:line="77" pos:column="13">try <block pos:line="77" pos:column="17">{
                <expr_stmt><expr><name pos:line="78" pos:column="17">FileIndexPath</name> <op:operator pos:line="78" pos:column="31">=</op:operator> <call pos:line="78" pos:column="33">(<name pos:line="78" pos:column="34">String</name>) <argument_list pos:line="78" pos:column="42">(<argument><expr><op:operator pos:line="78" pos:column="43">new</op:operator> <call><name pos:line="78" pos:column="47">InitialContext</name><argument_list pos:line="78" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="78" pos:column="64">.</op:operator><call><name pos:line="78" pos:column="65">lookup</name><argument_list pos:line="78" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="78" pos:column="72">"java:comp/env/xinco/FileIndexPath"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block> <catch pos:line="79" pos:column="15">catch <parameter_list pos:line="79" pos:column="21">(<param><decl><type><name pos:line="79" pos:column="22">Exception</name></type> <name pos:line="79" pos:column="32">ce</name></decl></param>)</parameter_list> <block pos:line="79" pos:column="36">{
                <expr_stmt><expr><name pos:line="80" pos:column="17">FileIndexPath</name> <op:operator pos:line="80" pos:column="31">=</op:operator> <name pos:line="80" pos:column="33">FileRepositoryPath</name> <op:operator pos:line="80" pos:column="52">+</op:operator> <lit:literal type="string" pos:line="80" pos:column="54">"index"</lit:literal></expr>;</expr_stmt>
            }</block></catch></try>
            <if pos:line="82" pos:column="13">if <condition pos:line="82" pos:column="16">(<expr><op:operator pos:line="82" pos:column="17">!</op:operator><op:operator pos:line="82" pos:column="18">(</op:operator><call><name><name pos:line="82" pos:column="19">FileIndexPath</name><op:operator pos:line="82" pos:column="32">.</op:operator><name pos:line="82" pos:column="33">substring</name></name><argument_list pos:line="82" pos:column="42">(<argument><expr><call><name><name pos:line="82" pos:column="43">FileIndexPath</name><op:operator pos:line="82" pos:column="56">.</op:operator><name pos:line="82" pos:column="57">length</name></name><argument_list pos:line="82" pos:column="63">()</argument_list></call> <op:operator pos:line="82" pos:column="66">-</op:operator> <lit:literal type="number" pos:line="82" pos:column="68">1</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="82" pos:column="70">.</op:operator><call><name pos:line="82" pos:column="71">equals</name><argument_list pos:line="82" pos:column="77">(<argument><expr><call><name><name pos:line="82" pos:column="78">System</name><op:operator pos:line="82" pos:column="84">.</op:operator><name pos:line="82" pos:column="85">getProperty</name></name><argument_list pos:line="82" pos:column="96">(<argument><expr><lit:literal type="string" pos:line="82" pos:column="97">"file.separator"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="82" pos:column="115">)</op:operator></expr>)</condition><then pos:line="82" pos:column="117"> <block pos:line="82" pos:column="118">{
                <expr_stmt><expr><name pos:line="83" pos:column="17">FileIndexPath</name> <op:operator pos:line="83" pos:column="31">=</op:operator> <name pos:line="83" pos:column="33">FileIndexPath</name> <op:operator pos:line="83" pos:column="47">+</op:operator> <call><name><name pos:line="83" pos:column="49">System</name><op:operator pos:line="83" pos:column="55">.</op:operator><name pos:line="83" pos:column="56">getProperty</name></name><argument_list pos:line="83" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="83" pos:column="68">"file.separator"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <expr_stmt><expr><name pos:line="85" pos:column="13">FileArchivePath</name> <op:operator pos:line="85" pos:column="29">=</op:operator> <call pos:line="85" pos:column="31">(<name pos:line="85" pos:column="32">String</name>) <argument_list pos:line="85" pos:column="40">(<argument><expr><op:operator pos:line="85" pos:column="41">new</op:operator> <call><name pos:line="85" pos:column="45">InitialContext</name><argument_list pos:line="85" pos:column="59">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="85" pos:column="62">.</op:operator><call><name pos:line="85" pos:column="63">lookup</name><argument_list pos:line="85" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="85" pos:column="70">"java:comp/env/xinco/FileArchivePath"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if pos:line="86" pos:column="13">if <condition pos:line="86" pos:column="16">(<expr><op:operator pos:line="86" pos:column="17">!</op:operator><op:operator pos:line="86" pos:column="18">(</op:operator><call><name><name pos:line="86" pos:column="19">FileArchivePath</name><op:operator pos:line="86" pos:column="34">.</op:operator><name pos:line="86" pos:column="35">substring</name></name><argument_list pos:line="86" pos:column="44">(<argument><expr><call><name><name pos:line="86" pos:column="45">FileArchivePath</name><op:operator pos:line="86" pos:column="60">.</op:operator><name pos:line="86" pos:column="61">length</name></name><argument_list pos:line="86" pos:column="67">()</argument_list></call> <op:operator pos:line="86" pos:column="70">-</op:operator> <lit:literal type="number" pos:line="86" pos:column="72">1</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="86" pos:column="74">.</op:operator><call><name pos:line="86" pos:column="75">equals</name><argument_list pos:line="86" pos:column="81">(<argument><expr><call><name><name pos:line="86" pos:column="82">System</name><op:operator pos:line="86" pos:column="88">.</op:operator><name pos:line="86" pos:column="89">getProperty</name></name><argument_list pos:line="86" pos:column="100">(<argument><expr><lit:literal type="string" pos:line="86" pos:column="101">"file.separator"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="86" pos:column="119">)</op:operator></expr>)</condition><then pos:line="86" pos:column="121"> <block pos:line="86" pos:column="122">{
                <expr_stmt><expr><name pos:line="87" pos:column="17">FileArchivePath</name> <op:operator pos:line="87" pos:column="33">=</op:operator> <name pos:line="87" pos:column="35">FileArchivePath</name> <op:operator pos:line="87" pos:column="51">+</op:operator> <call><name><name pos:line="87" pos:column="53">System</name><op:operator pos:line="87" pos:column="59">.</op:operator><name pos:line="87" pos:column="60">getProperty</name></name><argument_list pos:line="87" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="87" pos:column="72">"file.separator"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <expr_stmt><expr><name pos:line="89" pos:column="13">FileArchivePeriod</name> <op:operator pos:line="89" pos:column="31">=</op:operator> <op:operator pos:line="89" pos:column="33">(</op:operator><call pos:line="89" pos:column="34">(<name pos:line="89" pos:column="35">Long</name>) <argument_list pos:line="89" pos:column="41">(<argument><expr><op:operator pos:line="89" pos:column="42">new</op:operator> <call><name pos:line="89" pos:column="46">InitialContext</name><argument_list pos:line="89" pos:column="60">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="89" pos:column="63">.</op:operator><call><name pos:line="89" pos:column="64">lookup</name><argument_list pos:line="89" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="89" pos:column="71">"java:comp/env/xinco/FileArchivePeriod"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="89" pos:column="111">)</op:operator><op:operator pos:line="89" pos:column="112">.</op:operator><call><name pos:line="89" pos:column="113">longValue</name><argument_list pos:line="89" pos:column="122">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name pos:line="91" pos:column="13">FileIndexOptimizerPeriod</name> <op:operator pos:line="91" pos:column="38">=</op:operator> <op:operator pos:line="91" pos:column="40">(</op:operator><call pos:line="91" pos:column="41">(<name pos:line="91" pos:column="42">Long</name>) <argument_list pos:line="91" pos:column="48">(<argument><expr><op:operator pos:line="91" pos:column="49">new</op:operator> <call><name pos:line="91" pos:column="53">InitialContext</name><argument_list pos:line="91" pos:column="67">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="91" pos:column="70">.</op:operator><call><name pos:line="91" pos:column="71">lookup</name><argument_list pos:line="91" pos:column="77">(<argument><expr><lit:literal type="string" pos:line="91" pos:column="78">"java:comp/env/xinco/FileIndexOptimizerPeriod"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="91" pos:column="125">)</op:operator><op:operator pos:line="91" pos:column="126">.</op:operator><call><name pos:line="91" pos:column="127">longValue</name><argument_list pos:line="91" pos:column="136">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name pos:line="93" pos:column="13">FileIndexerCount</name> <op:operator pos:line="93" pos:column="30">=</op:operator> <op:operator pos:line="93" pos:column="32">(</op:operator><call pos:line="93" pos:column="33">(<name pos:line="93" pos:column="34">Integer</name>) <argument_list pos:line="93" pos:column="43">(<argument><expr><op:operator pos:line="93" pos:column="44">new</op:operator> <call><name pos:line="93" pos:column="48">InitialContext</name><argument_list pos:line="93" pos:column="62">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="93" pos:column="65">.</op:operator><call><name pos:line="93" pos:column="66">lookup</name><argument_list pos:line="93" pos:column="72">(<argument><expr><lit:literal type="string" pos:line="93" pos:column="73">"java:comp/env/xinco/FileIndexerCount"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="93" pos:column="112">)</op:operator><op:operator pos:line="93" pos:column="113">.</op:operator><call><name pos:line="93" pos:column="114">intValue</name><argument_list pos:line="93" pos:column="122">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="94" pos:column="13">IndexFileTypesClass</name> <op:operator pos:line="94" pos:column="33">=</op:operator> <op:operator pos:line="94" pos:column="35">new</op:operator> <call><name pos:line="94" pos:column="39">Vector</name><argument_list pos:line="94" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="95" pos:column="13">IndexFileTypesExt</name> <op:operator pos:line="95" pos:column="31">=</op:operator> <op:operator pos:line="95" pos:column="33">new</op:operator> <call><name pos:line="95" pos:column="37">Vector</name><argument_list pos:line="95" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
            <for pos:line="96" pos:column="13">for (<init><decl><type><name pos:line="96" pos:column="18">int</name></type> <name pos:line="96" pos:column="22">i</name> <init pos:line="96" pos:column="24">= <expr><lit:literal type="number" pos:line="96" pos:column="26">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="96" pos:column="29">i</name> <op:operator pos:line="96" pos:column="31">&lt;</op:operator> <name pos:line="96" pos:column="33">FileIndexerCount</name></expr>;</condition> <incr><expr><name pos:line="96" pos:column="51">i</name><op:operator pos:line="96" pos:column="52">++</op:operator></expr></incr>) <block pos:line="96" pos:column="56">{
                <expr_stmt><expr><call><name><name pos:line="97" pos:column="17">IndexFileTypesClass</name><op:operator pos:line="97" pos:column="36">.</op:operator><name pos:line="97" pos:column="37">add</name></name><argument_list pos:line="97" pos:column="40">(<argument><expr><call pos:line="97" pos:column="41">(<name pos:line="97" pos:column="42">String</name>) <argument_list pos:line="97" pos:column="50">(<argument><expr><op:operator pos:line="97" pos:column="51">new</op:operator> <call><name pos:line="97" pos:column="55">InitialContext</name><argument_list pos:line="97" pos:column="69">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="97" pos:column="72">.</op:operator><call><name pos:line="97" pos:column="73">lookup</name><argument_list pos:line="97" pos:column="79">(<argument><expr><lit:literal type="string" pos:line="97" pos:column="80">"java:comp/env/xinco/FileIndexer_"</lit:literal> <op:operator pos:line="97" pos:column="115">+</op:operator> <op:operator pos:line="97" pos:column="117">(</op:operator><name pos:line="97" pos:column="118">i</name> <op:operator pos:line="97" pos:column="120">+</op:operator> <lit:literal type="number" pos:line="97" pos:column="122">1</lit:literal><op:operator pos:line="97" pos:column="123">)</op:operator> <op:operator pos:line="97" pos:column="125">+</op:operator> <lit:literal type="string" pos:line="97" pos:column="127">"_Class"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="98" pos:column="17">IndexFileTypesExt</name><op:operator pos:line="98" pos:column="34">.</op:operator><name pos:line="98" pos:column="35">add</name></name><argument_list pos:line="98" pos:column="38">(<argument><expr><op:operator pos:line="98" pos:column="39">(</op:operator><call pos:line="98" pos:column="40">(<name pos:line="98" pos:column="41">String</name>) <argument_list pos:line="98" pos:column="49">(<argument><expr><op:operator pos:line="98" pos:column="50">new</op:operator> <call><name pos:line="98" pos:column="54">InitialContext</name><argument_list pos:line="98" pos:column="68">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="98" pos:column="71">.</op:operator><call><name pos:line="98" pos:column="72">lookup</name><argument_list pos:line="98" pos:column="78">(<argument><expr><lit:literal type="string" pos:line="98" pos:column="79">"java:comp/env/xinco/FileIndexer_"</lit:literal> <op:operator pos:line="98" pos:column="114">+</op:operator> <op:operator pos:line="98" pos:column="116">(</op:operator><name pos:line="98" pos:column="117">i</name> <op:operator pos:line="98" pos:column="119">+</op:operator> <lit:literal type="number" pos:line="98" pos:column="121">1</lit:literal><op:operator pos:line="98" pos:column="122">)</op:operator> <op:operator pos:line="98" pos:column="124">+</op:operator> <lit:literal type="string" pos:line="98" pos:column="126">"_Ext"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="98" pos:column="133">)</op:operator><op:operator pos:line="98" pos:column="134">.</op:operator><call><name pos:line="98" pos:column="135">split</name><argument_list pos:line="98" pos:column="140">(<argument><expr><lit:literal type="string" pos:line="98" pos:column="141">";"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></for>
            <expr_stmt><expr><name pos:line="100" pos:column="13">IndexNoIndex</name> <op:operator pos:line="100" pos:column="26">=</op:operator> <op:operator pos:line="100" pos:column="28">(</op:operator><call pos:line="100" pos:column="29">(<name pos:line="100" pos:column="30">String</name>) <argument_list pos:line="100" pos:column="38">(<argument><expr><op:operator pos:line="100" pos:column="39">new</op:operator> <call><name pos:line="100" pos:column="43">InitialContext</name><argument_list pos:line="100" pos:column="57">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="100" pos:column="60">.</op:operator><call><name pos:line="100" pos:column="61">lookup</name><argument_list pos:line="100" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="100" pos:column="68">"java:comp/env/xinco/IndexNoIndex"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="100" pos:column="103">)</op:operator><op:operator pos:line="100" pos:column="104">.</op:operator><call><name pos:line="100" pos:column="105">split</name><argument_list pos:line="100" pos:column="110">(<argument><expr><lit:literal type="string" pos:line="100" pos:column="111">";"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name pos:line="102" pos:column="13">allowOutsideLinks</name> <op:operator pos:line="102" pos:column="31">=</op:operator> <op:operator pos:line="102" pos:column="33">(</op:operator><call pos:line="102" pos:column="34">(<name pos:line="102" pos:column="35">String</name>) <argument_list pos:line="102" pos:column="43">(<argument><expr><op:operator pos:line="102" pos:column="44">new</op:operator> <call><name pos:line="102" pos:column="48">InitialContext</name><argument_list pos:line="102" pos:column="62">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="102" pos:column="65">.</op:operator><call><name pos:line="102" pos:column="66">lookup</name><argument_list pos:line="102" pos:column="72">(<argument><expr><lit:literal type="string" pos:line="102" pos:column="73">"java:comp/env/setting.allowoutsidelinks"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="102" pos:column="115">)</op:operator><op:operator pos:line="102" pos:column="116">.</op:operator><call><name pos:line="102" pos:column="117">equals</name><argument_list pos:line="102" pos:column="123">(<argument><expr><lit:literal type="string" pos:line="102" pos:column="124">"True"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="103" pos:column="13">allowPublisherList</name> <op:operator pos:line="103" pos:column="32">=</op:operator> <op:operator pos:line="103" pos:column="34">(</op:operator><call pos:line="103" pos:column="35">(<name pos:line="103" pos:column="36">String</name>) <argument_list pos:line="103" pos:column="44">(<argument><expr><op:operator pos:line="103" pos:column="45">new</op:operator> <call><name pos:line="103" pos:column="49">InitialContext</name><argument_list pos:line="103" pos:column="63">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="103" pos:column="66">.</op:operator><call><name pos:line="103" pos:column="67">lookup</name><argument_list pos:line="103" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="103" pos:column="74">"java:comp/env/setting.allowpublisherlist"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="103" pos:column="117">)</op:operator><op:operator pos:line="103" pos:column="118">.</op:operator><call><name pos:line="103" pos:column="119">equals</name><argument_list pos:line="103" pos:column="125">(<argument><expr><lit:literal type="string" pos:line="103" pos:column="126">"True"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="104" pos:column="13">JNDIDB</name> <op:operator pos:line="104" pos:column="20">=</op:operator> <call pos:line="104" pos:column="22">(<name pos:line="104" pos:column="23">String</name>) <argument_list pos:line="104" pos:column="31">(<argument><expr><op:operator pos:line="104" pos:column="32">new</op:operator> <call><name pos:line="104" pos:column="36">InitialContext</name><argument_list pos:line="104" pos:column="50">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="104" pos:column="53">.</op:operator><call><name pos:line="104" pos:column="54">lookup</name><argument_list pos:line="104" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="104" pos:column="61">"java:comp/env/xinco/JNDIDB"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="105" pos:column="13">MaxSearchResult</name> <op:operator pos:line="105" pos:column="29">=</op:operator> <op:operator pos:line="105" pos:column="31">(</op:operator><call pos:line="105" pos:column="32">(<name pos:line="105" pos:column="33">Integer</name>) <argument_list pos:line="105" pos:column="42">(<argument><expr><op:operator pos:line="105" pos:column="43">new</op:operator> <call><name pos:line="105" pos:column="47">InitialContext</name><argument_list pos:line="105" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="105" pos:column="64">.</op:operator><call><name pos:line="105" pos:column="65">lookup</name><argument_list pos:line="105" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="105" pos:column="72">"java:comp/env/xinco/MaxSearchResult"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="105" pos:column="110">)</op:operator><op:operator pos:line="105" pos:column="111">.</op:operator><call><name pos:line="105" pos:column="112">intValue</name><argument_list pos:line="105" pos:column="120">()</argument_list></call></expr>;</expr_stmt>
        }</block> <catch pos:line="106" pos:column="11">catch <parameter_list pos:line="106" pos:column="17">(<param><decl><type><name pos:line="106" pos:column="18">Exception</name></type> <name pos:line="106" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="106" pos:column="31">{
            <expr_stmt><expr><name pos:line="107" pos:column="13">FileRepositoryPath</name> <op:operator pos:line="107" pos:column="32">=</op:operator> <lit:literal type="string" pos:line="107" pos:column="34">""</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="108" pos:column="13">FileIndexPath</name> <op:operator pos:line="108" pos:column="27">=</op:operator> <lit:literal type="string" pos:line="108" pos:column="29">""</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="109" pos:column="13">FileArchivePath</name> <op:operator pos:line="109" pos:column="29">=</op:operator> <lit:literal type="string" pos:line="109" pos:column="31">""</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="110" pos:column="13">FileArchivePeriod</name> <op:operator pos:line="110" pos:column="31">=</op:operator> <lit:literal type="number" pos:line="110" pos:column="33">14400000</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="111" pos:column="13">FileIndexerCount</name> <op:operator pos:line="111" pos:column="30">=</op:operator> <lit:literal type="number" pos:line="111" pos:column="32">4</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="112" pos:column="13">IndexFileTypesClass</name> <op:operator pos:line="112" pos:column="33">=</op:operator> <op:operator pos:line="112" pos:column="35">new</op:operator> <call><name pos:line="112" pos:column="39">Vector</name><argument_list pos:line="112" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="113" pos:column="13">IndexFileTypesExt</name> <op:operator pos:line="113" pos:column="31">=</op:operator> <op:operator pos:line="113" pos:column="33">new</op:operator> <call><name pos:line="113" pos:column="37">Vector</name><argument_list pos:line="113" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="114" pos:column="13">String</name><index pos:line="114" pos:column="19">[]</index></type> <name pos:line="114" pos:column="22">tsa</name> <init pos:line="114" pos:column="26">= <expr><lit:literal type="null" pos:line="114" pos:column="28">null</lit:literal></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="115" pos:column="13">IndexFileTypesClass</name><op:operator pos:line="115" pos:column="32">.</op:operator><name pos:line="115" pos:column="33">add</name></name><argument_list pos:line="115" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="115" pos:column="37">"com.bluecubs.xinco.index.filetypes.XincoIndexAdobePDF"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="116" pos:column="13">tsa</name> <op:operator pos:line="116" pos:column="17">=</op:operator> <op:operator pos:line="116" pos:column="19">new</op:operator> <name><name pos:line="116" pos:column="23">String</name><index pos:line="116" pos:column="29">[<expr><lit:literal type="number" pos:line="116" pos:column="30">1</lit:literal></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="117" pos:column="13">tsa</name><index pos:line="117" pos:column="16">[<expr><lit:literal type="number" pos:line="117" pos:column="17">0</lit:literal></expr>]</index></name> <op:operator pos:line="117" pos:column="20">=</op:operator> <lit:literal type="string" pos:line="117" pos:column="22">"pdf"</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="118" pos:column="13">IndexFileTypesExt</name><op:operator pos:line="118" pos:column="30">.</op:operator><name pos:line="118" pos:column="31">add</name></name><argument_list pos:line="118" pos:column="34">(<argument><expr><name pos:line="118" pos:column="35">tsa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="119" pos:column="13">IndexFileTypesClass</name><op:operator pos:line="119" pos:column="32">.</op:operator><name pos:line="119" pos:column="33">add</name></name><argument_list pos:line="119" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="119" pos:column="37">"com.bluecubs.xinco.index.filetypes.XincoIndexMSWord"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="120" pos:column="13">tsa</name> <op:operator pos:line="120" pos:column="17">=</op:operator> <op:operator pos:line="120" pos:column="19">new</op:operator> <name><name pos:line="120" pos:column="23">String</name><index pos:line="120" pos:column="29">[<expr><lit:literal type="number" pos:line="120" pos:column="30">1</lit:literal></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="121" pos:column="13">tsa</name><index pos:line="121" pos:column="16">[<expr><lit:literal type="number" pos:line="121" pos:column="17">0</lit:literal></expr>]</index></name> <op:operator pos:line="121" pos:column="20">=</op:operator> <lit:literal type="string" pos:line="121" pos:column="22">"doc"</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="122" pos:column="13">IndexFileTypesExt</name><op:operator pos:line="122" pos:column="30">.</op:operator><name pos:line="122" pos:column="31">add</name></name><argument_list pos:line="122" pos:column="34">(<argument><expr><name pos:line="122" pos:column="35">tsa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="123" pos:column="13">IndexFileTypesClass</name><op:operator pos:line="123" pos:column="32">.</op:operator><name pos:line="123" pos:column="33">add</name></name><argument_list pos:line="123" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="123" pos:column="37">"com.bluecubs.xinco.index.filetypes.XincoIndexMSExcel"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="124" pos:column="13">tsa</name> <op:operator pos:line="124" pos:column="17">=</op:operator> <op:operator pos:line="124" pos:column="19">new</op:operator> <name><name pos:line="124" pos:column="23">String</name><index pos:line="124" pos:column="29">[<expr><lit:literal type="number" pos:line="124" pos:column="30">1</lit:literal></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="125" pos:column="13">tsa</name><index pos:line="125" pos:column="16">[<expr><lit:literal type="number" pos:line="125" pos:column="17">0</lit:literal></expr>]</index></name> <op:operator pos:line="125" pos:column="20">=</op:operator> <lit:literal type="string" pos:line="125" pos:column="22">"xls"</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="126" pos:column="13">IndexFileTypesExt</name><op:operator pos:line="126" pos:column="30">.</op:operator><name pos:line="126" pos:column="31">add</name></name><argument_list pos:line="126" pos:column="34">(<argument><expr><name pos:line="126" pos:column="35">tsa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="127" pos:column="13">IndexFileTypesClass</name><op:operator pos:line="127" pos:column="32">.</op:operator><name pos:line="127" pos:column="33">add</name></name><argument_list pos:line="127" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="127" pos:column="37">"com.bluecubs.xinco.index.filetypes.XincoIndexHTML"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="128" pos:column="13">tsa</name> <op:operator pos:line="128" pos:column="17">=</op:operator> <op:operator pos:line="128" pos:column="19">new</op:operator> <name><name pos:line="128" pos:column="23">String</name><index pos:line="128" pos:column="29">[<expr><lit:literal type="number" pos:line="128" pos:column="30">4</lit:literal></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="129" pos:column="13">tsa</name><index pos:line="129" pos:column="16">[<expr><lit:literal type="number" pos:line="129" pos:column="17">0</lit:literal></expr>]</index></name> <op:operator pos:line="129" pos:column="20">=</op:operator> <lit:literal type="string" pos:line="129" pos:column="22">"htm"</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="130" pos:column="13">tsa</name><index pos:line="130" pos:column="16">[<expr><lit:literal type="number" pos:line="130" pos:column="17">1</lit:literal></expr>]</index></name> <op:operator pos:line="130" pos:column="20">=</op:operator> <lit:literal type="string" pos:line="130" pos:column="22">"html"</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="131" pos:column="13">tsa</name><index pos:line="131" pos:column="16">[<expr><lit:literal type="number" pos:line="131" pos:column="17">2</lit:literal></expr>]</index></name> <op:operator pos:line="131" pos:column="20">=</op:operator> <lit:literal type="string" pos:line="131" pos:column="22">"php"</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="132" pos:column="13">tsa</name><index pos:line="132" pos:column="16">[<expr><lit:literal type="number" pos:line="132" pos:column="17">3</lit:literal></expr>]</index></name> <op:operator pos:line="132" pos:column="20">=</op:operator> <lit:literal type="string" pos:line="132" pos:column="22">"jsp"</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="133" pos:column="13">IndexFileTypesExt</name><op:operator pos:line="133" pos:column="30">.</op:operator><name pos:line="133" pos:column="31">add</name></name><argument_list pos:line="133" pos:column="34">(<argument><expr><name pos:line="133" pos:column="35">tsa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="134" pos:column="13">IndexNoIndex</name> <op:operator pos:line="134" pos:column="26">=</op:operator> <op:operator pos:line="134" pos:column="28">new</op:operator> <name><name pos:line="134" pos:column="32">String</name><index pos:line="134" pos:column="38">[<expr><lit:literal type="number" pos:line="134" pos:column="39">3</lit:literal></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="135" pos:column="13">IndexNoIndex</name><index pos:line="135" pos:column="25">[<expr><lit:literal type="number" pos:line="135" pos:column="26">0</lit:literal></expr>]</index></name> <op:operator pos:line="135" pos:column="29">=</op:operator> <lit:literal type="string" pos:line="135" pos:column="31">""</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="136" pos:column="13">IndexNoIndex</name><index pos:line="136" pos:column="25">[<expr><lit:literal type="number" pos:line="136" pos:column="26">1</lit:literal></expr>]</index></name> <op:operator pos:line="136" pos:column="29">=</op:operator> <lit:literal type="string" pos:line="136" pos:column="31">"com"</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="137" pos:column="13">IndexNoIndex</name><index pos:line="137" pos:column="25">[<expr><lit:literal type="number" pos:line="137" pos:column="26">2</lit:literal></expr>]</index></name> <op:operator pos:line="137" pos:column="29">=</op:operator> <lit:literal type="string" pos:line="137" pos:column="31">"exe"</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="138" pos:column="13">allowOutsideLinks</name> <op:operator pos:line="138" pos:column="31">=</op:operator> <lit:literal type="boolean" pos:line="138" pos:column="33">true</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="139" pos:column="13">allowPublisherList</name> <op:operator pos:line="139" pos:column="32">=</op:operator> <lit:literal type="boolean" pos:line="139" pos:column="34">true</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="140" pos:column="13">JNDIDB</name> <op:operator pos:line="140" pos:column="20">=</op:operator> <lit:literal type="string" pos:line="140" pos:column="22">"java:comp/env/jdbc/XincoDB"</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="141" pos:column="13">MaxSearchResult</name> <op:operator pos:line="141" pos:column="29">=</op:operator> <lit:literal type="number" pos:line="141" pos:column="31">30</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="142" pos:column="13">FileIndexOptimizerPeriod</name> <op:operator pos:line="142" pos:column="38">=</op:operator> <lit:literal type="number" pos:line="142" pos:column="40">14400000</lit:literal></expr>;</expr_stmt>
        }</block></catch></try>
    }</block></constructor>

    <function><type><specifier pos:line="146" pos:column="5">public</specifier> <name pos:line="146" pos:column="12">boolean</name></type> <name pos:line="146" pos:column="20">isAllowOutsideLinks</name><parameter_list pos:line="146" pos:column="39">()</parameter_list> <block pos:line="146" pos:column="42">{
        <return pos:line="147" pos:column="9">return <expr><name pos:line="147" pos:column="16">allowOutsideLinks</name></expr>;</return>
    }</block></function>

    <function><type><specifier pos:line="150" pos:column="5">public</specifier> <name pos:line="150" pos:column="12">long</name></type> <name pos:line="150" pos:column="17">getFileIndexOptimizerPeriod</name><parameter_list pos:line="150" pos:column="44">()</parameter_list> <block pos:line="150" pos:column="47">{
        <return pos:line="151" pos:column="9">return <expr><name pos:line="151" pos:column="16">FileIndexOptimizerPeriod</name></expr>;</return>
    }</block></function>

    <function><type><specifier pos:line="154" pos:column="5">public</specifier> <name pos:line="154" pos:column="12">void</name></type> <name pos:line="154" pos:column="17">setFileIndexOptimizerPeriod</name><parameter_list pos:line="154" pos:column="44">(<param><decl><type><name pos:line="154" pos:column="45">long</name></type> <name pos:line="154" pos:column="50">FileIndexOptimizerPeriod</name></decl></param>)</parameter_list> <block pos:line="154" pos:column="76">{
        <expr_stmt><expr><name><name pos:line="155" pos:column="9">this</name><op:operator pos:line="155" pos:column="13">.</op:operator><name pos:line="155" pos:column="14">FileIndexOptimizerPeriod</name></name> <op:operator pos:line="155" pos:column="39">=</op:operator> <name pos:line="155" pos:column="41">FileIndexOptimizerPeriod</name></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier pos:line="158" pos:column="5">public</specifier> <name pos:line="158" pos:column="12">boolean</name></type> <name pos:line="158" pos:column="20">isAllowPublisherList</name><parameter_list pos:line="158" pos:column="40">()</parameter_list> <block pos:line="158" pos:column="43">{
        <return pos:line="159" pos:column="9">return <expr><name pos:line="159" pos:column="16">allowPublisherList</name></expr>;</return>
    }</block></function>
}</block></class>
</unit>
