<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\xinco\src\com\bluecubs\xinco\client\object\XincoClientRepository.java" pos:tabs="8"><comment type="block" format="javadoc" pos:line="1" pos:column="1">/**
 *Copyright 2009 blueCubs.com
 *
 *Licensed under the Apache License, Version 2.0 (the "License");
 *you may not use this file except in compliance with the License.
 *You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 *Unless required by applicable law or agreed to in writing, software
 *distributed under the License is distributed on an "AS IS" BASIS,
 *WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *See the License for the specific language governing permissions and
 *limitations under the License.
 *
 *************************************************************
 * This project supports the blueCubs vision of giving back
 * to the community in exchange for free software!
 * More information on: http://www.bluecubs.org
 *************************************************************
 *
 * Name:            XincoClientRepository
 *
 * Description:     repository on client side
 *
 * Original Author: Alexander Manes
 * Date:            2004
 *
 * Modifications:
 *
 * Who?             When?             What?
 * -                -                 -
 *
 *************************************************************
 */</comment>
<package pos:line="36" pos:column="1">package <name><name pos:line="36" pos:column="9">com</name><op:operator pos:line="36" pos:column="12">.</op:operator><name pos:line="36" pos:column="13">bluecubs</name><op:operator pos:line="36" pos:column="21">.</op:operator><name pos:line="36" pos:column="22">xinco</name><op:operator pos:line="36" pos:column="27">.</op:operator><name pos:line="36" pos:column="28">client</name><op:operator pos:line="36" pos:column="34">.</op:operator><name pos:line="36" pos:column="35">object</name></name>;</package>

<import pos:line="38" pos:column="1">import <name><name pos:line="38" pos:column="8">com</name><op:operator pos:line="38" pos:column="11">.</op:operator><name pos:line="38" pos:column="12">bluecubs</name><op:operator pos:line="38" pos:column="20">.</op:operator><name pos:line="38" pos:column="21">xinco</name><op:operator pos:line="38" pos:column="26">.</op:operator><name pos:line="38" pos:column="27">client</name><op:operator pos:line="38" pos:column="33">.</op:operator><name pos:line="38" pos:column="34">XincoExplorer</name></name>;</import>
<import pos:line="39" pos:column="1">import <name><name pos:line="39" pos:column="8">javax</name><op:operator pos:line="39" pos:column="13">.</op:operator><name pos:line="39" pos:column="14">swing</name><op:operator pos:line="39" pos:column="19">.</op:operator><name pos:line="39" pos:column="20">tree</name></name>.*;</import>

<import pos:line="41" pos:column="1">import <name><name pos:line="41" pos:column="8">com</name><op:operator pos:line="41" pos:column="11">.</op:operator><name pos:line="41" pos:column="12">bluecubs</name><op:operator pos:line="41" pos:column="20">.</op:operator><name pos:line="41" pos:column="21">xinco</name><op:operator pos:line="41" pos:column="26">.</op:operator><name pos:line="41" pos:column="27">core</name></name>.*;</import>
<import pos:line="42" pos:column="1">import <name><name pos:line="42" pos:column="8">com</name><op:operator pos:line="42" pos:column="11">.</op:operator><name pos:line="42" pos:column="12">bluecubs</name><op:operator pos:line="42" pos:column="20">.</op:operator><name pos:line="42" pos:column="21">xinco</name><op:operator pos:line="42" pos:column="26">.</op:operator><name pos:line="42" pos:column="27">service</name></name>.*;</import>

<comment type="block" format="javadoc" pos:line="44" pos:column="1">/**
 * XincoClientRepository
 */</comment>
<class><specifier pos:line="47" pos:column="1">public</specifier> class <name pos:line="47" pos:column="14">XincoClientRepository</name> <block pos:line="47" pos:column="36">{

    <comment type="block" format="javadoc" pos:line="49" pos:column="5">/**
     * DefaultTreeModel
     */</comment>
    <decl_stmt><decl><type><specifier pos:line="52" pos:column="5">public</specifier> <name pos:line="52" pos:column="12">DefaultTreeModel</name></type> <name pos:line="52" pos:column="29">treemodel</name> <init pos:line="52" pos:column="39">= <expr><lit:literal type="null" pos:line="52" pos:column="41">null</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="53" pos:column="5">private</specifier> <name pos:line="53" pos:column="13">XincoExplorer</name></type> <name pos:line="53" pos:column="27">explorer</name></decl>;</decl_stmt>

    <comment type="block" format="javadoc" pos:line="55" pos:column="5">/**
     * XincoClientRepository
     * @param e
     */</comment>
    <constructor><specifier pos:line="59" pos:column="5">public</specifier> <name pos:line="59" pos:column="12">XincoClientRepository</name><parameter_list pos:line="59" pos:column="33">(<param><decl><type><name pos:line="59" pos:column="34">XincoExplorer</name></type> <name pos:line="59" pos:column="48">e</name></decl></param>)</parameter_list> <block pos:line="59" pos:column="51">{
        <expr_stmt><expr><name pos:line="60" pos:column="9">explorer</name> <op:operator pos:line="60" pos:column="18">=</op:operator> <name pos:line="60" pos:column="20">e</name></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="61" pos:column="9">treemodel</name> <op:operator pos:line="61" pos:column="19">=</op:operator> <op:operator pos:line="61" pos:column="21">new</op:operator> <call><name pos:line="61" pos:column="25">DefaultTreeModel</name><argument_list pos:line="61" pos:column="41">(<argument><expr><op:operator pos:line="61" pos:column="42">new</op:operator> <call><name pos:line="61" pos:column="46">XincoMutableTreeNode</name><argument_list pos:line="61" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="61" pos:column="67">"root"</lit:literal></expr></argument>, <argument><expr><call><name pos:line="61" pos:column="75">getExplorer</name><argument_list pos:line="61" pos:column="86">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <comment type="block" format="javadoc" pos:line="64" pos:column="5">/**
     * Assign object to tree node
     * @param node Node to assign object to.
     * @param object Object to be assigned to node.
     * @param service Xinco service involved.
     * @param user User involved
     * @param depth Node depth.
     */</comment>
    <function><type><specifier pos:line="72" pos:column="5">public</specifier> <name pos:line="72" pos:column="12">void</name></type> <name pos:line="72" pos:column="17">assignObject2TreeNode</name><parameter_list pos:line="72" pos:column="38">(<param><decl><type><name pos:line="72" pos:column="39">XincoMutableTreeNode</name></type> <name pos:line="72" pos:column="60">node</name></decl></param>, <param><decl><type><name pos:line="72" pos:column="66">XincoCoreNode</name></type> <name pos:line="72" pos:column="80">object</name></decl></param>, <param><decl><type><name pos:line="72" pos:column="88">Xinco</name></type> <name pos:line="72" pos:column="94">service</name></decl></param>, <param><decl><type><name pos:line="72" pos:column="103">XincoCoreUser</name></type> <name pos:line="72" pos:column="117">user</name></decl></param>, <param><decl><type><name pos:line="72" pos:column="123">int</name></type> <name pos:line="72" pos:column="127">depth</name></decl></param>)</parameter_list> <block pos:line="72" pos:column="134">{
        <decl_stmt><decl><type><name pos:line="73" pos:column="9">int</name></type> <name pos:line="73" pos:column="13">i</name> <init pos:line="73" pos:column="15">= <expr><lit:literal type="number" pos:line="73" pos:column="17">0</lit:literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name pos:line="74" pos:column="9">depth</name><op:operator pos:line="74" pos:column="14">--</op:operator></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="75" pos:column="9">node</name><op:operator pos:line="75" pos:column="13">.</op:operator><name pos:line="75" pos:column="14">removeAllChildren</name></name><argument_list pos:line="75" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="76" pos:column="9">node</name><op:operator pos:line="76" pos:column="13">.</op:operator><name pos:line="76" pos:column="14">setUserObject</name></name><argument_list pos:line="76" pos:column="27">(<argument><expr><name pos:line="76" pos:column="28">object</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name pos:line="77" pos:column="9">int</name></type> <name pos:line="77" pos:column="13">size</name> <init pos:line="77" pos:column="18">= <expr><call><name><name pos:line="77" pos:column="20">object</name><op:operator pos:line="77" pos:column="26">.</op:operator><name pos:line="77" pos:column="27">getXinco_core_nodes</name></name><argument_list pos:line="77" pos:column="46">()</argument_list></call><op:operator pos:line="77" pos:column="48">.</op:operator><call><name pos:line="77" pos:column="49">size</name><argument_list pos:line="77" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <for pos:line="78" pos:column="9">for (<init><expr><name pos:line="78" pos:column="14">i</name> <op:operator pos:line="78" pos:column="16">=</op:operator> <lit:literal type="number" pos:line="78" pos:column="18">0</lit:literal></expr>;</init> <condition><expr><name pos:line="78" pos:column="21">i</name> <op:operator pos:line="78" pos:column="23">&lt;</op:operator> <name pos:line="78" pos:column="25">size</name></expr>;</condition> <incr><expr><name pos:line="78" pos:column="31">i</name><op:operator pos:line="78" pos:column="32">++</op:operator></expr></incr>) <block pos:line="78" pos:column="36">{
            <decl_stmt><decl><type><name pos:line="79" pos:column="13">XincoMutableTreeNode</name></type> <name pos:line="79" pos:column="34">temp_xmtn</name> <init pos:line="79" pos:column="44">= <expr><op:operator pos:line="79" pos:column="46">new</op:operator> <call><name pos:line="79" pos:column="50">XincoMutableTreeNode</name><argument_list pos:line="79" pos:column="70">(<argument><expr><call><name><name pos:line="79" pos:column="71">object</name><op:operator pos:line="79" pos:column="77">.</op:operator><name pos:line="79" pos:column="78">getXinco_core_nodes</name></name><argument_list pos:line="79" pos:column="97">()</argument_list></call><op:operator pos:line="79" pos:column="99">.</op:operator><call><name pos:line="79" pos:column="100">elementAt</name><argument_list pos:line="79" pos:column="109">(<argument><expr><name pos:line="79" pos:column="110">i</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="79" pos:column="114">getExplorer</name><argument_list pos:line="79" pos:column="125">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="80" pos:column="13">treemodel</name><op:operator pos:line="80" pos:column="22">.</op:operator><name pos:line="80" pos:column="23">insertNodeInto</name></name><argument_list pos:line="80" pos:column="37">(<argument><expr><name pos:line="80" pos:column="38">temp_xmtn</name></expr></argument>, <argument><expr><name pos:line="80" pos:column="49">node</name></expr></argument>, <argument><expr><call><name><name pos:line="80" pos:column="55">node</name><op:operator pos:line="80" pos:column="59">.</op:operator><name pos:line="80" pos:column="60">getChildCount</name></name><argument_list pos:line="80" pos:column="73">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></for>
        <for pos:line="82" pos:column="9">for (<init><expr><name pos:line="82" pos:column="14">i</name> <op:operator pos:line="82" pos:column="16">=</op:operator> <lit:literal type="number" pos:line="82" pos:column="18">0</lit:literal></expr>;</init> <condition><expr><name pos:line="82" pos:column="21">i</name> <op:operator pos:line="82" pos:column="23">&lt;</op:operator> <call><name><name pos:line="82" pos:column="25">object</name><op:operator pos:line="82" pos:column="31">.</op:operator><name pos:line="82" pos:column="32">getXinco_core_data</name></name><argument_list pos:line="82" pos:column="50">()</argument_list></call><op:operator pos:line="82" pos:column="52">.</op:operator><call><name pos:line="82" pos:column="53">size</name><argument_list pos:line="82" pos:column="57">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="82" pos:column="61">i</name><op:operator pos:line="82" pos:column="62">++</op:operator></expr></incr>) <block pos:line="82" pos:column="66">{
            <expr_stmt><expr><call><name><name pos:line="83" pos:column="13">treemodel</name><op:operator pos:line="83" pos:column="22">.</op:operator><name pos:line="83" pos:column="23">insertNodeInto</name></name><argument_list pos:line="83" pos:column="37">(<argument><expr><op:operator pos:line="83" pos:column="38">new</op:operator> <call><name pos:line="83" pos:column="42">XincoMutableTreeNode</name><argument_list pos:line="83" pos:column="62">(<argument><expr><call><name><name pos:line="83" pos:column="63">object</name><op:operator pos:line="83" pos:column="69">.</op:operator><name pos:line="83" pos:column="70">getXinco_core_data</name></name><argument_list pos:line="83" pos:column="88">()</argument_list></call><op:operator pos:line="83" pos:column="90">.</op:operator><call><name pos:line="83" pos:column="91">elementAt</name><argument_list pos:line="83" pos:column="100">(<argument><expr><name pos:line="83" pos:column="101">i</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="83" pos:column="105">getExplorer</name><argument_list pos:line="83" pos:column="116">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="83" pos:column="121">node</name></expr></argument>, <argument><expr><call><name><name pos:line="83" pos:column="127">node</name><op:operator pos:line="83" pos:column="131">.</op:operator><name pos:line="83" pos:column="132">getChildCount</name></name><argument_list pos:line="83" pos:column="145">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></for>
        <expr_stmt><expr><call><name><name pos:line="85" pos:column="9">treemodel</name><op:operator pos:line="85" pos:column="18">.</op:operator><name pos:line="85" pos:column="19">reload</name></name><argument_list pos:line="85" pos:column="25">(<argument><expr><name pos:line="85" pos:column="26">node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="86" pos:column="9">treemodel</name><op:operator pos:line="86" pos:column="18">.</op:operator><name pos:line="86" pos:column="19">nodeChanged</name></name><argument_list pos:line="86" pos:column="30">(<argument><expr><name pos:line="86" pos:column="31">node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="block" format="javadoc" pos:line="89" pos:column="5">/**
     * @return the explorer
     */</comment>
    <function><type><specifier pos:line="92" pos:column="5">public</specifier> <name pos:line="92" pos:column="12">XincoExplorer</name></type> <name pos:line="92" pos:column="26">getExplorer</name><parameter_list pos:line="92" pos:column="37">()</parameter_list> <block pos:line="92" pos:column="40">{
        <return pos:line="93" pos:column="9">return <expr><name pos:line="93" pos:column="16">explorer</name></expr>;</return>
    }</block></function>
}</block></class>
</unit>
