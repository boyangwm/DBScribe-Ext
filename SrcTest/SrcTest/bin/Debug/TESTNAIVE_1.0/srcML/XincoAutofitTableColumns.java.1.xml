<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\xinco\src\com\bluecubs\xinco\client\object\XincoAutofitTableColumns.java" pos:tabs="8"><comment type="block" format="javadoc" pos:line="1" pos:column="1">/**
 *Copyright 2009 blueCubs.com
 *
 *Licensed under the Apache License, Version 2.0 (the "License");
 *you may not use this file except in compliance with the License.
 *You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 *Unless required by applicable law or agreed to in writing, software
 *distributed under the License is distributed on an "AS IS" BASIS,
 *WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *See the License for the specific language governing permissions and
 *limitations under the License.
 *
 *************************************************************
 * This project supports the blueCubs vision of giving back
 * to the community in exchange for free software!
 * More information on: http://www.bluecubs.org
 *************************************************************
 *
 * Name:            AutoFitTableColumns
 *
 * Description:     Auto Fit Table Columns
 *
 * Original Author: Javier A. Ortiz
 * Date:            2006
 *
 * Modifications:
 *
 * Who?             When?             What?
 * 
 *
 *************************************************************
 * AutoFitTableColumns.java
 *
 * Created on December 19, 2006, 2:05 PM
 */</comment>

<package pos:line="40" pos:column="1">package <name><name pos:line="40" pos:column="9">com</name><op:operator pos:line="40" pos:column="12">.</op:operator><name pos:line="40" pos:column="13">bluecubs</name><op:operator pos:line="40" pos:column="21">.</op:operator><name pos:line="40" pos:column="22">xinco</name><op:operator pos:line="40" pos:column="27">.</op:operator><name pos:line="40" pos:column="28">client</name><op:operator pos:line="40" pos:column="34">.</op:operator><name pos:line="40" pos:column="35">object</name></name>;</package>

<import pos:line="42" pos:column="1">import <name><name pos:line="42" pos:column="8">java</name><op:operator pos:line="42" pos:column="12">.</op:operator><name pos:line="42" pos:column="13">awt</name><op:operator pos:line="42" pos:column="16">.</op:operator><name pos:line="42" pos:column="17">Component</name></name>;</import>
<import pos:line="43" pos:column="1">import <name><name pos:line="43" pos:column="8">java</name><op:operator pos:line="43" pos:column="12">.</op:operator><name pos:line="43" pos:column="13">awt</name><op:operator pos:line="43" pos:column="16">.</op:operator><name pos:line="43" pos:column="17">Dimension</name></name>;</import>
<import pos:line="44" pos:column="1">import <name><name pos:line="44" pos:column="8">java</name><op:operator pos:line="44" pos:column="12">.</op:operator><name pos:line="44" pos:column="13">awt</name><op:operator pos:line="44" pos:column="16">.</op:operator><name pos:line="44" pos:column="17">Font</name></name>;</import>
<import pos:line="45" pos:column="1">import <name><name pos:line="45" pos:column="8">java</name><op:operator pos:line="45" pos:column="12">.</op:operator><name pos:line="45" pos:column="13">awt</name><op:operator pos:line="45" pos:column="16">.</op:operator><name pos:line="45" pos:column="17">FontMetrics</name></name>;</import>
<import pos:line="46" pos:column="1">import <name><name pos:line="46" pos:column="8">javax</name><op:operator pos:line="46" pos:column="13">.</op:operator><name pos:line="46" pos:column="14">swing</name><op:operator pos:line="46" pos:column="19">.</op:operator><name pos:line="46" pos:column="20">JLabel</name></name>;</import>
<import pos:line="47" pos:column="1">import <name><name pos:line="47" pos:column="8">javax</name><op:operator pos:line="47" pos:column="13">.</op:operator><name pos:line="47" pos:column="14">swing</name><op:operator pos:line="47" pos:column="19">.</op:operator><name pos:line="47" pos:column="20">JTable</name></name>;</import>
<import pos:line="48" pos:column="1">import <name><name pos:line="48" pos:column="8">javax</name><op:operator pos:line="48" pos:column="13">.</op:operator><name pos:line="48" pos:column="14">swing</name><op:operator pos:line="48" pos:column="19">.</op:operator><name pos:line="48" pos:column="20">SwingUtilities</name></name>;</import>
<import pos:line="49" pos:column="1">import <name><name pos:line="49" pos:column="8">javax</name><op:operator pos:line="49" pos:column="13">.</op:operator><name pos:line="49" pos:column="14">swing</name><op:operator pos:line="49" pos:column="19">.</op:operator><name pos:line="49" pos:column="20">table</name><op:operator pos:line="49" pos:column="25">.</op:operator><name pos:line="49" pos:column="26">JTableHeader</name></name>;</import>
<import pos:line="50" pos:column="1">import <name><name pos:line="50" pos:column="8">javax</name><op:operator pos:line="50" pos:column="13">.</op:operator><name pos:line="50" pos:column="14">swing</name><op:operator pos:line="50" pos:column="19">.</op:operator><name pos:line="50" pos:column="20">table</name><op:operator pos:line="50" pos:column="25">.</op:operator><name pos:line="50" pos:column="26">TableCellRenderer</name></name>;</import>
<import pos:line="51" pos:column="1">import <name><name pos:line="51" pos:column="8">javax</name><op:operator pos:line="51" pos:column="13">.</op:operator><name pos:line="51" pos:column="14">swing</name><op:operator pos:line="51" pos:column="19">.</op:operator><name pos:line="51" pos:column="20">table</name><op:operator pos:line="51" pos:column="25">.</op:operator><name pos:line="51" pos:column="26">TableColumn</name></name>;</import>
<import pos:line="52" pos:column="1">import <name><name pos:line="52" pos:column="8">javax</name><op:operator pos:line="52" pos:column="13">.</op:operator><name pos:line="52" pos:column="14">swing</name><op:operator pos:line="52" pos:column="19">.</op:operator><name pos:line="52" pos:column="20">table</name><op:operator pos:line="52" pos:column="25">.</op:operator><name pos:line="52" pos:column="26">TableColumnModel</name></name>;</import>
<import pos:line="53" pos:column="1">import <name><name pos:line="53" pos:column="8">javax</name><op:operator pos:line="53" pos:column="13">.</op:operator><name pos:line="53" pos:column="14">swing</name><op:operator pos:line="53" pos:column="19">.</op:operator><name pos:line="53" pos:column="20">text</name><op:operator pos:line="53" pos:column="24">.</op:operator><name pos:line="53" pos:column="25">JTextComponent</name></name>;</import>

<class><specifier pos:line="55" pos:column="1">public</specifier> class <name pos:line="55" pos:column="14">XincoAutofitTableColumns</name>
<block pos:line="56" pos:column="1">{
 
    <decl_stmt><decl><type><specifier pos:line="58" pos:column="5">private</specifier> <specifier pos:line="58" pos:column="13">static</specifier> <specifier pos:line="58" pos:column="20">final</specifier> <name pos:line="58" pos:column="26">int</name></type> <name pos:line="58" pos:column="30">DEFAULT_COLUMN_PADDING</name> <init pos:line="58" pos:column="53">= <expr><lit:literal type="number" pos:line="58" pos:column="55">5</lit:literal></expr></init></decl>;</decl_stmt>
 
 
    <comment type="block" pos:line="61" pos:column="5">/*
     * @param JTable aTable, the JTable to autoresize the columns on
     * @param boolean includeColumnHeaderWidth, use the Column Header width as a minimum width
     * @returns The table width, just in case the caller wants it...
     */</comment>
 
    <function><type><specifier pos:line="67" pos:column="5">public</specifier> <specifier pos:line="67" pos:column="12">static</specifier> <name pos:line="67" pos:column="19">int</name></type> <name pos:line="67" pos:column="23">autoResizeTable</name> <parameter_list pos:line="67" pos:column="39">( <param><decl><type><name pos:line="67" pos:column="41">JTable</name></type> <name pos:line="67" pos:column="48">aTable</name></decl></param>, <param><decl><type><name pos:line="67" pos:column="56">boolean</name></type> <name pos:line="67" pos:column="64">includeColumnHeaderWidth</name></decl></param> )</parameter_list>
    <block pos:line="68" pos:column="5">{
        <return pos:line="69" pos:column="9">return <expr><op:operator pos:line="69" pos:column="16">(</op:operator> <call><name pos:line="69" pos:column="18">autoResizeTable</name> <argument_list pos:line="69" pos:column="34">( <argument><expr><name pos:line="69" pos:column="36">aTable</name></expr></argument>, <argument><expr><name pos:line="69" pos:column="44">includeColumnHeaderWidth</name></expr></argument>, <argument><expr><name pos:line="69" pos:column="70">DEFAULT_COLUMN_PADDING</name></expr></argument> )</argument_list></call> <op:operator pos:line="69" pos:column="95">)</op:operator></expr>;</return>
    }</block></function>
 
 
    <comment type="block" pos:line="73" pos:column="5">/*
     * @param JTable aTable, the JTable to autoresize the columns on
     * @param boolean includeColumnHeaderWidth, use the Column Header width as a minimum width
     * @param int columnPadding, how many extra pixels do you want on the end of each column
     * @returns The table width, just in case the caller wants it...
     */</comment>
    <function><type><specifier pos:line="79" pos:column="5">protected</specifier> <specifier pos:line="79" pos:column="15">static</specifier> <name pos:line="79" pos:column="22">int</name></type> <name pos:line="79" pos:column="26">autoResizeTable</name> <parameter_list pos:line="79" pos:column="42">( <param><decl><type><name pos:line="79" pos:column="44">JTable</name></type> <name pos:line="79" pos:column="51">aTable</name></decl></param>, <param><decl><type><name pos:line="79" pos:column="59">boolean</name></type> <name pos:line="79" pos:column="67">includeColumnHeaderWidth</name></decl></param>, <param><decl><type><name pos:line="79" pos:column="93">int</name></type> <name pos:line="79" pos:column="97">columnPadding</name></decl></param> )</parameter_list>
    <block pos:line="80" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="81" pos:column="9">int</name></type> <name pos:line="81" pos:column="13">columnCount</name> <init pos:line="81" pos:column="25">= <expr><call><name><name pos:line="81" pos:column="27">aTable</name><op:operator pos:line="81" pos:column="33">.</op:operator><name pos:line="81" pos:column="34">getColumnCount</name></name><argument_list pos:line="81" pos:column="48">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="82" pos:column="9">int</name></type> <name pos:line="82" pos:column="13">currentTableWidth</name> <init pos:line="82" pos:column="31">= <expr><call><name><name pos:line="82" pos:column="33">aTable</name><op:operator pos:line="82" pos:column="39">.</op:operator><name pos:line="82" pos:column="40">getWidth</name></name><argument_list pos:line="82" pos:column="48">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="83" pos:column="9">int</name></type> <name pos:line="83" pos:column="13">tableWidth</name> <init pos:line="83" pos:column="24">= <expr><lit:literal type="number" pos:line="83" pos:column="26">0</lit:literal></expr></init></decl>;</decl_stmt>
 
        <decl_stmt><decl><type><name pos:line="85" pos:column="9">Dimension</name></type> <name pos:line="85" pos:column="19">cellSpacing</name> <init pos:line="85" pos:column="31">= <expr><call><name><name pos:line="85" pos:column="33">aTable</name><op:operator pos:line="85" pos:column="39">.</op:operator><name pos:line="85" pos:column="40">getIntercellSpacing</name></name><argument_list pos:line="85" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
 
        <if pos:line="87" pos:column="9">if <condition pos:line="87" pos:column="12">( <expr><name pos:line="87" pos:column="14">columnCount</name> <op:operator pos:line="87" pos:column="26">&gt;</op:operator> <lit:literal type="number" pos:line="87" pos:column="28">0</lit:literal></expr> )</condition><then pos:line="87" pos:column="31">  <comment type="line" pos:line="87" pos:column="33">// must have columns !</comment>
        <block pos:line="88" pos:column="9">{
            <comment type="line" pos:line="89" pos:column="13">// STEP ONE : Work out the column widths</comment>
 
            <decl_stmt><decl><type><name pos:line="91" pos:column="13">int</name></type> <name><name pos:line="91" pos:column="17">columnWidth</name><index pos:line="91" pos:column="28">[]</index></name> <init pos:line="91" pos:column="31">= <expr><op:operator pos:line="91" pos:column="33">new</op:operator> <name><name pos:line="91" pos:column="37">int</name> <index pos:line="91" pos:column="41">[ <expr><name pos:line="91" pos:column="43">columnCount</name></expr> ]</index></name></expr></init></decl>;</decl_stmt>
 
            <for pos:line="93" pos:column="13">for ( <init><decl><type><name pos:line="93" pos:column="19">int</name></type> <name pos:line="93" pos:column="23">i</name><init pos:line="93" pos:column="24">=<expr><lit:literal type="number" pos:line="93" pos:column="25">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="93" pos:column="28">i</name><op:operator pos:line="93" pos:column="29">&lt;</op:operator><name pos:line="93" pos:column="30">columnCount</name></expr>;</condition> <incr><expr><name pos:line="93" pos:column="43">i</name><op:operator pos:line="93" pos:column="44">++</op:operator></expr></incr> )
            <block pos:line="94" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="95" pos:column="17">columnWidth</name><index pos:line="95" pos:column="28">[<expr><name pos:line="95" pos:column="29">i</name></expr>]</index></name> <op:operator pos:line="95" pos:column="32">=</op:operator> <call><name pos:line="95" pos:column="34">getMaxColumnWidth</name> <argument_list pos:line="95" pos:column="52">( <argument><expr><name pos:line="95" pos:column="54">aTable</name></expr></argument>, <argument><expr><name pos:line="95" pos:column="62">i</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="95" pos:column="65">true</lit:literal></expr></argument>, <argument><expr><name pos:line="95" pos:column="71">columnPadding</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
 
                <expr_stmt><expr><name pos:line="97" pos:column="17">tableWidth</name> <op:operator pos:line="97" pos:column="28">+=</op:operator> <name><name pos:line="97" pos:column="31">columnWidth</name><index pos:line="97" pos:column="42">[<expr><name pos:line="97" pos:column="43">i</name></expr>]</index></name></expr>;</expr_stmt>
            }</block></for>
 
            <comment type="line" pos:line="100" pos:column="13">// account for cell spacing too</comment>
            <expr_stmt><expr><name pos:line="101" pos:column="13">tableWidth</name> <op:operator pos:line="101" pos:column="24">+=</op:operator> <op:operator pos:line="101" pos:column="27">(</op:operator> <op:operator pos:line="101" pos:column="29">(</op:operator> <name pos:line="101" pos:column="31">columnCount</name> <op:operator pos:line="101" pos:column="43">-</op:operator> <lit:literal type="number" pos:line="101" pos:column="45">1</lit:literal> <op:operator pos:line="101" pos:column="47">)</op:operator> <op:operator pos:line="101" pos:column="49">*</op:operator> <name><name pos:line="101" pos:column="51">cellSpacing</name><op:operator pos:line="101" pos:column="62">.</op:operator><name pos:line="101" pos:column="63">width</name></name> <op:operator pos:line="101" pos:column="69">)</op:operator></expr>;</expr_stmt>
 
            <comment type="line" pos:line="103" pos:column="13">// STEP TWO : Dynamically resize each column</comment>
 
            <comment type="line" pos:line="105" pos:column="13">// try changing the size of the column names area</comment>
            <decl_stmt><decl><type><name pos:line="106" pos:column="13">JTableHeader</name></type> <name pos:line="106" pos:column="26">tableHeader</name> <init pos:line="106" pos:column="38">= <expr><call><name><name pos:line="106" pos:column="40">aTable</name><op:operator pos:line="106" pos:column="46">.</op:operator><name pos:line="106" pos:column="47">getTableHeader</name></name><argument_list pos:line="106" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
 
            <decl_stmt><decl><type><name pos:line="108" pos:column="13">Dimension</name></type> <name pos:line="108" pos:column="23">headerDim</name> <init pos:line="108" pos:column="33">= <expr><call><name><name pos:line="108" pos:column="35">tableHeader</name><op:operator pos:line="108" pos:column="46">.</op:operator><name pos:line="108" pos:column="47">getPreferredSize</name></name><argument_list pos:line="108" pos:column="63">()</argument_list></call></expr></init></decl>;</decl_stmt>
 
            <comment type="line" pos:line="110" pos:column="13">// headerDim.height = tableHeader.getHeight();</comment>
            <expr_stmt><expr><name><name pos:line="111" pos:column="13">headerDim</name><op:operator pos:line="111" pos:column="22">.</op:operator><name pos:line="111" pos:column="23">width</name></name> <op:operator pos:line="111" pos:column="29">=</op:operator> <name pos:line="111" pos:column="31">tableWidth</name></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="112" pos:column="13">tableHeader</name><op:operator pos:line="112" pos:column="24">.</op:operator><name pos:line="112" pos:column="25">setPreferredSize</name></name> <argument_list pos:line="112" pos:column="42">( <argument><expr><name pos:line="112" pos:column="44">headerDim</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
 
            <decl_stmt><decl><type><name pos:line="114" pos:column="13">Dimension</name></type> <name pos:line="114" pos:column="23">interCellSpacing</name> <init pos:line="114" pos:column="40">= <expr><call><name><name pos:line="114" pos:column="42">aTable</name><op:operator pos:line="114" pos:column="48">.</op:operator><name pos:line="114" pos:column="49">getIntercellSpacing</name></name><argument_list pos:line="114" pos:column="68">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="115" pos:column="13">Dimension</name></type> <name pos:line="115" pos:column="23">dim</name> <init pos:line="115" pos:column="27">= <expr><op:operator pos:line="115" pos:column="29">new</op:operator> <call><name pos:line="115" pos:column="33">Dimension</name><argument_list pos:line="115" pos:column="42">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="116" pos:column="13">int</name></type> <name pos:line="116" pos:column="17">rowHeight</name> <init pos:line="116" pos:column="27">= <expr><call><name><name pos:line="116" pos:column="29">aTable</name><op:operator pos:line="116" pos:column="35">.</op:operator><name pos:line="116" pos:column="36">getRowHeight</name></name><argument_list pos:line="116" pos:column="48">()</argument_list></call></expr></init></decl>;</decl_stmt>
 
            <if pos:line="118" pos:column="13">if <condition pos:line="118" pos:column="16">( <expr><name pos:line="118" pos:column="18">rowHeight</name> <op:operator pos:line="118" pos:column="28">==</op:operator> <lit:literal type="number" pos:line="118" pos:column="31">0</lit:literal></expr> )</condition><then pos:line="118" pos:column="34">
                 <expr_stmt><expr><name pos:line="119" pos:column="18">rowHeight</name> <op:operator pos:line="119" pos:column="28">=</op:operator> <lit:literal type="number" pos:line="119" pos:column="30">16</lit:literal></expr>;</expr_stmt></then></if>    <comment type="line" pos:line="119" pos:column="37">// default rowheight</comment>
 
            <comment type="line" pos:line="121" pos:column="13">// System.out.println ("Row Height : " + rowHeight );</comment>
 
            <expr_stmt><expr><name><name pos:line="123" pos:column="13">dim</name><op:operator pos:line="123" pos:column="16">.</op:operator><name pos:line="123" pos:column="17">height</name></name> <op:operator pos:line="123" pos:column="24">=</op:operator> <name><name pos:line="123" pos:column="26">headerDim</name><op:operator pos:line="123" pos:column="35">.</op:operator><name pos:line="123" pos:column="36">height</name></name> <op:operator pos:line="123" pos:column="43">+</op:operator> <op:operator pos:line="123" pos:column="45">(</op:operator> <op:operator pos:line="123" pos:column="47">(</op:operator> <name pos:line="123" pos:column="49">rowHeight</name> <op:operator pos:line="123" pos:column="59">+</op:operator> <name><name pos:line="123" pos:column="61">interCellSpacing</name><op:operator pos:line="123" pos:column="77">.</op:operator><name pos:line="123" pos:column="78">height</name></name> <op:operator pos:line="123" pos:column="85">)</op:operator> <op:operator pos:line="123" pos:column="87">*</op:operator> <call><name><name pos:line="123" pos:column="89">aTable</name><op:operator pos:line="123" pos:column="95">.</op:operator><name pos:line="123" pos:column="96">getRowCount</name></name><argument_list pos:line="123" pos:column="107">()</argument_list></call> <op:operator pos:line="123" pos:column="110">)</op:operator></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="124" pos:column="13">dim</name><op:operator pos:line="124" pos:column="16">.</op:operator><name pos:line="124" pos:column="17">width</name></name> <op:operator pos:line="124" pos:column="23">=</op:operator> <name pos:line="124" pos:column="25">tableWidth</name></expr>;</expr_stmt>
 
            <comment type="line" pos:line="126" pos:column="13">// System.out.println ("XincoAutofitTableColumns.autoResizeTable() - Setting Table size to ( " + dim.width + ", " + dim.height + " )" );</comment>
            <comment type="line" pos:line="127" pos:column="13">// aTable.setPreferredSize ( dim );</comment>
 
            <decl_stmt><decl><type><name pos:line="129" pos:column="13">TableColumnModel</name></type> <name pos:line="129" pos:column="30">tableColumnModel</name> <init pos:line="129" pos:column="47">= <expr><call><name><name pos:line="129" pos:column="49">aTable</name><op:operator pos:line="129" pos:column="55">.</op:operator><name pos:line="129" pos:column="56">getColumnModel</name></name><argument_list pos:line="129" pos:column="70">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="130" pos:column="13">TableColumn</name></type> <name pos:line="130" pos:column="25">tableColumn</name></decl>;</decl_stmt>
 
            <for pos:line="132" pos:column="13">for ( <init><decl><type><name pos:line="132" pos:column="19">int</name></type> <name pos:line="132" pos:column="23">i</name><init pos:line="132" pos:column="24">=<expr><lit:literal type="number" pos:line="132" pos:column="25">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="132" pos:column="28">i</name><op:operator pos:line="132" pos:column="29">&lt;</op:operator><name pos:line="132" pos:column="30">columnCount</name></expr>;</condition> <incr><expr><name pos:line="132" pos:column="43">i</name><op:operator pos:line="132" pos:column="44">++</op:operator></expr></incr> )
            <block pos:line="133" pos:column="13">{
                <expr_stmt><expr><name pos:line="134" pos:column="17">tableColumn</name> <op:operator pos:line="134" pos:column="29">=</op:operator> <call><name><name pos:line="134" pos:column="31">tableColumnModel</name><op:operator pos:line="134" pos:column="47">.</op:operator><name pos:line="134" pos:column="48">getColumn</name></name> <argument_list pos:line="134" pos:column="58">( <argument><expr><name pos:line="134" pos:column="60">i</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
 
                <expr_stmt><expr><call><name><name pos:line="136" pos:column="17">tableColumn</name><op:operator pos:line="136" pos:column="28">.</op:operator><name pos:line="136" pos:column="29">setPreferredWidth</name></name> <argument_list pos:line="136" pos:column="47">( <argument><expr><name><name pos:line="136" pos:column="49">columnWidth</name><index pos:line="136" pos:column="60">[<expr><name pos:line="136" pos:column="61">i</name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
            }</block></for>
 
            <expr_stmt><expr><call><name><name pos:line="139" pos:column="13">aTable</name><op:operator pos:line="139" pos:column="19">.</op:operator><name pos:line="139" pos:column="20">invalidate</name></name><argument_list pos:line="139" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="140" pos:column="13">aTable</name><op:operator pos:line="140" pos:column="19">.</op:operator><name pos:line="140" pos:column="20">doLayout</name></name><argument_list pos:line="140" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="141" pos:column="13">aTable</name><op:operator pos:line="141" pos:column="19">.</op:operator><name pos:line="141" pos:column="20">repaint</name></name><argument_list pos:line="141" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
 
        <return pos:line="144" pos:column="9">return <expr><op:operator pos:line="144" pos:column="16">(</op:operator> <name pos:line="144" pos:column="18">tableWidth</name> <op:operator pos:line="144" pos:column="29">)</op:operator></expr>;</return>
    }</block></function>
 
 
 
    <comment type="block" pos:line="149" pos:column="5">/*
     * @param JTable aTable, the JTable to autoresize the columns on
     * @param int columnNo, the column number, starting at zero, to calculate the maximum width on
     * @param boolean includeColumnHeaderWidth, use the Column Header width as a minimum width
     * @param int columnPadding, how many extra pixels do you want on the end of each column
     * @returns The table width, just in case the caller wants it...
     */</comment>
 
    <function><type><specifier pos:line="157" pos:column="5">private</specifier> <specifier pos:line="157" pos:column="13">static</specifier> <name pos:line="157" pos:column="20">int</name></type> <name pos:line="157" pos:column="24">getMaxColumnWidth</name> <parameter_list pos:line="157" pos:column="42">( <param><decl><type><name pos:line="157" pos:column="44">JTable</name></type> <name pos:line="157" pos:column="51">aTable</name></decl></param>, <param><decl><type><name pos:line="157" pos:column="59">int</name></type> <name pos:line="157" pos:column="63">columnNo</name></decl></param>,
                                           <param><decl><type><name pos:line="158" pos:column="44">boolean</name></type> <name pos:line="158" pos:column="52">includeColumnHeaderWidth</name></decl></param>,
                                           <param><decl><type><name pos:line="159" pos:column="44">int</name></type> <name pos:line="159" pos:column="48">columnPadding</name></decl></param> )</parameter_list>
    <block pos:line="160" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="161" pos:column="9">TableColumn</name></type> <name pos:line="161" pos:column="21">column</name> <init pos:line="161" pos:column="28">= <expr><call><name><name pos:line="161" pos:column="30">aTable</name><op:operator pos:line="161" pos:column="36">.</op:operator><name pos:line="161" pos:column="37">getColumnModel</name></name><argument_list pos:line="161" pos:column="51">()</argument_list></call><op:operator pos:line="161" pos:column="53">.</op:operator><call><name pos:line="161" pos:column="54">getColumn</name> <argument_list pos:line="161" pos:column="64">( <argument><expr><name pos:line="161" pos:column="66">columnNo</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="162" pos:column="9">Component</name></type> <name pos:line="162" pos:column="19">comp</name> <init pos:line="162" pos:column="24">= <expr><lit:literal type="null" pos:line="162" pos:column="26">null</lit:literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="163" pos:column="9">int</name></type> <name pos:line="163" pos:column="13">maxWidth</name> <init pos:line="163" pos:column="22">= <expr><lit:literal type="number" pos:line="163" pos:column="24">0</lit:literal></expr></init></decl>;</decl_stmt>
 
        <if pos:line="165" pos:column="9">if <condition pos:line="165" pos:column="12">( <expr><name pos:line="165" pos:column="14">includeColumnHeaderWidth</name></expr> )</condition><then pos:line="165" pos:column="40">
        <block pos:line="166" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="167" pos:column="13">TableCellRenderer</name></type> <name pos:line="167" pos:column="31">headerRenderer</name> <init pos:line="167" pos:column="46">= <expr><call><name><name pos:line="167" pos:column="48">column</name><op:operator pos:line="167" pos:column="54">.</op:operator><name pos:line="167" pos:column="55">getHeaderRenderer</name></name><argument_list pos:line="167" pos:column="72">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="168" pos:column="13">if <condition pos:line="168" pos:column="16">( <expr><name pos:line="168" pos:column="18">headerRenderer</name> <op:operator pos:line="168" pos:column="33">!=</op:operator> <lit:literal type="null" pos:line="168" pos:column="36">null</lit:literal></expr> )</condition><then pos:line="168" pos:column="42">
            <block pos:line="169" pos:column="13">{
                <expr_stmt><expr><name pos:line="170" pos:column="17">comp</name> <op:operator pos:line="170" pos:column="22">=</op:operator> <call><name><name pos:line="170" pos:column="24">headerRenderer</name><op:operator pos:line="170" pos:column="38">.</op:operator><name pos:line="170" pos:column="39">getTableCellRendererComponent</name></name> <argument_list pos:line="170" pos:column="69">( <argument><expr><name pos:line="170" pos:column="71">aTable</name></expr></argument>, <argument><expr><call><name><name pos:line="170" pos:column="79">column</name><op:operator pos:line="170" pos:column="85">.</op:operator><name pos:line="170" pos:column="86">getHeaderValue</name></name><argument_list pos:line="170" pos:column="100">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="170" pos:column="104">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="170" pos:column="111">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="170" pos:column="118">0</lit:literal></expr></argument>, <argument><expr><name pos:line="170" pos:column="121">columnNo</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
 
                <if pos:line="172" pos:column="17">if <condition pos:line="172" pos:column="20">( <expr><name pos:line="172" pos:column="22">comp</name> <op:operator pos:line="172" pos:column="27">instanceof</op:operator> <name pos:line="172" pos:column="38">JTextComponent</name></expr> )</condition><then pos:line="172" pos:column="54">
                <block pos:line="173" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="174" pos:column="21">JTextComponent</name></type> <name pos:line="174" pos:column="36">jtextComp</name> <init pos:line="174" pos:column="46">= <expr><op:operator pos:line="174" pos:column="48">(</op:operator><name pos:line="174" pos:column="49">JTextComponent</name><op:operator pos:line="174" pos:column="63">)</op:operator><name pos:line="174" pos:column="64">comp</name></expr></init></decl>;</decl_stmt>
 
                    <decl_stmt><decl><type><name pos:line="176" pos:column="21">String</name></type> <name pos:line="176" pos:column="28">text</name> <init pos:line="176" pos:column="33">= <expr><call><name><name pos:line="176" pos:column="35">jtextComp</name><op:operator pos:line="176" pos:column="44">.</op:operator><name pos:line="176" pos:column="45">getText</name></name><argument_list pos:line="176" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="177" pos:column="21">Font</name></type> <name pos:line="177" pos:column="26">font</name> <init pos:line="177" pos:column="31">= <expr><call><name><name pos:line="177" pos:column="33">jtextComp</name><op:operator pos:line="177" pos:column="42">.</op:operator><name pos:line="177" pos:column="43">getFont</name></name><argument_list pos:line="177" pos:column="50">()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="178" pos:column="21">FontMetrics</name></type> <name pos:line="178" pos:column="33">fontMetrics</name> <init pos:line="178" pos:column="45">= <expr><call><name><name pos:line="178" pos:column="47">jtextComp</name><op:operator pos:line="178" pos:column="56">.</op:operator><name pos:line="178" pos:column="57">getFontMetrics</name></name> <argument_list pos:line="178" pos:column="72">( <argument><expr><name pos:line="178" pos:column="74">font</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
 
                    <expr_stmt><expr><name pos:line="180" pos:column="21">maxWidth</name> <op:operator pos:line="180" pos:column="30">=</op:operator> <call><name><name pos:line="180" pos:column="32">SwingUtilities</name><op:operator pos:line="180" pos:column="46">.</op:operator><name pos:line="180" pos:column="47">computeStringWidth</name></name> <argument_list pos:line="180" pos:column="66">( <argument><expr><name pos:line="180" pos:column="68">fontMetrics</name></expr></argument>, <argument><expr><name pos:line="180" pos:column="81">text</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
                }</block></then>
                <else pos:line="182" pos:column="17">else
                <block pos:line="183" pos:column="17">{
                    <expr_stmt><expr><name pos:line="184" pos:column="21">maxWidth</name> <op:operator pos:line="184" pos:column="30">=</op:operator> <call><name><name pos:line="184" pos:column="32">comp</name><op:operator pos:line="184" pos:column="36">.</op:operator><name pos:line="184" pos:column="37">getPreferredSize</name></name><argument_list pos:line="184" pos:column="53">()</argument_list></call><op:operator pos:line="184" pos:column="55">.</op:operator><name pos:line="184" pos:column="56">width</name></expr>;</expr_stmt>
                }</block></else></if>
            }</block></then>
            <else pos:line="187" pos:column="13">else
            <block pos:line="188" pos:column="13">{
                <try pos:line="189" pos:column="17">try
                <block pos:line="190" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="191" pos:column="21">String</name></type> <name pos:line="191" pos:column="28">headerText</name> <init pos:line="191" pos:column="39">= <expr><op:operator pos:line="191" pos:column="41">(</op:operator><name pos:line="191" pos:column="42">String</name><op:operator pos:line="191" pos:column="48">)</op:operator><call><name><name pos:line="191" pos:column="49">column</name><op:operator pos:line="191" pos:column="55">.</op:operator><name pos:line="191" pos:column="56">getHeaderValue</name></name><argument_list pos:line="191" pos:column="70">()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="192" pos:column="21">JLabel</name></type> <name pos:line="192" pos:column="28">defaultLabel</name> <init pos:line="192" pos:column="41">= <expr><op:operator pos:line="192" pos:column="43">new</op:operator> <call><name pos:line="192" pos:column="47">JLabel</name> <argument_list pos:line="192" pos:column="54">( <argument><expr><name pos:line="192" pos:column="56">headerText</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
 
                    <decl_stmt><decl><type><name pos:line="194" pos:column="21">Font</name></type> <name pos:line="194" pos:column="26">font</name> <init pos:line="194" pos:column="31">= <expr><call><name><name pos:line="194" pos:column="33">defaultLabel</name><op:operator pos:line="194" pos:column="45">.</op:operator><name pos:line="194" pos:column="46">getFont</name></name><argument_list pos:line="194" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="195" pos:column="21">FontMetrics</name></type> <name pos:line="195" pos:column="33">fontMetrics</name> <init pos:line="195" pos:column="45">= <expr><call><name><name pos:line="195" pos:column="47">defaultLabel</name><op:operator pos:line="195" pos:column="59">.</op:operator><name pos:line="195" pos:column="60">getFontMetrics</name></name> <argument_list pos:line="195" pos:column="75">( <argument><expr><name pos:line="195" pos:column="77">font</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
 
                    <expr_stmt><expr><name pos:line="197" pos:column="21">maxWidth</name> <op:operator pos:line="197" pos:column="30">=</op:operator> <call><name><name pos:line="197" pos:column="32">SwingUtilities</name><op:operator pos:line="197" pos:column="46">.</op:operator><name pos:line="197" pos:column="47">computeStringWidth</name></name> <argument_list pos:line="197" pos:column="66">( <argument><expr><name pos:line="197" pos:column="68">fontMetrics</name></expr></argument>, <argument><expr><name pos:line="197" pos:column="81">headerText</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
                }</block>
                <catch pos:line="199" pos:column="17">catch <parameter_list pos:line="199" pos:column="23">( <param><decl><type><name pos:line="199" pos:column="25">ClassCastException</name></type> <name pos:line="199" pos:column="44">ce</name></decl></param> )</parameter_list>
                <block pos:line="200" pos:column="17">{
                    <comment type="line" pos:line="201" pos:column="21">// Can't work out the header column width..</comment>
                    <expr_stmt><expr><name pos:line="202" pos:column="21">maxWidth</name> <op:operator pos:line="202" pos:column="30">=</op:operator> <lit:literal type="number" pos:line="202" pos:column="32">0</lit:literal></expr>;</expr_stmt>
                }</block></catch></try>
            }</block></else></if>
        }</block></then></if>
 
        <decl_stmt><decl><type><name pos:line="207" pos:column="9">TableCellRenderer</name></type> <name pos:line="207" pos:column="27">tableCellRenderer</name></decl>;</decl_stmt>
        <comment type="line" pos:line="208" pos:column="9">// Component comp;</comment>
        <decl_stmt><decl><type><name pos:line="209" pos:column="9">int</name></type> <name pos:line="209" pos:column="13">cellWidth</name>   <init pos:line="209" pos:column="25">= <expr><lit:literal type="number" pos:line="209" pos:column="27">0</lit:literal></expr></init></decl>;</decl_stmt>
 
        <for pos:line="211" pos:column="9">for (<init><decl><type><name pos:line="211" pos:column="14">int</name></type> <name pos:line="211" pos:column="18">i</name> <init pos:line="211" pos:column="20">= <expr><lit:literal type="number" pos:line="211" pos:column="22">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="211" pos:column="25">i</name> <op:operator pos:line="211" pos:column="27">&lt;</op:operator> <call><name><name pos:line="211" pos:column="29">aTable</name><op:operator pos:line="211" pos:column="35">.</op:operator><name pos:line="211" pos:column="36">getRowCount</name></name><argument_list pos:line="211" pos:column="47">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="211" pos:column="51">i</name><op:operator pos:line="211" pos:column="52">++</op:operator></expr></incr>)
        <block pos:line="212" pos:column="9">{
            <expr_stmt><expr><name pos:line="213" pos:column="13">tableCellRenderer</name> <op:operator pos:line="213" pos:column="31">=</op:operator> <call><name><name pos:line="213" pos:column="33">aTable</name><op:operator pos:line="213" pos:column="39">.</op:operator><name pos:line="213" pos:column="40">getCellRenderer</name></name> <argument_list pos:line="213" pos:column="56">( <argument><expr><name pos:line="213" pos:column="58">i</name></expr></argument>, <argument><expr><name pos:line="213" pos:column="61">columnNo</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
 
            <expr_stmt><expr><name pos:line="215" pos:column="13">comp</name> <op:operator pos:line="215" pos:column="18">=</op:operator> <call><name><name pos:line="215" pos:column="20">tableCellRenderer</name><op:operator pos:line="215" pos:column="37">.</op:operator><name pos:line="215" pos:column="38">getTableCellRendererComponent</name></name> <argument_list pos:line="215" pos:column="68">( <argument><expr><name pos:line="215" pos:column="70">aTable</name></expr></argument>, <argument><expr><call><name><name pos:line="215" pos:column="78">aTable</name><op:operator pos:line="215" pos:column="84">.</op:operator><name pos:line="215" pos:column="85">getValueAt</name></name> <argument_list pos:line="215" pos:column="96">( <argument><expr><name pos:line="215" pos:column="98">i</name></expr></argument>, <argument><expr><name pos:line="215" pos:column="101">columnNo</name></expr></argument> )</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="215" pos:column="113">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="215" pos:column="120">false</lit:literal></expr></argument>, <argument><expr><name pos:line="215" pos:column="127">i</name></expr></argument>, <argument><expr><name pos:line="215" pos:column="130">columnNo</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
 
            <if pos:line="217" pos:column="13">if <condition pos:line="217" pos:column="16">( <expr><name pos:line="217" pos:column="18">comp</name> <op:operator pos:line="217" pos:column="23">instanceof</op:operator> <name pos:line="217" pos:column="34">JTextComponent</name></expr> )</condition><then pos:line="217" pos:column="50">
            <block pos:line="218" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="219" pos:column="17">JTextComponent</name></type> <name pos:line="219" pos:column="32">jtextComp</name> <init pos:line="219" pos:column="42">= <expr><op:operator pos:line="219" pos:column="44">(</op:operator><name pos:line="219" pos:column="45">JTextComponent</name><op:operator pos:line="219" pos:column="59">)</op:operator><name pos:line="219" pos:column="60">comp</name></expr></init></decl>;</decl_stmt>
 
                <decl_stmt><decl><type><name pos:line="221" pos:column="17">String</name></type> <name pos:line="221" pos:column="24">text</name> <init pos:line="221" pos:column="29">= <expr><call><name><name pos:line="221" pos:column="31">jtextComp</name><op:operator pos:line="221" pos:column="40">.</op:operator><name pos:line="221" pos:column="41">getText</name></name><argument_list pos:line="221" pos:column="48">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="222" pos:column="17">Font</name></type> <name pos:line="222" pos:column="22">font</name> <init pos:line="222" pos:column="27">= <expr><call><name><name pos:line="222" pos:column="29">jtextComp</name><op:operator pos:line="222" pos:column="38">.</op:operator><name pos:line="222" pos:column="39">getFont</name></name><argument_list pos:line="222" pos:column="46">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="223" pos:column="17">FontMetrics</name></type> <name pos:line="223" pos:column="29">fontMetrics</name> <init pos:line="223" pos:column="41">= <expr><call><name><name pos:line="223" pos:column="43">jtextComp</name><op:operator pos:line="223" pos:column="52">.</op:operator><name pos:line="223" pos:column="53">getFontMetrics</name></name> <argument_list pos:line="223" pos:column="68">( <argument><expr><name pos:line="223" pos:column="70">font</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
 
                <decl_stmt><decl><type><name pos:line="225" pos:column="17">int</name></type> <name pos:line="225" pos:column="21">textWidth</name> <init pos:line="225" pos:column="31">= <expr><call><name><name pos:line="225" pos:column="33">SwingUtilities</name><op:operator pos:line="225" pos:column="47">.</op:operator><name pos:line="225" pos:column="48">computeStringWidth</name></name> <argument_list pos:line="225" pos:column="67">( <argument><expr><name pos:line="225" pos:column="69">fontMetrics</name></expr></argument>, <argument><expr><name pos:line="225" pos:column="82">text</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
 
                <expr_stmt><expr><name pos:line="227" pos:column="17">maxWidth</name> <op:operator pos:line="227" pos:column="26">=</op:operator> <call><name><name pos:line="227" pos:column="28">Math</name><op:operator pos:line="227" pos:column="32">.</op:operator><name pos:line="227" pos:column="33">max</name></name> <argument_list pos:line="227" pos:column="37">( <argument><expr><name pos:line="227" pos:column="39">maxWidth</name></expr></argument>, <argument><expr><name pos:line="227" pos:column="49">textWidth</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="229" pos:column="13">else
            <block pos:line="230" pos:column="13">{
                <expr_stmt><expr><name pos:line="231" pos:column="17">cellWidth</name> <op:operator pos:line="231" pos:column="27">=</op:operator> <call><name><name pos:line="231" pos:column="29">comp</name><op:operator pos:line="231" pos:column="33">.</op:operator><name pos:line="231" pos:column="34">getPreferredSize</name></name><argument_list pos:line="231" pos:column="50">()</argument_list></call><op:operator pos:line="231" pos:column="52">.</op:operator><name pos:line="231" pos:column="53">width</name></expr>;</expr_stmt>
 
                <comment type="line" pos:line="233" pos:column="17">// maxWidth = Math.max ( headerWidth, cellWidth );</comment>
                <expr_stmt><expr><name pos:line="234" pos:column="17">maxWidth</name> <op:operator pos:line="234" pos:column="26">=</op:operator> <call><name><name pos:line="234" pos:column="28">Math</name><op:operator pos:line="234" pos:column="32">.</op:operator><name pos:line="234" pos:column="33">max</name></name> <argument_list pos:line="234" pos:column="37">( <argument><expr><name pos:line="234" pos:column="39">maxWidth</name></expr></argument>, <argument><expr><name pos:line="234" pos:column="49">cellWidth</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
        }</block></for>
 
        <return pos:line="238" pos:column="9">return <expr><op:operator pos:line="238" pos:column="16">(</op:operator> <name pos:line="238" pos:column="18">maxWidth</name> <op:operator pos:line="238" pos:column="27">+</op:operator> <name pos:line="238" pos:column="29">columnPadding</name> <op:operator pos:line="238" pos:column="43">)</op:operator></expr>;</return>
    }</block></function>
}</block></class></unit>
