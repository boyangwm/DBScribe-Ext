<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\GitHub\testProgram\UMAS\src\com\umas\code\TAListScanner.java" pos:tabs="8"><package pos:line="1" pos:column="1">package <name><name pos:line="1" pos:column="9">com</name><op:operator pos:line="1" pos:column="12">.</op:operator><name pos:line="1" pos:column="13">umas</name><op:operator pos:line="1" pos:column="17">.</op:operator><name pos:line="1" pos:column="18">code</name></name>;</package>

<import pos:line="3" pos:column="1">import <name><name pos:line="3" pos:column="8">java</name><op:operator pos:line="3" pos:column="12">.</op:operator><name pos:line="3" pos:column="13">util</name><op:operator pos:line="3" pos:column="17">.</op:operator><name pos:line="3" pos:column="18">ArrayList</name></name>;</import>

<comment type="block" format="javadoc" pos:line="5" pos:column="1">/**
 * @author Akshay
 * 
 */</comment>

<comment type="block" format="javadoc" pos:line="10" pos:column="1">/*************** TALISTSCANNER.JAVA CLASS WAS WRITTEN BY AKSHAY THIRKATEH ********************************/</comment>

<class><specifier pos:line="12" pos:column="1">public</specifier> class <name pos:line="12" pos:column="14">TAListScanner</name>  <super><implements pos:line="12" pos:column="29">implements <name pos:line="12" pos:column="40">Runnable</name></implements></super><block pos:line="12" pos:column="48">{

	<function><type><annotation pos:line="14" pos:column="9">@<name pos:line="14" pos:column="10">Override</name></annotation>
	<specifier pos:line="15" pos:column="9">public</specifier> <name pos:line="15" pos:column="16">void</name></type> <name pos:line="15" pos:column="21">run</name><parameter_list pos:line="15" pos:column="24">()</parameter_list> <block pos:line="15" pos:column="27">{
		<decl_stmt><decl><type><name><name pos:line="16" pos:column="17">ArrayList</name><argument_list pos:line="16" pos:column="26">&lt;<argument><name pos:line="16" pos:column="27">TA</name></argument>&gt;</argument_list></name></type> <name pos:line="16" pos:column="31">getAllTAs</name><init pos:line="16" pos:column="40">= <expr><call><name><name pos:line="16" pos:column="42">TA</name><op:operator pos:line="16" pos:column="44">.</op:operator><name pos:line="16" pos:column="45">getAllTAs</name></name><argument_list pos:line="16" pos:column="54">()</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<for pos:line="18" pos:column="17">for(<init><decl><type><name pos:line="18" pos:column="21">TA</name></type> <name pos:line="18" pos:column="24">ta</name><range pos:line="18" pos:column="26">: <expr><name pos:line="18" pos:column="28">getAllTAs</name></expr></range></decl></init>)<block pos:line="18" pos:column="38">{
			
			<decl_stmt><decl><type><name><name pos:line="20" pos:column="25">ArrayList</name><argument_list pos:line="20" pos:column="34">&lt;<argument><name pos:line="20" pos:column="35">CourseOffered</name></argument>&gt;</argument_list></name></type> <name pos:line="20" pos:column="50">getTACourses</name><init pos:line="20" pos:column="62">=<expr><call><name><name pos:line="20" pos:column="63">CourseOffered</name><op:operator pos:line="20" pos:column="76">.</op:operator><name pos:line="20" pos:column="77">getAllCurrentCoursesTAedBy</name></name><argument_list pos:line="20" pos:column="103">(<argument><expr><name pos:line="20" pos:column="104">ta</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="21" pos:column="25">if<condition pos:line="21" pos:column="27">(<expr><call><name><name pos:line="21" pos:column="28">getTACourses</name><op:operator pos:line="21" pos:column="40">.</op:operator><name pos:line="21" pos:column="41">size</name></name><argument_list pos:line="21" pos:column="45">()</argument_list></call><op:operator pos:line="21" pos:column="47">&lt;=</op:operator><lit:literal type="number" pos:line="21" pos:column="49">0</lit:literal></expr>)</condition><then><block pos:line="21" pos:column="51">{
				<expr_stmt><expr><call><name><name pos:line="22" pos:column="33">System</name><op:operator pos:line="22" pos:column="39">.</op:operator><name pos:line="22" pos:column="40">out</name><op:operator pos:line="22" pos:column="43">.</op:operator><name pos:line="22" pos:column="44">println</name></name><argument_list pos:line="22" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="22" pos:column="52">"Dwongrading TA to student with UIN:"</lit:literal><op:operator pos:line="22" pos:column="89">+</op:operator><call><name><name pos:line="22" pos:column="90">ta</name><op:operator pos:line="22" pos:column="92">.</op:operator><name pos:line="22" pos:column="93">getUIN</name></name><argument_list pos:line="22" pos:column="99">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="23" pos:column="33">DBAnnotation</name><op:operator pos:line="23" pos:column="45">.</op:operator><name pos:line="23" pos:column="46">annoate</name></name><argument_list pos:line="23" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="23" pos:column="54">"uin"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="23" pos:column="61">"teachingassistant"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="23" pos:column="82">"TaUIN"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="23" pos:column="91">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="24" pos:column="33">int</name></type> <name pos:line="24" pos:column="37">uin</name> <init pos:line="24" pos:column="41">= <expr><call><name><name pos:line="24" pos:column="43">ta</name><op:operator pos:line="24" pos:column="45">.</op:operator><name pos:line="24" pos:column="46">getUIN</name></name><argument_list pos:line="24" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="25" pos:column="33">TA</name><op:operator pos:line="25" pos:column="35">.</op:operator><name pos:line="25" pos:column="36">updateTAtoStudent</name></name><argument_list pos:line="25" pos:column="53">(<argument><expr><name pos:line="25" pos:column="54">uin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></for>
		<comment type="line" pos:line="28" pos:column="17">// TODO Auto-generated method stub</comment>
		
	}</block></function>

}</block></class>
</unit>
